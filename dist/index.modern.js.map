{"version":3,"file":"index.modern.js","sources":["../src/components/DragMove.tsx","../src/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\n// @ts-expect-error\nexport default function DragMove(props) {\n  const {\n    onPointerDown,\n    onPointerUp,\n    onPointerMove,\n    onDragMove,\n    children,\n    style,\n    className\n  } = props;\n\n  const [isDragging, setIsDragging] = useState(false);\n\n  // @ts-expect-error\n  const handlePointerDown = (e) => {\n    setIsDragging(true);\n\n    onPointerDown(e);\n  };\n\n  // @ts-expect-error\n  const handlePointerUp = (e) => {\n    setIsDragging(false);\n\n    onPointerUp(e);\n  };\n\n  // @ts-expect-error\n  const handlePointerMove = (e) => {\n    if (isDragging) onDragMove(e);\n\n    onPointerMove(e);\n  };\n\n  return (\n    <div\n      onPointerDown={handlePointerDown}\n      onPointerUp={handlePointerUp}\n      onPointerMove={handlePointerMove}\n      style={style}\n      className={className}\n    >\n      {children}\n    </div>\n  );\n}\n\nDragMove.defaultProps = {\n  onPointerDown: () => {},\n  onPointerUp: () => {},\n  onPointerMove: () => {}\n};\n","import { Box, Container, makeStyles, Typography } from '@material-ui/core';\nimport { SpeedDial, SpeedDialAction } from '@material-ui/lab';\nimport * as React from 'react';\nimport DragMove from './components/DragMove';\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\n\ninterface Props {\n  \n}\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    minWidth: '100vw',\n    minHeight: '100vh',\n    background: 'rgba(50,0,0,0.25)',\n    pointerEvents: 'none'\n  },\n  speedDial: {\n    position: 'fixed',\n    bottom: 20,\n    right: 20,\n    zIndex: 1000000000\n  },\n  byoaButton: {\n\n  }\n});\n\n// @ts-expect-error\nexport const ByoaSDK = (props : Props) => {\n  const classes = useStyles();\n  const [translateDial, setTranslateDial] = React.useState({\n    x: 0,\n    y: 0\n  });\n  const [dialDirection, setDialDirection] = React.useState<\"left\" | \"right\" | \"up\" | \"down\" | undefined>(\"up\");\n  const [openDial, setOpenDial] = React.useState(false);\n  \n  return (\n    <Box className={classes.root}>\n      <Container className={classes.speedDial}>\n        <DragMove onDragMove={(e : any) => {\n          setTranslateDial({\n            x: translateDial.x + e.movementX,\n            y: translateDial.y + e.movementY\n          });\n          if (e.clientY < 200) {\n            if (dialDirection !== \"down\") setDialDirection(\"down\");\n          }\n          if (e.clientY > 200) {\n            if (dialDirection !== \"up\") setDialDirection(\"up\");\n          }\n        }}>\n          <SpeedDial\n            style={{\n              transform: `translateX(${translateDial.x}px) translateY(${translateDial.y}px)`\n            }}\n            ariaLabel=\"BYOA Speed Dial\"\n            hidden={false}\n            icon={<Typography className={classes.byoaButton}>RUN</Typography>}\n            open={openDial}\n            onOpen={() => {\n              setOpenDial(true);\n            }}\n            onClose={() => {\n              setOpenDial(false);\n            }}\n            onClick={() => {\n              \n            }}\n            direction={dialDirection}\n          >\n            <SpeedDialAction\n              key={'sda-connect-wallet'}\n              icon={<AccountBalanceWalletIcon />}\n              tooltipTitle={'Connect Wallet'}\n              onClick={() => {\n                setOpenDial(false);\n              }}\n            />\n\n          </SpeedDial>\n        </DragMove>\n          \n      </Container>\n    </Box>\n  )\n}\n"],"names":["DragMove","props","onPointerDown","onPointerUp","onPointerMove","onDragMove","children","style","className","useState","isDragging","setIsDragging","handlePointerDown","e","handlePointerUp","handlePointerMove","React","defaultProps","useStyles","makeStyles","root","position","top","left","minWidth","minHeight","background","pointerEvents","speedDial","bottom","right","zIndex","byoaButton","ByoaSDK","classes","x","y","translateDial","setTranslateDial","dialDirection","setDialDirection","openDial","setOpenDial","Box","Container","movementX","movementY","clientY","SpeedDial","transform","ariaLabel","hidden","icon","Typography","open","onOpen","onClose","onClick","direction","SpeedDialAction","key","AccountBalanceWalletIcon","tooltipTitle"],"mappings":"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"}