{"ast":null,"code":"import { makeStyles, Box, Container, Typography } from '@material-ui/core';\nimport { SpeedDial, SpeedDialAction } from '@material-ui/lab';\nimport React__default, { useState, createElement } from 'react';\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\nimport WalletConnectProvider from '@walletconnect/web3-provider';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport Web3 from 'web3';\nimport Web3Modal from 'web3modal';\n\nfunction DragMove(props) {\n  const {\n    onPointerDown,\n    onPointerUp,\n    onPointerMove,\n    onDragMove,\n    children,\n    style,\n    className\n  } = props;\n  const [isDragging, setIsDragging] = useState(false);\n\n  const handlePointerDown = e => {\n    setIsDragging(true);\n    onPointerDown(e);\n  };\n\n  const handlePointerUp = e => {\n    setIsDragging(false);\n    onPointerUp(e);\n  };\n\n  const handlePointerMove = e => {\n    if (isDragging) onDragMove(e);\n    onPointerMove(e);\n  };\n\n  return React__default.createElement(\"div\", {\n    onPointerDown: handlePointerDown,\n    onPointerUp: handlePointerUp,\n    onPointerMove: handlePointerMove,\n    style: style,\n    className: className\n  }, children);\n}\n\nDragMove.defaultProps = {\n  onPointerDown: () => {},\n  onPointerUp: () => {},\n  onPointerMove: () => {}\n};\nvar _format = \"hh-sol-artifact-1\";\nvar contractName = \"Byoa\";\nvar sourceName = \"contracts/byoa.sol\";\nvar abi = [{\n  inputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"constructor\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"address\",\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    internalType: \"address\",\n    name: \"approved\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    internalType: \"uint256\",\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  name: \"Approval\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"address\",\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    internalType: \"address\",\n    name: \"operator\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    internalType: \"bool\",\n    name: \"approved\",\n    type: \"bool\"\n  }],\n  name: \"ApprovalForAll\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"bytes32\",\n    name: \"role\",\n    type: \"bytes32\"\n  }, {\n    indexed: true,\n    internalType: \"bytes32\",\n    name: \"previousAdminRole\",\n    type: \"bytes32\"\n  }, {\n    indexed: true,\n    internalType: \"bytes32\",\n    name: \"newAdminRole\",\n    type: \"bytes32\"\n  }],\n  name: \"RoleAdminChanged\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"bytes32\",\n    name: \"role\",\n    type: \"bytes32\"\n  }, {\n    indexed: true,\n    internalType: \"address\",\n    name: \"account\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    internalType: \"address\",\n    name: \"sender\",\n    type: \"address\"\n  }],\n  name: \"RoleGranted\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"bytes32\",\n    name: \"role\",\n    type: \"bytes32\"\n  }, {\n    indexed: true,\n    internalType: \"address\",\n    name: \"account\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    internalType: \"address\",\n    name: \"sender\",\n    type: \"address\"\n  }],\n  name: \"RoleRevoked\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"address\",\n    name: \"from\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    internalType: \"address\",\n    name: \"to\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    internalType: \"uint256\",\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  name: \"Transfer\",\n  type: \"event\"\n}, {\n  inputs: [],\n  name: \"DEFAULT_ADMIN_ROLE\",\n  outputs: [{\n    internalType: \"bytes32\",\n    name: \"\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"DEVELOPER_ROLE\",\n  outputs: [{\n    internalType: \"bytes32\",\n    name: \"\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"to\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  name: \"approve\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"owner\",\n    type: \"address\"\n  }],\n  name: \"balanceOf\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"string\",\n    name: \"name\",\n    type: \"string\"\n  }, {\n    internalType: \"string\",\n    name: \"description\",\n    type: \"string\"\n  }, {\n    internalType: \"uint256\",\n    name: \"price\",\n    type: \"uint256\"\n  }, {\n    internalType: \"string\",\n    name: \"_tokenURI\",\n    type: \"string\"\n  }],\n  name: \"createApp\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"appId\",\n    type: \"uint256\"\n  }],\n  name: \"getAppDetailsById\",\n  outputs: [{\n    internalType: \"string\",\n    name: \"name\",\n    type: \"string\"\n  }, {\n    internalType: \"string\",\n    name: \"description\",\n    type: \"string\"\n  }, {\n    internalType: \"string\",\n    name: \"_tokenURI\",\n    type: \"string\"\n  }, {\n    internalType: \"address\",\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"price\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"_tokenId\",\n    type: \"uint256\"\n  }],\n  name: \"getAppIdByTokenId\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"getAppIds\",\n  outputs: [{\n    internalType: \"uint256[]\",\n    name: \"\",\n    type: \"uint256[]\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  name: \"getApproved\",\n  outputs: [{\n    internalType: \"address\",\n    name: \"\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bytes32\",\n    name: \"role\",\n    type: \"bytes32\"\n  }],\n  name: \"getRoleAdmin\",\n  outputs: [{\n    internalType: \"bytes32\",\n    name: \"\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bytes32\",\n    name: \"role\",\n    type: \"bytes32\"\n  }, {\n    internalType: \"address\",\n    name: \"account\",\n    type: \"address\"\n  }],\n  name: \"grantRole\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bytes32\",\n    name: \"role\",\n    type: \"bytes32\"\n  }, {\n    internalType: \"address\",\n    name: \"account\",\n    type: \"address\"\n  }],\n  name: \"hasRole\",\n  outputs: [{\n    internalType: \"bool\",\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    internalType: \"address\",\n    name: \"operator\",\n    type: \"address\"\n  }],\n  name: \"isApprovedForAll\",\n  outputs: [{\n    internalType: \"bool\",\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"_appId\",\n    type: \"uint256\"\n  }],\n  name: \"mint\",\n  outputs: [],\n  stateMutability: \"payable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"name\",\n  outputs: [{\n    internalType: \"string\",\n    name: \"\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  name: \"ownerOf\",\n  outputs: [{\n    internalType: \"address\",\n    name: \"\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bytes32\",\n    name: \"role\",\n    type: \"bytes32\"\n  }, {\n    internalType: \"address\",\n    name: \"account\",\n    type: \"address\"\n  }],\n  name: \"renounceRole\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bytes32\",\n    name: \"role\",\n    type: \"bytes32\"\n  }, {\n    internalType: \"address\",\n    name: \"account\",\n    type: \"address\"\n  }],\n  name: \"revokeRole\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"from\",\n    type: \"address\"\n  }, {\n    internalType: \"address\",\n    name: \"to\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  name: \"safeTransferFrom\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"from\",\n    type: \"address\"\n  }, {\n    internalType: \"address\",\n    name: \"to\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"tokenId\",\n    type: \"uint256\"\n  }, {\n    internalType: \"bytes\",\n    name: \"_data\",\n    type: \"bytes\"\n  }],\n  name: \"safeTransferFrom\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"operator\",\n    type: \"address\"\n  }, {\n    internalType: \"bool\",\n    name: \"approved\",\n    type: \"bool\"\n  }],\n  name: \"setApprovalForAll\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bytes4\",\n    name: \"interfaceId\",\n    type: \"bytes4\"\n  }],\n  name: \"supportsInterface\",\n  outputs: [{\n    internalType: \"bool\",\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"symbol\",\n  outputs: [{\n    internalType: \"string\",\n    name: \"\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"index\",\n    type: \"uint256\"\n  }],\n  name: \"tokenByIndex\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"index\",\n    type: \"uint256\"\n  }],\n  name: \"tokenOfOwnerByIndex\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  name: \"tokenURI\",\n  outputs: [{\n    internalType: \"string\",\n    name: \"\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"totalSupply\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"from\",\n    type: \"address\"\n  }, {\n    internalType: \"address\",\n    name: \"to\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  name: \"transferFrom\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"appId\",\n    type: \"uint256\"\n  }, {\n    internalType: \"string\",\n    name: \"name\",\n    type: \"string\"\n  }, {\n    internalType: \"string\",\n    name: \"description\",\n    type: \"string\"\n  }, {\n    internalType: \"uint256\",\n    name: \"price\",\n    type: \"uint256\"\n  }, {\n    internalType: \"string\",\n    name: \"_tokenURI\",\n    type: \"string\"\n  }],\n  name: \"updateApp\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"_owner\",\n    type: \"address\"\n  }],\n  name: \"walletOfOwner\",\n  outputs: [{\n    internalType: \"uint256[]\",\n    name: \"\",\n    type: \"uint256[]\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"withdrawAll\",\n  outputs: [],\n  stateMutability: \"payable\",\n  type: \"function\"\n}];\nvar bytecode = \"0x6080604052668e1bc9bf040000600d553480156200001c57600080fd5b506040518060400160405280600781526020017f42796f61205631000000000000000000000000000000000000000000000000008152506040518060400160405280600781526020017f42594f415f5631000000000000000000000000000000000000000000000000008152508160009080519060200190620000a192919062000253565b508060019080519060200190620000ba92919062000253565b505050620000d26000801b33620000d860201b60201c565b62000368565b620000ea8282620000ee60201b60201c565b5050565b620001008282620001e060201b60201c565b620001dc576001600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620001816200024b60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b828054620002619062000303565b90600052602060002090601f016020900481019282620002855760008555620002d1565b82601f10620002a057805160ff1916838001178555620002d1565b82800160010185558215620002d1579182015b82811115620002d0578251825591602001919060010190620002b3565b5b509050620002e09190620002e4565b5090565b5b80821115620002ff576000816000905550600101620002e5565b5090565b600060028204905060018216806200031c57607f821691505b6020821081141562000333576200033262000339565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6152f080620003786000396000f3fe6080604052600436106101d85760003560e01c80634b42a0f81161010257806395d89b4111610095578063b88d4fde11610064578063b88d4fde14610718578063c87b56dd14610741578063d547741f1461077e578063e985e9c5146107a7576101d8565b806395d89b411461067d578063a0712d68146106a8578063a217fddf146106c4578063a22cb465146106ef576101d8565b8063853828b6116100d1578063853828b6146105ce5780639103a0e0146105d85780639118f31a1461060357806391d1485414610640576101d8565b80634b42a0f8146104da5780634f6ccce7146105175780636352211e1461055457806370a0823114610591576101d8565b80632f2ff15d1161017a57806342842e0e1161014957806342842e0e146103f6578063438b63001461041f578063458f9cfb1461045c578063471c1ea91461049d576101d8565b80632f2ff15d1461033c5780632f745c591461036557806333f717fe146103a257806336568abe146103cd576101d8565b8063095ea7b3116101b6578063095ea7b31461028257806318160ddd146102ab57806323b872dd146102d6578063248a9ca3146102ff576101d8565b806301ffc9a7146101dd57806306fdde031461021a578063081812fc14610245575b600080fd5b3480156101e957600080fd5b5061020460048036038101906101ff9190613a8e565b6107e4565b6040516102119190614278565b60405180910390f35b34801561022657600080fd5b5061022f6107f6565b60405161023c91906142ae565b60405180910390f35b34801561025157600080fd5b5061026c60048036038101906102679190613ba3565b610888565b60405161027991906141ef565b60405180910390f35b34801561028e57600080fd5b506102a960048036038101906102a491906139e1565b61090d565b005b3480156102b757600080fd5b506102c0610a25565b6040516102cd9190614638565b60405180910390f35b3480156102e257600080fd5b506102fd60048036038101906102f891906138cb565b610a32565b005b34801561030b57600080fd5b5061032660048036038101906103219190613a21565b610a92565b6040516103339190614293565b60405180910390f35b34801561034857600080fd5b50610363600480360381019061035e9190613a4e565b610ab2565b005b34801561037157600080fd5b5061038c600480360381019061038791906139e1565b610adb565b6040516103999190614638565b60405180910390f35b3480156103ae57600080fd5b506103b7610b80565b6040516103c49190614256565b60405180910390f35b3480156103d957600080fd5b506103f460048036038101906103ef9190613a4e565b610c36565b005b34801561040257600080fd5b5061041d600480360381019061041891906138cb565b610cb9565b005b34801561042b57600080fd5b506104466004803603810190610441919061385e565b610cd9565b6040516104539190614256565b60405180910390f35b34801561046857600080fd5b50610483600480360381019061047e9190613ba3565b610de3565b6040516104949594939291906142d0565b60405180910390f35b3480156104a957600080fd5b506104c460048036038101906104bf9190613bd0565b6110b4565b6040516104d19190614638565b60405180910390f35b3480156104e657600080fd5b5061050160048036038101906104fc9190613ae8565b611545565b60405161050e9190614638565b60405180910390f35b34801561052357600080fd5b5061053e60048036038101906105399190613ba3565b6116df565b60405161054b9190614638565b60405180910390f35b34801561056057600080fd5b5061057b60048036038101906105769190613ba3565b611750565b60405161058891906141ef565b60405180910390f35b34801561059d57600080fd5b506105b860048036038101906105b3919061385e565b611802565b6040516105c59190614638565b60405180910390f35b6105d66118ba565b005b3480156105e457600080fd5b506105ed611946565b6040516105fa9190614293565b60405180910390f35b34801561060f57600080fd5b5061062a60048036038101906106259190613ba3565b61196a565b6040516106379190614638565b60405180910390f35b34801561064c57600080fd5b5061066760048036038101906106629190613a4e565b611987565b6040516106749190614278565b60405180910390f35b34801561068957600080fd5b506106926119f2565b60405161069f91906142ae565b60405180910390f35b6106c260048036038101906106bd9190613ba3565b611a84565b005b3480156106d057600080fd5b506106d9611bdc565b6040516106e69190614293565b60405180910390f35b3480156106fb57600080fd5b50610716600480360381019061071191906139a1565b611be3565b005b34801561072457600080fd5b5061073f600480360381019061073a919061391e565b611d64565b005b34801561074d57600080fd5b5061076860048036038101906107639190613ba3565b611dc6565b60405161077591906142ae565b60405180910390f35b34801561078a57600080fd5b506107a560048036038101906107a09190613a4e565b611dd8565b005b3480156107b357600080fd5b506107ce60048036038101906107c9919061388b565b611e01565b6040516107db9190614278565b60405180910390f35b60006107ef82611e95565b9050919050565b60606000805461080590614955565b80601f016020809104026020016040519081016040528092919081815260200182805461083190614955565b801561087e5780601f106108535761010080835404028352916020019161087e565b820191906000526020600020905b81548152906001019060200180831161086157829003601f168201915b5050505050905090565b600061089382611f0f565b6108d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c990614558565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061091882611750565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610989576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610980906145b8565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166109a8611f7b565b73ffffffffffffffffffffffffffffffffffffffff1614806109d757506109d6816109d1611f7b565b611e01565b5b610a16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0d90614458565b60405180910390fd5b610a208383611f83565b505050565b6000600880549050905090565b610a43610a3d611f7b565b8261203c565b610a82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a79906145d8565b60405180910390fd5b610a8d83838361211a565b505050565b6000600a6000838152602001908152602001600020600101549050919050565b610abb82610a92565b610acc81610ac7611f7b565b612376565b610ad68383612413565b505050565b6000610ae683611802565b8210610b27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1e90614358565b60405180910390fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b60606000610b8e600c6124f4565b67ffffffffffffffff811115610ba757610ba6614b1d565b5b604051908082528060200260200182016040528015610bd55781602001602082028036833780820191505090505b5090506000600190505b610be9600c6124f4565b8111610c2e578082600183610bfe9190614837565b81518110610c0f57610c0e614aee565b5b6020026020010181815250508080610c26906149b8565b915050610bdf565b508091505090565b610c3e611f7b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca290614618565b60405180910390fd5b610cb58282612502565b5050565b610cd483838360405180602001604052806000815250611d64565b505050565b60606000610ce683611802565b90506000811415610d4357600067ffffffffffffffff811115610d0c57610d0b614b1d565b5b604051908082528060200260200182016040528015610d3a5781602001602082028036833780820191505090505b50915050610dde565b60008167ffffffffffffffff811115610d5f57610d5e614b1d565b5b604051908082528060200260200182016040528015610d8d5781602001602082028036833780820191505090505b50905060005b82811015610dd757610da58582610adb565b828281518110610db857610db7614aee565b5b6020026020010181815250508080610dcf906149b8565b915050610d93565b5080925050505b919050565b60608060606000806000600e6000888152602001908152602001600020600001541415610e45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3c90614378565b60405180910390fd5b6000600e60008881526020019081526020016000206040518060c001604052908160008201548152602001600182018054610e7f90614955565b80601f0160208091040260200160405190810160405280929190818152602001828054610eab90614955565b8015610ef85780601f10610ecd57610100808354040283529160200191610ef8565b820191906000526020600020905b815481529060010190602001808311610edb57829003601f168201915b50505050508152602001600282018054610f1190614955565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3d90614955565b8015610f8a5780601f10610f5f57610100808354040283529160200191610f8a565b820191906000526020600020905b815481529060010190602001808311610f6d57829003601f168201915b5050505050815260200160038201548152602001600482018054610fad90614955565b80601f0160208091040260200160405190810160405280929190818152602001828054610fd990614955565b80156110265780601f10610ffb57610100808354040283529160200191611026565b820191906000526020600020905b81548152906001019060200180831161100957829003601f168201915b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090508060200151816040015182608001518360a001518460600151955095509550955095505091939590929450565b60006110e07f4504b9dfd7400a1522f49a8b4a100552da9236849581fd59b7363eb48c6a474c33611987565b61111f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111690614398565b60405180910390fd5b6000600e6000888152602001908152602001600020600001541415611179576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117090614378565b60405180910390fd5b6000600e60008881526020019081526020016000206040518060c0016040529081600082015481526020016001820180546111b390614955565b80601f01602080910402602001604051908101604052809291908181526020018280546111df90614955565b801561122c5780601f106112015761010080835404028352916020019161122c565b820191906000526020600020905b81548152906001019060200180831161120f57829003601f168201915b5050505050815260200160028201805461124590614955565b80601f016020809104026020016040519081016040528092919081815260200182805461127190614955565b80156112be5780601f10611293576101008083540402835291602001916112be565b820191906000526020600020905b8154815290600101906020018083116112a157829003601f168201915b50505050508152602001600382015481526020016004820180546112e190614955565b80601f016020809104026020016040519081016040528092919081815260200182805461130d90614955565b801561135a5780601f1061132f5761010080835404028352916020019161135a565b820191906000526020600020905b81548152906001019060200180831161133d57829003601f168201915b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090503373ffffffffffffffffffffffffffffffffffffffff168160a0015173ffffffffffffffffffffffffffffffffffffffff161461142d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142490614518565b60405180910390fd5b6040518060c001604052808881526020018781526020018681526020018581526020018481526020013373ffffffffffffffffffffffffffffffffffffffff16815250600e60008981526020019081526020016000206000820151816000015560208201518160010190805190602001906114a992919061365d565b5060408201518160020190805190602001906114c692919061365d565b506060820151816003015560808201518160040190805190602001906114ed92919061365d565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508691505095945050505050565b60006115717f4504b9dfd7400a1522f49a8b4a100552da9236849581fd59b7363eb48c6a474c33611987565b6115b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a790614398565b60405180910390fd5b6115ba600c6125e4565b60006115c6600c6124f4565b90506040518060c001604052808281526020018781526020018681526020018581526020018481526020013373ffffffffffffffffffffffffffffffffffffffff16815250600e600083815260200190815260200160002060008201518160000155602082015181600101908051906020019061164492919061365d565b50604082015181600201908051906020019061166192919061365d565b5060608201518160030155608082015181600401908051906020019061168892919061365d565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505080915050949350505050565b60006116e9610a25565b821061172a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611721906145f8565b60405180910390fd5b6008828154811061173e5761173d614aee565b5b90600052602060002001549050919050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f090614498565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611873576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161186a90614478565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6118c76000801b33611987565b611906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118fd906144d8565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505061194457600080fd5b565b7f4504b9dfd7400a1522f49a8b4a100552da9236849581fd59b7363eb48c6a474c81565b6000600f6000838152602001908152602001600020549050919050565b6000600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060018054611a0190614955565b80601f0160208091040260200160405190810160405280929190818152602001828054611a2d90614955565b8015611a7a5780601f10611a4f57610100808354040283529160200191611a7a565b820191906000526020600020905b815481529060010190602001808311611a5d57829003601f168201915b5050505050905090565b6000600e6000838152602001908152602001600020600001541415611ade576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ad590614378565b60405180910390fd5b6000611ae8610a25565b90506000600182611af99190614756565b9050611b0533826125fa565b611b0e81611f0f565b611b1757600080fd5b82600f600083815260200190815260200160002081905550611bd781600e60008681526020019081526020016000206004018054611b5490614955565b80601f0160208091040260200160405190810160405280929190818152602001828054611b8090614955565b8015611bcd5780601f10611ba257610100808354040283529160200191611bcd565b820191906000526020600020905b815481529060010190602001808311611bb057829003601f168201915b5050505050612618565b505050565b6000801b81565b611beb611f7b565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611c59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c5090614418565b60405180910390fd5b8060056000611c66611f7b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611d13611f7b565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611d589190614278565b60405180910390a35050565b611d75611d6f611f7b565b8361203c565b611db4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dab906145d8565b60405180910390fd5b611dc08484848461268c565b50505050565b6060611dd1826126e8565b9050919050565b611de182610a92565b611df281611ded611f7b565b612376565b611dfc8383612502565b505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611f085750611f078261283a565b5b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16611ff683611750565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061204782611f0f565b612086576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161207d90614438565b60405180910390fd5b600061209183611750565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061210057508373ffffffffffffffffffffffffffffffffffffffff166120e884610888565b73ffffffffffffffffffffffffffffffffffffffff16145b8061211157506121108185611e01565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661213a82611750565b73ffffffffffffffffffffffffffffffffffffffff1614612190576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161218790614578565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612200576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121f7906143f8565b60405180910390fd5b61220b8383836128b4565b612216600082611f83565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546122669190614837565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546122bd9190614756565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6123808282611987565b61240f576123a58173ffffffffffffffffffffffffffffffffffffffff1660146128c4565b6123b38360001c60206128c4565b6040516020016123c49291906141b5565b6040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161240691906142ae565b60405180910390fd5b5050565b61241d8282611987565b6124f0576001600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612495611f7b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600081600001549050919050565b61250c8282611987565b156125e0576000600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612585611f7b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6001816000016000828254019250508190555050565b612614828260405180602001604052806000815250612b00565b5050565b61262182611f0f565b612660576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612657906144b8565b60405180910390fd5b80600b6000848152602001908152602001600020908051906020019061268792919061365d565b505050565b61269784848461211a565b6126a384848484612b5b565b6126e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126d9906143b8565b60405180910390fd5b50505050565b60606126f382611f0f565b612732576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161272990614538565b60405180910390fd5b6000600b6000848152602001908152602001600020805461275290614955565b80601f016020809104026020016040519081016040528092919081815260200182805461277e90614955565b80156127cb5780601f106127a0576101008083540402835291602001916127cb565b820191906000526020600020905b8154815290600101906020018083116127ae57829003601f168201915b5050505050905060006127dc612cf2565b90506000815114156127f2578192505050612835565b60008251111561282757808260405160200161280f929190614191565b60405160208183030381529060405292505050612835565b61283084612d09565b925050505b919050565b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806128ad57506128ac82612db0565b5b9050919050565b6128bf838383612e92565b505050565b6060600060028360026128d791906147dd565b6128e19190614756565b67ffffffffffffffff8111156128fa576128f9614b1d565b5b6040519080825280601f01601f19166020018201604052801561292c5781602001600182028036833780820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061296457612963614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106129c8576129c7614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002612a0891906147dd565b612a129190614756565b90505b6001811115612ab2577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110612a5457612a53614aee565b5b1a60f81b828281518110612a6b57612a6a614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080612aab9061492b565b9050612a15565b5060008414612af6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612aed90614338565b60405180910390fd5b8091505092915050565b612b0a8383612fa6565b612b176000848484612b5b565b612b56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b4d906143b8565b60405180910390fd5b505050565b6000612b7c8473ffffffffffffffffffffffffffffffffffffffff16613174565b15612ce5578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02612ba5611f7b565b8786866040518563ffffffff1660e01b8152600401612bc7949392919061420a565b602060405180830381600087803b158015612be157600080fd5b505af1925050508015612c1257506040513d601f19601f82011682018060405250810190612c0f9190613abb565b60015b612c95573d8060008114612c42576040519150601f19603f3d011682016040523d82523d6000602084013e612c47565b606091505b50600081511415612c8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c84906143b8565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050612cea565b600190505b949350505050565b606060405180602001604052806000815250905090565b6060612d1482611f0f565b612d53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d4a90614598565b60405180910390fd5b6000612d5d612cf2565b90506000815111612d7d5760405180602001604052806000815250612da8565b80612d8784613187565b604051602001612d98929190614191565b6040516020818303038152906040525b915050919050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612e7b57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80612e8b5750612e8a826132e8565b5b9050919050565b612e9d838383613352565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612ee057612edb81613357565b612f1f565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612f1e57612f1d83826133a0565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612f6257612f5d8161350d565b612fa1565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612fa057612f9f82826135de565b5b5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613016576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161300d906144f8565b60405180910390fd5b61301f81611f0f565b1561305f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613056906143d8565b60405180910390fd5b61306b600083836128b4565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546130bb9190614756565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600080823b905060008111915050919050565b606060008214156131cf576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506132e3565b600082905060005b600082146132015780806131ea906149b8565b915050600a826131fa91906147ac565b91506131d7565b60008167ffffffffffffffff81111561321d5761321c614b1d565b5b6040519080825280601f01601f19166020018201604052801561324f5781602001600182028036833780820191505090505b5090505b600085146132dc576001826132689190614837565b9150600a856132779190614a01565b60306132839190614756565b60f81b81838151811061329957613298614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856132d591906147ac565b9450613253565b8093505050505b919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b505050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505060019003906000526020600020016000909190919091505550565b600060016133ad84611802565b6133b79190614837565b905060006007600084815260200190815260200160002054905081811461349c576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550816007600083815260200190815260200160002081905550505b6007600084815260200190815260200160002060009055600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905550505050565b600060016008805490506135219190614837565b905060006009600084815260200190815260200160002054905060006008838154811061355157613550614aee565b5b90600052602060002001549050806008838154811061357357613572614aee565b5b9060005260206000200181905550816009600083815260200190815260200160002081905550600960008581526020019081526020016000206000905560088054806135c2576135c1614abf565b5b6001900381819060005260206000200160009055905550505050565b60006135e983611802565b905081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806007600084815260200190815260200160002081905550505050565b82805461366990614955565b90600052602060002090601f01602090048101928261368b57600085556136d2565b82601f106136a457805160ff19168380011785556136d2565b828001600101855582156136d2579182015b828111156136d15782518255916020019190600101906136b6565b5b5090506136df91906136e3565b5090565b5b808211156136fc5760008160009055506001016136e4565b5090565b600061371361370e84614678565b614653565b90508281526020810184848401111561372f5761372e614b51565b5b61373a8482856148e9565b509392505050565b6000613755613750846146a9565b614653565b90508281526020810184848401111561377157613770614b51565b5b61377c8482856148e9565b509392505050565b60008135905061379381615247565b92915050565b6000813590506137a88161525e565b92915050565b6000813590506137bd81615275565b92915050565b6000813590506137d28161528c565b92915050565b6000815190506137e78161528c565b92915050565b600082601f83011261380257613801614b4c565b5b8135613812848260208601613700565b91505092915050565b600082601f8301126138305761382f614b4c565b5b8135613840848260208601613742565b91505092915050565b600081359050613858816152a3565b92915050565b60006020828403121561387457613873614b5b565b5b600061388284828501613784565b91505092915050565b600080604083850312156138a2576138a1614b5b565b5b60006138b085828601613784565b92505060206138c185828601613784565b9150509250929050565b6000806000606084860312156138e4576138e3614b5b565b5b60006138f286828701613784565b935050602061390386828701613784565b925050604061391486828701613849565b9150509250925092565b6000806000806080858703121561393857613937614b5b565b5b600061394687828801613784565b945050602061395787828801613784565b935050604061396887828801613849565b925050606085013567ffffffffffffffff81111561398957613988614b56565b5b613995878288016137ed565b91505092959194509250565b600080604083850312156139b8576139b7614b5b565b5b60006139c685828601613784565b92505060206139d785828601613799565b9150509250929050565b600080604083850312156139f8576139f7614b5b565b5b6000613a0685828601613784565b9250506020613a1785828601613849565b9150509250929050565b600060208284031215613a3757613a36614b5b565b5b6000613a45848285016137ae565b91505092915050565b60008060408385031215613a6557613a64614b5b565b5b6000613a73858286016137ae565b9250506020613a8485828601613784565b9150509250929050565b600060208284031215613aa457613aa3614b5b565b5b6000613ab2848285016137c3565b91505092915050565b600060208284031215613ad157613ad0614b5b565b5b6000613adf848285016137d8565b91505092915050565b60008060008060808587031215613b0257613b01614b5b565b5b600085013567ffffffffffffffff811115613b2057613b1f614b56565b5b613b2c8782880161381b565b945050602085013567ffffffffffffffff811115613b4d57613b4c614b56565b5b613b598782880161381b565b9350506040613b6a87828801613849565b925050606085013567ffffffffffffffff811115613b8b57613b8a614b56565b5b613b978782880161381b565b91505092959194509250565b600060208284031215613bb957613bb8614b5b565b5b6000613bc784828501613849565b91505092915050565b600080600080600060a08688031215613bec57613beb614b5b565b5b6000613bfa88828901613849565b955050602086013567ffffffffffffffff811115613c1b57613c1a614b56565b5b613c278882890161381b565b945050604086013567ffffffffffffffff811115613c4857613c47614b56565b5b613c548882890161381b565b9350506060613c6588828901613849565b925050608086013567ffffffffffffffff811115613c8657613c85614b56565b5b613c928882890161381b565b9150509295509295909350565b6000613cab8383614173565b60208301905092915050565b613cc08161486b565b82525050565b6000613cd1826146ea565b613cdb8185614718565b9350613ce6836146da565b8060005b83811015613d17578151613cfe8882613c9f565b9750613d098361470b565b925050600181019050613cea565b5085935050505092915050565b613d2d8161487d565b82525050565b613d3c81614889565b82525050565b6000613d4d826146f5565b613d578185614729565b9350613d678185602086016148f8565b613d7081614b60565b840191505092915050565b6000613d8682614700565b613d90818561473a565b9350613da08185602086016148f8565b613da981614b60565b840191505092915050565b6000613dbf82614700565b613dc9818561474b565b9350613dd98185602086016148f8565b80840191505092915050565b6000613df260208361473a565b9150613dfd82614b71565b602082019050919050565b6000613e15602b8361473a565b9150613e2082614b9a565b604082019050919050565b6000613e3860118361473a565b9150613e4382614be9565b602082019050919050565b6000613e5b60248361473a565b9150613e6682614c12565b604082019050919050565b6000613e7e60328361473a565b9150613e8982614c61565b604082019050919050565b6000613ea1601c8361473a565b9150613eac82614cb0565b602082019050919050565b6000613ec460248361473a565b9150613ecf82614cd9565b604082019050919050565b6000613ee760198361473a565b9150613ef282614d28565b602082019050919050565b6000613f0a602c8361473a565b9150613f1582614d51565b604082019050919050565b6000613f2d60388361473a565b9150613f3882614da0565b604082019050919050565b6000613f50602a8361473a565b9150613f5b82614def565b604082019050919050565b6000613f7360298361473a565b9150613f7e82614e3e565b604082019050919050565b6000613f96602e8361473a565b9150613fa182614e8d565b604082019050919050565b6000613fb9601c8361473a565b9150613fc482614edc565b602082019050919050565b6000613fdc60208361473a565b9150613fe782614f05565b602082019050919050565b6000613fff60218361473a565b915061400a82614f2e565b604082019050919050565b600061402260318361473a565b915061402d82614f7d565b604082019050919050565b6000614045602c8361473a565b915061405082614fcc565b604082019050919050565b600061406860298361473a565b91506140738261501b565b604082019050919050565b600061408b602f8361473a565b91506140968261506a565b604082019050919050565b60006140ae60218361473a565b91506140b9826150b9565b604082019050919050565b60006140d160318361473a565b91506140dc82615108565b604082019050919050565b60006140f4602c8361473a565b91506140ff82615157565b604082019050919050565b600061411760178361474b565b9150614122826151a6565b601782019050919050565b600061413a60118361474b565b9150614145826151cf565b601182019050919050565b600061415d602f8361473a565b9150614168826151f8565b604082019050919050565b61417c816148df565b82525050565b61418b816148df565b82525050565b600061419d8285613db4565b91506141a98284613db4565b91508190509392505050565b60006141c08261410a565b91506141cc8285613db4565b91506141d78261412d565b91506141e38284613db4565b91508190509392505050565b60006020820190506142046000830184613cb7565b92915050565b600060808201905061421f6000830187613cb7565b61422c6020830186613cb7565b6142396040830185614182565b818103606083015261424b8184613d42565b905095945050505050565b600060208201905081810360008301526142708184613cc6565b905092915050565b600060208201905061428d6000830184613d24565b92915050565b60006020820190506142a86000830184613d33565b92915050565b600060208201905081810360008301526142c88184613d7b565b905092915050565b600060a08201905081810360008301526142ea8188613d7b565b905081810360208301526142fe8187613d7b565b905081810360408301526143128186613d7b565b90506143216060830185613cb7565b61432e6080830184614182565b9695505050505050565b6000602082019050818103600083015261435181613de5565b9050919050565b6000602082019050818103600083015261437181613e08565b9050919050565b6000602082019050818103600083015261439181613e2b565b9050919050565b600060208201905081810360008301526143b181613e4e565b9050919050565b600060208201905081810360008301526143d181613e71565b9050919050565b600060208201905081810360008301526143f181613e94565b9050919050565b6000602082019050818103600083015261441181613eb7565b9050919050565b6000602082019050818103600083015261443181613eda565b9050919050565b6000602082019050818103600083015261445181613efd565b9050919050565b6000602082019050818103600083015261447181613f20565b9050919050565b6000602082019050818103600083015261449181613f43565b9050919050565b600060208201905081810360008301526144b181613f66565b9050919050565b600060208201905081810360008301526144d181613f89565b9050919050565b600060208201905081810360008301526144f181613fac565b9050919050565b6000602082019050818103600083015261451181613fcf565b9050919050565b6000602082019050818103600083015261453181613ff2565b9050919050565b6000602082019050818103600083015261455181614015565b9050919050565b6000602082019050818103600083015261457181614038565b9050919050565b600060208201905081810360008301526145918161405b565b9050919050565b600060208201905081810360008301526145b18161407e565b9050919050565b600060208201905081810360008301526145d1816140a1565b9050919050565b600060208201905081810360008301526145f1816140c4565b9050919050565b60006020820190508181036000830152614611816140e7565b9050919050565b6000602082019050818103600083015261463181614150565b9050919050565b600060208201905061464d6000830184614182565b92915050565b600061465d61466e565b90506146698282614987565b919050565b6000604051905090565b600067ffffffffffffffff82111561469357614692614b1d565b5b61469c82614b60565b9050602081019050919050565b600067ffffffffffffffff8211156146c4576146c3614b1d565b5b6146cd82614b60565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000614761826148df565b915061476c836148df565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156147a1576147a0614a32565b5b828201905092915050565b60006147b7826148df565b91506147c2836148df565b9250826147d2576147d1614a61565b5b828204905092915050565b60006147e8826148df565b91506147f3836148df565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561482c5761482b614a32565b5b828202905092915050565b6000614842826148df565b915061484d836148df565b9250828210156148605761485f614a32565b5b828203905092915050565b6000614876826148bf565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156149165780820151818401526020810190506148fb565b83811115614925576000848401525b50505050565b6000614936826148df565b9150600082141561494a57614949614a32565b5b600182039050919050565b6000600282049050600182168061496d57607f821691505b6020821081141561498157614980614a90565b5b50919050565b61499082614b60565b810181811067ffffffffffffffff821117156149af576149ae614b1d565b5b80604052505050565b60006149c3826148df565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156149f6576149f5614a32565b5b600182019050919050565b6000614a0c826148df565b9150614a17836148df565b925082614a2757614a26614a61565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008201527f74206f6620626f756e6473000000000000000000000000000000000000000000602082015250565b7f417070204944206d757374206578697374000000000000000000000000000000600082015250565b7f4d757374206265206120646576656c6f70657220746f2063726561746520616e60008201527f2061707000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b7f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008201527f6578697374656e7420746f6b656e000000000000000000000000000000000000602082015250565b7f4d75737420626520616e2061646d696e20746f20776974686472617700000000600082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f596f75206d75737420626520746865206f776e6572206f66207468697320617060008201527f7000000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524337323155524953746f726167653a2055524920717565727920666f722060008201527f6e6f6e6578697374656e7420746f6b656e000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008201527f73206e6f74206f776e0000000000000000000000000000000000000000000000602082015250565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b7f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008201527f7574206f6620626f756e64730000000000000000000000000000000000000000602082015250565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6152508161486b565b811461525b57600080fd5b50565b6152678161487d565b811461527257600080fd5b50565b61527e81614889565b811461528957600080fd5b50565b61529581614893565b81146152a057600080fd5b50565b6152ac816148df565b81146152b757600080fd5b5056fea26469706673582212206d1e1f96a7981ff2283155936d935258895e739fa6191f3ee5d4c71aebe1597c64736f6c63430008060033\";\nvar deployedBytecode = \"0x6080604052600436106101d85760003560e01c80634b42a0f81161010257806395d89b4111610095578063b88d4fde11610064578063b88d4fde14610718578063c87b56dd14610741578063d547741f1461077e578063e985e9c5146107a7576101d8565b806395d89b411461067d578063a0712d68146106a8578063a217fddf146106c4578063a22cb465146106ef576101d8565b8063853828b6116100d1578063853828b6146105ce5780639103a0e0146105d85780639118f31a1461060357806391d1485414610640576101d8565b80634b42a0f8146104da5780634f6ccce7146105175780636352211e1461055457806370a0823114610591576101d8565b80632f2ff15d1161017a57806342842e0e1161014957806342842e0e146103f6578063438b63001461041f578063458f9cfb1461045c578063471c1ea91461049d576101d8565b80632f2ff15d1461033c5780632f745c591461036557806333f717fe146103a257806336568abe146103cd576101d8565b8063095ea7b3116101b6578063095ea7b31461028257806318160ddd146102ab57806323b872dd146102d6578063248a9ca3146102ff576101d8565b806301ffc9a7146101dd57806306fdde031461021a578063081812fc14610245575b600080fd5b3480156101e957600080fd5b5061020460048036038101906101ff9190613a8e565b6107e4565b6040516102119190614278565b60405180910390f35b34801561022657600080fd5b5061022f6107f6565b60405161023c91906142ae565b60405180910390f35b34801561025157600080fd5b5061026c60048036038101906102679190613ba3565b610888565b60405161027991906141ef565b60405180910390f35b34801561028e57600080fd5b506102a960048036038101906102a491906139e1565b61090d565b005b3480156102b757600080fd5b506102c0610a25565b6040516102cd9190614638565b60405180910390f35b3480156102e257600080fd5b506102fd60048036038101906102f891906138cb565b610a32565b005b34801561030b57600080fd5b5061032660048036038101906103219190613a21565b610a92565b6040516103339190614293565b60405180910390f35b34801561034857600080fd5b50610363600480360381019061035e9190613a4e565b610ab2565b005b34801561037157600080fd5b5061038c600480360381019061038791906139e1565b610adb565b6040516103999190614638565b60405180910390f35b3480156103ae57600080fd5b506103b7610b80565b6040516103c49190614256565b60405180910390f35b3480156103d957600080fd5b506103f460048036038101906103ef9190613a4e565b610c36565b005b34801561040257600080fd5b5061041d600480360381019061041891906138cb565b610cb9565b005b34801561042b57600080fd5b506104466004803603810190610441919061385e565b610cd9565b6040516104539190614256565b60405180910390f35b34801561046857600080fd5b50610483600480360381019061047e9190613ba3565b610de3565b6040516104949594939291906142d0565b60405180910390f35b3480156104a957600080fd5b506104c460048036038101906104bf9190613bd0565b6110b4565b6040516104d19190614638565b60405180910390f35b3480156104e657600080fd5b5061050160048036038101906104fc9190613ae8565b611545565b60405161050e9190614638565b60405180910390f35b34801561052357600080fd5b5061053e60048036038101906105399190613ba3565b6116df565b60405161054b9190614638565b60405180910390f35b34801561056057600080fd5b5061057b60048036038101906105769190613ba3565b611750565b60405161058891906141ef565b60405180910390f35b34801561059d57600080fd5b506105b860048036038101906105b3919061385e565b611802565b6040516105c59190614638565b60405180910390f35b6105d66118ba565b005b3480156105e457600080fd5b506105ed611946565b6040516105fa9190614293565b60405180910390f35b34801561060f57600080fd5b5061062a60048036038101906106259190613ba3565b61196a565b6040516106379190614638565b60405180910390f35b34801561064c57600080fd5b5061066760048036038101906106629190613a4e565b611987565b6040516106749190614278565b60405180910390f35b34801561068957600080fd5b506106926119f2565b60405161069f91906142ae565b60405180910390f35b6106c260048036038101906106bd9190613ba3565b611a84565b005b3480156106d057600080fd5b506106d9611bdc565b6040516106e69190614293565b60405180910390f35b3480156106fb57600080fd5b50610716600480360381019061071191906139a1565b611be3565b005b34801561072457600080fd5b5061073f600480360381019061073a919061391e565b611d64565b005b34801561074d57600080fd5b5061076860048036038101906107639190613ba3565b611dc6565b60405161077591906142ae565b60405180910390f35b34801561078a57600080fd5b506107a560048036038101906107a09190613a4e565b611dd8565b005b3480156107b357600080fd5b506107ce60048036038101906107c9919061388b565b611e01565b6040516107db9190614278565b60405180910390f35b60006107ef82611e95565b9050919050565b60606000805461080590614955565b80601f016020809104026020016040519081016040528092919081815260200182805461083190614955565b801561087e5780601f106108535761010080835404028352916020019161087e565b820191906000526020600020905b81548152906001019060200180831161086157829003601f168201915b5050505050905090565b600061089382611f0f565b6108d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c990614558565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061091882611750565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610989576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610980906145b8565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166109a8611f7b565b73ffffffffffffffffffffffffffffffffffffffff1614806109d757506109d6816109d1611f7b565b611e01565b5b610a16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0d90614458565b60405180910390fd5b610a208383611f83565b505050565b6000600880549050905090565b610a43610a3d611f7b565b8261203c565b610a82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a79906145d8565b60405180910390fd5b610a8d83838361211a565b505050565b6000600a6000838152602001908152602001600020600101549050919050565b610abb82610a92565b610acc81610ac7611f7b565b612376565b610ad68383612413565b505050565b6000610ae683611802565b8210610b27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1e90614358565b60405180910390fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b60606000610b8e600c6124f4565b67ffffffffffffffff811115610ba757610ba6614b1d565b5b604051908082528060200260200182016040528015610bd55781602001602082028036833780820191505090505b5090506000600190505b610be9600c6124f4565b8111610c2e578082600183610bfe9190614837565b81518110610c0f57610c0e614aee565b5b6020026020010181815250508080610c26906149b8565b915050610bdf565b508091505090565b610c3e611f7b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca290614618565b60405180910390fd5b610cb58282612502565b5050565b610cd483838360405180602001604052806000815250611d64565b505050565b60606000610ce683611802565b90506000811415610d4357600067ffffffffffffffff811115610d0c57610d0b614b1d565b5b604051908082528060200260200182016040528015610d3a5781602001602082028036833780820191505090505b50915050610dde565b60008167ffffffffffffffff811115610d5f57610d5e614b1d565b5b604051908082528060200260200182016040528015610d8d5781602001602082028036833780820191505090505b50905060005b82811015610dd757610da58582610adb565b828281518110610db857610db7614aee565b5b6020026020010181815250508080610dcf906149b8565b915050610d93565b5080925050505b919050565b60608060606000806000600e6000888152602001908152602001600020600001541415610e45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3c90614378565b60405180910390fd5b6000600e60008881526020019081526020016000206040518060c001604052908160008201548152602001600182018054610e7f90614955565b80601f0160208091040260200160405190810160405280929190818152602001828054610eab90614955565b8015610ef85780601f10610ecd57610100808354040283529160200191610ef8565b820191906000526020600020905b815481529060010190602001808311610edb57829003601f168201915b50505050508152602001600282018054610f1190614955565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3d90614955565b8015610f8a5780601f10610f5f57610100808354040283529160200191610f8a565b820191906000526020600020905b815481529060010190602001808311610f6d57829003601f168201915b5050505050815260200160038201548152602001600482018054610fad90614955565b80601f0160208091040260200160405190810160405280929190818152602001828054610fd990614955565b80156110265780601f10610ffb57610100808354040283529160200191611026565b820191906000526020600020905b81548152906001019060200180831161100957829003601f168201915b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090508060200151816040015182608001518360a001518460600151955095509550955095505091939590929450565b60006110e07f4504b9dfd7400a1522f49a8b4a100552da9236849581fd59b7363eb48c6a474c33611987565b61111f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111690614398565b60405180910390fd5b6000600e6000888152602001908152602001600020600001541415611179576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117090614378565b60405180910390fd5b6000600e60008881526020019081526020016000206040518060c0016040529081600082015481526020016001820180546111b390614955565b80601f01602080910402602001604051908101604052809291908181526020018280546111df90614955565b801561122c5780601f106112015761010080835404028352916020019161122c565b820191906000526020600020905b81548152906001019060200180831161120f57829003601f168201915b5050505050815260200160028201805461124590614955565b80601f016020809104026020016040519081016040528092919081815260200182805461127190614955565b80156112be5780601f10611293576101008083540402835291602001916112be565b820191906000526020600020905b8154815290600101906020018083116112a157829003601f168201915b50505050508152602001600382015481526020016004820180546112e190614955565b80601f016020809104026020016040519081016040528092919081815260200182805461130d90614955565b801561135a5780601f1061132f5761010080835404028352916020019161135a565b820191906000526020600020905b81548152906001019060200180831161133d57829003601f168201915b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090503373ffffffffffffffffffffffffffffffffffffffff168160a0015173ffffffffffffffffffffffffffffffffffffffff161461142d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142490614518565b60405180910390fd5b6040518060c001604052808881526020018781526020018681526020018581526020018481526020013373ffffffffffffffffffffffffffffffffffffffff16815250600e60008981526020019081526020016000206000820151816000015560208201518160010190805190602001906114a992919061365d565b5060408201518160020190805190602001906114c692919061365d565b506060820151816003015560808201518160040190805190602001906114ed92919061365d565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508691505095945050505050565b60006115717f4504b9dfd7400a1522f49a8b4a100552da9236849581fd59b7363eb48c6a474c33611987565b6115b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a790614398565b60405180910390fd5b6115ba600c6125e4565b60006115c6600c6124f4565b90506040518060c001604052808281526020018781526020018681526020018581526020018481526020013373ffffffffffffffffffffffffffffffffffffffff16815250600e600083815260200190815260200160002060008201518160000155602082015181600101908051906020019061164492919061365d565b50604082015181600201908051906020019061166192919061365d565b5060608201518160030155608082015181600401908051906020019061168892919061365d565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505080915050949350505050565b60006116e9610a25565b821061172a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611721906145f8565b60405180910390fd5b6008828154811061173e5761173d614aee565b5b90600052602060002001549050919050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f090614498565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611873576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161186a90614478565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6118c76000801b33611987565b611906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118fd906144d8565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505061194457600080fd5b565b7f4504b9dfd7400a1522f49a8b4a100552da9236849581fd59b7363eb48c6a474c81565b6000600f6000838152602001908152602001600020549050919050565b6000600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060018054611a0190614955565b80601f0160208091040260200160405190810160405280929190818152602001828054611a2d90614955565b8015611a7a5780601f10611a4f57610100808354040283529160200191611a7a565b820191906000526020600020905b815481529060010190602001808311611a5d57829003601f168201915b5050505050905090565b6000600e6000838152602001908152602001600020600001541415611ade576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ad590614378565b60405180910390fd5b6000611ae8610a25565b90506000600182611af99190614756565b9050611b0533826125fa565b611b0e81611f0f565b611b1757600080fd5b82600f600083815260200190815260200160002081905550611bd781600e60008681526020019081526020016000206004018054611b5490614955565b80601f0160208091040260200160405190810160405280929190818152602001828054611b8090614955565b8015611bcd5780601f10611ba257610100808354040283529160200191611bcd565b820191906000526020600020905b815481529060010190602001808311611bb057829003601f168201915b5050505050612618565b505050565b6000801b81565b611beb611f7b565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611c59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c5090614418565b60405180910390fd5b8060056000611c66611f7b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611d13611f7b565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611d589190614278565b60405180910390a35050565b611d75611d6f611f7b565b8361203c565b611db4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dab906145d8565b60405180910390fd5b611dc08484848461268c565b50505050565b6060611dd1826126e8565b9050919050565b611de182610a92565b611df281611ded611f7b565b612376565b611dfc8383612502565b505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611f085750611f078261283a565b5b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16611ff683611750565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061204782611f0f565b612086576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161207d90614438565b60405180910390fd5b600061209183611750565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061210057508373ffffffffffffffffffffffffffffffffffffffff166120e884610888565b73ffffffffffffffffffffffffffffffffffffffff16145b8061211157506121108185611e01565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661213a82611750565b73ffffffffffffffffffffffffffffffffffffffff1614612190576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161218790614578565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612200576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121f7906143f8565b60405180910390fd5b61220b8383836128b4565b612216600082611f83565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546122669190614837565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546122bd9190614756565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6123808282611987565b61240f576123a58173ffffffffffffffffffffffffffffffffffffffff1660146128c4565b6123b38360001c60206128c4565b6040516020016123c49291906141b5565b6040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161240691906142ae565b60405180910390fd5b5050565b61241d8282611987565b6124f0576001600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612495611f7b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600081600001549050919050565b61250c8282611987565b156125e0576000600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612585611f7b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6001816000016000828254019250508190555050565b612614828260405180602001604052806000815250612b00565b5050565b61262182611f0f565b612660576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612657906144b8565b60405180910390fd5b80600b6000848152602001908152602001600020908051906020019061268792919061365d565b505050565b61269784848461211a565b6126a384848484612b5b565b6126e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126d9906143b8565b60405180910390fd5b50505050565b60606126f382611f0f565b612732576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161272990614538565b60405180910390fd5b6000600b6000848152602001908152602001600020805461275290614955565b80601f016020809104026020016040519081016040528092919081815260200182805461277e90614955565b80156127cb5780601f106127a0576101008083540402835291602001916127cb565b820191906000526020600020905b8154815290600101906020018083116127ae57829003601f168201915b5050505050905060006127dc612cf2565b90506000815114156127f2578192505050612835565b60008251111561282757808260405160200161280f929190614191565b60405160208183030381529060405292505050612835565b61283084612d09565b925050505b919050565b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806128ad57506128ac82612db0565b5b9050919050565b6128bf838383612e92565b505050565b6060600060028360026128d791906147dd565b6128e19190614756565b67ffffffffffffffff8111156128fa576128f9614b1d565b5b6040519080825280601f01601f19166020018201604052801561292c5781602001600182028036833780820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061296457612963614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106129c8576129c7614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002612a0891906147dd565b612a129190614756565b90505b6001811115612ab2577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110612a5457612a53614aee565b5b1a60f81b828281518110612a6b57612a6a614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080612aab9061492b565b9050612a15565b5060008414612af6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612aed90614338565b60405180910390fd5b8091505092915050565b612b0a8383612fa6565b612b176000848484612b5b565b612b56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b4d906143b8565b60405180910390fd5b505050565b6000612b7c8473ffffffffffffffffffffffffffffffffffffffff16613174565b15612ce5578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02612ba5611f7b565b8786866040518563ffffffff1660e01b8152600401612bc7949392919061420a565b602060405180830381600087803b158015612be157600080fd5b505af1925050508015612c1257506040513d601f19601f82011682018060405250810190612c0f9190613abb565b60015b612c95573d8060008114612c42576040519150601f19603f3d011682016040523d82523d6000602084013e612c47565b606091505b50600081511415612c8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c84906143b8565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050612cea565b600190505b949350505050565b606060405180602001604052806000815250905090565b6060612d1482611f0f565b612d53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d4a90614598565b60405180910390fd5b6000612d5d612cf2565b90506000815111612d7d5760405180602001604052806000815250612da8565b80612d8784613187565b604051602001612d98929190614191565b6040516020818303038152906040525b915050919050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612e7b57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80612e8b5750612e8a826132e8565b5b9050919050565b612e9d838383613352565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612ee057612edb81613357565b612f1f565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612f1e57612f1d83826133a0565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612f6257612f5d8161350d565b612fa1565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612fa057612f9f82826135de565b5b5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613016576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161300d906144f8565b60405180910390fd5b61301f81611f0f565b1561305f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613056906143d8565b60405180910390fd5b61306b600083836128b4565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546130bb9190614756565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600080823b905060008111915050919050565b606060008214156131cf576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506132e3565b600082905060005b600082146132015780806131ea906149b8565b915050600a826131fa91906147ac565b91506131d7565b60008167ffffffffffffffff81111561321d5761321c614b1d565b5b6040519080825280601f01601f19166020018201604052801561324f5781602001600182028036833780820191505090505b5090505b600085146132dc576001826132689190614837565b9150600a856132779190614a01565b60306132839190614756565b60f81b81838151811061329957613298614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856132d591906147ac565b9450613253565b8093505050505b919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b505050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505060019003906000526020600020016000909190919091505550565b600060016133ad84611802565b6133b79190614837565b905060006007600084815260200190815260200160002054905081811461349c576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550816007600083815260200190815260200160002081905550505b6007600084815260200190815260200160002060009055600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905550505050565b600060016008805490506135219190614837565b905060006009600084815260200190815260200160002054905060006008838154811061355157613550614aee565b5b90600052602060002001549050806008838154811061357357613572614aee565b5b9060005260206000200181905550816009600083815260200190815260200160002081905550600960008581526020019081526020016000206000905560088054806135c2576135c1614abf565b5b6001900381819060005260206000200160009055905550505050565b60006135e983611802565b905081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806007600084815260200190815260200160002081905550505050565b82805461366990614955565b90600052602060002090601f01602090048101928261368b57600085556136d2565b82601f106136a457805160ff19168380011785556136d2565b828001600101855582156136d2579182015b828111156136d15782518255916020019190600101906136b6565b5b5090506136df91906136e3565b5090565b5b808211156136fc5760008160009055506001016136e4565b5090565b600061371361370e84614678565b614653565b90508281526020810184848401111561372f5761372e614b51565b5b61373a8482856148e9565b509392505050565b6000613755613750846146a9565b614653565b90508281526020810184848401111561377157613770614b51565b5b61377c8482856148e9565b509392505050565b60008135905061379381615247565b92915050565b6000813590506137a88161525e565b92915050565b6000813590506137bd81615275565b92915050565b6000813590506137d28161528c565b92915050565b6000815190506137e78161528c565b92915050565b600082601f83011261380257613801614b4c565b5b8135613812848260208601613700565b91505092915050565b600082601f8301126138305761382f614b4c565b5b8135613840848260208601613742565b91505092915050565b600081359050613858816152a3565b92915050565b60006020828403121561387457613873614b5b565b5b600061388284828501613784565b91505092915050565b600080604083850312156138a2576138a1614b5b565b5b60006138b085828601613784565b92505060206138c185828601613784565b9150509250929050565b6000806000606084860312156138e4576138e3614b5b565b5b60006138f286828701613784565b935050602061390386828701613784565b925050604061391486828701613849565b9150509250925092565b6000806000806080858703121561393857613937614b5b565b5b600061394687828801613784565b945050602061395787828801613784565b935050604061396887828801613849565b925050606085013567ffffffffffffffff81111561398957613988614b56565b5b613995878288016137ed565b91505092959194509250565b600080604083850312156139b8576139b7614b5b565b5b60006139c685828601613784565b92505060206139d785828601613799565b9150509250929050565b600080604083850312156139f8576139f7614b5b565b5b6000613a0685828601613784565b9250506020613a1785828601613849565b9150509250929050565b600060208284031215613a3757613a36614b5b565b5b6000613a45848285016137ae565b91505092915050565b60008060408385031215613a6557613a64614b5b565b5b6000613a73858286016137ae565b9250506020613a8485828601613784565b9150509250929050565b600060208284031215613aa457613aa3614b5b565b5b6000613ab2848285016137c3565b91505092915050565b600060208284031215613ad157613ad0614b5b565b5b6000613adf848285016137d8565b91505092915050565b60008060008060808587031215613b0257613b01614b5b565b5b600085013567ffffffffffffffff811115613b2057613b1f614b56565b5b613b2c8782880161381b565b945050602085013567ffffffffffffffff811115613b4d57613b4c614b56565b5b613b598782880161381b565b9350506040613b6a87828801613849565b925050606085013567ffffffffffffffff811115613b8b57613b8a614b56565b5b613b978782880161381b565b91505092959194509250565b600060208284031215613bb957613bb8614b5b565b5b6000613bc784828501613849565b91505092915050565b600080600080600060a08688031215613bec57613beb614b5b565b5b6000613bfa88828901613849565b955050602086013567ffffffffffffffff811115613c1b57613c1a614b56565b5b613c278882890161381b565b945050604086013567ffffffffffffffff811115613c4857613c47614b56565b5b613c548882890161381b565b9350506060613c6588828901613849565b925050608086013567ffffffffffffffff811115613c8657613c85614b56565b5b613c928882890161381b565b9150509295509295909350565b6000613cab8383614173565b60208301905092915050565b613cc08161486b565b82525050565b6000613cd1826146ea565b613cdb8185614718565b9350613ce6836146da565b8060005b83811015613d17578151613cfe8882613c9f565b9750613d098361470b565b925050600181019050613cea565b5085935050505092915050565b613d2d8161487d565b82525050565b613d3c81614889565b82525050565b6000613d4d826146f5565b613d578185614729565b9350613d678185602086016148f8565b613d7081614b60565b840191505092915050565b6000613d8682614700565b613d90818561473a565b9350613da08185602086016148f8565b613da981614b60565b840191505092915050565b6000613dbf82614700565b613dc9818561474b565b9350613dd98185602086016148f8565b80840191505092915050565b6000613df260208361473a565b9150613dfd82614b71565b602082019050919050565b6000613e15602b8361473a565b9150613e2082614b9a565b604082019050919050565b6000613e3860118361473a565b9150613e4382614be9565b602082019050919050565b6000613e5b60248361473a565b9150613e6682614c12565b604082019050919050565b6000613e7e60328361473a565b9150613e8982614c61565b604082019050919050565b6000613ea1601c8361473a565b9150613eac82614cb0565b602082019050919050565b6000613ec460248361473a565b9150613ecf82614cd9565b604082019050919050565b6000613ee760198361473a565b9150613ef282614d28565b602082019050919050565b6000613f0a602c8361473a565b9150613f1582614d51565b604082019050919050565b6000613f2d60388361473a565b9150613f3882614da0565b604082019050919050565b6000613f50602a8361473a565b9150613f5b82614def565b604082019050919050565b6000613f7360298361473a565b9150613f7e82614e3e565b604082019050919050565b6000613f96602e8361473a565b9150613fa182614e8d565b604082019050919050565b6000613fb9601c8361473a565b9150613fc482614edc565b602082019050919050565b6000613fdc60208361473a565b9150613fe782614f05565b602082019050919050565b6000613fff60218361473a565b915061400a82614f2e565b604082019050919050565b600061402260318361473a565b915061402d82614f7d565b604082019050919050565b6000614045602c8361473a565b915061405082614fcc565b604082019050919050565b600061406860298361473a565b91506140738261501b565b604082019050919050565b600061408b602f8361473a565b91506140968261506a565b604082019050919050565b60006140ae60218361473a565b91506140b9826150b9565b604082019050919050565b60006140d160318361473a565b91506140dc82615108565b604082019050919050565b60006140f4602c8361473a565b91506140ff82615157565b604082019050919050565b600061411760178361474b565b9150614122826151a6565b601782019050919050565b600061413a60118361474b565b9150614145826151cf565b601182019050919050565b600061415d602f8361473a565b9150614168826151f8565b604082019050919050565b61417c816148df565b82525050565b61418b816148df565b82525050565b600061419d8285613db4565b91506141a98284613db4565b91508190509392505050565b60006141c08261410a565b91506141cc8285613db4565b91506141d78261412d565b91506141e38284613db4565b91508190509392505050565b60006020820190506142046000830184613cb7565b92915050565b600060808201905061421f6000830187613cb7565b61422c6020830186613cb7565b6142396040830185614182565b818103606083015261424b8184613d42565b905095945050505050565b600060208201905081810360008301526142708184613cc6565b905092915050565b600060208201905061428d6000830184613d24565b92915050565b60006020820190506142a86000830184613d33565b92915050565b600060208201905081810360008301526142c88184613d7b565b905092915050565b600060a08201905081810360008301526142ea8188613d7b565b905081810360208301526142fe8187613d7b565b905081810360408301526143128186613d7b565b90506143216060830185613cb7565b61432e6080830184614182565b9695505050505050565b6000602082019050818103600083015261435181613de5565b9050919050565b6000602082019050818103600083015261437181613e08565b9050919050565b6000602082019050818103600083015261439181613e2b565b9050919050565b600060208201905081810360008301526143b181613e4e565b9050919050565b600060208201905081810360008301526143d181613e71565b9050919050565b600060208201905081810360008301526143f181613e94565b9050919050565b6000602082019050818103600083015261441181613eb7565b9050919050565b6000602082019050818103600083015261443181613eda565b9050919050565b6000602082019050818103600083015261445181613efd565b9050919050565b6000602082019050818103600083015261447181613f20565b9050919050565b6000602082019050818103600083015261449181613f43565b9050919050565b600060208201905081810360008301526144b181613f66565b9050919050565b600060208201905081810360008301526144d181613f89565b9050919050565b600060208201905081810360008301526144f181613fac565b9050919050565b6000602082019050818103600083015261451181613fcf565b9050919050565b6000602082019050818103600083015261453181613ff2565b9050919050565b6000602082019050818103600083015261455181614015565b9050919050565b6000602082019050818103600083015261457181614038565b9050919050565b600060208201905081810360008301526145918161405b565b9050919050565b600060208201905081810360008301526145b18161407e565b9050919050565b600060208201905081810360008301526145d1816140a1565b9050919050565b600060208201905081810360008301526145f1816140c4565b9050919050565b60006020820190508181036000830152614611816140e7565b9050919050565b6000602082019050818103600083015261463181614150565b9050919050565b600060208201905061464d6000830184614182565b92915050565b600061465d61466e565b90506146698282614987565b919050565b6000604051905090565b600067ffffffffffffffff82111561469357614692614b1d565b5b61469c82614b60565b9050602081019050919050565b600067ffffffffffffffff8211156146c4576146c3614b1d565b5b6146cd82614b60565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000614761826148df565b915061476c836148df565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156147a1576147a0614a32565b5b828201905092915050565b60006147b7826148df565b91506147c2836148df565b9250826147d2576147d1614a61565b5b828204905092915050565b60006147e8826148df565b91506147f3836148df565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561482c5761482b614a32565b5b828202905092915050565b6000614842826148df565b915061484d836148df565b9250828210156148605761485f614a32565b5b828203905092915050565b6000614876826148bf565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156149165780820151818401526020810190506148fb565b83811115614925576000848401525b50505050565b6000614936826148df565b9150600082141561494a57614949614a32565b5b600182039050919050565b6000600282049050600182168061496d57607f821691505b6020821081141561498157614980614a90565b5b50919050565b61499082614b60565b810181811067ffffffffffffffff821117156149af576149ae614b1d565b5b80604052505050565b60006149c3826148df565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156149f6576149f5614a32565b5b600182019050919050565b6000614a0c826148df565b9150614a17836148df565b925082614a2757614a26614a61565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008201527f74206f6620626f756e6473000000000000000000000000000000000000000000602082015250565b7f417070204944206d757374206578697374000000000000000000000000000000600082015250565b7f4d757374206265206120646576656c6f70657220746f2063726561746520616e60008201527f2061707000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b7f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008201527f6578697374656e7420746f6b656e000000000000000000000000000000000000602082015250565b7f4d75737420626520616e2061646d696e20746f20776974686472617700000000600082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f596f75206d75737420626520746865206f776e6572206f66207468697320617060008201527f7000000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524337323155524953746f726167653a2055524920717565727920666f722060008201527f6e6f6e6578697374656e7420746f6b656e000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008201527f73206e6f74206f776e0000000000000000000000000000000000000000000000602082015250565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b7f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008201527f7574206f6620626f756e64730000000000000000000000000000000000000000602082015250565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6152508161486b565b811461525b57600080fd5b50565b6152678161487d565b811461527257600080fd5b50565b61527e81614889565b811461528957600080fd5b50565b61529581614893565b81146152a057600080fd5b50565b6152ac816148df565b81146152b757600080fd5b5056fea26469706673582212206d1e1f96a7981ff2283155936d935258895e739fa6191f3ee5d4c71aebe1597c64736f6c63430008060033\";\nvar linkReferences = {};\nvar deployedLinkReferences = {};\nvar abi$1 = {\n  _format: _format,\n  contractName: contractName,\n  sourceName: sourceName,\n  abi: abi,\n  bytecode: bytecode,\n  deployedBytecode: deployedBytecode,\n  linkReferences: linkReferences,\n  deployedLinkReferences: deployedLinkReferences\n};\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nfunction getCjsExportFromNamespace(n) {\n  return n && n['default'] || n;\n}\n\nvar _nodeResolve_empty = {};\nvar _nodeResolve_empty$1 = {\n  __proto__: null,\n  'default': _nodeResolve_empty\n};\nvar require$$0 = getCjsExportFromNamespace(_nodeResolve_empty$1);\nvar bn = createCommonjsModule(function (module) {\n  (function (module, exports) {\n    // Utils\n    function assert(val, msg) {\n      if (!val) throw new Error(msg || 'Assertion failed');\n    } // Could use `inherits` module, but don't want to move from single file\n    // architecture yet.\n\n\n    function inherits(ctor, superCtor) {\n      ctor.super_ = superCtor;\n\n      var TempCtor = function () {};\n\n      TempCtor.prototype = superCtor.prototype;\n      ctor.prototype = new TempCtor();\n      ctor.prototype.constructor = ctor;\n    } // BN\n\n\n    function BN(number, base, endian) {\n      if (BN.isBN(number)) {\n        return number;\n      }\n\n      this.negative = 0;\n      this.words = null;\n      this.length = 0; // Reduction context\n\n      this.red = null;\n\n      if (number !== null) {\n        if (base === 'le' || base === 'be') {\n          endian = base;\n          base = 10;\n        }\n\n        this._init(number || 0, base || 10, endian || 'be');\n      }\n    }\n\n    if (typeof module === 'object') {\n      module.exports = BN;\n    } else {\n      exports.BN = BN;\n    }\n\n    BN.BN = BN;\n    BN.wordSize = 26;\n    var Buffer;\n\n    try {\n      if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n        Buffer = window.Buffer;\n      } else {\n        Buffer = require$$0.Buffer;\n      }\n    } catch (e) {}\n\n    BN.isBN = function isBN(num) {\n      if (num instanceof BN) {\n        return true;\n      }\n\n      return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n    };\n\n    BN.max = function max(left, right) {\n      if (left.cmp(right) > 0) return left;\n      return right;\n    };\n\n    BN.min = function min(left, right) {\n      if (left.cmp(right) < 0) return left;\n      return right;\n    };\n\n    BN.prototype._init = function init(number, base, endian) {\n      if (typeof number === 'number') {\n        return this._initNumber(number, base, endian);\n      }\n\n      if (typeof number === 'object') {\n        return this._initArray(number, base, endian);\n      }\n\n      if (base === 'hex') {\n        base = 16;\n      }\n\n      assert(base === (base | 0) && base >= 2 && base <= 36);\n      number = number.toString().replace(/\\s+/g, '');\n      var start = 0;\n\n      if (number[0] === '-') {\n        start++;\n        this.negative = 1;\n      }\n\n      if (start < number.length) {\n        if (base === 16) {\n          this._parseHex(number, start, endian);\n        } else {\n          this._parseBase(number, base, start);\n\n          if (endian === 'le') {\n            this._initArray(this.toArray(), base, endian);\n          }\n        }\n      }\n    };\n\n    BN.prototype._initNumber = function _initNumber(number, base, endian) {\n      if (number < 0) {\n        this.negative = 1;\n        number = -number;\n      }\n\n      if (number < 0x4000000) {\n        this.words = [number & 0x3ffffff];\n        this.length = 1;\n      } else if (number < 0x10000000000000) {\n        this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n        this.length = 2;\n      } else {\n        assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\n        this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n        this.length = 3;\n      }\n\n      if (endian !== 'le') return; // Reverse the bytes\n\n      this._initArray(this.toArray(), base, endian);\n    };\n\n    BN.prototype._initArray = function _initArray(number, base, endian) {\n      // Perhaps a Uint8Array\n      assert(typeof number.length === 'number');\n\n      if (number.length <= 0) {\n        this.words = [0];\n        this.length = 1;\n        return this;\n      }\n\n      this.length = Math.ceil(number.length / 3);\n      this.words = new Array(this.length);\n\n      for (var i = 0; i < this.length; i++) {\n        this.words[i] = 0;\n      }\n\n      var j, w;\n      var off = 0;\n\n      if (endian === 'be') {\n        for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n          w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n          this.words[j] |= w << off & 0x3ffffff;\n          this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n          off += 24;\n\n          if (off >= 26) {\n            off -= 26;\n            j++;\n          }\n        }\n      } else if (endian === 'le') {\n        for (i = 0, j = 0; i < number.length; i += 3) {\n          w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n          this.words[j] |= w << off & 0x3ffffff;\n          this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n          off += 24;\n\n          if (off >= 26) {\n            off -= 26;\n            j++;\n          }\n        }\n      }\n\n      return this.strip();\n    };\n\n    function parseHex4Bits(string, index) {\n      var c = string.charCodeAt(index); // 'A' - 'F'\n\n      if (c >= 65 && c <= 70) {\n        return c - 55; // 'a' - 'f'\n      } else if (c >= 97 && c <= 102) {\n        return c - 87; // '0' - '9'\n      } else {\n        return c - 48 & 0xf;\n      }\n    }\n\n    function parseHexByte(string, lowerBound, index) {\n      var r = parseHex4Bits(string, index);\n\n      if (index - 1 >= lowerBound) {\n        r |= parseHex4Bits(string, index - 1) << 4;\n      }\n\n      return r;\n    }\n\n    BN.prototype._parseHex = function _parseHex(number, start, endian) {\n      // Create possibly bigger array to ensure that it fits the number\n      this.length = Math.ceil((number.length - start) / 6);\n      this.words = new Array(this.length);\n\n      for (var i = 0; i < this.length; i++) {\n        this.words[i] = 0;\n      } // 24-bits chunks\n\n\n      var off = 0;\n      var j = 0;\n      var w;\n\n      if (endian === 'be') {\n        for (i = number.length - 1; i >= start; i -= 2) {\n          w = parseHexByte(number, start, i) << off;\n          this.words[j] |= w & 0x3ffffff;\n\n          if (off >= 18) {\n            off -= 18;\n            j += 1;\n            this.words[j] |= w >>> 26;\n          } else {\n            off += 8;\n          }\n        }\n      } else {\n        var parseLength = number.length - start;\n\n        for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n          w = parseHexByte(number, start, i) << off;\n          this.words[j] |= w & 0x3ffffff;\n\n          if (off >= 18) {\n            off -= 18;\n            j += 1;\n            this.words[j] |= w >>> 26;\n          } else {\n            off += 8;\n          }\n        }\n      }\n\n      this.strip();\n    };\n\n    function parseBase(str, start, end, mul) {\n      var r = 0;\n      var len = Math.min(str.length, end);\n\n      for (var i = start; i < len; i++) {\n        var c = str.charCodeAt(i) - 48;\n        r *= mul; // 'a'\n\n        if (c >= 49) {\n          r += c - 49 + 0xa; // 'A'\n        } else if (c >= 17) {\n          r += c - 17 + 0xa; // '0' - '9'\n        } else {\n          r += c;\n        }\n      }\n\n      return r;\n    }\n\n    BN.prototype._parseBase = function _parseBase(number, base, start) {\n      // Initialize as zero\n      this.words = [0];\n      this.length = 1; // Find length of limb in base\n\n      for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n        limbLen++;\n      }\n\n      limbLen--;\n      limbPow = limbPow / base | 0;\n      var total = number.length - start;\n      var mod = total % limbLen;\n      var end = Math.min(total, total - mod) + start;\n      var word = 0;\n\n      for (var i = start; i < end; i += limbLen) {\n        word = parseBase(number, i, i + limbLen, base);\n        this.imuln(limbPow);\n\n        if (this.words[0] + word < 0x4000000) {\n          this.words[0] += word;\n        } else {\n          this._iaddn(word);\n        }\n      }\n\n      if (mod !== 0) {\n        var pow = 1;\n        word = parseBase(number, i, number.length, base);\n\n        for (i = 0; i < mod; i++) {\n          pow *= base;\n        }\n\n        this.imuln(pow);\n\n        if (this.words[0] + word < 0x4000000) {\n          this.words[0] += word;\n        } else {\n          this._iaddn(word);\n        }\n      }\n\n      this.strip();\n    };\n\n    BN.prototype.copy = function copy(dest) {\n      dest.words = new Array(this.length);\n\n      for (var i = 0; i < this.length; i++) {\n        dest.words[i] = this.words[i];\n      }\n\n      dest.length = this.length;\n      dest.negative = this.negative;\n      dest.red = this.red;\n    };\n\n    BN.prototype.clone = function clone() {\n      var r = new BN(null);\n      this.copy(r);\n      return r;\n    };\n\n    BN.prototype._expand = function _expand(size) {\n      while (this.length < size) {\n        this.words[this.length++] = 0;\n      }\n\n      return this;\n    }; // Remove leading `0` from `this`\n\n\n    BN.prototype.strip = function strip() {\n      while (this.length > 1 && this.words[this.length - 1] === 0) {\n        this.length--;\n      }\n\n      return this._normSign();\n    };\n\n    BN.prototype._normSign = function _normSign() {\n      // -0 = 0\n      if (this.length === 1 && this.words[0] === 0) {\n        this.negative = 0;\n      }\n\n      return this;\n    };\n\n    BN.prototype.inspect = function inspect() {\n      return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n    };\n    /*\n     var zeros = [];\n    var groupSizes = [];\n    var groupBases = [];\n     var s = '';\n    var i = -1;\n    while (++i < BN.wordSize) {\n      zeros[i] = s;\n      s += '0';\n    }\n    groupSizes[0] = 0;\n    groupSizes[1] = 0;\n    groupBases[0] = 0;\n    groupBases[1] = 0;\n    var base = 2 - 1;\n    while (++base < 36 + 1) {\n      var groupSize = 0;\n      var groupBase = 1;\n      while (groupBase < (1 << BN.wordSize) / base) {\n        groupBase *= base;\n        groupSize += 1;\n      }\n      groupSizes[base] = groupSize;\n      groupBases[base] = groupBase;\n    }\n     */\n\n\n    var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n    var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n    var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n\n    BN.prototype.toString = function toString(base, padding) {\n      base = base || 10;\n      padding = padding | 0 || 1;\n      var out;\n\n      if (base === 16 || base === 'hex') {\n        out = '';\n        var off = 0;\n        var carry = 0;\n\n        for (var i = 0; i < this.length; i++) {\n          var w = this.words[i];\n          var word = ((w << off | carry) & 0xffffff).toString(16);\n          carry = w >>> 24 - off & 0xffffff;\n\n          if (carry !== 0 || i !== this.length - 1) {\n            out = zeros[6 - word.length] + word + out;\n          } else {\n            out = word + out;\n          }\n\n          off += 2;\n\n          if (off >= 26) {\n            off -= 26;\n            i--;\n          }\n        }\n\n        if (carry !== 0) {\n          out = carry.toString(16) + out;\n        }\n\n        while (out.length % padding !== 0) {\n          out = '0' + out;\n        }\n\n        if (this.negative !== 0) {\n          out = '-' + out;\n        }\n\n        return out;\n      }\n\n      if (base === (base | 0) && base >= 2 && base <= 36) {\n        // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n        var groupSize = groupSizes[base]; // var groupBase = Math.pow(base, groupSize);\n\n        var groupBase = groupBases[base];\n        out = '';\n        var c = this.clone();\n        c.negative = 0;\n\n        while (!c.isZero()) {\n          var r = c.modn(groupBase).toString(base);\n          c = c.idivn(groupBase);\n\n          if (!c.isZero()) {\n            out = zeros[groupSize - r.length] + r + out;\n          } else {\n            out = r + out;\n          }\n        }\n\n        if (this.isZero()) {\n          out = '0' + out;\n        }\n\n        while (out.length % padding !== 0) {\n          out = '0' + out;\n        }\n\n        if (this.negative !== 0) {\n          out = '-' + out;\n        }\n\n        return out;\n      }\n\n      assert(false, 'Base should be between 2 and 36');\n    };\n\n    BN.prototype.toNumber = function toNumber() {\n      var ret = this.words[0];\n\n      if (this.length === 2) {\n        ret += this.words[1] * 0x4000000;\n      } else if (this.length === 3 && this.words[2] === 0x01) {\n        // NOTE: at this stage it is known that the top bit is set\n        ret += 0x10000000000000 + this.words[1] * 0x4000000;\n      } else if (this.length > 2) {\n        assert(false, 'Number can only safely store up to 53 bits');\n      }\n\n      return this.negative !== 0 ? -ret : ret;\n    };\n\n    BN.prototype.toJSON = function toJSON() {\n      return this.toString(16);\n    };\n\n    BN.prototype.toBuffer = function toBuffer(endian, length) {\n      assert(typeof Buffer !== 'undefined');\n      return this.toArrayLike(Buffer, endian, length);\n    };\n\n    BN.prototype.toArray = function toArray(endian, length) {\n      return this.toArrayLike(Array, endian, length);\n    };\n\n    BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n      var byteLength = this.byteLength();\n      var reqLength = length || Math.max(1, byteLength);\n      assert(byteLength <= reqLength, 'byte array longer than desired length');\n      assert(reqLength > 0, 'Requested array length <= 0');\n      this.strip();\n      var littleEndian = endian === 'le';\n      var res = new ArrayType(reqLength);\n      var b, i;\n      var q = this.clone();\n\n      if (!littleEndian) {\n        // Assume big-endian\n        for (i = 0; i < reqLength - byteLength; i++) {\n          res[i] = 0;\n        }\n\n        for (i = 0; !q.isZero(); i++) {\n          b = q.andln(0xff);\n          q.iushrn(8);\n          res[reqLength - i - 1] = b;\n        }\n      } else {\n        for (i = 0; !q.isZero(); i++) {\n          b = q.andln(0xff);\n          q.iushrn(8);\n          res[i] = b;\n        }\n\n        for (; i < reqLength; i++) {\n          res[i] = 0;\n        }\n      }\n\n      return res;\n    };\n\n    if (Math.clz32) {\n      BN.prototype._countBits = function _countBits(w) {\n        return 32 - Math.clz32(w);\n      };\n    } else {\n      BN.prototype._countBits = function _countBits(w) {\n        var t = w;\n        var r = 0;\n\n        if (t >= 0x1000) {\n          r += 13;\n          t >>>= 13;\n        }\n\n        if (t >= 0x40) {\n          r += 7;\n          t >>>= 7;\n        }\n\n        if (t >= 0x8) {\n          r += 4;\n          t >>>= 4;\n        }\n\n        if (t >= 0x02) {\n          r += 2;\n          t >>>= 2;\n        }\n\n        return r + t;\n      };\n    }\n\n    BN.prototype._zeroBits = function _zeroBits(w) {\n      // Short-cut\n      if (w === 0) return 26;\n      var t = w;\n      var r = 0;\n\n      if ((t & 0x1fff) === 0) {\n        r += 13;\n        t >>>= 13;\n      }\n\n      if ((t & 0x7f) === 0) {\n        r += 7;\n        t >>>= 7;\n      }\n\n      if ((t & 0xf) === 0) {\n        r += 4;\n        t >>>= 4;\n      }\n\n      if ((t & 0x3) === 0) {\n        r += 2;\n        t >>>= 2;\n      }\n\n      if ((t & 0x1) === 0) {\n        r++;\n      }\n\n      return r;\n    }; // Return number of used bits in a BN\n\n\n    BN.prototype.bitLength = function bitLength() {\n      var w = this.words[this.length - 1];\n\n      var hi = this._countBits(w);\n\n      return (this.length - 1) * 26 + hi;\n    };\n\n    function toBitArray(num) {\n      var w = new Array(num.bitLength());\n\n      for (var bit = 0; bit < w.length; bit++) {\n        var off = bit / 26 | 0;\n        var wbit = bit % 26;\n        w[bit] = (num.words[off] & 1 << wbit) >>> wbit;\n      }\n\n      return w;\n    } // Number of trailing zero bits\n\n\n    BN.prototype.zeroBits = function zeroBits() {\n      if (this.isZero()) return 0;\n      var r = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var b = this._zeroBits(this.words[i]);\n\n        r += b;\n        if (b !== 26) break;\n      }\n\n      return r;\n    };\n\n    BN.prototype.byteLength = function byteLength() {\n      return Math.ceil(this.bitLength() / 8);\n    };\n\n    BN.prototype.toTwos = function toTwos(width) {\n      if (this.negative !== 0) {\n        return this.abs().inotn(width).iaddn(1);\n      }\n\n      return this.clone();\n    };\n\n    BN.prototype.fromTwos = function fromTwos(width) {\n      if (this.testn(width - 1)) {\n        return this.notn(width).iaddn(1).ineg();\n      }\n\n      return this.clone();\n    };\n\n    BN.prototype.isNeg = function isNeg() {\n      return this.negative !== 0;\n    }; // Return negative clone of `this`\n\n\n    BN.prototype.neg = function neg() {\n      return this.clone().ineg();\n    };\n\n    BN.prototype.ineg = function ineg() {\n      if (!this.isZero()) {\n        this.negative ^= 1;\n      }\n\n      return this;\n    }; // Or `num` with `this` in-place\n\n\n    BN.prototype.iuor = function iuor(num) {\n      while (this.length < num.length) {\n        this.words[this.length++] = 0;\n      }\n\n      for (var i = 0; i < num.length; i++) {\n        this.words[i] = this.words[i] | num.words[i];\n      }\n\n      return this.strip();\n    };\n\n    BN.prototype.ior = function ior(num) {\n      assert((this.negative | num.negative) === 0);\n      return this.iuor(num);\n    }; // Or `num` with `this`\n\n\n    BN.prototype.or = function or(num) {\n      if (this.length > num.length) return this.clone().ior(num);\n      return num.clone().ior(this);\n    };\n\n    BN.prototype.uor = function uor(num) {\n      if (this.length > num.length) return this.clone().iuor(num);\n      return num.clone().iuor(this);\n    }; // And `num` with `this` in-place\n\n\n    BN.prototype.iuand = function iuand(num) {\n      // b = min-length(num, this)\n      var b;\n\n      if (this.length > num.length) {\n        b = num;\n      } else {\n        b = this;\n      }\n\n      for (var i = 0; i < b.length; i++) {\n        this.words[i] = this.words[i] & num.words[i];\n      }\n\n      this.length = b.length;\n      return this.strip();\n    };\n\n    BN.prototype.iand = function iand(num) {\n      assert((this.negative | num.negative) === 0);\n      return this.iuand(num);\n    }; // And `num` with `this`\n\n\n    BN.prototype.and = function and(num) {\n      if (this.length > num.length) return this.clone().iand(num);\n      return num.clone().iand(this);\n    };\n\n    BN.prototype.uand = function uand(num) {\n      if (this.length > num.length) return this.clone().iuand(num);\n      return num.clone().iuand(this);\n    }; // Xor `num` with `this` in-place\n\n\n    BN.prototype.iuxor = function iuxor(num) {\n      // a.length > b.length\n      var a;\n      var b;\n\n      if (this.length > num.length) {\n        a = this;\n        b = num;\n      } else {\n        a = num;\n        b = this;\n      }\n\n      for (var i = 0; i < b.length; i++) {\n        this.words[i] = a.words[i] ^ b.words[i];\n      }\n\n      if (this !== a) {\n        for (; i < a.length; i++) {\n          this.words[i] = a.words[i];\n        }\n      }\n\n      this.length = a.length;\n      return this.strip();\n    };\n\n    BN.prototype.ixor = function ixor(num) {\n      assert((this.negative | num.negative) === 0);\n      return this.iuxor(num);\n    }; // Xor `num` with `this`\n\n\n    BN.prototype.xor = function xor(num) {\n      if (this.length > num.length) return this.clone().ixor(num);\n      return num.clone().ixor(this);\n    };\n\n    BN.prototype.uxor = function uxor(num) {\n      if (this.length > num.length) return this.clone().iuxor(num);\n      return num.clone().iuxor(this);\n    }; // Not ``this`` with ``width`` bitwidth\n\n\n    BN.prototype.inotn = function inotn(width) {\n      assert(typeof width === 'number' && width >= 0);\n      var bytesNeeded = Math.ceil(width / 26) | 0;\n      var bitsLeft = width % 26; // Extend the buffer with leading zeroes\n\n      this._expand(bytesNeeded);\n\n      if (bitsLeft > 0) {\n        bytesNeeded--;\n      } // Handle complete words\n\n\n      for (var i = 0; i < bytesNeeded; i++) {\n        this.words[i] = ~this.words[i] & 0x3ffffff;\n      } // Handle the residue\n\n\n      if (bitsLeft > 0) {\n        this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;\n      } // And remove leading zeroes\n\n\n      return this.strip();\n    };\n\n    BN.prototype.notn = function notn(width) {\n      return this.clone().inotn(width);\n    }; // Set `bit` of `this`\n\n\n    BN.prototype.setn = function setn(bit, val) {\n      assert(typeof bit === 'number' && bit >= 0);\n      var off = bit / 26 | 0;\n      var wbit = bit % 26;\n\n      this._expand(off + 1);\n\n      if (val) {\n        this.words[off] = this.words[off] | 1 << wbit;\n      } else {\n        this.words[off] = this.words[off] & ~(1 << wbit);\n      }\n\n      return this.strip();\n    }; // Add `num` to `this` in-place\n\n\n    BN.prototype.iadd = function iadd(num) {\n      var r; // negative + positive\n\n      if (this.negative !== 0 && num.negative === 0) {\n        this.negative = 0;\n        r = this.isub(num);\n        this.negative ^= 1;\n        return this._normSign(); // positive + negative\n      } else if (this.negative === 0 && num.negative !== 0) {\n        num.negative = 0;\n        r = this.isub(num);\n        num.negative = 1;\n        return r._normSign();\n      } // a.length > b.length\n\n\n      var a, b;\n\n      if (this.length > num.length) {\n        a = this;\n        b = num;\n      } else {\n        a = num;\n        b = this;\n      }\n\n      var carry = 0;\n\n      for (var i = 0; i < b.length; i++) {\n        r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n        this.words[i] = r & 0x3ffffff;\n        carry = r >>> 26;\n      }\n\n      for (; carry !== 0 && i < a.length; i++) {\n        r = (a.words[i] | 0) + carry;\n        this.words[i] = r & 0x3ffffff;\n        carry = r >>> 26;\n      }\n\n      this.length = a.length;\n\n      if (carry !== 0) {\n        this.words[this.length] = carry;\n        this.length++; // Copy the rest of the words\n      } else if (a !== this) {\n        for (; i < a.length; i++) {\n          this.words[i] = a.words[i];\n        }\n      }\n\n      return this;\n    }; // Add `num` to `this`\n\n\n    BN.prototype.add = function add(num) {\n      var res;\n\n      if (num.negative !== 0 && this.negative === 0) {\n        num.negative = 0;\n        res = this.sub(num);\n        num.negative ^= 1;\n        return res;\n      } else if (num.negative === 0 && this.negative !== 0) {\n        this.negative = 0;\n        res = num.sub(this);\n        this.negative = 1;\n        return res;\n      }\n\n      if (this.length > num.length) return this.clone().iadd(num);\n      return num.clone().iadd(this);\n    }; // Subtract `num` from `this` in-place\n\n\n    BN.prototype.isub = function isub(num) {\n      // this - (-num) = this + num\n      if (num.negative !== 0) {\n        num.negative = 0;\n        var r = this.iadd(num);\n        num.negative = 1;\n        return r._normSign(); // -this - num = -(this + num)\n      } else if (this.negative !== 0) {\n        this.negative = 0;\n        this.iadd(num);\n        this.negative = 1;\n        return this._normSign();\n      } // At this point both numbers are positive\n\n\n      var cmp = this.cmp(num); // Optimization - zeroify\n\n      if (cmp === 0) {\n        this.negative = 0;\n        this.length = 1;\n        this.words[0] = 0;\n        return this;\n      } // a > b\n\n\n      var a, b;\n\n      if (cmp > 0) {\n        a = this;\n        b = num;\n      } else {\n        a = num;\n        b = this;\n      }\n\n      var carry = 0;\n\n      for (var i = 0; i < b.length; i++) {\n        r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n        carry = r >> 26;\n        this.words[i] = r & 0x3ffffff;\n      }\n\n      for (; carry !== 0 && i < a.length; i++) {\n        r = (a.words[i] | 0) + carry;\n        carry = r >> 26;\n        this.words[i] = r & 0x3ffffff;\n      } // Copy rest of the words\n\n\n      if (carry === 0 && i < a.length && a !== this) {\n        for (; i < a.length; i++) {\n          this.words[i] = a.words[i];\n        }\n      }\n\n      this.length = Math.max(this.length, i);\n\n      if (a !== this) {\n        this.negative = 1;\n      }\n\n      return this.strip();\n    }; // Subtract `num` from `this`\n\n\n    BN.prototype.sub = function sub(num) {\n      return this.clone().isub(num);\n    };\n\n    function smallMulTo(self, num, out) {\n      out.negative = num.negative ^ self.negative;\n      var len = self.length + num.length | 0;\n      out.length = len;\n      len = len - 1 | 0; // Peel one iteration (compiler can't do it, because of code complexity)\n\n      var a = self.words[0] | 0;\n      var b = num.words[0] | 0;\n      var r = a * b;\n      var lo = r & 0x3ffffff;\n      var carry = r / 0x4000000 | 0;\n      out.words[0] = lo;\n\n      for (var k = 1; k < len; k++) {\n        // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n        // note that ncarry could be >= 0x3ffffff\n        var ncarry = carry >>> 26;\n        var rword = carry & 0x3ffffff;\n        var maxJ = Math.min(k, num.length - 1);\n\n        for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n          var i = k - j | 0;\n          a = self.words[i] | 0;\n          b = num.words[j] | 0;\n          r = a * b + rword;\n          ncarry += r / 0x4000000 | 0;\n          rword = r & 0x3ffffff;\n        }\n\n        out.words[k] = rword | 0;\n        carry = ncarry | 0;\n      }\n\n      if (carry !== 0) {\n        out.words[k] = carry | 0;\n      } else {\n        out.length--;\n      }\n\n      return out.strip();\n    } // TODO(indutny): it may be reasonable to omit it for users who don't need\n    // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n    // multiplication (like elliptic secp256k1).\n\n\n    var comb10MulTo = function comb10MulTo(self, num, out) {\n      var a = self.words;\n      var b = num.words;\n      var o = out.words;\n      var c = 0;\n      var lo;\n      var mid;\n      var hi;\n      var a0 = a[0] | 0;\n      var al0 = a0 & 0x1fff;\n      var ah0 = a0 >>> 13;\n      var a1 = a[1] | 0;\n      var al1 = a1 & 0x1fff;\n      var ah1 = a1 >>> 13;\n      var a2 = a[2] | 0;\n      var al2 = a2 & 0x1fff;\n      var ah2 = a2 >>> 13;\n      var a3 = a[3] | 0;\n      var al3 = a3 & 0x1fff;\n      var ah3 = a3 >>> 13;\n      var a4 = a[4] | 0;\n      var al4 = a4 & 0x1fff;\n      var ah4 = a4 >>> 13;\n      var a5 = a[5] | 0;\n      var al5 = a5 & 0x1fff;\n      var ah5 = a5 >>> 13;\n      var a6 = a[6] | 0;\n      var al6 = a6 & 0x1fff;\n      var ah6 = a6 >>> 13;\n      var a7 = a[7] | 0;\n      var al7 = a7 & 0x1fff;\n      var ah7 = a7 >>> 13;\n      var a8 = a[8] | 0;\n      var al8 = a8 & 0x1fff;\n      var ah8 = a8 >>> 13;\n      var a9 = a[9] | 0;\n      var al9 = a9 & 0x1fff;\n      var ah9 = a9 >>> 13;\n      var b0 = b[0] | 0;\n      var bl0 = b0 & 0x1fff;\n      var bh0 = b0 >>> 13;\n      var b1 = b[1] | 0;\n      var bl1 = b1 & 0x1fff;\n      var bh1 = b1 >>> 13;\n      var b2 = b[2] | 0;\n      var bl2 = b2 & 0x1fff;\n      var bh2 = b2 >>> 13;\n      var b3 = b[3] | 0;\n      var bl3 = b3 & 0x1fff;\n      var bh3 = b3 >>> 13;\n      var b4 = b[4] | 0;\n      var bl4 = b4 & 0x1fff;\n      var bh4 = b4 >>> 13;\n      var b5 = b[5] | 0;\n      var bl5 = b5 & 0x1fff;\n      var bh5 = b5 >>> 13;\n      var b6 = b[6] | 0;\n      var bl6 = b6 & 0x1fff;\n      var bh6 = b6 >>> 13;\n      var b7 = b[7] | 0;\n      var bl7 = b7 & 0x1fff;\n      var bh7 = b7 >>> 13;\n      var b8 = b[8] | 0;\n      var bl8 = b8 & 0x1fff;\n      var bh8 = b8 >>> 13;\n      var b9 = b[9] | 0;\n      var bl9 = b9 & 0x1fff;\n      var bh9 = b9 >>> 13;\n      out.negative = self.negative ^ num.negative;\n      out.length = 19;\n      /* k = 0 */\n\n      lo = Math.imul(al0, bl0);\n      mid = Math.imul(al0, bh0);\n      mid = mid + Math.imul(ah0, bl0) | 0;\n      hi = Math.imul(ah0, bh0);\n      var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n      w0 &= 0x3ffffff;\n      /* k = 1 */\n\n      lo = Math.imul(al1, bl0);\n      mid = Math.imul(al1, bh0);\n      mid = mid + Math.imul(ah1, bl0) | 0;\n      hi = Math.imul(ah1, bh0);\n      lo = lo + Math.imul(al0, bl1) | 0;\n      mid = mid + Math.imul(al0, bh1) | 0;\n      mid = mid + Math.imul(ah0, bl1) | 0;\n      hi = hi + Math.imul(ah0, bh1) | 0;\n      var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n      w1 &= 0x3ffffff;\n      /* k = 2 */\n\n      lo = Math.imul(al2, bl0);\n      mid = Math.imul(al2, bh0);\n      mid = mid + Math.imul(ah2, bl0) | 0;\n      hi = Math.imul(ah2, bh0);\n      lo = lo + Math.imul(al1, bl1) | 0;\n      mid = mid + Math.imul(al1, bh1) | 0;\n      mid = mid + Math.imul(ah1, bl1) | 0;\n      hi = hi + Math.imul(ah1, bh1) | 0;\n      lo = lo + Math.imul(al0, bl2) | 0;\n      mid = mid + Math.imul(al0, bh2) | 0;\n      mid = mid + Math.imul(ah0, bl2) | 0;\n      hi = hi + Math.imul(ah0, bh2) | 0;\n      var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n      w2 &= 0x3ffffff;\n      /* k = 3 */\n\n      lo = Math.imul(al3, bl0);\n      mid = Math.imul(al3, bh0);\n      mid = mid + Math.imul(ah3, bl0) | 0;\n      hi = Math.imul(ah3, bh0);\n      lo = lo + Math.imul(al2, bl1) | 0;\n      mid = mid + Math.imul(al2, bh1) | 0;\n      mid = mid + Math.imul(ah2, bl1) | 0;\n      hi = hi + Math.imul(ah2, bh1) | 0;\n      lo = lo + Math.imul(al1, bl2) | 0;\n      mid = mid + Math.imul(al1, bh2) | 0;\n      mid = mid + Math.imul(ah1, bl2) | 0;\n      hi = hi + Math.imul(ah1, bh2) | 0;\n      lo = lo + Math.imul(al0, bl3) | 0;\n      mid = mid + Math.imul(al0, bh3) | 0;\n      mid = mid + Math.imul(ah0, bl3) | 0;\n      hi = hi + Math.imul(ah0, bh3) | 0;\n      var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n      w3 &= 0x3ffffff;\n      /* k = 4 */\n\n      lo = Math.imul(al4, bl0);\n      mid = Math.imul(al4, bh0);\n      mid = mid + Math.imul(ah4, bl0) | 0;\n      hi = Math.imul(ah4, bh0);\n      lo = lo + Math.imul(al3, bl1) | 0;\n      mid = mid + Math.imul(al3, bh1) | 0;\n      mid = mid + Math.imul(ah3, bl1) | 0;\n      hi = hi + Math.imul(ah3, bh1) | 0;\n      lo = lo + Math.imul(al2, bl2) | 0;\n      mid = mid + Math.imul(al2, bh2) | 0;\n      mid = mid + Math.imul(ah2, bl2) | 0;\n      hi = hi + Math.imul(ah2, bh2) | 0;\n      lo = lo + Math.imul(al1, bl3) | 0;\n      mid = mid + Math.imul(al1, bh3) | 0;\n      mid = mid + Math.imul(ah1, bl3) | 0;\n      hi = hi + Math.imul(ah1, bh3) | 0;\n      lo = lo + Math.imul(al0, bl4) | 0;\n      mid = mid + Math.imul(al0, bh4) | 0;\n      mid = mid + Math.imul(ah0, bl4) | 0;\n      hi = hi + Math.imul(ah0, bh4) | 0;\n      var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n      w4 &= 0x3ffffff;\n      /* k = 5 */\n\n      lo = Math.imul(al5, bl0);\n      mid = Math.imul(al5, bh0);\n      mid = mid + Math.imul(ah5, bl0) | 0;\n      hi = Math.imul(ah5, bh0);\n      lo = lo + Math.imul(al4, bl1) | 0;\n      mid = mid + Math.imul(al4, bh1) | 0;\n      mid = mid + Math.imul(ah4, bl1) | 0;\n      hi = hi + Math.imul(ah4, bh1) | 0;\n      lo = lo + Math.imul(al3, bl2) | 0;\n      mid = mid + Math.imul(al3, bh2) | 0;\n      mid = mid + Math.imul(ah3, bl2) | 0;\n      hi = hi + Math.imul(ah3, bh2) | 0;\n      lo = lo + Math.imul(al2, bl3) | 0;\n      mid = mid + Math.imul(al2, bh3) | 0;\n      mid = mid + Math.imul(ah2, bl3) | 0;\n      hi = hi + Math.imul(ah2, bh3) | 0;\n      lo = lo + Math.imul(al1, bl4) | 0;\n      mid = mid + Math.imul(al1, bh4) | 0;\n      mid = mid + Math.imul(ah1, bl4) | 0;\n      hi = hi + Math.imul(ah1, bh4) | 0;\n      lo = lo + Math.imul(al0, bl5) | 0;\n      mid = mid + Math.imul(al0, bh5) | 0;\n      mid = mid + Math.imul(ah0, bl5) | 0;\n      hi = hi + Math.imul(ah0, bh5) | 0;\n      var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n      w5 &= 0x3ffffff;\n      /* k = 6 */\n\n      lo = Math.imul(al6, bl0);\n      mid = Math.imul(al6, bh0);\n      mid = mid + Math.imul(ah6, bl0) | 0;\n      hi = Math.imul(ah6, bh0);\n      lo = lo + Math.imul(al5, bl1) | 0;\n      mid = mid + Math.imul(al5, bh1) | 0;\n      mid = mid + Math.imul(ah5, bl1) | 0;\n      hi = hi + Math.imul(ah5, bh1) | 0;\n      lo = lo + Math.imul(al4, bl2) | 0;\n      mid = mid + Math.imul(al4, bh2) | 0;\n      mid = mid + Math.imul(ah4, bl2) | 0;\n      hi = hi + Math.imul(ah4, bh2) | 0;\n      lo = lo + Math.imul(al3, bl3) | 0;\n      mid = mid + Math.imul(al3, bh3) | 0;\n      mid = mid + Math.imul(ah3, bl3) | 0;\n      hi = hi + Math.imul(ah3, bh3) | 0;\n      lo = lo + Math.imul(al2, bl4) | 0;\n      mid = mid + Math.imul(al2, bh4) | 0;\n      mid = mid + Math.imul(ah2, bl4) | 0;\n      hi = hi + Math.imul(ah2, bh4) | 0;\n      lo = lo + Math.imul(al1, bl5) | 0;\n      mid = mid + Math.imul(al1, bh5) | 0;\n      mid = mid + Math.imul(ah1, bl5) | 0;\n      hi = hi + Math.imul(ah1, bh5) | 0;\n      lo = lo + Math.imul(al0, bl6) | 0;\n      mid = mid + Math.imul(al0, bh6) | 0;\n      mid = mid + Math.imul(ah0, bl6) | 0;\n      hi = hi + Math.imul(ah0, bh6) | 0;\n      var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n      w6 &= 0x3ffffff;\n      /* k = 7 */\n\n      lo = Math.imul(al7, bl0);\n      mid = Math.imul(al7, bh0);\n      mid = mid + Math.imul(ah7, bl0) | 0;\n      hi = Math.imul(ah7, bh0);\n      lo = lo + Math.imul(al6, bl1) | 0;\n      mid = mid + Math.imul(al6, bh1) | 0;\n      mid = mid + Math.imul(ah6, bl1) | 0;\n      hi = hi + Math.imul(ah6, bh1) | 0;\n      lo = lo + Math.imul(al5, bl2) | 0;\n      mid = mid + Math.imul(al5, bh2) | 0;\n      mid = mid + Math.imul(ah5, bl2) | 0;\n      hi = hi + Math.imul(ah5, bh2) | 0;\n      lo = lo + Math.imul(al4, bl3) | 0;\n      mid = mid + Math.imul(al4, bh3) | 0;\n      mid = mid + Math.imul(ah4, bl3) | 0;\n      hi = hi + Math.imul(ah4, bh3) | 0;\n      lo = lo + Math.imul(al3, bl4) | 0;\n      mid = mid + Math.imul(al3, bh4) | 0;\n      mid = mid + Math.imul(ah3, bl4) | 0;\n      hi = hi + Math.imul(ah3, bh4) | 0;\n      lo = lo + Math.imul(al2, bl5) | 0;\n      mid = mid + Math.imul(al2, bh5) | 0;\n      mid = mid + Math.imul(ah2, bl5) | 0;\n      hi = hi + Math.imul(ah2, bh5) | 0;\n      lo = lo + Math.imul(al1, bl6) | 0;\n      mid = mid + Math.imul(al1, bh6) | 0;\n      mid = mid + Math.imul(ah1, bl6) | 0;\n      hi = hi + Math.imul(ah1, bh6) | 0;\n      lo = lo + Math.imul(al0, bl7) | 0;\n      mid = mid + Math.imul(al0, bh7) | 0;\n      mid = mid + Math.imul(ah0, bl7) | 0;\n      hi = hi + Math.imul(ah0, bh7) | 0;\n      var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n      w7 &= 0x3ffffff;\n      /* k = 8 */\n\n      lo = Math.imul(al8, bl0);\n      mid = Math.imul(al8, bh0);\n      mid = mid + Math.imul(ah8, bl0) | 0;\n      hi = Math.imul(ah8, bh0);\n      lo = lo + Math.imul(al7, bl1) | 0;\n      mid = mid + Math.imul(al7, bh1) | 0;\n      mid = mid + Math.imul(ah7, bl1) | 0;\n      hi = hi + Math.imul(ah7, bh1) | 0;\n      lo = lo + Math.imul(al6, bl2) | 0;\n      mid = mid + Math.imul(al6, bh2) | 0;\n      mid = mid + Math.imul(ah6, bl2) | 0;\n      hi = hi + Math.imul(ah6, bh2) | 0;\n      lo = lo + Math.imul(al5, bl3) | 0;\n      mid = mid + Math.imul(al5, bh3) | 0;\n      mid = mid + Math.imul(ah5, bl3) | 0;\n      hi = hi + Math.imul(ah5, bh3) | 0;\n      lo = lo + Math.imul(al4, bl4) | 0;\n      mid = mid + Math.imul(al4, bh4) | 0;\n      mid = mid + Math.imul(ah4, bl4) | 0;\n      hi = hi + Math.imul(ah4, bh4) | 0;\n      lo = lo + Math.imul(al3, bl5) | 0;\n      mid = mid + Math.imul(al3, bh5) | 0;\n      mid = mid + Math.imul(ah3, bl5) | 0;\n      hi = hi + Math.imul(ah3, bh5) | 0;\n      lo = lo + Math.imul(al2, bl6) | 0;\n      mid = mid + Math.imul(al2, bh6) | 0;\n      mid = mid + Math.imul(ah2, bl6) | 0;\n      hi = hi + Math.imul(ah2, bh6) | 0;\n      lo = lo + Math.imul(al1, bl7) | 0;\n      mid = mid + Math.imul(al1, bh7) | 0;\n      mid = mid + Math.imul(ah1, bl7) | 0;\n      hi = hi + Math.imul(ah1, bh7) | 0;\n      lo = lo + Math.imul(al0, bl8) | 0;\n      mid = mid + Math.imul(al0, bh8) | 0;\n      mid = mid + Math.imul(ah0, bl8) | 0;\n      hi = hi + Math.imul(ah0, bh8) | 0;\n      var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n      w8 &= 0x3ffffff;\n      /* k = 9 */\n\n      lo = Math.imul(al9, bl0);\n      mid = Math.imul(al9, bh0);\n      mid = mid + Math.imul(ah9, bl0) | 0;\n      hi = Math.imul(ah9, bh0);\n      lo = lo + Math.imul(al8, bl1) | 0;\n      mid = mid + Math.imul(al8, bh1) | 0;\n      mid = mid + Math.imul(ah8, bl1) | 0;\n      hi = hi + Math.imul(ah8, bh1) | 0;\n      lo = lo + Math.imul(al7, bl2) | 0;\n      mid = mid + Math.imul(al7, bh2) | 0;\n      mid = mid + Math.imul(ah7, bl2) | 0;\n      hi = hi + Math.imul(ah7, bh2) | 0;\n      lo = lo + Math.imul(al6, bl3) | 0;\n      mid = mid + Math.imul(al6, bh3) | 0;\n      mid = mid + Math.imul(ah6, bl3) | 0;\n      hi = hi + Math.imul(ah6, bh3) | 0;\n      lo = lo + Math.imul(al5, bl4) | 0;\n      mid = mid + Math.imul(al5, bh4) | 0;\n      mid = mid + Math.imul(ah5, bl4) | 0;\n      hi = hi + Math.imul(ah5, bh4) | 0;\n      lo = lo + Math.imul(al4, bl5) | 0;\n      mid = mid + Math.imul(al4, bh5) | 0;\n      mid = mid + Math.imul(ah4, bl5) | 0;\n      hi = hi + Math.imul(ah4, bh5) | 0;\n      lo = lo + Math.imul(al3, bl6) | 0;\n      mid = mid + Math.imul(al3, bh6) | 0;\n      mid = mid + Math.imul(ah3, bl6) | 0;\n      hi = hi + Math.imul(ah3, bh6) | 0;\n      lo = lo + Math.imul(al2, bl7) | 0;\n      mid = mid + Math.imul(al2, bh7) | 0;\n      mid = mid + Math.imul(ah2, bl7) | 0;\n      hi = hi + Math.imul(ah2, bh7) | 0;\n      lo = lo + Math.imul(al1, bl8) | 0;\n      mid = mid + Math.imul(al1, bh8) | 0;\n      mid = mid + Math.imul(ah1, bl8) | 0;\n      hi = hi + Math.imul(ah1, bh8) | 0;\n      lo = lo + Math.imul(al0, bl9) | 0;\n      mid = mid + Math.imul(al0, bh9) | 0;\n      mid = mid + Math.imul(ah0, bl9) | 0;\n      hi = hi + Math.imul(ah0, bh9) | 0;\n      var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n      w9 &= 0x3ffffff;\n      /* k = 10 */\n\n      lo = Math.imul(al9, bl1);\n      mid = Math.imul(al9, bh1);\n      mid = mid + Math.imul(ah9, bl1) | 0;\n      hi = Math.imul(ah9, bh1);\n      lo = lo + Math.imul(al8, bl2) | 0;\n      mid = mid + Math.imul(al8, bh2) | 0;\n      mid = mid + Math.imul(ah8, bl2) | 0;\n      hi = hi + Math.imul(ah8, bh2) | 0;\n      lo = lo + Math.imul(al7, bl3) | 0;\n      mid = mid + Math.imul(al7, bh3) | 0;\n      mid = mid + Math.imul(ah7, bl3) | 0;\n      hi = hi + Math.imul(ah7, bh3) | 0;\n      lo = lo + Math.imul(al6, bl4) | 0;\n      mid = mid + Math.imul(al6, bh4) | 0;\n      mid = mid + Math.imul(ah6, bl4) | 0;\n      hi = hi + Math.imul(ah6, bh4) | 0;\n      lo = lo + Math.imul(al5, bl5) | 0;\n      mid = mid + Math.imul(al5, bh5) | 0;\n      mid = mid + Math.imul(ah5, bl5) | 0;\n      hi = hi + Math.imul(ah5, bh5) | 0;\n      lo = lo + Math.imul(al4, bl6) | 0;\n      mid = mid + Math.imul(al4, bh6) | 0;\n      mid = mid + Math.imul(ah4, bl6) | 0;\n      hi = hi + Math.imul(ah4, bh6) | 0;\n      lo = lo + Math.imul(al3, bl7) | 0;\n      mid = mid + Math.imul(al3, bh7) | 0;\n      mid = mid + Math.imul(ah3, bl7) | 0;\n      hi = hi + Math.imul(ah3, bh7) | 0;\n      lo = lo + Math.imul(al2, bl8) | 0;\n      mid = mid + Math.imul(al2, bh8) | 0;\n      mid = mid + Math.imul(ah2, bl8) | 0;\n      hi = hi + Math.imul(ah2, bh8) | 0;\n      lo = lo + Math.imul(al1, bl9) | 0;\n      mid = mid + Math.imul(al1, bh9) | 0;\n      mid = mid + Math.imul(ah1, bl9) | 0;\n      hi = hi + Math.imul(ah1, bh9) | 0;\n      var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n      w10 &= 0x3ffffff;\n      /* k = 11 */\n\n      lo = Math.imul(al9, bl2);\n      mid = Math.imul(al9, bh2);\n      mid = mid + Math.imul(ah9, bl2) | 0;\n      hi = Math.imul(ah9, bh2);\n      lo = lo + Math.imul(al8, bl3) | 0;\n      mid = mid + Math.imul(al8, bh3) | 0;\n      mid = mid + Math.imul(ah8, bl3) | 0;\n      hi = hi + Math.imul(ah8, bh3) | 0;\n      lo = lo + Math.imul(al7, bl4) | 0;\n      mid = mid + Math.imul(al7, bh4) | 0;\n      mid = mid + Math.imul(ah7, bl4) | 0;\n      hi = hi + Math.imul(ah7, bh4) | 0;\n      lo = lo + Math.imul(al6, bl5) | 0;\n      mid = mid + Math.imul(al6, bh5) | 0;\n      mid = mid + Math.imul(ah6, bl5) | 0;\n      hi = hi + Math.imul(ah6, bh5) | 0;\n      lo = lo + Math.imul(al5, bl6) | 0;\n      mid = mid + Math.imul(al5, bh6) | 0;\n      mid = mid + Math.imul(ah5, bl6) | 0;\n      hi = hi + Math.imul(ah5, bh6) | 0;\n      lo = lo + Math.imul(al4, bl7) | 0;\n      mid = mid + Math.imul(al4, bh7) | 0;\n      mid = mid + Math.imul(ah4, bl7) | 0;\n      hi = hi + Math.imul(ah4, bh7) | 0;\n      lo = lo + Math.imul(al3, bl8) | 0;\n      mid = mid + Math.imul(al3, bh8) | 0;\n      mid = mid + Math.imul(ah3, bl8) | 0;\n      hi = hi + Math.imul(ah3, bh8) | 0;\n      lo = lo + Math.imul(al2, bl9) | 0;\n      mid = mid + Math.imul(al2, bh9) | 0;\n      mid = mid + Math.imul(ah2, bl9) | 0;\n      hi = hi + Math.imul(ah2, bh9) | 0;\n      var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n      w11 &= 0x3ffffff;\n      /* k = 12 */\n\n      lo = Math.imul(al9, bl3);\n      mid = Math.imul(al9, bh3);\n      mid = mid + Math.imul(ah9, bl3) | 0;\n      hi = Math.imul(ah9, bh3);\n      lo = lo + Math.imul(al8, bl4) | 0;\n      mid = mid + Math.imul(al8, bh4) | 0;\n      mid = mid + Math.imul(ah8, bl4) | 0;\n      hi = hi + Math.imul(ah8, bh4) | 0;\n      lo = lo + Math.imul(al7, bl5) | 0;\n      mid = mid + Math.imul(al7, bh5) | 0;\n      mid = mid + Math.imul(ah7, bl5) | 0;\n      hi = hi + Math.imul(ah7, bh5) | 0;\n      lo = lo + Math.imul(al6, bl6) | 0;\n      mid = mid + Math.imul(al6, bh6) | 0;\n      mid = mid + Math.imul(ah6, bl6) | 0;\n      hi = hi + Math.imul(ah6, bh6) | 0;\n      lo = lo + Math.imul(al5, bl7) | 0;\n      mid = mid + Math.imul(al5, bh7) | 0;\n      mid = mid + Math.imul(ah5, bl7) | 0;\n      hi = hi + Math.imul(ah5, bh7) | 0;\n      lo = lo + Math.imul(al4, bl8) | 0;\n      mid = mid + Math.imul(al4, bh8) | 0;\n      mid = mid + Math.imul(ah4, bl8) | 0;\n      hi = hi + Math.imul(ah4, bh8) | 0;\n      lo = lo + Math.imul(al3, bl9) | 0;\n      mid = mid + Math.imul(al3, bh9) | 0;\n      mid = mid + Math.imul(ah3, bl9) | 0;\n      hi = hi + Math.imul(ah3, bh9) | 0;\n      var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n      w12 &= 0x3ffffff;\n      /* k = 13 */\n\n      lo = Math.imul(al9, bl4);\n      mid = Math.imul(al9, bh4);\n      mid = mid + Math.imul(ah9, bl4) | 0;\n      hi = Math.imul(ah9, bh4);\n      lo = lo + Math.imul(al8, bl5) | 0;\n      mid = mid + Math.imul(al8, bh5) | 0;\n      mid = mid + Math.imul(ah8, bl5) | 0;\n      hi = hi + Math.imul(ah8, bh5) | 0;\n      lo = lo + Math.imul(al7, bl6) | 0;\n      mid = mid + Math.imul(al7, bh6) | 0;\n      mid = mid + Math.imul(ah7, bl6) | 0;\n      hi = hi + Math.imul(ah7, bh6) | 0;\n      lo = lo + Math.imul(al6, bl7) | 0;\n      mid = mid + Math.imul(al6, bh7) | 0;\n      mid = mid + Math.imul(ah6, bl7) | 0;\n      hi = hi + Math.imul(ah6, bh7) | 0;\n      lo = lo + Math.imul(al5, bl8) | 0;\n      mid = mid + Math.imul(al5, bh8) | 0;\n      mid = mid + Math.imul(ah5, bl8) | 0;\n      hi = hi + Math.imul(ah5, bh8) | 0;\n      lo = lo + Math.imul(al4, bl9) | 0;\n      mid = mid + Math.imul(al4, bh9) | 0;\n      mid = mid + Math.imul(ah4, bl9) | 0;\n      hi = hi + Math.imul(ah4, bh9) | 0;\n      var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n      w13 &= 0x3ffffff;\n      /* k = 14 */\n\n      lo = Math.imul(al9, bl5);\n      mid = Math.imul(al9, bh5);\n      mid = mid + Math.imul(ah9, bl5) | 0;\n      hi = Math.imul(ah9, bh5);\n      lo = lo + Math.imul(al8, bl6) | 0;\n      mid = mid + Math.imul(al8, bh6) | 0;\n      mid = mid + Math.imul(ah8, bl6) | 0;\n      hi = hi + Math.imul(ah8, bh6) | 0;\n      lo = lo + Math.imul(al7, bl7) | 0;\n      mid = mid + Math.imul(al7, bh7) | 0;\n      mid = mid + Math.imul(ah7, bl7) | 0;\n      hi = hi + Math.imul(ah7, bh7) | 0;\n      lo = lo + Math.imul(al6, bl8) | 0;\n      mid = mid + Math.imul(al6, bh8) | 0;\n      mid = mid + Math.imul(ah6, bl8) | 0;\n      hi = hi + Math.imul(ah6, bh8) | 0;\n      lo = lo + Math.imul(al5, bl9) | 0;\n      mid = mid + Math.imul(al5, bh9) | 0;\n      mid = mid + Math.imul(ah5, bl9) | 0;\n      hi = hi + Math.imul(ah5, bh9) | 0;\n      var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n      w14 &= 0x3ffffff;\n      /* k = 15 */\n\n      lo = Math.imul(al9, bl6);\n      mid = Math.imul(al9, bh6);\n      mid = mid + Math.imul(ah9, bl6) | 0;\n      hi = Math.imul(ah9, bh6);\n      lo = lo + Math.imul(al8, bl7) | 0;\n      mid = mid + Math.imul(al8, bh7) | 0;\n      mid = mid + Math.imul(ah8, bl7) | 0;\n      hi = hi + Math.imul(ah8, bh7) | 0;\n      lo = lo + Math.imul(al7, bl8) | 0;\n      mid = mid + Math.imul(al7, bh8) | 0;\n      mid = mid + Math.imul(ah7, bl8) | 0;\n      hi = hi + Math.imul(ah7, bh8) | 0;\n      lo = lo + Math.imul(al6, bl9) | 0;\n      mid = mid + Math.imul(al6, bh9) | 0;\n      mid = mid + Math.imul(ah6, bl9) | 0;\n      hi = hi + Math.imul(ah6, bh9) | 0;\n      var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n      w15 &= 0x3ffffff;\n      /* k = 16 */\n\n      lo = Math.imul(al9, bl7);\n      mid = Math.imul(al9, bh7);\n      mid = mid + Math.imul(ah9, bl7) | 0;\n      hi = Math.imul(ah9, bh7);\n      lo = lo + Math.imul(al8, bl8) | 0;\n      mid = mid + Math.imul(al8, bh8) | 0;\n      mid = mid + Math.imul(ah8, bl8) | 0;\n      hi = hi + Math.imul(ah8, bh8) | 0;\n      lo = lo + Math.imul(al7, bl9) | 0;\n      mid = mid + Math.imul(al7, bh9) | 0;\n      mid = mid + Math.imul(ah7, bl9) | 0;\n      hi = hi + Math.imul(ah7, bh9) | 0;\n      var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n      w16 &= 0x3ffffff;\n      /* k = 17 */\n\n      lo = Math.imul(al9, bl8);\n      mid = Math.imul(al9, bh8);\n      mid = mid + Math.imul(ah9, bl8) | 0;\n      hi = Math.imul(ah9, bh8);\n      lo = lo + Math.imul(al8, bl9) | 0;\n      mid = mid + Math.imul(al8, bh9) | 0;\n      mid = mid + Math.imul(ah8, bl9) | 0;\n      hi = hi + Math.imul(ah8, bh9) | 0;\n      var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n      w17 &= 0x3ffffff;\n      /* k = 18 */\n\n      lo = Math.imul(al9, bl9);\n      mid = Math.imul(al9, bh9);\n      mid = mid + Math.imul(ah9, bl9) | 0;\n      hi = Math.imul(ah9, bh9);\n      var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n      w18 &= 0x3ffffff;\n      o[0] = w0;\n      o[1] = w1;\n      o[2] = w2;\n      o[3] = w3;\n      o[4] = w4;\n      o[5] = w5;\n      o[6] = w6;\n      o[7] = w7;\n      o[8] = w8;\n      o[9] = w9;\n      o[10] = w10;\n      o[11] = w11;\n      o[12] = w12;\n      o[13] = w13;\n      o[14] = w14;\n      o[15] = w15;\n      o[16] = w16;\n      o[17] = w17;\n      o[18] = w18;\n\n      if (c !== 0) {\n        o[19] = c;\n        out.length++;\n      }\n\n      return out;\n    }; // Polyfill comb\n\n\n    if (!Math.imul) {\n      comb10MulTo = smallMulTo;\n    }\n\n    function bigMulTo(self, num, out) {\n      out.negative = num.negative ^ self.negative;\n      out.length = self.length + num.length;\n      var carry = 0;\n      var hncarry = 0;\n\n      for (var k = 0; k < out.length - 1; k++) {\n        // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n        // note that ncarry could be >= 0x3ffffff\n        var ncarry = hncarry;\n        hncarry = 0;\n        var rword = carry & 0x3ffffff;\n        var maxJ = Math.min(k, num.length - 1);\n\n        for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n          var i = k - j;\n          var a = self.words[i] | 0;\n          var b = num.words[j] | 0;\n          var r = a * b;\n          var lo = r & 0x3ffffff;\n          ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n          lo = lo + rword | 0;\n          rword = lo & 0x3ffffff;\n          ncarry = ncarry + (lo >>> 26) | 0;\n          hncarry += ncarry >>> 26;\n          ncarry &= 0x3ffffff;\n        }\n\n        out.words[k] = rword;\n        carry = ncarry;\n        ncarry = hncarry;\n      }\n\n      if (carry !== 0) {\n        out.words[k] = carry;\n      } else {\n        out.length--;\n      }\n\n      return out.strip();\n    }\n\n    function jumboMulTo(self, num, out) {\n      var fftm = new FFTM();\n      return fftm.mulp(self, num, out);\n    }\n\n    BN.prototype.mulTo = function mulTo(num, out) {\n      var res;\n      var len = this.length + num.length;\n\n      if (this.length === 10 && num.length === 10) {\n        res = comb10MulTo(this, num, out);\n      } else if (len < 63) {\n        res = smallMulTo(this, num, out);\n      } else if (len < 1024) {\n        res = bigMulTo(this, num, out);\n      } else {\n        res = jumboMulTo(this, num, out);\n      }\n\n      return res;\n    }; // Cooley-Tukey algorithm for FFT\n    // slightly revisited to rely on looping instead of recursion\n\n\n    function FFTM(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n\n    FFTM.prototype.makeRBT = function makeRBT(N) {\n      var t = new Array(N);\n      var l = BN.prototype._countBits(N) - 1;\n\n      for (var i = 0; i < N; i++) {\n        t[i] = this.revBin(i, l, N);\n      }\n\n      return t;\n    }; // Returns binary-reversed representation of `x`\n\n\n    FFTM.prototype.revBin = function revBin(x, l, N) {\n      if (x === 0 || x === N - 1) return x;\n      var rb = 0;\n\n      for (var i = 0; i < l; i++) {\n        rb |= (x & 1) << l - i - 1;\n        x >>= 1;\n      }\n\n      return rb;\n    }; // Performs \"tweedling\" phase, therefore 'emulating'\n    // behaviour of the recursive algorithm\n\n\n    FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {\n      for (var i = 0; i < N; i++) {\n        rtws[i] = rws[rbt[i]];\n        itws[i] = iws[rbt[i]];\n      }\n    };\n\n    FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {\n      this.permute(rbt, rws, iws, rtws, itws, N);\n\n      for (var s = 1; s < N; s <<= 1) {\n        var l = s << 1;\n        var rtwdf = Math.cos(2 * Math.PI / l);\n        var itwdf = Math.sin(2 * Math.PI / l);\n\n        for (var p = 0; p < N; p += l) {\n          var rtwdf_ = rtwdf;\n          var itwdf_ = itwdf;\n\n          for (var j = 0; j < s; j++) {\n            var re = rtws[p + j];\n            var ie = itws[p + j];\n            var ro = rtws[p + j + s];\n            var io = itws[p + j + s];\n            var rx = rtwdf_ * ro - itwdf_ * io;\n            io = rtwdf_ * io + itwdf_ * ro;\n            ro = rx;\n            rtws[p + j] = re + ro;\n            itws[p + j] = ie + io;\n            rtws[p + j + s] = re - ro;\n            itws[p + j + s] = ie - io;\n            /* jshint maxdepth : false */\n\n            if (j !== l) {\n              rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n              itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n              rtwdf_ = rx;\n            }\n          }\n        }\n      }\n    };\n\n    FFTM.prototype.guessLen13b = function guessLen13b(n, m) {\n      var N = Math.max(m, n) | 1;\n      var odd = N & 1;\n      var i = 0;\n\n      for (N = N / 2 | 0; N; N = N >>> 1) {\n        i++;\n      }\n\n      return 1 << i + 1 + odd;\n    };\n\n    FFTM.prototype.conjugate = function conjugate(rws, iws, N) {\n      if (N <= 1) return;\n\n      for (var i = 0; i < N / 2; i++) {\n        var t = rws[i];\n        rws[i] = rws[N - i - 1];\n        rws[N - i - 1] = t;\n        t = iws[i];\n        iws[i] = -iws[N - i - 1];\n        iws[N - i - 1] = -t;\n      }\n    };\n\n    FFTM.prototype.normalize13b = function normalize13b(ws, N) {\n      var carry = 0;\n\n      for (var i = 0; i < N / 2; i++) {\n        var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;\n        ws[i] = w & 0x3ffffff;\n\n        if (w < 0x4000000) {\n          carry = 0;\n        } else {\n          carry = w / 0x4000000 | 0;\n        }\n      }\n\n      return ws;\n    };\n\n    FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {\n      var carry = 0;\n\n      for (var i = 0; i < len; i++) {\n        carry = carry + (ws[i] | 0);\n        rws[2 * i] = carry & 0x1fff;\n        carry = carry >>> 13;\n        rws[2 * i + 1] = carry & 0x1fff;\n        carry = carry >>> 13;\n      } // Pad with zeroes\n\n\n      for (i = 2 * len; i < N; ++i) {\n        rws[i] = 0;\n      }\n\n      assert(carry === 0);\n      assert((carry & ~0x1fff) === 0);\n    };\n\n    FFTM.prototype.stub = function stub(N) {\n      var ph = new Array(N);\n\n      for (var i = 0; i < N; i++) {\n        ph[i] = 0;\n      }\n\n      return ph;\n    };\n\n    FFTM.prototype.mulp = function mulp(x, y, out) {\n      var N = 2 * this.guessLen13b(x.length, y.length);\n      var rbt = this.makeRBT(N);\n\n      var _ = this.stub(N);\n\n      var rws = new Array(N);\n      var rwst = new Array(N);\n      var iwst = new Array(N);\n      var nrws = new Array(N);\n      var nrwst = new Array(N);\n      var niwst = new Array(N);\n      var rmws = out.words;\n      rmws.length = N;\n      this.convert13b(x.words, x.length, rws, N);\n      this.convert13b(y.words, y.length, nrws, N);\n      this.transform(rws, _, rwst, iwst, N, rbt);\n      this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n      for (var i = 0; i < N; i++) {\n        var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n        iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n        rwst[i] = rx;\n      }\n\n      this.conjugate(rwst, iwst, N);\n      this.transform(rwst, iwst, rmws, _, N, rbt);\n      this.conjugate(rmws, _, N);\n      this.normalize13b(rmws, N);\n      out.negative = x.negative ^ y.negative;\n      out.length = x.length + y.length;\n      return out.strip();\n    }; // Multiply `this` by `num`\n\n\n    BN.prototype.mul = function mul(num) {\n      var out = new BN(null);\n      out.words = new Array(this.length + num.length);\n      return this.mulTo(num, out);\n    }; // Multiply employing FFT\n\n\n    BN.prototype.mulf = function mulf(num) {\n      var out = new BN(null);\n      out.words = new Array(this.length + num.length);\n      return jumboMulTo(this, num, out);\n    }; // In-place Multiplication\n\n\n    BN.prototype.imul = function imul(num) {\n      return this.clone().mulTo(num, this);\n    };\n\n    BN.prototype.imuln = function imuln(num) {\n      assert(typeof num === 'number');\n      assert(num < 0x4000000); // Carry\n\n      var carry = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var w = (this.words[i] | 0) * num;\n        var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n        carry >>= 26;\n        carry += w / 0x4000000 | 0; // NOTE: lo is 27bit maximum\n\n        carry += lo >>> 26;\n        this.words[i] = lo & 0x3ffffff;\n      }\n\n      if (carry !== 0) {\n        this.words[i] = carry;\n        this.length++;\n      }\n\n      return this;\n    };\n\n    BN.prototype.muln = function muln(num) {\n      return this.clone().imuln(num);\n    }; // `this` * `this`\n\n\n    BN.prototype.sqr = function sqr() {\n      return this.mul(this);\n    }; // `this` * `this` in-place\n\n\n    BN.prototype.isqr = function isqr() {\n      return this.imul(this.clone());\n    }; // Math.pow(`this`, `num`)\n\n\n    BN.prototype.pow = function pow(num) {\n      var w = toBitArray(num);\n      if (w.length === 0) return new BN(1); // Skip leading zeroes\n\n      var res = this;\n\n      for (var i = 0; i < w.length; i++, res = res.sqr()) {\n        if (w[i] !== 0) break;\n      }\n\n      if (++i < w.length) {\n        for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n          if (w[i] === 0) continue;\n          res = res.mul(q);\n        }\n      }\n\n      return res;\n    }; // Shift-left in-place\n\n\n    BN.prototype.iushln = function iushln(bits) {\n      assert(typeof bits === 'number' && bits >= 0);\n      var r = bits % 26;\n      var s = (bits - r) / 26;\n      var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n      var i;\n\n      if (r !== 0) {\n        var carry = 0;\n\n        for (i = 0; i < this.length; i++) {\n          var newCarry = this.words[i] & carryMask;\n          var c = (this.words[i] | 0) - newCarry << r;\n          this.words[i] = c | carry;\n          carry = newCarry >>> 26 - r;\n        }\n\n        if (carry) {\n          this.words[i] = carry;\n          this.length++;\n        }\n      }\n\n      if (s !== 0) {\n        for (i = this.length - 1; i >= 0; i--) {\n          this.words[i + s] = this.words[i];\n        }\n\n        for (i = 0; i < s; i++) {\n          this.words[i] = 0;\n        }\n\n        this.length += s;\n      }\n\n      return this.strip();\n    };\n\n    BN.prototype.ishln = function ishln(bits) {\n      // TODO(indutny): implement me\n      assert(this.negative === 0);\n      return this.iushln(bits);\n    }; // Shift-right in-place\n    // NOTE: `hint` is a lowest bit before trailing zeroes\n    // NOTE: if `extended` is present - it will be filled with destroyed bits\n\n\n    BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n      assert(typeof bits === 'number' && bits >= 0);\n      var h;\n\n      if (hint) {\n        h = (hint - hint % 26) / 26;\n      } else {\n        h = 0;\n      }\n\n      var r = bits % 26;\n      var s = Math.min((bits - r) / 26, this.length);\n      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n      var maskedWords = extended;\n      h -= s;\n      h = Math.max(0, h); // Extended mode, copy masked part\n\n      if (maskedWords) {\n        for (var i = 0; i < s; i++) {\n          maskedWords.words[i] = this.words[i];\n        }\n\n        maskedWords.length = s;\n      }\n\n      if (s === 0) ;else if (this.length > s) {\n        this.length -= s;\n\n        for (i = 0; i < this.length; i++) {\n          this.words[i] = this.words[i + s];\n        }\n      } else {\n        this.words[0] = 0;\n        this.length = 1;\n      }\n      var carry = 0;\n\n      for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n        var word = this.words[i] | 0;\n        this.words[i] = carry << 26 - r | word >>> r;\n        carry = word & mask;\n      } // Push carried bits as a mask\n\n\n      if (maskedWords && carry !== 0) {\n        maskedWords.words[maskedWords.length++] = carry;\n      }\n\n      if (this.length === 0) {\n        this.words[0] = 0;\n        this.length = 1;\n      }\n\n      return this.strip();\n    };\n\n    BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n      // TODO(indutny): implement me\n      assert(this.negative === 0);\n      return this.iushrn(bits, hint, extended);\n    }; // Shift-left\n\n\n    BN.prototype.shln = function shln(bits) {\n      return this.clone().ishln(bits);\n    };\n\n    BN.prototype.ushln = function ushln(bits) {\n      return this.clone().iushln(bits);\n    }; // Shift-right\n\n\n    BN.prototype.shrn = function shrn(bits) {\n      return this.clone().ishrn(bits);\n    };\n\n    BN.prototype.ushrn = function ushrn(bits) {\n      return this.clone().iushrn(bits);\n    }; // Test if n bit is set\n\n\n    BN.prototype.testn = function testn(bit) {\n      assert(typeof bit === 'number' && bit >= 0);\n      var r = bit % 26;\n      var s = (bit - r) / 26;\n      var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n      if (this.length <= s) return false; // Check bit and return\n\n      var w = this.words[s];\n      return !!(w & q);\n    }; // Return only lowers bits of number (in-place)\n\n\n    BN.prototype.imaskn = function imaskn(bits) {\n      assert(typeof bits === 'number' && bits >= 0);\n      var r = bits % 26;\n      var s = (bits - r) / 26;\n      assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n      if (this.length <= s) {\n        return this;\n      }\n\n      if (r !== 0) {\n        s++;\n      }\n\n      this.length = Math.min(s, this.length);\n\n      if (r !== 0) {\n        var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n        this.words[this.length - 1] &= mask;\n      }\n\n      return this.strip();\n    }; // Return only lowers bits of number\n\n\n    BN.prototype.maskn = function maskn(bits) {\n      return this.clone().imaskn(bits);\n    }; // Add plain number `num` to `this`\n\n\n    BN.prototype.iaddn = function iaddn(num) {\n      assert(typeof num === 'number');\n      assert(num < 0x4000000);\n      if (num < 0) return this.isubn(-num); // Possible sign change\n\n      if (this.negative !== 0) {\n        if (this.length === 1 && (this.words[0] | 0) < num) {\n          this.words[0] = num - (this.words[0] | 0);\n          this.negative = 0;\n          return this;\n        }\n\n        this.negative = 0;\n        this.isubn(num);\n        this.negative = 1;\n        return this;\n      } // Add without checks\n\n\n      return this._iaddn(num);\n    };\n\n    BN.prototype._iaddn = function _iaddn(num) {\n      this.words[0] += num; // Carry\n\n      for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n        this.words[i] -= 0x4000000;\n\n        if (i === this.length - 1) {\n          this.words[i + 1] = 1;\n        } else {\n          this.words[i + 1]++;\n        }\n      }\n\n      this.length = Math.max(this.length, i + 1);\n      return this;\n    }; // Subtract plain number `num` from `this`\n\n\n    BN.prototype.isubn = function isubn(num) {\n      assert(typeof num === 'number');\n      assert(num < 0x4000000);\n      if (num < 0) return this.iaddn(-num);\n\n      if (this.negative !== 0) {\n        this.negative = 0;\n        this.iaddn(num);\n        this.negative = 1;\n        return this;\n      }\n\n      this.words[0] -= num;\n\n      if (this.length === 1 && this.words[0] < 0) {\n        this.words[0] = -this.words[0];\n        this.negative = 1;\n      } else {\n        // Carry\n        for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n          this.words[i] += 0x4000000;\n          this.words[i + 1] -= 1;\n        }\n      }\n\n      return this.strip();\n    };\n\n    BN.prototype.addn = function addn(num) {\n      return this.clone().iaddn(num);\n    };\n\n    BN.prototype.subn = function subn(num) {\n      return this.clone().isubn(num);\n    };\n\n    BN.prototype.iabs = function iabs() {\n      this.negative = 0;\n      return this;\n    };\n\n    BN.prototype.abs = function abs() {\n      return this.clone().iabs();\n    };\n\n    BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n      var len = num.length + shift;\n      var i;\n\n      this._expand(len);\n\n      var w;\n      var carry = 0;\n\n      for (i = 0; i < num.length; i++) {\n        w = (this.words[i + shift] | 0) + carry;\n        var right = (num.words[i] | 0) * mul;\n        w -= right & 0x3ffffff;\n        carry = (w >> 26) - (right / 0x4000000 | 0);\n        this.words[i + shift] = w & 0x3ffffff;\n      }\n\n      for (; i < this.length - shift; i++) {\n        w = (this.words[i + shift] | 0) + carry;\n        carry = w >> 26;\n        this.words[i + shift] = w & 0x3ffffff;\n      }\n\n      if (carry === 0) return this.strip(); // Subtraction overflow\n\n      assert(carry === -1);\n      carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        w = -(this.words[i] | 0) + carry;\n        carry = w >> 26;\n        this.words[i] = w & 0x3ffffff;\n      }\n\n      this.negative = 1;\n      return this.strip();\n    };\n\n    BN.prototype._wordDiv = function _wordDiv(num, mode) {\n      var shift = this.length - num.length;\n      var a = this.clone();\n      var b = num; // Normalize\n\n      var bhi = b.words[b.length - 1] | 0;\n\n      var bhiBits = this._countBits(bhi);\n\n      shift = 26 - bhiBits;\n\n      if (shift !== 0) {\n        b = b.ushln(shift);\n        a.iushln(shift);\n        bhi = b.words[b.length - 1] | 0;\n      } // Initialize quotient\n\n\n      var m = a.length - b.length;\n      var q;\n\n      if (mode !== 'mod') {\n        q = new BN(null);\n        q.length = m + 1;\n        q.words = new Array(q.length);\n\n        for (var i = 0; i < q.length; i++) {\n          q.words[i] = 0;\n        }\n      }\n\n      var diff = a.clone()._ishlnsubmul(b, 1, m);\n\n      if (diff.negative === 0) {\n        a = diff;\n\n        if (q) {\n          q.words[m] = 1;\n        }\n      }\n\n      for (var j = m - 1; j >= 0; j--) {\n        var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0); // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n        // (0x7ffffff)\n\n        qj = Math.min(qj / bhi | 0, 0x3ffffff);\n\n        a._ishlnsubmul(b, qj, j);\n\n        while (a.negative !== 0) {\n          qj--;\n          a.negative = 0;\n\n          a._ishlnsubmul(b, 1, j);\n\n          if (!a.isZero()) {\n            a.negative ^= 1;\n          }\n        }\n\n        if (q) {\n          q.words[j] = qj;\n        }\n      }\n\n      if (q) {\n        q.strip();\n      }\n\n      a.strip(); // Denormalize\n\n      if (mode !== 'div' && shift !== 0) {\n        a.iushrn(shift);\n      }\n\n      return {\n        div: q || null,\n        mod: a\n      };\n    }; // NOTE: 1) `mode` can be set to `mod` to request mod only,\n    //       to `div` to request div only, or be absent to\n    //       request both div & mod\n    //       2) `positive` is true if unsigned mod is requested\n\n\n    BN.prototype.divmod = function divmod(num, mode, positive) {\n      assert(!num.isZero());\n\n      if (this.isZero()) {\n        return {\n          div: new BN(0),\n          mod: new BN(0)\n        };\n      }\n\n      var div, mod, res;\n\n      if (this.negative !== 0 && num.negative === 0) {\n        res = this.neg().divmod(num, mode);\n\n        if (mode !== 'mod') {\n          div = res.div.neg();\n        }\n\n        if (mode !== 'div') {\n          mod = res.mod.neg();\n\n          if (positive && mod.negative !== 0) {\n            mod.iadd(num);\n          }\n        }\n\n        return {\n          div: div,\n          mod: mod\n        };\n      }\n\n      if (this.negative === 0 && num.negative !== 0) {\n        res = this.divmod(num.neg(), mode);\n\n        if (mode !== 'mod') {\n          div = res.div.neg();\n        }\n\n        return {\n          div: div,\n          mod: res.mod\n        };\n      }\n\n      if ((this.negative & num.negative) !== 0) {\n        res = this.neg().divmod(num.neg(), mode);\n\n        if (mode !== 'div') {\n          mod = res.mod.neg();\n\n          if (positive && mod.negative !== 0) {\n            mod.isub(num);\n          }\n        }\n\n        return {\n          div: res.div,\n          mod: mod\n        };\n      } // Both numbers are positive at this point\n      // Strip both numbers to approximate shift value\n\n\n      if (num.length > this.length || this.cmp(num) < 0) {\n        return {\n          div: new BN(0),\n          mod: this\n        };\n      } // Very short reduction\n\n\n      if (num.length === 1) {\n        if (mode === 'div') {\n          return {\n            div: this.divn(num.words[0]),\n            mod: null\n          };\n        }\n\n        if (mode === 'mod') {\n          return {\n            div: null,\n            mod: new BN(this.modn(num.words[0]))\n          };\n        }\n\n        return {\n          div: this.divn(num.words[0]),\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return this._wordDiv(num, mode);\n    }; // Find `this` / `num`\n\n\n    BN.prototype.div = function div(num) {\n      return this.divmod(num, 'div', false).div;\n    }; // Find `this` % `num`\n\n\n    BN.prototype.mod = function mod(num) {\n      return this.divmod(num, 'mod', false).mod;\n    };\n\n    BN.prototype.umod = function umod(num) {\n      return this.divmod(num, 'mod', true).mod;\n    }; // Find Round(`this` / `num`)\n\n\n    BN.prototype.divRound = function divRound(num) {\n      var dm = this.divmod(num); // Fast case - exact division\n\n      if (dm.mod.isZero()) return dm.div;\n      var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n      var half = num.ushrn(1);\n      var r2 = num.andln(1);\n      var cmp = mod.cmp(half); // Round down\n\n      if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div; // Round up\n\n      return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n    };\n\n    BN.prototype.modn = function modn(num) {\n      assert(num <= 0x3ffffff);\n      var p = (1 << 26) % num;\n      var acc = 0;\n\n      for (var i = this.length - 1; i >= 0; i--) {\n        acc = (p * acc + (this.words[i] | 0)) % num;\n      }\n\n      return acc;\n    }; // In-place division by number\n\n\n    BN.prototype.idivn = function idivn(num) {\n      assert(num <= 0x3ffffff);\n      var carry = 0;\n\n      for (var i = this.length - 1; i >= 0; i--) {\n        var w = (this.words[i] | 0) + carry * 0x4000000;\n        this.words[i] = w / num | 0;\n        carry = w % num;\n      }\n\n      return this.strip();\n    };\n\n    BN.prototype.divn = function divn(num) {\n      return this.clone().idivn(num);\n    };\n\n    BN.prototype.egcd = function egcd(p) {\n      assert(p.negative === 0);\n      assert(!p.isZero());\n      var x = this;\n      var y = p.clone();\n\n      if (x.negative !== 0) {\n        x = x.umod(p);\n      } else {\n        x = x.clone();\n      } // A * x + B * y = x\n\n\n      var A = new BN(1);\n      var B = new BN(0); // C * x + D * y = y\n\n      var C = new BN(0);\n      var D = new BN(1);\n      var g = 0;\n\n      while (x.isEven() && y.isEven()) {\n        x.iushrn(1);\n        y.iushrn(1);\n        ++g;\n      }\n\n      var yp = y.clone();\n      var xp = x.clone();\n\n      while (!x.isZero()) {\n        for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n        if (i > 0) {\n          x.iushrn(i);\n\n          while (i-- > 0) {\n            if (A.isOdd() || B.isOdd()) {\n              A.iadd(yp);\n              B.isub(xp);\n            }\n\n            A.iushrn(1);\n            B.iushrn(1);\n          }\n        }\n\n        for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n        if (j > 0) {\n          y.iushrn(j);\n\n          while (j-- > 0) {\n            if (C.isOdd() || D.isOdd()) {\n              C.iadd(yp);\n              D.isub(xp);\n            }\n\n            C.iushrn(1);\n            D.iushrn(1);\n          }\n        }\n\n        if (x.cmp(y) >= 0) {\n          x.isub(y);\n          A.isub(C);\n          B.isub(D);\n        } else {\n          y.isub(x);\n          C.isub(A);\n          D.isub(B);\n        }\n      }\n\n      return {\n        a: C,\n        b: D,\n        gcd: y.iushln(g)\n      };\n    }; // This is reduced incarnation of the binary EEA\n    // above, designated to invert members of the\n    // _prime_ fields F(p) at a maximal speed\n\n\n    BN.prototype._invmp = function _invmp(p) {\n      assert(p.negative === 0);\n      assert(!p.isZero());\n      var a = this;\n      var b = p.clone();\n\n      if (a.negative !== 0) {\n        a = a.umod(p);\n      } else {\n        a = a.clone();\n      }\n\n      var x1 = new BN(1);\n      var x2 = new BN(0);\n      var delta = b.clone();\n\n      while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n        for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n        if (i > 0) {\n          a.iushrn(i);\n\n          while (i-- > 0) {\n            if (x1.isOdd()) {\n              x1.iadd(delta);\n            }\n\n            x1.iushrn(1);\n          }\n        }\n\n        for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n        if (j > 0) {\n          b.iushrn(j);\n\n          while (j-- > 0) {\n            if (x2.isOdd()) {\n              x2.iadd(delta);\n            }\n\n            x2.iushrn(1);\n          }\n        }\n\n        if (a.cmp(b) >= 0) {\n          a.isub(b);\n          x1.isub(x2);\n        } else {\n          b.isub(a);\n          x2.isub(x1);\n        }\n      }\n\n      var res;\n\n      if (a.cmpn(1) === 0) {\n        res = x1;\n      } else {\n        res = x2;\n      }\n\n      if (res.cmpn(0) < 0) {\n        res.iadd(p);\n      }\n\n      return res;\n    };\n\n    BN.prototype.gcd = function gcd(num) {\n      if (this.isZero()) return num.abs();\n      if (num.isZero()) return this.abs();\n      var a = this.clone();\n      var b = num.clone();\n      a.negative = 0;\n      b.negative = 0; // Remove common factor of two\n\n      for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n        a.iushrn(1);\n        b.iushrn(1);\n      }\n\n      do {\n        while (a.isEven()) {\n          a.iushrn(1);\n        }\n\n        while (b.isEven()) {\n          b.iushrn(1);\n        }\n\n        var r = a.cmp(b);\n\n        if (r < 0) {\n          // Swap `a` and `b` to make `a` always bigger than `b`\n          var t = a;\n          a = b;\n          b = t;\n        } else if (r === 0 || b.cmpn(1) === 0) {\n          break;\n        }\n\n        a.isub(b);\n      } while (true);\n\n      return b.iushln(shift);\n    }; // Invert number in the field F(num)\n\n\n    BN.prototype.invm = function invm(num) {\n      return this.egcd(num).a.umod(num);\n    };\n\n    BN.prototype.isEven = function isEven() {\n      return (this.words[0] & 1) === 0;\n    };\n\n    BN.prototype.isOdd = function isOdd() {\n      return (this.words[0] & 1) === 1;\n    }; // And first word and num\n\n\n    BN.prototype.andln = function andln(num) {\n      return this.words[0] & num;\n    }; // Increment at the bit position in-line\n\n\n    BN.prototype.bincn = function bincn(bit) {\n      assert(typeof bit === 'number');\n      var r = bit % 26;\n      var s = (bit - r) / 26;\n      var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n      if (this.length <= s) {\n        this._expand(s + 1);\n\n        this.words[s] |= q;\n        return this;\n      } // Add bit and propagate, if needed\n\n\n      var carry = q;\n\n      for (var i = s; carry !== 0 && i < this.length; i++) {\n        var w = this.words[i] | 0;\n        w += carry;\n        carry = w >>> 26;\n        w &= 0x3ffffff;\n        this.words[i] = w;\n      }\n\n      if (carry !== 0) {\n        this.words[i] = carry;\n        this.length++;\n      }\n\n      return this;\n    };\n\n    BN.prototype.isZero = function isZero() {\n      return this.length === 1 && this.words[0] === 0;\n    };\n\n    BN.prototype.cmpn = function cmpn(num) {\n      var negative = num < 0;\n      if (this.negative !== 0 && !negative) return -1;\n      if (this.negative === 0 && negative) return 1;\n      this.strip();\n      var res;\n\n      if (this.length > 1) {\n        res = 1;\n      } else {\n        if (negative) {\n          num = -num;\n        }\n\n        assert(num <= 0x3ffffff, 'Number is too big');\n        var w = this.words[0] | 0;\n        res = w === num ? 0 : w < num ? -1 : 1;\n      }\n\n      if (this.negative !== 0) return -res | 0;\n      return res;\n    }; // Compare two numbers and return:\n    // 1 - if `this` > `num`\n    // 0 - if `this` == `num`\n    // -1 - if `this` < `num`\n\n\n    BN.prototype.cmp = function cmp(num) {\n      if (this.negative !== 0 && num.negative === 0) return -1;\n      if (this.negative === 0 && num.negative !== 0) return 1;\n      var res = this.ucmp(num);\n      if (this.negative !== 0) return -res | 0;\n      return res;\n    }; // Unsigned comparison\n\n\n    BN.prototype.ucmp = function ucmp(num) {\n      // At this point both numbers have the same sign\n      if (this.length > num.length) return 1;\n      if (this.length < num.length) return -1;\n      var res = 0;\n\n      for (var i = this.length - 1; i >= 0; i--) {\n        var a = this.words[i] | 0;\n        var b = num.words[i] | 0;\n        if (a === b) continue;\n\n        if (a < b) {\n          res = -1;\n        } else if (a > b) {\n          res = 1;\n        }\n\n        break;\n      }\n\n      return res;\n    };\n\n    BN.prototype.gtn = function gtn(num) {\n      return this.cmpn(num) === 1;\n    };\n\n    BN.prototype.gt = function gt(num) {\n      return this.cmp(num) === 1;\n    };\n\n    BN.prototype.gten = function gten(num) {\n      return this.cmpn(num) >= 0;\n    };\n\n    BN.prototype.gte = function gte(num) {\n      return this.cmp(num) >= 0;\n    };\n\n    BN.prototype.ltn = function ltn(num) {\n      return this.cmpn(num) === -1;\n    };\n\n    BN.prototype.lt = function lt(num) {\n      return this.cmp(num) === -1;\n    };\n\n    BN.prototype.lten = function lten(num) {\n      return this.cmpn(num) <= 0;\n    };\n\n    BN.prototype.lte = function lte(num) {\n      return this.cmp(num) <= 0;\n    };\n\n    BN.prototype.eqn = function eqn(num) {\n      return this.cmpn(num) === 0;\n    };\n\n    BN.prototype.eq = function eq(num) {\n      return this.cmp(num) === 0;\n    }; //\n    // A reduce context, could be using montgomery or something better, depending\n    // on the `m` itself.\n    //\n\n\n    BN.red = function red(num) {\n      return new Red(num);\n    };\n\n    BN.prototype.toRed = function toRed(ctx) {\n      assert(!this.red, 'Already a number in reduction context');\n      assert(this.negative === 0, 'red works only with positives');\n      return ctx.convertTo(this)._forceRed(ctx);\n    };\n\n    BN.prototype.fromRed = function fromRed() {\n      assert(this.red, 'fromRed works only with numbers in reduction context');\n      return this.red.convertFrom(this);\n    };\n\n    BN.prototype._forceRed = function _forceRed(ctx) {\n      this.red = ctx;\n      return this;\n    };\n\n    BN.prototype.forceRed = function forceRed(ctx) {\n      assert(!this.red, 'Already a number in reduction context');\n      return this._forceRed(ctx);\n    };\n\n    BN.prototype.redAdd = function redAdd(num) {\n      assert(this.red, 'redAdd works only with red numbers');\n      return this.red.add(this, num);\n    };\n\n    BN.prototype.redIAdd = function redIAdd(num) {\n      assert(this.red, 'redIAdd works only with red numbers');\n      return this.red.iadd(this, num);\n    };\n\n    BN.prototype.redSub = function redSub(num) {\n      assert(this.red, 'redSub works only with red numbers');\n      return this.red.sub(this, num);\n    };\n\n    BN.prototype.redISub = function redISub(num) {\n      assert(this.red, 'redISub works only with red numbers');\n      return this.red.isub(this, num);\n    };\n\n    BN.prototype.redShl = function redShl(num) {\n      assert(this.red, 'redShl works only with red numbers');\n      return this.red.shl(this, num);\n    };\n\n    BN.prototype.redMul = function redMul(num) {\n      assert(this.red, 'redMul works only with red numbers');\n\n      this.red._verify2(this, num);\n\n      return this.red.mul(this, num);\n    };\n\n    BN.prototype.redIMul = function redIMul(num) {\n      assert(this.red, 'redMul works only with red numbers');\n\n      this.red._verify2(this, num);\n\n      return this.red.imul(this, num);\n    };\n\n    BN.prototype.redSqr = function redSqr() {\n      assert(this.red, 'redSqr works only with red numbers');\n\n      this.red._verify1(this);\n\n      return this.red.sqr(this);\n    };\n\n    BN.prototype.redISqr = function redISqr() {\n      assert(this.red, 'redISqr works only with red numbers');\n\n      this.red._verify1(this);\n\n      return this.red.isqr(this);\n    }; // Square root over p\n\n\n    BN.prototype.redSqrt = function redSqrt() {\n      assert(this.red, 'redSqrt works only with red numbers');\n\n      this.red._verify1(this);\n\n      return this.red.sqrt(this);\n    };\n\n    BN.prototype.redInvm = function redInvm() {\n      assert(this.red, 'redInvm works only with red numbers');\n\n      this.red._verify1(this);\n\n      return this.red.invm(this);\n    }; // Return negative clone of `this` % `red modulo`\n\n\n    BN.prototype.redNeg = function redNeg() {\n      assert(this.red, 'redNeg works only with red numbers');\n\n      this.red._verify1(this);\n\n      return this.red.neg(this);\n    };\n\n    BN.prototype.redPow = function redPow(num) {\n      assert(this.red && !num.red, 'redPow(normalNum)');\n\n      this.red._verify1(this);\n\n      return this.red.pow(this, num);\n    }; // Prime numbers with efficient reduction\n\n\n    var primes = {\n      k256: null,\n      p224: null,\n      p192: null,\n      p25519: null\n    }; // Pseudo-Mersenne prime\n\n    function MPrime(name, p) {\n      // P = 2 ^ N - K\n      this.name = name;\n      this.p = new BN(p, 16);\n      this.n = this.p.bitLength();\n      this.k = new BN(1).iushln(this.n).isub(this.p);\n      this.tmp = this._tmp();\n    }\n\n    MPrime.prototype._tmp = function _tmp() {\n      var tmp = new BN(null);\n      tmp.words = new Array(Math.ceil(this.n / 13));\n      return tmp;\n    };\n\n    MPrime.prototype.ireduce = function ireduce(num) {\n      // Assumes that `num` is less than `P^2`\n      // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n      var r = num;\n      var rlen;\n\n      do {\n        this.split(r, this.tmp);\n        r = this.imulK(r);\n        r = r.iadd(this.tmp);\n        rlen = r.bitLength();\n      } while (rlen > this.n);\n\n      var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\n      if (cmp === 0) {\n        r.words[0] = 0;\n        r.length = 1;\n      } else if (cmp > 0) {\n        r.isub(this.p);\n      } else {\n        if (r.strip !== undefined) {\n          // r is BN v4 instance\n          r.strip();\n        } else {\n          // r is BN v5 instance\n          r._strip();\n        }\n      }\n\n      return r;\n    };\n\n    MPrime.prototype.split = function split(input, out) {\n      input.iushrn(this.n, 0, out);\n    };\n\n    MPrime.prototype.imulK = function imulK(num) {\n      return num.imul(this.k);\n    };\n\n    function K256() {\n      MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n    }\n\n    inherits(K256, MPrime);\n\n    K256.prototype.split = function split(input, output) {\n      // 256 = 9 * 26 + 22\n      var mask = 0x3fffff;\n      var outLen = Math.min(input.length, 9);\n\n      for (var i = 0; i < outLen; i++) {\n        output.words[i] = input.words[i];\n      }\n\n      output.length = outLen;\n\n      if (input.length <= 9) {\n        input.words[0] = 0;\n        input.length = 1;\n        return;\n      } // Shift by 9 limbs\n\n\n      var prev = input.words[9];\n      output.words[output.length++] = prev & mask;\n\n      for (i = 10; i < input.length; i++) {\n        var next = input.words[i] | 0;\n        input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n        prev = next;\n      }\n\n      prev >>>= 22;\n      input.words[i - 10] = prev;\n\n      if (prev === 0 && input.length > 10) {\n        input.length -= 10;\n      } else {\n        input.length -= 9;\n      }\n    };\n\n    K256.prototype.imulK = function imulK(num) {\n      // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n      num.words[num.length] = 0;\n      num.words[num.length + 1] = 0;\n      num.length += 2; // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\n      var lo = 0;\n\n      for (var i = 0; i < num.length; i++) {\n        var w = num.words[i] | 0;\n        lo += w * 0x3d1;\n        num.words[i] = lo & 0x3ffffff;\n        lo = w * 0x40 + (lo / 0x4000000 | 0);\n      } // Fast length reduction\n\n\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n\n        if (num.words[num.length - 1] === 0) {\n          num.length--;\n        }\n      }\n\n      return num;\n    };\n\n    function P224() {\n      MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n    }\n\n    inherits(P224, MPrime);\n\n    function P192() {\n      MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n    }\n\n    inherits(P192, MPrime);\n\n    function P25519() {\n      // 2 ^ 255 - 19\n      MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n    }\n\n    inherits(P25519, MPrime);\n\n    P25519.prototype.imulK = function imulK(num) {\n      // K = 0x13\n      var carry = 0;\n\n      for (var i = 0; i < num.length; i++) {\n        var hi = (num.words[i] | 0) * 0x13 + carry;\n        var lo = hi & 0x3ffffff;\n        hi >>>= 26;\n        num.words[i] = lo;\n        carry = hi;\n      }\n\n      if (carry !== 0) {\n        num.words[num.length++] = carry;\n      }\n\n      return num;\n    }; // Exported mostly for testing purposes, use plain name instead\n\n\n    BN._prime = function prime(name) {\n      // Cached version of prime\n      if (primes[name]) return primes[name];\n      var prime;\n\n      if (name === 'k256') {\n        prime = new K256();\n      } else if (name === 'p224') {\n        prime = new P224();\n      } else if (name === 'p192') {\n        prime = new P192();\n      } else if (name === 'p25519') {\n        prime = new P25519();\n      } else {\n        throw new Error('Unknown prime ' + name);\n      }\n\n      primes[name] = prime;\n      return prime;\n    }; //\n    // Base reduction engine\n    //\n\n\n    function Red(m) {\n      if (typeof m === 'string') {\n        var prime = BN._prime(m);\n\n        this.m = prime.p;\n        this.prime = prime;\n      } else {\n        assert(m.gtn(1), 'modulus must be greater than 1');\n        this.m = m;\n        this.prime = null;\n      }\n    }\n\n    Red.prototype._verify1 = function _verify1(a) {\n      assert(a.negative === 0, 'red works only with positives');\n      assert(a.red, 'red works only with red numbers');\n    };\n\n    Red.prototype._verify2 = function _verify2(a, b) {\n      assert((a.negative | b.negative) === 0, 'red works only with positives');\n      assert(a.red && a.red === b.red, 'red works only with red numbers');\n    };\n\n    Red.prototype.imod = function imod(a) {\n      if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n      return a.umod(this.m)._forceRed(this);\n    };\n\n    Red.prototype.neg = function neg(a) {\n      if (a.isZero()) {\n        return a.clone();\n      }\n\n      return this.m.sub(a)._forceRed(this);\n    };\n\n    Red.prototype.add = function add(a, b) {\n      this._verify2(a, b);\n\n      var res = a.add(b);\n\n      if (res.cmp(this.m) >= 0) {\n        res.isub(this.m);\n      }\n\n      return res._forceRed(this);\n    };\n\n    Red.prototype.iadd = function iadd(a, b) {\n      this._verify2(a, b);\n\n      var res = a.iadd(b);\n\n      if (res.cmp(this.m) >= 0) {\n        res.isub(this.m);\n      }\n\n      return res;\n    };\n\n    Red.prototype.sub = function sub(a, b) {\n      this._verify2(a, b);\n\n      var res = a.sub(b);\n\n      if (res.cmpn(0) < 0) {\n        res.iadd(this.m);\n      }\n\n      return res._forceRed(this);\n    };\n\n    Red.prototype.isub = function isub(a, b) {\n      this._verify2(a, b);\n\n      var res = a.isub(b);\n\n      if (res.cmpn(0) < 0) {\n        res.iadd(this.m);\n      }\n\n      return res;\n    };\n\n    Red.prototype.shl = function shl(a, num) {\n      this._verify1(a);\n\n      return this.imod(a.ushln(num));\n    };\n\n    Red.prototype.imul = function imul(a, b) {\n      this._verify2(a, b);\n\n      return this.imod(a.imul(b));\n    };\n\n    Red.prototype.mul = function mul(a, b) {\n      this._verify2(a, b);\n\n      return this.imod(a.mul(b));\n    };\n\n    Red.prototype.isqr = function isqr(a) {\n      return this.imul(a, a.clone());\n    };\n\n    Red.prototype.sqr = function sqr(a) {\n      return this.mul(a, a);\n    };\n\n    Red.prototype.sqrt = function sqrt(a) {\n      if (a.isZero()) return a.clone();\n      var mod3 = this.m.andln(3);\n      assert(mod3 % 2 === 1); // Fast case\n\n      if (mod3 === 3) {\n        var pow = this.m.add(new BN(1)).iushrn(2);\n        return this.pow(a, pow);\n      } // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n      //\n      // Find Q and S, that Q * 2 ^ S = (P - 1)\n\n\n      var q = this.m.subn(1);\n      var s = 0;\n\n      while (!q.isZero() && q.andln(1) === 0) {\n        s++;\n        q.iushrn(1);\n      }\n\n      assert(!q.isZero());\n      var one = new BN(1).toRed(this);\n      var nOne = one.redNeg(); // Find quadratic non-residue\n      // NOTE: Max is such because of generalized Riemann hypothesis.\n\n      var lpow = this.m.subn(1).iushrn(1);\n      var z = this.m.bitLength();\n      z = new BN(2 * z * z).toRed(this);\n\n      while (this.pow(z, lpow).cmp(nOne) !== 0) {\n        z.redIAdd(nOne);\n      }\n\n      var c = this.pow(z, q);\n      var r = this.pow(a, q.addn(1).iushrn(1));\n      var t = this.pow(a, q);\n      var m = s;\n\n      while (t.cmp(one) !== 0) {\n        var tmp = t;\n\n        for (var i = 0; tmp.cmp(one) !== 0; i++) {\n          tmp = tmp.redSqr();\n        }\n\n        assert(i < m);\n        var b = this.pow(c, new BN(1).iushln(m - i - 1));\n        r = r.redMul(b);\n        c = b.redSqr();\n        t = t.redMul(c);\n        m = i;\n      }\n\n      return r;\n    };\n\n    Red.prototype.invm = function invm(a) {\n      var inv = a._invmp(this.m);\n\n      if (inv.negative !== 0) {\n        inv.negative = 0;\n        return this.imod(inv).redNeg();\n      } else {\n        return this.imod(inv);\n      }\n    };\n\n    Red.prototype.pow = function pow(a, num) {\n      if (num.isZero()) return new BN(1).toRed(this);\n      if (num.cmpn(1) === 0) return a.clone();\n      var windowSize = 4;\n      var wnd = new Array(1 << windowSize);\n      wnd[0] = new BN(1).toRed(this);\n      wnd[1] = a;\n\n      for (var i = 2; i < wnd.length; i++) {\n        wnd[i] = this.mul(wnd[i - 1], a);\n      }\n\n      var res = wnd[0];\n      var current = 0;\n      var currentLen = 0;\n      var start = num.bitLength() % 26;\n\n      if (start === 0) {\n        start = 26;\n      }\n\n      for (i = num.length - 1; i >= 0; i--) {\n        var word = num.words[i];\n\n        for (var j = start - 1; j >= 0; j--) {\n          var bit = word >> j & 1;\n\n          if (res !== wnd[0]) {\n            res = this.sqr(res);\n          }\n\n          if (bit === 0 && current === 0) {\n            currentLen = 0;\n            continue;\n          }\n\n          current <<= 1;\n          current |= bit;\n          currentLen++;\n          if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n          res = this.mul(res, wnd[current]);\n          currentLen = 0;\n          current = 0;\n        }\n\n        start = 26;\n      }\n\n      return res;\n    };\n\n    Red.prototype.convertTo = function convertTo(num) {\n      var r = num.umod(this.m);\n      return r === num ? r.clone() : r;\n    };\n\n    Red.prototype.convertFrom = function convertFrom(num) {\n      var res = num.clone();\n      res.red = null;\n      return res;\n    }; //\n    // Montgomery method engine\n    //\n\n\n    BN.mont = function mont(num) {\n      return new Mont(num);\n    };\n\n    function Mont(m) {\n      Red.call(this, m);\n      this.shift = this.m.bitLength();\n\n      if (this.shift % 26 !== 0) {\n        this.shift += 26 - this.shift % 26;\n      }\n\n      this.r = new BN(1).iushln(this.shift);\n      this.r2 = this.imod(this.r.sqr());\n      this.rinv = this.r._invmp(this.m);\n      this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n      this.minv = this.minv.umod(this.r);\n      this.minv = this.r.sub(this.minv);\n    }\n\n    inherits(Mont, Red);\n\n    Mont.prototype.convertTo = function convertTo(num) {\n      return this.imod(num.ushln(this.shift));\n    };\n\n    Mont.prototype.convertFrom = function convertFrom(num) {\n      var r = this.imod(num.mul(this.rinv));\n      r.red = null;\n      return r;\n    };\n\n    Mont.prototype.imul = function imul(a, b) {\n      if (a.isZero() || b.isZero()) {\n        a.words[0] = 0;\n        a.length = 1;\n        return a;\n      }\n\n      var t = a.imul(b);\n      var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n      var u = t.isub(c).iushrn(this.shift);\n      var res = u;\n\n      if (u.cmp(this.m) >= 0) {\n        res = u.isub(this.m);\n      } else if (u.cmpn(0) < 0) {\n        res = u.iadd(this.m);\n      }\n\n      return res._forceRed(this);\n    };\n\n    Mont.prototype.mul = function mul(a, b) {\n      if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n      var t = a.mul(b);\n      var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n      var u = t.isub(c).iushrn(this.shift);\n      var res = u;\n\n      if (u.cmp(this.m) >= 0) {\n        res = u.isub(this.m);\n      } else if (u.cmpn(0) < 0) {\n        res = u.iadd(this.m);\n      }\n\n      return res._forceRed(this);\n    };\n\n    Mont.prototype.invm = function invm(a) {\n      // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n      var res = this.imod(a._invmp(this.m).mul(this.r2));\n      return res._forceRed(this);\n    };\n  })(module, commonjsGlobal);\n});\nconst version = \"logger/5.4.0\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = {\n  debug: 1,\n  \"default\": 2,\n  info: 2,\n  warning: 3,\n  error: 4,\n  off: 5\n};\nlet _logLevel = LogLevels[\"default\"];\nlet _globalLogger = null;\n\nfunction _checkNormalize() {\n  try {\n    const missing = []; // Make sure all forms of normalization are supported\n\n    [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach(form => {\n      try {\n        if (\"test\".normalize(form) !== \"test\") {\n          throw new Error(\"bad normalize\");\n        }\n\n        ;\n      } catch (error) {\n        missing.push(form);\n      }\n    });\n\n    if (missing.length) {\n      throw new Error(\"missing \" + missing.join(\", \"));\n    }\n\n    if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n      throw new Error(\"broken implementation\");\n    }\n  } catch (error) {\n    return error.message;\n  }\n\n  return null;\n}\n\nconst _normalizeError = _checkNormalize();\n\nvar LogLevel;\n\n(function (LogLevel) {\n  LogLevel[\"DEBUG\"] = \"DEBUG\";\n  LogLevel[\"INFO\"] = \"INFO\";\n  LogLevel[\"WARNING\"] = \"WARNING\";\n  LogLevel[\"ERROR\"] = \"ERROR\";\n  LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\n\nvar ErrorCode;\n\n(function (ErrorCode) {\n  ///////////////////\n  // Generic Errors\n  // Unknown Error\n  ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\"; // Not Implemented\n\n  ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\"; // Unsupported Operation\n  //   - operation\n\n  ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\"; // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n  //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n\n  ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\"; // Some sort of bad response from the server\n\n  ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\"; // Timeout\n\n  ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\"; ///////////////////\n  // Operational  Errors\n  // Buffer Overrun\n\n  ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\"; // Numeric Fault\n  //   - operation: the operation being executed\n  //   - fault: the reason this faulted\n\n  ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\"; ///////////////////\n  // Argument Errors\n  // Missing new operator to an object\n  //  - name: The name of the class\n\n  ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\"; // Invalid argument (e.g. value is incompatible with type) to a function:\n  //   - argument: The argument name that was invalid\n  //   - value: The value of the argument\n\n  ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\"; // Missing argument to a function:\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n\n  ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\"; // Too many arguments\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n\n  ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\"; ///////////////////\n  // Blockchain Errors\n  // Call exception\n  //  - transaction: the transaction\n  //  - address?: the contract address\n  //  - args?: The arguments passed into the function\n  //  - method?: The Solidity method signature\n  //  - errorSignature?: The EIP848 error signature\n  //  - errorArgs?: The EIP848 error parameters\n  //  - reason: The reason (only for EIP848 \"Error(string)\")\n\n  ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\"; // Insufficien funds (< value + gasLimit * gasPrice)\n  //   - transaction: the transaction attempted\n\n  ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\"; // Nonce has already been used\n  //   - transaction: the transaction attempted\n\n  ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\"; // The replacement fee for the transaction is too low\n  //   - transaction: the transaction attempted\n\n  ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\"; // The gas limit could not be estimated\n  //   - transaction: the transaction passed to estimateGas\n\n  ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\"; // The transaction was replaced by one with a higher gas price\n  //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n  //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n  //   - hash: original transaction hash\n  //   - replacement: the full TransactionsResponse for the replacement\n  //   - receipt: the receipt of the replacement\n\n  ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n\nclass Logger {\n  constructor(version) {\n    Object.defineProperty(this, \"version\", {\n      enumerable: true,\n      value: version,\n      writable: false\n    });\n  }\n\n  _log(logLevel, args) {\n    const level = logLevel.toLowerCase();\n\n    if (LogLevels[level] == null) {\n      this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n    }\n\n    if (_logLevel > LogLevels[level]) {\n      return;\n    }\n\n    console.log.apply(console, args);\n  }\n\n  debug(...args) {\n    this._log(Logger.levels.DEBUG, args);\n  }\n\n  info(...args) {\n    this._log(Logger.levels.INFO, args);\n  }\n\n  warn(...args) {\n    this._log(Logger.levels.WARNING, args);\n  }\n\n  makeError(message, code, params) {\n    // Errors are being censored\n    if (_censorErrors) {\n      return this.makeError(\"censored error\", code, {});\n    }\n\n    if (!code) {\n      code = Logger.errors.UNKNOWN_ERROR;\n    }\n\n    if (!params) {\n      params = {};\n    }\n\n    const messageDetails = [];\n    Object.keys(params).forEach(key => {\n      try {\n        messageDetails.push(key + \"=\" + JSON.stringify(params[key]));\n      } catch (error) {\n        messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n      }\n    });\n    messageDetails.push(`code=${code}`);\n    messageDetails.push(`version=${this.version}`);\n    const reason = message;\n\n    if (messageDetails.length) {\n      message += \" (\" + messageDetails.join(\", \") + \")\";\n    } // @TODO: Any??\n\n\n    const error = new Error(message);\n    error.reason = reason;\n    error.code = code;\n    Object.keys(params).forEach(function (key) {\n      error[key] = params[key];\n    });\n    return error;\n  }\n\n  throwError(message, code, params) {\n    throw this.makeError(message, code, params);\n  }\n\n  throwArgumentError(message, name, value) {\n    return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n      argument: name,\n      value: value\n    });\n  }\n\n  assert(condition, message, code, params) {\n    if (!!condition) {\n      return;\n    }\n\n    this.throwError(message, code, params);\n  }\n\n  assertArgument(condition, message, name, value) {\n    if (!!condition) {\n      return;\n    }\n\n    this.throwArgumentError(message, name, value);\n  }\n\n  checkNormalize(message) {\n    if (_normalizeError) {\n      this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"String.prototype.normalize\",\n        form: _normalizeError\n      });\n    }\n  }\n\n  checkSafeUint53(value, message) {\n    if (typeof value !== \"number\") {\n      return;\n    }\n\n    if (message == null) {\n      message = \"value not safe\";\n    }\n\n    if (value < 0 || value >= 0x1fffffffffffff) {\n      this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n        operation: \"checkSafeInteger\",\n        fault: \"out-of-safe-range\",\n        value: value\n      });\n    }\n\n    if (value % 1) {\n      this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n        operation: \"checkSafeInteger\",\n        fault: \"non-integer\",\n        value: value\n      });\n    }\n  }\n\n  checkArgumentCount(count, expectedCount, message) {\n    if (message) {\n      message = \": \" + message;\n    } else {\n      message = \"\";\n    }\n\n    if (count < expectedCount) {\n      this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n        count: count,\n        expectedCount: expectedCount\n      });\n    }\n\n    if (count > expectedCount) {\n      this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n        count: count,\n        expectedCount: expectedCount\n      });\n    }\n  }\n\n  checkNew(target, kind) {\n    if (target === Object || target == null) {\n      this.throwError(\"missing new\", Logger.errors.MISSING_NEW, {\n        name: kind.name\n      });\n    }\n  }\n\n  checkAbstract(target, kind) {\n    if (target === kind) {\n      this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, {\n        name: target.name,\n        operation: \"new\"\n      });\n    } else if (target === Object || target == null) {\n      this.throwError(\"missing new\", Logger.errors.MISSING_NEW, {\n        name: kind.name\n      });\n    }\n  }\n\n  static globalLogger() {\n    if (!_globalLogger) {\n      _globalLogger = new Logger(version);\n    }\n\n    return _globalLogger;\n  }\n\n  static setCensorship(censorship, permanent) {\n    if (!censorship && permanent) {\n      this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setCensorship\"\n      });\n    }\n\n    if (_permanentCensorErrors) {\n      if (!censorship) {\n        return;\n      }\n\n      this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setCensorship\"\n      });\n    }\n\n    _censorErrors = !!censorship;\n    _permanentCensorErrors = !!permanent;\n  }\n\n  static setLogLevel(logLevel) {\n    const level = LogLevels[logLevel.toLowerCase()];\n\n    if (level == null) {\n      Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n      return;\n    }\n\n    _logLevel = level;\n  }\n\n  static from(version) {\n    return new Logger(version);\n  }\n\n}\n\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\nconst version$1 = \"bytes/5.4.0\";\nconst logger = new Logger(version$1); ///////////////////////////////\n\nfunction isHexable(value) {\n  return !!value.toHexString;\n}\n\nfunction addSlice(array) {\n  if (array.slice) {\n    return array;\n  }\n\n  array.slice = function () {\n    const args = Array.prototype.slice.call(arguments);\n    return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n  };\n\n  return array;\n}\n\nfunction isBytesLike(value) {\n  return isHexString(value) && !(value.length % 2) || isBytes(value);\n}\n\nfunction isBytes(value) {\n  if (value == null) {\n    return false;\n  }\n\n  if (value.constructor === Uint8Array) {\n    return true;\n  }\n\n  if (typeof value === \"string\") {\n    return false;\n  }\n\n  if (value.length == null) {\n    return false;\n  }\n\n  for (let i = 0; i < value.length; i++) {\n    const v = value[i];\n\n    if (typeof v !== \"number\" || v < 0 || v >= 256 || v % 1) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction arrayify(value, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (typeof value === \"number\") {\n    logger.checkSafeUint53(value, \"invalid arrayify value\");\n    const result = [];\n\n    while (value) {\n      result.unshift(value & 0xff);\n      value = parseInt(String(value / 256));\n    }\n\n    if (result.length === 0) {\n      result.push(0);\n    }\n\n    return addSlice(new Uint8Array(result));\n  }\n\n  if (options.allowMissingPrefix && typeof value === \"string\" && value.substring(0, 2) !== \"0x\") {\n    value = \"0x\" + value;\n  }\n\n  if (isHexable(value)) {\n    value = value.toHexString();\n  }\n\n  if (isHexString(value)) {\n    let hex = value.substring(2);\n\n    if (hex.length % 2) {\n      if (options.hexPad === \"left\") {\n        hex = \"0x0\" + hex.substring(2);\n      } else if (options.hexPad === \"right\") {\n        hex += \"0\";\n      } else {\n        logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n      }\n    }\n\n    const result = [];\n\n    for (let i = 0; i < hex.length; i += 2) {\n      result.push(parseInt(hex.substring(i, i + 2), 16));\n    }\n\n    return addSlice(new Uint8Array(result));\n  }\n\n  if (isBytes(value)) {\n    return addSlice(new Uint8Array(value));\n  }\n\n  return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\n\nfunction concat(items) {\n  const objects = items.map(item => arrayify(item));\n  const length = objects.reduce((accum, item) => accum + item.length, 0);\n  const result = new Uint8Array(length);\n  objects.reduce((offset, object) => {\n    result.set(object, offset);\n    return offset + object.length;\n  }, 0);\n  return addSlice(result);\n}\n\nfunction stripZeros(value) {\n  let result = arrayify(value);\n\n  if (result.length === 0) {\n    return result;\n  } // Find the first non-zero entry\n\n\n  let start = 0;\n\n  while (start < result.length && result[start] === 0) {\n    start++;\n  } // If we started with zeros, strip them\n\n\n  if (start) {\n    result = result.slice(start);\n  }\n\n  return result;\n}\n\nfunction zeroPad(value, length) {\n  value = arrayify(value);\n\n  if (value.length > length) {\n    logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n  }\n\n  const result = new Uint8Array(length);\n  result.set(value, length - value.length);\n  return addSlice(result);\n}\n\nfunction isHexString(value, length) {\n  if (typeof value !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nconst HexCharacters = \"0123456789abcdef\";\n\nfunction hexlify(value, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (typeof value === \"number\") {\n    logger.checkSafeUint53(value, \"invalid hexlify value\");\n    let hex = \"\";\n\n    while (value) {\n      hex = HexCharacters[value & 0xf] + hex;\n      value = Math.floor(value / 16);\n    }\n\n    if (hex.length) {\n      if (hex.length % 2) {\n        hex = \"0\" + hex;\n      }\n\n      return \"0x\" + hex;\n    }\n\n    return \"0x00\";\n  }\n\n  if (typeof value === \"bigint\") {\n    value = value.toString(16);\n\n    if (value.length % 2) {\n      return \"0x0\" + value;\n    }\n\n    return \"0x\" + value;\n  }\n\n  if (options.allowMissingPrefix && typeof value === \"string\" && value.substring(0, 2) !== \"0x\") {\n    value = \"0x\" + value;\n  }\n\n  if (isHexable(value)) {\n    return value.toHexString();\n  }\n\n  if (isHexString(value)) {\n    if (value.length % 2) {\n      if (options.hexPad === \"left\") {\n        value = \"0x0\" + value.substring(2);\n      } else if (options.hexPad === \"right\") {\n        value += \"0\";\n      } else {\n        logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n      }\n    }\n\n    return value.toLowerCase();\n  }\n\n  if (isBytes(value)) {\n    let result = \"0x\";\n\n    for (let i = 0; i < value.length; i++) {\n      let v = value[i];\n      result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n    }\n\n    return result;\n  }\n\n  return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\n\n\nfunction hexDataLength(data) {\n  if (typeof data !== \"string\") {\n    data = hexlify(data);\n  } else if (!isHexString(data) || data.length % 2) {\n    return null;\n  }\n\n  return (data.length - 2) / 2;\n}\n\nfunction hexDataSlice(data, offset, endOffset) {\n  if (typeof data !== \"string\") {\n    data = hexlify(data);\n  } else if (!isHexString(data) || data.length % 2) {\n    logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n  }\n\n  offset = 2 + 2 * offset;\n\n  if (endOffset != null) {\n    return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n  }\n\n  return \"0x\" + data.substring(offset);\n}\n\nfunction hexConcat(items) {\n  let result = \"0x\";\n  items.forEach(item => {\n    result += hexlify(item).substring(2);\n  });\n  return result;\n}\n\nfunction hexValue(value) {\n  const trimmed = hexStripZeros(hexlify(value, {\n    hexPad: \"left\"\n  }));\n\n  if (trimmed === \"0x\") {\n    return \"0x0\";\n  }\n\n  return trimmed;\n}\n\nfunction hexStripZeros(value) {\n  if (typeof value !== \"string\") {\n    value = hexlify(value);\n  }\n\n  if (!isHexString(value)) {\n    logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n  }\n\n  value = value.substring(2);\n  let offset = 0;\n\n  while (offset < value.length && value[offset] === \"0\") {\n    offset++;\n  }\n\n  return \"0x\" + value.substring(offset);\n}\n\nfunction hexZeroPad(value, length) {\n  if (typeof value !== \"string\") {\n    value = hexlify(value);\n  } else if (!isHexString(value)) {\n    logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n  }\n\n  if (value.length > 2 * length + 2) {\n    logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n  }\n\n  while (value.length < 2 * length + 2) {\n    value = \"0x0\" + value.substring(2);\n  }\n\n  return value;\n}\n\nfunction splitSignature(signature) {\n  const result = {\n    r: \"0x\",\n    s: \"0x\",\n    _vs: \"0x\",\n    recoveryParam: 0,\n    v: 0\n  };\n\n  if (isBytesLike(signature)) {\n    const bytes = arrayify(signature);\n\n    if (bytes.length !== 65) {\n      logger.throwArgumentError(\"invalid signature string; must be 65 bytes\", \"signature\", signature);\n    } // Get the r, s and v\n\n\n    result.r = hexlify(bytes.slice(0, 32));\n    result.s = hexlify(bytes.slice(32, 64));\n    result.v = bytes[64]; // Allow a recid to be used as the v\n\n    if (result.v < 27) {\n      if (result.v === 0 || result.v === 1) {\n        result.v += 27;\n      } else {\n        logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n      }\n    } // Compute recoveryParam from v\n\n\n    result.recoveryParam = 1 - result.v % 2; // Compute _vs from recoveryParam and s\n\n    if (result.recoveryParam) {\n      bytes[32] |= 0x80;\n    }\n\n    result._vs = hexlify(bytes.slice(32, 64));\n  } else {\n    result.r = signature.r;\n    result.s = signature.s;\n    result.v = signature.v;\n    result.recoveryParam = signature.recoveryParam;\n    result._vs = signature._vs; // If the _vs is available, use it to populate missing s, v and recoveryParam\n    // and verify non-missing s, v and recoveryParam\n\n    if (result._vs != null) {\n      const vs = zeroPad(arrayify(result._vs), 32);\n      result._vs = hexlify(vs); // Set or check the recid\n\n      const recoveryParam = vs[0] >= 128 ? 1 : 0;\n\n      if (result.recoveryParam == null) {\n        result.recoveryParam = recoveryParam;\n      } else if (result.recoveryParam !== recoveryParam) {\n        logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n      } // Set or check the s\n\n\n      vs[0] &= 0x7f;\n      const s = hexlify(vs);\n\n      if (result.s == null) {\n        result.s = s;\n      } else if (result.s !== s) {\n        logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n      }\n    } // Use recid and v to populate each other\n\n\n    if (result.recoveryParam == null) {\n      if (result.v == null) {\n        logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n      } else if (result.v === 0 || result.v === 1) {\n        result.recoveryParam = result.v;\n      } else {\n        result.recoveryParam = 1 - result.v % 2;\n      }\n    } else {\n      if (result.v == null) {\n        result.v = 27 + result.recoveryParam;\n      } else if (result.recoveryParam !== 1 - result.v % 2) {\n        logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n      }\n    }\n\n    if (result.r == null || !isHexString(result.r)) {\n      logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n    } else {\n      result.r = hexZeroPad(result.r, 32);\n    }\n\n    if (result.s == null || !isHexString(result.s)) {\n      logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n    } else {\n      result.s = hexZeroPad(result.s, 32);\n    }\n\n    const vs = arrayify(result.s);\n\n    if (vs[0] >= 128) {\n      logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n    }\n\n    if (result.recoveryParam) {\n      vs[0] |= 0x80;\n    }\n\n    const _vs = hexlify(vs);\n\n    if (result._vs) {\n      if (!isHexString(result._vs)) {\n        logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n      }\n\n      result._vs = hexZeroPad(result._vs, 32);\n    } // Set or check the _vs\n\n\n    if (result._vs == null) {\n      result._vs = _vs;\n    } else if (result._vs !== _vs) {\n      logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n    }\n  }\n\n  return result;\n}\n\nconst version$2 = \"bignumber/5.4.1\";\nvar BN = bn.BN;\nconst logger$1 = new Logger(version$2);\nconst _constructorGuard = {};\nconst MAX_SAFE = 0x1fffffffffffff; // Only warn about passing 10 into radix once\n\nlet _warnedToStringRadix = false;\n\nclass BigNumber {\n  constructor(constructorGuard, hex) {\n    logger$1.checkNew(new.target, BigNumber);\n\n    if (constructorGuard !== _constructorGuard) {\n      logger$1.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"new (BigNumber)\"\n      });\n    }\n\n    this._hex = hex;\n    this._isBigNumber = true;\n    Object.freeze(this);\n  }\n\n  fromTwos(value) {\n    return toBigNumber(toBN(this).fromTwos(value));\n  }\n\n  toTwos(value) {\n    return toBigNumber(toBN(this).toTwos(value));\n  }\n\n  abs() {\n    if (this._hex[0] === \"-\") {\n      return BigNumber.from(this._hex.substring(1));\n    }\n\n    return this;\n  }\n\n  add(other) {\n    return toBigNumber(toBN(this).add(toBN(other)));\n  }\n\n  sub(other) {\n    return toBigNumber(toBN(this).sub(toBN(other)));\n  }\n\n  div(other) {\n    const o = BigNumber.from(other);\n\n    if (o.isZero()) {\n      throwFault(\"division by zero\", \"div\");\n    }\n\n    return toBigNumber(toBN(this).div(toBN(other)));\n  }\n\n  mul(other) {\n    return toBigNumber(toBN(this).mul(toBN(other)));\n  }\n\n  mod(other) {\n    const value = toBN(other);\n\n    if (value.isNeg()) {\n      throwFault(\"cannot modulo negative values\", \"mod\");\n    }\n\n    return toBigNumber(toBN(this).umod(value));\n  }\n\n  pow(other) {\n    const value = toBN(other);\n\n    if (value.isNeg()) {\n      throwFault(\"cannot raise to negative values\", \"pow\");\n    }\n\n    return toBigNumber(toBN(this).pow(value));\n  }\n\n  and(other) {\n    const value = toBN(other);\n\n    if (this.isNegative() || value.isNeg()) {\n      throwFault(\"cannot 'and' negative values\", \"and\");\n    }\n\n    return toBigNumber(toBN(this).and(value));\n  }\n\n  or(other) {\n    const value = toBN(other);\n\n    if (this.isNegative() || value.isNeg()) {\n      throwFault(\"cannot 'or' negative values\", \"or\");\n    }\n\n    return toBigNumber(toBN(this).or(value));\n  }\n\n  xor(other) {\n    const value = toBN(other);\n\n    if (this.isNegative() || value.isNeg()) {\n      throwFault(\"cannot 'xor' negative values\", \"xor\");\n    }\n\n    return toBigNumber(toBN(this).xor(value));\n  }\n\n  mask(value) {\n    if (this.isNegative() || value < 0) {\n      throwFault(\"cannot mask negative values\", \"mask\");\n    }\n\n    return toBigNumber(toBN(this).maskn(value));\n  }\n\n  shl(value) {\n    if (this.isNegative() || value < 0) {\n      throwFault(\"cannot shift negative values\", \"shl\");\n    }\n\n    return toBigNumber(toBN(this).shln(value));\n  }\n\n  shr(value) {\n    if (this.isNegative() || value < 0) {\n      throwFault(\"cannot shift negative values\", \"shr\");\n    }\n\n    return toBigNumber(toBN(this).shrn(value));\n  }\n\n  eq(other) {\n    return toBN(this).eq(toBN(other));\n  }\n\n  lt(other) {\n    return toBN(this).lt(toBN(other));\n  }\n\n  lte(other) {\n    return toBN(this).lte(toBN(other));\n  }\n\n  gt(other) {\n    return toBN(this).gt(toBN(other));\n  }\n\n  gte(other) {\n    return toBN(this).gte(toBN(other));\n  }\n\n  isNegative() {\n    return this._hex[0] === \"-\";\n  }\n\n  isZero() {\n    return toBN(this).isZero();\n  }\n\n  toNumber() {\n    try {\n      return toBN(this).toNumber();\n    } catch (error) {\n      throwFault(\"overflow\", \"toNumber\", this.toString());\n    }\n\n    return null;\n  }\n\n  toBigInt() {\n    try {\n      return BigInt(this.toString());\n    } catch (e) {}\n\n    return logger$1.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n      value: this.toString()\n    });\n  }\n\n  toString() {\n    // Lots of people expect this, which we do not support, so check (See: #889)\n    if (arguments.length > 0) {\n      if (arguments[0] === 10) {\n        if (!_warnedToStringRadix) {\n          _warnedToStringRadix = true;\n          logger$1.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n        }\n      } else if (arguments[0] === 16) {\n        logger$1.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n      } else {\n        logger$1.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n      }\n    }\n\n    return toBN(this).toString(10);\n  }\n\n  toHexString() {\n    return this._hex;\n  }\n\n  toJSON(key) {\n    return {\n      type: \"BigNumber\",\n      hex: this.toHexString()\n    };\n  }\n\n  static from(value) {\n    if (value instanceof BigNumber) {\n      return value;\n    }\n\n    if (typeof value === \"string\") {\n      if (value.match(/^-?0x[0-9a-f]+$/i)) {\n        return new BigNumber(_constructorGuard, toHex(value));\n      }\n\n      if (value.match(/^-?[0-9]+$/)) {\n        return new BigNumber(_constructorGuard, toHex(new BN(value)));\n      }\n\n      return logger$1.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n    }\n\n    if (typeof value === \"number\") {\n      if (value % 1) {\n        throwFault(\"underflow\", \"BigNumber.from\", value);\n      }\n\n      if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n        throwFault(\"overflow\", \"BigNumber.from\", value);\n      }\n\n      return BigNumber.from(String(value));\n    }\n\n    const anyValue = value;\n\n    if (typeof anyValue === \"bigint\") {\n      return BigNumber.from(anyValue.toString());\n    }\n\n    if (isBytes(anyValue)) {\n      return BigNumber.from(hexlify(anyValue));\n    }\n\n    if (anyValue) {\n      // Hexable interface (takes piority)\n      if (anyValue.toHexString) {\n        const hex = anyValue.toHexString();\n\n        if (typeof hex === \"string\") {\n          return BigNumber.from(hex);\n        }\n      } else {\n        // For now, handle legacy JSON-ified values (goes away in v6)\n        let hex = anyValue._hex; // New-form JSON\n\n        if (hex == null && anyValue.type === \"BigNumber\") {\n          hex = anyValue.hex;\n        }\n\n        if (typeof hex === \"string\") {\n          if (isHexString(hex) || hex[0] === \"-\" && isHexString(hex.substring(1))) {\n            return BigNumber.from(hex);\n          }\n        }\n      }\n    }\n\n    return logger$1.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n  }\n\n  static isBigNumber(value) {\n    return !!(value && value._isBigNumber);\n  }\n\n} // Normalize the hex string\n\n\nfunction toHex(value) {\n  // For BN, call on the hex string\n  if (typeof value !== \"string\") {\n    return toHex(value.toString(16));\n  } // If negative, prepend the negative sign to the normalized positive value\n\n\n  if (value[0] === \"-\") {\n    // Strip off the negative sign\n    value = value.substring(1); // Cannot have mulitple negative signs (e.g. \"--0x04\")\n\n    if (value[0] === \"-\") {\n      logger$1.throwArgumentError(\"invalid hex\", \"value\", value);\n    } // Call toHex on the positive component\n\n\n    value = toHex(value); // Do not allow \"-0x00\"\n\n    if (value === \"0x00\") {\n      return value;\n    } // Negate the value\n\n\n    return \"-\" + value;\n  } // Add a \"0x\" prefix if missing\n\n\n  if (value.substring(0, 2) !== \"0x\") {\n    value = \"0x\" + value;\n  } // Normalize zero\n\n\n  if (value === \"0x\") {\n    return \"0x00\";\n  } // Make the string even length\n\n\n  if (value.length % 2) {\n    value = \"0x0\" + value.substring(2);\n  } // Trim to smallest even-length string\n\n\n  while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n    value = \"0x\" + value.substring(4);\n  }\n\n  return value;\n}\n\nfunction toBigNumber(value) {\n  return BigNumber.from(toHex(value));\n}\n\nfunction toBN(value) {\n  const hex = BigNumber.from(value).toHexString();\n\n  if (hex[0] === \"-\") {\n    return new BN(\"-\" + hex.substring(3), 16);\n  }\n\n  return new BN(hex.substring(2), 16);\n}\n\nfunction throwFault(fault, operation, value) {\n  const params = {\n    fault: fault,\n    operation: operation\n  };\n\n  if (value != null) {\n    params.value = value;\n  }\n\n  return logger$1.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n} // value should have no prefix\n\n\nfunction _base36To16(value) {\n  return new BN(value, 36).toString(16);\n}\n\nconst version$3 = \"properties/5.4.0\";\n\nvar __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$2 = new Logger(version$3);\n\nfunction defineReadOnly(object, name, value) {\n  Object.defineProperty(object, name, {\n    enumerable: true,\n    value: value,\n    writable: false\n  });\n} // Crawl up the constructor chain to find a static method\n\n\nfunction getStatic(ctor, key) {\n  for (let i = 0; i < 32; i++) {\n    if (ctor[key]) {\n      return ctor[key];\n    }\n\n    if (!ctor.prototype || typeof ctor.prototype !== \"object\") {\n      break;\n    }\n\n    ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n  }\n\n  return null;\n}\n\nfunction resolveProperties(object) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const promises = Object.keys(object).map(key => {\n      const value = object[key];\n      return Promise.resolve(value).then(v => ({\n        key: key,\n        value: v\n      }));\n    });\n    const results = yield Promise.all(promises);\n    return results.reduce((accum, result) => {\n      accum[result.key] = result.value;\n      return accum;\n    }, {});\n  });\n}\n\nfunction checkProperties(object, properties) {\n  if (!object || typeof object !== \"object\") {\n    logger$2.throwArgumentError(\"invalid object\", \"object\", object);\n  }\n\n  Object.keys(object).forEach(key => {\n    if (!properties[key]) {\n      logger$2.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n    }\n  });\n}\n\nfunction shallowCopy(object) {\n  const result = {};\n\n  for (const key in object) {\n    result[key] = object[key];\n  }\n\n  return result;\n}\n\nconst opaque = {\n  bigint: true,\n  boolean: true,\n  \"function\": true,\n  number: true,\n  string: true\n};\n\nfunction _isFrozen(object) {\n  // Opaque objects are not mutable, so safe to copy by assignment\n  if (object === undefined || object === null || opaque[typeof object]) {\n    return true;\n  }\n\n  if (Array.isArray(object) || typeof object === \"object\") {\n    if (!Object.isFrozen(object)) {\n      return false;\n    }\n\n    const keys = Object.keys(object);\n\n    for (let i = 0; i < keys.length; i++) {\n      if (!_isFrozen(object[keys[i]])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return logger$2.throwArgumentError(`Cannot deepCopy ${typeof object}`, \"object\", object);\n} // Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\n\n\nfunction _deepCopy(object) {\n  if (_isFrozen(object)) {\n    return object;\n  } // Arrays are mutable, so we need to create a copy\n\n\n  if (Array.isArray(object)) {\n    return Object.freeze(object.map(item => deepCopy(item)));\n  }\n\n  if (typeof object === \"object\") {\n    const result = {};\n\n    for (const key in object) {\n      const value = object[key];\n\n      if (value === undefined) {\n        continue;\n      }\n\n      defineReadOnly(result, key, deepCopy(value));\n    }\n\n    return result;\n  }\n\n  return logger$2.throwArgumentError(`Cannot deepCopy ${typeof object}`, \"object\", object);\n}\n\nfunction deepCopy(object) {\n  return _deepCopy(object);\n}\n\nclass Description {\n  constructor(info) {\n    for (const key in info) {\n      this[key] = deepCopy(info[key]);\n    }\n  }\n\n}\n\nvar sha3 = createCommonjsModule(function (module) {\n  /**\r\n   * [js-sha3]{@link https://github.com/emn178/js-sha3}\r\n   *\r\n   * @version 0.5.7\r\n   * @author Chen, Yi-Cyuan [emn178@gmail.com]\r\n   * @copyright Chen, Yi-Cyuan 2015-2016\r\n   * @license MIT\r\n   */\n\n  /*jslint bitwise: true */\n  (function () {\n    var root = typeof window === 'object' ? window : {};\n    var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n\n    if (NODE_JS) {\n      root = commonjsGlobal;\n    }\n\n    var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && 'object' === 'object' && module.exports;\n    var HEX_CHARS = '0123456789abcdef'.split('');\n    var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n    var KECCAK_PADDING = [1, 256, 65536, 16777216];\n    var PADDING = [6, 1536, 393216, 100663296];\n    var SHIFT = [0, 8, 16, 24];\n    var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n    var BITS = [224, 256, 384, 512];\n    var SHAKE_BITS = [128, 256];\n    var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array'];\n\n    var createOutputMethod = function (bits, padding, outputType) {\n      return function (message) {\n        return new Keccak(bits, padding, bits).update(message)[outputType]();\n      };\n    };\n\n    var createShakeOutputMethod = function (bits, padding, outputType) {\n      return function (message, outputBits) {\n        return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n      };\n    };\n\n    var createMethod = function (bits, padding) {\n      var method = createOutputMethod(bits, padding, 'hex');\n\n      method.create = function () {\n        return new Keccak(bits, padding, bits);\n      };\n\n      method.update = function (message) {\n        return method.create().update(message);\n      };\n\n      for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n        var type = OUTPUT_TYPES[i];\n        method[type] = createOutputMethod(bits, padding, type);\n      }\n\n      return method;\n    };\n\n    var createShakeMethod = function (bits, padding) {\n      var method = createShakeOutputMethod(bits, padding, 'hex');\n\n      method.create = function (outputBits) {\n        return new Keccak(bits, padding, outputBits);\n      };\n\n      method.update = function (message, outputBits) {\n        return method.create(outputBits).update(message);\n      };\n\n      for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n        var type = OUTPUT_TYPES[i];\n        method[type] = createShakeOutputMethod(bits, padding, type);\n      }\n\n      return method;\n    };\n\n    var algorithms = [{\n      name: 'keccak',\n      padding: KECCAK_PADDING,\n      bits: BITS,\n      createMethod: createMethod\n    }, {\n      name: 'sha3',\n      padding: PADDING,\n      bits: BITS,\n      createMethod: createMethod\n    }, {\n      name: 'shake',\n      padding: SHAKE_PADDING,\n      bits: SHAKE_BITS,\n      createMethod: createShakeMethod\n    }];\n    var methods = {},\n        methodNames = [];\n\n    for (var i = 0; i < algorithms.length; ++i) {\n      var algorithm = algorithms[i];\n      var bits = algorithm.bits;\n\n      for (var j = 0; j < bits.length; ++j) {\n        var methodName = algorithm.name + '_' + bits[j];\n        methodNames.push(methodName);\n        methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      }\n    }\n\n    function Keccak(bits, padding, outputBits) {\n      this.blocks = [];\n      this.s = [];\n      this.padding = padding;\n      this.outputBits = outputBits;\n      this.reset = true;\n      this.block = 0;\n      this.start = 0;\n      this.blockCount = 1600 - (bits << 1) >> 5;\n      this.byteCount = this.blockCount << 2;\n      this.outputBlocks = outputBits >> 5;\n      this.extraBytes = (outputBits & 31) >> 3;\n\n      for (var i = 0; i < 50; ++i) {\n        this.s[i] = 0;\n      }\n    }\n\n    Keccak.prototype.update = function (message) {\n      var notString = typeof message !== 'string';\n\n      if (notString && message.constructor === ArrayBuffer) {\n        message = new Uint8Array(message);\n      }\n\n      var length = message.length,\n          blocks = this.blocks,\n          byteCount = this.byteCount,\n          blockCount = this.blockCount,\n          index = 0,\n          s = this.s,\n          i,\n          code;\n\n      while (index < length) {\n        if (this.reset) {\n          this.reset = false;\n          blocks[0] = this.block;\n\n          for (i = 1; i < blockCount + 1; ++i) {\n            blocks[i] = 0;\n          }\n        }\n\n        if (notString) {\n          for (i = this.start; index < length && i < byteCount; ++index) {\n            blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n          }\n        } else {\n          for (i = this.start; index < length && i < byteCount; ++index) {\n            code = message.charCodeAt(index);\n\n            if (code < 0x80) {\n              blocks[i >> 2] |= code << SHIFT[i++ & 3];\n            } else if (code < 0x800) {\n              blocks[i >> 2] |= (0xc0 | code >> 6) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n            } else if (code < 0xd800 || code >= 0xe000) {\n              blocks[i >> 2] |= (0xe0 | code >> 12) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n            } else {\n              code = 0x10000 + ((code & 0x3ff) << 10 | message.charCodeAt(++index) & 0x3ff);\n              blocks[i >> 2] |= (0xf0 | code >> 18) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code >> 12 & 0x3f) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n            }\n          }\n        }\n\n        this.lastByteIndex = i;\n\n        if (i >= byteCount) {\n          this.start = i - byteCount;\n          this.block = blocks[blockCount];\n\n          for (i = 0; i < blockCount; ++i) {\n            s[i] ^= blocks[i];\n          }\n\n          f(s);\n          this.reset = true;\n        } else {\n          this.start = i;\n        }\n      }\n\n      return this;\n    };\n\n    Keccak.prototype.finalize = function () {\n      var blocks = this.blocks,\n          i = this.lastByteIndex,\n          blockCount = this.blockCount,\n          s = this.s;\n      blocks[i >> 2] |= this.padding[i & 3];\n\n      if (this.lastByteIndex === this.byteCount) {\n        blocks[0] = blocks[blockCount];\n\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n\n      blocks[blockCount - 1] |= 0x80000000;\n\n      for (i = 0; i < blockCount; ++i) {\n        s[i] ^= blocks[i];\n      }\n\n      f(s);\n    };\n\n    Keccak.prototype.toString = Keccak.prototype.hex = function () {\n      this.finalize();\n      var blockCount = this.blockCount,\n          s = this.s,\n          outputBlocks = this.outputBlocks,\n          extraBytes = this.extraBytes,\n          i = 0,\n          j = 0;\n      var hex = '',\n          block;\n\n      while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n          block = s[i];\n          hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F] + HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F] + HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F] + HEX_CHARS[block >> 28 & 0x0F] + HEX_CHARS[block >> 24 & 0x0F];\n        }\n\n        if (j % blockCount === 0) {\n          f(s);\n          i = 0;\n        }\n      }\n\n      if (extraBytes) {\n        block = s[i];\n\n        if (extraBytes > 0) {\n          hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F];\n        }\n\n        if (extraBytes > 1) {\n          hex += HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F];\n        }\n\n        if (extraBytes > 2) {\n          hex += HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F];\n        }\n      }\n\n      return hex;\n    };\n\n    Keccak.prototype.arrayBuffer = function () {\n      this.finalize();\n      var blockCount = this.blockCount,\n          s = this.s,\n          outputBlocks = this.outputBlocks,\n          extraBytes = this.extraBytes,\n          i = 0,\n          j = 0;\n      var bytes = this.outputBits >> 3;\n      var buffer;\n\n      if (extraBytes) {\n        buffer = new ArrayBuffer(outputBlocks + 1 << 2);\n      } else {\n        buffer = new ArrayBuffer(bytes);\n      }\n\n      var array = new Uint32Array(buffer);\n\n      while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n          array[j] = s[i];\n        }\n\n        if (j % blockCount === 0) {\n          f(s);\n        }\n      }\n\n      if (extraBytes) {\n        array[i] = s[i];\n        buffer = buffer.slice(0, bytes);\n      }\n\n      return buffer;\n    };\n\n    Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n    Keccak.prototype.digest = Keccak.prototype.array = function () {\n      this.finalize();\n      var blockCount = this.blockCount,\n          s = this.s,\n          outputBlocks = this.outputBlocks,\n          extraBytes = this.extraBytes,\n          i = 0,\n          j = 0;\n      var array = [],\n          offset,\n          block;\n\n      while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n          offset = j << 2;\n          block = s[i];\n          array[offset] = block & 0xFF;\n          array[offset + 1] = block >> 8 & 0xFF;\n          array[offset + 2] = block >> 16 & 0xFF;\n          array[offset + 3] = block >> 24 & 0xFF;\n        }\n\n        if (j % blockCount === 0) {\n          f(s);\n        }\n      }\n\n      if (extraBytes) {\n        offset = j << 2;\n        block = s[i];\n\n        if (extraBytes > 0) {\n          array[offset] = block & 0xFF;\n        }\n\n        if (extraBytes > 1) {\n          array[offset + 1] = block >> 8 & 0xFF;\n        }\n\n        if (extraBytes > 2) {\n          array[offset + 2] = block >> 16 & 0xFF;\n        }\n      }\n\n      return array;\n    };\n\n    var f = function (s) {\n      var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n\n      for (n = 0; n < 48; n += 2) {\n        c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n        c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n        c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n        c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n        c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n        c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n        c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n        c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n        c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n        c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n        h = c8 ^ (c2 << 1 | c3 >>> 31);\n        l = c9 ^ (c3 << 1 | c2 >>> 31);\n        s[0] ^= h;\n        s[1] ^= l;\n        s[10] ^= h;\n        s[11] ^= l;\n        s[20] ^= h;\n        s[21] ^= l;\n        s[30] ^= h;\n        s[31] ^= l;\n        s[40] ^= h;\n        s[41] ^= l;\n        h = c0 ^ (c4 << 1 | c5 >>> 31);\n        l = c1 ^ (c5 << 1 | c4 >>> 31);\n        s[2] ^= h;\n        s[3] ^= l;\n        s[12] ^= h;\n        s[13] ^= l;\n        s[22] ^= h;\n        s[23] ^= l;\n        s[32] ^= h;\n        s[33] ^= l;\n        s[42] ^= h;\n        s[43] ^= l;\n        h = c2 ^ (c6 << 1 | c7 >>> 31);\n        l = c3 ^ (c7 << 1 | c6 >>> 31);\n        s[4] ^= h;\n        s[5] ^= l;\n        s[14] ^= h;\n        s[15] ^= l;\n        s[24] ^= h;\n        s[25] ^= l;\n        s[34] ^= h;\n        s[35] ^= l;\n        s[44] ^= h;\n        s[45] ^= l;\n        h = c4 ^ (c8 << 1 | c9 >>> 31);\n        l = c5 ^ (c9 << 1 | c8 >>> 31);\n        s[6] ^= h;\n        s[7] ^= l;\n        s[16] ^= h;\n        s[17] ^= l;\n        s[26] ^= h;\n        s[27] ^= l;\n        s[36] ^= h;\n        s[37] ^= l;\n        s[46] ^= h;\n        s[47] ^= l;\n        h = c6 ^ (c0 << 1 | c1 >>> 31);\n        l = c7 ^ (c1 << 1 | c0 >>> 31);\n        s[8] ^= h;\n        s[9] ^= l;\n        s[18] ^= h;\n        s[19] ^= l;\n        s[28] ^= h;\n        s[29] ^= l;\n        s[38] ^= h;\n        s[39] ^= l;\n        s[48] ^= h;\n        s[49] ^= l;\n        b0 = s[0];\n        b1 = s[1];\n        b32 = s[11] << 4 | s[10] >>> 28;\n        b33 = s[10] << 4 | s[11] >>> 28;\n        b14 = s[20] << 3 | s[21] >>> 29;\n        b15 = s[21] << 3 | s[20] >>> 29;\n        b46 = s[31] << 9 | s[30] >>> 23;\n        b47 = s[30] << 9 | s[31] >>> 23;\n        b28 = s[40] << 18 | s[41] >>> 14;\n        b29 = s[41] << 18 | s[40] >>> 14;\n        b20 = s[2] << 1 | s[3] >>> 31;\n        b21 = s[3] << 1 | s[2] >>> 31;\n        b2 = s[13] << 12 | s[12] >>> 20;\n        b3 = s[12] << 12 | s[13] >>> 20;\n        b34 = s[22] << 10 | s[23] >>> 22;\n        b35 = s[23] << 10 | s[22] >>> 22;\n        b16 = s[33] << 13 | s[32] >>> 19;\n        b17 = s[32] << 13 | s[33] >>> 19;\n        b48 = s[42] << 2 | s[43] >>> 30;\n        b49 = s[43] << 2 | s[42] >>> 30;\n        b40 = s[5] << 30 | s[4] >>> 2;\n        b41 = s[4] << 30 | s[5] >>> 2;\n        b22 = s[14] << 6 | s[15] >>> 26;\n        b23 = s[15] << 6 | s[14] >>> 26;\n        b4 = s[25] << 11 | s[24] >>> 21;\n        b5 = s[24] << 11 | s[25] >>> 21;\n        b36 = s[34] << 15 | s[35] >>> 17;\n        b37 = s[35] << 15 | s[34] >>> 17;\n        b18 = s[45] << 29 | s[44] >>> 3;\n        b19 = s[44] << 29 | s[45] >>> 3;\n        b10 = s[6] << 28 | s[7] >>> 4;\n        b11 = s[7] << 28 | s[6] >>> 4;\n        b42 = s[17] << 23 | s[16] >>> 9;\n        b43 = s[16] << 23 | s[17] >>> 9;\n        b24 = s[26] << 25 | s[27] >>> 7;\n        b25 = s[27] << 25 | s[26] >>> 7;\n        b6 = s[36] << 21 | s[37] >>> 11;\n        b7 = s[37] << 21 | s[36] >>> 11;\n        b38 = s[47] << 24 | s[46] >>> 8;\n        b39 = s[46] << 24 | s[47] >>> 8;\n        b30 = s[8] << 27 | s[9] >>> 5;\n        b31 = s[9] << 27 | s[8] >>> 5;\n        b12 = s[18] << 20 | s[19] >>> 12;\n        b13 = s[19] << 20 | s[18] >>> 12;\n        b44 = s[29] << 7 | s[28] >>> 25;\n        b45 = s[28] << 7 | s[29] >>> 25;\n        b26 = s[38] << 8 | s[39] >>> 24;\n        b27 = s[39] << 8 | s[38] >>> 24;\n        b8 = s[48] << 14 | s[49] >>> 18;\n        b9 = s[49] << 14 | s[48] >>> 18;\n        s[0] = b0 ^ ~b2 & b4;\n        s[1] = b1 ^ ~b3 & b5;\n        s[10] = b10 ^ ~b12 & b14;\n        s[11] = b11 ^ ~b13 & b15;\n        s[20] = b20 ^ ~b22 & b24;\n        s[21] = b21 ^ ~b23 & b25;\n        s[30] = b30 ^ ~b32 & b34;\n        s[31] = b31 ^ ~b33 & b35;\n        s[40] = b40 ^ ~b42 & b44;\n        s[41] = b41 ^ ~b43 & b45;\n        s[2] = b2 ^ ~b4 & b6;\n        s[3] = b3 ^ ~b5 & b7;\n        s[12] = b12 ^ ~b14 & b16;\n        s[13] = b13 ^ ~b15 & b17;\n        s[22] = b22 ^ ~b24 & b26;\n        s[23] = b23 ^ ~b25 & b27;\n        s[32] = b32 ^ ~b34 & b36;\n        s[33] = b33 ^ ~b35 & b37;\n        s[42] = b42 ^ ~b44 & b46;\n        s[43] = b43 ^ ~b45 & b47;\n        s[4] = b4 ^ ~b6 & b8;\n        s[5] = b5 ^ ~b7 & b9;\n        s[14] = b14 ^ ~b16 & b18;\n        s[15] = b15 ^ ~b17 & b19;\n        s[24] = b24 ^ ~b26 & b28;\n        s[25] = b25 ^ ~b27 & b29;\n        s[34] = b34 ^ ~b36 & b38;\n        s[35] = b35 ^ ~b37 & b39;\n        s[44] = b44 ^ ~b46 & b48;\n        s[45] = b45 ^ ~b47 & b49;\n        s[6] = b6 ^ ~b8 & b0;\n        s[7] = b7 ^ ~b9 & b1;\n        s[16] = b16 ^ ~b18 & b10;\n        s[17] = b17 ^ ~b19 & b11;\n        s[26] = b26 ^ ~b28 & b20;\n        s[27] = b27 ^ ~b29 & b21;\n        s[36] = b36 ^ ~b38 & b30;\n        s[37] = b37 ^ ~b39 & b31;\n        s[46] = b46 ^ ~b48 & b40;\n        s[47] = b47 ^ ~b49 & b41;\n        s[8] = b8 ^ ~b0 & b2;\n        s[9] = b9 ^ ~b1 & b3;\n        s[18] = b18 ^ ~b10 & b12;\n        s[19] = b19 ^ ~b11 & b13;\n        s[28] = b28 ^ ~b20 & b22;\n        s[29] = b29 ^ ~b21 & b23;\n        s[38] = b38 ^ ~b30 & b32;\n        s[39] = b39 ^ ~b31 & b33;\n        s[48] = b48 ^ ~b40 & b42;\n        s[49] = b49 ^ ~b41 & b43;\n        s[0] ^= RC[n];\n        s[1] ^= RC[n + 1];\n      }\n    };\n\n    if (COMMON_JS) {\n      module.exports = methods;\n    } else {\n      for (var i = 0; i < methodNames.length; ++i) {\n        root[methodNames[i]] = methods[methodNames[i]];\n      }\n    }\n  })();\n});\n\nfunction keccak256(data) {\n  return '0x' + sha3.keccak_256(arrayify(data));\n}\n\nconst version$4 = \"rlp/5.4.0\";\nconst logger$3 = new Logger(version$4);\n\nfunction arrayifyInteger(value) {\n  const result = [];\n\n  while (value) {\n    result.unshift(value & 0xff);\n    value >>= 8;\n  }\n\n  return result;\n}\n\nfunction unarrayifyInteger(data, offset, length) {\n  let result = 0;\n\n  for (let i = 0; i < length; i++) {\n    result = result * 256 + data[offset + i];\n  }\n\n  return result;\n}\n\nfunction _encode(object) {\n  if (Array.isArray(object)) {\n    let payload = [];\n    object.forEach(function (child) {\n      payload = payload.concat(_encode(child));\n    });\n\n    if (payload.length <= 55) {\n      payload.unshift(0xc0 + payload.length);\n      return payload;\n    }\n\n    const length = arrayifyInteger(payload.length);\n    length.unshift(0xf7 + length.length);\n    return length.concat(payload);\n  }\n\n  if (!isBytesLike(object)) {\n    logger$3.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object);\n  }\n\n  const data = Array.prototype.slice.call(arrayify(object));\n\n  if (data.length === 1 && data[0] <= 0x7f) {\n    return data;\n  } else if (data.length <= 55) {\n    data.unshift(0x80 + data.length);\n    return data;\n  }\n\n  const length = arrayifyInteger(data.length);\n  length.unshift(0xb7 + length.length);\n  return length.concat(data);\n}\n\nfunction encode(object) {\n  return hexlify(_encode(object));\n}\n\nfunction _decodeChildren(data, offset, childOffset, length) {\n  const result = [];\n\n  while (childOffset < offset + 1 + length) {\n    const decoded = _decode(data, childOffset);\n\n    result.push(decoded.result);\n    childOffset += decoded.consumed;\n\n    if (childOffset > offset + 1 + length) {\n      logger$3.throwError(\"child data too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n  }\n\n  return {\n    consumed: 1 + length,\n    result: result\n  };\n} // returns { consumed: number, result: Object }\n\n\nfunction _decode(data, offset) {\n  if (data.length === 0) {\n    logger$3.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, {});\n  } // Array with extra length prefix\n\n\n  if (data[offset] >= 0xf8) {\n    const lengthLength = data[offset] - 0xf7;\n\n    if (offset + 1 + lengthLength > data.length) {\n      logger$3.throwError(\"data short segment too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    const length = unarrayifyInteger(data, offset + 1, lengthLength);\n\n    if (offset + 1 + lengthLength + length > data.length) {\n      logger$3.throwError(\"data long segment too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n  } else if (data[offset] >= 0xc0) {\n    const length = data[offset] - 0xc0;\n\n    if (offset + 1 + length > data.length) {\n      logger$3.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    return _decodeChildren(data, offset, offset + 1, length);\n  } else if (data[offset] >= 0xb8) {\n    const lengthLength = data[offset] - 0xb7;\n\n    if (offset + 1 + lengthLength > data.length) {\n      logger$3.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    const length = unarrayifyInteger(data, offset + 1, lengthLength);\n\n    if (offset + 1 + lengthLength + length > data.length) {\n      logger$3.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n    return {\n      consumed: 1 + lengthLength + length,\n      result: result\n    };\n  } else if (data[offset] >= 0x80) {\n    const length = data[offset] - 0x80;\n\n    if (offset + 1 + length > data.length) {\n      logger$3.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n    return {\n      consumed: 1 + length,\n      result: result\n    };\n  }\n\n  return {\n    consumed: 1,\n    result: hexlify(data[offset])\n  };\n}\n\nfunction decode(data) {\n  const bytes = arrayify(data);\n\n  const decoded = _decode(bytes, 0);\n\n  if (decoded.consumed !== bytes.length) {\n    logger$3.throwArgumentError(\"invalid rlp data\", \"data\", data);\n  }\n\n  return decoded.result;\n}\n\nconst version$5 = \"address/5.4.0\";\nconst logger$4 = new Logger(version$5);\n\nfunction getChecksumAddress(address) {\n  if (!isHexString(address, 20)) {\n    logger$4.throwArgumentError(\"invalid address\", \"address\", address);\n  }\n\n  address = address.toLowerCase();\n  const chars = address.substring(2).split(\"\");\n  const expanded = new Uint8Array(40);\n\n  for (let i = 0; i < 40; i++) {\n    expanded[i] = chars[i].charCodeAt(0);\n  }\n\n  const hashed = arrayify(keccak256(expanded));\n\n  for (let i = 0; i < 40; i += 2) {\n    if (hashed[i >> 1] >> 4 >= 8) {\n      chars[i] = chars[i].toUpperCase();\n    }\n\n    if ((hashed[i >> 1] & 0x0f) >= 8) {\n      chars[i + 1] = chars[i + 1].toUpperCase();\n    }\n  }\n\n  return \"0x\" + chars.join(\"\");\n} // Shims for environments that are missing some required constants and functions\n\n\nconst MAX_SAFE_INTEGER = 0x1fffffffffffff;\n\nfunction log10(x) {\n  if (Math.log10) {\n    return Math.log10(x);\n  }\n\n  return Math.log(x) / Math.LN10;\n} // See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n// Create lookup table\n\n\nconst ibanLookup = {};\n\nfor (let i = 0; i < 10; i++) {\n  ibanLookup[String(i)] = String(i);\n}\n\nfor (let i = 0; i < 26; i++) {\n  ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n} // How many decimal digits can we process? (for 64-bit float, this is 15)\n\n\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\n\nfunction ibanChecksum(address) {\n  address = address.toUpperCase();\n  address = address.substring(4) + address.substring(0, 2) + \"00\";\n  let expanded = address.split(\"\").map(c => {\n    return ibanLookup[c];\n  }).join(\"\"); // Javascript can handle integers safely up to 15 (decimal) digits\n\n  while (expanded.length >= safeDigits) {\n    let block = expanded.substring(0, safeDigits);\n    expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n  }\n\n  let checksum = String(98 - parseInt(expanded, 10) % 97);\n\n  while (checksum.length < 2) {\n    checksum = \"0\" + checksum;\n  }\n\n  return checksum;\n}\n\nfunction getAddress(address) {\n  let result = null;\n\n  if (typeof address !== \"string\") {\n    logger$4.throwArgumentError(\"invalid address\", \"address\", address);\n  }\n\n  if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n    // Missing the 0x prefix\n    if (address.substring(0, 2) !== \"0x\") {\n      address = \"0x\" + address;\n    }\n\n    result = getChecksumAddress(address); // It is a checksummed address with a bad checksum\n\n    if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n      logger$4.throwArgumentError(\"bad address checksum\", \"address\", address);\n    } // Maybe ICAP? (we only support direct mode)\n\n  } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n    // It is an ICAP address with a bad checksum\n    if (address.substring(2, 4) !== ibanChecksum(address)) {\n      logger$4.throwArgumentError(\"bad icap checksum\", \"address\", address);\n    }\n\n    result = _base36To16(address.substring(4));\n\n    while (result.length < 40) {\n      result = \"0\" + result;\n    }\n\n    result = getChecksumAddress(\"0x\" + result);\n  } else {\n    logger$4.throwArgumentError(\"invalid address\", \"address\", address);\n  }\n\n  return result;\n} // http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\n\n\nfunction getContractAddress(transaction) {\n  let from = null;\n\n  try {\n    from = getAddress(transaction.from);\n  } catch (error) {\n    logger$4.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n  }\n\n  const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n  return getAddress(hexDataSlice(keccak256(encode([from, nonce])), 12));\n}\n\nconst AddressZero = \"0x0000000000000000000000000000000000000000\";\nconst Zero = /*#__PURE__*/BigNumber.from(0);\nconst HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\nconst version$6 = \"strings/5.4.0\";\nconst logger$5 = new Logger(version$6); ///////////////////////////////\n\nvar UnicodeNormalizationForm;\n\n(function (UnicodeNormalizationForm) {\n  UnicodeNormalizationForm[\"current\"] = \"\";\n  UnicodeNormalizationForm[\"NFC\"] = \"NFC\";\n  UnicodeNormalizationForm[\"NFD\"] = \"NFD\";\n  UnicodeNormalizationForm[\"NFKC\"] = \"NFKC\";\n  UnicodeNormalizationForm[\"NFKD\"] = \"NFKD\";\n})(UnicodeNormalizationForm || (UnicodeNormalizationForm = {}));\n\nvar Utf8ErrorReason;\n\n(function (Utf8ErrorReason) {\n  // A continuation byte was present where there was nothing to continue\n  // - offset = the index the codepoint began in\n  Utf8ErrorReason[\"UNEXPECTED_CONTINUE\"] = \"unexpected continuation byte\"; // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n  // - offset = the index the codepoint began in\n\n  Utf8ErrorReason[\"BAD_PREFIX\"] = \"bad codepoint prefix\"; // The string is too short to process the expected codepoint\n  // - offset = the index the codepoint began in\n\n  Utf8ErrorReason[\"OVERRUN\"] = \"string overrun\"; // A missing continuation byte was expected but not found\n  // - offset = the index the continuation byte was expected at\n\n  Utf8ErrorReason[\"MISSING_CONTINUE\"] = \"missing continuation byte\"; // The computed code point is outside the range for UTF-8\n  // - offset       = start of this codepoint\n  // - badCodepoint = the computed codepoint; outside the UTF-8 range\n\n  Utf8ErrorReason[\"OUT_OF_RANGE\"] = \"out of UTF-8 range\"; // UTF-8 strings may not contain UTF-16 surrogate pairs\n  // - offset       = start of this codepoint\n  // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n\n  Utf8ErrorReason[\"UTF16_SURROGATE\"] = \"UTF-16 surrogate\"; // The string is an overlong reperesentation\n  // - offset       = start of this codepoint\n  // - badCodepoint = the computed codepoint; already bounds checked\n\n  Utf8ErrorReason[\"OVERLONG\"] = \"overlong representation\";\n})(Utf8ErrorReason || (Utf8ErrorReason = {}));\n\nfunction errorFunc(reason, offset, bytes, output, badCodepoint) {\n  return logger$5.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason, offset, bytes, output, badCodepoint) {\n  // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n  if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n    let i = 0;\n\n    for (let o = offset + 1; o < bytes.length; o++) {\n      if (bytes[o] >> 6 !== 0x02) {\n        break;\n      }\n\n      i++;\n    }\n\n    return i;\n  } // This byte runs us past the end of the string, so just jump to the end\n  // (but the first byte was read already read and therefore skipped)\n\n\n  if (reason === Utf8ErrorReason.OVERRUN) {\n    return bytes.length - offset - 1;\n  } // Nothing to skip\n\n\n  return 0;\n}\n\nfunction replaceFunc(reason, offset, bytes, output, badCodepoint) {\n  // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n  if (reason === Utf8ErrorReason.OVERLONG) {\n    output.push(badCodepoint);\n    return 0;\n  } // Put the replacement character into the output\n\n\n  output.push(0xfffd); // Otherwise, process as if ignoring errors\n\n  return ignoreFunc(reason, offset, bytes);\n} // Common error handing strategies\n\n\nconst Utf8ErrorFuncs = Object.freeze({\n  error: errorFunc,\n  ignore: ignoreFunc,\n  replace: replaceFunc\n}); // http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\n\nfunction getUtf8CodePoints(bytes, onError) {\n  if (onError == null) {\n    onError = Utf8ErrorFuncs.error;\n  }\n\n  bytes = arrayify(bytes);\n  const result = [];\n  let i = 0; // Invalid bytes are ignored\n\n  while (i < bytes.length) {\n    const c = bytes[i++]; // 0xxx xxxx\n\n    if (c >> 7 === 0) {\n      result.push(c);\n      continue;\n    } // Multibyte; how many bytes left for this character?\n\n\n    let extraLength = null;\n    let overlongMask = null; // 110x xxxx 10xx xxxx\n\n    if ((c & 0xe0) === 0xc0) {\n      extraLength = 1;\n      overlongMask = 0x7f; // 1110 xxxx 10xx xxxx 10xx xxxx\n    } else if ((c & 0xf0) === 0xe0) {\n      extraLength = 2;\n      overlongMask = 0x7ff; // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n    } else if ((c & 0xf8) === 0xf0) {\n      extraLength = 3;\n      overlongMask = 0xffff;\n    } else {\n      if ((c & 0xc0) === 0x80) {\n        i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n      } else {\n        i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n      }\n\n      continue;\n    } // Do we have enough bytes in our data?\n\n\n    if (i - 1 + extraLength >= bytes.length) {\n      i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n      continue;\n    } // Remove the length prefix from the char\n\n\n    let res = c & (1 << 8 - extraLength - 1) - 1;\n\n    for (let j = 0; j < extraLength; j++) {\n      let nextChar = bytes[i]; // Invalid continuation byte\n\n      if ((nextChar & 0xc0) != 0x80) {\n        i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n        res = null;\n        break;\n      }\n\n      res = res << 6 | nextChar & 0x3f;\n      i++;\n    } // See above loop for invalid contimuation byte\n\n\n    if (res === null) {\n      continue;\n    } // Maximum code point\n\n\n    if (res > 0x10ffff) {\n      i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n      continue;\n    } // Reserved for UTF-16 surrogate halves\n\n\n    if (res >= 0xd800 && res <= 0xdfff) {\n      i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n      continue;\n    } // Check for overlong sequences (more bytes than needed)\n\n\n    if (res <= overlongMask) {\n      i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n      continue;\n    }\n\n    result.push(res);\n  }\n\n  return result;\n} // http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n\n\nfunction toUtf8Bytes(str, form = UnicodeNormalizationForm.current) {\n  if (form != UnicodeNormalizationForm.current) {\n    logger$5.checkNormalize();\n    str = str.normalize(form);\n  }\n\n  let result = [];\n\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n\n    if (c < 0x80) {\n      result.push(c);\n    } else if (c < 0x800) {\n      result.push(c >> 6 | 0xc0);\n      result.push(c & 0x3f | 0x80);\n    } else if ((c & 0xfc00) == 0xd800) {\n      i++;\n      const c2 = str.charCodeAt(i);\n\n      if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n        throw new Error(\"invalid utf-8 string\");\n      } // Surrogate Pair\n\n\n      const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n      result.push(pair >> 18 | 0xf0);\n      result.push(pair >> 12 & 0x3f | 0x80);\n      result.push(pair >> 6 & 0x3f | 0x80);\n      result.push(pair & 0x3f | 0x80);\n    } else {\n      result.push(c >> 12 | 0xe0);\n      result.push(c >> 6 & 0x3f | 0x80);\n      result.push(c & 0x3f | 0x80);\n    }\n  }\n\n  return arrayify(result);\n}\n\nfunction _toUtf8String(codePoints) {\n  return codePoints.map(codePoint => {\n    if (codePoint <= 0xffff) {\n      return String.fromCharCode(codePoint);\n    }\n\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10 & 0x3ff) + 0xd800, (codePoint & 0x3ff) + 0xdc00);\n  }).join(\"\");\n}\n\nfunction toUtf8String(bytes, onError) {\n  return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\nfunction toUtf8CodePoints(str, form = UnicodeNormalizationForm.current) {\n  return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n\nfunction bytes2(data) {\n  if (data.length % 4 !== 0) {\n    throw new Error(\"bad data\");\n  }\n\n  let result = [];\n\n  for (let i = 0; i < data.length; i += 4) {\n    result.push(parseInt(data.substring(i, i + 4), 16));\n  }\n\n  return result;\n}\n\nfunction createTable(data, func) {\n  if (!func) {\n    func = function (value) {\n      return [parseInt(value, 16)];\n    };\n  }\n\n  let lo = 0;\n  let result = {};\n  data.split(\",\").forEach(pair => {\n    let comps = pair.split(\":\");\n    lo += parseInt(comps[0], 16);\n    result[lo] = func(comps[1]);\n  });\n  return result;\n}\n\nfunction createRangeTable(data) {\n  let hi = 0;\n  return data.split(\",\").map(v => {\n    let comps = v.split(\"-\");\n\n    if (comps.length === 1) {\n      comps[1] = \"0\";\n    } else if (comps[1] === \"\") {\n      comps[1] = \"1\";\n    }\n\n    let lo = hi + parseInt(comps[0], 16);\n    hi = parseInt(comps[1], 16);\n    return {\n      l: lo,\n      h: hi\n    };\n  });\n}\n\nfunction matchMap(value, ranges) {\n  let lo = 0;\n\n  for (let i = 0; i < ranges.length; i++) {\n    let range = ranges[i];\n    lo += range.l;\n\n    if (value >= lo && value <= lo + range.h && (value - lo) % (range.d || 1) === 0) {\n      if (range.e && range.e.indexOf(value - lo) !== -1) {\n        continue;\n      }\n\n      return range;\n    }\n  }\n\n  return null;\n}\n\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\"); // @TODO: Make this relative...\n\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map(v => parseInt(v, 16));\nconst Table_B_2_ranges = [{\n  h: 25,\n  s: 32,\n  l: 65\n}, {\n  h: 30,\n  s: 32,\n  e: [23],\n  l: 127\n}, {\n  h: 54,\n  s: 1,\n  e: [48],\n  l: 64,\n  d: 2\n}, {\n  h: 14,\n  s: 1,\n  l: 57,\n  d: 2\n}, {\n  h: 44,\n  s: 1,\n  l: 17,\n  d: 2\n}, {\n  h: 10,\n  s: 1,\n  e: [2, 6, 8],\n  l: 61,\n  d: 2\n}, {\n  h: 16,\n  s: 1,\n  l: 68,\n  d: 2\n}, {\n  h: 84,\n  s: 1,\n  e: [18, 24, 66],\n  l: 19,\n  d: 2\n}, {\n  h: 26,\n  s: 32,\n  e: [17],\n  l: 435\n}, {\n  h: 22,\n  s: 1,\n  l: 71,\n  d: 2\n}, {\n  h: 15,\n  s: 80,\n  l: 40\n}, {\n  h: 31,\n  s: 32,\n  l: 16\n}, {\n  h: 32,\n  s: 1,\n  l: 80,\n  d: 2\n}, {\n  h: 52,\n  s: 1,\n  l: 42,\n  d: 2\n}, {\n  h: 12,\n  s: 1,\n  l: 55,\n  d: 2\n}, {\n  h: 40,\n  s: 1,\n  e: [38],\n  l: 15,\n  d: 2\n}, {\n  h: 14,\n  s: 1,\n  l: 48,\n  d: 2\n}, {\n  h: 37,\n  s: 48,\n  l: 49\n}, {\n  h: 148,\n  s: 1,\n  l: 6351,\n  d: 2\n}, {\n  h: 88,\n  s: 1,\n  l: 160,\n  d: 2\n}, {\n  h: 15,\n  s: 16,\n  l: 704\n}, {\n  h: 25,\n  s: 26,\n  l: 854\n}, {\n  h: 25,\n  s: 32,\n  l: 55915\n}, {\n  h: 37,\n  s: 40,\n  l: 1247\n}, {\n  h: 25,\n  s: -119711,\n  l: 53248\n}, {\n  h: 25,\n  s: -119763,\n  l: 52\n}, {\n  h: 25,\n  s: -119815,\n  l: 52\n}, {\n  h: 25,\n  s: -119867,\n  e: [1, 4, 5, 7, 8, 11, 12, 17],\n  l: 52\n}, {\n  h: 25,\n  s: -119919,\n  l: 52\n}, {\n  h: 24,\n  s: -119971,\n  e: [2, 7, 8, 17],\n  l: 52\n}, {\n  h: 24,\n  s: -120023,\n  e: [2, 7, 13, 15, 16, 17],\n  l: 52\n}, {\n  h: 25,\n  s: -120075,\n  l: 52\n}, {\n  h: 25,\n  s: -120127,\n  l: 52\n}, {\n  h: 25,\n  s: -120179,\n  l: 52\n}, {\n  h: 25,\n  s: -120231,\n  l: 52\n}, {\n  h: 25,\n  s: -120283,\n  l: 52\n}, {\n  h: 25,\n  s: -120335,\n  l: 52\n}, {\n  h: 24,\n  s: -119543,\n  e: [17],\n  l: 56\n}, {\n  h: 24,\n  s: -119601,\n  e: [17],\n  l: 58\n}, {\n  h: 24,\n  s: -119659,\n  e: [17],\n  l: 58\n}, {\n  h: 24,\n  s: -119717,\n  e: [17],\n  l: 58\n}, {\n  h: 24,\n  s: -119775,\n  e: [17],\n  l: 58\n}];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\n\nfunction flatten(values) {\n  return values.reduce((accum, value) => {\n    value.forEach(value => {\n      accum.push(value);\n    });\n    return accum;\n  }, []);\n}\n\nfunction _nameprepTableA1(codepoint) {\n  return !!matchMap(codepoint, Table_A_1_ranges);\n}\n\nfunction _nameprepTableB2(codepoint) {\n  let range = matchMap(codepoint, Table_B_2_ranges);\n\n  if (range) {\n    return [codepoint + range.s];\n  }\n\n  let codes = Table_B_2_lut_abs[codepoint];\n\n  if (codes) {\n    return codes;\n  }\n\n  let shift = Table_B_2_lut_rel[codepoint];\n\n  if (shift) {\n    return [codepoint + shift[0]];\n  }\n\n  let complex = Table_B_2_complex[codepoint];\n\n  if (complex) {\n    return complex;\n  }\n\n  return null;\n}\n\nfunction _nameprepTableC(codepoint) {\n  return !!matchMap(codepoint, Table_C_ranges);\n}\n\nfunction nameprep(value) {\n  // This allows platforms with incomplete normalize to bypass\n  // it for very basic names which the built-in toLowerCase\n  // will certainly handle correctly\n  if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {\n    return value.toLowerCase();\n  } // Get the code points (keeping the current normalization)\n\n\n  let codes = toUtf8CodePoints(value);\n  codes = flatten(codes.map(code => {\n    // Substitute Table B.1 (Maps to Nothing)\n    if (Table_B_1_flags.indexOf(code) >= 0) {\n      return [];\n    }\n\n    if (code >= 0xfe00 && code <= 0xfe0f) {\n      return [];\n    } // Substitute Table B.2 (Case Folding)\n\n\n    let codesTableB2 = _nameprepTableB2(code);\n\n    if (codesTableB2) {\n      return codesTableB2;\n    } // No Substitution\n\n\n    return [code];\n  })); // Normalize using form KC\n\n  codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC); // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n\n  codes.forEach(code => {\n    if (_nameprepTableC(code)) {\n      throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n    }\n  }); // Prohibit Unassigned Code Points (Table A.1)\n\n  codes.forEach(code => {\n    if (_nameprepTableA1(code)) {\n      throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n    }\n  }); // IDNA extras\n\n  let name = _toUtf8String(codes); // IDNA: 4.2.3.1\n\n\n  if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n    throw new Error(\"invalid hyphen\");\n  } // IDNA: 4.2.4\n\n\n  if (name.length > 63) {\n    throw new Error(\"too long\");\n  }\n\n  return name;\n}\n\nfunction id(text) {\n  return keccak256(toUtf8Bytes(text));\n}\n\nconst version$7 = \"hash/5.4.0\";\nconst logger$6 = new Logger(version$7);\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\nconst Partition = new RegExp(\"^((.*)\\\\.)?([^.]+)$\");\n\nfunction namehash(name) {\n  /* istanbul ignore if */\n  if (typeof name !== \"string\") {\n    logger$6.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n  }\n\n  let current = name;\n  let result = Zeros;\n\n  while (current.length) {\n    const partition = current.match(Partition);\n\n    if (partition == null || partition[2] === \"\") {\n      logger$6.throwArgumentError(\"invalid ENS address; missing component\", \"name\", name);\n    }\n\n    const label = toUtf8Bytes(nameprep(partition[3]));\n    result = keccak256(concat([result, keccak256(label)]));\n    current = partition[2] || \"\";\n  }\n\n  return hexlify(result);\n}\n\nvar __awaiter$1 = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$7 = new Logger(version$7);\nconst padding = new Uint8Array(32);\npadding.fill(0);\nconst NegativeOne = BigNumber.from(-1);\nconst Zero$1 = BigNumber.from(0);\nconst One = BigNumber.from(1);\nconst MaxUint256 = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\nfunction hexPadRight(value) {\n  const bytes = arrayify(value);\n  const padOffset = bytes.length % 32;\n\n  if (padOffset) {\n    return hexConcat([bytes, padding.slice(padOffset)]);\n  }\n\n  return hexlify(bytes);\n}\n\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero$1.toHexString(), 32);\nconst domainFieldTypes = {\n  name: \"string\",\n  version: \"string\",\n  chainId: \"uint256\",\n  verifyingContract: \"address\",\n  salt: \"bytes32\"\n};\nconst domainFieldNames = [\"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"];\n\nfunction checkString(key) {\n  return function (value) {\n    if (typeof value !== \"string\") {\n      logger$7.throwArgumentError(`invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);\n    }\n\n    return value;\n  };\n}\n\nconst domainChecks = {\n  name: checkString(\"name\"),\n  version: checkString(\"version\"),\n  chainId: function (value) {\n    try {\n      return BigNumber.from(value).toString();\n    } catch (error) {}\n\n    return logger$7.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n  },\n  verifyingContract: function (value) {\n    try {\n      return getAddress(value).toLowerCase();\n    } catch (error) {}\n\n    return logger$7.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n  },\n  salt: function (value) {\n    try {\n      const bytes = arrayify(value);\n\n      if (bytes.length !== 32) {\n        throw new Error(\"bad length\");\n      }\n\n      return hexlify(bytes);\n    } catch (error) {}\n\n    return logger$7.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n  }\n};\n\nfunction getBaseEncoder(type) {\n  // intXX and uintXX\n  {\n    const match = type.match(/^(u?)int(\\d*)$/);\n\n    if (match) {\n      const signed = match[1] === \"\";\n      const width = parseInt(match[2] || \"256\");\n\n      if (width % 8 !== 0 || width > 256 || match[2] && match[2] !== String(width)) {\n        logger$7.throwArgumentError(\"invalid numeric width\", \"type\", type);\n      }\n\n      const boundsUpper = MaxUint256.mask(signed ? width - 1 : width);\n      const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne) : Zero$1;\n      return function (value) {\n        const v = BigNumber.from(value);\n\n        if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n          logger$7.throwArgumentError(`value out-of-bounds for ${type}`, \"value\", value);\n        }\n\n        return hexZeroPad(v.toTwos(256).toHexString(), 32);\n      };\n    }\n  } // bytesXX\n\n  {\n    const match = type.match(/^bytes(\\d+)$/);\n\n    if (match) {\n      const width = parseInt(match[1]);\n\n      if (width === 0 || width > 32 || match[1] !== String(width)) {\n        logger$7.throwArgumentError(\"invalid bytes width\", \"type\", type);\n      }\n\n      return function (value) {\n        const bytes = arrayify(value);\n\n        if (bytes.length !== width) {\n          logger$7.throwArgumentError(`invalid length for ${type}`, \"value\", value);\n        }\n\n        return hexPadRight(value);\n      };\n    }\n  }\n\n  switch (type) {\n    case \"address\":\n      return function (value) {\n        return hexZeroPad(getAddress(value), 32);\n      };\n\n    case \"bool\":\n      return function (value) {\n        return !value ? hexFalse : hexTrue;\n      };\n\n    case \"bytes\":\n      return function (value) {\n        return keccak256(value);\n      };\n\n    case \"string\":\n      return function (value) {\n        return id(value);\n      };\n  }\n\n  return null;\n}\n\nfunction encodeType(name, fields) {\n  return `${name}(${fields.map(({\n    name,\n    type\n  }) => type + \" \" + name).join(\",\")})`;\n}\n\nclass TypedDataEncoder {\n  constructor(types) {\n    defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n    defineReadOnly(this, \"_encoderCache\", {});\n    defineReadOnly(this, \"_types\", {}); // Link struct types to their direct child structs\n\n    const links = {}; // Link structs to structs which contain them as a child\n\n    const parents = {}; // Link all subtypes within a given struct\n\n    const subtypes = {};\n    Object.keys(types).forEach(type => {\n      links[type] = {};\n      parents[type] = [];\n      subtypes[type] = {};\n    });\n\n    for (const name in types) {\n      const uniqueNames = {};\n      types[name].forEach(field => {\n        // Check each field has a unique name\n        if (uniqueNames[field.name]) {\n          logger$7.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, \"types\", types);\n        }\n\n        uniqueNames[field.name] = true; // Get the base type (drop any array specifiers)\n\n        const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n\n        if (baseType === name) {\n          logger$7.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`, \"types\", types);\n        } // Is this a base encoding type?\n\n\n        const encoder = getBaseEncoder(baseType);\n\n        if (encoder) {\n          return;\n        }\n\n        if (!parents[baseType]) {\n          logger$7.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`, \"types\", types);\n        } // Add linkage\n\n\n        parents[baseType].push(name);\n        links[name][baseType] = true;\n      });\n    } // Deduce the primary type\n\n\n    const primaryTypes = Object.keys(parents).filter(n => parents[n].length === 0);\n\n    if (primaryTypes.length === 0) {\n      logger$7.throwArgumentError(\"missing primary type\", \"types\", types);\n    } else if (primaryTypes.length > 1) {\n      logger$7.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map(t => JSON.stringify(t)).join(\", \")}`, \"types\", types);\n    }\n\n    defineReadOnly(this, \"primaryType\", primaryTypes[0]); // Check for circular type references\n\n    function checkCircular(type, found) {\n      if (found[type]) {\n        logger$7.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`, \"types\", types);\n      }\n\n      found[type] = true;\n      Object.keys(links[type]).forEach(child => {\n        if (!parents[child]) {\n          return;\n        } // Recursively check children\n\n\n        checkCircular(child, found); // Mark all ancestors as having this decendant\n\n        Object.keys(found).forEach(subtype => {\n          subtypes[subtype][child] = true;\n        });\n      });\n      delete found[type];\n    }\n\n    checkCircular(this.primaryType, {}); // Compute each fully describe type\n\n    for (const name in subtypes) {\n      const st = Object.keys(subtypes[name]);\n      st.sort();\n      this._types[name] = encodeType(name, types[name]) + st.map(t => encodeType(t, types[t])).join(\"\");\n    }\n  }\n\n  getEncoder(type) {\n    let encoder = this._encoderCache[type];\n\n    if (!encoder) {\n      encoder = this._encoderCache[type] = this._getEncoder(type);\n    }\n\n    return encoder;\n  }\n\n  _getEncoder(type) {\n    // Basic encoder type (address, bool, uint256, etc)\n    {\n      const encoder = getBaseEncoder(type);\n\n      if (encoder) {\n        return encoder;\n      }\n    } // Array\n\n    const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n\n    if (match) {\n      const subtype = match[1];\n      const subEncoder = this.getEncoder(subtype);\n      const length = parseInt(match[3]);\n      return value => {\n        if (length >= 0 && value.length !== length) {\n          logger$7.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n        }\n\n        let result = value.map(subEncoder);\n\n        if (this._types[subtype]) {\n          result = result.map(keccak256);\n        }\n\n        return keccak256(hexConcat(result));\n      };\n    } // Struct\n\n\n    const fields = this.types[type];\n\n    if (fields) {\n      const encodedType = id(this._types[type]);\n      return value => {\n        const values = fields.map(({\n          name,\n          type\n        }) => {\n          const result = this.getEncoder(type)(value[name]);\n\n          if (this._types[type]) {\n            return keccak256(result);\n          }\n\n          return result;\n        });\n        values.unshift(encodedType);\n        return hexConcat(values);\n      };\n    }\n\n    return logger$7.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n  }\n\n  encodeType(name) {\n    const result = this._types[name];\n\n    if (!result) {\n      logger$7.throwArgumentError(`unknown type: ${JSON.stringify(name)}`, \"name\", name);\n    }\n\n    return result;\n  }\n\n  encodeData(type, value) {\n    return this.getEncoder(type)(value);\n  }\n\n  hashStruct(name, value) {\n    return keccak256(this.encodeData(name, value));\n  }\n\n  encode(value) {\n    return this.encodeData(this.primaryType, value);\n  }\n\n  hash(value) {\n    return this.hashStruct(this.primaryType, value);\n  }\n\n  _visit(type, value, callback) {\n    // Basic encoder type (address, bool, uint256, etc)\n    {\n      const encoder = getBaseEncoder(type);\n\n      if (encoder) {\n        return callback(type, value);\n      }\n    } // Array\n\n    const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n\n    if (match) {\n      const subtype = match[1];\n      const length = parseInt(match[3]);\n\n      if (length >= 0 && value.length !== length) {\n        logger$7.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n      }\n\n      return value.map(v => this._visit(subtype, v, callback));\n    } // Struct\n\n\n    const fields = this.types[type];\n\n    if (fields) {\n      return fields.reduce((accum, {\n        name,\n        type\n      }) => {\n        accum[name] = this._visit(type, value[name], callback);\n        return accum;\n      }, {});\n    }\n\n    return logger$7.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n  }\n\n  visit(value, callback) {\n    return this._visit(this.primaryType, value, callback);\n  }\n\n  static from(types) {\n    return new TypedDataEncoder(types);\n  }\n\n  static getPrimaryType(types) {\n    return TypedDataEncoder.from(types).primaryType;\n  }\n\n  static hashStruct(name, types, value) {\n    return TypedDataEncoder.from(types).hashStruct(name, value);\n  }\n\n  static hashDomain(domain) {\n    const domainFields = [];\n\n    for (const name in domain) {\n      const type = domainFieldTypes[name];\n\n      if (!type) {\n        logger$7.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`, \"domain\", domain);\n      }\n\n      domainFields.push({\n        name,\n        type\n      });\n    }\n\n    domainFields.sort((a, b) => {\n      return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n    });\n    return TypedDataEncoder.hashStruct(\"EIP712Domain\", {\n      EIP712Domain: domainFields\n    }, domain);\n  }\n\n  static encode(domain, types, value) {\n    return hexConcat([\"0x1901\", TypedDataEncoder.hashDomain(domain), TypedDataEncoder.from(types).hash(value)]);\n  }\n\n  static hash(domain, types, value) {\n    return keccak256(TypedDataEncoder.encode(domain, types, value));\n  } // Replaces all address types with ENS names with their looked up address\n\n\n  static resolveNames(domain, types, value, resolveName) {\n    return __awaiter$1(this, void 0, void 0, function* () {\n      // Make a copy to isolate it from the object passed in\n      domain = shallowCopy(domain); // Look up all ENS names\n\n      const ensCache = {}; // Do we need to look up the domain's verifyingContract?\n\n      if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n        ensCache[domain.verifyingContract] = \"0x\";\n      } // We are going to use the encoder to visit all the base values\n\n\n      const encoder = TypedDataEncoder.from(types); // Get a list of all the addresses\n\n      encoder.visit(value, (type, value) => {\n        if (type === \"address\" && !isHexString(value, 20)) {\n          ensCache[value] = \"0x\";\n        }\n\n        return value;\n      }); // Lookup each name\n\n      for (const name in ensCache) {\n        ensCache[name] = yield resolveName(name);\n      } // Replace the domain verifyingContract if needed\n\n\n      if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n        domain.verifyingContract = ensCache[domain.verifyingContract];\n      } // Replace all ENS names with their address\n\n\n      value = encoder.visit(value, (type, value) => {\n        if (type === \"address\" && ensCache[value]) {\n          return ensCache[value];\n        }\n\n        return value;\n      });\n      return {\n        domain,\n        value\n      };\n    });\n  }\n\n  static getPayload(domain, types, value) {\n    // Validate the domain fields\n    TypedDataEncoder.hashDomain(domain); // Derive the EIP712Domain Struct reference type\n\n    const domainValues = {};\n    const domainTypes = [];\n    domainFieldNames.forEach(name => {\n      const value = domain[name];\n\n      if (value == null) {\n        return;\n      }\n\n      domainValues[name] = domainChecks[name](value);\n      domainTypes.push({\n        name,\n        type: domainFieldTypes[name]\n      });\n    });\n    const encoder = TypedDataEncoder.from(types);\n    const typesWithDomain = shallowCopy(types);\n\n    if (typesWithDomain.EIP712Domain) {\n      logger$7.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n    } else {\n      typesWithDomain.EIP712Domain = domainTypes;\n    } // Validate the data structures and types\n\n\n    encoder.encode(value);\n    return {\n      types: typesWithDomain,\n      domain: domainValues,\n      primaryType: encoder.primaryType,\n      message: encoder.visit(value, (type, value) => {\n        // bytes\n        if (type.match(/^bytes(\\d*)/)) {\n          return hexlify(arrayify(value));\n        } // uint or int\n\n\n        if (type.match(/^u?int/)) {\n          return BigNumber.from(value).toString();\n        }\n\n        switch (type) {\n          case \"address\":\n            return value.toLowerCase();\n\n          case \"bool\":\n            return !!value;\n\n          case \"string\":\n            if (typeof value !== \"string\") {\n              logger$7.throwArgumentError(`invalid string`, \"value\", value);\n            }\n\n            return value;\n        }\n\n        return logger$7.throwArgumentError(\"unsupported type\", \"type\", type);\n      })\n    };\n  }\n\n}\n\nconst version$8 = \"abstract-provider/5.4.1\";\n\nvar __awaiter$2 = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$8 = new Logger(version$8); //export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\n\nclass ForkEvent extends Description {\n  static isForkEvent(value) {\n    return !!(value && value._isForkEvent);\n  }\n\n} ///////////////////////////////\n// Exported Abstracts\n\n\nclass Provider {\n  constructor() {\n    logger$8.checkAbstract(new.target, Provider);\n    defineReadOnly(this, \"_isProvider\", true);\n  }\n\n  getFeeData() {\n    return __awaiter$2(this, void 0, void 0, function* () {\n      const {\n        block,\n        gasPrice\n      } = yield resolveProperties({\n        block: this.getBlock(\"latest\"),\n        gasPrice: this.getGasPrice().catch(error => {\n          // @TODO: Why is this now failing on Calaveras?\n          //console.log(error);\n          return null;\n        })\n      });\n      let maxFeePerGas = null,\n          maxPriorityFeePerGas = null;\n\n      if (block && block.baseFeePerGas) {\n        // We may want to compute this more accurately in the future,\n        // using the formula \"check if the base fee is correct\".\n        // See: https://eips.ethereum.org/EIPS/eip-1559\n        maxPriorityFeePerGas = BigNumber.from(\"2500000000\");\n        maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n      }\n\n      return {\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        gasPrice\n      };\n    });\n  } // Alias for \"on\"\n\n\n  addListener(eventName, listener) {\n    return this.on(eventName, listener);\n  } // Alias for \"off\"\n\n\n  removeListener(eventName, listener) {\n    return this.off(eventName, listener);\n  }\n\n  static isProvider(value) {\n    return !!(value && value._isProvider);\n  }\n\n}\n\nconst version$9 = \"abstract-signer/5.4.1\";\n\nvar __awaiter$3 = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$9 = new Logger(version$9);\nconst allowedTransactionKeys = [\"accessList\", \"chainId\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"];\nconst forwardErrors = [Logger.errors.INSUFFICIENT_FUNDS, Logger.errors.NONCE_EXPIRED, Logger.errors.REPLACEMENT_UNDERPRICED];\n\nclass Signer {\n  ///////////////////\n  // Sub-classes MUST call super\n  constructor() {\n    logger$9.checkAbstract(new.target, Signer);\n    defineReadOnly(this, \"_isSigner\", true);\n  } ///////////////////\n  // Sub-classes MAY override these\n\n\n  getBalance(blockTag) {\n    return __awaiter$3(this, void 0, void 0, function* () {\n      this._checkProvider(\"getBalance\");\n\n      return yield this.provider.getBalance(this.getAddress(), blockTag);\n    });\n  }\n\n  getTransactionCount(blockTag) {\n    return __awaiter$3(this, void 0, void 0, function* () {\n      this._checkProvider(\"getTransactionCount\");\n\n      return yield this.provider.getTransactionCount(this.getAddress(), blockTag);\n    });\n  } // Populates \"from\" if unspecified, and estimates the gas for the transation\n\n\n  estimateGas(transaction) {\n    return __awaiter$3(this, void 0, void 0, function* () {\n      this._checkProvider(\"estimateGas\");\n\n      const tx = yield resolveProperties(this.checkTransaction(transaction));\n      return yield this.provider.estimateGas(tx);\n    });\n  } // Populates \"from\" if unspecified, and calls with the transation\n\n\n  call(transaction, blockTag) {\n    return __awaiter$3(this, void 0, void 0, function* () {\n      this._checkProvider(\"call\");\n\n      const tx = yield resolveProperties(this.checkTransaction(transaction));\n      return yield this.provider.call(tx, blockTag);\n    });\n  } // Populates all fields in a transaction, signs it and sends it to the network\n\n\n  sendTransaction(transaction) {\n    return __awaiter$3(this, void 0, void 0, function* () {\n      this._checkProvider(\"sendTransaction\");\n\n      const tx = yield this.populateTransaction(transaction);\n      const signedTx = yield this.signTransaction(tx);\n      return yield this.provider.sendTransaction(signedTx);\n    });\n  }\n\n  getChainId() {\n    return __awaiter$3(this, void 0, void 0, function* () {\n      this._checkProvider(\"getChainId\");\n\n      const network = yield this.provider.getNetwork();\n      return network.chainId;\n    });\n  }\n\n  getGasPrice() {\n    return __awaiter$3(this, void 0, void 0, function* () {\n      this._checkProvider(\"getGasPrice\");\n\n      return yield this.provider.getGasPrice();\n    });\n  }\n\n  getFeeData() {\n    return __awaiter$3(this, void 0, void 0, function* () {\n      this._checkProvider(\"getFeeData\");\n\n      return yield this.provider.getFeeData();\n    });\n  }\n\n  resolveName(name) {\n    return __awaiter$3(this, void 0, void 0, function* () {\n      this._checkProvider(\"resolveName\");\n\n      return yield this.provider.resolveName(name);\n    });\n  } // Checks a transaction does not contain invalid keys and if\n  // no \"from\" is provided, populates it.\n  // - does NOT require a provider\n  // - adds \"from\" is not present\n  // - returns a COPY (safe to mutate the result)\n  // By default called from: (overriding these prevents it)\n  //   - call\n  //   - estimateGas\n  //   - populateTransaction (and therefor sendTransaction)\n\n\n  checkTransaction(transaction) {\n    for (const key in transaction) {\n      if (allowedTransactionKeys.indexOf(key) === -1) {\n        logger$9.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n      }\n    }\n\n    const tx = shallowCopy(transaction);\n\n    if (tx.from == null) {\n      tx.from = this.getAddress();\n    } else {\n      // Make sure any provided address matches this signer\n      tx.from = Promise.all([Promise.resolve(tx.from), this.getAddress()]).then(result => {\n        if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n          logger$9.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n        }\n\n        return result[0];\n      });\n    }\n\n    return tx;\n  } // Populates ALL keys for a transaction and checks that \"from\" matches\n  // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n  // By default called from: (overriding these prevents it)\n  //   - sendTransaction\n  //\n  // Notes:\n  //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n\n\n  populateTransaction(transaction) {\n    return __awaiter$3(this, void 0, void 0, function* () {\n      const tx = yield resolveProperties(this.checkTransaction(transaction));\n\n      if (tx.to != null) {\n        tx.to = Promise.resolve(tx.to).then(to => __awaiter$3(this, void 0, void 0, function* () {\n          if (to == null) {\n            return null;\n          }\n\n          const address = yield this.resolveName(to);\n\n          if (address == null) {\n            logger$9.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n          }\n\n          return address;\n        })); // Prevent this error from causing an UnhandledPromiseException\n\n        tx.to.catch(error => {});\n      } // Do not allow mixing pre-eip-1559 and eip-1559 proerties\n\n\n      const hasEip1559 = tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null;\n\n      if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n        logger$9.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n      } else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n        logger$9.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n      }\n\n      if ((tx.type === 2 || tx.type == null) && tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null) {\n        // Fully-formed EIP-1559 transaction (skip getFeeData)\n        tx.type = 2;\n      } else if (tx.type === 0 || tx.type === 1) {\n        // Explicit Legacy or EIP-2930 transaction\n        // Populate missing gasPrice\n        if (tx.gasPrice == null) {\n          tx.gasPrice = this.getGasPrice();\n        }\n      } else {\n        // We need to get fee data to determine things\n        const feeData = yield this.getFeeData();\n\n        if (tx.type == null) {\n          // We need to auto-detect the intended type of this transaction...\n          if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n            // The network supports EIP-1559!\n            // Upgrade transaction from null to eip-1559\n            tx.type = 2;\n\n            if (tx.gasPrice != null) {\n              // Using legacy gasPrice property on an eip-1559 network,\n              // so use gasPrice as both fee properties\n              const gasPrice = tx.gasPrice;\n              delete tx.gasPrice;\n              tx.maxFeePerGas = gasPrice;\n              tx.maxPriorityFeePerGas = gasPrice;\n            } else {\n              // Populate missing fee data\n              if (tx.maxFeePerGas == null) {\n                tx.maxFeePerGas = feeData.maxFeePerGas;\n              }\n\n              if (tx.maxPriorityFeePerGas == null) {\n                tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n              }\n            }\n          } else if (feeData.gasPrice != null) {\n            // Network doesn't support EIP-1559...\n            // ...but they are trying to use EIP-1559 properties\n            if (hasEip1559) {\n              logger$9.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"populateTransaction\"\n              });\n            } // Populate missing fee data\n\n\n            if (tx.gasPrice == null) {\n              tx.gasPrice = feeData.gasPrice;\n            } // Explicitly set untyped transaction to legacy\n\n\n            tx.type = 0;\n          } else {\n            // getFeeData has failed us.\n            logger$9.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n              operation: \"signer.getFeeData\"\n            });\n          }\n        } else if (tx.type === 2) {\n          // Explicitly using EIP-1559\n          // Populate missing fee data\n          if (tx.maxFeePerGas == null) {\n            tx.maxFeePerGas = feeData.maxFeePerGas;\n          }\n\n          if (tx.maxPriorityFeePerGas == null) {\n            tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n          }\n        }\n      }\n\n      if (tx.nonce == null) {\n        tx.nonce = this.getTransactionCount(\"pending\");\n      }\n\n      if (tx.gasLimit == null) {\n        tx.gasLimit = this.estimateGas(tx).catch(error => {\n          if (forwardErrors.indexOf(error.code) >= 0) {\n            throw error;\n          }\n\n          return logger$9.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error: error,\n            tx: tx\n          });\n        });\n      }\n\n      if (tx.chainId == null) {\n        tx.chainId = this.getChainId();\n      } else {\n        tx.chainId = Promise.all([Promise.resolve(tx.chainId), this.getChainId()]).then(results => {\n          if (results[1] !== 0 && results[0] !== results[1]) {\n            logger$9.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n          }\n\n          return results[0];\n        });\n      }\n\n      return yield resolveProperties(tx);\n    });\n  } ///////////////////\n  // Sub-classes SHOULD leave these alone\n\n\n  _checkProvider(operation) {\n    if (!this.provider) {\n      logger$9.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: operation || \"_checkProvider\"\n      });\n    }\n  }\n\n  static isSigner(value) {\n    return !!(value && value._isSigner);\n  }\n\n}\n\nvar minimalisticAssert = assert;\n\nfunction assert(val, msg) {\n  if (!val) throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r) throw new Error(msg || 'Assertion failed: ' + l + ' != ' + r);\n};\n\nvar inherits_browser = createCommonjsModule(function (module) {\n  if (typeof Object.create === 'function') {\n    // implementation from standard node.js 'util' module\n    module.exports = function inherits(ctor, superCtor) {\n      if (superCtor) {\n        ctor.super_ = superCtor;\n        ctor.prototype = Object.create(superCtor.prototype, {\n          constructor: {\n            value: ctor,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n      }\n    };\n  } else {\n    // old school shim for old browsers\n    module.exports = function inherits(ctor, superCtor) {\n      if (superCtor) {\n        ctor.super_ = superCtor;\n\n        var TempCtor = function () {};\n\n        TempCtor.prototype = superCtor.prototype;\n        ctor.prototype = new TempCtor();\n        ctor.prototype.constructor = ctor;\n      }\n    };\n  }\n});\nvar inherits_1 = inherits_browser;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg)) return msg.slice();\n  if (!msg) return [];\n  var res = [];\n\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = c >> 6 | 192;\n          res[p++] = c & 63 | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = c >> 18 | 240;\n          res[p++] = c >> 12 & 63 | 128;\n          res[p++] = c >> 6 & 63 | 128;\n          res[p++] = c & 63 | 128;\n        } else {\n          res[p++] = c >> 12 | 224;\n          res[p++] = c >> 6 & 63 | 128;\n          res[p++] = c & 63 | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0) msg = '0' + msg;\n\n      for (i = 0; i < msg.length; i += 2) res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++) res[i] = msg[i] | 0;\n  }\n\n  return res;\n}\n\nvar toArray_1 = toArray;\n\nfunction toHex$1(msg) {\n  var res = '';\n\n  for (var i = 0; i < msg.length; i++) res += zero2(msg[i].toString(16));\n\n  return res;\n}\n\nvar toHex_1 = toHex$1;\n\nfunction htonl(w) {\n  var res = w >>> 24 | w >>> 8 & 0xff00 | w << 8 & 0xff0000 | (w & 0xff) << 24;\n  return res >>> 0;\n}\n\nvar htonl_1 = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little') w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n\n  return res;\n}\n\nvar toHex32_1 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1) return '0' + word;else return word;\n}\n\nvar zero2_1 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7) return '0' + word;else if (word.length === 6) return '00' + word;else if (word.length === 5) return '000' + word;else if (word.length === 4) return '0000' + word;else if (word.length === 3) return '00000' + word;else if (word.length === 2) return '000000' + word;else if (word.length === 1) return '0000000' + word;else return word;\n}\n\nvar zero8_1 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  minimalisticAssert(len % 4 === 0);\n  var res = new Array(len / 4);\n\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big') w = msg[k] << 24 | msg[k + 1] << 16 | msg[k + 2] << 8 | msg[k + 3];else w = msg[k + 3] << 24 | msg[k + 2] << 16 | msg[k + 1] << 8 | msg[k];\n    res[i] = w >>> 0;\n  }\n\n  return res;\n}\n\nvar join32_1 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = m >>> 16 & 0xff;\n      res[k + 2] = m >>> 8 & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = m >>> 16 & 0xff;\n      res[k + 1] = m >>> 8 & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n\n  return res;\n}\n\nvar split32_1 = split32;\n\nfunction rotr32(w, b) {\n  return w >>> b | w << 32 - b;\n}\n\nvar rotr32_1 = rotr32;\n\nfunction rotl32(w, b) {\n  return w << b | w >>> 32 - b;\n}\n\nvar rotl32_1 = rotl32;\n\nfunction sum32(a, b) {\n  return a + b >>> 0;\n}\n\nvar sum32_1 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return a + b + c >>> 0;\n}\n\nvar sum32_3_1 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return a + b + c + d >>> 0;\n}\n\nvar sum32_4_1 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return a + b + c + d + e >>> 0;\n}\n\nvar sum32_5_1 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n  var lo = al + bl >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\n\nvar sum64_1 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = al + bl >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\n\nvar sum64_hi_1 = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\n\nvar sum64_lo_1 = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = lo + bl >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = lo + cl >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = lo + dl >>> 0;\n  carry += lo < dl ? 1 : 0;\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\n\nvar sum64_4_hi_1 = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\n\nvar sum64_4_lo_1 = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = lo + bl >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = lo + cl >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = lo + dl >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = lo + el >>> 0;\n  carry += lo < el ? 1 : 0;\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\n\nvar sum64_5_hi_1 = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n  return lo >>> 0;\n}\n\nvar sum64_5_lo_1 = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = al << 32 - num | ah >>> num;\n  return r >>> 0;\n}\n\nvar rotr64_hi_1 = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = ah << 32 - num | al >>> num;\n  return r >>> 0;\n}\n\nvar rotr64_lo_1 = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\n\nvar shr64_hi_1 = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = ah << 32 - num | al >>> num;\n  return r >>> 0;\n}\n\nvar shr64_lo_1 = shr64_lo;\nvar utils = {\n  inherits: inherits_1,\n  toArray: toArray_1,\n  toHex: toHex_1,\n  htonl: htonl_1,\n  toHex32: toHex32_1,\n  zero2: zero2_1,\n  zero8: zero8_1,\n  join32: join32_1,\n  split32: split32_1,\n  rotr32: rotr32_1,\n  rotl32: rotl32_1,\n  sum32: sum32_1,\n  sum32_3: sum32_3_1,\n  sum32_4: sum32_4_1,\n  sum32_5: sum32_5_1,\n  sum64: sum64_1,\n  sum64_hi: sum64_hi_1,\n  sum64_lo: sum64_lo_1,\n  sum64_4_hi: sum64_4_hi_1,\n  sum64_4_lo: sum64_4_lo_1,\n  sum64_5_hi: sum64_5_hi_1,\n  sum64_5_lo: sum64_5_lo_1,\n  rotr64_hi: rotr64_hi_1,\n  rotr64_lo: rotr64_lo_1,\n  shr64_hi: shr64_hi_1,\n  shr64_lo: shr64_lo_1\n};\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\n\nvar BlockHash_1 = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending) this.pending = msg;else this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length; // Enough data, try updating\n\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending; // Process pending data in blocks\n\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0) this.pending = null;\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n\n    for (var i = 0; i < msg.length; i += this._delta32) this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  minimalisticAssert(this.pending === null);\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - (len + this.padLength) % bytes;\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n\n  for (var i = 1; i < k; i++) res[i] = 0; // Append length\n\n\n  len <<= 3;\n\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++) res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = len >>> 24 & 0xff;\n    res[i++] = len >>> 16 & 0xff;\n    res[i++] = len >>> 8 & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = len >>> 8 & 0xff;\n    res[i++] = len >>> 16 & 0xff;\n    res[i++] = len >>> 24 & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++) res[i++] = 0;\n  }\n\n  return res;\n};\n\nvar common = {\n  BlockHash: BlockHash_1\n};\nvar rotr32$1 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0) return ch32(x, y, z);\n  if (s === 1 || s === 3) return p32(x, y, z);\n  if (s === 2) return maj32(x, y, z);\n}\n\nvar ft_1_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return x & y ^ ~x & z;\n}\n\nvar ch32_1 = ch32;\n\nfunction maj32(x, y, z) {\n  return x & y ^ x & z ^ y & z;\n}\n\nvar maj32_1 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\n\nvar p32_1 = p32;\n\nfunction s0_256(x) {\n  return rotr32$1(x, 2) ^ rotr32$1(x, 13) ^ rotr32$1(x, 22);\n}\n\nvar s0_256_1 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32$1(x, 6) ^ rotr32$1(x, 11) ^ rotr32$1(x, 25);\n}\n\nvar s1_256_1 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32$1(x, 7) ^ rotr32$1(x, 18) ^ x >>> 3;\n}\n\nvar g0_256_1 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32$1(x, 17) ^ rotr32$1(x, 19) ^ x >>> 10;\n}\n\nvar g1_256_1 = g1_256;\nvar common$1 = {\n  ft_1: ft_1_1,\n  ch32: ch32_1,\n  maj32: maj32_1,\n  p32: p32_1,\n  s0_256: s0_256_1,\n  s1_256: s1_256_1,\n  g0_256: g0_256_1,\n  g1_256: g1_256_1\n};\nvar rotl32$1 = utils.rotl32;\nvar sum32$1 = utils.sum32;\nvar sum32_5$1 = utils.sum32_5;\nvar ft_1$1 = common$1.ft_1;\nvar BlockHash$1 = common.BlockHash;\nvar sha1_K = [0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xCA62C1D6];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1)) return new SHA1();\n  BlockHash$1.call(this);\n  this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash$1);\nvar _1 = SHA1;\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++) W[i] = msg[start + i];\n\n  for (; i < W.length; i++) W[i] = rotl32$1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5$1(rotl32$1(a, 5), ft_1$1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32$1(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32$1(this.h[0], a);\n  this.h[1] = sum32$1(this.h[1], b);\n  this.h[2] = sum32$1(this.h[2], c);\n  this.h[3] = sum32$1(this.h[3], d);\n  this.h[4] = sum32$1(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h, 'big');else return utils.split32(this.h, 'big');\n};\n\nvar sum32$2 = utils.sum32;\nvar sum32_4$1 = utils.sum32_4;\nvar sum32_5$2 = utils.sum32_5;\nvar ch32$1 = common$1.ch32;\nvar maj32$1 = common$1.maj32;\nvar s0_256$1 = common$1.s0_256;\nvar s1_256$1 = common$1.s1_256;\nvar g0_256$1 = common$1.g0_256;\nvar g1_256$1 = common$1.g1_256;\nvar BlockHash$2 = common.BlockHash;\nvar sha256_K = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256)) return new SHA256();\n  BlockHash$2.call(this);\n  this.h = [0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\n\nutils.inherits(SHA256, BlockHash$2);\nvar _256 = SHA256;\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++) W[i] = msg[start + i];\n\n  for (; i < W.length; i++) W[i] = sum32_4$1(g1_256$1(W[i - 2]), W[i - 7], g0_256$1(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n  minimalisticAssert(this.k.length === W.length);\n\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5$2(h, s1_256$1(e), ch32$1(e, f, g), this.k[i], W[i]);\n    var T2 = sum32$2(s0_256$1(a), maj32$1(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32$2(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32$2(T1, T2);\n  }\n\n  this.h[0] = sum32$2(this.h[0], a);\n  this.h[1] = sum32$2(this.h[1], b);\n  this.h[2] = sum32$2(this.h[2], c);\n  this.h[3] = sum32$2(this.h[3], d);\n  this.h[4] = sum32$2(this.h[4], e);\n  this.h[5] = sum32$2(this.h[5], f);\n  this.h[6] = sum32$2(this.h[6], g);\n  this.h[7] = sum32$2(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h, 'big');else return utils.split32(this.h, 'big');\n};\n\nfunction SHA224() {\n  if (!(this instanceof SHA224)) return new SHA224();\n\n  _256.call(this);\n\n  this.h = [0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4];\n}\n\nutils.inherits(SHA224, _256);\nvar _224 = SHA224;\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex') return utils.toHex32(this.h.slice(0, 7), 'big');else return utils.split32(this.h.slice(0, 7), 'big');\n};\n\nvar rotr64_hi$1 = utils.rotr64_hi;\nvar rotr64_lo$1 = utils.rotr64_lo;\nvar shr64_hi$1 = utils.shr64_hi;\nvar shr64_lo$1 = utils.shr64_lo;\nvar sum64$1 = utils.sum64;\nvar sum64_hi$1 = utils.sum64_hi;\nvar sum64_lo$1 = utils.sum64_lo;\nvar sum64_4_hi$1 = utils.sum64_4_hi;\nvar sum64_4_lo$1 = utils.sum64_4_lo;\nvar sum64_5_hi$1 = utils.sum64_5_hi;\nvar sum64_5_lo$1 = utils.sum64_5_lo;\nvar BlockHash$3 = common.BlockHash;\nvar sha512_K = [0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc, 0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118, 0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2, 0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694, 0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3, 0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65, 0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5, 0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4, 0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725, 0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70, 0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df, 0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b, 0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30, 0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8, 0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8, 0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3, 0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec, 0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b, 0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178, 0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b, 0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c, 0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512)) return new SHA512();\n  BlockHash$3.call(this);\n  this.h = [0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1, 0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\n\nutils.inherits(SHA512, BlockHash$3);\nvar _512 = SHA512;\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W; // 32 x 32bit words\n\n  for (var i = 0; i < 32; i++) W[i] = msg[start + i];\n\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]); // i - 2\n\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14]; // i - 7\n\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]); // i - 15\n\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32]; // i - 16\n\n    var c3_lo = W[i - 31];\n    W[i] = sum64_4_hi$1(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo$1(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n  minimalisticAssert(this.k.length === W.length);\n\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n    var T1_hi = sum64_5_hi$1(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo$1(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n    var T2_hi = sum64_hi$1(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo$1(c0_hi, c0_lo, c1_hi, c1_lo);\n    hh = gh;\n    hl = gl;\n    gh = fh;\n    gl = fl;\n    fh = eh;\n    fl = el;\n    eh = sum64_hi$1(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo$1(dl, dl, T1_hi, T1_lo);\n    dh = ch;\n    dl = cl;\n    ch = bh;\n    cl = bl;\n    bh = ah;\n    bl = al;\n    ah = sum64_hi$1(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo$1(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64$1(this.h, 0, ah, al);\n  sum64$1(this.h, 2, bh, bl);\n  sum64$1(this.h, 4, ch, cl);\n  sum64$1(this.h, 6, dh, dl);\n  sum64$1(this.h, 8, eh, el);\n  sum64$1(this.h, 10, fh, fl);\n  sum64$1(this.h, 12, gh, gl);\n  sum64$1(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h, 'big');else return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = xh & yh ^ ~xh & zh;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = xl & yl ^ ~xl & zl;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = xh & yh ^ xh & zh ^ yh & zh;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = xl & yl ^ xl & zl ^ yl & zl;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi$1(xh, xl, 28);\n  var c1_hi = rotr64_hi$1(xl, xh, 2); // 34\n\n  var c2_hi = rotr64_hi$1(xl, xh, 7); // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo$1(xh, xl, 28);\n  var c1_lo = rotr64_lo$1(xl, xh, 2); // 34\n\n  var c2_lo = rotr64_lo$1(xl, xh, 7); // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi$1(xh, xl, 14);\n  var c1_hi = rotr64_hi$1(xh, xl, 18);\n  var c2_hi = rotr64_hi$1(xl, xh, 9); // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo$1(xh, xl, 14);\n  var c1_lo = rotr64_lo$1(xh, xl, 18);\n  var c2_lo = rotr64_lo$1(xl, xh, 9); // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi$1(xh, xl, 1);\n  var c1_hi = rotr64_hi$1(xh, xl, 8);\n  var c2_hi = shr64_hi$1(xh, xl, 7);\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo$1(xh, xl, 1);\n  var c1_lo = rotr64_lo$1(xh, xl, 8);\n  var c2_lo = shr64_lo$1(xh, xl, 7);\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi$1(xh, xl, 19);\n  var c1_hi = rotr64_hi$1(xl, xh, 29); // 61\n\n  var c2_hi = shr64_hi$1(xh, xl, 6);\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo$1(xh, xl, 19);\n  var c1_lo = rotr64_lo$1(xl, xh, 29); // 61\n\n  var c2_lo = shr64_lo$1(xh, xl, 6);\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction SHA384() {\n  if (!(this instanceof SHA384)) return new SHA384();\n\n  _512.call(this);\n\n  this.h = [0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939, 0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4];\n}\n\nutils.inherits(SHA384, _512);\nvar _384 = SHA384;\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h.slice(0, 12), 'big');else return utils.split32(this.h.slice(0, 12), 'big');\n};\n\nvar sha1 = _1;\nvar sha224 = _224;\nvar sha256 = _256;\nvar sha384 = _384;\nvar sha512 = _512;\nvar sha = {\n  sha1: sha1,\n  sha224: sha224,\n  sha256: sha256,\n  sha384: sha384,\n  sha512: sha512\n};\nvar rotl32$2 = utils.rotl32;\nvar sum32$3 = utils.sum32;\nvar sum32_3$1 = utils.sum32_3;\nvar sum32_4$2 = utils.sum32_4;\nvar BlockHash$4 = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160)) return new RIPEMD160();\n  BlockHash$4.call(this);\n  this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n  this.endian = 'little';\n}\n\nutils.inherits(RIPEMD160, BlockHash$4);\nvar ripemd160 = RIPEMD160;\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n\n  for (var j = 0; j < 80; j++) {\n    var T = sum32$3(rotl32$2(sum32_4$2(A, f(j, B, C, D), msg[r[j] + start], K(j)), s[j]), E);\n    A = E;\n    E = D;\n    D = rotl32$2(C, 10);\n    C = B;\n    B = T;\n    T = sum32$3(rotl32$2(sum32_4$2(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)), sh[j]), Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32$2(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n\n  T = sum32_3$1(this.h[1], C, Dh);\n  this.h[1] = sum32_3$1(this.h[2], D, Eh);\n  this.h[2] = sum32_3$1(this.h[3], E, Ah);\n  this.h[3] = sum32_3$1(this.h[4], A, Bh);\n  this.h[4] = sum32_3$1(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h, 'little');else return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15) return x ^ y ^ z;else if (j <= 31) return x & y | ~x & z;else if (j <= 47) return (x | ~y) ^ z;else if (j <= 63) return x & z | y & ~z;else return x ^ (y | ~z);\n}\n\nfunction K(j) {\n  if (j <= 15) return 0x00000000;else if (j <= 31) return 0x5a827999;else if (j <= 47) return 0x6ed9eba1;else if (j <= 63) return 0x8f1bbcdc;else return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15) return 0x50a28be6;else if (j <= 31) return 0x5c4dd124;else if (j <= 47) return 0x6d703ef3;else if (j <= 63) return 0x7a6d76e9;else return 0x00000000;\n}\n\nvar r = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13];\nvar rh = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11];\nvar s = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6];\nvar sh = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];\nvar ripemd = {\n  ripemd160: ripemd160\n};\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac)) return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\n\nvar hmac = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize) key = new this.Hash().update(key).digest();\n  minimalisticAssert(key.length <= this.blockSize); // Add padding to key\n\n  for (var i = key.length; i < this.blockSize; i++) key.push(0);\n\n  for (i = 0; i < key.length; i++) key[i] ^= 0x36;\n\n  this.inner = new this.Hash().update(key); // 0x36 ^ 0x5c = 0x6a\n\n  for (i = 0; i < key.length; i++) key[i] ^= 0x6a;\n\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n\nvar hash_1 = createCommonjsModule(function (module, exports) {\n  var hash = exports;\n  hash.utils = utils;\n  hash.common = common;\n  hash.sha = sha;\n  hash.ripemd = ripemd;\n  hash.hmac = hmac; // Proxy hash functions to the main object\n\n  hash.sha1 = hash.sha.sha1;\n  hash.sha256 = hash.sha.sha256;\n  hash.sha224 = hash.sha.sha224;\n  hash.sha384 = hash.sha.sha384;\n  hash.sha512 = hash.sha.sha512;\n  hash.ripemd160 = hash.ripemd.ripemd160;\n});\n\nfunction createCommonjsModule$1(fn, basedir, module) {\n  return module = {\n    path: basedir,\n    exports: {},\n    require: function (path, base) {\n      return commonjsRequire();\n    }\n  }, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire() {\n  throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar minimalisticAssert$1 = assert$1;\n\nfunction assert$1(val, msg) {\n  if (!val) throw new Error(msg || 'Assertion failed');\n}\n\nassert$1.equal = function assertEqual(l, r, msg) {\n  if (l != r) throw new Error(msg || 'Assertion failed: ' + l + ' != ' + r);\n};\n\nvar utils_1 = createCommonjsModule$1(function (module, exports) {\n  var utils = exports;\n\n  function toArray(msg, enc) {\n    if (Array.isArray(msg)) return msg.slice();\n    if (!msg) return [];\n    var res = [];\n\n    if (typeof msg !== 'string') {\n      for (var i = 0; i < msg.length; i++) res[i] = msg[i] | 0;\n\n      return res;\n    }\n\n    if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0) msg = '0' + msg;\n\n      for (var i = 0; i < msg.length; i += 2) res.push(parseInt(msg[i] + msg[i + 1], 16));\n    } else {\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        var hi = c >> 8;\n        var lo = c & 0xff;\n        if (hi) res.push(hi, lo);else res.push(lo);\n      }\n    }\n\n    return res;\n  }\n\n  utils.toArray = toArray;\n\n  function zero2(word) {\n    if (word.length === 1) return '0' + word;else return word;\n  }\n\n  utils.zero2 = zero2;\n\n  function toHex(msg) {\n    var res = '';\n\n    for (var i = 0; i < msg.length; i++) res += zero2(msg[i].toString(16));\n\n    return res;\n  }\n\n  utils.toHex = toHex;\n\n  utils.encode = function encode(arr, enc) {\n    if (enc === 'hex') return toHex(arr);else return arr;\n  };\n});\nvar utils_1$1 = createCommonjsModule$1(function (module, exports) {\n  var utils = exports;\n  utils.assert = minimalisticAssert$1;\n  utils.toArray = utils_1.toArray;\n  utils.zero2 = utils_1.zero2;\n  utils.toHex = utils_1.toHex;\n  utils.encode = utils_1.encode; // Represent num in a w-NAF form\n\n  function getNAF(num, w, bits) {\n    var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n    naf.fill(0);\n    var ws = 1 << w + 1;\n    var k = num.clone();\n\n    for (var i = 0; i < naf.length; i++) {\n      var z;\n      var mod = k.andln(ws - 1);\n\n      if (k.isOdd()) {\n        if (mod > (ws >> 1) - 1) z = (ws >> 1) - mod;else z = mod;\n        k.isubn(z);\n      } else {\n        z = 0;\n      }\n\n      naf[i] = z;\n      k.iushrn(1);\n    }\n\n    return naf;\n  }\n\n  utils.getNAF = getNAF; // Represent k1, k2 in a Joint Sparse Form\n\n  function getJSF(k1, k2) {\n    var jsf = [[], []];\n    k1 = k1.clone();\n    k2 = k2.clone();\n    var d1 = 0;\n    var d2 = 0;\n    var m8;\n\n    while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n      // First phase\n      var m14 = k1.andln(3) + d1 & 3;\n      var m24 = k2.andln(3) + d2 & 3;\n      if (m14 === 3) m14 = -1;\n      if (m24 === 3) m24 = -1;\n      var u1;\n\n      if ((m14 & 1) === 0) {\n        u1 = 0;\n      } else {\n        m8 = k1.andln(7) + d1 & 7;\n        if ((m8 === 3 || m8 === 5) && m24 === 2) u1 = -m14;else u1 = m14;\n      }\n\n      jsf[0].push(u1);\n      var u2;\n\n      if ((m24 & 1) === 0) {\n        u2 = 0;\n      } else {\n        m8 = k2.andln(7) + d2 & 7;\n        if ((m8 === 3 || m8 === 5) && m14 === 2) u2 = -m24;else u2 = m24;\n      }\n\n      jsf[1].push(u2); // Second phase\n\n      if (2 * d1 === u1 + 1) d1 = 1 - d1;\n      if (2 * d2 === u2 + 1) d2 = 1 - d2;\n      k1.iushrn(1);\n      k2.iushrn(1);\n    }\n\n    return jsf;\n  }\n\n  utils.getJSF = getJSF;\n\n  function cachedProperty(obj, name, computer) {\n    var key = '_' + name;\n\n    obj.prototype[name] = function cachedProperty() {\n      return this[key] !== undefined ? this[key] : this[key] = computer.call(this);\n    };\n  }\n\n  utils.cachedProperty = cachedProperty;\n\n  function parseBytes(bytes) {\n    return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') : bytes;\n  }\n\n  utils.parseBytes = parseBytes;\n\n  function intFromLE(bytes) {\n    return new bn(bytes, 'hex', 'le');\n  }\n\n  utils.intFromLE = intFromLE;\n});\nvar getNAF = utils_1$1.getNAF;\nvar getJSF = utils_1$1.getJSF;\nvar assert$1$1 = utils_1$1.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new bn(conf.p, 16); // Use Montgomery, when there is no fast reduction for the prime\n\n  this.red = conf.prime ? bn.red(conf.prime) : bn.mont(this.p); // Useful for many curves\n\n  this.zero = new bn(0).toRed(this.red);\n  this.one = new bn(1).toRed(this.red);\n  this.two = new bn(2).toRed(this.red); // Curve configuration, optional\n\n  this.n = conf.n && new bn(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed); // Temporary arrays\n\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n  this._bitLength = this.n ? this.n.bitLength() : 0; // Generalized Greg Maxwell's trick\n\n  var adjustCount = this.n && this.p.div(this.n);\n\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\n\nvar base = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert$1$1(p.precomputed);\n\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3; // Translate into more windowed form\n\n  var repr = [];\n  var j;\n  var nafW;\n\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n\n    for (var l = j + doubles.step - 1; l >= j; l--) nafW = (nafW << 1) + naf[l];\n\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i) b = b.mixedAdd(doubles.points[j]);else if (nafW === -i) b = b.mixedAdd(doubles.points[j].neg());\n    }\n\n    a = a.add(b);\n  }\n\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4; // Precompute window\n\n  var nafPoints = p._getNAFPoints(w);\n\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points; // Get NAF form\n\n  var naf = getNAF(k, w, this._bitLength); // Add `this`*(N+1) for every w-NAF index\n\n  var acc = this.jpoint(null, null, null);\n\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--) l++;\n\n    if (i >= 0) l++;\n    acc = acc.dblp(l);\n    if (i < 0) break;\n    var z = naf[i];\n    assert$1$1(z !== 0);\n\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0) acc = acc.mixedAdd(wnd[z - 1 >> 1]);else acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0) acc = acc.add(wnd[z - 1 >> 1]);else acc = acc.add(wnd[-z - 1 >> 1].neg());\n    }\n  }\n\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3; // Fill all arrays\n\n  var max = 0;\n  var i;\n  var j;\n  var p;\n\n  for (i = 0; i < len; i++) {\n    p = points[i];\n\n    var nafPoints = p._getNAFPoints(defW);\n\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  } // Comb small window NAFs\n\n\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [points[a],\n    /* 1 */\n    null,\n    /* 3 */\n    null,\n    /* 5 */\n    points[b]\n    /* 7 */\n    ]; // Try to avoid Projective points, if possible\n\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [-3,\n    /* -1 -1 */\n    -1,\n    /* -1 0 */\n    -5,\n    /* -1 1 */\n    -7,\n    /* 0 -1 */\n    0,\n    /* 0 0 */\n    7,\n    /* 0 1 */\n    5,\n    /* 1 -1 */\n    1,\n    /* 1 0 */\n    3\n    /* 1 1 */\n    ];\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0) zero = false;\n      }\n\n      if (!zero) break;\n      k++;\n      i--;\n    }\n\n    if (i >= 0) k++;\n    acc = acc.dblp(k);\n    if (i < 0) break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      if (z === 0) continue;else if (z > 0) p = wnd[j][z - 1 >> 1];else if (z < 0) p = wnd[j][-z - 1 >> 1].neg();\n      if (p.type === 'affine') acc = acc.mixedAdd(p);else acc = acc.add(p);\n    }\n  } // Zeroify references\n\n\n  for (i = 0; i < len; i++) wnd[i] = null;\n\n  if (jacobianResult) return acc;else return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\n\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq() {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils_1$1.toArray(bytes, enc);\n  var len = this.p.byteLength(); // uncompressed, hybrid-odd, hybrid-even\n\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) && bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06) assert$1$1(bytes[bytes.length - 1] % 2 === 0);else if (bytes[0] === 0x07) assert$1$1(bytes[bytes.length - 1] % 2 === 1);\n    var res = this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) && bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n  if (compact) return [this.getY().isEven() ? 0x02 : 0x03].concat(x);\n  return [0x04].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils_1$1.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed) return this;\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed) return false;\n  var doubles = this.precomputed.doubles;\n  if (!doubles) return false;\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;\n  var doubles = [this];\n  var acc = this;\n\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++) acc = acc.dbl();\n\n    doubles.push(acc);\n  }\n\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;\n  var res = [this];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n\n  for (var i = 1; i < max; i++) res[i] = res[i - 1].add(dbl);\n\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n\n  for (var i = 0; i < k; i++) r = r.dbl();\n\n  return r;\n};\n\nvar inherits_browser$1 = createCommonjsModule$1(function (module) {\n  if (typeof Object.create === 'function') {\n    // implementation from standard node.js 'util' module\n    module.exports = function inherits(ctor, superCtor) {\n      if (superCtor) {\n        ctor.super_ = superCtor;\n        ctor.prototype = Object.create(superCtor.prototype, {\n          constructor: {\n            value: ctor,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n      }\n    };\n  } else {\n    // old school shim for old browsers\n    module.exports = function inherits(ctor, superCtor) {\n      if (superCtor) {\n        ctor.super_ = superCtor;\n\n        var TempCtor = function () {};\n\n        TempCtor.prototype = superCtor.prototype;\n        ctor.prototype = new TempCtor();\n        ctor.prototype.constructor = ctor;\n      }\n    };\n  }\n});\nvar assert$2 = utils_1$1.assert;\n\nfunction ShortCurve(conf) {\n  base.call(this, 'short', conf);\n  this.a = new bn(conf.a, 16).toRed(this.red);\n  this.b = new bn(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0; // If the curve is endomorphic, precalculate beta and lambda\n\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\n\ninherits_browser$1(ShortCurve, base);\nvar short_1 = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1) return; // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n\n  var beta;\n  var lambda;\n\n  if (conf.beta) {\n    beta = new bn(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p); // Choose the smallest beta\n\n\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n\n  if (conf.lambda) {\n    lambda = new bn(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert$2(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  } // Get basis vectors, used for balanced length-two representation\n\n\n  var basis;\n\n  if (conf.basis) {\n    basis = conf.basis.map(function (vec) {\n      return {\n        a: new bn(vec.a, 16),\n        b: new bn(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : bn.mont(num);\n  var tinv = new bn(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n  var s = new bn(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [l1, l2];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2)); // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new bn(1);\n  var y1 = new bn(0);\n  var x2 = new bn(0);\n  var y2 = new bn(1); // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n\n  var a0;\n  var b0; // First vector\n\n  var a1;\n  var b1; // Second vector\n\n  var a2;\n  var b2;\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n\n    prevR = r;\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n\n  a2 = r.neg();\n  b2 = x;\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  } // Normalize signs\n\n\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [{\n    a: a1,\n    b: b1\n  }, {\n    a: a2,\n    b: b2\n  }];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b); // Calculate answer\n\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return {\n    k1: k1,\n    k2: k2\n  };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new bn(x, 16);\n  if (!x.red) x = x.toRed(this.red);\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0) throw new Error('invalid point'); // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd) y = y.redNeg();\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf) return true;\n  var x = point.x;\n  var y = point.y;\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n\n    var p = points[i];\n\n    var beta = p._getBeta();\n\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult); // Clean-up references to points and coefficients\n\n\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  base.BasePoint.call(this, curve, 'affine');\n\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16); // Force redgomery representation when loading from JSON\n\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n\n    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\n\ninherits_browser$1(Point, base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo) return;\n  var pre = this.precomputed;\n  if (pre && pre.beta) return pre.beta;\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n\n  if (pre) {\n    var curve = this.curve;\n\n    var endoMul = function (p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed) return [this.x, this.y];\n  return [this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  }];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string') obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2]) return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [res].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [res].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf) return p; // P + O = P\n\n  if (p.inf) return this; // P + P = 2P\n\n  if (this.eq(p)) return this.dbl(); // P + (-P) = O\n\n  if (this.neg().eq(p)) return this.curve.point(null, null); // P + Q = O\n\n  if (this.x.cmp(p.x) === 0) return this.curve.point(null, null);\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0) c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf) return this; // 2P = O\n\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0) return this.curve.point(null, null);\n  var a = this.curve.a;\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new bn(k, 16);\n  if (this.isInfinity()) return this;else if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);else if (this.curve.endo) return this.curve._endoWnafMulAdd([this], [k]);else return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [this, p2];\n  var coeffs = [k1, k2];\n  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs);else return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [this, p2];\n  var coeffs = [k1, k2];\n  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs, true);else return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf) return this;\n  var res = this.curve.point(this.x, this.y.redNeg());\n\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n\n    var negate = function (p) {\n      return p.neg();\n    };\n\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf) return this.curve.jpoint(null, null, null);\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  base.BasePoint.call(this, curve, 'jacobian');\n\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new bn(0);\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16);\n    this.z = new bn(z, 16);\n  }\n\n  if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n  this.zOne = this.z === this.curve.one;\n}\n\ninherits_browser$1(JPoint, base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity()) return this.curve.point(null, null);\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity()) return p; // P + O = P\n\n  if (p.isInfinity()) return this; // 12M + 4S + 7A\n\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity()) return p.toJ(); // P + O = P\n\n  if (p.isInfinity()) return this; // 8M + 3S + 7A\n\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0) return this;\n  if (this.isInfinity()) return this;\n  if (!pow) return this.dbl();\n  var i;\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n\n    for (i = 0; i < pow; i++) r = r.dbl();\n\n    return r;\n  } // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n\n\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr(); // Reuse results\n\n  var jyd = jy.redAdd(jy);\n\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow) jz4 = jz4.redMul(jyd4);\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity()) return this;\n  if (this.curve.zeroA) return this._zeroDbl();else if (this.curve.threeA) return this._threeDbl();else return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz; // Z = 1\n\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n    // XX = X1^2\n    var xx = this.x.redSqr(); // YY = Y1^2\n\n    var yy = this.y.redSqr(); // YYYY = YY^2\n\n    var yyyy = yy.redSqr(); // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s); // M = 3 * XX + a; a = 0\n\n    var m = xx.redAdd(xx).redIAdd(xx); // T = M ^ 2 - 2*S\n\n    var t = m.redSqr().redISub(s).redISub(s); // 8 * YYYY\n\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8); // X3 = T\n\n    nx = t; // Y3 = M * (S - T) - 8 * YYYY\n\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8); // Z3 = 2*Y1\n\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n    // A = X1^2\n    var a = this.x.redSqr(); // B = Y1^2\n\n    var b = this.y.redSqr(); // C = B^2\n\n    var c = b.redSqr(); // D = 2 * ((X1 + B)^2 - A - C)\n\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d); // E = 3 * A\n\n    var e = a.redAdd(a).redIAdd(a); // F = E^2\n\n    var f = e.redSqr(); // 8 * C\n\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8); // X3 = F - 2 * D\n\n    nx = f.redISub(d).redISub(d); // Y3 = E * (D - X3) - 8 * C\n\n    ny = e.redMul(d.redISub(nx)).redISub(c8); // Z3 = 2 * Y1 * Z1\n\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz; // Z = 1\n\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n    // XX = X1^2\n    var xx = this.x.redSqr(); // YY = Y1^2\n\n    var yy = this.y.redSqr(); // YYYY = YY^2\n\n    var yyyy = yy.redSqr(); // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s); // M = 3 * XX + a\n\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a); // T = M^2 - 2 * S\n\n    var t = m.redSqr().redISub(s).redISub(s); // X3 = T\n\n    nx = t; // Y3 = M * (S - T) - 8 * YYYY\n\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8); // Z3 = 2 * Y1\n\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n    // delta = Z1^2\n    var delta = this.z.redSqr(); // gamma = Y1^2\n\n    var gamma = this.y.redSqr(); // beta = X1 * gamma\n\n    var beta = this.x.redMul(gamma); // alpha = 3 * (X1 - delta) * (X1 + delta)\n\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha); // X3 = alpha^2 - 8 * beta\n\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8); // Z3 = (Y1 + Z1)^2 - gamma - delta\n\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta); // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a; // 4M + 6S + 10A\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA) return this.dbl().add(this); // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n  // XX = X1^2\n\n  var xx = this.x.redSqr(); // YY = Y1^2\n\n  var yy = this.y.redSqr(); // ZZ = Z1^2\n\n  var zz = this.z.redSqr(); // YYYY = YY^2\n\n  var yyyy = yy.redSqr(); // M = 3 * XX + a * ZZ2; a = 0\n\n  var m = xx.redAdd(xx).redIAdd(xx); // MM = M^2\n\n  var mm = m.redSqr(); // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm); // EE = E^2\n\n  var ee = e.redSqr(); // T = 16*YYYY\n\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t); // U = (M + E)^2 - MM - EE - T\n\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t); // X3 = 4 * (X1 * EE - 4 * YY * U)\n\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx); // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny); // Z3 = (Z1 + E)^2 - ZZ - EE\n\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new bn(k, kbase);\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine') return this.eq(p.toJ());\n  if (this === p) return true; // x1 * z2^2 == x2 * z1^2\n\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0) return false; // y1 * z2^3 == y2 * z1^3\n\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0) return true;\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0) return false;\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0) return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) + ' y: ' + this.y.toString(16, 2) + ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nvar curve_1 = createCommonjsModule$1(function (module, exports) {\n  var curve = exports;\n  curve.base = base;\n  curve.short = short_1;\n  curve.mont = null;\n  curve.edwards = null;\n});\nvar curves_1 = createCommonjsModule$1(function (module, exports) {\n  var curves = exports;\n  var assert = utils_1$1.assert;\n\n  function PresetCurve(options) {\n    if (options.type === 'short') this.curve = new curve_1.short(options);else if (options.type === 'edwards') this.curve = new curve_1.edwards(options);else this.curve = new curve_1.mont(options);\n    this.g = this.curve.g;\n    this.n = this.curve.n;\n    this.hash = options.hash;\n    assert(this.g.validate(), 'Invalid curve');\n    assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n  }\n\n  curves.PresetCurve = PresetCurve;\n\n  function defineCurve(name, options) {\n    Object.defineProperty(curves, name, {\n      configurable: true,\n      enumerable: true,\n      get: function () {\n        var curve = new PresetCurve(options);\n        Object.defineProperty(curves, name, {\n          configurable: true,\n          enumerable: true,\n          value: curve\n        });\n        return curve;\n      }\n    });\n  }\n\n  defineCurve('p192', {\n    type: 'short',\n    prime: 'p192',\n    p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n    a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n    b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n    n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n    hash: hash_1.sha256,\n    gRed: false,\n    g: ['188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012', '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811']\n  });\n  defineCurve('p224', {\n    type: 'short',\n    prime: 'p224',\n    p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n    a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n    b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n    n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n    hash: hash_1.sha256,\n    gRed: false,\n    g: ['b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21', 'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34']\n  });\n  defineCurve('p256', {\n    type: 'short',\n    prime: null,\n    p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n    a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n    b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n    n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n    hash: hash_1.sha256,\n    gRed: false,\n    g: ['6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296', '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5']\n  });\n  defineCurve('p384', {\n    type: 'short',\n    prime: null,\n    p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 ffffffff',\n    a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 fffffffc',\n    b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' + '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n    n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' + 'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n    hash: hash_1.sha384,\n    gRed: false,\n    g: ['aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' + '5502f25d bf55296c 3a545e38 72760ab7', '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' + '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f']\n  });\n  defineCurve('p521', {\n    type: 'short',\n    prime: null,\n    p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff',\n    a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff fffffffc',\n    b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' + '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' + '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n    n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' + 'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n    hash: hash_1.sha512,\n    gRed: false,\n    g: ['000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' + '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' + 'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66', '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' + '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' + '3fad0761 353c7086 a272c240 88be9476 9fd16650']\n  });\n  defineCurve('curve25519', {\n    type: 'mont',\n    prime: 'p25519',\n    p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n    a: '76d06',\n    b: '1',\n    n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n    hash: hash_1.sha256,\n    gRed: false,\n    g: ['9']\n  });\n  defineCurve('ed25519', {\n    type: 'edwards',\n    prime: 'p25519',\n    p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n    a: '-1',\n    c: '1',\n    // -121665 * (121666^(-1)) (mod P)\n    d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n    n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n    hash: hash_1.sha256,\n    gRed: false,\n    g: ['216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a', // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658']\n  });\n  var pre;\n\n  try {\n    pre =\n    /*RicMoo:ethers:require(./precomputed/secp256k1)*/\n    null.crash();\n  } catch (e) {\n    pre = undefined;\n  }\n\n  defineCurve('secp256k1', {\n    type: 'short',\n    prime: 'k256',\n    p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n    a: '0',\n    b: '7',\n    n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n    h: '1',\n    hash: hash_1.sha256,\n    // Precomputed endomorphism\n    beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n    lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n    basis: [{\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3'\n    }, {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15'\n    }],\n    gRed: false,\n    g: ['79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798', '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8', pre]\n  });\n});\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG)) return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n  var entropy = utils_1.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils_1.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils_1.toArray(options.pers, options.persEnc || 'hex');\n  minimalisticAssert$1(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._init(entropy, nonce, pers);\n}\n\nvar hmacDrbg = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000; // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash_1.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac().update(this.V).update([0x00]);\n\n  if (seed) kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed) return;\n  this.K = this._hmac().update(this.V).update([0x01]).update(seed).digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils_1.toArray(entropy, entropyEnc);\n  add = utils_1.toArray(add, addEnc);\n  minimalisticAssert$1(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval) throw new Error('Reseed is required'); // Optional encoding\n\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  } // Optional additional data\n\n\n  if (add) {\n    add = utils_1.toArray(add, addEnc || 'hex');\n\n    this._update(add);\n  }\n\n  var temp = [];\n\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n\n  this._update(add);\n\n  this._reseed++;\n  return utils_1.encode(res, enc);\n};\n\nvar assert$3 = utils_1$1.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null; // KeyPair(ec, { priv: ..., pub: ... })\n\n  if (options.priv) this._importPrivate(options.priv, options.privEnc);\n  if (options.pub) this._importPublic(options.pub, options.pubEnc);\n}\n\nvar key = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair) return pub;\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair) return priv;\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n  if (pub.isInfinity()) return {\n    result: false,\n    reason: 'Invalid public key'\n  };\n  if (!pub.validate()) return {\n    result: false,\n    reason: 'Public key is not a point'\n  };\n  if (!pub.mul(this.ec.curve.n).isInfinity()) return {\n    result: false,\n    reason: 'Public key * N != O'\n  };\n  return {\n    result: true,\n    reason: null\n  };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub) this.pub = this.ec.g.mul(this.priv);\n  if (!enc) return this.pub;\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex') return this.priv.toString(16, 2);else return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new bn(key, enc || 16); // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert$3(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' || this.ec.curve.type === 'edwards') {\n      assert$3(key.x && key.y, 'Need both x and y coordinate');\n    }\n\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n\n  this.pub = this.ec.curve.decodePoint(key, enc);\n}; // ECDH\n\n\nKeyPair.prototype.derive = function derive(pub) {\n  if (!pub.validate()) {\n    assert$3(pub.validate(), 'public point not validated');\n  }\n\n  return pub.mul(this.priv).getX();\n}; // ECDSA\n\n\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) + ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n\nvar assert$4 = utils_1$1.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature) return options;\n  if (this._importDER(options, enc)) return;\n  assert$4(options.r && options.s, 'Signature without r or s');\n  this.r = new bn(options.r, 16);\n  this.s = new bn(options.s, 16);\n  if (options.recoveryParam === undefined) this.recoveryParam = null;else this.recoveryParam = options.recoveryParam;\n}\n\nvar signature = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n\n  var octetLen = initial & 0xf; // Indefinite length or overflow\n\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  } // Leading zeroes\n\n\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n\n  if (i === 0) {\n    return buf;\n  }\n\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils_1$1.toArray(data, enc);\n  var p = new Position();\n\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n\n  var len = getLength(data, p);\n\n  if (len === false) {\n    return false;\n  }\n\n  if (len + p.place !== data.length) {\n    return false;\n  }\n\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n\n  var rlen = getLength(data, p);\n\n  if (rlen === false) {\n    return false;\n  }\n\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n\n  var slen = getLength(data, p);\n\n  if (slen === false) {\n    return false;\n  }\n\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n\n  var s = data.slice(p.place, slen + p.place);\n\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new bn(r);\n  this.s = new bn(s);\n  this.recoveryParam = null;\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n\n  while (--octets) {\n    arr.push(len >>> (octets << 3) & 0xff);\n  }\n\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray(); // Pad values\n\n  if (r[0] & 0x80) r = [0].concat(r); // Pad values\n\n  if (s[0] & 0x80) s = [0].concat(s);\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n\n  var arr = [0x02];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [0x30];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils_1$1.encode(res, enc);\n};\n\nvar rand = function () {\n  throw new Error('unsupported');\n};\n\nvar assert$5 = utils_1$1.assert;\n\nfunction EC(options) {\n  if (!(this instanceof EC)) return new EC(options); // Shortcut `elliptic.ec(curve-name)`\n\n  if (typeof options === 'string') {\n    assert$5(Object.prototype.hasOwnProperty.call(curves_1, options), 'Unknown curve ' + options);\n    options = curves_1[options];\n  } // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n\n\n  if (options instanceof curves_1.PresetCurve) options = {\n    curve: options\n  };\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g; // Point on curve\n\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1); // Hash for function for DRBG\n\n  this.hash = options.hash || options.curve.hash;\n}\n\nvar ec = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new key(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return key.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return key.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options) options = {}; // Instantiate Hmac_DRBG\n\n  var drbg = new hmacDrbg({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray()\n  });\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new bn(2));\n\n  for (;;) {\n    var priv = new bn(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0) continue;\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0) msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0) return msg.sub(this.n);else return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n\n  if (!options) options = {};\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new bn(msg, 16)); // Zero-extend key to provide enough entropy\n\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes); // Zero-extend nonce to have the same byte size as N\n\n  var nonce = msg.toArray('be', bytes); // Instantiate Hmac_DRBG\n\n  var drbg = new hmacDrbg({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8'\n  }); // Number of bytes to generate\n\n  var ns1 = this.n.sub(new bn(1));\n\n  for (var iter = 0;; iter++) {\n    var k = options.k ? options.k(iter) : new bn(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0) continue;\n    var kp = this.g.mul(k);\n    if (kp.isInfinity()) continue;\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0) continue;\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0) continue;\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0); // Use complement of `s`, if it is > `n / 2`\n\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new signature({\n      r: r,\n      s: s,\n      recoveryParam: recoveryParam\n    });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature$1, key, enc) {\n  msg = this._truncateToN(new bn(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature$1 = new signature(signature$1, 'hex'); // Perform primitive values validation\n\n  var r = signature$1.r;\n  var s = signature$1.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return false; // Validate signature\n\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity()) return false;\n    return p.getX().umod(this.n).cmp(r) === 0;\n  } // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity()) return false; // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function (msg, signature$1, j, enc) {\n  assert$5((3 & j) === j, 'The recovery param is more than two bits');\n  signature$1 = new signature(signature$1, enc);\n  var n = this.n;\n  var e = new bn(msg);\n  var r = signature$1.r;\n  var s = signature$1.s; // A set LSB signifies that the y-coordinate is odd\n\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey) throw new Error('Unable to find sencond key candinate'); // 1.1. Let x = r + jn.\n\n  if (isSecondKey) r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);else r = this.curve.pointFromX(r, isYOdd);\n  var rInv = signature$1.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n); // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function (e, signature$1, Q, enc) {\n  signature$1 = new signature(signature$1, enc);\n  if (signature$1.recoveryParam !== null) return signature$1.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n\n    try {\n      Qprime = this.recoverPubKey(e, signature$1, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q)) return i;\n  }\n\n  throw new Error('Unable to find valid recovery factor');\n};\n\nvar elliptic_1 = createCommonjsModule$1(function (module, exports) {\n  var elliptic = exports;\n  elliptic.version =\n  /*RicMoo:ethers*/\n  {\n    version: \"6.5.4\"\n  }.version;\n  elliptic.utils = utils_1$1;\n\n  elliptic.rand = function () {\n    throw new Error('unsupported');\n  };\n\n  elliptic.curve = curve_1;\n  elliptic.curves = curves_1; // Protocols\n\n  elliptic.ec = ec;\n  elliptic.eddsa = null;\n});\nvar EC$1 = elliptic_1.ec;\nconst version$a = \"signing-key/5.4.0\";\nconst logger$a = new Logger(version$a);\nlet _curve = null;\n\nfunction getCurve() {\n  if (!_curve) {\n    _curve = new EC$1(\"secp256k1\");\n  }\n\n  return _curve;\n}\n\nclass SigningKey {\n  constructor(privateKey) {\n    defineReadOnly(this, \"curve\", \"secp256k1\");\n    defineReadOnly(this, \"privateKey\", hexlify(privateKey));\n    const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n    defineReadOnly(this, \"publicKey\", \"0x\" + keyPair.getPublic(false, \"hex\"));\n    defineReadOnly(this, \"compressedPublicKey\", \"0x\" + keyPair.getPublic(true, \"hex\"));\n    defineReadOnly(this, \"_isSigningKey\", true);\n  }\n\n  _addPoint(other) {\n    const p0 = getCurve().keyFromPublic(arrayify(this.publicKey));\n    const p1 = getCurve().keyFromPublic(arrayify(other));\n    return \"0x\" + p0.pub.add(p1.pub).encodeCompressed(\"hex\");\n  }\n\n  signDigest(digest) {\n    const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n    const digestBytes = arrayify(digest);\n\n    if (digestBytes.length !== 32) {\n      logger$a.throwArgumentError(\"bad digest length\", \"digest\", digest);\n    }\n\n    const signature = keyPair.sign(digestBytes, {\n      canonical: true\n    });\n    return splitSignature({\n      recoveryParam: signature.recoveryParam,\n      r: hexZeroPad(\"0x\" + signature.r.toString(16), 32),\n      s: hexZeroPad(\"0x\" + signature.s.toString(16), 32)\n    });\n  }\n\n  computeSharedSecret(otherKey) {\n    const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n    const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));\n    return hexZeroPad(\"0x\" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);\n  }\n\n  static isSigningKey(value) {\n    return !!(value && value._isSigningKey);\n  }\n\n}\n\nfunction recoverPublicKey(digest, signature) {\n  const sig = splitSignature(signature);\n  const rs = {\n    r: arrayify(sig.r),\n    s: arrayify(sig.s)\n  };\n  return \"0x\" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode(\"hex\", false);\n}\n\nfunction computePublicKey(key, compressed) {\n  const bytes = arrayify(key);\n\n  if (bytes.length === 32) {\n    const signingKey = new SigningKey(bytes);\n\n    if (compressed) {\n      return \"0x\" + getCurve().keyFromPrivate(bytes).getPublic(true, \"hex\");\n    }\n\n    return signingKey.publicKey;\n  } else if (bytes.length === 33) {\n    if (compressed) {\n      return hexlify(bytes);\n    }\n\n    return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(false, \"hex\");\n  } else if (bytes.length === 65) {\n    if (!compressed) {\n      return hexlify(bytes);\n    }\n\n    return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(true, \"hex\");\n  }\n\n  return logger$a.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\n\nconst version$b = \"transactions/5.4.0\";\nconst logger$b = new Logger(version$b);\nvar TransactionTypes;\n\n(function (TransactionTypes) {\n  TransactionTypes[TransactionTypes[\"legacy\"] = 0] = \"legacy\";\n  TransactionTypes[TransactionTypes[\"eip2930\"] = 1] = \"eip2930\";\n  TransactionTypes[TransactionTypes[\"eip1559\"] = 2] = \"eip1559\";\n})(TransactionTypes || (TransactionTypes = {})); ///////////////////////////////\n\n\nfunction handleAddress(value) {\n  if (value === \"0x\") {\n    return null;\n  }\n\n  return getAddress(value);\n}\n\nfunction handleNumber(value) {\n  if (value === \"0x\") {\n    return Zero;\n  }\n\n  return BigNumber.from(value);\n}\n\nfunction computeAddress(key) {\n  const publicKey = computePublicKey(key);\n  return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));\n}\n\nfunction recoverAddress(digest, signature) {\n  return computeAddress(recoverPublicKey(arrayify(digest), signature));\n}\n\nfunction formatNumber(value, name) {\n  const result = stripZeros(BigNumber.from(value).toHexString());\n\n  if (result.length > 32) {\n    logger$b.throwArgumentError(\"invalid length for \" + name, \"transaction:\" + name, value);\n  }\n\n  return result;\n}\n\nfunction accessSetify(addr, storageKeys) {\n  return {\n    address: getAddress(addr),\n    storageKeys: (storageKeys || []).map((storageKey, index) => {\n      if (hexDataLength(storageKey) !== 32) {\n        logger$b.throwArgumentError(\"invalid access list storageKey\", `accessList[${addr}:${index}]`, storageKey);\n      }\n\n      return storageKey.toLowerCase();\n    })\n  };\n}\n\nfunction accessListify(value) {\n  if (Array.isArray(value)) {\n    return value.map((set, index) => {\n      if (Array.isArray(set)) {\n        if (set.length > 2) {\n          logger$b.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\", `value[${index}]`, set);\n        }\n\n        return accessSetify(set[0], set[1]);\n      }\n\n      return accessSetify(set.address, set.storageKeys);\n    });\n  }\n\n  const result = Object.keys(value).map(addr => {\n    const storageKeys = value[addr].reduce((accum, storageKey) => {\n      accum[storageKey] = true;\n      return accum;\n    }, {});\n    return accessSetify(addr, Object.keys(storageKeys).sort());\n  });\n  result.sort((a, b) => a.address.localeCompare(b.address));\n  return result;\n}\n\nfunction formatAccessList(value) {\n  return accessListify(value).map(set => [set.address, set.storageKeys]);\n}\n\nfunction _serializeEip1559(transaction, signature) {\n  // If there is an explicit gasPrice, make sure it matches the\n  // EIP-1559 fees; otherwise they may not understand what they\n  // think they are setting in terms of fee.\n  if (transaction.gasPrice != null) {\n    const gasPrice = BigNumber.from(transaction.gasPrice);\n    const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);\n\n    if (!gasPrice.eq(maxFeePerGas)) {\n      logger$b.throwArgumentError(\"mismatch EIP-1559 gasPrice != maxFeePerGas\", \"tx\", {\n        gasPrice,\n        maxFeePerGas\n      });\n    }\n  }\n\n  const fields = [formatNumber(transaction.chainId || 0, \"chainId\"), formatNumber(transaction.nonce || 0, \"nonce\"), formatNumber(transaction.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"), formatNumber(transaction.maxFeePerGas || 0, \"maxFeePerGas\"), formatNumber(transaction.gasLimit || 0, \"gasLimit\"), transaction.to != null ? getAddress(transaction.to) : \"0x\", formatNumber(transaction.value || 0, \"value\"), transaction.data || \"0x\", formatAccessList(transaction.accessList || [])];\n\n  if (signature) {\n    const sig = splitSignature(signature);\n    fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n    fields.push(stripZeros(sig.r));\n    fields.push(stripZeros(sig.s));\n  }\n\n  return hexConcat([\"0x02\", encode(fields)]);\n}\n\nfunction _serializeEip2930(transaction, signature) {\n  const fields = [formatNumber(transaction.chainId || 0, \"chainId\"), formatNumber(transaction.nonce || 0, \"nonce\"), formatNumber(transaction.gasPrice || 0, \"gasPrice\"), formatNumber(transaction.gasLimit || 0, \"gasLimit\"), transaction.to != null ? getAddress(transaction.to) : \"0x\", formatNumber(transaction.value || 0, \"value\"), transaction.data || \"0x\", formatAccessList(transaction.accessList || [])];\n\n  if (signature) {\n    const sig = splitSignature(signature);\n    fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n    fields.push(stripZeros(sig.r));\n    fields.push(stripZeros(sig.s));\n  }\n\n  return hexConcat([\"0x01\", encode(fields)]);\n}\n\nfunction _parseEipSignature(tx, fields, serialize) {\n  try {\n    const recid = handleNumber(fields[0]).toNumber();\n\n    if (recid !== 0 && recid !== 1) {\n      throw new Error(\"bad recid\");\n    }\n\n    tx.v = recid;\n  } catch (error) {\n    logger$b.throwArgumentError(\"invalid v for transaction type: 1\", \"v\", fields[0]);\n  }\n\n  tx.r = hexZeroPad(fields[1], 32);\n  tx.s = hexZeroPad(fields[2], 32);\n\n  try {\n    const digest = keccak256(serialize(tx));\n    tx.from = recoverAddress(digest, {\n      r: tx.r,\n      s: tx.s,\n      recoveryParam: tx.v\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction _parseEip1559(payload) {\n  const transaction = decode(payload.slice(1));\n\n  if (transaction.length !== 9 && transaction.length !== 12) {\n    logger$b.throwArgumentError(\"invalid component count for transaction type: 2\", \"payload\", hexlify(payload));\n  }\n\n  const maxPriorityFeePerGas = handleNumber(transaction[2]);\n  const maxFeePerGas = handleNumber(transaction[3]);\n  const tx = {\n    type: 2,\n    chainId: handleNumber(transaction[0]).toNumber(),\n    nonce: handleNumber(transaction[1]).toNumber(),\n    maxPriorityFeePerGas: maxPriorityFeePerGas,\n    maxFeePerGas: maxFeePerGas,\n    gasPrice: null,\n    gasLimit: handleNumber(transaction[4]),\n    to: handleAddress(transaction[5]),\n    value: handleNumber(transaction[6]),\n    data: transaction[7],\n    accessList: accessListify(transaction[8])\n  }; // Unsigned EIP-1559 Transaction\n\n  if (transaction.length === 9) {\n    return tx;\n  }\n\n  tx.hash = keccak256(payload);\n\n  _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);\n\n  return tx;\n}\n\nfunction _parseEip2930(payload) {\n  const transaction = decode(payload.slice(1));\n\n  if (transaction.length !== 8 && transaction.length !== 11) {\n    logger$b.throwArgumentError(\"invalid component count for transaction type: 1\", \"payload\", hexlify(payload));\n  }\n\n  const tx = {\n    type: 1,\n    chainId: handleNumber(transaction[0]).toNumber(),\n    nonce: handleNumber(transaction[1]).toNumber(),\n    gasPrice: handleNumber(transaction[2]),\n    gasLimit: handleNumber(transaction[3]),\n    to: handleAddress(transaction[4]),\n    value: handleNumber(transaction[5]),\n    data: transaction[6],\n    accessList: accessListify(transaction[7])\n  }; // Unsigned EIP-2930 Transaction\n\n  if (transaction.length === 8) {\n    return tx;\n  }\n\n  tx.hash = keccak256(payload);\n\n  _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);\n\n  return tx;\n} // Legacy Transactions and EIP-155\n\n\nfunction _parse(rawTransaction) {\n  const transaction = decode(rawTransaction);\n\n  if (transaction.length !== 9 && transaction.length !== 6) {\n    logger$b.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n  }\n\n  const tx = {\n    nonce: handleNumber(transaction[0]).toNumber(),\n    gasPrice: handleNumber(transaction[1]),\n    gasLimit: handleNumber(transaction[2]),\n    to: handleAddress(transaction[3]),\n    value: handleNumber(transaction[4]),\n    data: transaction[5],\n    chainId: 0\n  }; // Legacy unsigned transaction\n\n  if (transaction.length === 6) {\n    return tx;\n  }\n\n  try {\n    tx.v = BigNumber.from(transaction[6]).toNumber();\n  } catch (error) {\n    console.log(error);\n    return tx;\n  }\n\n  tx.r = hexZeroPad(transaction[7], 32);\n  tx.s = hexZeroPad(transaction[8], 32);\n\n  if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n    // EIP-155 unsigned transaction\n    tx.chainId = tx.v;\n    tx.v = 0;\n  } else {\n    // Signed Tranasaction\n    tx.chainId = Math.floor((tx.v - 35) / 2);\n\n    if (tx.chainId < 0) {\n      tx.chainId = 0;\n    }\n\n    let recoveryParam = tx.v - 27;\n    const raw = transaction.slice(0, 6);\n\n    if (tx.chainId !== 0) {\n      raw.push(hexlify(tx.chainId));\n      raw.push(\"0x\");\n      raw.push(\"0x\");\n      recoveryParam -= tx.chainId * 2 + 8;\n    }\n\n    const digest = keccak256(encode(raw));\n\n    try {\n      tx.from = recoverAddress(digest, {\n        r: hexlify(tx.r),\n        s: hexlify(tx.s),\n        recoveryParam: recoveryParam\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    tx.hash = keccak256(rawTransaction);\n  }\n\n  tx.type = null;\n  return tx;\n}\n\nfunction parse(rawTransaction) {\n  const payload = arrayify(rawTransaction); // Legacy and EIP-155 Transactions\n\n  if (payload[0] > 0x7f) {\n    return _parse(payload);\n  } // Typed Transaction (EIP-2718)\n\n\n  switch (payload[0]) {\n    case 1:\n      return _parseEip2930(payload);\n\n    case 2:\n      return _parseEip1559(payload);\n  }\n\n  return logger$b.throwError(`unsupported transaction type: ${payload[0]}`, Logger.errors.UNSUPPORTED_OPERATION, {\n    operation: \"parseTransaction\",\n    transactionType: payload[0]\n  });\n}\n/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\n\n\nclass BaseX {\n  constructor(alphabet) {\n    defineReadOnly(this, \"alphabet\", alphabet);\n    defineReadOnly(this, \"base\", alphabet.length);\n    defineReadOnly(this, \"_alphabetMap\", {});\n    defineReadOnly(this, \"_leader\", alphabet.charAt(0)); // pre-compute lookup table\n\n    for (let i = 0; i < alphabet.length; i++) {\n      this._alphabetMap[alphabet.charAt(i)] = i;\n    }\n  }\n\n  encode(value) {\n    let source = arrayify(value);\n\n    if (source.length === 0) {\n      return \"\";\n    }\n\n    let digits = [0];\n\n    for (let i = 0; i < source.length; ++i) {\n      let carry = source[i];\n\n      for (let j = 0; j < digits.length; ++j) {\n        carry += digits[j] << 8;\n        digits[j] = carry % this.base;\n        carry = carry / this.base | 0;\n      }\n\n      while (carry > 0) {\n        digits.push(carry % this.base);\n        carry = carry / this.base | 0;\n      }\n    }\n\n    let string = \"\"; // deal with leading zeros\n\n    for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n      string += this._leader;\n    } // convert digits to a string\n\n\n    for (let q = digits.length - 1; q >= 0; --q) {\n      string += this.alphabet[digits[q]];\n    }\n\n    return string;\n  }\n\n  decode(value) {\n    if (typeof value !== \"string\") {\n      throw new TypeError(\"Expected String\");\n    }\n\n    let bytes = [];\n\n    if (value.length === 0) {\n      return new Uint8Array(bytes);\n    }\n\n    bytes.push(0);\n\n    for (let i = 0; i < value.length; i++) {\n      let byte = this._alphabetMap[value[i]];\n\n      if (byte === undefined) {\n        throw new Error(\"Non-base\" + this.base + \" character\");\n      }\n\n      let carry = byte;\n\n      for (let j = 0; j < bytes.length; ++j) {\n        carry += bytes[j] * this.base;\n        bytes[j] = carry & 0xff;\n        carry >>= 8;\n      }\n\n      while (carry > 0) {\n        bytes.push(carry & 0xff);\n        carry >>= 8;\n      }\n    } // deal with leading zeros\n\n\n    for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n      bytes.push(0);\n    }\n\n    return arrayify(new Uint8Array(bytes.reverse()));\n  }\n\n}\n\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\"); //console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n\nconst version$c = \"sha2/5.4.0\";\nconst logger$c = new Logger(version$c);\n\nfunction sha256$1(data) {\n  return \"0x\" + hash_1.sha256().update(arrayify(data)).digest(\"hex\");\n}\n\nconst version$d = \"networks/5.4.2\";\nconst logger$d = new Logger(version$d);\n\nfunction isRenetworkable(value) {\n  return value && typeof value.renetwork === \"function\";\n}\n\nfunction ethDefaultProvider(network) {\n  const func = function (providers, options) {\n    if (options == null) {\n      options = {};\n    }\n\n    const providerList = [];\n\n    if (providers.InfuraProvider) {\n      try {\n        providerList.push(new providers.InfuraProvider(network, options.infura));\n      } catch (error) {}\n    }\n\n    if (providers.EtherscanProvider) {\n      try {\n        providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n      } catch (error) {}\n    }\n\n    if (providers.AlchemyProvider) {\n      try {\n        providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n      } catch (error) {}\n    }\n\n    if (providers.PocketProvider) {\n      // These networks are currently faulty on Pocket as their\n      // network does not handle the Berlin hardfork, which is\n      // live on these ones.\n      // @TODO: This goes away once Pocket has upgraded their nodes\n      const skip = [\"goerli\", \"ropsten\", \"rinkeby\"];\n\n      try {\n        const provider = new providers.PocketProvider(network);\n\n        if (provider.network && skip.indexOf(provider.network.name) === -1) {\n          providerList.push(provider);\n        }\n      } catch (error) {}\n    }\n\n    if (providers.CloudflareProvider) {\n      try {\n        providerList.push(new providers.CloudflareProvider(network));\n      } catch (error) {}\n    }\n\n    if (providerList.length === 0) {\n      return null;\n    }\n\n    if (providers.FallbackProvider) {\n      let quorum = 1;\n\n      if (options.quorum != null) {\n        quorum = options.quorum;\n      } else if (network === \"homestead\") {\n        quorum = 2;\n      }\n\n      return new providers.FallbackProvider(providerList, quorum);\n    }\n\n    return providerList[0];\n  };\n\n  func.renetwork = function (network) {\n    return ethDefaultProvider(network);\n  };\n\n  return func;\n}\n\nfunction etcDefaultProvider(url, network) {\n  const func = function (providers, options) {\n    if (providers.JsonRpcProvider) {\n      return new providers.JsonRpcProvider(url, network);\n    }\n\n    return null;\n  };\n\n  func.renetwork = function (network) {\n    return etcDefaultProvider(url, network);\n  };\n\n  return func;\n}\n\nconst homestead = {\n  chainId: 1,\n  ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n  name: \"homestead\",\n  _defaultProvider: ethDefaultProvider(\"homestead\")\n};\nconst ropsten = {\n  chainId: 3,\n  ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n  name: \"ropsten\",\n  _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\nconst classicMordor = {\n  chainId: 63,\n  name: \"classicMordor\",\n  _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\nconst networks = {\n  unspecified: {\n    chainId: 0,\n    name: \"unspecified\"\n  },\n  homestead: homestead,\n  mainnet: homestead,\n  morden: {\n    chainId: 2,\n    name: \"morden\"\n  },\n  ropsten: ropsten,\n  testnet: ropsten,\n  rinkeby: {\n    chainId: 4,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"rinkeby\",\n    _defaultProvider: ethDefaultProvider(\"rinkeby\")\n  },\n  kovan: {\n    chainId: 42,\n    name: \"kovan\",\n    _defaultProvider: ethDefaultProvider(\"kovan\")\n  },\n  goerli: {\n    chainId: 5,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"goerli\",\n    _defaultProvider: ethDefaultProvider(\"goerli\")\n  },\n  // ETC (See: #351)\n  classic: {\n    chainId: 61,\n    name: \"classic\",\n    _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/etc\", \"classic\")\n  },\n  classicMorden: {\n    chainId: 62,\n    name: \"classicMorden\"\n  },\n  classicMordor: classicMordor,\n  classicTestnet: classicMordor,\n  classicKotti: {\n    chainId: 6,\n    name: \"classicKotti\",\n    _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/kotti\", \"classicKotti\")\n  },\n  xdai: {\n    chainId: 100,\n    name: \"xdai\"\n  },\n  matic: {\n    chainId: 137,\n    name: \"matic\"\n  },\n  maticmum: {\n    chainId: 80001,\n    name: \"maticmum\"\n  },\n  bnb: {\n    chainId: 56,\n    name: \"bnb\"\n  },\n  bnbt: {\n    chainId: 97,\n    name: \"bnbt\"\n  }\n};\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\n\nfunction getNetwork(network) {\n  // No network (null)\n  if (network == null) {\n    return null;\n  }\n\n  if (typeof network === \"number\") {\n    for (const name in networks) {\n      const standard = networks[name];\n\n      if (standard.chainId === network) {\n        return {\n          name: standard.name,\n          chainId: standard.chainId,\n          ensAddress: standard.ensAddress || null,\n          _defaultProvider: standard._defaultProvider || null\n        };\n      }\n    }\n\n    return {\n      chainId: network,\n      name: \"unknown\"\n    };\n  }\n\n  if (typeof network === \"string\") {\n    const standard = networks[network];\n\n    if (standard == null) {\n      return null;\n    }\n\n    return {\n      name: standard.name,\n      chainId: standard.chainId,\n      ensAddress: standard.ensAddress,\n      _defaultProvider: standard._defaultProvider || null\n    };\n  }\n\n  const standard = networks[network.name]; // Not a standard network; check that it is a valid network in general\n\n  if (!standard) {\n    if (typeof network.chainId !== \"number\") {\n      logger$d.throwArgumentError(\"invalid network chainId\", \"network\", network);\n    }\n\n    return network;\n  } // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n\n\n  if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n    logger$d.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n  } // @TODO: In the next major version add an attach function to a defaultProvider\n  // class and move the _defaultProvider internal to this file (extend Network)\n\n\n  let defaultProvider = network._defaultProvider || null;\n\n  if (defaultProvider == null && standard._defaultProvider) {\n    if (isRenetworkable(standard._defaultProvider)) {\n      defaultProvider = standard._defaultProvider.renetwork(network);\n    } else {\n      defaultProvider = standard._defaultProvider;\n    }\n  } // Standard Network (allow overriding the ENS address)\n\n\n  return {\n    name: network.name,\n    chainId: standard.chainId,\n    ensAddress: network.ensAddress || standard.ensAddress || null,\n    _defaultProvider: defaultProvider\n  };\n}\n\nfunction encode$1(data) {\n  data = arrayify(data);\n  let textData = \"\";\n\n  for (let i = 0; i < data.length; i++) {\n    textData += String.fromCharCode(data[i]);\n  }\n\n  return btoa(textData);\n}\n\nconst version$e = \"web/5.4.0\";\n\nvar __awaiter$4 = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nfunction getUrl(href, options) {\n  return __awaiter$4(this, void 0, void 0, function* () {\n    if (options == null) {\n      options = {};\n    }\n\n    const request = {\n      method: options.method || \"GET\",\n      headers: options.headers || {},\n      body: options.body || undefined,\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      redirect: \"follow\",\n      referrer: \"client\" // no-referrer, *client\n\n    };\n    const response = yield fetch(href, request);\n    const body = yield response.arrayBuffer();\n    const headers = {};\n\n    if (response.headers.forEach) {\n      response.headers.forEach((value, key) => {\n        headers[key.toLowerCase()] = value;\n      });\n    } else {\n      response.headers.keys().forEach(key => {\n        headers[key.toLowerCase()] = response.headers.get(key);\n      });\n    }\n\n    return {\n      headers: headers,\n      statusCode: response.status,\n      statusMessage: response.statusText,\n      body: arrayify(new Uint8Array(body))\n    };\n  });\n}\n\nvar __awaiter$5 = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$e = new Logger(version$e);\n\nfunction staller(duration) {\n  return new Promise(resolve => {\n    setTimeout(resolve, duration);\n  });\n}\n\nfunction bodyify(value, type) {\n  if (value == null) {\n    return null;\n  }\n\n  if (typeof value === \"string\") {\n    return value;\n  }\n\n  if (isBytesLike(value)) {\n    if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n      try {\n        return toUtf8String(value);\n      } catch (error) {}\n    }\n\n    return hexlify(value);\n  }\n\n  return value;\n} // This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\n\n\nfunction _fetchData(connection, body, processFunc) {\n  // How many times to retry in the event of a throttle\n  const attemptLimit = typeof connection === \"object\" && connection.throttleLimit != null ? connection.throttleLimit : 12;\n  logger$e.assertArgument(attemptLimit > 0 && attemptLimit % 1 === 0, \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n  const throttleCallback = typeof connection === \"object\" ? connection.throttleCallback : null;\n  const throttleSlotInterval = typeof connection === \"object\" && typeof connection.throttleSlotInterval === \"number\" ? connection.throttleSlotInterval : 100;\n  logger$e.assertArgument(throttleSlotInterval > 0 && throttleSlotInterval % 1 === 0, \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n  const headers = {};\n  let url = null; // @TODO: Allow ConnectionInfo to override some of these values\n\n  const options = {\n    method: \"GET\"\n  };\n  let allow304 = false;\n  let timeout = 2 * 60 * 1000;\n\n  if (typeof connection === \"string\") {\n    url = connection;\n  } else if (typeof connection === \"object\") {\n    if (connection == null || connection.url == null) {\n      logger$e.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n    }\n\n    url = connection.url;\n\n    if (typeof connection.timeout === \"number\" && connection.timeout > 0) {\n      timeout = connection.timeout;\n    }\n\n    if (connection.headers) {\n      for (const key in connection.headers) {\n        headers[key.toLowerCase()] = {\n          key: key,\n          value: String(connection.headers[key])\n        };\n\n        if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n          allow304 = true;\n        }\n      }\n    }\n\n    options.allowGzip = !!connection.allowGzip;\n\n    if (connection.user != null && connection.password != null) {\n      if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n        logger$e.throwError(\"basic authentication requires a secure https url\", Logger.errors.INVALID_ARGUMENT, {\n          argument: \"url\",\n          url: url,\n          user: connection.user,\n          password: \"[REDACTED]\"\n        });\n      }\n\n      const authorization = connection.user + \":\" + connection.password;\n      headers[\"authorization\"] = {\n        key: \"Authorization\",\n        value: \"Basic \" + encode$1(toUtf8Bytes(authorization))\n      };\n    }\n  }\n\n  if (body) {\n    options.method = \"POST\";\n    options.body = body;\n\n    if (headers[\"content-type\"] == null) {\n      headers[\"content-type\"] = {\n        key: \"Content-Type\",\n        value: \"application/octet-stream\"\n      };\n    }\n\n    if (headers[\"content-length\"] == null) {\n      headers[\"content-length\"] = {\n        key: \"Content-Length\",\n        value: String(body.length)\n      };\n    }\n  }\n\n  const flatHeaders = {};\n  Object.keys(headers).forEach(key => {\n    const header = headers[key];\n    flatHeaders[header.key] = header.value;\n  });\n  options.headers = flatHeaders;\n\n  const runningTimeout = function () {\n    let timer = null;\n    const promise = new Promise(function (resolve, reject) {\n      if (timeout) {\n        timer = setTimeout(() => {\n          if (timer == null) {\n            return;\n          }\n\n          timer = null;\n          reject(logger$e.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n            requestMethod: options.method,\n            timeout: timeout,\n            url: url\n          }));\n        }, timeout);\n      }\n    });\n\n    const cancel = function () {\n      if (timer == null) {\n        return;\n      }\n\n      clearTimeout(timer);\n      timer = null;\n    };\n\n    return {\n      promise,\n      cancel\n    };\n  }();\n\n  const runningFetch = function () {\n    return __awaiter$5(this, void 0, void 0, function* () {\n      for (let attempt = 0; attempt < attemptLimit; attempt++) {\n        let response = null;\n\n        try {\n          response = yield getUrl(url, options); // Exponential back-off throttling\n\n          if (response.statusCode === 429 && attempt < attemptLimit) {\n            let tryAgain = true;\n\n            if (throttleCallback) {\n              tryAgain = yield throttleCallback(attempt, url);\n            }\n\n            if (tryAgain) {\n              let stall = 0;\n              const retryAfter = response.headers[\"retry-after\"];\n\n              if (typeof retryAfter === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                stall = parseInt(retryAfter) * 1000;\n              } else {\n                stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n              } //console.log(\"Stalling 429\");\n\n\n              yield staller(stall);\n              continue;\n            }\n          }\n        } catch (error) {\n          response = error.response;\n\n          if (response == null) {\n            runningTimeout.cancel();\n            logger$e.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n              requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n              requestMethod: options.method,\n              serverError: error,\n              url: url\n            });\n          }\n        }\n\n        let body = response.body;\n\n        if (allow304 && response.statusCode === 304) {\n          body = null;\n        } else if (response.statusCode < 200 || response.statusCode >= 300) {\n          runningTimeout.cancel();\n          logger$e.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n            status: response.statusCode,\n            headers: response.headers,\n            body: bodyify(body, response.headers ? response.headers[\"content-type\"] : null),\n            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n            requestMethod: options.method,\n            url: url\n          });\n        }\n\n        if (processFunc) {\n          try {\n            const result = yield processFunc(body, response);\n            runningTimeout.cancel();\n            return result;\n          } catch (error) {\n            // Allow the processFunc to trigger a throttle\n            if (error.throttleRetry && attempt < attemptLimit) {\n              let tryAgain = true;\n\n              if (throttleCallback) {\n                tryAgain = yield throttleCallback(attempt, url);\n              }\n\n              if (tryAgain) {\n                const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt))); //console.log(\"Stalling callback\");\n\n                yield staller(timeout);\n                continue;\n              }\n            }\n\n            runningTimeout.cancel();\n            logger$e.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n              body: bodyify(body, response.headers ? response.headers[\"content-type\"] : null),\n              error: error,\n              requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n              requestMethod: options.method,\n              url: url\n            });\n          }\n        }\n\n        runningTimeout.cancel(); // If we had a processFunc, it eitehr returned a T or threw above.\n        // The \"body\" is now a Uint8Array.\n\n        return body;\n      }\n\n      return logger$e.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n        requestMethod: options.method,\n        url: url\n      });\n    });\n  }();\n\n  return Promise.race([runningTimeout.promise, runningFetch]);\n}\n\nfunction fetchJson(connection, json, processFunc) {\n  let processJsonFunc = (value, response) => {\n    let result = null;\n\n    if (value != null) {\n      try {\n        result = JSON.parse(toUtf8String(value));\n      } catch (error) {\n        logger$e.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n          body: value,\n          error: error\n        });\n      }\n    }\n\n    if (processFunc) {\n      result = processFunc(result, response);\n    }\n\n    return result;\n  }; // If we have json to send, we must\n  // - add content-type of application/json (unless already overridden)\n  // - convert the json to bytes\n\n\n  let body = null;\n\n  if (json != null) {\n    body = toUtf8Bytes(json); // Create a connection with the content-type set for JSON\n\n    const updated = typeof connection === \"string\" ? {\n      url: connection\n    } : shallowCopy(connection);\n\n    if (updated.headers) {\n      const hasContentType = Object.keys(updated.headers).filter(k => k.toLowerCase() === \"content-type\").length !== 0;\n\n      if (!hasContentType) {\n        updated.headers = shallowCopy(updated.headers);\n        updated.headers[\"content-type\"] = \"application/json\";\n      }\n    } else {\n      updated.headers = {\n        \"content-type\": \"application/json\"\n      };\n    }\n\n    connection = updated;\n  }\n\n  return _fetchData(connection, body, processJsonFunc);\n}\n\nfunction poll(func, options) {\n  if (!options) {\n    options = {};\n  }\n\n  options = shallowCopy(options);\n\n  if (options.floor == null) {\n    options.floor = 0;\n  }\n\n  if (options.ceiling == null) {\n    options.ceiling = 10000;\n  }\n\n  if (options.interval == null) {\n    options.interval = 250;\n  }\n\n  return new Promise(function (resolve, reject) {\n    let timer = null;\n    let done = false; // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n\n    const cancel = () => {\n      if (done) {\n        return false;\n      }\n\n      done = true;\n\n      if (timer) {\n        clearTimeout(timer);\n      }\n\n      return true;\n    };\n\n    if (options.timeout) {\n      timer = setTimeout(() => {\n        if (cancel()) {\n          reject(new Error(\"timeout\"));\n        }\n      }, options.timeout);\n    }\n\n    const retryLimit = options.retryLimit;\n    let attempt = 0;\n\n    function check() {\n      return func().then(function (result) {\n        // If we have a result, or are allowed null then we're done\n        if (result !== undefined) {\n          if (cancel()) {\n            resolve(result);\n          }\n        } else if (options.oncePoll) {\n          options.oncePoll.once(\"poll\", check);\n        } else if (options.onceBlock) {\n          options.onceBlock.once(\"block\", check); // Otherwise, exponential back-off (up to 10s) our next request\n        } else if (!done) {\n          attempt++;\n\n          if (attempt > retryLimit) {\n            if (cancel()) {\n              reject(new Error(\"retry limit reached\"));\n            }\n\n            return;\n          }\n\n          let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n\n          if (timeout < options.floor) {\n            timeout = options.floor;\n          }\n\n          if (timeout > options.ceiling) {\n            timeout = options.ceiling;\n          }\n\n          setTimeout(check, timeout);\n        }\n\n        return null;\n      }, function (error) {\n        if (cancel()) {\n          reject(error);\n        }\n      });\n    }\n\n    check();\n  });\n}\n\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'; // pre-compute lookup table\n\nvar ALPHABET_MAP = {};\n\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z);\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous');\n  ALPHABET_MAP[x] = z;\n}\n\nfunction polymodStep(pre) {\n  var b = pre >> 25;\n  return (pre & 0x1FFFFFF) << 5 ^ -(b >> 0 & 1) & 0x3b6a57b2 ^ -(b >> 1 & 1) & 0x26508e6d ^ -(b >> 2 & 1) & 0x1ea119fa ^ -(b >> 3 & 1) & 0x3d4233dd ^ -(b >> 4 & 1) & 0x2a1462b3;\n}\n\nfunction prefixChk(prefix) {\n  var chk = 1;\n\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i);\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')';\n    chk = polymodStep(chk) ^ c >> 5;\n  }\n\n  chk = polymodStep(chk);\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i);\n    chk = polymodStep(chk) ^ v & 0x1f;\n  }\n\n  return chk;\n}\n\nfunction encode$2(prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90;\n  if (prefix.length + 7 + words.length > LIMIT) throw new TypeError('Exceeds length limit');\n  prefix = prefix.toLowerCase(); // determine chk mod\n\n  var chk = prefixChk(prefix);\n  if (typeof chk === 'string') throw new Error(chk);\n  var result = prefix + '1';\n\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i];\n    if (x >> 5 !== 0) throw new Error('Non 5-bit word');\n    chk = polymodStep(chk) ^ x;\n    result += ALPHABET.charAt(x);\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk);\n  }\n\n  chk ^= 1;\n\n  for (i = 0; i < 6; ++i) {\n    var v = chk >> (5 - i) * 5 & 0x1f;\n    result += ALPHABET.charAt(v);\n  }\n\n  return result;\n}\n\nfunction __decode(str, LIMIT) {\n  LIMIT = LIMIT || 90;\n  if (str.length < 8) return str + ' too short';\n  if (str.length > LIMIT) return 'Exceeds length limit'; // don't allow mixed case\n\n  var lowered = str.toLowerCase();\n  var uppered = str.toUpperCase();\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str;\n  str = lowered;\n  var split = str.lastIndexOf('1');\n  if (split === -1) return 'No separator character for ' + str;\n  if (split === 0) return 'Missing prefix for ' + str;\n  var prefix = str.slice(0, split);\n  var wordChars = str.slice(split + 1);\n  if (wordChars.length < 6) return 'Data too short';\n  var chk = prefixChk(prefix);\n  if (typeof chk === 'string') return chk;\n  var words = [];\n\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i);\n    var v = ALPHABET_MAP[c];\n    if (v === undefined) return 'Unknown character ' + c;\n    chk = polymodStep(chk) ^ v; // not in the checksum?\n\n    if (i + 6 >= wordChars.length) continue;\n    words.push(v);\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str;\n  return {\n    prefix: prefix,\n    words: words\n  };\n}\n\nfunction decodeUnsafe() {\n  var res = __decode.apply(null, arguments);\n\n  if (typeof res === 'object') return res;\n}\n\nfunction decode$1(str) {\n  var res = __decode.apply(null, arguments);\n\n  if (typeof res === 'object') return res;\n  throw new Error(res);\n}\n\nfunction convert(data, inBits, outBits, pad) {\n  var value = 0;\n  var bits = 0;\n  var maxV = (1 << outBits) - 1;\n  var result = [];\n\n  for (var i = 0; i < data.length; ++i) {\n    value = value << inBits | data[i];\n    bits += inBits;\n\n    while (bits >= outBits) {\n      bits -= outBits;\n      result.push(value >> bits & maxV);\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push(value << outBits - bits & maxV);\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding';\n    if (value << outBits - bits & maxV) return 'Non-zero padding';\n  }\n\n  return result;\n}\n\nfunction toWordsUnsafe(bytes) {\n  var res = convert(bytes, 8, 5, true);\n  if (Array.isArray(res)) return res;\n}\n\nfunction toWords(bytes) {\n  var res = convert(bytes, 8, 5, true);\n  if (Array.isArray(res)) return res;\n  throw new Error(res);\n}\n\nfunction fromWordsUnsafe(words) {\n  var res = convert(words, 5, 8, false);\n  if (Array.isArray(res)) return res;\n}\n\nfunction fromWords(words) {\n  var res = convert(words, 5, 8, false);\n  if (Array.isArray(res)) return res;\n  throw new Error(res);\n}\n\nvar bech32 = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode$1,\n  encode: encode$2,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n};\nconst version$f = \"providers/5.4.4\";\nconst logger$f = new Logger(version$f);\n\nclass Formatter {\n  constructor() {\n    logger$f.checkNew(new.target, Formatter);\n    this.formats = this.getDefaultFormats();\n  }\n\n  getDefaultFormats() {\n    const formats = {};\n    const address = this.address.bind(this);\n    const bigNumber = this.bigNumber.bind(this);\n    const blockTag = this.blockTag.bind(this);\n    const data = this.data.bind(this);\n    const hash = this.hash.bind(this);\n    const hex = this.hex.bind(this);\n    const number = this.number.bind(this);\n    const type = this.type.bind(this);\n\n    const strictData = v => {\n      return this.data(v, true);\n    };\n\n    formats.transaction = {\n      hash: hash,\n      type: type,\n      accessList: Formatter.allowNull(this.accessList.bind(this), null),\n      blockHash: Formatter.allowNull(hash, null),\n      blockNumber: Formatter.allowNull(number, null),\n      transactionIndex: Formatter.allowNull(number, null),\n      confirmations: Formatter.allowNull(number, null),\n      from: address,\n      // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n      // must be set\n      gasPrice: Formatter.allowNull(bigNumber),\n      maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n      maxFeePerGas: Formatter.allowNull(bigNumber),\n      gasLimit: bigNumber,\n      to: Formatter.allowNull(address, null),\n      value: bigNumber,\n      nonce: number,\n      data: data,\n      r: Formatter.allowNull(this.uint256),\n      s: Formatter.allowNull(this.uint256),\n      v: Formatter.allowNull(number),\n      creates: Formatter.allowNull(address, null),\n      raw: Formatter.allowNull(data)\n    };\n    formats.transactionRequest = {\n      from: Formatter.allowNull(address),\n      nonce: Formatter.allowNull(number),\n      gasLimit: Formatter.allowNull(bigNumber),\n      gasPrice: Formatter.allowNull(bigNumber),\n      maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n      maxFeePerGas: Formatter.allowNull(bigNumber),\n      to: Formatter.allowNull(address),\n      value: Formatter.allowNull(bigNumber),\n      data: Formatter.allowNull(strictData),\n      type: Formatter.allowNull(number),\n      accessList: Formatter.allowNull(this.accessList.bind(this), null)\n    };\n    formats.receiptLog = {\n      transactionIndex: number,\n      blockNumber: number,\n      transactionHash: hash,\n      address: address,\n      topics: Formatter.arrayOf(hash),\n      data: data,\n      logIndex: number,\n      blockHash: hash\n    };\n    formats.receipt = {\n      to: Formatter.allowNull(this.address, null),\n      from: Formatter.allowNull(this.address, null),\n      contractAddress: Formatter.allowNull(address, null),\n      transactionIndex: number,\n      // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n      root: Formatter.allowNull(hex),\n      gasUsed: bigNumber,\n      logsBloom: Formatter.allowNull(data),\n      blockHash: hash,\n      transactionHash: hash,\n      logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n      blockNumber: number,\n      confirmations: Formatter.allowNull(number, null),\n      cumulativeGasUsed: bigNumber,\n      effectiveGasPrice: Formatter.allowNull(bigNumber),\n      status: Formatter.allowNull(number),\n      type: type\n    };\n    formats.block = {\n      hash: hash,\n      parentHash: hash,\n      number: number,\n      timestamp: number,\n      nonce: Formatter.allowNull(hex),\n      difficulty: this.difficulty.bind(this),\n      gasLimit: bigNumber,\n      gasUsed: bigNumber,\n      miner: address,\n      extraData: data,\n      transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n      baseFeePerGas: Formatter.allowNull(bigNumber)\n    };\n    formats.blockWithTransactions = shallowCopy(formats.block);\n    formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n    formats.filter = {\n      fromBlock: Formatter.allowNull(blockTag, undefined),\n      toBlock: Formatter.allowNull(blockTag, undefined),\n      blockHash: Formatter.allowNull(hash, undefined),\n      address: Formatter.allowNull(address, undefined),\n      topics: Formatter.allowNull(this.topics.bind(this), undefined)\n    };\n    formats.filterLog = {\n      blockNumber: Formatter.allowNull(number),\n      blockHash: Formatter.allowNull(hash),\n      transactionIndex: number,\n      removed: Formatter.allowNull(this.boolean.bind(this)),\n      address: address,\n      data: Formatter.allowFalsish(data, \"0x\"),\n      topics: Formatter.arrayOf(hash),\n      transactionHash: hash,\n      logIndex: number\n    };\n    return formats;\n  }\n\n  accessList(accessList) {\n    return accessListify(accessList || []);\n  } // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n  // Strict! Used on input.\n\n\n  number(number) {\n    if (number === \"0x\") {\n      return 0;\n    }\n\n    return BigNumber.from(number).toNumber();\n  }\n\n  type(number) {\n    if (number === \"0x\" || number == null) {\n      return 0;\n    }\n\n    return BigNumber.from(number).toNumber();\n  } // Strict! Used on input.\n\n\n  bigNumber(value) {\n    return BigNumber.from(value);\n  } // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n\n\n  boolean(value) {\n    if (typeof value === \"boolean\") {\n      return value;\n    }\n\n    if (typeof value === \"string\") {\n      value = value.toLowerCase();\n\n      if (value === \"true\") {\n        return true;\n      }\n\n      if (value === \"false\") {\n        return false;\n      }\n    }\n\n    throw new Error(\"invalid boolean - \" + value);\n  }\n\n  hex(value, strict) {\n    if (typeof value === \"string\") {\n      if (!strict && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n      }\n\n      if (isHexString(value)) {\n        return value.toLowerCase();\n      }\n    }\n\n    return logger$f.throwArgumentError(\"invalid hash\", \"value\", value);\n  }\n\n  data(value, strict) {\n    const result = this.hex(value, strict);\n\n    if (result.length % 2 !== 0) {\n      throw new Error(\"invalid data; odd-length - \" + value);\n    }\n\n    return result;\n  } // Requires an address\n  // Strict! Used on input.\n\n\n  address(value) {\n    return getAddress(value);\n  }\n\n  callAddress(value) {\n    if (!isHexString(value, 32)) {\n      return null;\n    }\n\n    const address = getAddress(hexDataSlice(value, 12));\n    return address === AddressZero ? null : address;\n  }\n\n  contractAddress(value) {\n    return getContractAddress(value);\n  } // Strict! Used on input.\n\n\n  blockTag(blockTag) {\n    if (blockTag == null) {\n      return \"latest\";\n    }\n\n    if (blockTag === \"earliest\") {\n      return \"0x0\";\n    }\n\n    if (blockTag === \"latest\" || blockTag === \"pending\") {\n      return blockTag;\n    }\n\n    if (typeof blockTag === \"number\" || isHexString(blockTag)) {\n      return hexValue(blockTag);\n    }\n\n    throw new Error(\"invalid blockTag\");\n  } // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n\n\n  hash(value, strict) {\n    const result = this.hex(value, strict);\n\n    if (hexDataLength(result) !== 32) {\n      return logger$f.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n\n    return result;\n  } // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n\n\n  difficulty(value) {\n    if (value == null) {\n      return null;\n    }\n\n    const v = BigNumber.from(value);\n\n    try {\n      return v.toNumber();\n    } catch (error) {}\n\n    return null;\n  }\n\n  uint256(value) {\n    if (!isHexString(value)) {\n      throw new Error(\"invalid uint256\");\n    }\n\n    return hexZeroPad(value, 32);\n  }\n\n  _block(value, format) {\n    if (value.author != null && value.miner == null) {\n      value.miner = value.author;\n    }\n\n    return Formatter.check(format, value);\n  }\n\n  block(value) {\n    return this._block(value, this.formats.block);\n  }\n\n  blockWithTransactions(value) {\n    return this._block(value, this.formats.blockWithTransactions);\n  } // Strict! Used on input.\n\n\n  transactionRequest(value) {\n    return Formatter.check(this.formats.transactionRequest, value);\n  }\n\n  transactionResponse(transaction) {\n    // Rename gas to gasLimit\n    if (transaction.gas != null && transaction.gasLimit == null) {\n      transaction.gasLimit = transaction.gas;\n    } // Some clients (TestRPC) do strange things like return 0x0 for the\n    // 0 address; correct this to be a real address\n\n\n    if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n      transaction.to = \"0x0000000000000000000000000000000000000000\";\n    } // Rename input to data\n\n\n    if (transaction.input != null && transaction.data == null) {\n      transaction.data = transaction.input;\n    } // If to and creates are empty, populate the creates from the transaction\n\n\n    if (transaction.to == null && transaction.creates == null) {\n      transaction.creates = this.contractAddress(transaction);\n    }\n\n    if ((transaction.type === 1 || transaction.type === 2) && transaction.accessList == null) {\n      transaction.accessList = [];\n    }\n\n    const result = Formatter.check(this.formats.transaction, transaction);\n\n    if (transaction.chainId != null) {\n      let chainId = transaction.chainId;\n\n      if (isHexString(chainId)) {\n        chainId = BigNumber.from(chainId).toNumber();\n      }\n\n      result.chainId = chainId;\n    } else {\n      let chainId = transaction.networkId; // geth-etc returns chainId\n\n      if (chainId == null && result.v == null) {\n        chainId = transaction.chainId;\n      }\n\n      if (isHexString(chainId)) {\n        chainId = BigNumber.from(chainId).toNumber();\n      }\n\n      if (typeof chainId !== \"number\" && result.v != null) {\n        chainId = (result.v - 35) / 2;\n\n        if (chainId < 0) {\n          chainId = 0;\n        }\n\n        chainId = parseInt(chainId);\n      }\n\n      if (typeof chainId !== \"number\") {\n        chainId = 0;\n      }\n\n      result.chainId = chainId;\n    } // 0x0000... should actually be null\n\n\n    if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n      result.blockHash = null;\n    }\n\n    return result;\n  }\n\n  transaction(value) {\n    return parse(value);\n  }\n\n  receiptLog(value) {\n    return Formatter.check(this.formats.receiptLog, value);\n  }\n\n  receipt(value) {\n    const result = Formatter.check(this.formats.receipt, value); // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n\n    if (result.root != null) {\n      if (result.root.length <= 4) {\n        // Could be 0x00, 0x0, 0x01 or 0x1\n        const value = BigNumber.from(result.root).toNumber();\n\n        if (value === 0 || value === 1) {\n          // Make sure if both are specified, they match\n          if (result.status != null && result.status !== value) {\n            logger$f.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", {\n              root: result.root,\n              status: result.status\n            });\n          }\n\n          result.status = value;\n          delete result.root;\n        } else {\n          logger$f.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n        }\n      } else if (result.root.length !== 66) {\n        // Must be a valid bytes32\n        logger$f.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n      }\n    }\n\n    if (result.status != null) {\n      result.byzantium = true;\n    }\n\n    return result;\n  }\n\n  topics(value) {\n    if (Array.isArray(value)) {\n      return value.map(v => this.topics(v));\n    } else if (value != null) {\n      return this.hash(value, true);\n    }\n\n    return null;\n  }\n\n  filter(value) {\n    return Formatter.check(this.formats.filter, value);\n  }\n\n  filterLog(value) {\n    return Formatter.check(this.formats.filterLog, value);\n  }\n\n  static check(format, object) {\n    const result = {};\n\n    for (const key in format) {\n      try {\n        const value = format[key](object[key]);\n\n        if (value !== undefined) {\n          result[key] = value;\n        }\n      } catch (error) {\n        error.checkKey = key;\n        error.checkValue = object[key];\n        throw error;\n      }\n    }\n\n    return result;\n  } // if value is null-ish, nullValue is returned\n\n\n  static allowNull(format, nullValue) {\n    return function (value) {\n      if (value == null) {\n        return nullValue;\n      }\n\n      return format(value);\n    };\n  } // If value is false-ish, replaceValue is returned\n\n\n  static allowFalsish(format, replaceValue) {\n    return function (value) {\n      if (!value) {\n        return replaceValue;\n      }\n\n      return format(value);\n    };\n  } // Requires an Array satisfying check\n\n\n  static arrayOf(format) {\n    return function (array) {\n      if (!Array.isArray(array)) {\n        throw new Error(\"not an array\");\n      }\n\n      const result = [];\n      array.forEach(function (value) {\n        result.push(format(value));\n      });\n      return result;\n    };\n  }\n\n}\n\nvar __awaiter$6 = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$g = new Logger(version$f); //////////////////////////////\n// Event Serializeing\n\nfunction checkTopic(topic) {\n  if (topic == null) {\n    return \"null\";\n  }\n\n  if (hexDataLength(topic) !== 32) {\n    logger$g.throwArgumentError(\"invalid topic\", \"topic\", topic);\n  }\n\n  return topic.toLowerCase();\n}\n\nfunction serializeTopics(topics) {\n  // Remove trailing null AND-topics; they are redundant\n  topics = topics.slice();\n\n  while (topics.length > 0 && topics[topics.length - 1] == null) {\n    topics.pop();\n  }\n\n  return topics.map(topic => {\n    if (Array.isArray(topic)) {\n      // Only track unique OR-topics\n      const unique = {};\n      topic.forEach(topic => {\n        unique[checkTopic(topic)] = true;\n      }); // The order of OR-topics does not matter\n\n      const sorted = Object.keys(unique);\n      sorted.sort();\n      return sorted.join(\"|\");\n    } else {\n      return checkTopic(topic);\n    }\n  }).join(\"&\");\n}\n\nfunction deserializeTopics(data) {\n  if (data === \"\") {\n    return [];\n  }\n\n  return data.split(/&/g).map(topic => {\n    if (topic === \"\") {\n      return [];\n    }\n\n    const comps = topic.split(\"|\").map(topic => {\n      return topic === \"null\" ? null : topic;\n    });\n    return comps.length === 1 ? comps[0] : comps;\n  });\n}\n\nfunction getEventTag(eventName) {\n  if (typeof eventName === \"string\") {\n    eventName = eventName.toLowerCase();\n\n    if (hexDataLength(eventName) === 32) {\n      return \"tx:\" + eventName;\n    }\n\n    if (eventName.indexOf(\":\") === -1) {\n      return eventName;\n    }\n  } else if (Array.isArray(eventName)) {\n    return \"filter:*:\" + serializeTopics(eventName);\n  } else if (ForkEvent.isForkEvent(eventName)) {\n    logger$g.warn(\"not implemented\");\n    throw new Error(\"not implemented\");\n  } else if (eventName && typeof eventName === \"object\") {\n    return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n  }\n\n  throw new Error(\"invalid event - \" + eventName);\n} //////////////////////////////\n// Helper Object\n\n\nfunction getTime() {\n  return new Date().getTime();\n}\n\nfunction stall(duration) {\n  return new Promise(resolve => {\n    setTimeout(resolve, duration);\n  });\n} //////////////////////////////\n// Provider Object\n\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\n\n\nconst PollableEvents = [\"block\", \"network\", \"pending\", \"poll\"];\n\nclass Event {\n  constructor(tag, listener, once) {\n    defineReadOnly(this, \"tag\", tag);\n    defineReadOnly(this, \"listener\", listener);\n    defineReadOnly(this, \"once\", once);\n  }\n\n  get event() {\n    switch (this.type) {\n      case \"tx\":\n        return this.hash;\n\n      case \"filter\":\n        return this.filter;\n    }\n\n    return this.tag;\n  }\n\n  get type() {\n    return this.tag.split(\":\")[0];\n  }\n\n  get hash() {\n    const comps = this.tag.split(\":\");\n\n    if (comps[0] !== \"tx\") {\n      return null;\n    }\n\n    return comps[1];\n  }\n\n  get filter() {\n    const comps = this.tag.split(\":\");\n\n    if (comps[0] !== \"filter\") {\n      return null;\n    }\n\n    const address = comps[1];\n    const topics = deserializeTopics(comps[2]);\n    const filter = {};\n\n    if (topics.length > 0) {\n      filter.topics = topics;\n    }\n\n    if (address && address !== \"*\") {\n      filter.address = address;\n    }\n\n    return filter;\n  }\n\n  pollable() {\n    return this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0;\n  }\n\n} // https://github.com/satoshilabs/slips/blob/master/slip-0044.md\n\n\nconst coinInfos = {\n  \"0\": {\n    symbol: \"btc\",\n    p2pkh: 0x00,\n    p2sh: 0x05,\n    prefix: \"bc\"\n  },\n  \"2\": {\n    symbol: \"ltc\",\n    p2pkh: 0x30,\n    p2sh: 0x32,\n    prefix: \"ltc\"\n  },\n  \"3\": {\n    symbol: \"doge\",\n    p2pkh: 0x1e,\n    p2sh: 0x16\n  },\n  \"60\": {\n    symbol: \"eth\",\n    ilk: \"eth\"\n  },\n  \"61\": {\n    symbol: \"etc\",\n    ilk: \"eth\"\n  },\n  \"700\": {\n    symbol: \"xdai\",\n    ilk: \"eth\"\n  }\n};\n\nfunction bytes32ify(value) {\n  return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n} // Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\n\n\nfunction base58Encode(data) {\n  return Base58.encode(concat([data, hexDataSlice(sha256$1(sha256$1(data)), 0, 4)]));\n}\n\nclass Resolver {\n  constructor(provider, address, name) {\n    defineReadOnly(this, \"provider\", provider);\n    defineReadOnly(this, \"name\", name);\n    defineReadOnly(this, \"address\", provider.formatter.address(address));\n  }\n\n  _fetchBytes(selector, parameters) {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      // keccak256(\"addr(bytes32,uint256)\")\n      const transaction = {\n        to: this.address,\n        data: hexConcat([selector, namehash(this.name), parameters || \"0x\"])\n      };\n\n      try {\n        const result = yield this.provider.call(transaction);\n\n        if (result === \"0x\") {\n          return null;\n        }\n\n        const offset = BigNumber.from(hexDataSlice(result, 0, 32)).toNumber();\n        const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n        return hexDataSlice(result, offset + 32, offset + 32 + length);\n      } catch (error) {\n        if (error.code === Logger.errors.CALL_EXCEPTION) {\n          return null;\n        }\n\n        return null;\n      }\n    });\n  }\n\n  _getAddress(coinType, hexBytes) {\n    const coinInfo = coinInfos[String(coinType)];\n\n    if (coinInfo == null) {\n      logger$g.throwError(`unsupported coin type: ${coinType}`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: `getAddress(${coinType})`\n      });\n    }\n\n    if (coinInfo.ilk === \"eth\") {\n      return this.provider.formatter.address(hexBytes);\n    }\n\n    const bytes = arrayify(hexBytes); // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n\n    if (coinInfo.p2pkh != null) {\n      const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n\n      if (p2pkh) {\n        const length = parseInt(p2pkh[1], 16);\n\n        if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n          return base58Encode(concat([[coinInfo.p2pkh], \"0x\" + p2pkh[2]]));\n        }\n      }\n    } // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n\n\n    if (coinInfo.p2sh != null) {\n      const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n\n      if (p2sh) {\n        const length = parseInt(p2sh[1], 16);\n\n        if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n          return base58Encode(concat([[coinInfo.p2sh], \"0x\" + p2sh[2]]));\n        }\n      }\n    } // Bech32\n\n\n    if (coinInfo.prefix != null) {\n      const length = bytes[1]; // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n\n      let version = bytes[0];\n\n      if (version === 0x00) {\n        if (length !== 20 && length !== 32) {\n          version = -1;\n        }\n      } else {\n        version = -1;\n      }\n\n      if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n        const words = bech32.toWords(bytes.slice(2));\n        words.unshift(version);\n        return bech32.encode(coinInfo.prefix, words);\n      }\n    }\n\n    return null;\n  }\n\n  getAddress(coinType) {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      if (coinType == null) {\n        coinType = 60;\n      } // If Ethereum, use the standard `addr(bytes32)`\n\n\n      if (coinType === 60) {\n        try {\n          // keccak256(\"addr(bytes32)\")\n          const transaction = {\n            to: this.address,\n            data: \"0x3b3b57de\" + namehash(this.name).substring(2)\n          };\n          const hexBytes = yield this.provider.call(transaction); // No address\n\n          if (hexBytes === \"0x\" || hexBytes === HashZero) {\n            return null;\n          }\n\n          return this.provider.formatter.callAddress(hexBytes);\n        } catch (error) {\n          if (error.code === Logger.errors.CALL_EXCEPTION) {\n            return null;\n          }\n\n          throw error;\n        }\n      } // keccak256(\"addr(bytes32,uint256\")\n\n\n      const hexBytes = yield this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType)); // No address\n\n      if (hexBytes == null || hexBytes === \"0x\") {\n        return null;\n      } // Compute the address\n\n\n      const address = this._getAddress(coinType, hexBytes);\n\n      if (address == null) {\n        logger$g.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: `getAddress(${coinType})`,\n          coinType: coinType,\n          data: hexBytes\n        });\n      }\n\n      return address;\n    });\n  }\n\n  getContentHash() {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      // keccak256(\"contenthash()\")\n      const hexBytes = yield this._fetchBytes(\"0xbc1c58d1\"); // No contenthash\n\n      if (hexBytes == null || hexBytes === \"0x\") {\n        return null;\n      } // IPFS (CID: 1, Type: DAG-PB)\n\n\n      const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n\n      if (ipfs) {\n        const length = parseInt(ipfs[3], 16);\n\n        if (ipfs[4].length === length * 2) {\n          return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n        }\n      } // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n\n\n      const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);\n\n      if (swarm) {\n        if (swarm[1].length === 32 * 2) {\n          return \"bzz:/\\/\" + swarm[1];\n        }\n      }\n\n      return logger$g.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"getContentHash()\",\n        data: hexBytes\n      });\n    });\n  }\n\n  getText(key) {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      // The key encoded as parameter to fetchBytes\n      let keyBytes = toUtf8Bytes(key); // The nodehash consumes the first slot, so the string pointer targets\n      // offset 64, with the length at offset 64 and data starting at offset 96\n\n      keyBytes = concat([bytes32ify(64), bytes32ify(keyBytes.length), keyBytes]); // Pad to word-size (32 bytes)\n\n      if (keyBytes.length % 32 !== 0) {\n        keyBytes = concat([keyBytes, hexZeroPad(\"0x\", 32 - key.length % 32)]);\n      }\n\n      const hexBytes = yield this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n\n      if (hexBytes == null || hexBytes === \"0x\") {\n        return null;\n      }\n\n      return toUtf8String(hexBytes);\n    });\n  }\n\n}\n\nlet defaultFormatter = null;\nlet nextPollId = 1;\n\nclass BaseProvider extends Provider {\n  /**\n   *  ready\n   *\n   *  A Promise<Network> that resolves only once the provider is ready.\n   *\n   *  Sub-classes that call the super with a network without a chainId\n   *  MUST set this. Standard named networks have a known chainId.\n   *\n   */\n  constructor(network) {\n    logger$g.checkNew(new.target, Provider);\n    super(); // Events being listened to\n\n    this._events = [];\n    this._emitted = {\n      block: -2\n    };\n    this.formatter = new.target.getFormatter(); // If network is any, this Provider allows the underlying\n    // network to change dynamically, and we auto-detect the\n    // current network\n\n    defineReadOnly(this, \"anyNetwork\", network === \"any\");\n\n    if (this.anyNetwork) {\n      network = this.detectNetwork();\n    }\n\n    if (network instanceof Promise) {\n      this._networkPromise = network; // Squash any \"unhandled promise\" errors; that do not need to be handled\n\n      network.catch(error => {}); // Trigger initial network setting (async)\n\n      this._ready().catch(error => {});\n    } else {\n      const knownNetwork = getStatic(new.target, \"getNetwork\")(network);\n\n      if (knownNetwork) {\n        defineReadOnly(this, \"_network\", knownNetwork);\n        this.emit(\"network\", knownNetwork, null);\n      } else {\n        logger$g.throwArgumentError(\"invalid network\", \"network\", network);\n      }\n    }\n\n    this._maxInternalBlockNumber = -1024;\n    this._lastBlockNumber = -2;\n    this._pollingInterval = 4000;\n    this._fastQueryDate = 0;\n  }\n\n  _ready() {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      if (this._network == null) {\n        let network = null;\n\n        if (this._networkPromise) {\n          try {\n            network = yield this._networkPromise;\n          } catch (error) {}\n        } // Try the Provider's network detection (this MUST throw if it cannot)\n\n\n        if (network == null) {\n          network = yield this.detectNetwork();\n        } // This should never happen; every Provider sub-class should have\n        // suggested a network by here (or have thrown).\n\n\n        if (!network) {\n          logger$g.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, {});\n        } // Possible this call stacked so do not call defineReadOnly again\n\n\n        if (this._network == null) {\n          if (this.anyNetwork) {\n            this._network = network;\n          } else {\n            defineReadOnly(this, \"_network\", network);\n          }\n\n          this.emit(\"network\", network, null);\n        }\n      }\n\n      return this._network;\n    });\n  } // This will always return the most recently established network.\n  // For \"any\", this can change (a \"network\" event is emitted before\n  // any change is refelcted); otherwise this cannot change\n\n\n  get ready() {\n    return poll(() => {\n      return this._ready().then(network => {\n        return network;\n      }, error => {\n        // If the network isn't running yet, we will wait\n        if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n          return undefined;\n        }\n\n        throw error;\n      });\n    });\n  } // @TODO: Remove this and just create a singleton formatter\n\n\n  static getFormatter() {\n    if (defaultFormatter == null) {\n      defaultFormatter = new Formatter();\n    }\n\n    return defaultFormatter;\n  } // @TODO: Remove this and just use getNetwork\n\n\n  static getNetwork(network) {\n    return getNetwork(network == null ? \"homestead\" : network);\n  } // Fetches the blockNumber, but will reuse any result that is less\n  // than maxAge old or has been requested since the last request\n\n\n  _getInternalBlockNumber(maxAge) {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      yield this._ready(); // Allowing stale data up to maxAge old\n\n      if (maxAge > 0) {\n        // While there are pending internal block requests...\n        while (this._internalBlockNumber) {\n          // ...\"remember\" which fetch we started with\n          const internalBlockNumber = this._internalBlockNumber;\n\n          try {\n            // Check the result is not too stale\n            const result = yield internalBlockNumber;\n\n            if (getTime() - result.respTime <= maxAge) {\n              return result.blockNumber;\n            } // Too old; fetch a new value\n\n\n            break;\n          } catch (error) {\n            // The fetch rejected; if we are the first to get the\n            // rejection, drop through so we replace it with a new\n            // fetch; all others blocked will then get that fetch\n            // which won't match the one they \"remembered\" and loop\n            if (this._internalBlockNumber === internalBlockNumber) {\n              break;\n            }\n          }\n        }\n      }\n\n      const reqTime = getTime();\n      const checkInternalBlockNumber = resolveProperties({\n        blockNumber: this.perform(\"getBlockNumber\", {}),\n        networkError: this.getNetwork().then(network => null, error => error)\n      }).then(({\n        blockNumber,\n        networkError\n      }) => {\n        if (networkError) {\n          // Unremember this bad internal block number\n          if (this._internalBlockNumber === checkInternalBlockNumber) {\n            this._internalBlockNumber = null;\n          }\n\n          throw networkError;\n        }\n\n        const respTime = getTime();\n        blockNumber = BigNumber.from(blockNumber).toNumber();\n\n        if (blockNumber < this._maxInternalBlockNumber) {\n          blockNumber = this._maxInternalBlockNumber;\n        }\n\n        this._maxInternalBlockNumber = blockNumber;\n\n        this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n\n\n        return {\n          blockNumber,\n          reqTime,\n          respTime\n        };\n      });\n      this._internalBlockNumber = checkInternalBlockNumber; // Swallow unhandled exceptions; if needed they are handled else where\n\n      checkInternalBlockNumber.catch(error => {\n        // Don't null the dead (rejected) fetch, if it has already been updated\n        if (this._internalBlockNumber === checkInternalBlockNumber) {\n          this._internalBlockNumber = null;\n        }\n      });\n      return (yield checkInternalBlockNumber).blockNumber;\n    });\n  }\n\n  poll() {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      const pollId = nextPollId++; // Track all running promises, so we can trigger a post-poll once they are complete\n\n      const runners = [];\n      let blockNumber = null;\n\n      try {\n        blockNumber = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n      } catch (error) {\n        this.emit(\"error\", error);\n        return;\n      }\n\n      this._setFastBlockNumber(blockNumber); // Emit a poll event after we have the latest (fast) block number\n\n\n      this.emit(\"poll\", pollId, blockNumber); // If the block has not changed, meh.\n\n      if (blockNumber === this._lastBlockNumber) {\n        this.emit(\"didPoll\", pollId);\n        return;\n      } // First polling cycle, trigger a \"block\" events\n\n\n      if (this._emitted.block === -2) {\n        this._emitted.block = blockNumber - 1;\n      }\n\n      if (Math.abs(this._emitted.block - blockNumber) > 1000) {\n        logger$g.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${blockNumber})`);\n        this.emit(\"error\", logger$g.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n          blockNumber: blockNumber,\n          event: \"blockSkew\",\n          previousBlockNumber: this._emitted.block\n        }));\n        this.emit(\"block\", blockNumber);\n      } else {\n        // Notify all listener for each block that has passed\n        for (let i = this._emitted.block + 1; i <= blockNumber; i++) {\n          this.emit(\"block\", i);\n        }\n      } // The emitted block was updated, check for obsolete events\n\n\n      if (this._emitted.block !== blockNumber) {\n        this._emitted.block = blockNumber;\n        Object.keys(this._emitted).forEach(key => {\n          // The block event does not expire\n          if (key === \"block\") {\n            return;\n          } // The block we were at when we emitted this event\n\n\n          const eventBlockNumber = this._emitted[key]; // We cannot garbage collect pending transactions or blocks here\n          // They should be garbage collected by the Provider when setting\n          // \"pending\" events\n\n          if (eventBlockNumber === \"pending\") {\n            return;\n          } // Evict any transaction hashes or block hashes over 12 blocks\n          // old, since they should not return null anyways\n\n\n          if (blockNumber - eventBlockNumber > 12) {\n            delete this._emitted[key];\n          }\n        });\n      } // First polling cycle\n\n\n      if (this._lastBlockNumber === -2) {\n        this._lastBlockNumber = blockNumber - 1;\n      } // Find all transaction hashes we are waiting on\n\n\n      this._events.forEach(event => {\n        switch (event.type) {\n          case \"tx\":\n            {\n              const hash = event.hash;\n              let runner = this.getTransactionReceipt(hash).then(receipt => {\n                if (!receipt || receipt.blockNumber == null) {\n                  return null;\n                }\n\n                this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                this.emit(hash, receipt);\n                return null;\n              }).catch(error => {\n                this.emit(\"error\", error);\n              });\n              runners.push(runner);\n              break;\n            }\n\n          case \"filter\":\n            {\n              const filter = event.filter;\n              filter.fromBlock = this._lastBlockNumber + 1;\n              filter.toBlock = blockNumber;\n              const runner = this.getLogs(filter).then(logs => {\n                if (logs.length === 0) {\n                  return;\n                }\n\n                logs.forEach(log => {\n                  this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                  this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n                  this.emit(filter, log);\n                });\n              }).catch(error => {\n                this.emit(\"error\", error);\n              });\n              runners.push(runner);\n              break;\n            }\n        }\n      });\n\n      this._lastBlockNumber = blockNumber; // Once all events for this loop have been processed, emit \"didPoll\"\n\n      Promise.all(runners).then(() => {\n        this.emit(\"didPoll\", pollId);\n      }).catch(error => {\n        this.emit(\"error\", error);\n      });\n      return;\n    });\n  } // Deprecated; do not use this\n\n\n  resetEventsBlock(blockNumber) {\n    this._lastBlockNumber = blockNumber - 1;\n\n    if (this.polling) {\n      this.poll();\n    }\n  }\n\n  get network() {\n    return this._network;\n  } // This method should query the network if the underlying network\n  // can change, such as when connected to a JSON-RPC backend\n\n\n  detectNetwork() {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      return logger$g.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"provider.detectNetwork\"\n      });\n    });\n  }\n\n  getNetwork() {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      const network = yield this._ready(); // Make sure we are still connected to the same network; this is\n      // only an external call for backends which can have the underlying\n      // network change spontaneously\n\n      const currentNetwork = yield this.detectNetwork();\n\n      if (network.chainId !== currentNetwork.chainId) {\n        // We are allowing network changes, things can get complex fast;\n        // make sure you know what you are doing if you use \"any\"\n        if (this.anyNetwork) {\n          this._network = currentNetwork; // Reset all internal block number guards and caches\n\n          this._lastBlockNumber = -2;\n          this._fastBlockNumber = null;\n          this._fastBlockNumberPromise = null;\n          this._fastQueryDate = 0;\n          this._emitted.block = -2;\n          this._maxInternalBlockNumber = -1024;\n          this._internalBlockNumber = null; // The \"network\" event MUST happen before this method resolves\n          // so any events have a chance to unregister, so we stall an\n          // additional event loop before returning from /this/ call\n\n          this.emit(\"network\", currentNetwork, network);\n          yield stall(0);\n          return this._network;\n        }\n\n        const error = logger$g.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n          event: \"changed\",\n          network: network,\n          detectedNetwork: currentNetwork\n        });\n        this.emit(\"error\", error);\n        throw error;\n      }\n\n      return network;\n    });\n  }\n\n  get blockNumber() {\n    this._getInternalBlockNumber(100 + this.pollingInterval / 2).then(blockNumber => {\n      this._setFastBlockNumber(blockNumber);\n    }, error => {});\n\n    return this._fastBlockNumber != null ? this._fastBlockNumber : -1;\n  }\n\n  get polling() {\n    return this._poller != null;\n  }\n\n  set polling(value) {\n    if (value && !this._poller) {\n      this._poller = setInterval(() => {\n        this.poll();\n      }, this.pollingInterval);\n\n      if (!this._bootstrapPoll) {\n        this._bootstrapPoll = setTimeout(() => {\n          this.poll(); // We block additional polls until the polling interval\n          // is done, to prevent overwhelming the poll function\n\n          this._bootstrapPoll = setTimeout(() => {\n            // If polling was disabled, something may require a poke\n            // since starting the bootstrap poll and it was disabled\n            if (!this._poller) {\n              this.poll();\n            } // Clear out the bootstrap so we can do another\n\n\n            this._bootstrapPoll = null;\n          }, this.pollingInterval);\n        }, 0);\n      }\n    } else if (!value && this._poller) {\n      clearInterval(this._poller);\n      this._poller = null;\n    }\n  }\n\n  get pollingInterval() {\n    return this._pollingInterval;\n  }\n\n  set pollingInterval(value) {\n    if (typeof value !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n      throw new Error(\"invalid polling interval\");\n    }\n\n    this._pollingInterval = value;\n\n    if (this._poller) {\n      clearInterval(this._poller);\n      this._poller = setInterval(() => {\n        this.poll();\n      }, this._pollingInterval);\n    }\n  }\n\n  _getFastBlockNumber() {\n    const now = getTime(); // Stale block number, request a newer value\n\n    if (now - this._fastQueryDate > 2 * this._pollingInterval) {\n      this._fastQueryDate = now;\n      this._fastBlockNumberPromise = this.getBlockNumber().then(blockNumber => {\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n          this._fastBlockNumber = blockNumber;\n        }\n\n        return this._fastBlockNumber;\n      });\n    }\n\n    return this._fastBlockNumberPromise;\n  }\n\n  _setFastBlockNumber(blockNumber) {\n    // Older block, maybe a stale request\n    if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) {\n      return;\n    } // Update the time we updated the blocknumber\n\n\n    this._fastQueryDate = getTime(); // Newer block number, use  it\n\n    if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n      this._fastBlockNumber = blockNumber;\n      this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n    }\n  }\n\n  waitForTransaction(transactionHash, confirmations, timeout) {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      return this._waitForTransaction(transactionHash, confirmations == null ? 1 : confirmations, timeout || 0, null);\n    });\n  }\n\n  _waitForTransaction(transactionHash, confirmations, timeout, replaceable) {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      const receipt = yield this.getTransactionReceipt(transactionHash); // Receipt is already good\n\n      if ((receipt ? receipt.confirmations : 0) >= confirmations) {\n        return receipt;\n      } // Poll until the receipt is good...\n\n\n      return new Promise((resolve, reject) => {\n        const cancelFuncs = [];\n        let done = false;\n\n        const alreadyDone = function () {\n          if (done) {\n            return true;\n          }\n\n          done = true;\n          cancelFuncs.forEach(func => {\n            func();\n          });\n          return false;\n        };\n\n        const minedHandler = receipt => {\n          if (receipt.confirmations < confirmations) {\n            return;\n          }\n\n          if (alreadyDone()) {\n            return;\n          }\n\n          resolve(receipt);\n        };\n\n        this.on(transactionHash, minedHandler);\n        cancelFuncs.push(() => {\n          this.removeListener(transactionHash, minedHandler);\n        });\n\n        if (replaceable) {\n          let lastBlockNumber = replaceable.startBlock;\n          let scannedBlock = null;\n\n          const replaceHandler = blockNumber => __awaiter$6(this, void 0, void 0, function* () {\n            if (done) {\n              return;\n            } // Wait 1 second; this is only used in the case of a fault, so\n            // we will trade off a little bit of latency for more consistent\n            // results and fewer JSON-RPC calls\n\n\n            yield stall(1000);\n            this.getTransactionCount(replaceable.from).then(nonce => __awaiter$6(this, void 0, void 0, function* () {\n              if (done) {\n                return;\n              }\n\n              if (nonce <= replaceable.nonce) {\n                lastBlockNumber = blockNumber;\n              } else {\n                // First check if the transaction was mined\n                {\n                  const mined = yield this.getTransaction(transactionHash);\n\n                  if (mined && mined.blockNumber != null) {\n                    return;\n                  }\n                } // First time scanning. We start a little earlier for some\n                // wiggle room here to handle the eventually consistent nature\n                // of blockchain (e.g. the getTransactionCount was for a\n                // different block)\n\n                if (scannedBlock == null) {\n                  scannedBlock = lastBlockNumber - 3;\n\n                  if (scannedBlock < replaceable.startBlock) {\n                    scannedBlock = replaceable.startBlock;\n                  }\n                }\n\n                while (scannedBlock <= blockNumber) {\n                  if (done) {\n                    return;\n                  }\n\n                  const block = yield this.getBlockWithTransactions(scannedBlock);\n\n                  for (let ti = 0; ti < block.transactions.length; ti++) {\n                    const tx = block.transactions[ti]; // Successfully mined!\n\n                    if (tx.hash === transactionHash) {\n                      return;\n                    } // Matches our transaction from and nonce; its a replacement\n\n\n                    if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                      if (done) {\n                        return;\n                      } // Get the receipt of the replacement\n\n\n                      const receipt = yield this.waitForTransaction(tx.hash, confirmations); // Already resolved or rejected (prolly a timeout)\n\n                      if (alreadyDone()) {\n                        return;\n                      } // The reason we were replaced\n\n\n                      let reason = \"replaced\";\n\n                      if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                        reason = \"repriced\";\n                      } else if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                        reason = \"cancelled\";\n                      } // Explain why we were replaced\n\n\n                      reject(logger$g.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                        cancelled: reason === \"replaced\" || reason === \"cancelled\",\n                        reason,\n                        replacement: this._wrapTransaction(tx),\n                        hash: transactionHash,\n                        receipt\n                      }));\n                      return;\n                    }\n                  }\n\n                  scannedBlock++;\n                }\n              }\n\n              if (done) {\n                return;\n              }\n\n              this.once(\"block\", replaceHandler);\n            }), error => {\n              if (done) {\n                return;\n              }\n\n              this.once(\"block\", replaceHandler);\n            });\n          });\n\n          if (done) {\n            return;\n          }\n\n          this.once(\"block\", replaceHandler);\n          cancelFuncs.push(() => {\n            this.removeListener(\"block\", replaceHandler);\n          });\n        }\n\n        if (typeof timeout === \"number\" && timeout > 0) {\n          const timer = setTimeout(() => {\n            if (alreadyDone()) {\n              return;\n            }\n\n            reject(logger$g.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, {\n              timeout: timeout\n            }));\n          }, timeout);\n\n          if (timer.unref) {\n            timer.unref();\n          }\n\n          cancelFuncs.push(() => {\n            clearTimeout(timer);\n          });\n        }\n      });\n    });\n  }\n\n  getBlockNumber() {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      return this._getInternalBlockNumber(0);\n    });\n  }\n\n  getGasPrice() {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      const result = yield this.perform(\"getGasPrice\", {});\n\n      try {\n        return BigNumber.from(result);\n      } catch (error) {\n        return logger$g.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n          method: \"getGasPrice\",\n          result,\n          error\n        });\n      }\n    });\n  }\n\n  getBalance(addressOrName, blockTag) {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      const params = yield resolveProperties({\n        address: this._getAddress(addressOrName),\n        blockTag: this._getBlockTag(blockTag)\n      });\n      const result = yield this.perform(\"getBalance\", params);\n\n      try {\n        return BigNumber.from(result);\n      } catch (error) {\n        return logger$g.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n          method: \"getBalance\",\n          params,\n          result,\n          error\n        });\n      }\n    });\n  }\n\n  getTransactionCount(addressOrName, blockTag) {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      const params = yield resolveProperties({\n        address: this._getAddress(addressOrName),\n        blockTag: this._getBlockTag(blockTag)\n      });\n      const result = yield this.perform(\"getTransactionCount\", params);\n\n      try {\n        return BigNumber.from(result).toNumber();\n      } catch (error) {\n        return logger$g.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n          method: \"getTransactionCount\",\n          params,\n          result,\n          error\n        });\n      }\n    });\n  }\n\n  getCode(addressOrName, blockTag) {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      const params = yield resolveProperties({\n        address: this._getAddress(addressOrName),\n        blockTag: this._getBlockTag(blockTag)\n      });\n      const result = yield this.perform(\"getCode\", params);\n\n      try {\n        return hexlify(result);\n      } catch (error) {\n        return logger$g.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n          method: \"getCode\",\n          params,\n          result,\n          error\n        });\n      }\n    });\n  }\n\n  getStorageAt(addressOrName, position, blockTag) {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      const params = yield resolveProperties({\n        address: this._getAddress(addressOrName),\n        blockTag: this._getBlockTag(blockTag),\n        position: Promise.resolve(position).then(p => hexValue(p))\n      });\n      const result = yield this.perform(\"getStorageAt\", params);\n\n      try {\n        return hexlify(result);\n      } catch (error) {\n        return logger$g.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n          method: \"getStorageAt\",\n          params,\n          result,\n          error\n        });\n      }\n    });\n  } // This should be called by any subclass wrapping a TransactionResponse\n\n\n  _wrapTransaction(tx, hash, startBlock) {\n    if (hash != null && hexDataLength(hash) !== 32) {\n      throw new Error(\"invalid response - sendTransaction\");\n    }\n\n    const result = tx; // Check the hash we expect is the same as the hash the server reported\n\n    if (hash != null && tx.hash !== hash) {\n      logger$g.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, {\n        expectedHash: tx.hash,\n        returnedHash: hash\n      });\n    }\n\n    result.wait = (confirms, timeout) => __awaiter$6(this, void 0, void 0, function* () {\n      if (confirms == null) {\n        confirms = 1;\n      }\n\n      if (timeout == null) {\n        timeout = 0;\n      } // Get the details to detect replacement\n\n\n      let replacement = undefined;\n\n      if (confirms !== 0 && startBlock != null) {\n        replacement = {\n          data: tx.data,\n          from: tx.from,\n          nonce: tx.nonce,\n          to: tx.to,\n          value: tx.value,\n          startBlock\n        };\n      }\n\n      const receipt = yield this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n\n      if (receipt == null && confirms === 0) {\n        return null;\n      } // No longer pending, allow the polling loop to garbage collect this\n\n\n      this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n\n      if (receipt.status === 0) {\n        logger$g.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n          transactionHash: tx.hash,\n          transaction: tx,\n          receipt: receipt\n        });\n      }\n\n      return receipt;\n    });\n\n    return result;\n  }\n\n  sendTransaction(signedTransaction) {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      const hexTx = yield Promise.resolve(signedTransaction).then(t => hexlify(t));\n      const tx = this.formatter.transaction(signedTransaction);\n\n      if (tx.confirmations == null) {\n        tx.confirmations = 0;\n      }\n\n      const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n      try {\n        const hash = yield this.perform(\"sendTransaction\", {\n          signedTransaction: hexTx\n        });\n        return this._wrapTransaction(tx, hash, blockNumber);\n      } catch (error) {\n        error.transaction = tx;\n        error.transactionHash = tx.hash;\n        throw error;\n      }\n    });\n  }\n\n  _getTransactionRequest(transaction) {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      const values = yield transaction;\n      const tx = {};\n      [\"from\", \"to\"].forEach(key => {\n        if (values[key] == null) {\n          return;\n        }\n\n        tx[key] = Promise.resolve(values[key]).then(v => v ? this._getAddress(v) : null);\n      });\n      [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach(key => {\n        if (values[key] == null) {\n          return;\n        }\n\n        tx[key] = Promise.resolve(values[key]).then(v => v ? BigNumber.from(v) : null);\n      });\n      [\"type\"].forEach(key => {\n        if (values[key] == null) {\n          return;\n        }\n\n        tx[key] = Promise.resolve(values[key]).then(v => v != null ? v : null);\n      });\n\n      if (values.accessList) {\n        tx.accessList = this.formatter.accessList(values.accessList);\n      }\n\n      [\"data\"].forEach(key => {\n        if (values[key] == null) {\n          return;\n        }\n\n        tx[key] = Promise.resolve(values[key]).then(v => v ? hexlify(v) : null);\n      });\n      return this.formatter.transactionRequest(yield resolveProperties(tx));\n    });\n  }\n\n  _getFilter(filter) {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      filter = yield filter;\n      const result = {};\n\n      if (filter.address != null) {\n        result.address = this._getAddress(filter.address);\n      }\n\n      [\"blockHash\", \"topics\"].forEach(key => {\n        if (filter[key] == null) {\n          return;\n        }\n\n        result[key] = filter[key];\n      });\n      [\"fromBlock\", \"toBlock\"].forEach(key => {\n        if (filter[key] == null) {\n          return;\n        }\n\n        result[key] = this._getBlockTag(filter[key]);\n      });\n      return this.formatter.filter(yield resolveProperties(result));\n    });\n  }\n\n  call(transaction, blockTag) {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      const params = yield resolveProperties({\n        transaction: this._getTransactionRequest(transaction),\n        blockTag: this._getBlockTag(blockTag)\n      });\n      const result = yield this.perform(\"call\", params);\n\n      try {\n        return hexlify(result);\n      } catch (error) {\n        return logger$g.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n          method: \"call\",\n          params,\n          result,\n          error\n        });\n      }\n    });\n  }\n\n  estimateGas(transaction) {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      const params = yield resolveProperties({\n        transaction: this._getTransactionRequest(transaction)\n      });\n      const result = yield this.perform(\"estimateGas\", params);\n\n      try {\n        return BigNumber.from(result);\n      } catch (error) {\n        return logger$g.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n          method: \"estimateGas\",\n          params,\n          result,\n          error\n        });\n      }\n    });\n  }\n\n  _getAddress(addressOrName) {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      const address = yield this.resolveName(addressOrName);\n\n      if (address == null) {\n        logger$g.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: `resolveName(${JSON.stringify(addressOrName)})`\n        });\n      }\n\n      return address;\n    });\n  }\n\n  _getBlock(blockHashOrBlockTag, includeTransactions) {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      blockHashOrBlockTag = yield blockHashOrBlockTag; // If blockTag is a number (not \"latest\", etc), this is the block number\n\n      let blockNumber = -128;\n      const params = {\n        includeTransactions: !!includeTransactions\n      };\n\n      if (isHexString(blockHashOrBlockTag, 32)) {\n        params.blockHash = blockHashOrBlockTag;\n      } else {\n        try {\n          params.blockTag = this.formatter.blockTag(yield this._getBlockTag(blockHashOrBlockTag));\n\n          if (isHexString(params.blockTag)) {\n            blockNumber = parseInt(params.blockTag.substring(2), 16);\n          }\n        } catch (error) {\n          logger$g.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n        }\n      }\n\n      return poll(() => __awaiter$6(this, void 0, void 0, function* () {\n        const block = yield this.perform(\"getBlock\", params); // Block was not found\n\n        if (block == null) {\n          // For blockhashes, if we didn't say it existed, that blockhash may\n          // not exist. If we did see it though, perhaps from a log, we know\n          // it exists, and this node is just not caught up yet.\n          if (params.blockHash != null) {\n            if (this._emitted[\"b:\" + params.blockHash] == null) {\n              return null;\n            }\n          } // For block tags, if we are asking for a future block, we return null\n\n\n          if (params.blockTag != null) {\n            if (blockNumber > this._emitted.block) {\n              return null;\n            }\n          } // Retry on the next block\n\n\n          return undefined;\n        } // Add transactions\n\n\n        if (includeTransactions) {\n          let blockNumber = null;\n\n          for (let i = 0; i < block.transactions.length; i++) {\n            const tx = block.transactions[i];\n\n            if (tx.blockNumber == null) {\n              tx.confirmations = 0;\n            } else if (tx.confirmations == null) {\n              if (blockNumber == null) {\n                blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n              } // Add the confirmations using the fast block number (pessimistic)\n\n\n              let confirmations = blockNumber - tx.blockNumber + 1;\n\n              if (confirmations <= 0) {\n                confirmations = 1;\n              }\n\n              tx.confirmations = confirmations;\n            }\n          }\n\n          const blockWithTxs = this.formatter.blockWithTransactions(block);\n          blockWithTxs.transactions = blockWithTxs.transactions.map(tx => this._wrapTransaction(tx));\n          return blockWithTxs;\n        }\n\n        return this.formatter.block(block);\n      }), {\n        oncePoll: this\n      });\n    });\n  }\n\n  getBlock(blockHashOrBlockTag) {\n    return this._getBlock(blockHashOrBlockTag, false);\n  }\n\n  getBlockWithTransactions(blockHashOrBlockTag) {\n    return this._getBlock(blockHashOrBlockTag, true);\n  }\n\n  getTransaction(transactionHash) {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      transactionHash = yield transactionHash;\n      const params = {\n        transactionHash: this.formatter.hash(transactionHash, true)\n      };\n      return poll(() => __awaiter$6(this, void 0, void 0, function* () {\n        const result = yield this.perform(\"getTransaction\", params);\n\n        if (result == null) {\n          if (this._emitted[\"t:\" + transactionHash] == null) {\n            return null;\n          }\n\n          return undefined;\n        }\n\n        const tx = this.formatter.transactionResponse(result);\n\n        if (tx.blockNumber == null) {\n          tx.confirmations = 0;\n        } else if (tx.confirmations == null) {\n          const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval); // Add the confirmations using the fast block number (pessimistic)\n\n          let confirmations = blockNumber - tx.blockNumber + 1;\n\n          if (confirmations <= 0) {\n            confirmations = 1;\n          }\n\n          tx.confirmations = confirmations;\n        }\n\n        return this._wrapTransaction(tx);\n      }), {\n        oncePoll: this\n      });\n    });\n  }\n\n  getTransactionReceipt(transactionHash) {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      transactionHash = yield transactionHash;\n      const params = {\n        transactionHash: this.formatter.hash(transactionHash, true)\n      };\n      return poll(() => __awaiter$6(this, void 0, void 0, function* () {\n        const result = yield this.perform(\"getTransactionReceipt\", params);\n\n        if (result == null) {\n          if (this._emitted[\"t:\" + transactionHash] == null) {\n            return null;\n          }\n\n          return undefined;\n        } // \"geth-etc\" returns receipts before they are ready\n\n\n        if (result.blockHash == null) {\n          return undefined;\n        }\n\n        const receipt = this.formatter.receipt(result);\n\n        if (receipt.blockNumber == null) {\n          receipt.confirmations = 0;\n        } else if (receipt.confirmations == null) {\n          const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval); // Add the confirmations using the fast block number (pessimistic)\n\n          let confirmations = blockNumber - receipt.blockNumber + 1;\n\n          if (confirmations <= 0) {\n            confirmations = 1;\n          }\n\n          receipt.confirmations = confirmations;\n        }\n\n        return receipt;\n      }), {\n        oncePoll: this\n      });\n    });\n  }\n\n  getLogs(filter) {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      const params = yield resolveProperties({\n        filter: this._getFilter(filter)\n      });\n      const logs = yield this.perform(\"getLogs\", params);\n      logs.forEach(log => {\n        if (log.removed == null) {\n          log.removed = false;\n        }\n      });\n      return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n    });\n  }\n\n  getEtherPrice() {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      return this.perform(\"getEtherPrice\", {});\n    });\n  }\n\n  _getBlockTag(blockTag) {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      blockTag = yield blockTag;\n\n      if (typeof blockTag === \"number\" && blockTag < 0) {\n        if (blockTag % 1) {\n          logger$g.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n        }\n\n        let blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n        blockNumber += blockTag;\n\n        if (blockNumber < 0) {\n          blockNumber = 0;\n        }\n\n        return this.formatter.blockTag(blockNumber);\n      }\n\n      return this.formatter.blockTag(blockTag);\n    });\n  }\n\n  getResolver(name) {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      try {\n        const address = yield this._getResolver(name);\n\n        if (address == null) {\n          return null;\n        }\n\n        return new Resolver(this, address, name);\n      } catch (error) {\n        if (error.code === Logger.errors.CALL_EXCEPTION) {\n          return null;\n        }\n\n        return null;\n      }\n    });\n  }\n\n  _getResolver(name) {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      // Get the resolver from the blockchain\n      const network = yield this.getNetwork(); // No ENS...\n\n      if (!network.ensAddress) {\n        logger$g.throwError(\"network does not support ENS\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"ENS\",\n          network: network.name\n        });\n      } // keccak256(\"resolver(bytes32)\")\n\n\n      const transaction = {\n        to: network.ensAddress,\n        data: \"0x0178b8bf\" + namehash(name).substring(2)\n      };\n\n      try {\n        return this.formatter.callAddress(yield this.call(transaction));\n      } catch (error) {\n        if (error.code === Logger.errors.CALL_EXCEPTION) {\n          return null;\n        }\n\n        throw error;\n      }\n    });\n  }\n\n  resolveName(name) {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      name = yield name; // If it is already an address, nothing to resolve\n\n      try {\n        return Promise.resolve(this.formatter.address(name));\n      } catch (error) {\n        // If is is a hexstring, the address is bad (See #694)\n        if (isHexString(name)) {\n          throw error;\n        }\n      }\n\n      if (typeof name !== \"string\") {\n        logger$g.throwArgumentError(\"invalid ENS name\", \"name\", name);\n      } // Get the addr from the resovler\n\n\n      const resolver = yield this.getResolver(name);\n\n      if (!resolver) {\n        return null;\n      }\n\n      return yield resolver.getAddress();\n    });\n  }\n\n  lookupAddress(address) {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      address = yield address;\n      address = this.formatter.address(address);\n      const reverseName = address.substring(2).toLowerCase() + \".addr.reverse\";\n      const resolverAddress = yield this._getResolver(reverseName);\n\n      if (!resolverAddress) {\n        return null;\n      } // keccak(\"name(bytes32)\")\n\n\n      let bytes = arrayify(yield this.call({\n        to: resolverAddress,\n        data: \"0x691f3431\" + namehash(reverseName).substring(2)\n      })); // Strip off the dynamic string pointer (0x20)\n\n      if (bytes.length < 32 || !BigNumber.from(bytes.slice(0, 32)).eq(32)) {\n        return null;\n      }\n\n      bytes = bytes.slice(32); // Not a length-prefixed string\n\n      if (bytes.length < 32) {\n        return null;\n      } // Get the length of the string (from the length-prefix)\n\n\n      const length = BigNumber.from(bytes.slice(0, 32)).toNumber();\n      bytes = bytes.slice(32); // Length longer than available data\n\n      if (length > bytes.length) {\n        return null;\n      }\n\n      const name = toUtf8String(bytes.slice(0, length)); // Make sure the reverse record matches the foward record\n\n      const addr = yield this.resolveName(name);\n\n      if (addr != address) {\n        return null;\n      }\n\n      return name;\n    });\n  }\n\n  perform(method, params) {\n    return logger$g.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, {\n      operation: method\n    });\n  }\n\n  _startEvent(event) {\n    this.polling = this._events.filter(e => e.pollable()).length > 0;\n  }\n\n  _stopEvent(event) {\n    this.polling = this._events.filter(e => e.pollable()).length > 0;\n  }\n\n  _addEventListener(eventName, listener, once) {\n    const event = new Event(getEventTag(eventName), listener, once);\n\n    this._events.push(event);\n\n    this._startEvent(event);\n\n    return this;\n  }\n\n  on(eventName, listener) {\n    return this._addEventListener(eventName, listener, false);\n  }\n\n  once(eventName, listener) {\n    return this._addEventListener(eventName, listener, true);\n  }\n\n  emit(eventName, ...args) {\n    let result = false;\n    let stopped = [];\n    let eventTag = getEventTag(eventName);\n    this._events = this._events.filter(event => {\n      if (event.tag !== eventTag) {\n        return true;\n      }\n\n      setTimeout(() => {\n        event.listener.apply(this, args);\n      }, 0);\n      result = true;\n\n      if (event.once) {\n        stopped.push(event);\n        return false;\n      }\n\n      return true;\n    });\n    stopped.forEach(event => {\n      this._stopEvent(event);\n    });\n    return result;\n  }\n\n  listenerCount(eventName) {\n    if (!eventName) {\n      return this._events.length;\n    }\n\n    let eventTag = getEventTag(eventName);\n    return this._events.filter(event => {\n      return event.tag === eventTag;\n    }).length;\n  }\n\n  listeners(eventName) {\n    if (eventName == null) {\n      return this._events.map(event => event.listener);\n    }\n\n    let eventTag = getEventTag(eventName);\n    return this._events.filter(event => event.tag === eventTag).map(event => event.listener);\n  }\n\n  off(eventName, listener) {\n    if (listener == null) {\n      return this.removeAllListeners(eventName);\n    }\n\n    const stopped = [];\n    let found = false;\n    let eventTag = getEventTag(eventName);\n    this._events = this._events.filter(event => {\n      if (event.tag !== eventTag || event.listener != listener) {\n        return true;\n      }\n\n      if (found) {\n        return true;\n      }\n\n      found = true;\n      stopped.push(event);\n      return false;\n    });\n    stopped.forEach(event => {\n      this._stopEvent(event);\n    });\n    return this;\n  }\n\n  removeAllListeners(eventName) {\n    let stopped = [];\n\n    if (eventName == null) {\n      stopped = this._events;\n      this._events = [];\n    } else {\n      const eventTag = getEventTag(eventName);\n      this._events = this._events.filter(event => {\n        if (event.tag !== eventTag) {\n          return true;\n        }\n\n        stopped.push(event);\n        return false;\n      });\n    }\n\n    stopped.forEach(event => {\n      this._stopEvent(event);\n    });\n    return this;\n  }\n\n}\n\nvar __awaiter$7 = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$h = new Logger(version$f);\nconst errorGas = [\"call\", \"estimateGas\"];\n\nfunction checkError(method, error, params) {\n  // Undo the \"convenience\" some nodes are attempting to prevent backwards\n  // incompatibility; maybe for v6 consider forwarding reverts as errors\n  if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n    const e = error.error;\n\n    if (e && e.message.match(\"reverted\") && isHexString(e.data)) {\n      return e.data;\n    }\n\n    logger$h.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n      error,\n      data: \"0x\"\n    });\n  }\n\n  let message = error.message;\n\n  if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof error.error.message === \"string\") {\n    message = error.error.message;\n  } else if (typeof error.body === \"string\") {\n    message = error.body;\n  } else if (typeof error.responseText === \"string\") {\n    message = error.responseText;\n  }\n\n  message = (message || \"\").toLowerCase();\n  const transaction = params.transaction || params.signedTransaction; // \"insufficient funds for gas * price + value + cost(data)\"\n\n  if (message.match(/insufficient funds|base fee exceeds gas limit/)) {\n    logger$h.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n      error,\n      method,\n      transaction\n    });\n  } // \"nonce too low\"\n\n\n  if (message.match(/nonce too low/)) {\n    logger$h.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n      error,\n      method,\n      transaction\n    });\n  } // \"replacement transaction underpriced\"\n\n\n  if (message.match(/replacement transaction underpriced/)) {\n    logger$h.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n      error,\n      method,\n      transaction\n    });\n  } // \"replacement transaction underpriced\"\n\n\n  if (message.match(/only replay-protected/)) {\n    logger$h.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n      error,\n      method,\n      transaction\n    });\n  }\n\n  if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) {\n    logger$h.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n      error,\n      method,\n      transaction\n    });\n  }\n\n  throw error;\n}\n\nfunction timer(timeout) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, timeout);\n  });\n}\n\nfunction getResult(payload) {\n  if (payload.error) {\n    // @TODO: not any\n    const error = new Error(payload.error.message);\n    error.code = payload.error.code;\n    error.data = payload.error.data;\n    throw error;\n  }\n\n  return payload.result;\n}\n\nfunction getLowerCase(value) {\n  if (value) {\n    return value.toLowerCase();\n  }\n\n  return value;\n}\n\nconst _constructorGuard$1 = {};\n\nclass JsonRpcSigner extends Signer {\n  constructor(constructorGuard, provider, addressOrIndex) {\n    logger$h.checkNew(new.target, JsonRpcSigner);\n    super();\n\n    if (constructorGuard !== _constructorGuard$1) {\n      throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n    }\n\n    defineReadOnly(this, \"provider\", provider);\n\n    if (addressOrIndex == null) {\n      addressOrIndex = 0;\n    }\n\n    if (typeof addressOrIndex === \"string\") {\n      defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n      defineReadOnly(this, \"_index\", null);\n    } else if (typeof addressOrIndex === \"number\") {\n      defineReadOnly(this, \"_index\", addressOrIndex);\n      defineReadOnly(this, \"_address\", null);\n    } else {\n      logger$h.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n    }\n  }\n\n  connect(provider) {\n    return logger$h.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n      operation: \"connect\"\n    });\n  }\n\n  connectUnchecked() {\n    return new UncheckedJsonRpcSigner(_constructorGuard$1, this.provider, this._address || this._index);\n  }\n\n  getAddress() {\n    if (this._address) {\n      return Promise.resolve(this._address);\n    }\n\n    return this.provider.send(\"eth_accounts\", []).then(accounts => {\n      if (accounts.length <= this._index) {\n        logger$h.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"getAddress\"\n        });\n      }\n\n      return this.provider.formatter.address(accounts[this._index]);\n    });\n  }\n\n  sendUncheckedTransaction(transaction) {\n    transaction = shallowCopy(transaction);\n    const fromAddress = this.getAddress().then(address => {\n      if (address) {\n        address = address.toLowerCase();\n      }\n\n      return address;\n    }); // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n    // wishes to use this, it is easy to specify explicitly, otherwise\n    // we look it up for them.\n\n    if (transaction.gasLimit == null) {\n      const estimate = shallowCopy(transaction);\n      estimate.from = fromAddress;\n      transaction.gasLimit = this.provider.estimateGas(estimate);\n    }\n\n    if (transaction.to != null) {\n      transaction.to = Promise.resolve(transaction.to).then(to => __awaiter$7(this, void 0, void 0, function* () {\n        if (to == null) {\n          return null;\n        }\n\n        const address = yield this.provider.resolveName(to);\n\n        if (address == null) {\n          logger$h.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n        }\n\n        return address;\n      }));\n    }\n\n    return resolveProperties({\n      tx: resolveProperties(transaction),\n      sender: fromAddress\n    }).then(({\n      tx,\n      sender\n    }) => {\n      if (tx.from != null) {\n        if (tx.from.toLowerCase() !== sender) {\n          logger$h.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n        }\n      } else {\n        tx.from = sender;\n      }\n\n      const hexTx = this.provider.constructor.hexlifyTransaction(tx, {\n        from: true\n      });\n      return this.provider.send(\"eth_sendTransaction\", [hexTx]).then(hash => {\n        return hash;\n      }, error => {\n        return checkError(\"sendTransaction\", error, hexTx);\n      });\n    });\n  }\n\n  signTransaction(transaction) {\n    return logger$h.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n      operation: \"signTransaction\"\n    });\n  }\n\n  sendTransaction(transaction) {\n    return __awaiter$7(this, void 0, void 0, function* () {\n      // This cannot be mined any earlier than any recent block\n      const blockNumber = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval); // Send the transaction\n\n      const hash = yield this.sendUncheckedTransaction(transaction);\n\n      try {\n        // Unfortunately, JSON-RPC only provides and opaque transaction hash\n        // for a response, and we need the actual transaction, so we poll\n        // for it; it should show up very quickly\n        return yield poll(() => __awaiter$7(this, void 0, void 0, function* () {\n          const tx = yield this.provider.getTransaction(hash);\n\n          if (tx === null) {\n            return undefined;\n          }\n\n          return this.provider._wrapTransaction(tx, hash, blockNumber);\n        }), {\n          oncePoll: this.provider\n        });\n      } catch (error) {\n        error.transactionHash = hash;\n        throw error;\n      }\n    });\n  }\n\n  signMessage(message) {\n    return __awaiter$7(this, void 0, void 0, function* () {\n      const data = typeof message === \"string\" ? toUtf8Bytes(message) : message;\n      const address = yield this.getAddress(); // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n\n      return yield this.provider.send(\"eth_sign\", [address.toLowerCase(), hexlify(data)]);\n    });\n  }\n\n  _signTypedData(domain, types, value) {\n    return __awaiter$7(this, void 0, void 0, function* () {\n      // Populate any ENS names (in-place)\n      const populated = yield TypedDataEncoder.resolveNames(domain, types, value, name => {\n        return this.provider.resolveName(name);\n      });\n      const address = yield this.getAddress();\n      return yield this.provider.send(\"eth_signTypedData_v4\", [address.toLowerCase(), JSON.stringify(TypedDataEncoder.getPayload(populated.domain, types, populated.value))]);\n    });\n  }\n\n  unlock(password) {\n    return __awaiter$7(this, void 0, void 0, function* () {\n      const provider = this.provider;\n      const address = yield this.getAddress();\n      return provider.send(\"personal_unlockAccount\", [address.toLowerCase(), password, null]);\n    });\n  }\n\n}\n\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n  sendTransaction(transaction) {\n    return this.sendUncheckedTransaction(transaction).then(hash => {\n      return {\n        hash: hash,\n        nonce: null,\n        gasLimit: null,\n        gasPrice: null,\n        data: null,\n        value: null,\n        chainId: null,\n        confirmations: 0,\n        from: null,\n        wait: confirmations => {\n          return this.provider.waitForTransaction(hash, confirmations);\n        }\n      };\n    });\n  }\n\n}\n\nconst allowedTransactionKeys$1 = {\n  chainId: true,\n  data: true,\n  gasLimit: true,\n  gasPrice: true,\n  nonce: true,\n  to: true,\n  value: true,\n  type: true,\n  accessList: true,\n  maxFeePerGas: true,\n  maxPriorityFeePerGas: true\n};\n\nclass JsonRpcProvider extends BaseProvider {\n  constructor(url, network) {\n    logger$h.checkNew(new.target, JsonRpcProvider);\n    let networkOrReady = network; // The network is unknown, query the JSON-RPC for it\n\n    if (networkOrReady == null) {\n      networkOrReady = new Promise((resolve, reject) => {\n        setTimeout(() => {\n          this.detectNetwork().then(network => {\n            resolve(network);\n          }, error => {\n            reject(error);\n          });\n        }, 0);\n      });\n    }\n\n    super(networkOrReady); // Default URL\n\n    if (!url) {\n      url = getStatic(this.constructor, \"defaultUrl\")();\n    }\n\n    if (typeof url === \"string\") {\n      defineReadOnly(this, \"connection\", Object.freeze({\n        url: url\n      }));\n    } else {\n      defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n    }\n\n    this._nextId = 42;\n  }\n\n  get _cache() {\n    if (this._eventLoopCache == null) {\n      this._eventLoopCache = {};\n    }\n\n    return this._eventLoopCache;\n  }\n\n  static defaultUrl() {\n    return \"http:/\\/localhost:8545\";\n  }\n\n  detectNetwork() {\n    if (!this._cache[\"detectNetwork\"]) {\n      this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork(); // Clear this cache at the beginning of the next event loop\n\n      setTimeout(() => {\n        this._cache[\"detectNetwork\"] = null;\n      }, 0);\n    }\n\n    return this._cache[\"detectNetwork\"];\n  }\n\n  _uncachedDetectNetwork() {\n    return __awaiter$7(this, void 0, void 0, function* () {\n      yield timer(0);\n      let chainId = null;\n\n      try {\n        chainId = yield this.send(\"eth_chainId\", []);\n      } catch (error) {\n        try {\n          chainId = yield this.send(\"net_version\", []);\n        } catch (error) {}\n      }\n\n      if (chainId != null) {\n        const getNetwork = getStatic(this.constructor, \"getNetwork\");\n\n        try {\n          return getNetwork(BigNumber.from(chainId).toNumber());\n        } catch (error) {\n          return logger$h.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n            chainId: chainId,\n            event: \"invalidNetwork\",\n            serverError: error\n          });\n        }\n      }\n\n      return logger$h.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n        event: \"noNetwork\"\n      });\n    });\n  }\n\n  getSigner(addressOrIndex) {\n    return new JsonRpcSigner(_constructorGuard$1, this, addressOrIndex);\n  }\n\n  getUncheckedSigner(addressOrIndex) {\n    return this.getSigner(addressOrIndex).connectUnchecked();\n  }\n\n  listAccounts() {\n    return this.send(\"eth_accounts\", []).then(accounts => {\n      return accounts.map(a => this.formatter.address(a));\n    });\n  }\n\n  send(method, params) {\n    const request = {\n      method: method,\n      params: params,\n      id: this._nextId++,\n      jsonrpc: \"2.0\"\n    };\n    this.emit(\"debug\", {\n      action: \"request\",\n      request: deepCopy(request),\n      provider: this\n    }); // We can expand this in the future to any call, but for now these\n    // are the biggest wins and do not require any serializing parameters.\n\n    const cache = [\"eth_chainId\", \"eth_blockNumber\"].indexOf(method) >= 0;\n\n    if (cache && this._cache[method]) {\n      return this._cache[method];\n    }\n\n    const result = fetchJson(this.connection, JSON.stringify(request), getResult).then(result => {\n      this.emit(\"debug\", {\n        action: \"response\",\n        request: request,\n        response: result,\n        provider: this\n      });\n      return result;\n    }, error => {\n      this.emit(\"debug\", {\n        action: \"response\",\n        error: error,\n        request: request,\n        provider: this\n      });\n      throw error;\n    }); // Cache the fetch, but clear it on the next event loop\n\n    if (cache) {\n      this._cache[method] = result;\n      setTimeout(() => {\n        this._cache[method] = null;\n      }, 0);\n    }\n\n    return result;\n  }\n\n  prepareRequest(method, params) {\n    switch (method) {\n      case \"getBlockNumber\":\n        return [\"eth_blockNumber\", []];\n\n      case \"getGasPrice\":\n        return [\"eth_gasPrice\", []];\n\n      case \"getBalance\":\n        return [\"eth_getBalance\", [getLowerCase(params.address), params.blockTag]];\n\n      case \"getTransactionCount\":\n        return [\"eth_getTransactionCount\", [getLowerCase(params.address), params.blockTag]];\n\n      case \"getCode\":\n        return [\"eth_getCode\", [getLowerCase(params.address), params.blockTag]];\n\n      case \"getStorageAt\":\n        return [\"eth_getStorageAt\", [getLowerCase(params.address), params.position, params.blockTag]];\n\n      case \"sendTransaction\":\n        return [\"eth_sendRawTransaction\", [params.signedTransaction]];\n\n      case \"getBlock\":\n        if (params.blockTag) {\n          return [\"eth_getBlockByNumber\", [params.blockTag, !!params.includeTransactions]];\n        } else if (params.blockHash) {\n          return [\"eth_getBlockByHash\", [params.blockHash, !!params.includeTransactions]];\n        }\n\n        return null;\n\n      case \"getTransaction\":\n        return [\"eth_getTransactionByHash\", [params.transactionHash]];\n\n      case \"getTransactionReceipt\":\n        return [\"eth_getTransactionReceipt\", [params.transactionHash]];\n\n      case \"call\":\n        {\n          const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n          return [\"eth_call\", [hexlifyTransaction(params.transaction, {\n            from: true\n          }), params.blockTag]];\n        }\n\n      case \"estimateGas\":\n        {\n          const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n          return [\"eth_estimateGas\", [hexlifyTransaction(params.transaction, {\n            from: true\n          })]];\n        }\n\n      case \"getLogs\":\n        if (params.filter && params.filter.address != null) {\n          params.filter.address = getLowerCase(params.filter.address);\n        }\n\n        return [\"eth_getLogs\", [params.filter]];\n    }\n\n    return null;\n  }\n\n  perform(method, params) {\n    return __awaiter$7(this, void 0, void 0, function* () {\n      // Legacy networks do not like the type field being passed along (which\n      // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n      if (method === \"call\" || method === \"estimateGas\") {\n        const tx = params.transaction;\n\n        if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n          // If there are no EIP-1559 properties, it might be non-EIP-a559\n          if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n            const feeData = yield this.getFeeData();\n\n            if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n              // Network doesn't know about EIP-1559 (and hence type)\n              params = shallowCopy(params);\n              params.transaction = shallowCopy(tx);\n              delete params.transaction.type;\n            }\n          }\n        }\n      }\n\n      const args = this.prepareRequest(method, params);\n\n      if (args == null) {\n        logger$h.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, {\n          operation: method\n        });\n      }\n\n      try {\n        return yield this.send(args[0], args[1]);\n      } catch (error) {\n        return checkError(method, error, params);\n      }\n    });\n  }\n\n  _startEvent(event) {\n    if (event.tag === \"pending\") {\n      this._startPending();\n    }\n\n    super._startEvent(event);\n  }\n\n  _startPending() {\n    if (this._pendingFilter != null) {\n      return;\n    }\n\n    const self = this;\n    const pendingFilter = this.send(\"eth_newPendingTransactionFilter\", []);\n    this._pendingFilter = pendingFilter;\n    pendingFilter.then(function (filterId) {\n      function poll() {\n        self.send(\"eth_getFilterChanges\", [filterId]).then(function (hashes) {\n          if (self._pendingFilter != pendingFilter) {\n            return null;\n          }\n\n          let seq = Promise.resolve();\n          hashes.forEach(function (hash) {\n            // @TODO: This should be garbage collected at some point... How? When?\n            self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n            seq = seq.then(function () {\n              return self.getTransaction(hash).then(function (tx) {\n                self.emit(\"pending\", tx);\n                return null;\n              });\n            });\n          });\n          return seq.then(function () {\n            return timer(1000);\n          });\n        }).then(function () {\n          if (self._pendingFilter != pendingFilter) {\n            self.send(\"eth_uninstallFilter\", [filterId]);\n            return;\n          }\n\n          setTimeout(function () {\n            poll();\n          }, 0);\n          return null;\n        }).catch(error => {});\n      }\n\n      poll();\n      return filterId;\n    }).catch(error => {});\n  }\n\n  _stopEvent(event) {\n    if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n      this._pendingFilter = null;\n    }\n\n    super._stopEvent(event);\n  } // Convert an ethers.js transaction into a JSON-RPC transaction\n  //  - gasLimit => gas\n  //  - All values hexlified\n  //  - All numeric values zero-striped\n  //  - All addresses are lowercased\n  // NOTE: This allows a TransactionRequest, but all values should be resolved\n  //       before this is called\n  // @TODO: This will likely be removed in future versions and prepareRequest\n  //        will be the preferred method for this.\n\n\n  static hexlifyTransaction(transaction, allowExtra) {\n    // Check only allowed properties are given\n    const allowed = shallowCopy(allowedTransactionKeys$1);\n\n    if (allowExtra) {\n      for (const key in allowExtra) {\n        if (allowExtra[key]) {\n          allowed[key] = true;\n        }\n      }\n    }\n\n    checkProperties(transaction, allowed);\n    const result = {}; // Some nodes (INFURA ropsten; INFURA mainnet is fine) do not like leading zeros.\n\n    [\"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function (key) {\n      if (transaction[key] == null) {\n        return;\n      }\n\n      const value = hexValue(transaction[key]);\n\n      if (key === \"gasLimit\") {\n        key = \"gas\";\n      }\n\n      result[key] = value;\n    });\n    [\"from\", \"to\", \"data\"].forEach(function (key) {\n      if (transaction[key] == null) {\n        return;\n      }\n\n      result[key] = hexlify(transaction[key]);\n    });\n\n    if (transaction.accessList) {\n      result[\"accessList\"] = accessListify(transaction.accessList);\n    }\n\n    return result;\n  }\n\n}\n\nconst byoaContractAddress = `0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512`;\nconst providerNetwork = `http://localhost:8545`;\nconst jrpcProvider = new JsonRpcProvider('https://eth-mainnet.alchemyapi.io/v2/Uo717K-DDAxlSM5gXM-zgv678k0aMZH5', 'mainnet');\nwindow.byoa = {\n  context: {\n    jrpcProvider: jrpcProvider,\n    dataPipeFn: data => {\n      return data;\n    },\n    account: {\n      address: null\n    }\n  }\n};\nconst useStyles = makeStyles({\n  root: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    minWidth: '100vw',\n    minHeight: '100vh',\n    background: 'rgba(50,0,0,0.25)',\n    pointerEvents: 'none'\n  },\n  speedDial: {\n    position: 'fixed',\n    bottom: 20,\n    right: 20,\n    zIndex: 1000000000\n  },\n  byoaButton: {}\n});\nconst providerOptions = {\n  walletconnect: {\n    display: {\n      name: \"Mobile\"\n    },\n    package: WalletConnectProvider,\n    options: {\n      infuraId: \"6430aa46e9354b91bea44e464af71f7a\"\n    }\n  }\n};\nconst web3Modal = new Web3Modal({\n  network: providerNetwork,\n  cacheProvider: true,\n  disableInjectedProvider: false,\n  providerOptions\n});\n\nconst ByoaSDK = props => {\n  const classes = useStyles();\n  const [translateDial, setTranslateDial] = useState({\n    x: 0,\n    y: 0\n  });\n  const [dialDirection, setDialDirection] = useState(\"up\");\n  const [openDial, setOpenDial] = useState(false);\n  const [provider, setProvider] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const [accountAddress, setAccountAddress] = useState(null);\n  const [installedApps, setInstalledApps] = useState([]);\n\n  const connectWallet = async () => {\n    try {\n      let p = provider;\n\n      if (p === null) {\n        p = await web3Modal.connect();\n\n        if (p === null) {\n          throw new Error('Unable to connect provider to modal');\n        }\n\n        p.on('accountsChanged', e => {\n          console.log(e);\n          disconnectWallet();\n        });\n        p.on(\"chainChanged\", chainId => {\n          console.log(\"chain \" + chainId);\n        });\n        setProvider(p);\n      }\n\n      let w3 = web3;\n\n      if (w3 === null) {\n        w3 = new Web3(p);\n\n        if (w3 === null) {\n          throw new Error('Unable to connect web3');\n        }\n\n        setWeb3(w3);\n      }\n\n      const accounts = await p.request({\n        method: 'eth_accounts'\n      });\n\n      if (accounts.length > 0) {\n        setAccountAddress(accounts[0]);\n        setTimeout(async () => {\n          refreshMyApps(accounts[0]);\n        }, 2000);\n      }\n    } catch (error) {\n      console.log(error);\n      alert('Unable to connect wallet. Please try again.');\n    }\n  };\n\n  const disconnectWallet = async () => {\n    await web3Modal.clearCachedProvider();\n    setProvider(null);\n    setAccountAddress(null);\n  };\n\n  const getTokenMetadata = async uri => {\n    return new Promise(resolve => {\n      resolve({\n        meta: uri,\n        image: \"ipfs://QmYoSTehmdFUnSYCFrYdvSrEtNGy9U5gWEfroCTMGecHKw/0.png\",\n        byoa: {\n          browser: {\n            uri: \"http://localhost:3000/scripts/example1.js\",\n            target: \"host\"\n          }\n        }\n      });\n    });\n  };\n\n  const transformIPFSToPinned = ipfsURI => {\n    return `${ipfsURI}`;\n  };\n\n  const refreshMyApps = async addressHelper => {\n    let w3 = new Web3(providerNetwork);\n\n    try {\n      let contract = new w3.eth.Contract(abi$1.abi, byoaContractAddress);\n      let myTokenIds = await contract.methods.walletOfOwner(accountAddress ? accountAddress : addressHelper).call();\n      console.log(myTokenIds);\n      let appLUT = {};\n      let allInstalls = [];\n\n      for (var i = 0; i < myTokenIds.length; i++) {\n        let tid = parseInt(myTokenIds[i]);\n        let appIdForToken = await contract.methods.getAppIdByTokenId(tid).call();\n        let directTokenURI = await contract.methods.tokenURI(tid).call();\n        let tokenMeta = await getTokenMetadata(directTokenURI);\n\n        if (appLUT[appIdForToken] !== null) {\n          let appDetails = await contract.methods.getAppDetailsById(parseInt(appIdForToken)).call();\n          appLUT[appIdForToken] = {\n            id: appIdForToken,\n            name: appDetails[0],\n            description: appDetails[1],\n            tokenURI: appDetails[2],\n            owner: appDetails[3],\n            price: parseInt(appDetails[4]),\n            address: byoaContractAddress,\n            version: 'beta v0.1'\n          };\n        }\n\n        let ia = {\n          id: tid,\n          tokenURI: directTokenURI,\n          app: appLUT[appIdForToken],\n          imageURI: tokenMeta.image,\n          byoaDetails: {\n            uri: tokenMeta.byoa.browser.uri,\n            target: tokenMeta.byoa.browser.target\n          }\n        };\n        allInstalls.push(ia);\n      }\n\n      console.log(allInstalls);\n      setInstalledApps(allInstalls);\n    } catch (error) {\n      console.log(`Error fetching apps: ${error}`);\n    }\n  };\n\n  return createElement(Box, {\n    className: classes.root\n  }, createElement(Container, {\n    className: classes.speedDial\n  }, createElement(DragMove, {\n    onDragMove: e => {\n      setTranslateDial({\n        x: translateDial.x + e.movementX,\n        y: translateDial.y + e.movementY\n      });\n\n      if (e.clientY < 200) {\n        if (dialDirection !== \"down\") setDialDirection(\"down\");\n      }\n\n      if (e.clientY > 200) {\n        if (dialDirection !== \"up\") setDialDirection(\"up\");\n      }\n    }\n  }, createElement(SpeedDial, {\n    style: {\n      transform: `translateX(${translateDial.x}px) translateY(${translateDial.y}px)`\n    },\n    ariaLabel: \"BYOA Speed Dial\",\n    hidden: false,\n    icon: createElement(Typography, {\n      className: classes.byoaButton\n    }, \"RUN\"),\n    open: openDial,\n    onOpen: () => {\n      setOpenDial(true);\n    },\n    onClose: () => {\n      setOpenDial(false);\n    },\n    onClick: () => {},\n    direction: dialDirection\n  }, createElement(SpeedDialAction, {\n    key: 'sda-connect-wallet',\n    icon: createElement(AccountBalanceWalletIcon, null),\n    tooltipTitle: 'Connect Wallet',\n    onClick: () => {\n      connectWallet();\n    }\n  }), installedApps.map((installedApp, i) => createElement(SpeedDialAction, {\n    key: `sd-action-${installedApp.id}-${i}`,\n    icon: createElement(PetsIcon, null),\n    tooltipTitle: `${installedApp.app.name} (#${installedApp.id})`,\n    onClick: () => {\n      let scriptID = `byoa-${installedApp.id}-${installedApp.app.id}`;\n      const existingApp = document.getElementById(scriptID);\n\n      if (!existingApp) {\n        const script = document.createElement('script');\n        script.src = transformIPFSToPinned(installedApp.byoaDetails.uri);\n        script.id = scriptID;\n\n        if (installedApp.byoaDetails.target == \"host\") {\n          document.body.appendChild(script);\n\n          script.onload = () => {\n            console.log('loaded script');\n          };\n        }\n      }\n    }\n  }))))));\n};\n\nexport { ByoaSDK };","map":{"version":3,"sources":["/Users/pagreczner/src/mallows/react-libraries/byoa-sdk/dist/index.modern.js"],"names":["makeStyles","Box","Container","Typography","SpeedDial","SpeedDialAction","React__default","useState","createElement","AccountBalanceWalletIcon","WalletConnectProvider","PetsIcon","Web3","Web3Modal","DragMove","props","onPointerDown","onPointerUp","onPointerMove","onDragMove","children","style","className","isDragging","setIsDragging","handlePointerDown","e","handlePointerUp","handlePointerMove","defaultProps","_format","contractName","sourceName","abi","inputs","stateMutability","type","anonymous","indexed","internalType","name","outputs","bytecode","deployedBytecode","linkReferences","deployedLinkReferences","abi$1","commonjsGlobal","globalThis","window","global","self","createCommonjsModule","fn","module","exports","getCjsExportFromNamespace","n","_nodeResolve_empty","_nodeResolve_empty$1","__proto__","require$$0","bn","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","negative","words","length","red","_init","wordSize","Buffer","num","Array","isArray","max","left","right","cmp","min","init","_initNumber","_initArray","toString","replace","start","_parseHex","_parseBase","toArray","Math","ceil","i","j","w","off","strip","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","r","parseLength","parseBase","str","end","mul","len","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","b","q","andln","iushrn","clz32","_countBits","t","_zeroBits","bitLength","hi","toBitArray","bit","wbit","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","a","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","add","sub","smallMulTo","lo","k","ncarry","rword","maxJ","comb10MulTo","o","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","fftm","FFTM","mulp","mulTo","x","y","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","bhiBits","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","ireduce","rlen","split","imulK","undefined","_strip","input","K256","call","output","outLen","prev","next","P224","P192","P25519","_prime","prime","imod","mod3","one","nOne","lpow","z","inv","windowSize","wnd","current","currentLen","mont","Mont","rinv","minv","u","version","_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","error","_logLevel","_globalLogger","_checkNormalize","missing","forEach","form","normalize","push","join","String","fromCharCode","message","_normalizeError","LogLevel","ErrorCode","Logger","Object","defineProperty","enumerable","value","writable","_log","logLevel","args","level","toLowerCase","throwArgumentError","console","log","apply","levels","DEBUG","INFO","warn","WARNING","makeError","code","params","errors","UNKNOWN_ERROR","messageDetails","keys","key","JSON","stringify","reason","throwError","INVALID_ARGUMENT","argument","condition","assertArgument","checkNormalize","UNSUPPORTED_OPERATION","operation","checkSafeUint53","NUMERIC_FAULT","fault","checkArgumentCount","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","checkNew","target","kind","MISSING_NEW","checkAbstract","globalLogger","setCensorship","censorship","permanent","setLogLevel","from","version$1","logger","isHexable","toHexString","addSlice","array","slice","arguments","Uint8Array","isBytesLike","isHexString","isBytes","v","arrayify","options","result","unshift","parseInt","allowMissingPrefix","substring","hex","hexPad","concat","items","objects","map","item","reduce","accum","offset","object","set","stripZeros","zeroPad","match","HexCharacters","hexlify","floor","hexDataLength","data","hexDataSlice","endOffset","hexConcat","hexValue","trimmed","hexStripZeros","hexZeroPad","splitSignature","signature","_vs","recoveryParam","bytes","vs","version$2","logger$1","_constructorGuard","MAX_SAFE","_warnedToStringRadix","BigNumber","constructorGuard","new","_hex","_isBigNumber","freeze","toBigNumber","toBN","other","throwFault","isNegative","shr","toBigInt","BigInt","toHex","anyValue","isBigNumber","_base36To16","version$3","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","rejected","done","then","logger$2","defineReadOnly","getStatic","getPrototypeOf","resolveProperties","promises","results","all","checkProperties","properties","shallowCopy","opaque","bigint","boolean","_isFrozen","isFrozen","_deepCopy","deepCopy","Description","sha3","root","NODE_JS","JS_SHA3_NO_NODE_JS","process","versions","node","COMMON_JS","JS_SHA3_NO_COMMON_JS","HEX_CHARS","SHAKE_PADDING","KECCAK_PADDING","PADDING","SHIFT","RC","BITS","SHAKE_BITS","OUTPUT_TYPES","createOutputMethod","outputType","Keccak","update","createShakeOutputMethod","outputBits","createMethod","method","create","createShakeMethod","algorithms","methods","methodNames","algorithm","methodName","blocks","reset","block","blockCount","byteCount","outputBlocks","extraBytes","notString","ArrayBuffer","lastByteIndex","f","finalize","arrayBuffer","buffer","Uint32Array","digest","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","b10","b11","b12","b13","b14","b15","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49","keccak256","keccak_256","version$4","logger$3","arrayifyInteger","unarrayifyInteger","_encode","payload","child","encode","_decodeChildren","childOffset","decoded","_decode","consumed","BUFFER_OVERRUN","lengthLength","decode","version$5","logger$4","getChecksumAddress","address","chars","expanded","hashed","toUpperCase","MAX_SAFE_INTEGER","log10","LN10","ibanLookup","safeDigits","ibanChecksum","checksum","getAddress","getContractAddress","transaction","nonce","AddressZero","Zero","HashZero","version$6","logger$5","UnicodeNormalizationForm","Utf8ErrorReason","errorFunc","badCodepoint","ignoreFunc","BAD_PREFIX","UNEXPECTED_CONTINUE","OVERRUN","replaceFunc","OVERLONG","Utf8ErrorFuncs","ignore","getUtf8CodePoints","onError","extraLength","overlongMask","nextChar","MISSING_CONTINUE","OUT_OF_RANGE","UTF16_SURROGATE","toUtf8Bytes","pair","_toUtf8String","codePoints","codePoint","toUtf8String","toUtf8CodePoints","bytes2","createTable","func","comps","createRangeTable","matchMap","ranges","range","d","indexOf","Table_A_1_ranges","Table_B_1_flags","Table_B_2_ranges","Table_B_2_lut_abs","Table_B_2_lut_rel","Table_B_2_complex","Table_C_ranges","flatten","values","_nameprepTableA1","codepoint","_nameprepTableB2","codes","complex","_nameprepTableC","nameprep","codesTableB2","NFKC","id","text","version$7","logger$6","Zeros","fill","Partition","RegExp","namehash","partition","label","__awaiter$1","logger$7","NegativeOne","Zero$1","One","MaxUint256","hexPadRight","padOffset","hexTrue","hexFalse","domainFieldTypes","chainId","verifyingContract","salt","domainFieldNames","checkString","domainChecks","getBaseEncoder","signed","boundsUpper","boundsLower","encodeType","fields","TypedDataEncoder","types","links","parents","subtypes","uniqueNames","field","baseType","encoder","primaryTypes","filter","checkCircular","found","subtype","primaryType","st","sort","_types","getEncoder","_encoderCache","_getEncoder","subEncoder","encodedType","encodeData","hashStruct","hash","_visit","callback","visit","getPrimaryType","hashDomain","domain","domainFields","EIP712Domain","resolveNames","resolveName","ensCache","getPayload","domainValues","domainTypes","typesWithDomain","version$8","__awaiter$2","logger$8","ForkEvent","isForkEvent","_isForkEvent","Provider","getFeeData","gasPrice","getBlock","getGasPrice","catch","maxFeePerGas","maxPriorityFeePerGas","baseFeePerGas","addListener","eventName","listener","on","removeListener","isProvider","_isProvider","version$9","__awaiter$3","logger$9","allowedTransactionKeys","forwardErrors","INSUFFICIENT_FUNDS","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","Signer","getBalance","blockTag","_checkProvider","provider","getTransactionCount","estimateGas","tx","checkTransaction","sendTransaction","populateTransaction","signedTx","signTransaction","getChainId","network","getNetwork","to","hasEip1559","feeData","gasLimit","UNPREDICTABLE_GAS_LIMIT","isSigner","_isSigner","minimalisticAssert","equal","assertEqual","inherits_browser","configurable","inherits_1","isSurrogatePair","enc","toArray_1","toHex$1","zero2","toHex_1","htonl","htonl_1","toHex32","zero8","toHex32_1","zero2_1","zero8_1","join32","join32_1","split32","split32_1","rotr32","rotr32_1","rotl32","rotl32_1","sum32","sum32_1","sum32_3","sum32_3_1","sum32_4","sum32_4_1","sum32_5","sum32_5_1","sum64","buf","pos","ah","al","bh","bl","sum64_1","sum64_hi","sum64_hi_1","sum64_lo","sum64_lo_1","sum64_4_hi","ch","cl","dh","dl","sum64_4_hi_1","sum64_4_lo","sum64_4_lo_1","sum64_5_hi","eh","el","sum64_5_hi_1","sum64_5_lo","sum64_5_lo_1","rotr64_hi","rotr64_hi_1","rotr64_lo","rotr64_lo_1","shr64_hi","shr64_hi_1","shr64_lo","shr64_lo_1","utils","BlockHash","pending","pendingTotal","blockSize","outSize","hmacStrength","padLength","_delta8","_delta32","BlockHash_1","_update","_pad","_digest","pad","common","rotr32$1","ft_1","ch32","p32","maj32","ft_1_1","ch32_1","maj32_1","p32_1","s0_256","s0_256_1","s1_256","s1_256_1","g0_256","g0_256_1","g1_256","g1_256_1","common$1","rotl32$1","sum32$1","sum32_5$1","ft_1$1","BlockHash$1","sha1_K","SHA1","W","_1","sum32$2","sum32_4$1","sum32_5$2","ch32$1","maj32$1","s0_256$1","s1_256$1","g0_256$1","g1_256$1","BlockHash$2","sha256_K","SHA256","_256","T1","T2","SHA224","_224","rotr64_hi$1","rotr64_lo$1","shr64_hi$1","shr64_lo$1","sum64$1","sum64_hi$1","sum64_lo$1","sum64_4_hi$1","sum64_4_lo$1","sum64_5_hi$1","sum64_5_lo$1","BlockHash$3","sha512_K","SHA512","_512","_prepareBlock","c0_hi","g1_512_hi","c0_lo","g1_512_lo","c1_hi","c1_lo","c2_hi","g0_512_hi","c2_lo","g0_512_lo","c3_hi","c3_lo","fh","fl","gh","gl","hh","hl","s1_512_hi","s1_512_lo","ch64_hi","ch64_lo","c4_hi","c4_lo","T1_hi","T1_lo","s0_512_hi","s0_512_lo","maj64_hi","maj64_lo","T2_hi","T2_lo","xh","xl","yh","yl","zh","zl","SHA384","_384","sha1","sha224","sha256","sha384","sha512","sha","rotl32$2","sum32$3","sum32_3$1","sum32_4$2","BlockHash$4","RIPEMD160","ripemd160","E","Ah","Bh","Ch","Dh","Eh","T","K","rh","Kh","sh","ripemd","Hmac","Hash","inner","outer","hmac","hash_1","createCommonjsModule$1","basedir","path","require","commonjsRequire","minimalisticAssert$1","assert$1","utils_1","arr","utils_1$1","getNAF","naf","getJSF","k1","k2","jsf","d1","d2","m8","m14","m24","u1","u2","cachedProperty","obj","computer","parseBytes","intFromLE","assert$1$1","BaseCurve","conf","zero","two","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","_bitLength","adjustCount","redN","_maxwellTrick","point","validate","_fixedNafMul","precomputed","doubles","_getDoubles","I","repr","nafW","jpoint","mixedAdd","points","toP","_wnafMul","nafPoints","_getNAFPoints","dblp","_wnafMulAdd","defW","coeffs","jacobianResult","wndWidth","comb","toJ","ja","jb","BasePoint","curve","decodePoint","pointFromX","encodeCompressed","compact","getX","getY","precompute","power","beta","_getBeta","_hasDoubles","dbl","inherits_browser$1","assert$2","ShortCurve","tinv","zeroA","threeA","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","short_1","lambda","betas","_getEndoRoots","lambdas","basis","vec","_getEndoBasis","ntinv","l1","l2","aprxSqrt","y1","y2","prevR","len1","len2","_endoSplit","v1","v2","p1","p2","q1","q2","inf","ax","rhs","_endoWnafMulAdd","npoints","ncoeffs","Point","isRed","fromJSON","pre","endoMul","parse","obj2point","isInfinity","nx","ny","ys1","dyinv","mulAdd","jmulAdd","_precompute","negate","JPoint","zOne","zinv","zinv2","ay","pz2","z2","s1","s2","h2","h3","nz","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t1","t2","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","yyyy8","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","eqXToP","zs","xc","curve_1","short","edwards","curves_1","curves","PresetCurve","defineCurve","get","crash","HmacDRBG","predResist","minEntropy","_reseed","reseedInterval","V","entropy","entropyEnc","nonceEnc","pers","persEnc","hmacDrbg","seed","_hmac","kmac","reseed","addEnc","generate","temp","assert$3","KeyPair","ec","priv","pub","_importPrivate","privEnc","_importPublic","pubEnc","fromPublic","fromPrivate","getPublic","getPrivate","derive","sign","verify","assert$4","Signature","_importDER","Position","place","getLength","initial","octetLen","rmPadding","slen","constructLength","octets","LN2","toDER","backHalf","rand","assert$5","EC","hasOwnProperty","nh","keyPair","keyFromPrivate","keyFromPublic","genKeyPair","drbg","ns2","_truncateToN","truncOnly","bkey","ns1","iter","kp","kpX","canonical","signature$1","sinv","recoverPubKey","isYOdd","isSecondKey","rInv","getKeyRecoveryParam","Q","Qprime","elliptic_1","elliptic","eddsa","EC$1","version$a","logger$a","_curve","getCurve","SigningKey","privateKey","_addPoint","p0","publicKey","signDigest","digestBytes","computeSharedSecret","otherKey","otherKeyPair","computePublicKey","isSigningKey","_isSigningKey","recoverPublicKey","sig","rs","compressed","signingKey","version$b","logger$b","TransactionTypes","handleAddress","handleNumber","computeAddress","recoverAddress","formatNumber","accessSetify","addr","storageKeys","storageKey","accessListify","localeCompare","formatAccessList","_serializeEip1559","accessList","_serializeEip2930","_parseEipSignature","serialize","recid","_parseEip1559","_parseEip2930","_parse","rawTransaction","raw","transactionType","BaseX","alphabet","charAt","_alphabetMap","source","digits","_leader","TypeError","byte","reverse","Base32","Base58","version$c","logger$c","sha256$1","version$d","logger$d","isRenetworkable","renetwork","ethDefaultProvider","providers","providerList","InfuraProvider","infura","EtherscanProvider","etherscan","AlchemyProvider","alchemy","PocketProvider","skip","CloudflareProvider","FallbackProvider","quorum","etcDefaultProvider","url","JsonRpcProvider","homestead","ensAddress","_defaultProvider","ropsten","classicMordor","networks","unspecified","mainnet","morden","testnet","rinkeby","kovan","goerli","classic","classicMorden","classicTestnet","classicKotti","xdai","matic","maticmum","bnb","bnbt","standard","defaultProvider","encode$1","textData","btoa","version$e","__awaiter$4","getUrl","href","request","headers","body","cache","credentials","redirect","referrer","response","fetch","statusCode","status","statusMessage","statusText","__awaiter$5","logger$e","staller","duration","setTimeout","bodyify","trim","_fetchData","connection","processFunc","attemptLimit","throttleLimit","throttleCallback","throttleSlotInterval","allow304","timeout","allowGzip","user","password","allowInsecureAuthentication","authorization","flatHeaders","header","runningTimeout","timer","promise","TIMEOUT","requestBody","requestMethod","cancel","clearTimeout","runningFetch","attempt","tryAgain","stall","retryAfter","random","SERVER_ERROR","serverError","throttleRetry","race","fetchJson","json","processJsonFunc","updated","hasContentType","poll","ceiling","interval","retryLimit","check","oncePoll","once","onceBlock","ALPHABET","ALPHABET_MAP","polymodStep","prefixChk","prefix","chk","encode$2","LIMIT","__decode","lowered","uppered","lastIndexOf","wordChars","decodeUnsafe","decode$1","convert","inBits","outBits","maxV","toWordsUnsafe","toWords","fromWordsUnsafe","fromWords","bech32","version$f","logger$f","Formatter","formats","getDefaultFormats","bind","bigNumber","strictData","allowNull","blockHash","blockNumber","transactionIndex","confirmations","uint256","creates","transactionRequest","receiptLog","transactionHash","topics","arrayOf","logIndex","receipt","contractAddress","gasUsed","logsBloom","logs","cumulativeGasUsed","effectiveGasPrice","parentHash","timestamp","difficulty","miner","extraData","transactions","blockWithTransactions","transactionResponse","fromBlock","toBlock","filterLog","removed","allowFalsish","strict","callAddress","_block","format","author","gas","networkId","byzantium","checkKey","checkValue","nullValue","replaceValue","__awaiter$6","logger$g","checkTopic","topic","serializeTopics","pop","unique","sorted","deserializeTopics","getEventTag","getTime","Date","PollableEvents","Event","tag","event","pollable","coinInfos","symbol","p2pkh","p2sh","ilk","bytes32ify","base58Encode","Resolver","formatter","_fetchBytes","selector","parameters","CALL_EXCEPTION","_getAddress","coinType","hexBytes","coinInfo","getContentHash","ipfs","swarm","getText","keyBytes","defaultFormatter","nextPollId","BaseProvider","_events","_emitted","getFormatter","anyNetwork","detectNetwork","_networkPromise","_ready","knownNetwork","emit","_maxInternalBlockNumber","_lastBlockNumber","_pollingInterval","_fastQueryDate","_network","ready","NETWORK_ERROR","_getInternalBlockNumber","maxAge","_internalBlockNumber","internalBlockNumber","respTime","reqTime","checkInternalBlockNumber","perform","networkError","_setFastBlockNumber","pollId","runners","pollingInterval","previousBlockNumber","eventBlockNumber","runner","getTransactionReceipt","getLogs","resetEventsBlock","polling","currentNetwork","_fastBlockNumber","_fastBlockNumberPromise","detectedNetwork","_poller","setInterval","_bootstrapPoll","clearInterval","_getFastBlockNumber","now","getBlockNumber","waitForTransaction","_waitForTransaction","replaceable","cancelFuncs","alreadyDone","minedHandler","lastBlockNumber","startBlock","scannedBlock","replaceHandler","mined","getTransaction","getBlockWithTransactions","ti","TRANSACTION_REPLACED","cancelled","replacement","_wrapTransaction","unref","addressOrName","_getBlockTag","getCode","getStorageAt","position","expectedHash","returnedHash","wait","confirms","signedTransaction","hexTx","_getTransactionRequest","_getFilter","_getBlock","blockHashOrBlockTag","includeTransactions","blockWithTxs","getEtherPrice","getResolver","_getResolver","resolver","lookupAddress","reverseName","resolverAddress","NOT_IMPLEMENTED","_startEvent","_stopEvent","_addEventListener","stopped","eventTag","listenerCount","listeners","removeAllListeners","__awaiter$7","logger$h","errorGas","checkError","responseText","getResult","getLowerCase","_constructorGuard$1","JsonRpcSigner","addressOrIndex","connect","connectUnchecked","UncheckedJsonRpcSigner","_address","_index","send","accounts","sendUncheckedTransaction","fromAddress","estimate","sender","hexlifyTransaction","signMessage","_signTypedData","populated","unlock","allowedTransactionKeys$1","networkOrReady","_nextId","_cache","_eventLoopCache","defaultUrl","_uncachedDetectNetwork","getSigner","getUncheckedSigner","listAccounts","jsonrpc","action","prepareRequest","_startPending","_pendingFilter","pendingFilter","filterId","hashes","seq","allowExtra","allowed","byoaContractAddress","providerNetwork","jrpcProvider","byoa","context","dataPipeFn","account","useStyles","top","minWidth","minHeight","background","pointerEvents","speedDial","bottom","zIndex","byoaButton","providerOptions","walletconnect","display","package","infuraId","web3Modal","cacheProvider","disableInjectedProvider","ByoaSDK","classes","translateDial","setTranslateDial","dialDirection","setDialDirection","openDial","setOpenDial","setProvider","web3","setWeb3","accountAddress","setAccountAddress","installedApps","setInstalledApps","connectWallet","disconnectWallet","refreshMyApps","alert","clearCachedProvider","getTokenMetadata","uri","meta","image","browser","transformIPFSToPinned","ipfsURI","addressHelper","contract","eth","Contract","myTokenIds","walletOfOwner","appLUT","allInstalls","tid","appIdForToken","getAppIdByTokenId","directTokenURI","tokenURI","tokenMeta","appDetails","getAppDetailsById","description","owner","price","ia","app","imageURI","byoaDetails","movementX","movementY","clientY","ariaLabel","hidden","icon","open","onOpen","onClose","onClick","direction","tooltipTitle","installedApp","scriptID","existingApp","document","getElementById","script","src","appendChild","onload"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,mBAAvD;AACA,SAASC,SAAT,EAAoBC,eAApB,QAA2C,kBAA3C;AACA,OAAOC,cAAP,IAAyBC,QAAzB,EAAmCC,aAAnC,QAAwD,OAAxD;AACA,OAAOC,wBAAP,MAAqC,yCAArC;AACA,OAAOC,qBAAP,MAAkC,8BAAlC;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,WAAtB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM;AACJC,IAAAA,aADI;AAEJC,IAAAA,WAFI;AAGJC,IAAAA,aAHI;AAIJC,IAAAA,UAJI;AAKJC,IAAAA,QALI;AAMJC,IAAAA,KANI;AAOJC,IAAAA;AAPI,MAQFP,KARJ;AASA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMkB,iBAAiB,GAAGC,CAAC,IAAI;AAC7BF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAR,IAAAA,aAAa,CAACU,CAAD,CAAb;AACD,GAHD;;AAKA,QAAMC,eAAe,GAAGD,CAAC,IAAI;AAC3BF,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAP,IAAAA,WAAW,CAACS,CAAD,CAAX;AACD,GAHD;;AAKA,QAAME,iBAAiB,GAAGF,CAAC,IAAI;AAC7B,QAAIH,UAAJ,EAAgBJ,UAAU,CAACO,CAAD,CAAV;AAChBR,IAAAA,aAAa,CAACQ,CAAD,CAAb;AACD,GAHD;;AAKA,SAAOpB,cAAc,CAACE,aAAf,CAA6B,KAA7B,EAAoC;AACzCQ,IAAAA,aAAa,EAAES,iBAD0B;AAEzCR,IAAAA,WAAW,EAAEU,eAF4B;AAGzCT,IAAAA,aAAa,EAAEU,iBAH0B;AAIzCP,IAAAA,KAAK,EAAEA,KAJkC;AAKzCC,IAAAA,SAAS,EAAEA;AAL8B,GAApC,EAMJF,QANI,CAAP;AAOD;;AACDN,QAAQ,CAACe,YAAT,GAAwB;AACtBb,EAAAA,aAAa,EAAE,MAAM,CAAE,CADD;AAEtBC,EAAAA,WAAW,EAAE,MAAM,CAAE,CAFC;AAGtBC,EAAAA,aAAa,EAAE,MAAM,CAAE;AAHD,CAAxB;AAMA,IAAIY,OAAO,GAAG,mBAAd;AACA,IAAIC,YAAY,GAAG,MAAnB;AACA,IAAIC,UAAU,GAAG,oBAAjB;AACA,IAAIC,GAAG,GAAG,CACT;AACCC,EAAAA,MAAM,EAAE,EADT;AAGCC,EAAAA,eAAe,EAAE,YAHlB;AAICC,EAAAA,IAAI,EAAE;AAJP,CADS,EAOT;AACCC,EAAAA,SAAS,EAAE,KADZ;AAECH,EAAAA,MAAM,EAAE,CACP;AACCI,IAAAA,OAAO,EAAE,IADV;AAECC,IAAAA,YAAY,EAAE,SAFf;AAGCC,IAAAA,IAAI,EAAE,OAHP;AAICJ,IAAAA,IAAI,EAAE;AAJP,GADO,EAOP;AACCE,IAAAA,OAAO,EAAE,IADV;AAECC,IAAAA,YAAY,EAAE,SAFf;AAGCC,IAAAA,IAAI,EAAE,UAHP;AAICJ,IAAAA,IAAI,EAAE;AAJP,GAPO,EAaP;AACCE,IAAAA,OAAO,EAAE,IADV;AAECC,IAAAA,YAAY,EAAE,SAFf;AAGCC,IAAAA,IAAI,EAAE,SAHP;AAICJ,IAAAA,IAAI,EAAE;AAJP,GAbO,CAFT;AAsBCI,EAAAA,IAAI,EAAE,UAtBP;AAuBCJ,EAAAA,IAAI,EAAE;AAvBP,CAPS,EAgCT;AACCC,EAAAA,SAAS,EAAE,KADZ;AAECH,EAAAA,MAAM,EAAE,CACP;AACCI,IAAAA,OAAO,EAAE,IADV;AAECC,IAAAA,YAAY,EAAE,SAFf;AAGCC,IAAAA,IAAI,EAAE,OAHP;AAICJ,IAAAA,IAAI,EAAE;AAJP,GADO,EAOP;AACCE,IAAAA,OAAO,EAAE,IADV;AAECC,IAAAA,YAAY,EAAE,SAFf;AAGCC,IAAAA,IAAI,EAAE,UAHP;AAICJ,IAAAA,IAAI,EAAE;AAJP,GAPO,EAaP;AACCE,IAAAA,OAAO,EAAE,KADV;AAECC,IAAAA,YAAY,EAAE,MAFf;AAGCC,IAAAA,IAAI,EAAE,UAHP;AAICJ,IAAAA,IAAI,EAAE;AAJP,GAbO,CAFT;AAsBCI,EAAAA,IAAI,EAAE,gBAtBP;AAuBCJ,EAAAA,IAAI,EAAE;AAvBP,CAhCS,EAyDT;AACCC,EAAAA,SAAS,EAAE,KADZ;AAECH,EAAAA,MAAM,EAAE,CACP;AACCI,IAAAA,OAAO,EAAE,IADV;AAECC,IAAAA,YAAY,EAAE,SAFf;AAGCC,IAAAA,IAAI,EAAE,MAHP;AAICJ,IAAAA,IAAI,EAAE;AAJP,GADO,EAOP;AACCE,IAAAA,OAAO,EAAE,IADV;AAECC,IAAAA,YAAY,EAAE,SAFf;AAGCC,IAAAA,IAAI,EAAE,mBAHP;AAICJ,IAAAA,IAAI,EAAE;AAJP,GAPO,EAaP;AACCE,IAAAA,OAAO,EAAE,IADV;AAECC,IAAAA,YAAY,EAAE,SAFf;AAGCC,IAAAA,IAAI,EAAE,cAHP;AAICJ,IAAAA,IAAI,EAAE;AAJP,GAbO,CAFT;AAsBCI,EAAAA,IAAI,EAAE,kBAtBP;AAuBCJ,EAAAA,IAAI,EAAE;AAvBP,CAzDS,EAkFT;AACCC,EAAAA,SAAS,EAAE,KADZ;AAECH,EAAAA,MAAM,EAAE,CACP;AACCI,IAAAA,OAAO,EAAE,IADV;AAECC,IAAAA,YAAY,EAAE,SAFf;AAGCC,IAAAA,IAAI,EAAE,MAHP;AAICJ,IAAAA,IAAI,EAAE;AAJP,GADO,EAOP;AACCE,IAAAA,OAAO,EAAE,IADV;AAECC,IAAAA,YAAY,EAAE,SAFf;AAGCC,IAAAA,IAAI,EAAE,SAHP;AAICJ,IAAAA,IAAI,EAAE;AAJP,GAPO,EAaP;AACCE,IAAAA,OAAO,EAAE,IADV;AAECC,IAAAA,YAAY,EAAE,SAFf;AAGCC,IAAAA,IAAI,EAAE,QAHP;AAICJ,IAAAA,IAAI,EAAE;AAJP,GAbO,CAFT;AAsBCI,EAAAA,IAAI,EAAE,aAtBP;AAuBCJ,EAAAA,IAAI,EAAE;AAvBP,CAlFS,EA2GT;AACCC,EAAAA,SAAS,EAAE,KADZ;AAECH,EAAAA,MAAM,EAAE,CACP;AACCI,IAAAA,OAAO,EAAE,IADV;AAECC,IAAAA,YAAY,EAAE,SAFf;AAGCC,IAAAA,IAAI,EAAE,MAHP;AAICJ,IAAAA,IAAI,EAAE;AAJP,GADO,EAOP;AACCE,IAAAA,OAAO,EAAE,IADV;AAECC,IAAAA,YAAY,EAAE,SAFf;AAGCC,IAAAA,IAAI,EAAE,SAHP;AAICJ,IAAAA,IAAI,EAAE;AAJP,GAPO,EAaP;AACCE,IAAAA,OAAO,EAAE,IADV;AAECC,IAAAA,YAAY,EAAE,SAFf;AAGCC,IAAAA,IAAI,EAAE,QAHP;AAICJ,IAAAA,IAAI,EAAE;AAJP,GAbO,CAFT;AAsBCI,EAAAA,IAAI,EAAE,aAtBP;AAuBCJ,EAAAA,IAAI,EAAE;AAvBP,CA3GS,EAoIT;AACCC,EAAAA,SAAS,EAAE,KADZ;AAECH,EAAAA,MAAM,EAAE,CACP;AACCI,IAAAA,OAAO,EAAE,IADV;AAECC,IAAAA,YAAY,EAAE,SAFf;AAGCC,IAAAA,IAAI,EAAE,MAHP;AAICJ,IAAAA,IAAI,EAAE;AAJP,GADO,EAOP;AACCE,IAAAA,OAAO,EAAE,IADV;AAECC,IAAAA,YAAY,EAAE,SAFf;AAGCC,IAAAA,IAAI,EAAE,IAHP;AAICJ,IAAAA,IAAI,EAAE;AAJP,GAPO,EAaP;AACCE,IAAAA,OAAO,EAAE,IADV;AAECC,IAAAA,YAAY,EAAE,SAFf;AAGCC,IAAAA,IAAI,EAAE,SAHP;AAICJ,IAAAA,IAAI,EAAE;AAJP,GAbO,CAFT;AAsBCI,EAAAA,IAAI,EAAE,UAtBP;AAuBCJ,EAAAA,IAAI,EAAE;AAvBP,CApIS,EA6JT;AACCF,EAAAA,MAAM,EAAE,EADT;AAGCM,EAAAA,IAAI,EAAE,oBAHP;AAICC,EAAAA,OAAO,EAAE,CACR;AACCF,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,EAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADQ,CAJV;AAWCD,EAAAA,eAAe,EAAE,MAXlB;AAYCC,EAAAA,IAAI,EAAE;AAZP,CA7JS,EA2KT;AACCF,EAAAA,MAAM,EAAE,EADT;AAGCM,EAAAA,IAAI,EAAE,gBAHP;AAICC,EAAAA,OAAO,EAAE,CACR;AACCF,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,EAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADQ,CAJV;AAWCD,EAAAA,eAAe,EAAE,MAXlB;AAYCC,EAAAA,IAAI,EAAE;AAZP,CA3KS,EAyLT;AACCF,EAAAA,MAAM,EAAE,CACP;AACCK,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,IAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADO,EAMP;AACCG,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,SAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GANO,CADT;AAaCI,EAAAA,IAAI,EAAE,SAbP;AAcCC,EAAAA,OAAO,EAAE,EAdV;AAgBCN,EAAAA,eAAe,EAAE,YAhBlB;AAiBCC,EAAAA,IAAI,EAAE;AAjBP,CAzLS,EA4MT;AACCF,EAAAA,MAAM,EAAE,CACP;AACCK,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,OAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADO,CADT;AAQCI,EAAAA,IAAI,EAAE,WARP;AASCC,EAAAA,OAAO,EAAE,CACR;AACCF,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,EAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADQ,CATV;AAgBCD,EAAAA,eAAe,EAAE,MAhBlB;AAiBCC,EAAAA,IAAI,EAAE;AAjBP,CA5MS,EA+NT;AACCF,EAAAA,MAAM,EAAE,CACP;AACCK,IAAAA,YAAY,EAAE,QADf;AAECC,IAAAA,IAAI,EAAE,MAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADO,EAMP;AACCG,IAAAA,YAAY,EAAE,QADf;AAECC,IAAAA,IAAI,EAAE,aAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GANO,EAWP;AACCG,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,OAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GAXO,EAgBP;AACCG,IAAAA,YAAY,EAAE,QADf;AAECC,IAAAA,IAAI,EAAE,WAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GAhBO,CADT;AAuBCI,EAAAA,IAAI,EAAE,WAvBP;AAwBCC,EAAAA,OAAO,EAAE,CACR;AACCF,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,EAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADQ,CAxBV;AA+BCD,EAAAA,eAAe,EAAE,YA/BlB;AAgCCC,EAAAA,IAAI,EAAE;AAhCP,CA/NS,EAiQT;AACCF,EAAAA,MAAM,EAAE,CACP;AACCK,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,OAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADO,CADT;AAQCI,EAAAA,IAAI,EAAE,mBARP;AASCC,EAAAA,OAAO,EAAE,CACR;AACCF,IAAAA,YAAY,EAAE,QADf;AAECC,IAAAA,IAAI,EAAE,MAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADQ,EAMR;AACCG,IAAAA,YAAY,EAAE,QADf;AAECC,IAAAA,IAAI,EAAE,aAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GANQ,EAWR;AACCG,IAAAA,YAAY,EAAE,QADf;AAECC,IAAAA,IAAI,EAAE,WAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GAXQ,EAgBR;AACCG,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,OAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GAhBQ,EAqBR;AACCG,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,OAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GArBQ,CATV;AAoCCD,EAAAA,eAAe,EAAE,MApClB;AAqCCC,EAAAA,IAAI,EAAE;AArCP,CAjQS,EAwST;AACCF,EAAAA,MAAM,EAAE,CACP;AACCK,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,UAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADO,CADT;AAQCI,EAAAA,IAAI,EAAE,mBARP;AASCC,EAAAA,OAAO,EAAE,CACR;AACCF,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,EAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADQ,CATV;AAgBCD,EAAAA,eAAe,EAAE,MAhBlB;AAiBCC,EAAAA,IAAI,EAAE;AAjBP,CAxSS,EA2TT;AACCF,EAAAA,MAAM,EAAE,EADT;AAGCM,EAAAA,IAAI,EAAE,WAHP;AAICC,EAAAA,OAAO,EAAE,CACR;AACCF,IAAAA,YAAY,EAAE,WADf;AAECC,IAAAA,IAAI,EAAE,EAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADQ,CAJV;AAWCD,EAAAA,eAAe,EAAE,MAXlB;AAYCC,EAAAA,IAAI,EAAE;AAZP,CA3TS,EAyUT;AACCF,EAAAA,MAAM,EAAE,CACP;AACCK,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,SAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADO,CADT;AAQCI,EAAAA,IAAI,EAAE,aARP;AASCC,EAAAA,OAAO,EAAE,CACR;AACCF,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,EAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADQ,CATV;AAgBCD,EAAAA,eAAe,EAAE,MAhBlB;AAiBCC,EAAAA,IAAI,EAAE;AAjBP,CAzUS,EA4VT;AACCF,EAAAA,MAAM,EAAE,CACP;AACCK,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,MAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADO,CADT;AAQCI,EAAAA,IAAI,EAAE,cARP;AASCC,EAAAA,OAAO,EAAE,CACR;AACCF,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,EAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADQ,CATV;AAgBCD,EAAAA,eAAe,EAAE,MAhBlB;AAiBCC,EAAAA,IAAI,EAAE;AAjBP,CA5VS,EA+WT;AACCF,EAAAA,MAAM,EAAE,CACP;AACCK,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,MAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADO,EAMP;AACCG,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,SAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GANO,CADT;AAaCI,EAAAA,IAAI,EAAE,WAbP;AAcCC,EAAAA,OAAO,EAAE,EAdV;AAgBCN,EAAAA,eAAe,EAAE,YAhBlB;AAiBCC,EAAAA,IAAI,EAAE;AAjBP,CA/WS,EAkYT;AACCF,EAAAA,MAAM,EAAE,CACP;AACCK,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,MAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADO,EAMP;AACCG,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,SAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GANO,CADT;AAaCI,EAAAA,IAAI,EAAE,SAbP;AAcCC,EAAAA,OAAO,EAAE,CACR;AACCF,IAAAA,YAAY,EAAE,MADf;AAECC,IAAAA,IAAI,EAAE,EAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADQ,CAdV;AAqBCD,EAAAA,eAAe,EAAE,MArBlB;AAsBCC,EAAAA,IAAI,EAAE;AAtBP,CAlYS,EA0ZT;AACCF,EAAAA,MAAM,EAAE,CACP;AACCK,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,OAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADO,EAMP;AACCG,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,UAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GANO,CADT;AAaCI,EAAAA,IAAI,EAAE,kBAbP;AAcCC,EAAAA,OAAO,EAAE,CACR;AACCF,IAAAA,YAAY,EAAE,MADf;AAECC,IAAAA,IAAI,EAAE,EAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADQ,CAdV;AAqBCD,EAAAA,eAAe,EAAE,MArBlB;AAsBCC,EAAAA,IAAI,EAAE;AAtBP,CA1ZS,EAkbT;AACCF,EAAAA,MAAM,EAAE,CACP;AACCK,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,QAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADO,CADT;AAQCI,EAAAA,IAAI,EAAE,MARP;AASCC,EAAAA,OAAO,EAAE,EATV;AAWCN,EAAAA,eAAe,EAAE,SAXlB;AAYCC,EAAAA,IAAI,EAAE;AAZP,CAlbS,EAgcT;AACCF,EAAAA,MAAM,EAAE,EADT;AAGCM,EAAAA,IAAI,EAAE,MAHP;AAICC,EAAAA,OAAO,EAAE,CACR;AACCF,IAAAA,YAAY,EAAE,QADf;AAECC,IAAAA,IAAI,EAAE,EAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADQ,CAJV;AAWCD,EAAAA,eAAe,EAAE,MAXlB;AAYCC,EAAAA,IAAI,EAAE;AAZP,CAhcS,EA8cT;AACCF,EAAAA,MAAM,EAAE,CACP;AACCK,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,SAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADO,CADT;AAQCI,EAAAA,IAAI,EAAE,SARP;AASCC,EAAAA,OAAO,EAAE,CACR;AACCF,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,EAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADQ,CATV;AAgBCD,EAAAA,eAAe,EAAE,MAhBlB;AAiBCC,EAAAA,IAAI,EAAE;AAjBP,CA9cS,EAieT;AACCF,EAAAA,MAAM,EAAE,CACP;AACCK,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,MAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADO,EAMP;AACCG,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,SAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GANO,CADT;AAaCI,EAAAA,IAAI,EAAE,cAbP;AAcCC,EAAAA,OAAO,EAAE,EAdV;AAgBCN,EAAAA,eAAe,EAAE,YAhBlB;AAiBCC,EAAAA,IAAI,EAAE;AAjBP,CAjeS,EAofT;AACCF,EAAAA,MAAM,EAAE,CACP;AACCK,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,MAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADO,EAMP;AACCG,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,SAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GANO,CADT;AAaCI,EAAAA,IAAI,EAAE,YAbP;AAcCC,EAAAA,OAAO,EAAE,EAdV;AAgBCN,EAAAA,eAAe,EAAE,YAhBlB;AAiBCC,EAAAA,IAAI,EAAE;AAjBP,CApfS,EAugBT;AACCF,EAAAA,MAAM,EAAE,CACP;AACCK,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,MAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADO,EAMP;AACCG,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,IAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GANO,EAWP;AACCG,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,SAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GAXO,CADT;AAkBCI,EAAAA,IAAI,EAAE,kBAlBP;AAmBCC,EAAAA,OAAO,EAAE,EAnBV;AAqBCN,EAAAA,eAAe,EAAE,YArBlB;AAsBCC,EAAAA,IAAI,EAAE;AAtBP,CAvgBS,EA+hBT;AACCF,EAAAA,MAAM,EAAE,CACP;AACCK,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,MAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADO,EAMP;AACCG,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,IAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GANO,EAWP;AACCG,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,SAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GAXO,EAgBP;AACCG,IAAAA,YAAY,EAAE,OADf;AAECC,IAAAA,IAAI,EAAE,OAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GAhBO,CADT;AAuBCI,EAAAA,IAAI,EAAE,kBAvBP;AAwBCC,EAAAA,OAAO,EAAE,EAxBV;AA0BCN,EAAAA,eAAe,EAAE,YA1BlB;AA2BCC,EAAAA,IAAI,EAAE;AA3BP,CA/hBS,EA4jBT;AACCF,EAAAA,MAAM,EAAE,CACP;AACCK,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,UAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADO,EAMP;AACCG,IAAAA,YAAY,EAAE,MADf;AAECC,IAAAA,IAAI,EAAE,UAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GANO,CADT;AAaCI,EAAAA,IAAI,EAAE,mBAbP;AAcCC,EAAAA,OAAO,EAAE,EAdV;AAgBCN,EAAAA,eAAe,EAAE,YAhBlB;AAiBCC,EAAAA,IAAI,EAAE;AAjBP,CA5jBS,EA+kBT;AACCF,EAAAA,MAAM,EAAE,CACP;AACCK,IAAAA,YAAY,EAAE,QADf;AAECC,IAAAA,IAAI,EAAE,aAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADO,CADT;AAQCI,EAAAA,IAAI,EAAE,mBARP;AASCC,EAAAA,OAAO,EAAE,CACR;AACCF,IAAAA,YAAY,EAAE,MADf;AAECC,IAAAA,IAAI,EAAE,EAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADQ,CATV;AAgBCD,EAAAA,eAAe,EAAE,MAhBlB;AAiBCC,EAAAA,IAAI,EAAE;AAjBP,CA/kBS,EAkmBT;AACCF,EAAAA,MAAM,EAAE,EADT;AAGCM,EAAAA,IAAI,EAAE,QAHP;AAICC,EAAAA,OAAO,EAAE,CACR;AACCF,IAAAA,YAAY,EAAE,QADf;AAECC,IAAAA,IAAI,EAAE,EAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADQ,CAJV;AAWCD,EAAAA,eAAe,EAAE,MAXlB;AAYCC,EAAAA,IAAI,EAAE;AAZP,CAlmBS,EAgnBT;AACCF,EAAAA,MAAM,EAAE,CACP;AACCK,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,OAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADO,CADT;AAQCI,EAAAA,IAAI,EAAE,cARP;AASCC,EAAAA,OAAO,EAAE,CACR;AACCF,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,EAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADQ,CATV;AAgBCD,EAAAA,eAAe,EAAE,MAhBlB;AAiBCC,EAAAA,IAAI,EAAE;AAjBP,CAhnBS,EAmoBT;AACCF,EAAAA,MAAM,EAAE,CACP;AACCK,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,OAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADO,EAMP;AACCG,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,OAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GANO,CADT;AAaCI,EAAAA,IAAI,EAAE,qBAbP;AAcCC,EAAAA,OAAO,EAAE,CACR;AACCF,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,EAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADQ,CAdV;AAqBCD,EAAAA,eAAe,EAAE,MArBlB;AAsBCC,EAAAA,IAAI,EAAE;AAtBP,CAnoBS,EA2pBT;AACCF,EAAAA,MAAM,EAAE,CACP;AACCK,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,SAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADO,CADT;AAQCI,EAAAA,IAAI,EAAE,UARP;AASCC,EAAAA,OAAO,EAAE,CACR;AACCF,IAAAA,YAAY,EAAE,QADf;AAECC,IAAAA,IAAI,EAAE,EAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADQ,CATV;AAgBCD,EAAAA,eAAe,EAAE,MAhBlB;AAiBCC,EAAAA,IAAI,EAAE;AAjBP,CA3pBS,EA8qBT;AACCF,EAAAA,MAAM,EAAE,EADT;AAGCM,EAAAA,IAAI,EAAE,aAHP;AAICC,EAAAA,OAAO,EAAE,CACR;AACCF,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,EAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADQ,CAJV;AAWCD,EAAAA,eAAe,EAAE,MAXlB;AAYCC,EAAAA,IAAI,EAAE;AAZP,CA9qBS,EA4rBT;AACCF,EAAAA,MAAM,EAAE,CACP;AACCK,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,MAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADO,EAMP;AACCG,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,IAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GANO,EAWP;AACCG,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,SAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GAXO,CADT;AAkBCI,EAAAA,IAAI,EAAE,cAlBP;AAmBCC,EAAAA,OAAO,EAAE,EAnBV;AAqBCN,EAAAA,eAAe,EAAE,YArBlB;AAsBCC,EAAAA,IAAI,EAAE;AAtBP,CA5rBS,EAotBT;AACCF,EAAAA,MAAM,EAAE,CACP;AACCK,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,OAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADO,EAMP;AACCG,IAAAA,YAAY,EAAE,QADf;AAECC,IAAAA,IAAI,EAAE,MAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GANO,EAWP;AACCG,IAAAA,YAAY,EAAE,QADf;AAECC,IAAAA,IAAI,EAAE,aAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GAXO,EAgBP;AACCG,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,OAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GAhBO,EAqBP;AACCG,IAAAA,YAAY,EAAE,QADf;AAECC,IAAAA,IAAI,EAAE,WAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GArBO,CADT;AA4BCI,EAAAA,IAAI,EAAE,WA5BP;AA6BCC,EAAAA,OAAO,EAAE,CACR;AACCF,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,EAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADQ,CA7BV;AAoCCD,EAAAA,eAAe,EAAE,YApClB;AAqCCC,EAAAA,IAAI,EAAE;AArCP,CAptBS,EA2vBT;AACCF,EAAAA,MAAM,EAAE,CACP;AACCK,IAAAA,YAAY,EAAE,SADf;AAECC,IAAAA,IAAI,EAAE,QAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADO,CADT;AAQCI,EAAAA,IAAI,EAAE,eARP;AASCC,EAAAA,OAAO,EAAE,CACR;AACCF,IAAAA,YAAY,EAAE,WADf;AAECC,IAAAA,IAAI,EAAE,EAFP;AAGCJ,IAAAA,IAAI,EAAE;AAHP,GADQ,CATV;AAgBCD,EAAAA,eAAe,EAAE,MAhBlB;AAiBCC,EAAAA,IAAI,EAAE;AAjBP,CA3vBS,EA8wBT;AACCF,EAAAA,MAAM,EAAE,EADT;AAGCM,EAAAA,IAAI,EAAE,aAHP;AAICC,EAAAA,OAAO,EAAE,EAJV;AAMCN,EAAAA,eAAe,EAAE,SANlB;AAOCC,EAAAA,IAAI,EAAE;AAPP,CA9wBS,CAAV;AAwxBA,IAAIM,QAAQ,GAAG,ot2CAAf;AACA,IAAIC,gBAAgB,GAAG,o+yCAAvB;AACA,IAAIC,cAAc,GAAG,EAArB;AAEA,IAAIC,sBAAsB,GAAG,EAA7B;AAEA,IAAIC,KAAK,GAAG;AACXhB,EAAAA,OAAO,EAAEA,OADE;AAEXC,EAAAA,YAAY,EAAEA,YAFH;AAGXC,EAAAA,UAAU,EAAEA,UAHD;AAIXC,EAAAA,GAAG,EAAEA,GAJM;AAKXS,EAAAA,QAAQ,EAAEA,QALC;AAMXC,EAAAA,gBAAgB,EAAEA,gBANP;AAOXC,EAAAA,cAAc,EAAEA,cAPL;AAQXC,EAAAA,sBAAsB,EAAEA;AARb,CAAZ;AAWA,IAAIE,cAAc,GAAG,OAAOC,UAAP,KAAsB,WAAtB,GAAoCA,UAApC,GAAiD,OAAOC,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyC,OAAOC,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyC,OAAOC,IAAP,KAAgB,WAAhB,GAA8BA,IAA9B,GAAqC,EAA7L;;AAEA,SAASC,oBAAT,CAA8BC,EAA9B,EAAkCC,MAAlC,EAA0C;AACzC,SAAOA,MAAM,GAAG;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAAT,EAA0BF,EAAE,CAACC,MAAD,EAASA,MAAM,CAACC,OAAhB,CAA5B,EAAsDD,MAAM,CAACC,OAApE;AACA;;AAED,SAASC,yBAAT,CAAoCC,CAApC,EAAuC;AACtC,SAAOA,CAAC,IAAIA,CAAC,CAAC,SAAD,CAAN,IAAqBA,CAA5B;AACA;;AAED,IAAIC,kBAAkB,GAAG,EAAzB;AAEA,IAAIC,oBAAoB,GAAG;AACzBC,EAAAA,SAAS,EAAE,IADc;AAEzB,aAAWF;AAFc,CAA3B;AAKA,IAAIG,UAAU,GAAGL,yBAAyB,CAACG,oBAAD,CAA1C;AAEA,IAAIG,EAAE,GAAGV,oBAAoB,CAAC,UAAUE,MAAV,EAAkB;AAChD,GAAC,UAAUA,MAAV,EAAkBC,OAAlB,EAA2B;AAE1B;AACA,aAASQ,MAAT,CAAiBC,GAAjB,EAAsBC,GAAtB,EAA2B;AACzB,UAAI,CAACD,GAAL,EAAU,MAAM,IAAIE,KAAJ,CAAUD,GAAG,IAAI,kBAAjB,CAAN;AACX,KALyB,CAO1B;AACA;;;AACA,aAASE,QAAT,CAAmBC,IAAnB,EAAyBC,SAAzB,EAAoC;AAClCD,MAAAA,IAAI,CAACE,MAAL,GAAcD,SAAd;;AACA,UAAIE,QAAQ,GAAG,YAAY,CAAE,CAA7B;;AACAA,MAAAA,QAAQ,CAACC,SAAT,GAAqBH,SAAS,CAACG,SAA/B;AACAJ,MAAAA,IAAI,CAACI,SAAL,GAAiB,IAAID,QAAJ,EAAjB;AACAH,MAAAA,IAAI,CAACI,SAAL,CAAeC,WAAf,GAA6BL,IAA7B;AACD,KAfyB,CAiB1B;;;AAEA,aAASM,EAAT,CAAaC,MAAb,EAAqBC,IAArB,EAA2BC,MAA3B,EAAmC;AACjC,UAAIH,EAAE,CAACI,IAAH,CAAQH,MAAR,CAAJ,EAAqB;AACnB,eAAOA,MAAP;AACD;;AAED,WAAKI,QAAL,GAAgB,CAAhB;AACA,WAAKC,KAAL,GAAa,IAAb;AACA,WAAKC,MAAL,GAAc,CAAd,CAPiC,CASjC;;AACA,WAAKC,GAAL,GAAW,IAAX;;AAEA,UAAIP,MAAM,KAAK,IAAf,EAAqB;AACnB,YAAIC,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,IAA9B,EAAoC;AAClCC,UAAAA,MAAM,GAAGD,IAAT;AACAA,UAAAA,IAAI,GAAG,EAAP;AACD;;AAED,aAAKO,KAAL,CAAWR,MAAM,IAAI,CAArB,EAAwBC,IAAI,IAAI,EAAhC,EAAoCC,MAAM,IAAI,IAA9C;AACD;AACF;;AACD,QAAI,OAAOvB,MAAP,KAAkB,QAAtB,EAAgC;AAC9BA,MAAAA,MAAM,CAACC,OAAP,GAAiBmB,EAAjB;AACD,KAFD,MAEO;AACLnB,MAAAA,OAAO,CAACmB,EAAR,GAAaA,EAAb;AACD;;AAEDA,IAAAA,EAAE,CAACA,EAAH,GAAQA,EAAR;AACAA,IAAAA,EAAE,CAACU,QAAH,GAAc,EAAd;AAEA,QAAIC,MAAJ;;AACA,QAAI;AACF,UAAI,OAAOpC,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,MAAM,CAACoC,MAAd,KAAyB,WAA9D,EAA2E;AACzEA,QAAAA,MAAM,GAAGpC,MAAM,CAACoC,MAAhB;AACD,OAFD,MAEO;AACLA,QAAAA,MAAM,GAAGxB,UAAU,CAACwB,MAApB;AACD;AACF,KAND,CAME,OAAO3D,CAAP,EAAU,CACX;;AAEDgD,IAAAA,EAAE,CAACI,IAAH,GAAU,SAASA,IAAT,CAAeQ,GAAf,EAAoB;AAC5B,UAAIA,GAAG,YAAYZ,EAAnB,EAAuB;AACrB,eAAO,IAAP;AACD;;AAED,aAAOY,GAAG,KAAK,IAAR,IAAgB,OAAOA,GAAP,KAAe,QAA/B,IACLA,GAAG,CAACb,WAAJ,CAAgBW,QAAhB,KAA6BV,EAAE,CAACU,QAD3B,IACuCG,KAAK,CAACC,OAAN,CAAcF,GAAG,CAACN,KAAlB,CAD9C;AAED,KAPD;;AASAN,IAAAA,EAAE,CAACe,GAAH,GAAS,SAASA,GAAT,CAAcC,IAAd,EAAoBC,KAApB,EAA2B;AAClC,UAAID,IAAI,CAACE,GAAL,CAASD,KAAT,IAAkB,CAAtB,EAAyB,OAAOD,IAAP;AACzB,aAAOC,KAAP;AACD,KAHD;;AAKAjB,IAAAA,EAAE,CAACmB,GAAH,GAAS,SAASA,GAAT,CAAcH,IAAd,EAAoBC,KAApB,EAA2B;AAClC,UAAID,IAAI,CAACE,GAAL,CAASD,KAAT,IAAkB,CAAtB,EAAyB,OAAOD,IAAP;AACzB,aAAOC,KAAP;AACD,KAHD;;AAKAjB,IAAAA,EAAE,CAACF,SAAH,CAAaW,KAAb,GAAqB,SAASW,IAAT,CAAenB,MAAf,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqC;AACxD,UAAI,OAAOF,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,eAAO,KAAKoB,WAAL,CAAiBpB,MAAjB,EAAyBC,IAAzB,EAA+BC,MAA/B,CAAP;AACD;;AAED,UAAI,OAAOF,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,eAAO,KAAKqB,UAAL,CAAgBrB,MAAhB,EAAwBC,IAAxB,EAA8BC,MAA9B,CAAP;AACD;;AAED,UAAID,IAAI,KAAK,KAAb,EAAoB;AAClBA,QAAAA,IAAI,GAAG,EAAP;AACD;;AACDb,MAAAA,MAAM,CAACa,IAAI,MAAMA,IAAI,GAAG,CAAb,CAAJ,IAAuBA,IAAI,IAAI,CAA/B,IAAoCA,IAAI,IAAI,EAA7C,CAAN;AAEAD,MAAAA,MAAM,GAAGA,MAAM,CAACsB,QAAP,GAAkBC,OAAlB,CAA0B,MAA1B,EAAkC,EAAlC,CAAT;AACA,UAAIC,KAAK,GAAG,CAAZ;;AACA,UAAIxB,MAAM,CAAC,CAAD,CAAN,KAAc,GAAlB,EAAuB;AACrBwB,QAAAA,KAAK;AACL,aAAKpB,QAAL,GAAgB,CAAhB;AACD;;AAED,UAAIoB,KAAK,GAAGxB,MAAM,CAACM,MAAnB,EAA2B;AACzB,YAAIL,IAAI,KAAK,EAAb,EAAiB;AACf,eAAKwB,SAAL,CAAezB,MAAf,EAAuBwB,KAAvB,EAA8BtB,MAA9B;AACD,SAFD,MAEO;AACL,eAAKwB,UAAL,CAAgB1B,MAAhB,EAAwBC,IAAxB,EAA8BuB,KAA9B;;AACA,cAAItB,MAAM,KAAK,IAAf,EAAqB;AACnB,iBAAKmB,UAAL,CAAgB,KAAKM,OAAL,EAAhB,EAAgC1B,IAAhC,EAAsCC,MAAtC;AACD;AACF;AACF;AACF,KA/BD;;AAiCAH,IAAAA,EAAE,CAACF,SAAH,CAAauB,WAAb,GAA2B,SAASA,WAAT,CAAsBpB,MAAtB,EAA8BC,IAA9B,EAAoCC,MAApC,EAA4C;AACrE,UAAIF,MAAM,GAAG,CAAb,EAAgB;AACd,aAAKI,QAAL,GAAgB,CAAhB;AACAJ,QAAAA,MAAM,GAAG,CAACA,MAAV;AACD;;AACD,UAAIA,MAAM,GAAG,SAAb,EAAwB;AACtB,aAAKK,KAAL,GAAa,CAAEL,MAAM,GAAG,SAAX,CAAb;AACA,aAAKM,MAAL,GAAc,CAAd;AACD,OAHD,MAGO,IAAIN,MAAM,GAAG,gBAAb,EAA+B;AACpC,aAAKK,KAAL,GAAa,CACXL,MAAM,GAAG,SADE,EAEVA,MAAM,GAAG,SAAV,GAAuB,SAFZ,CAAb;AAIA,aAAKM,MAAL,GAAc,CAAd;AACD,OANM,MAMA;AACLlB,QAAAA,MAAM,CAACY,MAAM,GAAG,gBAAV,CAAN,CADK,CAC8B;;AACnC,aAAKK,KAAL,GAAa,CACXL,MAAM,GAAG,SADE,EAEVA,MAAM,GAAG,SAAV,GAAuB,SAFZ,EAGX,CAHW,CAAb;AAKA,aAAKM,MAAL,GAAc,CAAd;AACD;;AAED,UAAIJ,MAAM,KAAK,IAAf,EAAqB,OAxBgD,CA0BrE;;AACA,WAAKmB,UAAL,CAAgB,KAAKM,OAAL,EAAhB,EAAgC1B,IAAhC,EAAsCC,MAAtC;AACD,KA5BD;;AA8BAH,IAAAA,EAAE,CAACF,SAAH,CAAawB,UAAb,GAA0B,SAASA,UAAT,CAAqBrB,MAArB,EAA6BC,IAA7B,EAAmCC,MAAnC,EAA2C;AACnE;AACAd,MAAAA,MAAM,CAAC,OAAOY,MAAM,CAACM,MAAd,KAAyB,QAA1B,CAAN;;AACA,UAAIN,MAAM,CAACM,MAAP,IAAiB,CAArB,EAAwB;AACtB,aAAKD,KAAL,GAAa,CAAE,CAAF,CAAb;AACA,aAAKC,MAAL,GAAc,CAAd;AACA,eAAO,IAAP;AACD;;AAED,WAAKA,MAAL,GAAcsB,IAAI,CAACC,IAAL,CAAU7B,MAAM,CAACM,MAAP,GAAgB,CAA1B,CAAd;AACA,WAAKD,KAAL,GAAa,IAAIO,KAAJ,CAAU,KAAKN,MAAf,CAAb;;AACA,WAAK,IAAIwB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKxB,MAAzB,EAAiCwB,CAAC,EAAlC,EAAsC;AACpC,aAAKzB,KAAL,CAAWyB,CAAX,IAAgB,CAAhB;AACD;;AAED,UAAIC,CAAJ,EAAOC,CAAP;AACA,UAAIC,GAAG,GAAG,CAAV;;AACA,UAAI/B,MAAM,KAAK,IAAf,EAAqB;AACnB,aAAK4B,CAAC,GAAG9B,MAAM,CAACM,MAAP,GAAgB,CAApB,EAAuByB,CAAC,GAAG,CAAhC,EAAmCD,CAAC,IAAI,CAAxC,EAA2CA,CAAC,IAAI,CAAhD,EAAmD;AACjDE,UAAAA,CAAC,GAAGhC,MAAM,CAAC8B,CAAD,CAAN,GAAa9B,MAAM,CAAC8B,CAAC,GAAG,CAAL,CAAN,IAAiB,CAA9B,GAAoC9B,MAAM,CAAC8B,CAAC,GAAG,CAAL,CAAN,IAAiB,EAAzD;AACA,eAAKzB,KAAL,CAAW0B,CAAX,KAAkBC,CAAC,IAAIC,GAAN,GAAa,SAA9B;AACA,eAAK5B,KAAL,CAAW0B,CAAC,GAAG,CAAf,IAAqBC,CAAC,KAAM,KAAKC,GAAb,GAAqB,SAAzC;AACAA,UAAAA,GAAG,IAAI,EAAP;;AACA,cAAIA,GAAG,IAAI,EAAX,EAAe;AACbA,YAAAA,GAAG,IAAI,EAAP;AACAF,YAAAA,CAAC;AACF;AACF;AACF,OAXD,MAWO,IAAI7B,MAAM,KAAK,IAAf,EAAqB;AAC1B,aAAK4B,CAAC,GAAG,CAAJ,EAAOC,CAAC,GAAG,CAAhB,EAAmBD,CAAC,GAAG9B,MAAM,CAACM,MAA9B,EAAsCwB,CAAC,IAAI,CAA3C,EAA8C;AAC5CE,UAAAA,CAAC,GAAGhC,MAAM,CAAC8B,CAAD,CAAN,GAAa9B,MAAM,CAAC8B,CAAC,GAAG,CAAL,CAAN,IAAiB,CAA9B,GAAoC9B,MAAM,CAAC8B,CAAC,GAAG,CAAL,CAAN,IAAiB,EAAzD;AACA,eAAKzB,KAAL,CAAW0B,CAAX,KAAkBC,CAAC,IAAIC,GAAN,GAAa,SAA9B;AACA,eAAK5B,KAAL,CAAW0B,CAAC,GAAG,CAAf,IAAqBC,CAAC,KAAM,KAAKC,GAAb,GAAqB,SAAzC;AACAA,UAAAA,GAAG,IAAI,EAAP;;AACA,cAAIA,GAAG,IAAI,EAAX,EAAe;AACbA,YAAAA,GAAG,IAAI,EAAP;AACAF,YAAAA,CAAC;AACF;AACF;AACF;;AACD,aAAO,KAAKG,KAAL,EAAP;AACD,KAzCD;;AA2CA,aAASC,aAAT,CAAwBC,MAAxB,EAAgCC,KAAhC,EAAuC;AACrC,UAAIC,CAAC,GAAGF,MAAM,CAACG,UAAP,CAAkBF,KAAlB,CAAR,CADqC,CAErC;;AACA,UAAIC,CAAC,IAAI,EAAL,IAAWA,CAAC,IAAI,EAApB,EAAwB;AACtB,eAAOA,CAAC,GAAG,EAAX,CADsB,CAExB;AACC,OAHD,MAGO,IAAIA,CAAC,IAAI,EAAL,IAAWA,CAAC,IAAI,GAApB,EAAyB;AAC9B,eAAOA,CAAC,GAAG,EAAX,CAD8B,CAEhC;AACC,OAHM,MAGA;AACL,eAAQA,CAAC,GAAG,EAAL,GAAW,GAAlB;AACD;AACF;;AAED,aAASE,YAAT,CAAuBJ,MAAvB,EAA+BK,UAA/B,EAA2CJ,KAA3C,EAAkD;AAChD,UAAIK,CAAC,GAAGP,aAAa,CAACC,MAAD,EAASC,KAAT,CAArB;;AACA,UAAIA,KAAK,GAAG,CAAR,IAAaI,UAAjB,EAA6B;AAC3BC,QAAAA,CAAC,IAAIP,aAAa,CAACC,MAAD,EAASC,KAAK,GAAG,CAAjB,CAAb,IAAoC,CAAzC;AACD;;AACD,aAAOK,CAAP;AACD;;AAED3C,IAAAA,EAAE,CAACF,SAAH,CAAa4B,SAAb,GAAyB,SAASA,SAAT,CAAoBzB,MAApB,EAA4BwB,KAA5B,EAAmCtB,MAAnC,EAA2C;AAClE;AACA,WAAKI,MAAL,GAAcsB,IAAI,CAACC,IAAL,CAAU,CAAC7B,MAAM,CAACM,MAAP,GAAgBkB,KAAjB,IAA0B,CAApC,CAAd;AACA,WAAKnB,KAAL,GAAa,IAAIO,KAAJ,CAAU,KAAKN,MAAf,CAAb;;AACA,WAAK,IAAIwB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKxB,MAAzB,EAAiCwB,CAAC,EAAlC,EAAsC;AACpC,aAAKzB,KAAL,CAAWyB,CAAX,IAAgB,CAAhB;AACD,OANiE,CAQlE;;;AACA,UAAIG,GAAG,GAAG,CAAV;AACA,UAAIF,CAAC,GAAG,CAAR;AAEA,UAAIC,CAAJ;;AACA,UAAI9B,MAAM,KAAK,IAAf,EAAqB;AACnB,aAAK4B,CAAC,GAAG9B,MAAM,CAACM,MAAP,GAAgB,CAAzB,EAA4BwB,CAAC,IAAIN,KAAjC,EAAwCM,CAAC,IAAI,CAA7C,EAAgD;AAC9CE,UAAAA,CAAC,GAAGQ,YAAY,CAACxC,MAAD,EAASwB,KAAT,EAAgBM,CAAhB,CAAZ,IAAkCG,GAAtC;AACA,eAAK5B,KAAL,CAAW0B,CAAX,KAAiBC,CAAC,GAAG,SAArB;;AACA,cAAIC,GAAG,IAAI,EAAX,EAAe;AACbA,YAAAA,GAAG,IAAI,EAAP;AACAF,YAAAA,CAAC,IAAI,CAAL;AACA,iBAAK1B,KAAL,CAAW0B,CAAX,KAAiBC,CAAC,KAAK,EAAvB;AACD,WAJD,MAIO;AACLC,YAAAA,GAAG,IAAI,CAAP;AACD;AACF;AACF,OAZD,MAYO;AACL,YAAIU,WAAW,GAAG3C,MAAM,CAACM,MAAP,GAAgBkB,KAAlC;;AACA,aAAKM,CAAC,GAAGa,WAAW,GAAG,CAAd,KAAoB,CAApB,GAAwBnB,KAAK,GAAG,CAAhC,GAAoCA,KAA7C,EAAoDM,CAAC,GAAG9B,MAAM,CAACM,MAA/D,EAAuEwB,CAAC,IAAI,CAA5E,EAA+E;AAC7EE,UAAAA,CAAC,GAAGQ,YAAY,CAACxC,MAAD,EAASwB,KAAT,EAAgBM,CAAhB,CAAZ,IAAkCG,GAAtC;AACA,eAAK5B,KAAL,CAAW0B,CAAX,KAAiBC,CAAC,GAAG,SAArB;;AACA,cAAIC,GAAG,IAAI,EAAX,EAAe;AACbA,YAAAA,GAAG,IAAI,EAAP;AACAF,YAAAA,CAAC,IAAI,CAAL;AACA,iBAAK1B,KAAL,CAAW0B,CAAX,KAAiBC,CAAC,KAAK,EAAvB;AACD,WAJD,MAIO;AACLC,YAAAA,GAAG,IAAI,CAAP;AACD;AACF;AACF;;AAED,WAAKC,KAAL;AACD,KAzCD;;AA2CA,aAASU,SAAT,CAAoBC,GAApB,EAAyBrB,KAAzB,EAAgCsB,GAAhC,EAAqCC,GAArC,EAA0C;AACxC,UAAIL,CAAC,GAAG,CAAR;AACA,UAAIM,GAAG,GAAGpB,IAAI,CAACV,GAAL,CAAS2B,GAAG,CAACvC,MAAb,EAAqBwC,GAArB,CAAV;;AACA,WAAK,IAAIhB,CAAC,GAAGN,KAAb,EAAoBM,CAAC,GAAGkB,GAAxB,EAA6BlB,CAAC,EAA9B,EAAkC;AAChC,YAAIQ,CAAC,GAAGO,GAAG,CAACN,UAAJ,CAAeT,CAAf,IAAoB,EAA5B;AAEAY,QAAAA,CAAC,IAAIK,GAAL,CAHgC,CAKhC;;AACA,YAAIT,CAAC,IAAI,EAAT,EAAa;AACXI,UAAAA,CAAC,IAAIJ,CAAC,GAAG,EAAJ,GAAS,GAAd,CADW,CAGb;AACC,SAJD,MAIO,IAAIA,CAAC,IAAI,EAAT,EAAa;AAClBI,UAAAA,CAAC,IAAIJ,CAAC,GAAG,EAAJ,GAAS,GAAd,CADkB,CAGpB;AACC,SAJM,MAIA;AACLI,UAAAA,CAAC,IAAIJ,CAAL;AACD;AACF;;AACD,aAAOI,CAAP;AACD;;AAED3C,IAAAA,EAAE,CAACF,SAAH,CAAa6B,UAAb,GAA0B,SAASA,UAAT,CAAqB1B,MAArB,EAA6BC,IAA7B,EAAmCuB,KAAnC,EAA0C;AAClE;AACA,WAAKnB,KAAL,GAAa,CAAE,CAAF,CAAb;AACA,WAAKC,MAAL,GAAc,CAAd,CAHkE,CAKlE;;AACA,WAAK,IAAI2C,OAAO,GAAG,CAAd,EAAiBC,OAAO,GAAG,CAAhC,EAAmCA,OAAO,IAAI,SAA9C,EAAyDA,OAAO,IAAIjD,IAApE,EAA0E;AACxEgD,QAAAA,OAAO;AACR;;AACDA,MAAAA,OAAO;AACPC,MAAAA,OAAO,GAAIA,OAAO,GAAGjD,IAAX,GAAmB,CAA7B;AAEA,UAAIkD,KAAK,GAAGnD,MAAM,CAACM,MAAP,GAAgBkB,KAA5B;AACA,UAAI4B,GAAG,GAAGD,KAAK,GAAGF,OAAlB;AACA,UAAIH,GAAG,GAAGlB,IAAI,CAACV,GAAL,CAASiC,KAAT,EAAgBA,KAAK,GAAGC,GAAxB,IAA+B5B,KAAzC;AAEA,UAAI6B,IAAI,GAAG,CAAX;;AACA,WAAK,IAAIvB,CAAC,GAAGN,KAAb,EAAoBM,CAAC,GAAGgB,GAAxB,EAA6BhB,CAAC,IAAImB,OAAlC,EAA2C;AACzCI,QAAAA,IAAI,GAAGT,SAAS,CAAC5C,MAAD,EAAS8B,CAAT,EAAYA,CAAC,GAAGmB,OAAhB,EAAyBhD,IAAzB,CAAhB;AAEA,aAAKqD,KAAL,CAAWJ,OAAX;;AACA,YAAI,KAAK7C,KAAL,CAAW,CAAX,IAAgBgD,IAAhB,GAAuB,SAA3B,EAAsC;AACpC,eAAKhD,KAAL,CAAW,CAAX,KAAiBgD,IAAjB;AACD,SAFD,MAEO;AACL,eAAKE,MAAL,CAAYF,IAAZ;AACD;AACF;;AAED,UAAID,GAAG,KAAK,CAAZ,EAAe;AACb,YAAII,GAAG,GAAG,CAAV;AACAH,QAAAA,IAAI,GAAGT,SAAS,CAAC5C,MAAD,EAAS8B,CAAT,EAAY9B,MAAM,CAACM,MAAnB,EAA2BL,IAA3B,CAAhB;;AAEA,aAAK6B,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGsB,GAAhB,EAAqBtB,CAAC,EAAtB,EAA0B;AACxB0B,UAAAA,GAAG,IAAIvD,IAAP;AACD;;AAED,aAAKqD,KAAL,CAAWE,GAAX;;AACA,YAAI,KAAKnD,KAAL,CAAW,CAAX,IAAgBgD,IAAhB,GAAuB,SAA3B,EAAsC;AACpC,eAAKhD,KAAL,CAAW,CAAX,KAAiBgD,IAAjB;AACD,SAFD,MAEO;AACL,eAAKE,MAAL,CAAYF,IAAZ;AACD;AACF;;AAED,WAAKnB,KAAL;AACD,KA7CD;;AA+CAnC,IAAAA,EAAE,CAACF,SAAH,CAAa4D,IAAb,GAAoB,SAASA,IAAT,CAAeC,IAAf,EAAqB;AACvCA,MAAAA,IAAI,CAACrD,KAAL,GAAa,IAAIO,KAAJ,CAAU,KAAKN,MAAf,CAAb;;AACA,WAAK,IAAIwB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKxB,MAAzB,EAAiCwB,CAAC,EAAlC,EAAsC;AACpC4B,QAAAA,IAAI,CAACrD,KAAL,CAAWyB,CAAX,IAAgB,KAAKzB,KAAL,CAAWyB,CAAX,CAAhB;AACD;;AACD4B,MAAAA,IAAI,CAACpD,MAAL,GAAc,KAAKA,MAAnB;AACAoD,MAAAA,IAAI,CAACtD,QAAL,GAAgB,KAAKA,QAArB;AACAsD,MAAAA,IAAI,CAACnD,GAAL,GAAW,KAAKA,GAAhB;AACD,KARD;;AAUAR,IAAAA,EAAE,CAACF,SAAH,CAAa8D,KAAb,GAAqB,SAASA,KAAT,GAAkB;AACrC,UAAIjB,CAAC,GAAG,IAAI3C,EAAJ,CAAO,IAAP,CAAR;AACA,WAAK0D,IAAL,CAAUf,CAAV;AACA,aAAOA,CAAP;AACD,KAJD;;AAMA3C,IAAAA,EAAE,CAACF,SAAH,CAAa+D,OAAb,GAAuB,SAASA,OAAT,CAAkBC,IAAlB,EAAwB;AAC7C,aAAO,KAAKvD,MAAL,GAAcuD,IAArB,EAA2B;AACzB,aAAKxD,KAAL,CAAW,KAAKC,MAAL,EAAX,IAA4B,CAA5B;AACD;;AACD,aAAO,IAAP;AACD,KALD,CAhV0B,CAuV1B;;;AACAP,IAAAA,EAAE,CAACF,SAAH,CAAaqC,KAAb,GAAqB,SAASA,KAAT,GAAkB;AACrC,aAAO,KAAK5B,MAAL,GAAc,CAAd,IAAmB,KAAKD,KAAL,CAAW,KAAKC,MAAL,GAAc,CAAzB,MAAgC,CAA1D,EAA6D;AAC3D,aAAKA,MAAL;AACD;;AACD,aAAO,KAAKwD,SAAL,EAAP;AACD,KALD;;AAOA/D,IAAAA,EAAE,CAACF,SAAH,CAAaiE,SAAb,GAAyB,SAASA,SAAT,GAAsB;AAC7C;AACA,UAAI,KAAKxD,MAAL,KAAgB,CAAhB,IAAqB,KAAKD,KAAL,CAAW,CAAX,MAAkB,CAA3C,EAA8C;AAC5C,aAAKD,QAAL,GAAgB,CAAhB;AACD;;AACD,aAAO,IAAP;AACD,KAND;;AAQAL,IAAAA,EAAE,CAACF,SAAH,CAAakE,OAAb,GAAuB,SAASA,OAAT,GAAoB;AACzC,aAAO,CAAC,KAAKxD,GAAL,GAAW,SAAX,GAAuB,OAAxB,IAAmC,KAAKe,QAAL,CAAc,EAAd,CAAnC,GAAuD,GAA9D;AACD,KAFD;AAIA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAKE,QAAI0C,KAAK,GAAG,CACV,EADU,EAEV,GAFU,EAGV,IAHU,EAIV,KAJU,EAKV,MALU,EAMV,OANU,EAOV,QAPU,EAQV,SARU,EASV,UATU,EAUV,WAVU,EAWV,YAXU,EAYV,aAZU,EAaV,cAbU,EAcV,eAdU,EAeV,gBAfU,EAgBV,iBAhBU,EAiBV,kBAjBU,EAkBV,mBAlBU,EAmBV,oBAnBU,EAoBV,qBApBU,EAqBV,sBArBU,EAsBV,uBAtBU,EAuBV,wBAvBU,EAwBV,yBAxBU,EAyBV,0BAzBU,EA0BV,2BA1BU,CAAZ;AA6BA,QAAIC,UAAU,GAAG,CACf,CADe,EACZ,CADY,EAEf,EAFe,EAEX,EAFW,EAEP,EAFO,EAEH,EAFG,EAEC,EAFD,EAEK,CAFL,EAEQ,CAFR,EAGf,CAHe,EAGZ,CAHY,EAGT,CAHS,EAGN,CAHM,EAGH,CAHG,EAGA,CAHA,EAGG,CAHH,EAIf,CAJe,EAIZ,CAJY,EAIT,CAJS,EAIN,CAJM,EAIH,CAJG,EAIA,CAJA,EAIG,CAJH,EAKf,CALe,EAKZ,CALY,EAKT,CALS,EAKN,CALM,EAKH,CALG,EAKA,CALA,EAKG,CALH,EAMf,CANe,EAMZ,CANY,EAMT,CANS,EAMN,CANM,EAMH,CANG,EAMA,CANA,EAMG,CANH,CAAjB;AASA,QAAIC,UAAU,GAAG,CACf,CADe,EACZ,CADY,EAEf,QAFe,EAEL,QAFK,EAEK,QAFL,EAEe,QAFf,EAEyB,QAFzB,EAEmC,QAFnC,EAE6C,QAF7C,EAGf,QAHe,EAGL,QAHK,EAGK,QAHL,EAGe,QAHf,EAGyB,QAHzB,EAGmC,OAHnC,EAG4C,QAH5C,EAIf,QAJe,EAIL,QAJK,EAIK,QAJL,EAIe,QAJf,EAIyB,QAJzB,EAImC,OAJnC,EAI4C,OAJ5C,EAKf,OALe,EAKN,OALM,EAKG,OALH,EAKY,QALZ,EAKsB,QALtB,EAKgC,QALhC,EAK0C,QAL1C,EAMf,QANe,EAML,QANK,EAMK,QANL,EAMe,QANf,EAMyB,QANzB,EAMmC,QANnC,EAM6C,QAN7C,CAAjB;;AASAnE,IAAAA,EAAE,CAACF,SAAH,CAAayB,QAAb,GAAwB,SAASA,QAAT,CAAmBrB,IAAnB,EAAyBkE,OAAzB,EAAkC;AACxDlE,MAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AACAkE,MAAAA,OAAO,GAAGA,OAAO,GAAG,CAAV,IAAe,CAAzB;AAEA,UAAIC,GAAJ;;AACA,UAAInE,IAAI,KAAK,EAAT,IAAeA,IAAI,KAAK,KAA5B,EAAmC;AACjCmE,QAAAA,GAAG,GAAG,EAAN;AACA,YAAInC,GAAG,GAAG,CAAV;AACA,YAAIoC,KAAK,GAAG,CAAZ;;AACA,aAAK,IAAIvC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKxB,MAAzB,EAAiCwB,CAAC,EAAlC,EAAsC;AACpC,cAAIE,CAAC,GAAG,KAAK3B,KAAL,CAAWyB,CAAX,CAAR;AACA,cAAIuB,IAAI,GAAG,CAAC,CAAErB,CAAC,IAAIC,GAAN,GAAaoC,KAAd,IAAuB,QAAxB,EAAkC/C,QAAlC,CAA2C,EAA3C,CAAX;AACA+C,UAAAA,KAAK,GAAIrC,CAAC,KAAM,KAAKC,GAAb,GAAqB,QAA7B;;AACA,cAAIoC,KAAK,KAAK,CAAV,IAAevC,CAAC,KAAK,KAAKxB,MAAL,GAAc,CAAvC,EAA0C;AACxC8D,YAAAA,GAAG,GAAGJ,KAAK,CAAC,IAAIX,IAAI,CAAC/C,MAAV,CAAL,GAAyB+C,IAAzB,GAAgCe,GAAtC;AACD,WAFD,MAEO;AACLA,YAAAA,GAAG,GAAGf,IAAI,GAAGe,GAAb;AACD;;AACDnC,UAAAA,GAAG,IAAI,CAAP;;AACA,cAAIA,GAAG,IAAI,EAAX,EAAe;AACbA,YAAAA,GAAG,IAAI,EAAP;AACAH,YAAAA,CAAC;AACF;AACF;;AACD,YAAIuC,KAAK,KAAK,CAAd,EAAiB;AACfD,UAAAA,GAAG,GAAGC,KAAK,CAAC/C,QAAN,CAAe,EAAf,IAAqB8C,GAA3B;AACD;;AACD,eAAOA,GAAG,CAAC9D,MAAJ,GAAa6D,OAAb,KAAyB,CAAhC,EAAmC;AACjCC,UAAAA,GAAG,GAAG,MAAMA,GAAZ;AACD;;AACD,YAAI,KAAKhE,QAAL,KAAkB,CAAtB,EAAyB;AACvBgE,UAAAA,GAAG,GAAG,MAAMA,GAAZ;AACD;;AACD,eAAOA,GAAP;AACD;;AAED,UAAInE,IAAI,MAAMA,IAAI,GAAG,CAAb,CAAJ,IAAuBA,IAAI,IAAI,CAA/B,IAAoCA,IAAI,IAAI,EAAhD,EAAoD;AAClD;AACA,YAAIqE,SAAS,GAAGL,UAAU,CAAChE,IAAD,CAA1B,CAFkD,CAGlD;;AACA,YAAIsE,SAAS,GAAGL,UAAU,CAACjE,IAAD,CAA1B;AACAmE,QAAAA,GAAG,GAAG,EAAN;AACA,YAAI9B,CAAC,GAAG,KAAKqB,KAAL,EAAR;AACArB,QAAAA,CAAC,CAAClC,QAAF,GAAa,CAAb;;AACA,eAAO,CAACkC,CAAC,CAACkC,MAAF,EAAR,EAAoB;AAClB,cAAI9B,CAAC,GAAGJ,CAAC,CAACmC,IAAF,CAAOF,SAAP,EAAkBjD,QAAlB,CAA2BrB,IAA3B,CAAR;AACAqC,UAAAA,CAAC,GAAGA,CAAC,CAACoC,KAAF,CAAQH,SAAR,CAAJ;;AAEA,cAAI,CAACjC,CAAC,CAACkC,MAAF,EAAL,EAAiB;AACfJ,YAAAA,GAAG,GAAGJ,KAAK,CAACM,SAAS,GAAG5B,CAAC,CAACpC,MAAf,CAAL,GAA8BoC,CAA9B,GAAkC0B,GAAxC;AACD,WAFD,MAEO;AACLA,YAAAA,GAAG,GAAG1B,CAAC,GAAG0B,GAAV;AACD;AACF;;AACD,YAAI,KAAKI,MAAL,EAAJ,EAAmB;AACjBJ,UAAAA,GAAG,GAAG,MAAMA,GAAZ;AACD;;AACD,eAAOA,GAAG,CAAC9D,MAAJ,GAAa6D,OAAb,KAAyB,CAAhC,EAAmC;AACjCC,UAAAA,GAAG,GAAG,MAAMA,GAAZ;AACD;;AACD,YAAI,KAAKhE,QAAL,KAAkB,CAAtB,EAAyB;AACvBgE,UAAAA,GAAG,GAAG,MAAMA,GAAZ;AACD;;AACD,eAAOA,GAAP;AACD;;AAEDhF,MAAAA,MAAM,CAAC,KAAD,EAAQ,iCAAR,CAAN;AACD,KAnED;;AAqEAW,IAAAA,EAAE,CAACF,SAAH,CAAa8E,QAAb,GAAwB,SAASA,QAAT,GAAqB;AAC3C,UAAIC,GAAG,GAAG,KAAKvE,KAAL,CAAW,CAAX,CAAV;;AACA,UAAI,KAAKC,MAAL,KAAgB,CAApB,EAAuB;AACrBsE,QAAAA,GAAG,IAAI,KAAKvE,KAAL,CAAW,CAAX,IAAgB,SAAvB;AACD,OAFD,MAEO,IAAI,KAAKC,MAAL,KAAgB,CAAhB,IAAqB,KAAKD,KAAL,CAAW,CAAX,MAAkB,IAA3C,EAAiD;AACtD;AACAuE,QAAAA,GAAG,IAAI,mBAAoB,KAAKvE,KAAL,CAAW,CAAX,IAAgB,SAA3C;AACD,OAHM,MAGA,IAAI,KAAKC,MAAL,GAAc,CAAlB,EAAqB;AAC1BlB,QAAAA,MAAM,CAAC,KAAD,EAAQ,4CAAR,CAAN;AACD;;AACD,aAAQ,KAAKgB,QAAL,KAAkB,CAAnB,GAAwB,CAACwE,GAAzB,GAA+BA,GAAtC;AACD,KAXD;;AAaA7E,IAAAA,EAAE,CAACF,SAAH,CAAagF,MAAb,GAAsB,SAASA,MAAT,GAAmB;AACvC,aAAO,KAAKvD,QAAL,CAAc,EAAd,CAAP;AACD,KAFD;;AAIAvB,IAAAA,EAAE,CAACF,SAAH,CAAaiF,QAAb,GAAwB,SAASA,QAAT,CAAmB5E,MAAnB,EAA2BI,MAA3B,EAAmC;AACzDlB,MAAAA,MAAM,CAAC,OAAOsB,MAAP,KAAkB,WAAnB,CAAN;AACA,aAAO,KAAKqE,WAAL,CAAiBrE,MAAjB,EAAyBR,MAAzB,EAAiCI,MAAjC,CAAP;AACD,KAHD;;AAKAP,IAAAA,EAAE,CAACF,SAAH,CAAa8B,OAAb,GAAuB,SAASA,OAAT,CAAkBzB,MAAlB,EAA0BI,MAA1B,EAAkC;AACvD,aAAO,KAAKyE,WAAL,CAAiBnE,KAAjB,EAAwBV,MAAxB,EAAgCI,MAAhC,CAAP;AACD,KAFD;;AAIAP,IAAAA,EAAE,CAACF,SAAH,CAAakF,WAAb,GAA2B,SAASA,WAAT,CAAsBC,SAAtB,EAAiC9E,MAAjC,EAAyCI,MAAzC,EAAiD;AAC1E,UAAI2E,UAAU,GAAG,KAAKA,UAAL,EAAjB;AACA,UAAIC,SAAS,GAAG5E,MAAM,IAAIsB,IAAI,CAACd,GAAL,CAAS,CAAT,EAAYmE,UAAZ,CAA1B;AACA7F,MAAAA,MAAM,CAAC6F,UAAU,IAAIC,SAAf,EAA0B,uCAA1B,CAAN;AACA9F,MAAAA,MAAM,CAAC8F,SAAS,GAAG,CAAb,EAAgB,6BAAhB,CAAN;AAEA,WAAKhD,KAAL;AACA,UAAIiD,YAAY,GAAGjF,MAAM,KAAK,IAA9B;AACA,UAAIkF,GAAG,GAAG,IAAIJ,SAAJ,CAAcE,SAAd,CAAV;AAEA,UAAIG,CAAJ,EAAOvD,CAAP;AACA,UAAIwD,CAAC,GAAG,KAAK3B,KAAL,EAAR;;AACA,UAAI,CAACwB,YAAL,EAAmB;AACjB;AACA,aAAKrD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGoD,SAAS,GAAGD,UAA5B,EAAwCnD,CAAC,EAAzC,EAA6C;AAC3CsD,UAAAA,GAAG,CAACtD,CAAD,CAAH,GAAS,CAAT;AACD;;AAED,aAAKA,CAAC,GAAG,CAAT,EAAY,CAACwD,CAAC,CAACd,MAAF,EAAb,EAAyB1C,CAAC,EAA1B,EAA8B;AAC5BuD,UAAAA,CAAC,GAAGC,CAAC,CAACC,KAAF,CAAQ,IAAR,CAAJ;AACAD,UAAAA,CAAC,CAACE,MAAF,CAAS,CAAT;AAEAJ,UAAAA,GAAG,CAACF,SAAS,GAAGpD,CAAZ,GAAgB,CAAjB,CAAH,GAAyBuD,CAAzB;AACD;AACF,OAZD,MAYO;AACL,aAAKvD,CAAC,GAAG,CAAT,EAAY,CAACwD,CAAC,CAACd,MAAF,EAAb,EAAyB1C,CAAC,EAA1B,EAA8B;AAC5BuD,UAAAA,CAAC,GAAGC,CAAC,CAACC,KAAF,CAAQ,IAAR,CAAJ;AACAD,UAAAA,CAAC,CAACE,MAAF,CAAS,CAAT;AAEAJ,UAAAA,GAAG,CAACtD,CAAD,CAAH,GAASuD,CAAT;AACD;;AAED,eAAOvD,CAAC,GAAGoD,SAAX,EAAsBpD,CAAC,EAAvB,EAA2B;AACzBsD,UAAAA,GAAG,CAACtD,CAAD,CAAH,GAAS,CAAT;AACD;AACF;;AAED,aAAOsD,GAAP;AACD,KAtCD;;AAwCA,QAAIxD,IAAI,CAAC6D,KAAT,EAAgB;AACd1F,MAAAA,EAAE,CAACF,SAAH,CAAa6F,UAAb,GAA0B,SAASA,UAAT,CAAqB1D,CAArB,EAAwB;AAChD,eAAO,KAAKJ,IAAI,CAAC6D,KAAL,CAAWzD,CAAX,CAAZ;AACD,OAFD;AAGD,KAJD,MAIO;AACLjC,MAAAA,EAAE,CAACF,SAAH,CAAa6F,UAAb,GAA0B,SAASA,UAAT,CAAqB1D,CAArB,EAAwB;AAChD,YAAI2D,CAAC,GAAG3D,CAAR;AACA,YAAIU,CAAC,GAAG,CAAR;;AACA,YAAIiD,CAAC,IAAI,MAAT,EAAiB;AACfjD,UAAAA,CAAC,IAAI,EAAL;AACAiD,UAAAA,CAAC,MAAM,EAAP;AACD;;AACD,YAAIA,CAAC,IAAI,IAAT,EAAe;AACbjD,UAAAA,CAAC,IAAI,CAAL;AACAiD,UAAAA,CAAC,MAAM,CAAP;AACD;;AACD,YAAIA,CAAC,IAAI,GAAT,EAAc;AACZjD,UAAAA,CAAC,IAAI,CAAL;AACAiD,UAAAA,CAAC,MAAM,CAAP;AACD;;AACD,YAAIA,CAAC,IAAI,IAAT,EAAe;AACbjD,UAAAA,CAAC,IAAI,CAAL;AACAiD,UAAAA,CAAC,MAAM,CAAP;AACD;;AACD,eAAOjD,CAAC,GAAGiD,CAAX;AACD,OApBD;AAqBD;;AAED5F,IAAAA,EAAE,CAACF,SAAH,CAAa+F,SAAb,GAAyB,SAASA,SAAT,CAAoB5D,CAApB,EAAuB;AAC9C;AACA,UAAIA,CAAC,KAAK,CAAV,EAAa,OAAO,EAAP;AAEb,UAAI2D,CAAC,GAAG3D,CAAR;AACA,UAAIU,CAAC,GAAG,CAAR;;AACA,UAAI,CAACiD,CAAC,GAAG,MAAL,MAAiB,CAArB,EAAwB;AACtBjD,QAAAA,CAAC,IAAI,EAAL;AACAiD,QAAAA,CAAC,MAAM,EAAP;AACD;;AACD,UAAI,CAACA,CAAC,GAAG,IAAL,MAAe,CAAnB,EAAsB;AACpBjD,QAAAA,CAAC,IAAI,CAAL;AACAiD,QAAAA,CAAC,MAAM,CAAP;AACD;;AACD,UAAI,CAACA,CAAC,GAAG,GAAL,MAAc,CAAlB,EAAqB;AACnBjD,QAAAA,CAAC,IAAI,CAAL;AACAiD,QAAAA,CAAC,MAAM,CAAP;AACD;;AACD,UAAI,CAACA,CAAC,GAAG,GAAL,MAAc,CAAlB,EAAqB;AACnBjD,QAAAA,CAAC,IAAI,CAAL;AACAiD,QAAAA,CAAC,MAAM,CAAP;AACD;;AACD,UAAI,CAACA,CAAC,GAAG,GAAL,MAAc,CAAlB,EAAqB;AACnBjD,QAAAA,CAAC;AACF;;AACD,aAAOA,CAAP;AACD,KA1BD,CA3lB0B,CAunB1B;;;AACA3C,IAAAA,EAAE,CAACF,SAAH,CAAagG,SAAb,GAAyB,SAASA,SAAT,GAAsB;AAC7C,UAAI7D,CAAC,GAAG,KAAK3B,KAAL,CAAW,KAAKC,MAAL,GAAc,CAAzB,CAAR;;AACA,UAAIwF,EAAE,GAAG,KAAKJ,UAAL,CAAgB1D,CAAhB,CAAT;;AACA,aAAO,CAAC,KAAK1B,MAAL,GAAc,CAAf,IAAoB,EAApB,GAAyBwF,EAAhC;AACD,KAJD;;AAMA,aAASC,UAAT,CAAqBpF,GAArB,EAA0B;AACxB,UAAIqB,CAAC,GAAG,IAAIpB,KAAJ,CAAUD,GAAG,CAACkF,SAAJ,EAAV,CAAR;;AAEA,WAAK,IAAIG,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGhE,CAAC,CAAC1B,MAA1B,EAAkC0F,GAAG,EAArC,EAAyC;AACvC,YAAI/D,GAAG,GAAI+D,GAAG,GAAG,EAAP,GAAa,CAAvB;AACA,YAAIC,IAAI,GAAGD,GAAG,GAAG,EAAjB;AAEAhE,QAAAA,CAAC,CAACgE,GAAD,CAAD,GAAS,CAACrF,GAAG,CAACN,KAAJ,CAAU4B,GAAV,IAAkB,KAAKgE,IAAxB,MAAmCA,IAA5C;AACD;;AAED,aAAOjE,CAAP;AACD,KAzoByB,CA2oB1B;;;AACAjC,IAAAA,EAAE,CAACF,SAAH,CAAaqG,QAAb,GAAwB,SAASA,QAAT,GAAqB;AAC3C,UAAI,KAAK1B,MAAL,EAAJ,EAAmB,OAAO,CAAP;AAEnB,UAAI9B,CAAC,GAAG,CAAR;;AACA,WAAK,IAAIZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKxB,MAAzB,EAAiCwB,CAAC,EAAlC,EAAsC;AACpC,YAAIuD,CAAC,GAAG,KAAKO,SAAL,CAAe,KAAKvF,KAAL,CAAWyB,CAAX,CAAf,CAAR;;AACAY,QAAAA,CAAC,IAAI2C,CAAL;AACA,YAAIA,CAAC,KAAK,EAAV,EAAc;AACf;;AACD,aAAO3C,CAAP;AACD,KAVD;;AAYA3C,IAAAA,EAAE,CAACF,SAAH,CAAaoF,UAAb,GAA0B,SAASA,UAAT,GAAuB;AAC/C,aAAOrD,IAAI,CAACC,IAAL,CAAU,KAAKgE,SAAL,KAAmB,CAA7B,CAAP;AACD,KAFD;;AAIA9F,IAAAA,EAAE,CAACF,SAAH,CAAasG,MAAb,GAAsB,SAASA,MAAT,CAAiBC,KAAjB,EAAwB;AAC5C,UAAI,KAAKhG,QAAL,KAAkB,CAAtB,EAAyB;AACvB,eAAO,KAAKiG,GAAL,GAAWC,KAAX,CAAiBF,KAAjB,EAAwBG,KAAxB,CAA8B,CAA9B,CAAP;AACD;;AACD,aAAO,KAAK5C,KAAL,EAAP;AACD,KALD;;AAOA5D,IAAAA,EAAE,CAACF,SAAH,CAAa2G,QAAb,GAAwB,SAASA,QAAT,CAAmBJ,KAAnB,EAA0B;AAChD,UAAI,KAAKK,KAAL,CAAWL,KAAK,GAAG,CAAnB,CAAJ,EAA2B;AACzB,eAAO,KAAKM,IAAL,CAAUN,KAAV,EAAiBG,KAAjB,CAAuB,CAAvB,EAA0BI,IAA1B,EAAP;AACD;;AACD,aAAO,KAAKhD,KAAL,EAAP;AACD,KALD;;AAOA5D,IAAAA,EAAE,CAACF,SAAH,CAAa+G,KAAb,GAAqB,SAASA,KAAT,GAAkB;AACrC,aAAO,KAAKxG,QAAL,KAAkB,CAAzB;AACD,KAFD,CA1qB0B,CA8qB1B;;;AACAL,IAAAA,EAAE,CAACF,SAAH,CAAagH,GAAb,GAAmB,SAASA,GAAT,GAAgB;AACjC,aAAO,KAAKlD,KAAL,GAAagD,IAAb,EAAP;AACD,KAFD;;AAIA5G,IAAAA,EAAE,CAACF,SAAH,CAAa8G,IAAb,GAAoB,SAASA,IAAT,GAAiB;AACnC,UAAI,CAAC,KAAKnC,MAAL,EAAL,EAAoB;AAClB,aAAKpE,QAAL,IAAiB,CAAjB;AACD;;AAED,aAAO,IAAP;AACD,KAND,CAnrB0B,CA2rB1B;;;AACAL,IAAAA,EAAE,CAACF,SAAH,CAAaiH,IAAb,GAAoB,SAASA,IAAT,CAAenG,GAAf,EAAoB;AACtC,aAAO,KAAKL,MAAL,GAAcK,GAAG,CAACL,MAAzB,EAAiC;AAC/B,aAAKD,KAAL,CAAW,KAAKC,MAAL,EAAX,IAA4B,CAA5B;AACD;;AAED,WAAK,IAAIwB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnB,GAAG,CAACL,MAAxB,EAAgCwB,CAAC,EAAjC,EAAqC;AACnC,aAAKzB,KAAL,CAAWyB,CAAX,IAAgB,KAAKzB,KAAL,CAAWyB,CAAX,IAAgBnB,GAAG,CAACN,KAAJ,CAAUyB,CAAV,CAAhC;AACD;;AAED,aAAO,KAAKI,KAAL,EAAP;AACD,KAVD;;AAYAnC,IAAAA,EAAE,CAACF,SAAH,CAAakH,GAAb,GAAmB,SAASA,GAAT,CAAcpG,GAAd,EAAmB;AACpCvB,MAAAA,MAAM,CAAC,CAAC,KAAKgB,QAAL,GAAgBO,GAAG,CAACP,QAArB,MAAmC,CAApC,CAAN;AACA,aAAO,KAAK0G,IAAL,CAAUnG,GAAV,CAAP;AACD,KAHD,CAxsB0B,CA6sB1B;;;AACAZ,IAAAA,EAAE,CAACF,SAAH,CAAamH,EAAb,GAAkB,SAASA,EAAT,CAAarG,GAAb,EAAkB;AAClC,UAAI,KAAKL,MAAL,GAAcK,GAAG,CAACL,MAAtB,EAA8B,OAAO,KAAKqD,KAAL,GAAaoD,GAAb,CAAiBpG,GAAjB,CAAP;AAC9B,aAAOA,GAAG,CAACgD,KAAJ,GAAYoD,GAAZ,CAAgB,IAAhB,CAAP;AACD,KAHD;;AAKAhH,IAAAA,EAAE,CAACF,SAAH,CAAaoH,GAAb,GAAmB,SAASA,GAAT,CAActG,GAAd,EAAmB;AACpC,UAAI,KAAKL,MAAL,GAAcK,GAAG,CAACL,MAAtB,EAA8B,OAAO,KAAKqD,KAAL,GAAamD,IAAb,CAAkBnG,GAAlB,CAAP;AAC9B,aAAOA,GAAG,CAACgD,KAAJ,GAAYmD,IAAZ,CAAiB,IAAjB,CAAP;AACD,KAHD,CAntB0B,CAwtB1B;;;AACA/G,IAAAA,EAAE,CAACF,SAAH,CAAaqH,KAAb,GAAqB,SAASA,KAAT,CAAgBvG,GAAhB,EAAqB;AACxC;AACA,UAAI0E,CAAJ;;AACA,UAAI,KAAK/E,MAAL,GAAcK,GAAG,CAACL,MAAtB,EAA8B;AAC5B+E,QAAAA,CAAC,GAAG1E,GAAJ;AACD,OAFD,MAEO;AACL0E,QAAAA,CAAC,GAAG,IAAJ;AACD;;AAED,WAAK,IAAIvD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuD,CAAC,CAAC/E,MAAtB,EAA8BwB,CAAC,EAA/B,EAAmC;AACjC,aAAKzB,KAAL,CAAWyB,CAAX,IAAgB,KAAKzB,KAAL,CAAWyB,CAAX,IAAgBnB,GAAG,CAACN,KAAJ,CAAUyB,CAAV,CAAhC;AACD;;AAED,WAAKxB,MAAL,GAAc+E,CAAC,CAAC/E,MAAhB;AAEA,aAAO,KAAK4B,KAAL,EAAP;AACD,KAhBD;;AAkBAnC,IAAAA,EAAE,CAACF,SAAH,CAAasH,IAAb,GAAoB,SAASA,IAAT,CAAexG,GAAf,EAAoB;AACtCvB,MAAAA,MAAM,CAAC,CAAC,KAAKgB,QAAL,GAAgBO,GAAG,CAACP,QAArB,MAAmC,CAApC,CAAN;AACA,aAAO,KAAK8G,KAAL,CAAWvG,GAAX,CAAP;AACD,KAHD,CA3uB0B,CAgvB1B;;;AACAZ,IAAAA,EAAE,CAACF,SAAH,CAAauH,GAAb,GAAmB,SAASA,GAAT,CAAczG,GAAd,EAAmB;AACpC,UAAI,KAAKL,MAAL,GAAcK,GAAG,CAACL,MAAtB,EAA8B,OAAO,KAAKqD,KAAL,GAAawD,IAAb,CAAkBxG,GAAlB,CAAP;AAC9B,aAAOA,GAAG,CAACgD,KAAJ,GAAYwD,IAAZ,CAAiB,IAAjB,CAAP;AACD,KAHD;;AAKApH,IAAAA,EAAE,CAACF,SAAH,CAAawH,IAAb,GAAoB,SAASA,IAAT,CAAe1G,GAAf,EAAoB;AACtC,UAAI,KAAKL,MAAL,GAAcK,GAAG,CAACL,MAAtB,EAA8B,OAAO,KAAKqD,KAAL,GAAauD,KAAb,CAAmBvG,GAAnB,CAAP;AAC9B,aAAOA,GAAG,CAACgD,KAAJ,GAAYuD,KAAZ,CAAkB,IAAlB,CAAP;AACD,KAHD,CAtvB0B,CA2vB1B;;;AACAnH,IAAAA,EAAE,CAACF,SAAH,CAAayH,KAAb,GAAqB,SAASA,KAAT,CAAgB3G,GAAhB,EAAqB;AACxC;AACA,UAAI4G,CAAJ;AACA,UAAIlC,CAAJ;;AACA,UAAI,KAAK/E,MAAL,GAAcK,GAAG,CAACL,MAAtB,EAA8B;AAC5BiH,QAAAA,CAAC,GAAG,IAAJ;AACAlC,QAAAA,CAAC,GAAG1E,GAAJ;AACD,OAHD,MAGO;AACL4G,QAAAA,CAAC,GAAG5G,GAAJ;AACA0E,QAAAA,CAAC,GAAG,IAAJ;AACD;;AAED,WAAK,IAAIvD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuD,CAAC,CAAC/E,MAAtB,EAA8BwB,CAAC,EAA/B,EAAmC;AACjC,aAAKzB,KAAL,CAAWyB,CAAX,IAAgByF,CAAC,CAAClH,KAAF,CAAQyB,CAAR,IAAauD,CAAC,CAAChF,KAAF,CAAQyB,CAAR,CAA7B;AACD;;AAED,UAAI,SAASyF,CAAb,EAAgB;AACd,eAAOzF,CAAC,GAAGyF,CAAC,CAACjH,MAAb,EAAqBwB,CAAC,EAAtB,EAA0B;AACxB,eAAKzB,KAAL,CAAWyB,CAAX,IAAgByF,CAAC,CAAClH,KAAF,CAAQyB,CAAR,CAAhB;AACD;AACF;;AAED,WAAKxB,MAAL,GAAciH,CAAC,CAACjH,MAAhB;AAEA,aAAO,KAAK4B,KAAL,EAAP;AACD,KAzBD;;AA2BAnC,IAAAA,EAAE,CAACF,SAAH,CAAa2H,IAAb,GAAoB,SAASA,IAAT,CAAe7G,GAAf,EAAoB;AACtCvB,MAAAA,MAAM,CAAC,CAAC,KAAKgB,QAAL,GAAgBO,GAAG,CAACP,QAArB,MAAmC,CAApC,CAAN;AACA,aAAO,KAAKkH,KAAL,CAAW3G,GAAX,CAAP;AACD,KAHD,CAvxB0B,CA4xB1B;;;AACAZ,IAAAA,EAAE,CAACF,SAAH,CAAa4H,GAAb,GAAmB,SAASA,GAAT,CAAc9G,GAAd,EAAmB;AACpC,UAAI,KAAKL,MAAL,GAAcK,GAAG,CAACL,MAAtB,EAA8B,OAAO,KAAKqD,KAAL,GAAa6D,IAAb,CAAkB7G,GAAlB,CAAP;AAC9B,aAAOA,GAAG,CAACgD,KAAJ,GAAY6D,IAAZ,CAAiB,IAAjB,CAAP;AACD,KAHD;;AAKAzH,IAAAA,EAAE,CAACF,SAAH,CAAa6H,IAAb,GAAoB,SAASA,IAAT,CAAe/G,GAAf,EAAoB;AACtC,UAAI,KAAKL,MAAL,GAAcK,GAAG,CAACL,MAAtB,EAA8B,OAAO,KAAKqD,KAAL,GAAa2D,KAAb,CAAmB3G,GAAnB,CAAP;AAC9B,aAAOA,GAAG,CAACgD,KAAJ,GAAY2D,KAAZ,CAAkB,IAAlB,CAAP;AACD,KAHD,CAlyB0B,CAuyB1B;;;AACAvH,IAAAA,EAAE,CAACF,SAAH,CAAayG,KAAb,GAAqB,SAASA,KAAT,CAAgBF,KAAhB,EAAuB;AAC1ChH,MAAAA,MAAM,CAAC,OAAOgH,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,IAAI,CAAvC,CAAN;AAEA,UAAIuB,WAAW,GAAG/F,IAAI,CAACC,IAAL,CAAUuE,KAAK,GAAG,EAAlB,IAAwB,CAA1C;AACA,UAAIwB,QAAQ,GAAGxB,KAAK,GAAG,EAAvB,CAJ0C,CAM1C;;AACA,WAAKxC,OAAL,CAAa+D,WAAb;;AAEA,UAAIC,QAAQ,GAAG,CAAf,EAAkB;AAChBD,QAAAA,WAAW;AACZ,OAXyC,CAa1C;;;AACA,WAAK,IAAI7F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6F,WAApB,EAAiC7F,CAAC,EAAlC,EAAsC;AACpC,aAAKzB,KAAL,CAAWyB,CAAX,IAAgB,CAAC,KAAKzB,KAAL,CAAWyB,CAAX,CAAD,GAAiB,SAAjC;AACD,OAhByC,CAkB1C;;;AACA,UAAI8F,QAAQ,GAAG,CAAf,EAAkB;AAChB,aAAKvH,KAAL,CAAWyB,CAAX,IAAgB,CAAC,KAAKzB,KAAL,CAAWyB,CAAX,CAAD,GAAkB,aAAc,KAAK8F,QAArD;AACD,OArByC,CAuB1C;;;AACA,aAAO,KAAK1F,KAAL,EAAP;AACD,KAzBD;;AA2BAnC,IAAAA,EAAE,CAACF,SAAH,CAAa6G,IAAb,GAAoB,SAASA,IAAT,CAAeN,KAAf,EAAsB;AACxC,aAAO,KAAKzC,KAAL,GAAa2C,KAAb,CAAmBF,KAAnB,CAAP;AACD,KAFD,CAn0B0B,CAu0B1B;;;AACArG,IAAAA,EAAE,CAACF,SAAH,CAAagI,IAAb,GAAoB,SAASA,IAAT,CAAe7B,GAAf,EAAoB3G,GAApB,EAAyB;AAC3CD,MAAAA,MAAM,CAAC,OAAO4G,GAAP,KAAe,QAAf,IAA2BA,GAAG,IAAI,CAAnC,CAAN;AAEA,UAAI/D,GAAG,GAAI+D,GAAG,GAAG,EAAP,GAAa,CAAvB;AACA,UAAIC,IAAI,GAAGD,GAAG,GAAG,EAAjB;;AAEA,WAAKpC,OAAL,CAAa3B,GAAG,GAAG,CAAnB;;AAEA,UAAI5C,GAAJ,EAAS;AACP,aAAKgB,KAAL,CAAW4B,GAAX,IAAkB,KAAK5B,KAAL,CAAW4B,GAAX,IAAmB,KAAKgE,IAA1C;AACD,OAFD,MAEO;AACL,aAAK5F,KAAL,CAAW4B,GAAX,IAAkB,KAAK5B,KAAL,CAAW4B,GAAX,IAAkB,EAAE,KAAKgE,IAAP,CAApC;AACD;;AAED,aAAO,KAAK/D,KAAL,EAAP;AACD,KAfD,CAx0B0B,CAy1B1B;;;AACAnC,IAAAA,EAAE,CAACF,SAAH,CAAaiI,IAAb,GAAoB,SAASA,IAAT,CAAenH,GAAf,EAAoB;AACtC,UAAI+B,CAAJ,CADsC,CAGtC;;AACA,UAAI,KAAKtC,QAAL,KAAkB,CAAlB,IAAuBO,GAAG,CAACP,QAAJ,KAAiB,CAA5C,EAA+C;AAC7C,aAAKA,QAAL,GAAgB,CAAhB;AACAsC,QAAAA,CAAC,GAAG,KAAKqF,IAAL,CAAUpH,GAAV,CAAJ;AACA,aAAKP,QAAL,IAAiB,CAAjB;AACA,eAAO,KAAK0D,SAAL,EAAP,CAJ6C,CAM/C;AACC,OAPD,MAOO,IAAI,KAAK1D,QAAL,KAAkB,CAAlB,IAAuBO,GAAG,CAACP,QAAJ,KAAiB,CAA5C,EAA+C;AACpDO,QAAAA,GAAG,CAACP,QAAJ,GAAe,CAAf;AACAsC,QAAAA,CAAC,GAAG,KAAKqF,IAAL,CAAUpH,GAAV,CAAJ;AACAA,QAAAA,GAAG,CAACP,QAAJ,GAAe,CAAf;AACA,eAAOsC,CAAC,CAACoB,SAAF,EAAP;AACD,OAhBqC,CAkBtC;;;AACA,UAAIyD,CAAJ,EAAOlC,CAAP;;AACA,UAAI,KAAK/E,MAAL,GAAcK,GAAG,CAACL,MAAtB,EAA8B;AAC5BiH,QAAAA,CAAC,GAAG,IAAJ;AACAlC,QAAAA,CAAC,GAAG1E,GAAJ;AACD,OAHD,MAGO;AACL4G,QAAAA,CAAC,GAAG5G,GAAJ;AACA0E,QAAAA,CAAC,GAAG,IAAJ;AACD;;AAED,UAAIhB,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAIvC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuD,CAAC,CAAC/E,MAAtB,EAA8BwB,CAAC,EAA/B,EAAmC;AACjCY,QAAAA,CAAC,GAAG,CAAC6E,CAAC,CAAClH,KAAF,CAAQyB,CAAR,IAAa,CAAd,KAAoBuD,CAAC,CAAChF,KAAF,CAAQyB,CAAR,IAAa,CAAjC,IAAsCuC,KAA1C;AACA,aAAKhE,KAAL,CAAWyB,CAAX,IAAgBY,CAAC,GAAG,SAApB;AACA2B,QAAAA,KAAK,GAAG3B,CAAC,KAAK,EAAd;AACD;;AACD,aAAO2B,KAAK,KAAK,CAAV,IAAevC,CAAC,GAAGyF,CAAC,CAACjH,MAA5B,EAAoCwB,CAAC,EAArC,EAAyC;AACvCY,QAAAA,CAAC,GAAG,CAAC6E,CAAC,CAAClH,KAAF,CAAQyB,CAAR,IAAa,CAAd,IAAmBuC,KAAvB;AACA,aAAKhE,KAAL,CAAWyB,CAAX,IAAgBY,CAAC,GAAG,SAApB;AACA2B,QAAAA,KAAK,GAAG3B,CAAC,KAAK,EAAd;AACD;;AAED,WAAKpC,MAAL,GAAciH,CAAC,CAACjH,MAAhB;;AACA,UAAI+D,KAAK,KAAK,CAAd,EAAiB;AACf,aAAKhE,KAAL,CAAW,KAAKC,MAAhB,IAA0B+D,KAA1B;AACA,aAAK/D,MAAL,GAFe,CAGjB;AACC,OAJD,MAIO,IAAIiH,CAAC,KAAK,IAAV,EAAgB;AACrB,eAAOzF,CAAC,GAAGyF,CAAC,CAACjH,MAAb,EAAqBwB,CAAC,EAAtB,EAA0B;AACxB,eAAKzB,KAAL,CAAWyB,CAAX,IAAgByF,CAAC,CAAClH,KAAF,CAAQyB,CAAR,CAAhB;AACD;AACF;;AAED,aAAO,IAAP;AACD,KApDD,CA11B0B,CAg5B1B;;;AACA/B,IAAAA,EAAE,CAACF,SAAH,CAAamI,GAAb,GAAmB,SAASA,GAAT,CAAcrH,GAAd,EAAmB;AACpC,UAAIyE,GAAJ;;AACA,UAAIzE,GAAG,CAACP,QAAJ,KAAiB,CAAjB,IAAsB,KAAKA,QAAL,KAAkB,CAA5C,EAA+C;AAC7CO,QAAAA,GAAG,CAACP,QAAJ,GAAe,CAAf;AACAgF,QAAAA,GAAG,GAAG,KAAK6C,GAAL,CAAStH,GAAT,CAAN;AACAA,QAAAA,GAAG,CAACP,QAAJ,IAAgB,CAAhB;AACA,eAAOgF,GAAP;AACD,OALD,MAKO,IAAIzE,GAAG,CAACP,QAAJ,KAAiB,CAAjB,IAAsB,KAAKA,QAAL,KAAkB,CAA5C,EAA+C;AACpD,aAAKA,QAAL,GAAgB,CAAhB;AACAgF,QAAAA,GAAG,GAAGzE,GAAG,CAACsH,GAAJ,CAAQ,IAAR,CAAN;AACA,aAAK7H,QAAL,GAAgB,CAAhB;AACA,eAAOgF,GAAP;AACD;;AAED,UAAI,KAAK9E,MAAL,GAAcK,GAAG,CAACL,MAAtB,EAA8B,OAAO,KAAKqD,KAAL,GAAamE,IAAb,CAAkBnH,GAAlB,CAAP;AAE9B,aAAOA,GAAG,CAACgD,KAAJ,GAAYmE,IAAZ,CAAiB,IAAjB,CAAP;AACD,KAjBD,CAj5B0B,CAo6B1B;;;AACA/H,IAAAA,EAAE,CAACF,SAAH,CAAakI,IAAb,GAAoB,SAASA,IAAT,CAAepH,GAAf,EAAoB;AACtC;AACA,UAAIA,GAAG,CAACP,QAAJ,KAAiB,CAArB,EAAwB;AACtBO,QAAAA,GAAG,CAACP,QAAJ,GAAe,CAAf;AACA,YAAIsC,CAAC,GAAG,KAAKoF,IAAL,CAAUnH,GAAV,CAAR;AACAA,QAAAA,GAAG,CAACP,QAAJ,GAAe,CAAf;AACA,eAAOsC,CAAC,CAACoB,SAAF,EAAP,CAJsB,CAMxB;AACC,OAPD,MAOO,IAAI,KAAK1D,QAAL,KAAkB,CAAtB,EAAyB;AAC9B,aAAKA,QAAL,GAAgB,CAAhB;AACA,aAAK0H,IAAL,CAAUnH,GAAV;AACA,aAAKP,QAAL,GAAgB,CAAhB;AACA,eAAO,KAAK0D,SAAL,EAAP;AACD,OAdqC,CAgBtC;;;AACA,UAAI7C,GAAG,GAAG,KAAKA,GAAL,CAASN,GAAT,CAAV,CAjBsC,CAmBtC;;AACA,UAAIM,GAAG,KAAK,CAAZ,EAAe;AACb,aAAKb,QAAL,GAAgB,CAAhB;AACA,aAAKE,MAAL,GAAc,CAAd;AACA,aAAKD,KAAL,CAAW,CAAX,IAAgB,CAAhB;AACA,eAAO,IAAP;AACD,OAzBqC,CA2BtC;;;AACA,UAAIkH,CAAJ,EAAOlC,CAAP;;AACA,UAAIpE,GAAG,GAAG,CAAV,EAAa;AACXsG,QAAAA,CAAC,GAAG,IAAJ;AACAlC,QAAAA,CAAC,GAAG1E,GAAJ;AACD,OAHD,MAGO;AACL4G,QAAAA,CAAC,GAAG5G,GAAJ;AACA0E,QAAAA,CAAC,GAAG,IAAJ;AACD;;AAED,UAAIhB,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAIvC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuD,CAAC,CAAC/E,MAAtB,EAA8BwB,CAAC,EAA/B,EAAmC;AACjCY,QAAAA,CAAC,GAAG,CAAC6E,CAAC,CAAClH,KAAF,CAAQyB,CAAR,IAAa,CAAd,KAAoBuD,CAAC,CAAChF,KAAF,CAAQyB,CAAR,IAAa,CAAjC,IAAsCuC,KAA1C;AACAA,QAAAA,KAAK,GAAG3B,CAAC,IAAI,EAAb;AACA,aAAKrC,KAAL,CAAWyB,CAAX,IAAgBY,CAAC,GAAG,SAApB;AACD;;AACD,aAAO2B,KAAK,KAAK,CAAV,IAAevC,CAAC,GAAGyF,CAAC,CAACjH,MAA5B,EAAoCwB,CAAC,EAArC,EAAyC;AACvCY,QAAAA,CAAC,GAAG,CAAC6E,CAAC,CAAClH,KAAF,CAAQyB,CAAR,IAAa,CAAd,IAAmBuC,KAAvB;AACAA,QAAAA,KAAK,GAAG3B,CAAC,IAAI,EAAb;AACA,aAAKrC,KAAL,CAAWyB,CAAX,IAAgBY,CAAC,GAAG,SAApB;AACD,OA/CqC,CAiDtC;;;AACA,UAAI2B,KAAK,KAAK,CAAV,IAAevC,CAAC,GAAGyF,CAAC,CAACjH,MAArB,IAA+BiH,CAAC,KAAK,IAAzC,EAA+C;AAC7C,eAAOzF,CAAC,GAAGyF,CAAC,CAACjH,MAAb,EAAqBwB,CAAC,EAAtB,EAA0B;AACxB,eAAKzB,KAAL,CAAWyB,CAAX,IAAgByF,CAAC,CAAClH,KAAF,CAAQyB,CAAR,CAAhB;AACD;AACF;;AAED,WAAKxB,MAAL,GAAcsB,IAAI,CAACd,GAAL,CAAS,KAAKR,MAAd,EAAsBwB,CAAtB,CAAd;;AAEA,UAAIyF,CAAC,KAAK,IAAV,EAAgB;AACd,aAAKnH,QAAL,GAAgB,CAAhB;AACD;;AAED,aAAO,KAAK8B,KAAL,EAAP;AACD,KA/DD,CAr6B0B,CAs+B1B;;;AACAnC,IAAAA,EAAE,CAACF,SAAH,CAAaoI,GAAb,GAAmB,SAASA,GAAT,CAActH,GAAd,EAAmB;AACpC,aAAO,KAAKgD,KAAL,GAAaoE,IAAb,CAAkBpH,GAAlB,CAAP;AACD,KAFD;;AAIA,aAASuH,UAAT,CAAqB1J,IAArB,EAA2BmC,GAA3B,EAAgCyD,GAAhC,EAAqC;AACnCA,MAAAA,GAAG,CAAChE,QAAJ,GAAeO,GAAG,CAACP,QAAJ,GAAe5B,IAAI,CAAC4B,QAAnC;AACA,UAAI4C,GAAG,GAAIxE,IAAI,CAAC8B,MAAL,GAAcK,GAAG,CAACL,MAAnB,GAA6B,CAAvC;AACA8D,MAAAA,GAAG,CAAC9D,MAAJ,GAAa0C,GAAb;AACAA,MAAAA,GAAG,GAAIA,GAAG,GAAG,CAAP,GAAY,CAAlB,CAJmC,CAMnC;;AACA,UAAIuE,CAAC,GAAG/I,IAAI,CAAC6B,KAAL,CAAW,CAAX,IAAgB,CAAxB;AACA,UAAIgF,CAAC,GAAG1E,GAAG,CAACN,KAAJ,CAAU,CAAV,IAAe,CAAvB;AACA,UAAIqC,CAAC,GAAG6E,CAAC,GAAGlC,CAAZ;AAEA,UAAI8C,EAAE,GAAGzF,CAAC,GAAG,SAAb;AACA,UAAI2B,KAAK,GAAI3B,CAAC,GAAG,SAAL,GAAkB,CAA9B;AACA0B,MAAAA,GAAG,CAAC/D,KAAJ,CAAU,CAAV,IAAe8H,EAAf;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpF,GAApB,EAAyBoF,CAAC,EAA1B,EAA8B;AAC5B;AACA;AACA,YAAIC,MAAM,GAAGhE,KAAK,KAAK,EAAvB;AACA,YAAIiE,KAAK,GAAGjE,KAAK,GAAG,SAApB;AACA,YAAIkE,IAAI,GAAG3G,IAAI,CAACV,GAAL,CAASkH,CAAT,EAAYzH,GAAG,CAACL,MAAJ,GAAa,CAAzB,CAAX;;AACA,aAAK,IAAIyB,CAAC,GAAGH,IAAI,CAACd,GAAL,CAAS,CAAT,EAAYsH,CAAC,GAAG5J,IAAI,CAAC8B,MAAT,GAAkB,CAA9B,CAAb,EAA+CyB,CAAC,IAAIwG,IAApD,EAA0DxG,CAAC,EAA3D,EAA+D;AAC7D,cAAID,CAAC,GAAIsG,CAAC,GAAGrG,CAAL,GAAU,CAAlB;AACAwF,UAAAA,CAAC,GAAG/I,IAAI,CAAC6B,KAAL,CAAWyB,CAAX,IAAgB,CAApB;AACAuD,UAAAA,CAAC,GAAG1E,GAAG,CAACN,KAAJ,CAAU0B,CAAV,IAAe,CAAnB;AACAW,UAAAA,CAAC,GAAG6E,CAAC,GAAGlC,CAAJ,GAAQiD,KAAZ;AACAD,UAAAA,MAAM,IAAK3F,CAAC,GAAG,SAAL,GAAkB,CAA5B;AACA4F,UAAAA,KAAK,GAAG5F,CAAC,GAAG,SAAZ;AACD;;AACD0B,QAAAA,GAAG,CAAC/D,KAAJ,CAAU+H,CAAV,IAAeE,KAAK,GAAG,CAAvB;AACAjE,QAAAA,KAAK,GAAGgE,MAAM,GAAG,CAAjB;AACD;;AACD,UAAIhE,KAAK,KAAK,CAAd,EAAiB;AACfD,QAAAA,GAAG,CAAC/D,KAAJ,CAAU+H,CAAV,IAAe/D,KAAK,GAAG,CAAvB;AACD,OAFD,MAEO;AACLD,QAAAA,GAAG,CAAC9D,MAAJ;AACD;;AAED,aAAO8D,GAAG,CAAClC,KAAJ,EAAP;AACD,KAlhCyB,CAohC1B;AACA;AACA;;;AACA,QAAIsG,WAAW,GAAG,SAASA,WAAT,CAAsBhK,IAAtB,EAA4BmC,GAA5B,EAAiCyD,GAAjC,EAAsC;AACtD,UAAImD,CAAC,GAAG/I,IAAI,CAAC6B,KAAb;AACA,UAAIgF,CAAC,GAAG1E,GAAG,CAACN,KAAZ;AACA,UAAIoI,CAAC,GAAGrE,GAAG,CAAC/D,KAAZ;AACA,UAAIiC,CAAC,GAAG,CAAR;AACA,UAAI6F,EAAJ;AACA,UAAIO,GAAJ;AACA,UAAI5C,EAAJ;AACA,UAAI6C,EAAE,GAAGpB,CAAC,CAAC,CAAD,CAAD,GAAO,CAAhB;AACA,UAAIqB,GAAG,GAAGD,EAAE,GAAG,MAAf;AACA,UAAIE,GAAG,GAAGF,EAAE,KAAK,EAAjB;AACA,UAAIG,EAAE,GAAGvB,CAAC,CAAC,CAAD,CAAD,GAAO,CAAhB;AACA,UAAIwB,GAAG,GAAGD,EAAE,GAAG,MAAf;AACA,UAAIE,GAAG,GAAGF,EAAE,KAAK,EAAjB;AACA,UAAIG,EAAE,GAAG1B,CAAC,CAAC,CAAD,CAAD,GAAO,CAAhB;AACA,UAAI2B,GAAG,GAAGD,EAAE,GAAG,MAAf;AACA,UAAIE,GAAG,GAAGF,EAAE,KAAK,EAAjB;AACA,UAAIG,EAAE,GAAG7B,CAAC,CAAC,CAAD,CAAD,GAAO,CAAhB;AACA,UAAI8B,GAAG,GAAGD,EAAE,GAAG,MAAf;AACA,UAAIE,GAAG,GAAGF,EAAE,KAAK,EAAjB;AACA,UAAIG,EAAE,GAAGhC,CAAC,CAAC,CAAD,CAAD,GAAO,CAAhB;AACA,UAAIiC,GAAG,GAAGD,EAAE,GAAG,MAAf;AACA,UAAIE,GAAG,GAAGF,EAAE,KAAK,EAAjB;AACA,UAAIG,EAAE,GAAGnC,CAAC,CAAC,CAAD,CAAD,GAAO,CAAhB;AACA,UAAIoC,GAAG,GAAGD,EAAE,GAAG,MAAf;AACA,UAAIE,GAAG,GAAGF,EAAE,KAAK,EAAjB;AACA,UAAIG,EAAE,GAAGtC,CAAC,CAAC,CAAD,CAAD,GAAO,CAAhB;AACA,UAAIuC,GAAG,GAAGD,EAAE,GAAG,MAAf;AACA,UAAIE,GAAG,GAAGF,EAAE,KAAK,EAAjB;AACA,UAAIG,EAAE,GAAGzC,CAAC,CAAC,CAAD,CAAD,GAAO,CAAhB;AACA,UAAI0C,GAAG,GAAGD,EAAE,GAAG,MAAf;AACA,UAAIE,GAAG,GAAGF,EAAE,KAAK,EAAjB;AACA,UAAIG,EAAE,GAAG5C,CAAC,CAAC,CAAD,CAAD,GAAO,CAAhB;AACA,UAAI6C,GAAG,GAAGD,EAAE,GAAG,MAAf;AACA,UAAIE,GAAG,GAAGF,EAAE,KAAK,EAAjB;AACA,UAAIG,EAAE,GAAG/C,CAAC,CAAC,CAAD,CAAD,GAAO,CAAhB;AACA,UAAIgD,GAAG,GAAGD,EAAE,GAAG,MAAf;AACA,UAAIE,GAAG,GAAGF,EAAE,KAAK,EAAjB;AACA,UAAIG,EAAE,GAAGpF,CAAC,CAAC,CAAD,CAAD,GAAO,CAAhB;AACA,UAAIqF,GAAG,GAAGD,EAAE,GAAG,MAAf;AACA,UAAIE,GAAG,GAAGF,EAAE,KAAK,EAAjB;AACA,UAAIG,EAAE,GAAGvF,CAAC,CAAC,CAAD,CAAD,GAAO,CAAhB;AACA,UAAIwF,GAAG,GAAGD,EAAE,GAAG,MAAf;AACA,UAAIE,GAAG,GAAGF,EAAE,KAAK,EAAjB;AACA,UAAIG,EAAE,GAAG1F,CAAC,CAAC,CAAD,CAAD,GAAO,CAAhB;AACA,UAAI2F,GAAG,GAAGD,EAAE,GAAG,MAAf;AACA,UAAIE,GAAG,GAAGF,EAAE,KAAK,EAAjB;AACA,UAAIG,EAAE,GAAG7F,CAAC,CAAC,CAAD,CAAD,GAAO,CAAhB;AACA,UAAI8F,GAAG,GAAGD,EAAE,GAAG,MAAf;AACA,UAAIE,GAAG,GAAGF,EAAE,KAAK,EAAjB;AACA,UAAIG,EAAE,GAAGhG,CAAC,CAAC,CAAD,CAAD,GAAO,CAAhB;AACA,UAAIiG,GAAG,GAAGD,EAAE,GAAG,MAAf;AACA,UAAIE,GAAG,GAAGF,EAAE,KAAK,EAAjB;AACA,UAAIG,EAAE,GAAGnG,CAAC,CAAC,CAAD,CAAD,GAAO,CAAhB;AACA,UAAIoG,GAAG,GAAGD,EAAE,GAAG,MAAf;AACA,UAAIE,GAAG,GAAGF,EAAE,KAAK,EAAjB;AACA,UAAIG,EAAE,GAAGtG,CAAC,CAAC,CAAD,CAAD,GAAO,CAAhB;AACA,UAAIuG,GAAG,GAAGD,EAAE,GAAG,MAAf;AACA,UAAIE,GAAG,GAAGF,EAAE,KAAK,EAAjB;AACA,UAAIG,EAAE,GAAGzG,CAAC,CAAC,CAAD,CAAD,GAAO,CAAhB;AACA,UAAI0G,GAAG,GAAGD,EAAE,GAAG,MAAf;AACA,UAAIE,GAAG,GAAGF,EAAE,KAAK,EAAjB;AACA,UAAIG,EAAE,GAAG5G,CAAC,CAAC,CAAD,CAAD,GAAO,CAAhB;AACA,UAAI6G,GAAG,GAAGD,EAAE,GAAG,MAAf;AACA,UAAIE,GAAG,GAAGF,EAAE,KAAK,EAAjB;AACA,UAAIG,EAAE,GAAG/G,CAAC,CAAC,CAAD,CAAD,GAAO,CAAhB;AACA,UAAIgH,GAAG,GAAGD,EAAE,GAAG,MAAf;AACA,UAAIE,GAAG,GAAGF,EAAE,KAAK,EAAjB;AAEAhI,MAAAA,GAAG,CAAChE,QAAJ,GAAe5B,IAAI,CAAC4B,QAAL,GAAgBO,GAAG,CAACP,QAAnC;AACAgE,MAAAA,GAAG,CAAC9D,MAAJ,GAAa,EAAb;AACA;;AACA6H,MAAAA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU3D,GAAV,EAAe8B,GAAf,CAAL;AACAhC,MAAAA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU3D,GAAV,EAAe+B,GAAf,CAAN;AACAjC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU1D,GAAV,EAAe6B,GAAf,CAAP,GAA8B,CAApC;AACA5E,MAAAA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU1D,GAAV,EAAe8B,GAAf,CAAL;AACA,UAAI6B,EAAE,GAAI,CAAElK,CAAC,GAAG6F,EAAL,GAAW,CAAZ,KAAkB,CAACO,GAAG,GAAG,MAAP,KAAkB,EAApC,CAAD,GAA4C,CAArD;AACApG,MAAAA,CAAC,GAAI,CAAEwD,EAAE,IAAI4C,GAAG,KAAK,EAAZ,CAAH,GAAsB,CAAvB,KAA6B8D,EAAE,KAAK,EAApC,CAAD,GAA4C,CAAhD;AACAA,MAAAA,EAAE,IAAI,SAAN;AACA;;AACArE,MAAAA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUxD,GAAV,EAAe2B,GAAf,CAAL;AACAhC,MAAAA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUxD,GAAV,EAAe4B,GAAf,CAAN;AACAjC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUvD,GAAV,EAAe0B,GAAf,CAAP,GAA8B,CAApC;AACA5E,MAAAA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUvD,GAAV,EAAe2B,GAAf,CAAL;AACAxC,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU3D,GAAV,EAAeiC,GAAf,CAAN,GAA6B,CAAlC;AACAnC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU3D,GAAV,EAAekC,GAAf,CAAP,GAA8B,CAApC;AACApC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU1D,GAAV,EAAegC,GAAf,CAAP,GAA8B,CAApC;AACA/E,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU1D,GAAV,EAAeiC,GAAf,CAAN,GAA6B,CAAlC;AACA,UAAI2B,EAAE,GAAI,CAAEnK,CAAC,GAAG6F,EAAL,GAAW,CAAZ,KAAkB,CAACO,GAAG,GAAG,MAAP,KAAkB,EAApC,CAAD,GAA4C,CAArD;AACApG,MAAAA,CAAC,GAAI,CAAEwD,EAAE,IAAI4C,GAAG,KAAK,EAAZ,CAAH,GAAsB,CAAvB,KAA6B+D,EAAE,KAAK,EAApC,CAAD,GAA4C,CAAhD;AACAA,MAAAA,EAAE,IAAI,SAAN;AACA;;AACAtE,MAAAA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUrD,GAAV,EAAewB,GAAf,CAAL;AACAhC,MAAAA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUrD,GAAV,EAAeyB,GAAf,CAAN;AACAjC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUpD,GAAV,EAAeuB,GAAf,CAAP,GAA8B,CAApC;AACA5E,MAAAA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUpD,GAAV,EAAewB,GAAf,CAAL;AACAxC,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUxD,GAAV,EAAe8B,GAAf,CAAN,GAA6B,CAAlC;AACAnC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUxD,GAAV,EAAe+B,GAAf,CAAP,GAA8B,CAApC;AACApC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUvD,GAAV,EAAe6B,GAAf,CAAP,GAA8B,CAApC;AACA/E,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUvD,GAAV,EAAe8B,GAAf,CAAN,GAA6B,CAAlC;AACA3C,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU3D,GAAV,EAAeoC,GAAf,CAAN,GAA6B,CAAlC;AACAtC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU3D,GAAV,EAAeqC,GAAf,CAAP,GAA8B,CAApC;AACAvC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU1D,GAAV,EAAemC,GAAf,CAAP,GAA8B,CAApC;AACAlF,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU1D,GAAV,EAAeoC,GAAf,CAAN,GAA6B,CAAlC;AACA,UAAIyB,EAAE,GAAI,CAAEpK,CAAC,GAAG6F,EAAL,GAAW,CAAZ,KAAkB,CAACO,GAAG,GAAG,MAAP,KAAkB,EAApC,CAAD,GAA4C,CAArD;AACApG,MAAAA,CAAC,GAAI,CAAEwD,EAAE,IAAI4C,GAAG,KAAK,EAAZ,CAAH,GAAsB,CAAvB,KAA6BgE,EAAE,KAAK,EAApC,CAAD,GAA4C,CAAhD;AACAA,MAAAA,EAAE,IAAI,SAAN;AACA;;AACAvE,MAAAA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUlD,GAAV,EAAeqB,GAAf,CAAL;AACAhC,MAAAA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUlD,GAAV,EAAesB,GAAf,CAAN;AACAjC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUjD,GAAV,EAAeoB,GAAf,CAAP,GAA8B,CAApC;AACA5E,MAAAA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUjD,GAAV,EAAeqB,GAAf,CAAL;AACAxC,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUrD,GAAV,EAAe2B,GAAf,CAAN,GAA6B,CAAlC;AACAnC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUrD,GAAV,EAAe4B,GAAf,CAAP,GAA8B,CAApC;AACApC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUpD,GAAV,EAAe0B,GAAf,CAAP,GAA8B,CAApC;AACA/E,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUpD,GAAV,EAAe2B,GAAf,CAAN,GAA6B,CAAlC;AACA3C,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUxD,GAAV,EAAeiC,GAAf,CAAN,GAA6B,CAAlC;AACAtC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUxD,GAAV,EAAekC,GAAf,CAAP,GAA8B,CAApC;AACAvC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUvD,GAAV,EAAegC,GAAf,CAAP,GAA8B,CAApC;AACAlF,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUvD,GAAV,EAAeiC,GAAf,CAAN,GAA6B,CAAlC;AACA9C,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU3D,GAAV,EAAeuC,GAAf,CAAN,GAA6B,CAAlC;AACAzC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU3D,GAAV,EAAewC,GAAf,CAAP,GAA8B,CAApC;AACA1C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU1D,GAAV,EAAesC,GAAf,CAAP,GAA8B,CAApC;AACArF,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU1D,GAAV,EAAeuC,GAAf,CAAN,GAA6B,CAAlC;AACA,UAAIuB,EAAE,GAAI,CAAErK,CAAC,GAAG6F,EAAL,GAAW,CAAZ,KAAkB,CAACO,GAAG,GAAG,MAAP,KAAkB,EAApC,CAAD,GAA4C,CAArD;AACApG,MAAAA,CAAC,GAAI,CAAEwD,EAAE,IAAI4C,GAAG,KAAK,EAAZ,CAAH,GAAsB,CAAvB,KAA6BiE,EAAE,KAAK,EAApC,CAAD,GAA4C,CAAhD;AACAA,MAAAA,EAAE,IAAI,SAAN;AACA;;AACAxE,MAAAA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU/C,GAAV,EAAekB,GAAf,CAAL;AACAhC,MAAAA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU/C,GAAV,EAAemB,GAAf,CAAN;AACAjC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU9C,GAAV,EAAeiB,GAAf,CAAP,GAA8B,CAApC;AACA5E,MAAAA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU9C,GAAV,EAAekB,GAAf,CAAL;AACAxC,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUlD,GAAV,EAAewB,GAAf,CAAN,GAA6B,CAAlC;AACAnC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUlD,GAAV,EAAeyB,GAAf,CAAP,GAA8B,CAApC;AACApC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUjD,GAAV,EAAeuB,GAAf,CAAP,GAA8B,CAApC;AACA/E,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUjD,GAAV,EAAewB,GAAf,CAAN,GAA6B,CAAlC;AACA3C,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUrD,GAAV,EAAe8B,GAAf,CAAN,GAA6B,CAAlC;AACAtC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUrD,GAAV,EAAe+B,GAAf,CAAP,GAA8B,CAApC;AACAvC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUpD,GAAV,EAAe6B,GAAf,CAAP,GAA8B,CAApC;AACAlF,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUpD,GAAV,EAAe8B,GAAf,CAAN,GAA6B,CAAlC;AACA9C,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUxD,GAAV,EAAeoC,GAAf,CAAN,GAA6B,CAAlC;AACAzC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUxD,GAAV,EAAeqC,GAAf,CAAP,GAA8B,CAApC;AACA1C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUvD,GAAV,EAAemC,GAAf,CAAP,GAA8B,CAApC;AACArF,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUvD,GAAV,EAAeoC,GAAf,CAAN,GAA6B,CAAlC;AACAjD,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU3D,GAAV,EAAe0C,GAAf,CAAN,GAA6B,CAAlC;AACA5C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU3D,GAAV,EAAe2C,GAAf,CAAP,GAA8B,CAApC;AACA7C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU1D,GAAV,EAAeyC,GAAf,CAAP,GAA8B,CAApC;AACAxF,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU1D,GAAV,EAAe0C,GAAf,CAAN,GAA6B,CAAlC;AACA,UAAIqB,EAAE,GAAI,CAAEtK,CAAC,GAAG6F,EAAL,GAAW,CAAZ,KAAkB,CAACO,GAAG,GAAG,MAAP,KAAkB,EAApC,CAAD,GAA4C,CAArD;AACApG,MAAAA,CAAC,GAAI,CAAEwD,EAAE,IAAI4C,GAAG,KAAK,EAAZ,CAAH,GAAsB,CAAvB,KAA6BkE,EAAE,KAAK,EAApC,CAAD,GAA4C,CAAhD;AACAA,MAAAA,EAAE,IAAI,SAAN;AACA;;AACAzE,MAAAA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU5C,GAAV,EAAee,GAAf,CAAL;AACAhC,MAAAA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU5C,GAAV,EAAegB,GAAf,CAAN;AACAjC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU3C,GAAV,EAAec,GAAf,CAAP,GAA8B,CAApC;AACA5E,MAAAA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU3C,GAAV,EAAee,GAAf,CAAL;AACAxC,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU/C,GAAV,EAAeqB,GAAf,CAAN,GAA6B,CAAlC;AACAnC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU/C,GAAV,EAAesB,GAAf,CAAP,GAA8B,CAApC;AACApC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU9C,GAAV,EAAeoB,GAAf,CAAP,GAA8B,CAApC;AACA/E,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU9C,GAAV,EAAeqB,GAAf,CAAN,GAA6B,CAAlC;AACA3C,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUlD,GAAV,EAAe2B,GAAf,CAAN,GAA6B,CAAlC;AACAtC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUlD,GAAV,EAAe4B,GAAf,CAAP,GAA8B,CAApC;AACAvC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUjD,GAAV,EAAe0B,GAAf,CAAP,GAA8B,CAApC;AACAlF,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUjD,GAAV,EAAe2B,GAAf,CAAN,GAA6B,CAAlC;AACA9C,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUrD,GAAV,EAAeiC,GAAf,CAAN,GAA6B,CAAlC;AACAzC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUrD,GAAV,EAAekC,GAAf,CAAP,GAA8B,CAApC;AACA1C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUpD,GAAV,EAAegC,GAAf,CAAP,GAA8B,CAApC;AACArF,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUpD,GAAV,EAAeiC,GAAf,CAAN,GAA6B,CAAlC;AACAjD,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUxD,GAAV,EAAeuC,GAAf,CAAN,GAA6B,CAAlC;AACA5C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUxD,GAAV,EAAewC,GAAf,CAAP,GAA8B,CAApC;AACA7C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUvD,GAAV,EAAesC,GAAf,CAAP,GAA8B,CAApC;AACAxF,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUvD,GAAV,EAAeuC,GAAf,CAAN,GAA6B,CAAlC;AACApD,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU3D,GAAV,EAAe6C,GAAf,CAAN,GAA6B,CAAlC;AACA/C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU3D,GAAV,EAAe8C,GAAf,CAAP,GAA8B,CAApC;AACAhD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU1D,GAAV,EAAe4C,GAAf,CAAP,GAA8B,CAApC;AACA3F,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU1D,GAAV,EAAe6C,GAAf,CAAN,GAA6B,CAAlC;AACA,UAAImB,EAAE,GAAI,CAAEvK,CAAC,GAAG6F,EAAL,GAAW,CAAZ,KAAkB,CAACO,GAAG,GAAG,MAAP,KAAkB,EAApC,CAAD,GAA4C,CAArD;AACApG,MAAAA,CAAC,GAAI,CAAEwD,EAAE,IAAI4C,GAAG,KAAK,EAAZ,CAAH,GAAsB,CAAvB,KAA6BmE,EAAE,KAAK,EAApC,CAAD,GAA4C,CAAhD;AACAA,MAAAA,EAAE,IAAI,SAAN;AACA;;AACA1E,MAAAA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUzC,GAAV,EAAeY,GAAf,CAAL;AACAhC,MAAAA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUzC,GAAV,EAAea,GAAf,CAAN;AACAjC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUxC,GAAV,EAAeW,GAAf,CAAP,GAA8B,CAApC;AACA5E,MAAAA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUxC,GAAV,EAAeY,GAAf,CAAL;AACAxC,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU5C,GAAV,EAAekB,GAAf,CAAN,GAA6B,CAAlC;AACAnC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU5C,GAAV,EAAemB,GAAf,CAAP,GAA8B,CAApC;AACApC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU3C,GAAV,EAAeiB,GAAf,CAAP,GAA8B,CAApC;AACA/E,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU3C,GAAV,EAAekB,GAAf,CAAN,GAA6B,CAAlC;AACA3C,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU/C,GAAV,EAAewB,GAAf,CAAN,GAA6B,CAAlC;AACAtC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU/C,GAAV,EAAeyB,GAAf,CAAP,GAA8B,CAApC;AACAvC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU9C,GAAV,EAAeuB,GAAf,CAAP,GAA8B,CAApC;AACAlF,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU9C,GAAV,EAAewB,GAAf,CAAN,GAA6B,CAAlC;AACA9C,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUlD,GAAV,EAAe8B,GAAf,CAAN,GAA6B,CAAlC;AACAzC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUlD,GAAV,EAAe+B,GAAf,CAAP,GAA8B,CAApC;AACA1C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUjD,GAAV,EAAe6B,GAAf,CAAP,GAA8B,CAApC;AACArF,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUjD,GAAV,EAAe8B,GAAf,CAAN,GAA6B,CAAlC;AACAjD,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUrD,GAAV,EAAeoC,GAAf,CAAN,GAA6B,CAAlC;AACA5C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUrD,GAAV,EAAeqC,GAAf,CAAP,GAA8B,CAApC;AACA7C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUpD,GAAV,EAAemC,GAAf,CAAP,GAA8B,CAApC;AACAxF,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUpD,GAAV,EAAeoC,GAAf,CAAN,GAA6B,CAAlC;AACApD,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUxD,GAAV,EAAe0C,GAAf,CAAN,GAA6B,CAAlC;AACA/C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUxD,GAAV,EAAe2C,GAAf,CAAP,GAA8B,CAApC;AACAhD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUvD,GAAV,EAAeyC,GAAf,CAAP,GAA8B,CAApC;AACA3F,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUvD,GAAV,EAAe0C,GAAf,CAAN,GAA6B,CAAlC;AACAvD,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU3D,GAAV,EAAegD,GAAf,CAAN,GAA6B,CAAlC;AACAlD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU3D,GAAV,EAAeiD,GAAf,CAAP,GAA8B,CAApC;AACAnD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU1D,GAAV,EAAe+C,GAAf,CAAP,GAA8B,CAApC;AACA9F,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU1D,GAAV,EAAegD,GAAf,CAAN,GAA6B,CAAlC;AACA,UAAIiB,EAAE,GAAI,CAAExK,CAAC,GAAG6F,EAAL,GAAW,CAAZ,KAAkB,CAACO,GAAG,GAAG,MAAP,KAAkB,EAApC,CAAD,GAA4C,CAArD;AACApG,MAAAA,CAAC,GAAI,CAAEwD,EAAE,IAAI4C,GAAG,KAAK,EAAZ,CAAH,GAAsB,CAAvB,KAA6BoE,EAAE,KAAK,EAApC,CAAD,GAA4C,CAAhD;AACAA,MAAAA,EAAE,IAAI,SAAN;AACA;;AACA3E,MAAAA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUtC,GAAV,EAAeS,GAAf,CAAL;AACAhC,MAAAA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUtC,GAAV,EAAeU,GAAf,CAAN;AACAjC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUrC,GAAV,EAAeQ,GAAf,CAAP,GAA8B,CAApC;AACA5E,MAAAA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUrC,GAAV,EAAeS,GAAf,CAAL;AACAxC,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUzC,GAAV,EAAee,GAAf,CAAN,GAA6B,CAAlC;AACAnC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUzC,GAAV,EAAegB,GAAf,CAAP,GAA8B,CAApC;AACApC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUxC,GAAV,EAAec,GAAf,CAAP,GAA8B,CAApC;AACA/E,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUxC,GAAV,EAAee,GAAf,CAAN,GAA6B,CAAlC;AACA3C,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU5C,GAAV,EAAeqB,GAAf,CAAN,GAA6B,CAAlC;AACAtC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU5C,GAAV,EAAesB,GAAf,CAAP,GAA8B,CAApC;AACAvC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU3C,GAAV,EAAeoB,GAAf,CAAP,GAA8B,CAApC;AACAlF,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU3C,GAAV,EAAeqB,GAAf,CAAN,GAA6B,CAAlC;AACA9C,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU/C,GAAV,EAAe2B,GAAf,CAAN,GAA6B,CAAlC;AACAzC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU/C,GAAV,EAAe4B,GAAf,CAAP,GAA8B,CAApC;AACA1C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU9C,GAAV,EAAe0B,GAAf,CAAP,GAA8B,CAApC;AACArF,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU9C,GAAV,EAAe2B,GAAf,CAAN,GAA6B,CAAlC;AACAjD,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUlD,GAAV,EAAeiC,GAAf,CAAN,GAA6B,CAAlC;AACA5C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUlD,GAAV,EAAekC,GAAf,CAAP,GAA8B,CAApC;AACA7C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUjD,GAAV,EAAegC,GAAf,CAAP,GAA8B,CAApC;AACAxF,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUjD,GAAV,EAAeiC,GAAf,CAAN,GAA6B,CAAlC;AACApD,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUrD,GAAV,EAAeuC,GAAf,CAAN,GAA6B,CAAlC;AACA/C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUrD,GAAV,EAAewC,GAAf,CAAP,GAA8B,CAApC;AACAhD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUpD,GAAV,EAAesC,GAAf,CAAP,GAA8B,CAApC;AACA3F,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUpD,GAAV,EAAeuC,GAAf,CAAN,GAA6B,CAAlC;AACAvD,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUxD,GAAV,EAAe6C,GAAf,CAAN,GAA6B,CAAlC;AACAlD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUxD,GAAV,EAAe8C,GAAf,CAAP,GAA8B,CAApC;AACAnD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUvD,GAAV,EAAe4C,GAAf,CAAP,GAA8B,CAApC;AACA9F,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUvD,GAAV,EAAe6C,GAAf,CAAN,GAA6B,CAAlC;AACA1D,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU3D,GAAV,EAAemD,GAAf,CAAN,GAA6B,CAAlC;AACArD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU3D,GAAV,EAAeoD,GAAf,CAAP,GAA8B,CAApC;AACAtD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU1D,GAAV,EAAekD,GAAf,CAAP,GAA8B,CAApC;AACAjG,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU1D,GAAV,EAAemD,GAAf,CAAN,GAA6B,CAAlC;AACA,UAAIe,EAAE,GAAI,CAAEzK,CAAC,GAAG6F,EAAL,GAAW,CAAZ,KAAkB,CAACO,GAAG,GAAG,MAAP,KAAkB,EAApC,CAAD,GAA4C,CAArD;AACApG,MAAAA,CAAC,GAAI,CAAEwD,EAAE,IAAI4C,GAAG,KAAK,EAAZ,CAAH,GAAsB,CAAvB,KAA6BqE,EAAE,KAAK,EAApC,CAAD,GAA4C,CAAhD;AACAA,MAAAA,EAAE,IAAI,SAAN;AACA;;AACA5E,MAAAA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUnC,GAAV,EAAeM,GAAf,CAAL;AACAhC,MAAAA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUnC,GAAV,EAAeO,GAAf,CAAN;AACAjC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUlC,GAAV,EAAeK,GAAf,CAAP,GAA8B,CAApC;AACA5E,MAAAA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUlC,GAAV,EAAeM,GAAf,CAAL;AACAxC,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUtC,GAAV,EAAeY,GAAf,CAAN,GAA6B,CAAlC;AACAnC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUtC,GAAV,EAAea,GAAf,CAAP,GAA8B,CAApC;AACApC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUrC,GAAV,EAAeW,GAAf,CAAP,GAA8B,CAApC;AACA/E,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUrC,GAAV,EAAeY,GAAf,CAAN,GAA6B,CAAlC;AACA3C,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUzC,GAAV,EAAekB,GAAf,CAAN,GAA6B,CAAlC;AACAtC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUzC,GAAV,EAAemB,GAAf,CAAP,GAA8B,CAApC;AACAvC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUxC,GAAV,EAAeiB,GAAf,CAAP,GAA8B,CAApC;AACAlF,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUxC,GAAV,EAAekB,GAAf,CAAN,GAA6B,CAAlC;AACA9C,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU5C,GAAV,EAAewB,GAAf,CAAN,GAA6B,CAAlC;AACAzC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU5C,GAAV,EAAeyB,GAAf,CAAP,GAA8B,CAApC;AACA1C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU3C,GAAV,EAAeuB,GAAf,CAAP,GAA8B,CAApC;AACArF,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU3C,GAAV,EAAewB,GAAf,CAAN,GAA6B,CAAlC;AACAjD,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU/C,GAAV,EAAe8B,GAAf,CAAN,GAA6B,CAAlC;AACA5C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU/C,GAAV,EAAe+B,GAAf,CAAP,GAA8B,CAApC;AACA7C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU9C,GAAV,EAAe6B,GAAf,CAAP,GAA8B,CAApC;AACAxF,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU9C,GAAV,EAAe8B,GAAf,CAAN,GAA6B,CAAlC;AACApD,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUlD,GAAV,EAAeoC,GAAf,CAAN,GAA6B,CAAlC;AACA/C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUlD,GAAV,EAAeqC,GAAf,CAAP,GAA8B,CAApC;AACAhD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUjD,GAAV,EAAemC,GAAf,CAAP,GAA8B,CAApC;AACA3F,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUjD,GAAV,EAAeoC,GAAf,CAAN,GAA6B,CAAlC;AACAvD,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUrD,GAAV,EAAe0C,GAAf,CAAN,GAA6B,CAAlC;AACAlD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUrD,GAAV,EAAe2C,GAAf,CAAP,GAA8B,CAApC;AACAnD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUpD,GAAV,EAAeyC,GAAf,CAAP,GAA8B,CAApC;AACA9F,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUpD,GAAV,EAAe0C,GAAf,CAAN,GAA6B,CAAlC;AACA1D,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUxD,GAAV,EAAegD,GAAf,CAAN,GAA6B,CAAlC;AACArD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUxD,GAAV,EAAeiD,GAAf,CAAP,GAA8B,CAApC;AACAtD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUvD,GAAV,EAAe+C,GAAf,CAAP,GAA8B,CAApC;AACAjG,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUvD,GAAV,EAAegD,GAAf,CAAN,GAA6B,CAAlC;AACA7D,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU3D,GAAV,EAAesD,GAAf,CAAN,GAA6B,CAAlC;AACAxD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU3D,GAAV,EAAeuD,GAAf,CAAP,GAA8B,CAApC;AACAzD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU1D,GAAV,EAAeqD,GAAf,CAAP,GAA8B,CAApC;AACApG,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU1D,GAAV,EAAesD,GAAf,CAAN,GAA6B,CAAlC;AACA,UAAIa,EAAE,GAAI,CAAE1K,CAAC,GAAG6F,EAAL,GAAW,CAAZ,KAAkB,CAACO,GAAG,GAAG,MAAP,KAAkB,EAApC,CAAD,GAA4C,CAArD;AACApG,MAAAA,CAAC,GAAI,CAAEwD,EAAE,IAAI4C,GAAG,KAAK,EAAZ,CAAH,GAAsB,CAAvB,KAA6BsE,EAAE,KAAK,EAApC,CAAD,GAA4C,CAAhD;AACAA,MAAAA,EAAE,IAAI,SAAN;AACA;;AACA7E,MAAAA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUhC,GAAV,EAAeG,GAAf,CAAL;AACAhC,MAAAA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUhC,GAAV,EAAeI,GAAf,CAAN;AACAjC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU/B,GAAV,EAAeE,GAAf,CAAP,GAA8B,CAApC;AACA5E,MAAAA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU/B,GAAV,EAAeG,GAAf,CAAL;AACAxC,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUnC,GAAV,EAAeS,GAAf,CAAN,GAA6B,CAAlC;AACAnC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUnC,GAAV,EAAeU,GAAf,CAAP,GAA8B,CAApC;AACApC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUlC,GAAV,EAAeQ,GAAf,CAAP,GAA8B,CAApC;AACA/E,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUlC,GAAV,EAAeS,GAAf,CAAN,GAA6B,CAAlC;AACA3C,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUtC,GAAV,EAAee,GAAf,CAAN,GAA6B,CAAlC;AACAtC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUtC,GAAV,EAAegB,GAAf,CAAP,GAA8B,CAApC;AACAvC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUrC,GAAV,EAAec,GAAf,CAAP,GAA8B,CAApC;AACAlF,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUrC,GAAV,EAAee,GAAf,CAAN,GAA6B,CAAlC;AACA9C,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUzC,GAAV,EAAeqB,GAAf,CAAN,GAA6B,CAAlC;AACAzC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUzC,GAAV,EAAesB,GAAf,CAAP,GAA8B,CAApC;AACA1C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUxC,GAAV,EAAeoB,GAAf,CAAP,GAA8B,CAApC;AACArF,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUxC,GAAV,EAAeqB,GAAf,CAAN,GAA6B,CAAlC;AACAjD,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU5C,GAAV,EAAe2B,GAAf,CAAN,GAA6B,CAAlC;AACA5C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU5C,GAAV,EAAe4B,GAAf,CAAP,GAA8B,CAApC;AACA7C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU3C,GAAV,EAAe0B,GAAf,CAAP,GAA8B,CAApC;AACAxF,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU3C,GAAV,EAAe2B,GAAf,CAAN,GAA6B,CAAlC;AACApD,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU/C,GAAV,EAAeiC,GAAf,CAAN,GAA6B,CAAlC;AACA/C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU/C,GAAV,EAAekC,GAAf,CAAP,GAA8B,CAApC;AACAhD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU9C,GAAV,EAAegC,GAAf,CAAP,GAA8B,CAApC;AACA3F,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU9C,GAAV,EAAeiC,GAAf,CAAN,GAA6B,CAAlC;AACAvD,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUlD,GAAV,EAAeuC,GAAf,CAAN,GAA6B,CAAlC;AACAlD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUlD,GAAV,EAAewC,GAAf,CAAP,GAA8B,CAApC;AACAnD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUjD,GAAV,EAAesC,GAAf,CAAP,GAA8B,CAApC;AACA9F,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUjD,GAAV,EAAeuC,GAAf,CAAN,GAA6B,CAAlC;AACA1D,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUrD,GAAV,EAAe6C,GAAf,CAAN,GAA6B,CAAlC;AACArD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUrD,GAAV,EAAe8C,GAAf,CAAP,GAA8B,CAApC;AACAtD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUpD,GAAV,EAAe4C,GAAf,CAAP,GAA8B,CAApC;AACAjG,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUpD,GAAV,EAAe6C,GAAf,CAAN,GAA6B,CAAlC;AACA7D,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUxD,GAAV,EAAemD,GAAf,CAAN,GAA6B,CAAlC;AACAxD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUxD,GAAV,EAAeoD,GAAf,CAAP,GAA8B,CAApC;AACAzD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUvD,GAAV,EAAekD,GAAf,CAAP,GAA8B,CAApC;AACApG,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUvD,GAAV,EAAemD,GAAf,CAAN,GAA6B,CAAlC;AACAhE,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU3D,GAAV,EAAeyD,GAAf,CAAN,GAA6B,CAAlC;AACA3D,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU3D,GAAV,EAAe0D,GAAf,CAAP,GAA8B,CAApC;AACA5D,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU1D,GAAV,EAAewD,GAAf,CAAP,GAA8B,CAApC;AACAvG,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU1D,GAAV,EAAeyD,GAAf,CAAN,GAA6B,CAAlC;AACA,UAAIW,EAAE,GAAI,CAAE3K,CAAC,GAAG6F,EAAL,GAAW,CAAZ,KAAkB,CAACO,GAAG,GAAG,MAAP,KAAkB,EAApC,CAAD,GAA4C,CAArD;AACApG,MAAAA,CAAC,GAAI,CAAEwD,EAAE,IAAI4C,GAAG,KAAK,EAAZ,CAAH,GAAsB,CAAvB,KAA6BuE,EAAE,KAAK,EAApC,CAAD,GAA4C,CAAhD;AACAA,MAAAA,EAAE,IAAI,SAAN;AACA;;AACA9E,MAAAA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUhC,GAAV,EAAeM,GAAf,CAAL;AACAnC,MAAAA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUhC,GAAV,EAAeO,GAAf,CAAN;AACApC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU/B,GAAV,EAAeK,GAAf,CAAP,GAA8B,CAApC;AACA/E,MAAAA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU/B,GAAV,EAAeM,GAAf,CAAL;AACA3C,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUnC,GAAV,EAAeY,GAAf,CAAN,GAA6B,CAAlC;AACAtC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUnC,GAAV,EAAea,GAAf,CAAP,GAA8B,CAApC;AACAvC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUlC,GAAV,EAAeW,GAAf,CAAP,GAA8B,CAApC;AACAlF,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUlC,GAAV,EAAeY,GAAf,CAAN,GAA6B,CAAlC;AACA9C,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUtC,GAAV,EAAekB,GAAf,CAAN,GAA6B,CAAlC;AACAzC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUtC,GAAV,EAAemB,GAAf,CAAP,GAA8B,CAApC;AACA1C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUrC,GAAV,EAAeiB,GAAf,CAAP,GAA8B,CAApC;AACArF,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUrC,GAAV,EAAekB,GAAf,CAAN,GAA6B,CAAlC;AACAjD,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUzC,GAAV,EAAewB,GAAf,CAAN,GAA6B,CAAlC;AACA5C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUzC,GAAV,EAAeyB,GAAf,CAAP,GAA8B,CAApC;AACA7C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUxC,GAAV,EAAeuB,GAAf,CAAP,GAA8B,CAApC;AACAxF,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUxC,GAAV,EAAewB,GAAf,CAAN,GAA6B,CAAlC;AACApD,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU5C,GAAV,EAAe8B,GAAf,CAAN,GAA6B,CAAlC;AACA/C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU5C,GAAV,EAAe+B,GAAf,CAAP,GAA8B,CAApC;AACAhD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU3C,GAAV,EAAe6B,GAAf,CAAP,GAA8B,CAApC;AACA3F,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU3C,GAAV,EAAe8B,GAAf,CAAN,GAA6B,CAAlC;AACAvD,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU/C,GAAV,EAAeoC,GAAf,CAAN,GAA6B,CAAlC;AACAlD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU/C,GAAV,EAAeqC,GAAf,CAAP,GAA8B,CAApC;AACAnD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU9C,GAAV,EAAemC,GAAf,CAAP,GAA8B,CAApC;AACA9F,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU9C,GAAV,EAAeoC,GAAf,CAAN,GAA6B,CAAlC;AACA1D,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUlD,GAAV,EAAe0C,GAAf,CAAN,GAA6B,CAAlC;AACArD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUlD,GAAV,EAAe2C,GAAf,CAAP,GAA8B,CAApC;AACAtD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUjD,GAAV,EAAeyC,GAAf,CAAP,GAA8B,CAApC;AACAjG,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUjD,GAAV,EAAe0C,GAAf,CAAN,GAA6B,CAAlC;AACA7D,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUrD,GAAV,EAAegD,GAAf,CAAN,GAA6B,CAAlC;AACAxD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUrD,GAAV,EAAeiD,GAAf,CAAP,GAA8B,CAApC;AACAzD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUpD,GAAV,EAAe+C,GAAf,CAAP,GAA8B,CAApC;AACApG,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUpD,GAAV,EAAegD,GAAf,CAAN,GAA6B,CAAlC;AACAhE,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUxD,GAAV,EAAesD,GAAf,CAAN,GAA6B,CAAlC;AACA3D,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUxD,GAAV,EAAeuD,GAAf,CAAP,GAA8B,CAApC;AACA5D,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUvD,GAAV,EAAeqD,GAAf,CAAP,GAA8B,CAApC;AACAvG,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUvD,GAAV,EAAesD,GAAf,CAAN,GAA6B,CAAlC;AACA,UAAIY,GAAG,GAAI,CAAE5K,CAAC,GAAG6F,EAAL,GAAW,CAAZ,KAAkB,CAACO,GAAG,GAAG,MAAP,KAAkB,EAApC,CAAD,GAA4C,CAAtD;AACApG,MAAAA,CAAC,GAAI,CAAEwD,EAAE,IAAI4C,GAAG,KAAK,EAAZ,CAAH,GAAsB,CAAvB,KAA6BwE,GAAG,KAAK,EAArC,CAAD,GAA6C,CAAjD;AACAA,MAAAA,GAAG,IAAI,SAAP;AACA;;AACA/E,MAAAA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUhC,GAAV,EAAeS,GAAf,CAAL;AACAtC,MAAAA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUhC,GAAV,EAAeU,GAAf,CAAN;AACAvC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU/B,GAAV,EAAeQ,GAAf,CAAP,GAA8B,CAApC;AACAlF,MAAAA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU/B,GAAV,EAAeS,GAAf,CAAL;AACA9C,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUnC,GAAV,EAAee,GAAf,CAAN,GAA6B,CAAlC;AACAzC,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUnC,GAAV,EAAegB,GAAf,CAAP,GAA8B,CAApC;AACA1C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUlC,GAAV,EAAec,GAAf,CAAP,GAA8B,CAApC;AACArF,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUlC,GAAV,EAAee,GAAf,CAAN,GAA6B,CAAlC;AACAjD,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUtC,GAAV,EAAeqB,GAAf,CAAN,GAA6B,CAAlC;AACA5C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUtC,GAAV,EAAesB,GAAf,CAAP,GAA8B,CAApC;AACA7C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUrC,GAAV,EAAeoB,GAAf,CAAP,GAA8B,CAApC;AACAxF,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUrC,GAAV,EAAeqB,GAAf,CAAN,GAA6B,CAAlC;AACApD,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUzC,GAAV,EAAe2B,GAAf,CAAN,GAA6B,CAAlC;AACA/C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUzC,GAAV,EAAe4B,GAAf,CAAP,GAA8B,CAApC;AACAhD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUxC,GAAV,EAAe0B,GAAf,CAAP,GAA8B,CAApC;AACA3F,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUxC,GAAV,EAAe2B,GAAf,CAAN,GAA6B,CAAlC;AACAvD,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU5C,GAAV,EAAeiC,GAAf,CAAN,GAA6B,CAAlC;AACAlD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU5C,GAAV,EAAekC,GAAf,CAAP,GAA8B,CAApC;AACAnD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU3C,GAAV,EAAegC,GAAf,CAAP,GAA8B,CAApC;AACA9F,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU3C,GAAV,EAAeiC,GAAf,CAAN,GAA6B,CAAlC;AACA1D,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU/C,GAAV,EAAeuC,GAAf,CAAN,GAA6B,CAAlC;AACArD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU/C,GAAV,EAAewC,GAAf,CAAP,GAA8B,CAApC;AACAtD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU9C,GAAV,EAAesC,GAAf,CAAP,GAA8B,CAApC;AACAjG,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU9C,GAAV,EAAeuC,GAAf,CAAN,GAA6B,CAAlC;AACA7D,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUlD,GAAV,EAAe6C,GAAf,CAAN,GAA6B,CAAlC;AACAxD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUlD,GAAV,EAAe8C,GAAf,CAAP,GAA8B,CAApC;AACAzD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUjD,GAAV,EAAe4C,GAAf,CAAP,GAA8B,CAApC;AACApG,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUjD,GAAV,EAAe6C,GAAf,CAAN,GAA6B,CAAlC;AACAhE,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUrD,GAAV,EAAemD,GAAf,CAAN,GAA6B,CAAlC;AACA3D,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUrD,GAAV,EAAeoD,GAAf,CAAP,GAA8B,CAApC;AACA5D,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUpD,GAAV,EAAekD,GAAf,CAAP,GAA8B,CAApC;AACAvG,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUpD,GAAV,EAAemD,GAAf,CAAN,GAA6B,CAAlC;AACA,UAAIa,GAAG,GAAI,CAAE7K,CAAC,GAAG6F,EAAL,GAAW,CAAZ,KAAkB,CAACO,GAAG,GAAG,MAAP,KAAkB,EAApC,CAAD,GAA4C,CAAtD;AACApG,MAAAA,CAAC,GAAI,CAAEwD,EAAE,IAAI4C,GAAG,KAAK,EAAZ,CAAH,GAAsB,CAAvB,KAA6ByE,GAAG,KAAK,EAArC,CAAD,GAA6C,CAAjD;AACAA,MAAAA,GAAG,IAAI,SAAP;AACA;;AACAhF,MAAAA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUhC,GAAV,EAAeY,GAAf,CAAL;AACAzC,MAAAA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUhC,GAAV,EAAea,GAAf,CAAN;AACA1C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU/B,GAAV,EAAeW,GAAf,CAAP,GAA8B,CAApC;AACArF,MAAAA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU/B,GAAV,EAAeY,GAAf,CAAL;AACAjD,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUnC,GAAV,EAAekB,GAAf,CAAN,GAA6B,CAAlC;AACA5C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUnC,GAAV,EAAemB,GAAf,CAAP,GAA8B,CAApC;AACA7C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUlC,GAAV,EAAeiB,GAAf,CAAP,GAA8B,CAApC;AACAxF,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUlC,GAAV,EAAekB,GAAf,CAAN,GAA6B,CAAlC;AACApD,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUtC,GAAV,EAAewB,GAAf,CAAN,GAA6B,CAAlC;AACA/C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUtC,GAAV,EAAeyB,GAAf,CAAP,GAA8B,CAApC;AACAhD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUrC,GAAV,EAAeuB,GAAf,CAAP,GAA8B,CAApC;AACA3F,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUrC,GAAV,EAAewB,GAAf,CAAN,GAA6B,CAAlC;AACAvD,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUzC,GAAV,EAAe8B,GAAf,CAAN,GAA6B,CAAlC;AACAlD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUzC,GAAV,EAAe+B,GAAf,CAAP,GAA8B,CAApC;AACAnD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUxC,GAAV,EAAe6B,GAAf,CAAP,GAA8B,CAApC;AACA9F,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUxC,GAAV,EAAe8B,GAAf,CAAN,GAA6B,CAAlC;AACA1D,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU5C,GAAV,EAAeoC,GAAf,CAAN,GAA6B,CAAlC;AACArD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU5C,GAAV,EAAeqC,GAAf,CAAP,GAA8B,CAApC;AACAtD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU3C,GAAV,EAAemC,GAAf,CAAP,GAA8B,CAApC;AACAjG,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU3C,GAAV,EAAeoC,GAAf,CAAN,GAA6B,CAAlC;AACA7D,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU/C,GAAV,EAAe0C,GAAf,CAAN,GAA6B,CAAlC;AACAxD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU/C,GAAV,EAAe2C,GAAf,CAAP,GAA8B,CAApC;AACAzD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU9C,GAAV,EAAeyC,GAAf,CAAP,GAA8B,CAApC;AACApG,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU9C,GAAV,EAAe0C,GAAf,CAAN,GAA6B,CAAlC;AACAhE,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUlD,GAAV,EAAegD,GAAf,CAAN,GAA6B,CAAlC;AACA3D,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUlD,GAAV,EAAeiD,GAAf,CAAP,GAA8B,CAApC;AACA5D,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUjD,GAAV,EAAe+C,GAAf,CAAP,GAA8B,CAApC;AACAvG,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUjD,GAAV,EAAegD,GAAf,CAAN,GAA6B,CAAlC;AACA,UAAIc,GAAG,GAAI,CAAE9K,CAAC,GAAG6F,EAAL,GAAW,CAAZ,KAAkB,CAACO,GAAG,GAAG,MAAP,KAAkB,EAApC,CAAD,GAA4C,CAAtD;AACApG,MAAAA,CAAC,GAAI,CAAEwD,EAAE,IAAI4C,GAAG,KAAK,EAAZ,CAAH,GAAsB,CAAvB,KAA6B0E,GAAG,KAAK,EAArC,CAAD,GAA6C,CAAjD;AACAA,MAAAA,GAAG,IAAI,SAAP;AACA;;AACAjF,MAAAA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUhC,GAAV,EAAee,GAAf,CAAL;AACA5C,MAAAA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUhC,GAAV,EAAegB,GAAf,CAAN;AACA7C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU/B,GAAV,EAAec,GAAf,CAAP,GAA8B,CAApC;AACAxF,MAAAA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU/B,GAAV,EAAee,GAAf,CAAL;AACApD,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUnC,GAAV,EAAeqB,GAAf,CAAN,GAA6B,CAAlC;AACA/C,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUnC,GAAV,EAAesB,GAAf,CAAP,GAA8B,CAApC;AACAhD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUlC,GAAV,EAAeoB,GAAf,CAAP,GAA8B,CAApC;AACA3F,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUlC,GAAV,EAAeqB,GAAf,CAAN,GAA6B,CAAlC;AACAvD,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUtC,GAAV,EAAe2B,GAAf,CAAN,GAA6B,CAAlC;AACAlD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUtC,GAAV,EAAe4B,GAAf,CAAP,GAA8B,CAApC;AACAnD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUrC,GAAV,EAAe0B,GAAf,CAAP,GAA8B,CAApC;AACA9F,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUrC,GAAV,EAAe2B,GAAf,CAAN,GAA6B,CAAlC;AACA1D,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUzC,GAAV,EAAeiC,GAAf,CAAN,GAA6B,CAAlC;AACArD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUzC,GAAV,EAAekC,GAAf,CAAP,GAA8B,CAApC;AACAtD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUxC,GAAV,EAAegC,GAAf,CAAP,GAA8B,CAApC;AACAjG,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUxC,GAAV,EAAeiC,GAAf,CAAN,GAA6B,CAAlC;AACA7D,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU5C,GAAV,EAAeuC,GAAf,CAAN,GAA6B,CAAlC;AACAxD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU5C,GAAV,EAAewC,GAAf,CAAP,GAA8B,CAApC;AACAzD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU3C,GAAV,EAAesC,GAAf,CAAP,GAA8B,CAApC;AACApG,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU3C,GAAV,EAAeuC,GAAf,CAAN,GAA6B,CAAlC;AACAhE,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU/C,GAAV,EAAe6C,GAAf,CAAN,GAA6B,CAAlC;AACA3D,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU/C,GAAV,EAAe8C,GAAf,CAAP,GAA8B,CAApC;AACA5D,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU9C,GAAV,EAAe4C,GAAf,CAAP,GAA8B,CAApC;AACAvG,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU9C,GAAV,EAAe6C,GAAf,CAAN,GAA6B,CAAlC;AACA,UAAIe,GAAG,GAAI,CAAE/K,CAAC,GAAG6F,EAAL,GAAW,CAAZ,KAAkB,CAACO,GAAG,GAAG,MAAP,KAAkB,EAApC,CAAD,GAA4C,CAAtD;AACApG,MAAAA,CAAC,GAAI,CAAEwD,EAAE,IAAI4C,GAAG,KAAK,EAAZ,CAAH,GAAsB,CAAvB,KAA6B2E,GAAG,KAAK,EAArC,CAAD,GAA6C,CAAjD;AACAA,MAAAA,GAAG,IAAI,SAAP;AACA;;AACAlF,MAAAA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUhC,GAAV,EAAekB,GAAf,CAAL;AACA/C,MAAAA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUhC,GAAV,EAAemB,GAAf,CAAN;AACAhD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU/B,GAAV,EAAeiB,GAAf,CAAP,GAA8B,CAApC;AACA3F,MAAAA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU/B,GAAV,EAAekB,GAAf,CAAL;AACAvD,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUnC,GAAV,EAAewB,GAAf,CAAN,GAA6B,CAAlC;AACAlD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUnC,GAAV,EAAeyB,GAAf,CAAP,GAA8B,CAApC;AACAnD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUlC,GAAV,EAAeuB,GAAf,CAAP,GAA8B,CAApC;AACA9F,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUlC,GAAV,EAAewB,GAAf,CAAN,GAA6B,CAAlC;AACA1D,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUtC,GAAV,EAAe8B,GAAf,CAAN,GAA6B,CAAlC;AACArD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUtC,GAAV,EAAe+B,GAAf,CAAP,GAA8B,CAApC;AACAtD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUrC,GAAV,EAAe6B,GAAf,CAAP,GAA8B,CAApC;AACAjG,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUrC,GAAV,EAAe8B,GAAf,CAAN,GAA6B,CAAlC;AACA7D,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUzC,GAAV,EAAeoC,GAAf,CAAN,GAA6B,CAAlC;AACAxD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUzC,GAAV,EAAeqC,GAAf,CAAP,GAA8B,CAApC;AACAzD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUxC,GAAV,EAAemC,GAAf,CAAP,GAA8B,CAApC;AACApG,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUxC,GAAV,EAAeoC,GAAf,CAAN,GAA6B,CAAlC;AACAhE,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAU5C,GAAV,EAAe0C,GAAf,CAAN,GAA6B,CAAlC;AACA3D,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU5C,GAAV,EAAe2C,GAAf,CAAP,GAA8B,CAApC;AACA5D,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU3C,GAAV,EAAeyC,GAAf,CAAP,GAA8B,CAApC;AACAvG,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU3C,GAAV,EAAe0C,GAAf,CAAN,GAA6B,CAAlC;AACA,UAAIgB,GAAG,GAAI,CAAEhL,CAAC,GAAG6F,EAAL,GAAW,CAAZ,KAAkB,CAACO,GAAG,GAAG,MAAP,KAAkB,EAApC,CAAD,GAA4C,CAAtD;AACApG,MAAAA,CAAC,GAAI,CAAEwD,EAAE,IAAI4C,GAAG,KAAK,EAAZ,CAAH,GAAsB,CAAvB,KAA6B4E,GAAG,KAAK,EAArC,CAAD,GAA6C,CAAjD;AACAA,MAAAA,GAAG,IAAI,SAAP;AACA;;AACAnF,MAAAA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUhC,GAAV,EAAeqB,GAAf,CAAL;AACAlD,MAAAA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUhC,GAAV,EAAesB,GAAf,CAAN;AACAnD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU/B,GAAV,EAAeoB,GAAf,CAAP,GAA8B,CAApC;AACA9F,MAAAA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU/B,GAAV,EAAeqB,GAAf,CAAL;AACA1D,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUnC,GAAV,EAAe2B,GAAf,CAAN,GAA6B,CAAlC;AACArD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUnC,GAAV,EAAe4B,GAAf,CAAP,GAA8B,CAApC;AACAtD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUlC,GAAV,EAAe0B,GAAf,CAAP,GAA8B,CAApC;AACAjG,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUlC,GAAV,EAAe2B,GAAf,CAAN,GAA6B,CAAlC;AACA7D,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUtC,GAAV,EAAeiC,GAAf,CAAN,GAA6B,CAAlC;AACAxD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUtC,GAAV,EAAekC,GAAf,CAAP,GAA8B,CAApC;AACAzD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUrC,GAAV,EAAegC,GAAf,CAAP,GAA8B,CAApC;AACApG,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUrC,GAAV,EAAeiC,GAAf,CAAN,GAA6B,CAAlC;AACAhE,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUzC,GAAV,EAAeuC,GAAf,CAAN,GAA6B,CAAlC;AACA3D,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUzC,GAAV,EAAewC,GAAf,CAAP,GAA8B,CAApC;AACA5D,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUxC,GAAV,EAAesC,GAAf,CAAP,GAA8B,CAApC;AACAvG,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUxC,GAAV,EAAeuC,GAAf,CAAN,GAA6B,CAAlC;AACA,UAAIiB,GAAG,GAAI,CAAEjL,CAAC,GAAG6F,EAAL,GAAW,CAAZ,KAAkB,CAACO,GAAG,GAAG,MAAP,KAAkB,EAApC,CAAD,GAA4C,CAAtD;AACApG,MAAAA,CAAC,GAAI,CAAEwD,EAAE,IAAI4C,GAAG,KAAK,EAAZ,CAAH,GAAsB,CAAvB,KAA6B6E,GAAG,KAAK,EAArC,CAAD,GAA6C,CAAjD;AACAA,MAAAA,GAAG,IAAI,SAAP;AACA;;AACApF,MAAAA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUhC,GAAV,EAAewB,GAAf,CAAL;AACArD,MAAAA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUhC,GAAV,EAAeyB,GAAf,CAAN;AACAtD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU/B,GAAV,EAAeuB,GAAf,CAAP,GAA8B,CAApC;AACAjG,MAAAA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU/B,GAAV,EAAewB,GAAf,CAAL;AACA7D,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUnC,GAAV,EAAe8B,GAAf,CAAN,GAA6B,CAAlC;AACAxD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUnC,GAAV,EAAe+B,GAAf,CAAP,GAA8B,CAApC;AACAzD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUlC,GAAV,EAAe6B,GAAf,CAAP,GAA8B,CAApC;AACApG,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUlC,GAAV,EAAe8B,GAAf,CAAN,GAA6B,CAAlC;AACAhE,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUtC,GAAV,EAAeoC,GAAf,CAAN,GAA6B,CAAlC;AACA3D,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUtC,GAAV,EAAeqC,GAAf,CAAP,GAA8B,CAApC;AACA5D,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUrC,GAAV,EAAemC,GAAf,CAAP,GAA8B,CAApC;AACAvG,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUrC,GAAV,EAAeoC,GAAf,CAAN,GAA6B,CAAlC;AACA,UAAIkB,GAAG,GAAI,CAAElL,CAAC,GAAG6F,EAAL,GAAW,CAAZ,KAAkB,CAACO,GAAG,GAAG,MAAP,KAAkB,EAApC,CAAD,GAA4C,CAAtD;AACApG,MAAAA,CAAC,GAAI,CAAEwD,EAAE,IAAI4C,GAAG,KAAK,EAAZ,CAAH,GAAsB,CAAvB,KAA6B8E,GAAG,KAAK,EAArC,CAAD,GAA6C,CAAjD;AACAA,MAAAA,GAAG,IAAI,SAAP;AACA;;AACArF,MAAAA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUhC,GAAV,EAAe2B,GAAf,CAAL;AACAxD,MAAAA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUhC,GAAV,EAAe4B,GAAf,CAAN;AACAzD,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU/B,GAAV,EAAe0B,GAAf,CAAP,GAA8B,CAApC;AACApG,MAAAA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU/B,GAAV,EAAe2B,GAAf,CAAL;AACAhE,MAAAA,EAAE,GAAIA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUnC,GAAV,EAAeiC,GAAf,CAAN,GAA6B,CAAlC;AACA3D,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUnC,GAAV,EAAekC,GAAf,CAAP,GAA8B,CAApC;AACA5D,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUlC,GAAV,EAAegC,GAAf,CAAP,GAA8B,CAApC;AACAvG,MAAAA,EAAE,GAAIA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAUlC,GAAV,EAAeiC,GAAf,CAAN,GAA6B,CAAlC;AACA,UAAImB,GAAG,GAAI,CAAEnL,CAAC,GAAG6F,EAAL,GAAW,CAAZ,KAAkB,CAACO,GAAG,GAAG,MAAP,KAAkB,EAApC,CAAD,GAA4C,CAAtD;AACApG,MAAAA,CAAC,GAAI,CAAEwD,EAAE,IAAI4C,GAAG,KAAK,EAAZ,CAAH,GAAsB,CAAvB,KAA6B+E,GAAG,KAAK,EAArC,CAAD,GAA6C,CAAjD;AACAA,MAAAA,GAAG,IAAI,SAAP;AACA;;AACAtF,MAAAA,EAAE,GAAGvG,IAAI,CAAC2K,IAAL,CAAUhC,GAAV,EAAe8B,GAAf,CAAL;AACA3D,MAAAA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAUhC,GAAV,EAAe+B,GAAf,CAAN;AACA5D,MAAAA,GAAG,GAAIA,GAAG,GAAG9G,IAAI,CAAC2K,IAAL,CAAU/B,GAAV,EAAe6B,GAAf,CAAP,GAA8B,CAApC;AACAvG,MAAAA,EAAE,GAAGlE,IAAI,CAAC2K,IAAL,CAAU/B,GAAV,EAAe8B,GAAf,CAAL;AACA,UAAIoB,GAAG,GAAI,CAAEpL,CAAC,GAAG6F,EAAL,GAAW,CAAZ,KAAkB,CAACO,GAAG,GAAG,MAAP,KAAkB,EAApC,CAAD,GAA4C,CAAtD;AACApG,MAAAA,CAAC,GAAI,CAAEwD,EAAE,IAAI4C,GAAG,KAAK,EAAZ,CAAH,GAAsB,CAAvB,KAA6BgF,GAAG,KAAK,EAArC,CAAD,GAA6C,CAAjD;AACAA,MAAAA,GAAG,IAAI,SAAP;AACAjF,MAAAA,CAAC,CAAC,CAAD,CAAD,GAAO+D,EAAP;AACA/D,MAAAA,CAAC,CAAC,CAAD,CAAD,GAAOgE,EAAP;AACAhE,MAAAA,CAAC,CAAC,CAAD,CAAD,GAAOiE,EAAP;AACAjE,MAAAA,CAAC,CAAC,CAAD,CAAD,GAAOkE,EAAP;AACAlE,MAAAA,CAAC,CAAC,CAAD,CAAD,GAAOmE,EAAP;AACAnE,MAAAA,CAAC,CAAC,CAAD,CAAD,GAAOoE,EAAP;AACApE,MAAAA,CAAC,CAAC,CAAD,CAAD,GAAOqE,EAAP;AACArE,MAAAA,CAAC,CAAC,CAAD,CAAD,GAAOsE,EAAP;AACAtE,MAAAA,CAAC,CAAC,CAAD,CAAD,GAAOuE,EAAP;AACAvE,MAAAA,CAAC,CAAC,CAAD,CAAD,GAAOwE,EAAP;AACAxE,MAAAA,CAAC,CAAC,EAAD,CAAD,GAAQyE,GAAR;AACAzE,MAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ0E,GAAR;AACA1E,MAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ2E,GAAR;AACA3E,MAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ4E,GAAR;AACA5E,MAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ6E,GAAR;AACA7E,MAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ8E,GAAR;AACA9E,MAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ+E,GAAR;AACA/E,MAAAA,CAAC,CAAC,EAAD,CAAD,GAAQgF,GAAR;AACAhF,MAAAA,CAAC,CAAC,EAAD,CAAD,GAAQiF,GAAR;;AACA,UAAIpL,CAAC,KAAK,CAAV,EAAa;AACXmG,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQnG,CAAR;AACA8B,QAAAA,GAAG,CAAC9D,MAAJ;AACD;;AACD,aAAO8D,GAAP;AACD,KA3jBD,CAvhC0B,CAolD1B;;;AACA,QAAI,CAACxC,IAAI,CAAC2K,IAAV,EAAgB;AACd/D,MAAAA,WAAW,GAAGN,UAAd;AACD;;AAED,aAASyF,QAAT,CAAmBnP,IAAnB,EAAyBmC,GAAzB,EAA8ByD,GAA9B,EAAmC;AACjCA,MAAAA,GAAG,CAAChE,QAAJ,GAAeO,GAAG,CAACP,QAAJ,GAAe5B,IAAI,CAAC4B,QAAnC;AACAgE,MAAAA,GAAG,CAAC9D,MAAJ,GAAa9B,IAAI,CAAC8B,MAAL,GAAcK,GAAG,CAACL,MAA/B;AAEA,UAAI+D,KAAK,GAAG,CAAZ;AACA,UAAIuJ,OAAO,GAAG,CAAd;;AACA,WAAK,IAAIxF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhE,GAAG,CAAC9D,MAAJ,GAAa,CAAjC,EAAoC8H,CAAC,EAArC,EAAyC;AACvC;AACA;AACA,YAAIC,MAAM,GAAGuF,OAAb;AACAA,QAAAA,OAAO,GAAG,CAAV;AACA,YAAItF,KAAK,GAAGjE,KAAK,GAAG,SAApB;AACA,YAAIkE,IAAI,GAAG3G,IAAI,CAACV,GAAL,CAASkH,CAAT,EAAYzH,GAAG,CAACL,MAAJ,GAAa,CAAzB,CAAX;;AACA,aAAK,IAAIyB,CAAC,GAAGH,IAAI,CAACd,GAAL,CAAS,CAAT,EAAYsH,CAAC,GAAG5J,IAAI,CAAC8B,MAAT,GAAkB,CAA9B,CAAb,EAA+CyB,CAAC,IAAIwG,IAApD,EAA0DxG,CAAC,EAA3D,EAA+D;AAC7D,cAAID,CAAC,GAAGsG,CAAC,GAAGrG,CAAZ;AACA,cAAIwF,CAAC,GAAG/I,IAAI,CAAC6B,KAAL,CAAWyB,CAAX,IAAgB,CAAxB;AACA,cAAIuD,CAAC,GAAG1E,GAAG,CAACN,KAAJ,CAAU0B,CAAV,IAAe,CAAvB;AACA,cAAIW,CAAC,GAAG6E,CAAC,GAAGlC,CAAZ;AAEA,cAAI8C,EAAE,GAAGzF,CAAC,GAAG,SAAb;AACA2F,UAAAA,MAAM,GAAIA,MAAM,IAAK3F,CAAC,GAAG,SAAL,GAAkB,CAAtB,CAAP,GAAmC,CAA5C;AACAyF,UAAAA,EAAE,GAAIA,EAAE,GAAGG,KAAN,GAAe,CAApB;AACAA,UAAAA,KAAK,GAAGH,EAAE,GAAG,SAAb;AACAE,UAAAA,MAAM,GAAIA,MAAM,IAAIF,EAAE,KAAK,EAAX,CAAP,GAAyB,CAAlC;AAEAyF,UAAAA,OAAO,IAAIvF,MAAM,KAAK,EAAtB;AACAA,UAAAA,MAAM,IAAI,SAAV;AACD;;AACDjE,QAAAA,GAAG,CAAC/D,KAAJ,CAAU+H,CAAV,IAAeE,KAAf;AACAjE,QAAAA,KAAK,GAAGgE,MAAR;AACAA,QAAAA,MAAM,GAAGuF,OAAT;AACD;;AACD,UAAIvJ,KAAK,KAAK,CAAd,EAAiB;AACfD,QAAAA,GAAG,CAAC/D,KAAJ,CAAU+H,CAAV,IAAe/D,KAAf;AACD,OAFD,MAEO;AACLD,QAAAA,GAAG,CAAC9D,MAAJ;AACD;;AAED,aAAO8D,GAAG,CAAClC,KAAJ,EAAP;AACD;;AAED,aAAS2L,UAAT,CAAqBrP,IAArB,EAA2BmC,GAA3B,EAAgCyD,GAAhC,EAAqC;AACnC,UAAI0J,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,aAAOD,IAAI,CAACE,IAAL,CAAUxP,IAAV,EAAgBmC,GAAhB,EAAqByD,GAArB,CAAP;AACD;;AAEDrE,IAAAA,EAAE,CAACF,SAAH,CAAaoO,KAAb,GAAqB,SAASA,KAAT,CAAgBtN,GAAhB,EAAqByD,GAArB,EAA0B;AAC7C,UAAIgB,GAAJ;AACA,UAAIpC,GAAG,GAAG,KAAK1C,MAAL,GAAcK,GAAG,CAACL,MAA5B;;AACA,UAAI,KAAKA,MAAL,KAAgB,EAAhB,IAAsBK,GAAG,CAACL,MAAJ,KAAe,EAAzC,EAA6C;AAC3C8E,QAAAA,GAAG,GAAGoD,WAAW,CAAC,IAAD,EAAO7H,GAAP,EAAYyD,GAAZ,CAAjB;AACD,OAFD,MAEO,IAAIpB,GAAG,GAAG,EAAV,EAAc;AACnBoC,QAAAA,GAAG,GAAG8C,UAAU,CAAC,IAAD,EAAOvH,GAAP,EAAYyD,GAAZ,CAAhB;AACD,OAFM,MAEA,IAAIpB,GAAG,GAAG,IAAV,EAAgB;AACrBoC,QAAAA,GAAG,GAAGuI,QAAQ,CAAC,IAAD,EAAOhN,GAAP,EAAYyD,GAAZ,CAAd;AACD,OAFM,MAEA;AACLgB,QAAAA,GAAG,GAAGyI,UAAU,CAAC,IAAD,EAAOlN,GAAP,EAAYyD,GAAZ,CAAhB;AACD;;AAED,aAAOgB,GAAP;AACD,KAdD,CAvoD0B,CAupD1B;AACA;;;AAEA,aAAS2I,IAAT,CAAeG,CAAf,EAAkBC,CAAlB,EAAqB;AACnB,WAAKD,CAAL,GAASA,CAAT;AACA,WAAKC,CAAL,GAASA,CAAT;AACD;;AAEDJ,IAAAA,IAAI,CAAClO,SAAL,CAAeuO,OAAf,GAAyB,SAASA,OAAT,CAAkBC,CAAlB,EAAqB;AAC5C,UAAI1I,CAAC,GAAG,IAAI/E,KAAJ,CAAUyN,CAAV,CAAR;AACA,UAAIC,CAAC,GAAGvO,EAAE,CAACF,SAAH,CAAa6F,UAAb,CAAwB2I,CAAxB,IAA6B,CAArC;;AACA,WAAK,IAAIvM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuM,CAApB,EAAuBvM,CAAC,EAAxB,EAA4B;AAC1B6D,QAAAA,CAAC,CAAC7D,CAAD,CAAD,GAAO,KAAKyM,MAAL,CAAYzM,CAAZ,EAAewM,CAAf,EAAkBD,CAAlB,CAAP;AACD;;AAED,aAAO1I,CAAP;AACD,KARD,CA/pD0B,CAyqD1B;;;AACAoI,IAAAA,IAAI,CAAClO,SAAL,CAAe0O,MAAf,GAAwB,SAASA,MAAT,CAAiBL,CAAjB,EAAoBI,CAApB,EAAuBD,CAAvB,EAA0B;AAChD,UAAIH,CAAC,KAAK,CAAN,IAAWA,CAAC,KAAKG,CAAC,GAAG,CAAzB,EAA4B,OAAOH,CAAP;AAE5B,UAAIM,EAAE,GAAG,CAAT;;AACA,WAAK,IAAI1M,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwM,CAApB,EAAuBxM,CAAC,EAAxB,EAA4B;AAC1B0M,QAAAA,EAAE,IAAI,CAACN,CAAC,GAAG,CAAL,KAAYI,CAAC,GAAGxM,CAAJ,GAAQ,CAA1B;AACAoM,QAAAA,CAAC,KAAK,CAAN;AACD;;AAED,aAAOM,EAAP;AACD,KAVD,CA1qD0B,CAsrD1B;AACA;;;AACAT,IAAAA,IAAI,CAAClO,SAAL,CAAe4O,OAAf,GAAyB,SAASA,OAAT,CAAkBC,GAAlB,EAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,IAAjC,EAAuCC,IAAvC,EAA6CT,CAA7C,EAAgD;AACvE,WAAK,IAAIvM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuM,CAApB,EAAuBvM,CAAC,EAAxB,EAA4B;AAC1B+M,QAAAA,IAAI,CAAC/M,CAAD,CAAJ,GAAU6M,GAAG,CAACD,GAAG,CAAC5M,CAAD,CAAJ,CAAb;AACAgN,QAAAA,IAAI,CAAChN,CAAD,CAAJ,GAAU8M,GAAG,CAACF,GAAG,CAAC5M,CAAD,CAAJ,CAAb;AACD;AACF,KALD;;AAOAiM,IAAAA,IAAI,CAAClO,SAAL,CAAekP,SAAf,GAA2B,SAASA,SAAT,CAAoBJ,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0CT,CAA1C,EAA6CK,GAA7C,EAAkD;AAC3E,WAAKD,OAAL,CAAaC,GAAb,EAAkBC,GAAlB,EAAuBC,GAAvB,EAA4BC,IAA5B,EAAkCC,IAAlC,EAAwCT,CAAxC;;AAEA,WAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,CAApB,EAAuBW,CAAC,KAAK,CAA7B,EAAgC;AAC9B,YAAIV,CAAC,GAAGU,CAAC,IAAI,CAAb;AAEA,YAAIC,KAAK,GAAGrN,IAAI,CAACsN,GAAL,CAAS,IAAItN,IAAI,CAACuN,EAAT,GAAcb,CAAvB,CAAZ;AACA,YAAIc,KAAK,GAAGxN,IAAI,CAACyN,GAAL,CAAS,IAAIzN,IAAI,CAACuN,EAAT,GAAcb,CAAvB,CAAZ;;AAEA,aAAK,IAAIgB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjB,CAApB,EAAuBiB,CAAC,IAAIhB,CAA5B,EAA+B;AAC7B,cAAIiB,MAAM,GAAGN,KAAb;AACA,cAAIO,MAAM,GAAGJ,KAAb;;AAEA,eAAK,IAAIrN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiN,CAApB,EAAuBjN,CAAC,EAAxB,EAA4B;AAC1B,gBAAI0N,EAAE,GAAGZ,IAAI,CAACS,CAAC,GAAGvN,CAAL,CAAb;AACA,gBAAI2N,EAAE,GAAGZ,IAAI,CAACQ,CAAC,GAAGvN,CAAL,CAAb;AAEA,gBAAI4N,EAAE,GAAGd,IAAI,CAACS,CAAC,GAAGvN,CAAJ,GAAQiN,CAAT,CAAb;AACA,gBAAIY,EAAE,GAAGd,IAAI,CAACQ,CAAC,GAAGvN,CAAJ,GAAQiN,CAAT,CAAb;AAEA,gBAAIa,EAAE,GAAGN,MAAM,GAAGI,EAAT,GAAcH,MAAM,GAAGI,EAAhC;AAEAA,YAAAA,EAAE,GAAGL,MAAM,GAAGK,EAAT,GAAcJ,MAAM,GAAGG,EAA5B;AACAA,YAAAA,EAAE,GAAGE,EAAL;AAEAhB,YAAAA,IAAI,CAACS,CAAC,GAAGvN,CAAL,CAAJ,GAAc0N,EAAE,GAAGE,EAAnB;AACAb,YAAAA,IAAI,CAACQ,CAAC,GAAGvN,CAAL,CAAJ,GAAc2N,EAAE,GAAGE,EAAnB;AAEAf,YAAAA,IAAI,CAACS,CAAC,GAAGvN,CAAJ,GAAQiN,CAAT,CAAJ,GAAkBS,EAAE,GAAGE,EAAvB;AACAb,YAAAA,IAAI,CAACQ,CAAC,GAAGvN,CAAJ,GAAQiN,CAAT,CAAJ,GAAkBU,EAAE,GAAGE,EAAvB;AAEA;;AACA,gBAAI7N,CAAC,KAAKuM,CAAV,EAAa;AACXuB,cAAAA,EAAE,GAAGZ,KAAK,GAAGM,MAAR,GAAiBH,KAAK,GAAGI,MAA9B;AAEAA,cAAAA,MAAM,GAAGP,KAAK,GAAGO,MAAR,GAAiBJ,KAAK,GAAGG,MAAlC;AACAA,cAAAA,MAAM,GAAGM,EAAT;AACD;AACF;AACF;AACF;AACF,KAzCD;;AA2CA9B,IAAAA,IAAI,CAAClO,SAAL,CAAeiQ,WAAf,GAA6B,SAASA,WAAT,CAAsBhR,CAAtB,EAAyBiR,CAAzB,EAA4B;AACvD,UAAI1B,CAAC,GAAGzM,IAAI,CAACd,GAAL,CAASiP,CAAT,EAAYjR,CAAZ,IAAiB,CAAzB;AACA,UAAIkR,GAAG,GAAG3B,CAAC,GAAG,CAAd;AACA,UAAIvM,CAAC,GAAG,CAAR;;AACA,WAAKuM,CAAC,GAAGA,CAAC,GAAG,CAAJ,GAAQ,CAAjB,EAAoBA,CAApB,EAAuBA,CAAC,GAAGA,CAAC,KAAK,CAAjC,EAAoC;AAClCvM,QAAAA,CAAC;AACF;;AAED,aAAO,KAAKA,CAAC,GAAG,CAAJ,GAAQkO,GAApB;AACD,KATD;;AAWAjC,IAAAA,IAAI,CAAClO,SAAL,CAAeoQ,SAAf,GAA2B,SAASA,SAAT,CAAoBtB,GAApB,EAAyBC,GAAzB,EAA8BP,CAA9B,EAAiC;AAC1D,UAAIA,CAAC,IAAI,CAAT,EAAY;;AAEZ,WAAK,IAAIvM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuM,CAAC,GAAG,CAAxB,EAA2BvM,CAAC,EAA5B,EAAgC;AAC9B,YAAI6D,CAAC,GAAGgJ,GAAG,CAAC7M,CAAD,CAAX;AAEA6M,QAAAA,GAAG,CAAC7M,CAAD,CAAH,GAAS6M,GAAG,CAACN,CAAC,GAAGvM,CAAJ,GAAQ,CAAT,CAAZ;AACA6M,QAAAA,GAAG,CAACN,CAAC,GAAGvM,CAAJ,GAAQ,CAAT,CAAH,GAAiB6D,CAAjB;AAEAA,QAAAA,CAAC,GAAGiJ,GAAG,CAAC9M,CAAD,CAAP;AAEA8M,QAAAA,GAAG,CAAC9M,CAAD,CAAH,GAAS,CAAC8M,GAAG,CAACP,CAAC,GAAGvM,CAAJ,GAAQ,CAAT,CAAb;AACA8M,QAAAA,GAAG,CAACP,CAAC,GAAGvM,CAAJ,GAAQ,CAAT,CAAH,GAAiB,CAAC6D,CAAlB;AACD;AACF,KAdD;;AAgBAoI,IAAAA,IAAI,CAAClO,SAAL,CAAeqQ,YAAf,GAA8B,SAASA,YAAT,CAAuBC,EAAvB,EAA2B9B,CAA3B,EAA8B;AAC1D,UAAIhK,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAIvC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuM,CAAC,GAAG,CAAxB,EAA2BvM,CAAC,EAA5B,EAAgC;AAC9B,YAAIE,CAAC,GAAGJ,IAAI,CAACwO,KAAL,CAAWD,EAAE,CAAC,IAAIrO,CAAJ,GAAQ,CAAT,CAAF,GAAgBuM,CAA3B,IAAgC,MAAhC,GACNzM,IAAI,CAACwO,KAAL,CAAWD,EAAE,CAAC,IAAIrO,CAAL,CAAF,GAAYuM,CAAvB,CADM,GAENhK,KAFF;AAIA8L,QAAAA,EAAE,CAACrO,CAAD,CAAF,GAAQE,CAAC,GAAG,SAAZ;;AAEA,YAAIA,CAAC,GAAG,SAAR,EAAmB;AACjBqC,UAAAA,KAAK,GAAG,CAAR;AACD,SAFD,MAEO;AACLA,UAAAA,KAAK,GAAGrC,CAAC,GAAG,SAAJ,GAAgB,CAAxB;AACD;AACF;;AAED,aAAOmO,EAAP;AACD,KAjBD;;AAmBApC,IAAAA,IAAI,CAAClO,SAAL,CAAewQ,UAAf,GAA4B,SAASA,UAAT,CAAqBF,EAArB,EAAyBnN,GAAzB,EAA8B2L,GAA9B,EAAmCN,CAAnC,EAAsC;AAChE,UAAIhK,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAIvC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkB,GAApB,EAAyBlB,CAAC,EAA1B,EAA8B;AAC5BuC,QAAAA,KAAK,GAAGA,KAAK,IAAI8L,EAAE,CAACrO,CAAD,CAAF,GAAQ,CAAZ,CAAb;AAEA6M,QAAAA,GAAG,CAAC,IAAI7M,CAAL,CAAH,GAAauC,KAAK,GAAG,MAArB;AAA6BA,QAAAA,KAAK,GAAGA,KAAK,KAAK,EAAlB;AAC7BsK,QAAAA,GAAG,CAAC,IAAI7M,CAAJ,GAAQ,CAAT,CAAH,GAAiBuC,KAAK,GAAG,MAAzB;AAAiCA,QAAAA,KAAK,GAAGA,KAAK,KAAK,EAAlB;AAClC,OAP+D,CAShE;;;AACA,WAAKvC,CAAC,GAAG,IAAIkB,GAAb,EAAkBlB,CAAC,GAAGuM,CAAtB,EAAyB,EAAEvM,CAA3B,EAA8B;AAC5B6M,QAAAA,GAAG,CAAC7M,CAAD,CAAH,GAAS,CAAT;AACD;;AAED1C,MAAAA,MAAM,CAACiF,KAAK,KAAK,CAAX,CAAN;AACAjF,MAAAA,MAAM,CAAC,CAACiF,KAAK,GAAG,CAAC,MAAV,MAAsB,CAAvB,CAAN;AACD,KAhBD;;AAkBA0J,IAAAA,IAAI,CAAClO,SAAL,CAAeyQ,IAAf,GAAsB,SAASA,IAAT,CAAejC,CAAf,EAAkB;AACtC,UAAIkC,EAAE,GAAG,IAAI3P,KAAJ,CAAUyN,CAAV,CAAT;;AACA,WAAK,IAAIvM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuM,CAApB,EAAuBvM,CAAC,EAAxB,EAA4B;AAC1ByO,QAAAA,EAAE,CAACzO,CAAD,CAAF,GAAQ,CAAR;AACD;;AAED,aAAOyO,EAAP;AACD,KAPD;;AASAxC,IAAAA,IAAI,CAAClO,SAAL,CAAemO,IAAf,GAAsB,SAASA,IAAT,CAAeE,CAAf,EAAkBC,CAAlB,EAAqB/J,GAArB,EAA0B;AAC9C,UAAIiK,CAAC,GAAG,IAAI,KAAKyB,WAAL,CAAiB5B,CAAC,CAAC5N,MAAnB,EAA2B6N,CAAC,CAAC7N,MAA7B,CAAZ;AAEA,UAAIoO,GAAG,GAAG,KAAKN,OAAL,CAAaC,CAAb,CAAV;;AAEA,UAAImC,CAAC,GAAG,KAAKF,IAAL,CAAUjC,CAAV,CAAR;;AAEA,UAAIM,GAAG,GAAG,IAAI/N,KAAJ,CAAUyN,CAAV,CAAV;AACA,UAAIoC,IAAI,GAAG,IAAI7P,KAAJ,CAAUyN,CAAV,CAAX;AACA,UAAIqC,IAAI,GAAG,IAAI9P,KAAJ,CAAUyN,CAAV,CAAX;AAEA,UAAIsC,IAAI,GAAG,IAAI/P,KAAJ,CAAUyN,CAAV,CAAX;AACA,UAAIuC,KAAK,GAAG,IAAIhQ,KAAJ,CAAUyN,CAAV,CAAZ;AACA,UAAIwC,KAAK,GAAG,IAAIjQ,KAAJ,CAAUyN,CAAV,CAAZ;AAEA,UAAIyC,IAAI,GAAG1M,GAAG,CAAC/D,KAAf;AACAyQ,MAAAA,IAAI,CAACxQ,MAAL,GAAc+N,CAAd;AAEA,WAAKgC,UAAL,CAAgBnC,CAAC,CAAC7N,KAAlB,EAAyB6N,CAAC,CAAC5N,MAA3B,EAAmCqO,GAAnC,EAAwCN,CAAxC;AACA,WAAKgC,UAAL,CAAgBlC,CAAC,CAAC9N,KAAlB,EAAyB8N,CAAC,CAAC7N,MAA3B,EAAmCqQ,IAAnC,EAAyCtC,CAAzC;AAEA,WAAKU,SAAL,CAAeJ,GAAf,EAAoB6B,CAApB,EAAuBC,IAAvB,EAA6BC,IAA7B,EAAmCrC,CAAnC,EAAsCK,GAAtC;AACA,WAAKK,SAAL,CAAe4B,IAAf,EAAqBH,CAArB,EAAwBI,KAAxB,EAA+BC,KAA/B,EAAsCxC,CAAtC,EAAyCK,GAAzC;;AAEA,WAAK,IAAI5M,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuM,CAApB,EAAuBvM,CAAC,EAAxB,EAA4B;AAC1B,YAAI+N,EAAE,GAAGY,IAAI,CAAC3O,CAAD,CAAJ,GAAU8O,KAAK,CAAC9O,CAAD,CAAf,GAAqB4O,IAAI,CAAC5O,CAAD,CAAJ,GAAU+O,KAAK,CAAC/O,CAAD,CAA7C;AACA4O,QAAAA,IAAI,CAAC5O,CAAD,CAAJ,GAAU2O,IAAI,CAAC3O,CAAD,CAAJ,GAAU+O,KAAK,CAAC/O,CAAD,CAAf,GAAqB4O,IAAI,CAAC5O,CAAD,CAAJ,GAAU8O,KAAK,CAAC9O,CAAD,CAA9C;AACA2O,QAAAA,IAAI,CAAC3O,CAAD,CAAJ,GAAU+N,EAAV;AACD;;AAED,WAAKI,SAAL,CAAeQ,IAAf,EAAqBC,IAArB,EAA2BrC,CAA3B;AACA,WAAKU,SAAL,CAAe0B,IAAf,EAAqBC,IAArB,EAA2BI,IAA3B,EAAiCN,CAAjC,EAAoCnC,CAApC,EAAuCK,GAAvC;AACA,WAAKuB,SAAL,CAAea,IAAf,EAAqBN,CAArB,EAAwBnC,CAAxB;AACA,WAAK6B,YAAL,CAAkBY,IAAlB,EAAwBzC,CAAxB;AAEAjK,MAAAA,GAAG,CAAChE,QAAJ,GAAe8N,CAAC,CAAC9N,QAAF,GAAa+N,CAAC,CAAC/N,QAA9B;AACAgE,MAAAA,GAAG,CAAC9D,MAAJ,GAAa4N,CAAC,CAAC5N,MAAF,GAAW6N,CAAC,CAAC7N,MAA1B;AACA,aAAO8D,GAAG,CAAClC,KAAJ,EAAP;AACD,KAtCD,CAnzD0B,CA21D1B;;;AACAnC,IAAAA,EAAE,CAACF,SAAH,CAAakD,GAAb,GAAmB,SAASA,GAAT,CAAcpC,GAAd,EAAmB;AACpC,UAAIyD,GAAG,GAAG,IAAIrE,EAAJ,CAAO,IAAP,CAAV;AACAqE,MAAAA,GAAG,CAAC/D,KAAJ,GAAY,IAAIO,KAAJ,CAAU,KAAKN,MAAL,GAAcK,GAAG,CAACL,MAA5B,CAAZ;AACA,aAAO,KAAK2N,KAAL,CAAWtN,GAAX,EAAgByD,GAAhB,CAAP;AACD,KAJD,CA51D0B,CAk2D1B;;;AACArE,IAAAA,EAAE,CAACF,SAAH,CAAakR,IAAb,GAAoB,SAASA,IAAT,CAAepQ,GAAf,EAAoB;AACtC,UAAIyD,GAAG,GAAG,IAAIrE,EAAJ,CAAO,IAAP,CAAV;AACAqE,MAAAA,GAAG,CAAC/D,KAAJ,GAAY,IAAIO,KAAJ,CAAU,KAAKN,MAAL,GAAcK,GAAG,CAACL,MAA5B,CAAZ;AACA,aAAOuN,UAAU,CAAC,IAAD,EAAOlN,GAAP,EAAYyD,GAAZ,CAAjB;AACD,KAJD,CAn2D0B,CAy2D1B;;;AACArE,IAAAA,EAAE,CAACF,SAAH,CAAa0M,IAAb,GAAoB,SAASA,IAAT,CAAe5L,GAAf,EAAoB;AACtC,aAAO,KAAKgD,KAAL,GAAasK,KAAb,CAAmBtN,GAAnB,EAAwB,IAAxB,CAAP;AACD,KAFD;;AAIAZ,IAAAA,EAAE,CAACF,SAAH,CAAayD,KAAb,GAAqB,SAASA,KAAT,CAAgB3C,GAAhB,EAAqB;AACxCvB,MAAAA,MAAM,CAAC,OAAOuB,GAAP,KAAe,QAAhB,CAAN;AACAvB,MAAAA,MAAM,CAACuB,GAAG,GAAG,SAAP,CAAN,CAFwC,CAIxC;;AACA,UAAI0D,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAIvC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKxB,MAAzB,EAAiCwB,CAAC,EAAlC,EAAsC;AACpC,YAAIE,CAAC,GAAG,CAAC,KAAK3B,KAAL,CAAWyB,CAAX,IAAgB,CAAjB,IAAsBnB,GAA9B;AACA,YAAIwH,EAAE,GAAG,CAACnG,CAAC,GAAG,SAAL,KAAmBqC,KAAK,GAAG,SAA3B,CAAT;AACAA,QAAAA,KAAK,KAAK,EAAV;AACAA,QAAAA,KAAK,IAAKrC,CAAC,GAAG,SAAL,GAAkB,CAA3B,CAJoC,CAKpC;;AACAqC,QAAAA,KAAK,IAAI8D,EAAE,KAAK,EAAhB;AACA,aAAK9H,KAAL,CAAWyB,CAAX,IAAgBqG,EAAE,GAAG,SAArB;AACD;;AAED,UAAI9D,KAAK,KAAK,CAAd,EAAiB;AACf,aAAKhE,KAAL,CAAWyB,CAAX,IAAgBuC,KAAhB;AACA,aAAK/D,MAAL;AACD;;AAED,aAAO,IAAP;AACD,KAtBD;;AAwBAP,IAAAA,EAAE,CAACF,SAAH,CAAamR,IAAb,GAAoB,SAASA,IAAT,CAAerQ,GAAf,EAAoB;AACtC,aAAO,KAAKgD,KAAL,GAAaL,KAAb,CAAmB3C,GAAnB,CAAP;AACD,KAFD,CAt4D0B,CA04D1B;;;AACAZ,IAAAA,EAAE,CAACF,SAAH,CAAaoR,GAAb,GAAmB,SAASA,GAAT,GAAgB;AACjC,aAAO,KAAKlO,GAAL,CAAS,IAAT,CAAP;AACD,KAFD,CA34D0B,CA+4D1B;;;AACAhD,IAAAA,EAAE,CAACF,SAAH,CAAaqR,IAAb,GAAoB,SAASA,IAAT,GAAiB;AACnC,aAAO,KAAK3E,IAAL,CAAU,KAAK5I,KAAL,EAAV,CAAP;AACD,KAFD,CAh5D0B,CAo5D1B;;;AACA5D,IAAAA,EAAE,CAACF,SAAH,CAAa2D,GAAb,GAAmB,SAASA,GAAT,CAAc7C,GAAd,EAAmB;AACpC,UAAIqB,CAAC,GAAG+D,UAAU,CAACpF,GAAD,CAAlB;AACA,UAAIqB,CAAC,CAAC1B,MAAF,KAAa,CAAjB,EAAoB,OAAO,IAAIP,EAAJ,CAAO,CAAP,CAAP,CAFgB,CAIpC;;AACA,UAAIqF,GAAG,GAAG,IAAV;;AACA,WAAK,IAAItD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGE,CAAC,CAAC1B,MAAtB,EAA8BwB,CAAC,IAAIsD,GAAG,GAAGA,GAAG,CAAC6L,GAAJ,EAAzC,EAAoD;AAClD,YAAIjP,CAAC,CAACF,CAAD,CAAD,KAAS,CAAb,EAAgB;AACjB;;AAED,UAAI,EAAEA,CAAF,GAAME,CAAC,CAAC1B,MAAZ,EAAoB;AAClB,aAAK,IAAIgF,CAAC,GAAGF,GAAG,CAAC6L,GAAJ,EAAb,EAAwBnP,CAAC,GAAGE,CAAC,CAAC1B,MAA9B,EAAsCwB,CAAC,IAAIwD,CAAC,GAAGA,CAAC,CAAC2L,GAAF,EAA/C,EAAwD;AACtD,cAAIjP,CAAC,CAACF,CAAD,CAAD,KAAS,CAAb,EAAgB;AAEhBsD,UAAAA,GAAG,GAAGA,GAAG,CAACrC,GAAJ,CAAQuC,CAAR,CAAN;AACD;AACF;;AAED,aAAOF,GAAP;AACD,KAnBD,CAr5D0B,CA06D1B;;;AACArF,IAAAA,EAAE,CAACF,SAAH,CAAasR,MAAb,GAAsB,SAASA,MAAT,CAAiBC,IAAjB,EAAuB;AAC3ChS,MAAAA,MAAM,CAAC,OAAOgS,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,IAAI,CAArC,CAAN;AACA,UAAI1O,CAAC,GAAG0O,IAAI,GAAG,EAAf;AACA,UAAIpC,CAAC,GAAG,CAACoC,IAAI,GAAG1O,CAAR,IAAa,EAArB;AACA,UAAI2O,SAAS,GAAI,cAAe,KAAK3O,CAArB,IAA6B,KAAKA,CAAlD;AACA,UAAIZ,CAAJ;;AAEA,UAAIY,CAAC,KAAK,CAAV,EAAa;AACX,YAAI2B,KAAK,GAAG,CAAZ;;AAEA,aAAKvC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,KAAKxB,MAArB,EAA6BwB,CAAC,EAA9B,EAAkC;AAChC,cAAIwP,QAAQ,GAAG,KAAKjR,KAAL,CAAWyB,CAAX,IAAgBuP,SAA/B;AACA,cAAI/O,CAAC,GAAI,CAAC,KAAKjC,KAAL,CAAWyB,CAAX,IAAgB,CAAjB,IAAsBwP,QAAvB,IAAoC5O,CAA5C;AACA,eAAKrC,KAAL,CAAWyB,CAAX,IAAgBQ,CAAC,GAAG+B,KAApB;AACAA,UAAAA,KAAK,GAAGiN,QAAQ,KAAM,KAAK5O,CAA3B;AACD;;AAED,YAAI2B,KAAJ,EAAW;AACT,eAAKhE,KAAL,CAAWyB,CAAX,IAAgBuC,KAAhB;AACA,eAAK/D,MAAL;AACD;AACF;;AAED,UAAI0O,CAAC,KAAK,CAAV,EAAa;AACX,aAAKlN,CAAC,GAAG,KAAKxB,MAAL,GAAc,CAAvB,EAA0BwB,CAAC,IAAI,CAA/B,EAAkCA,CAAC,EAAnC,EAAuC;AACrC,eAAKzB,KAAL,CAAWyB,CAAC,GAAGkN,CAAf,IAAoB,KAAK3O,KAAL,CAAWyB,CAAX,CAApB;AACD;;AAED,aAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGkN,CAAhB,EAAmBlN,CAAC,EAApB,EAAwB;AACtB,eAAKzB,KAAL,CAAWyB,CAAX,IAAgB,CAAhB;AACD;;AAED,aAAKxB,MAAL,IAAe0O,CAAf;AACD;;AAED,aAAO,KAAK9M,KAAL,EAAP;AACD,KApCD;;AAsCAnC,IAAAA,EAAE,CAACF,SAAH,CAAa0R,KAAb,GAAqB,SAASA,KAAT,CAAgBH,IAAhB,EAAsB;AACzC;AACAhS,MAAAA,MAAM,CAAC,KAAKgB,QAAL,KAAkB,CAAnB,CAAN;AACA,aAAO,KAAK+Q,MAAL,CAAYC,IAAZ,CAAP;AACD,KAJD,CAj9D0B,CAu9D1B;AACA;AACA;;;AACArR,IAAAA,EAAE,CAACF,SAAH,CAAa2F,MAAb,GAAsB,SAASA,MAAT,CAAiB4L,IAAjB,EAAuBI,IAAvB,EAA6BC,QAA7B,EAAuC;AAC3DrS,MAAAA,MAAM,CAAC,OAAOgS,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,IAAI,CAArC,CAAN;AACA,UAAIM,CAAJ;;AACA,UAAIF,IAAJ,EAAU;AACRE,QAAAA,CAAC,GAAG,CAACF,IAAI,GAAIA,IAAI,GAAG,EAAhB,IAAuB,EAA3B;AACD,OAFD,MAEO;AACLE,QAAAA,CAAC,GAAG,CAAJ;AACD;;AAED,UAAIhP,CAAC,GAAG0O,IAAI,GAAG,EAAf;AACA,UAAIpC,CAAC,GAAGpN,IAAI,CAACV,GAAL,CAAS,CAACkQ,IAAI,GAAG1O,CAAR,IAAa,EAAtB,EAA0B,KAAKpC,MAA/B,CAAR;AACA,UAAIqR,IAAI,GAAG,YAAc,cAAcjP,CAAf,IAAqBA,CAA7C;AACA,UAAIkP,WAAW,GAAGH,QAAlB;AAEAC,MAAAA,CAAC,IAAI1C,CAAL;AACA0C,MAAAA,CAAC,GAAG9P,IAAI,CAACd,GAAL,CAAS,CAAT,EAAY4Q,CAAZ,CAAJ,CAf2D,CAiB3D;;AACA,UAAIE,WAAJ,EAAiB;AACf,aAAK,IAAI9P,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkN,CAApB,EAAuBlN,CAAC,EAAxB,EAA4B;AAC1B8P,UAAAA,WAAW,CAACvR,KAAZ,CAAkByB,CAAlB,IAAuB,KAAKzB,KAAL,CAAWyB,CAAX,CAAvB;AACD;;AACD8P,QAAAA,WAAW,CAACtR,MAAZ,GAAqB0O,CAArB;AACD;;AAED,UAAIA,CAAC,KAAK,CAAV,EAAa,CAAb,KAAoB,IAAI,KAAK1O,MAAL,GAAc0O,CAAlB,EAAqB;AACvC,aAAK1O,MAAL,IAAe0O,CAAf;;AACA,aAAKlN,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,KAAKxB,MAArB,EAA6BwB,CAAC,EAA9B,EAAkC;AAChC,eAAKzB,KAAL,CAAWyB,CAAX,IAAgB,KAAKzB,KAAL,CAAWyB,CAAC,GAAGkN,CAAf,CAAhB;AACD;AACF,OALmB,MAKb;AACL,aAAK3O,KAAL,CAAW,CAAX,IAAgB,CAAhB;AACA,aAAKC,MAAL,GAAc,CAAd;AACD;AAED,UAAI+D,KAAK,GAAG,CAAZ;;AACA,WAAKvC,CAAC,GAAG,KAAKxB,MAAL,GAAc,CAAvB,EAA0BwB,CAAC,IAAI,CAAL,KAAWuC,KAAK,KAAK,CAAV,IAAevC,CAAC,IAAI4P,CAA/B,CAA1B,EAA6D5P,CAAC,EAA9D,EAAkE;AAChE,YAAIuB,IAAI,GAAG,KAAKhD,KAAL,CAAWyB,CAAX,IAAgB,CAA3B;AACA,aAAKzB,KAAL,CAAWyB,CAAX,IAAiBuC,KAAK,IAAK,KAAK3B,CAAhB,GAAuBW,IAAI,KAAKX,CAAhD;AACA2B,QAAAA,KAAK,GAAGhB,IAAI,GAAGsO,IAAf;AACD,OAxC0D,CA0C3D;;;AACA,UAAIC,WAAW,IAAIvN,KAAK,KAAK,CAA7B,EAAgC;AAC9BuN,QAAAA,WAAW,CAACvR,KAAZ,CAAkBuR,WAAW,CAACtR,MAAZ,EAAlB,IAA0C+D,KAA1C;AACD;;AAED,UAAI,KAAK/D,MAAL,KAAgB,CAApB,EAAuB;AACrB,aAAKD,KAAL,CAAW,CAAX,IAAgB,CAAhB;AACA,aAAKC,MAAL,GAAc,CAAd;AACD;;AAED,aAAO,KAAK4B,KAAL,EAAP;AACD,KArDD;;AAuDAnC,IAAAA,EAAE,CAACF,SAAH,CAAagS,KAAb,GAAqB,SAASA,KAAT,CAAgBT,IAAhB,EAAsBI,IAAtB,EAA4BC,QAA5B,EAAsC;AACzD;AACArS,MAAAA,MAAM,CAAC,KAAKgB,QAAL,KAAkB,CAAnB,CAAN;AACA,aAAO,KAAKoF,MAAL,CAAY4L,IAAZ,EAAkBI,IAAlB,EAAwBC,QAAxB,CAAP;AACD,KAJD,CAjhE0B,CAuhE1B;;;AACA1R,IAAAA,EAAE,CAACF,SAAH,CAAaiS,IAAb,GAAoB,SAASA,IAAT,CAAeV,IAAf,EAAqB;AACvC,aAAO,KAAKzN,KAAL,GAAa4N,KAAb,CAAmBH,IAAnB,CAAP;AACD,KAFD;;AAIArR,IAAAA,EAAE,CAACF,SAAH,CAAakS,KAAb,GAAqB,SAASA,KAAT,CAAgBX,IAAhB,EAAsB;AACzC,aAAO,KAAKzN,KAAL,GAAawN,MAAb,CAAoBC,IAApB,CAAP;AACD,KAFD,CA5hE0B,CAgiE1B;;;AACArR,IAAAA,EAAE,CAACF,SAAH,CAAamS,IAAb,GAAoB,SAASA,IAAT,CAAeZ,IAAf,EAAqB;AACvC,aAAO,KAAKzN,KAAL,GAAakO,KAAb,CAAmBT,IAAnB,CAAP;AACD,KAFD;;AAIArR,IAAAA,EAAE,CAACF,SAAH,CAAaoS,KAAb,GAAqB,SAASA,KAAT,CAAgBb,IAAhB,EAAsB;AACzC,aAAO,KAAKzN,KAAL,GAAa6B,MAAb,CAAoB4L,IAApB,CAAP;AACD,KAFD,CAriE0B,CAyiE1B;;;AACArR,IAAAA,EAAE,CAACF,SAAH,CAAa4G,KAAb,GAAqB,SAASA,KAAT,CAAgBT,GAAhB,EAAqB;AACxC5G,MAAAA,MAAM,CAAC,OAAO4G,GAAP,KAAe,QAAf,IAA2BA,GAAG,IAAI,CAAnC,CAAN;AACA,UAAItD,CAAC,GAAGsD,GAAG,GAAG,EAAd;AACA,UAAIgJ,CAAC,GAAG,CAAChJ,GAAG,GAAGtD,CAAP,IAAY,EAApB;AACA,UAAI4C,CAAC,GAAG,KAAK5C,CAAb,CAJwC,CAMxC;;AACA,UAAI,KAAKpC,MAAL,IAAe0O,CAAnB,EAAsB,OAAO,KAAP,CAPkB,CASxC;;AACA,UAAIhN,CAAC,GAAG,KAAK3B,KAAL,CAAW2O,CAAX,CAAR;AAEA,aAAO,CAAC,EAAEhN,CAAC,GAAGsD,CAAN,CAAR;AACD,KAbD,CA1iE0B,CAyjE1B;;;AACAvF,IAAAA,EAAE,CAACF,SAAH,CAAaqS,MAAb,GAAsB,SAASA,MAAT,CAAiBd,IAAjB,EAAuB;AAC3ChS,MAAAA,MAAM,CAAC,OAAOgS,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,IAAI,CAArC,CAAN;AACA,UAAI1O,CAAC,GAAG0O,IAAI,GAAG,EAAf;AACA,UAAIpC,CAAC,GAAG,CAACoC,IAAI,GAAG1O,CAAR,IAAa,EAArB;AAEAtD,MAAAA,MAAM,CAAC,KAAKgB,QAAL,KAAkB,CAAnB,EAAsB,yCAAtB,CAAN;;AAEA,UAAI,KAAKE,MAAL,IAAe0O,CAAnB,EAAsB;AACpB,eAAO,IAAP;AACD;;AAED,UAAItM,CAAC,KAAK,CAAV,EAAa;AACXsM,QAAAA,CAAC;AACF;;AACD,WAAK1O,MAAL,GAAcsB,IAAI,CAACV,GAAL,CAAS8N,CAAT,EAAY,KAAK1O,MAAjB,CAAd;;AAEA,UAAIoC,CAAC,KAAK,CAAV,EAAa;AACX,YAAIiP,IAAI,GAAG,YAAc,cAAcjP,CAAf,IAAqBA,CAA7C;AACA,aAAKrC,KAAL,CAAW,KAAKC,MAAL,GAAc,CAAzB,KAA+BqR,IAA/B;AACD;;AAED,aAAO,KAAKzP,KAAL,EAAP;AACD,KAtBD,CA1jE0B,CAklE1B;;;AACAnC,IAAAA,EAAE,CAACF,SAAH,CAAasS,KAAb,GAAqB,SAASA,KAAT,CAAgBf,IAAhB,EAAsB;AACzC,aAAO,KAAKzN,KAAL,GAAauO,MAAb,CAAoBd,IAApB,CAAP;AACD,KAFD,CAnlE0B,CAulE1B;;;AACArR,IAAAA,EAAE,CAACF,SAAH,CAAa0G,KAAb,GAAqB,SAASA,KAAT,CAAgB5F,GAAhB,EAAqB;AACxCvB,MAAAA,MAAM,CAAC,OAAOuB,GAAP,KAAe,QAAhB,CAAN;AACAvB,MAAAA,MAAM,CAACuB,GAAG,GAAG,SAAP,CAAN;AACA,UAAIA,GAAG,GAAG,CAAV,EAAa,OAAO,KAAKyR,KAAL,CAAW,CAACzR,GAAZ,CAAP,CAH2B,CAKxC;;AACA,UAAI,KAAKP,QAAL,KAAkB,CAAtB,EAAyB;AACvB,YAAI,KAAKE,MAAL,KAAgB,CAAhB,IAAqB,CAAC,KAAKD,KAAL,CAAW,CAAX,IAAgB,CAAjB,IAAsBM,GAA/C,EAAoD;AAClD,eAAKN,KAAL,CAAW,CAAX,IAAgBM,GAAG,IAAI,KAAKN,KAAL,CAAW,CAAX,IAAgB,CAApB,CAAnB;AACA,eAAKD,QAAL,GAAgB,CAAhB;AACA,iBAAO,IAAP;AACD;;AAED,aAAKA,QAAL,GAAgB,CAAhB;AACA,aAAKgS,KAAL,CAAWzR,GAAX;AACA,aAAKP,QAAL,GAAgB,CAAhB;AACA,eAAO,IAAP;AACD,OAjBuC,CAmBxC;;;AACA,aAAO,KAAKmD,MAAL,CAAY5C,GAAZ,CAAP;AACD,KArBD;;AAuBAZ,IAAAA,EAAE,CAACF,SAAH,CAAa0D,MAAb,GAAsB,SAASA,MAAT,CAAiB5C,GAAjB,EAAsB;AAC1C,WAAKN,KAAL,CAAW,CAAX,KAAiBM,GAAjB,CAD0C,CAG1C;;AACA,WAAK,IAAImB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKxB,MAAT,IAAmB,KAAKD,KAAL,CAAWyB,CAAX,KAAiB,SAApD,EAA+DA,CAAC,EAAhE,EAAoE;AAClE,aAAKzB,KAAL,CAAWyB,CAAX,KAAiB,SAAjB;;AACA,YAAIA,CAAC,KAAK,KAAKxB,MAAL,GAAc,CAAxB,EAA2B;AACzB,eAAKD,KAAL,CAAWyB,CAAC,GAAG,CAAf,IAAoB,CAApB;AACD,SAFD,MAEO;AACL,eAAKzB,KAAL,CAAWyB,CAAC,GAAG,CAAf;AACD;AACF;;AACD,WAAKxB,MAAL,GAAcsB,IAAI,CAACd,GAAL,CAAS,KAAKR,MAAd,EAAsBwB,CAAC,GAAG,CAA1B,CAAd;AAEA,aAAO,IAAP;AACD,KAfD,CA/mE0B,CAgoE1B;;;AACA/B,IAAAA,EAAE,CAACF,SAAH,CAAauS,KAAb,GAAqB,SAASA,KAAT,CAAgBzR,GAAhB,EAAqB;AACxCvB,MAAAA,MAAM,CAAC,OAAOuB,GAAP,KAAe,QAAhB,CAAN;AACAvB,MAAAA,MAAM,CAACuB,GAAG,GAAG,SAAP,CAAN;AACA,UAAIA,GAAG,GAAG,CAAV,EAAa,OAAO,KAAK4F,KAAL,CAAW,CAAC5F,GAAZ,CAAP;;AAEb,UAAI,KAAKP,QAAL,KAAkB,CAAtB,EAAyB;AACvB,aAAKA,QAAL,GAAgB,CAAhB;AACA,aAAKmG,KAAL,CAAW5F,GAAX;AACA,aAAKP,QAAL,GAAgB,CAAhB;AACA,eAAO,IAAP;AACD;;AAED,WAAKC,KAAL,CAAW,CAAX,KAAiBM,GAAjB;;AAEA,UAAI,KAAKL,MAAL,KAAgB,CAAhB,IAAqB,KAAKD,KAAL,CAAW,CAAX,IAAgB,CAAzC,EAA4C;AAC1C,aAAKA,KAAL,CAAW,CAAX,IAAgB,CAAC,KAAKA,KAAL,CAAW,CAAX,CAAjB;AACA,aAAKD,QAAL,GAAgB,CAAhB;AACD,OAHD,MAGO;AACL;AACA,aAAK,IAAI0B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKxB,MAAT,IAAmB,KAAKD,KAAL,CAAWyB,CAAX,IAAgB,CAAnD,EAAsDA,CAAC,EAAvD,EAA2D;AACzD,eAAKzB,KAAL,CAAWyB,CAAX,KAAiB,SAAjB;AACA,eAAKzB,KAAL,CAAWyB,CAAC,GAAG,CAAf,KAAqB,CAArB;AACD;AACF;;AAED,aAAO,KAAKI,KAAL,EAAP;AACD,KA1BD;;AA4BAnC,IAAAA,EAAE,CAACF,SAAH,CAAawS,IAAb,GAAoB,SAASA,IAAT,CAAe1R,GAAf,EAAoB;AACtC,aAAO,KAAKgD,KAAL,GAAa4C,KAAb,CAAmB5F,GAAnB,CAAP;AACD,KAFD;;AAIAZ,IAAAA,EAAE,CAACF,SAAH,CAAayS,IAAb,GAAoB,SAASA,IAAT,CAAe3R,GAAf,EAAoB;AACtC,aAAO,KAAKgD,KAAL,GAAayO,KAAb,CAAmBzR,GAAnB,CAAP;AACD,KAFD;;AAIAZ,IAAAA,EAAE,CAACF,SAAH,CAAa0S,IAAb,GAAoB,SAASA,IAAT,GAAiB;AACnC,WAAKnS,QAAL,GAAgB,CAAhB;AAEA,aAAO,IAAP;AACD,KAJD;;AAMAL,IAAAA,EAAE,CAACF,SAAH,CAAawG,GAAb,GAAmB,SAASA,GAAT,GAAgB;AACjC,aAAO,KAAK1C,KAAL,GAAa4O,IAAb,EAAP;AACD,KAFD;;AAIAxS,IAAAA,EAAE,CAACF,SAAH,CAAa2S,YAAb,GAA4B,SAASA,YAAT,CAAuB7R,GAAvB,EAA4BoC,GAA5B,EAAiC0P,KAAjC,EAAwC;AAClE,UAAIzP,GAAG,GAAGrC,GAAG,CAACL,MAAJ,GAAamS,KAAvB;AACA,UAAI3Q,CAAJ;;AAEA,WAAK8B,OAAL,CAAaZ,GAAb;;AAEA,UAAIhB,CAAJ;AACA,UAAIqC,KAAK,GAAG,CAAZ;;AACA,WAAKvC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGnB,GAAG,CAACL,MAApB,EAA4BwB,CAAC,EAA7B,EAAiC;AAC/BE,QAAAA,CAAC,GAAG,CAAC,KAAK3B,KAAL,CAAWyB,CAAC,GAAG2Q,KAAf,IAAwB,CAAzB,IAA8BpO,KAAlC;AACA,YAAIrD,KAAK,GAAG,CAACL,GAAG,CAACN,KAAJ,CAAUyB,CAAV,IAAe,CAAhB,IAAqBiB,GAAjC;AACAf,QAAAA,CAAC,IAAIhB,KAAK,GAAG,SAAb;AACAqD,QAAAA,KAAK,GAAG,CAACrC,CAAC,IAAI,EAAN,KAAchB,KAAK,GAAG,SAAT,GAAsB,CAAnC,CAAR;AACA,aAAKX,KAAL,CAAWyB,CAAC,GAAG2Q,KAAf,IAAwBzQ,CAAC,GAAG,SAA5B;AACD;;AACD,aAAOF,CAAC,GAAG,KAAKxB,MAAL,GAAcmS,KAAzB,EAAgC3Q,CAAC,EAAjC,EAAqC;AACnCE,QAAAA,CAAC,GAAG,CAAC,KAAK3B,KAAL,CAAWyB,CAAC,GAAG2Q,KAAf,IAAwB,CAAzB,IAA8BpO,KAAlC;AACAA,QAAAA,KAAK,GAAGrC,CAAC,IAAI,EAAb;AACA,aAAK3B,KAAL,CAAWyB,CAAC,GAAG2Q,KAAf,IAAwBzQ,CAAC,GAAG,SAA5B;AACD;;AAED,UAAIqC,KAAK,KAAK,CAAd,EAAiB,OAAO,KAAKnC,KAAL,EAAP,CArBiD,CAuBlE;;AACA9C,MAAAA,MAAM,CAACiF,KAAK,KAAK,CAAC,CAAZ,CAAN;AACAA,MAAAA,KAAK,GAAG,CAAR;;AACA,WAAKvC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,KAAKxB,MAArB,EAA6BwB,CAAC,EAA9B,EAAkC;AAChCE,QAAAA,CAAC,GAAG,EAAE,KAAK3B,KAAL,CAAWyB,CAAX,IAAgB,CAAlB,IAAuBuC,KAA3B;AACAA,QAAAA,KAAK,GAAGrC,CAAC,IAAI,EAAb;AACA,aAAK3B,KAAL,CAAWyB,CAAX,IAAgBE,CAAC,GAAG,SAApB;AACD;;AACD,WAAK5B,QAAL,GAAgB,CAAhB;AAEA,aAAO,KAAK8B,KAAL,EAAP;AACD,KAlCD;;AAoCAnC,IAAAA,EAAE,CAACF,SAAH,CAAa6S,QAAb,GAAwB,SAASA,QAAT,CAAmB/R,GAAnB,EAAwBgS,IAAxB,EAA8B;AACpD,UAAIF,KAAK,GAAG,KAAKnS,MAAL,GAAcK,GAAG,CAACL,MAA9B;AAEA,UAAIiH,CAAC,GAAG,KAAK5D,KAAL,EAAR;AACA,UAAI0B,CAAC,GAAG1E,GAAR,CAJoD,CAMpD;;AACA,UAAIiS,GAAG,GAAGvN,CAAC,CAAChF,KAAF,CAAQgF,CAAC,CAAC/E,MAAF,GAAW,CAAnB,IAAwB,CAAlC;;AACA,UAAIuS,OAAO,GAAG,KAAKnN,UAAL,CAAgBkN,GAAhB,CAAd;;AACAH,MAAAA,KAAK,GAAG,KAAKI,OAAb;;AACA,UAAIJ,KAAK,KAAK,CAAd,EAAiB;AACfpN,QAAAA,CAAC,GAAGA,CAAC,CAAC0M,KAAF,CAAQU,KAAR,CAAJ;AACAlL,QAAAA,CAAC,CAAC4J,MAAF,CAASsB,KAAT;AACAG,QAAAA,GAAG,GAAGvN,CAAC,CAAChF,KAAF,CAAQgF,CAAC,CAAC/E,MAAF,GAAW,CAAnB,IAAwB,CAA9B;AACD,OAdmD,CAgBpD;;;AACA,UAAIyP,CAAC,GAAGxI,CAAC,CAACjH,MAAF,GAAW+E,CAAC,CAAC/E,MAArB;AACA,UAAIgF,CAAJ;;AAEA,UAAIqN,IAAI,KAAK,KAAb,EAAoB;AAClBrN,QAAAA,CAAC,GAAG,IAAIvF,EAAJ,CAAO,IAAP,CAAJ;AACAuF,QAAAA,CAAC,CAAChF,MAAF,GAAWyP,CAAC,GAAG,CAAf;AACAzK,QAAAA,CAAC,CAACjF,KAAF,GAAU,IAAIO,KAAJ,CAAU0E,CAAC,CAAChF,MAAZ,CAAV;;AACA,aAAK,IAAIwB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwD,CAAC,CAAChF,MAAtB,EAA8BwB,CAAC,EAA/B,EAAmC;AACjCwD,UAAAA,CAAC,CAACjF,KAAF,CAAQyB,CAAR,IAAa,CAAb;AACD;AACF;;AAED,UAAIgR,IAAI,GAAGvL,CAAC,CAAC5D,KAAF,GAAU6O,YAAV,CAAuBnN,CAAvB,EAA0B,CAA1B,EAA6B0K,CAA7B,CAAX;;AACA,UAAI+C,IAAI,CAAC1S,QAAL,KAAkB,CAAtB,EAAyB;AACvBmH,QAAAA,CAAC,GAAGuL,IAAJ;;AACA,YAAIxN,CAAJ,EAAO;AACLA,UAAAA,CAAC,CAACjF,KAAF,CAAQ0P,CAAR,IAAa,CAAb;AACD;AACF;;AAED,WAAK,IAAIhO,CAAC,GAAGgO,CAAC,GAAG,CAAjB,EAAoBhO,CAAC,IAAI,CAAzB,EAA4BA,CAAC,EAA7B,EAAiC;AAC/B,YAAIgR,EAAE,GAAG,CAACxL,CAAC,CAAClH,KAAF,CAAQgF,CAAC,CAAC/E,MAAF,GAAWyB,CAAnB,IAAwB,CAAzB,IAA8B,SAA9B,IACNwF,CAAC,CAAClH,KAAF,CAAQgF,CAAC,CAAC/E,MAAF,GAAWyB,CAAX,GAAe,CAAvB,IAA4B,CADtB,CAAT,CAD+B,CAI/B;AACA;;AACAgR,QAAAA,EAAE,GAAGnR,IAAI,CAACV,GAAL,CAAU6R,EAAE,GAAGH,GAAN,GAAa,CAAtB,EAAyB,SAAzB,CAAL;;AAEArL,QAAAA,CAAC,CAACiL,YAAF,CAAenN,CAAf,EAAkB0N,EAAlB,EAAsBhR,CAAtB;;AACA,eAAOwF,CAAC,CAACnH,QAAF,KAAe,CAAtB,EAAyB;AACvB2S,UAAAA,EAAE;AACFxL,UAAAA,CAAC,CAACnH,QAAF,GAAa,CAAb;;AACAmH,UAAAA,CAAC,CAACiL,YAAF,CAAenN,CAAf,EAAkB,CAAlB,EAAqBtD,CAArB;;AACA,cAAI,CAACwF,CAAC,CAAC/C,MAAF,EAAL,EAAiB;AACf+C,YAAAA,CAAC,CAACnH,QAAF,IAAc,CAAd;AACD;AACF;;AACD,YAAIkF,CAAJ,EAAO;AACLA,UAAAA,CAAC,CAACjF,KAAF,CAAQ0B,CAAR,IAAagR,EAAb;AACD;AACF;;AACD,UAAIzN,CAAJ,EAAO;AACLA,QAAAA,CAAC,CAACpD,KAAF;AACD;;AACDqF,MAAAA,CAAC,CAACrF,KAAF,GA7DoD,CA+DpD;;AACA,UAAIyQ,IAAI,KAAK,KAAT,IAAkBF,KAAK,KAAK,CAAhC,EAAmC;AACjClL,QAAAA,CAAC,CAAC/B,MAAF,CAASiN,KAAT;AACD;;AAED,aAAO;AACLO,QAAAA,GAAG,EAAE1N,CAAC,IAAI,IADL;AAELlC,QAAAA,GAAG,EAAEmE;AAFA,OAAP;AAID,KAxED,CAntE0B,CA6xE1B;AACA;AACA;AACA;;;AACAxH,IAAAA,EAAE,CAACF,SAAH,CAAaoT,MAAb,GAAsB,SAASA,MAAT,CAAiBtS,GAAjB,EAAsBgS,IAAtB,EAA4BO,QAA5B,EAAsC;AAC1D9T,MAAAA,MAAM,CAAC,CAACuB,GAAG,CAAC6D,MAAJ,EAAF,CAAN;;AAEA,UAAI,KAAKA,MAAL,EAAJ,EAAmB;AACjB,eAAO;AACLwO,UAAAA,GAAG,EAAE,IAAIjT,EAAJ,CAAO,CAAP,CADA;AAELqD,UAAAA,GAAG,EAAE,IAAIrD,EAAJ,CAAO,CAAP;AAFA,SAAP;AAID;;AAED,UAAIiT,GAAJ,EAAS5P,GAAT,EAAcgC,GAAd;;AACA,UAAI,KAAKhF,QAAL,KAAkB,CAAlB,IAAuBO,GAAG,CAACP,QAAJ,KAAiB,CAA5C,EAA+C;AAC7CgF,QAAAA,GAAG,GAAG,KAAKyB,GAAL,GAAWoM,MAAX,CAAkBtS,GAAlB,EAAuBgS,IAAvB,CAAN;;AAEA,YAAIA,IAAI,KAAK,KAAb,EAAoB;AAClBK,UAAAA,GAAG,GAAG5N,GAAG,CAAC4N,GAAJ,CAAQnM,GAAR,EAAN;AACD;;AAED,YAAI8L,IAAI,KAAK,KAAb,EAAoB;AAClBvP,UAAAA,GAAG,GAAGgC,GAAG,CAAChC,GAAJ,CAAQyD,GAAR,EAAN;;AACA,cAAIqM,QAAQ,IAAI9P,GAAG,CAAChD,QAAJ,KAAiB,CAAjC,EAAoC;AAClCgD,YAAAA,GAAG,CAAC0E,IAAJ,CAASnH,GAAT;AACD;AACF;;AAED,eAAO;AACLqS,UAAAA,GAAG,EAAEA,GADA;AAEL5P,UAAAA,GAAG,EAAEA;AAFA,SAAP;AAID;;AAED,UAAI,KAAKhD,QAAL,KAAkB,CAAlB,IAAuBO,GAAG,CAACP,QAAJ,KAAiB,CAA5C,EAA+C;AAC7CgF,QAAAA,GAAG,GAAG,KAAK6N,MAAL,CAAYtS,GAAG,CAACkG,GAAJ,EAAZ,EAAuB8L,IAAvB,CAAN;;AAEA,YAAIA,IAAI,KAAK,KAAb,EAAoB;AAClBK,UAAAA,GAAG,GAAG5N,GAAG,CAAC4N,GAAJ,CAAQnM,GAAR,EAAN;AACD;;AAED,eAAO;AACLmM,UAAAA,GAAG,EAAEA,GADA;AAEL5P,UAAAA,GAAG,EAAEgC,GAAG,CAAChC;AAFJ,SAAP;AAID;;AAED,UAAI,CAAC,KAAKhD,QAAL,GAAgBO,GAAG,CAACP,QAArB,MAAmC,CAAvC,EAA0C;AACxCgF,QAAAA,GAAG,GAAG,KAAKyB,GAAL,GAAWoM,MAAX,CAAkBtS,GAAG,CAACkG,GAAJ,EAAlB,EAA6B8L,IAA7B,CAAN;;AAEA,YAAIA,IAAI,KAAK,KAAb,EAAoB;AAClBvP,UAAAA,GAAG,GAAGgC,GAAG,CAAChC,GAAJ,CAAQyD,GAAR,EAAN;;AACA,cAAIqM,QAAQ,IAAI9P,GAAG,CAAChD,QAAJ,KAAiB,CAAjC,EAAoC;AAClCgD,YAAAA,GAAG,CAAC2E,IAAJ,CAASpH,GAAT;AACD;AACF;;AAED,eAAO;AACLqS,UAAAA,GAAG,EAAE5N,GAAG,CAAC4N,GADJ;AAEL5P,UAAAA,GAAG,EAAEA;AAFA,SAAP;AAID,OA1DyD,CA4D1D;AAEA;;;AACA,UAAIzC,GAAG,CAACL,MAAJ,GAAa,KAAKA,MAAlB,IAA4B,KAAKW,GAAL,CAASN,GAAT,IAAgB,CAAhD,EAAmD;AACjD,eAAO;AACLqS,UAAAA,GAAG,EAAE,IAAIjT,EAAJ,CAAO,CAAP,CADA;AAELqD,UAAAA,GAAG,EAAE;AAFA,SAAP;AAID,OApEyD,CAsE1D;;;AACA,UAAIzC,GAAG,CAACL,MAAJ,KAAe,CAAnB,EAAsB;AACpB,YAAIqS,IAAI,KAAK,KAAb,EAAoB;AAClB,iBAAO;AACLK,YAAAA,GAAG,EAAE,KAAKG,IAAL,CAAUxS,GAAG,CAACN,KAAJ,CAAU,CAAV,CAAV,CADA;AAEL+C,YAAAA,GAAG,EAAE;AAFA,WAAP;AAID;;AAED,YAAIuP,IAAI,KAAK,KAAb,EAAoB;AAClB,iBAAO;AACLK,YAAAA,GAAG,EAAE,IADA;AAEL5P,YAAAA,GAAG,EAAE,IAAIrD,EAAJ,CAAO,KAAK0E,IAAL,CAAU9D,GAAG,CAACN,KAAJ,CAAU,CAAV,CAAV,CAAP;AAFA,WAAP;AAID;;AAED,eAAO;AACL2S,UAAAA,GAAG,EAAE,KAAKG,IAAL,CAAUxS,GAAG,CAACN,KAAJ,CAAU,CAAV,CAAV,CADA;AAEL+C,UAAAA,GAAG,EAAE,IAAIrD,EAAJ,CAAO,KAAK0E,IAAL,CAAU9D,GAAG,CAACN,KAAJ,CAAU,CAAV,CAAV,CAAP;AAFA,SAAP;AAID;;AAED,aAAO,KAAKqS,QAAL,CAAc/R,GAAd,EAAmBgS,IAAnB,CAAP;AACD,KA7FD,CAjyE0B,CAg4E1B;;;AACA5S,IAAAA,EAAE,CAACF,SAAH,CAAamT,GAAb,GAAmB,SAASA,GAAT,CAAcrS,GAAd,EAAmB;AACpC,aAAO,KAAKsS,MAAL,CAAYtS,GAAZ,EAAiB,KAAjB,EAAwB,KAAxB,EAA+BqS,GAAtC;AACD,KAFD,CAj4E0B,CAq4E1B;;;AACAjT,IAAAA,EAAE,CAACF,SAAH,CAAauD,GAAb,GAAmB,SAASA,GAAT,CAAczC,GAAd,EAAmB;AACpC,aAAO,KAAKsS,MAAL,CAAYtS,GAAZ,EAAiB,KAAjB,EAAwB,KAAxB,EAA+ByC,GAAtC;AACD,KAFD;;AAIArD,IAAAA,EAAE,CAACF,SAAH,CAAauT,IAAb,GAAoB,SAASA,IAAT,CAAezS,GAAf,EAAoB;AACtC,aAAO,KAAKsS,MAAL,CAAYtS,GAAZ,EAAiB,KAAjB,EAAwB,IAAxB,EAA8ByC,GAArC;AACD,KAFD,CA14E0B,CA84E1B;;;AACArD,IAAAA,EAAE,CAACF,SAAH,CAAawT,QAAb,GAAwB,SAASA,QAAT,CAAmB1S,GAAnB,EAAwB;AAC9C,UAAI2S,EAAE,GAAG,KAAKL,MAAL,CAAYtS,GAAZ,CAAT,CAD8C,CAG9C;;AACA,UAAI2S,EAAE,CAAClQ,GAAH,CAAOoB,MAAP,EAAJ,EAAqB,OAAO8O,EAAE,CAACN,GAAV;AAErB,UAAI5P,GAAG,GAAGkQ,EAAE,CAACN,GAAH,CAAO5S,QAAP,KAAoB,CAApB,GAAwBkT,EAAE,CAAClQ,GAAH,CAAO2E,IAAP,CAAYpH,GAAZ,CAAxB,GAA2C2S,EAAE,CAAClQ,GAAxD;AAEA,UAAImQ,IAAI,GAAG5S,GAAG,CAACsR,KAAJ,CAAU,CAAV,CAAX;AACA,UAAIuB,EAAE,GAAG7S,GAAG,CAAC4E,KAAJ,CAAU,CAAV,CAAT;AACA,UAAItE,GAAG,GAAGmC,GAAG,CAACnC,GAAJ,CAAQsS,IAAR,CAAV,CAV8C,CAY9C;;AACA,UAAItS,GAAG,GAAG,CAAN,IAAWuS,EAAE,KAAK,CAAP,IAAYvS,GAAG,KAAK,CAAnC,EAAsC,OAAOqS,EAAE,CAACN,GAAV,CAbQ,CAe9C;;AACA,aAAOM,EAAE,CAACN,GAAH,CAAO5S,QAAP,KAAoB,CAApB,GAAwBkT,EAAE,CAACN,GAAH,CAAOZ,KAAP,CAAa,CAAb,CAAxB,GAA0CkB,EAAE,CAACN,GAAH,CAAOzM,KAAP,CAAa,CAAb,CAAjD;AACD,KAjBD;;AAmBAxG,IAAAA,EAAE,CAACF,SAAH,CAAa4E,IAAb,GAAoB,SAASA,IAAT,CAAe9D,GAAf,EAAoB;AACtCvB,MAAAA,MAAM,CAACuB,GAAG,IAAI,SAAR,CAAN;AACA,UAAI2O,CAAC,GAAG,CAAC,KAAK,EAAN,IAAY3O,GAApB;AAEA,UAAI8S,GAAG,GAAG,CAAV;;AACA,WAAK,IAAI3R,CAAC,GAAG,KAAKxB,MAAL,GAAc,CAA3B,EAA8BwB,CAAC,IAAI,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACzC2R,QAAAA,GAAG,GAAG,CAACnE,CAAC,GAAGmE,GAAJ,IAAW,KAAKpT,KAAL,CAAWyB,CAAX,IAAgB,CAA3B,CAAD,IAAkCnB,GAAxC;AACD;;AAED,aAAO8S,GAAP;AACD,KAVD,CAl6E0B,CA86E1B;;;AACA1T,IAAAA,EAAE,CAACF,SAAH,CAAa6E,KAAb,GAAqB,SAASA,KAAT,CAAgB/D,GAAhB,EAAqB;AACxCvB,MAAAA,MAAM,CAACuB,GAAG,IAAI,SAAR,CAAN;AAEA,UAAI0D,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAIvC,CAAC,GAAG,KAAKxB,MAAL,GAAc,CAA3B,EAA8BwB,CAAC,IAAI,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACzC,YAAIE,CAAC,GAAG,CAAC,KAAK3B,KAAL,CAAWyB,CAAX,IAAgB,CAAjB,IAAsBuC,KAAK,GAAG,SAAtC;AACA,aAAKhE,KAAL,CAAWyB,CAAX,IAAiBE,CAAC,GAAGrB,GAAL,GAAY,CAA5B;AACA0D,QAAAA,KAAK,GAAGrC,CAAC,GAAGrB,GAAZ;AACD;;AAED,aAAO,KAAKuB,KAAL,EAAP;AACD,KAXD;;AAaAnC,IAAAA,EAAE,CAACF,SAAH,CAAasT,IAAb,GAAoB,SAASA,IAAT,CAAexS,GAAf,EAAoB;AACtC,aAAO,KAAKgD,KAAL,GAAae,KAAb,CAAmB/D,GAAnB,CAAP;AACD,KAFD;;AAIAZ,IAAAA,EAAE,CAACF,SAAH,CAAa6T,IAAb,GAAoB,SAASA,IAAT,CAAepE,CAAf,EAAkB;AACpClQ,MAAAA,MAAM,CAACkQ,CAAC,CAAClP,QAAF,KAAe,CAAhB,CAAN;AACAhB,MAAAA,MAAM,CAAC,CAACkQ,CAAC,CAAC9K,MAAF,EAAF,CAAN;AAEA,UAAI0J,CAAC,GAAG,IAAR;AACA,UAAIC,CAAC,GAAGmB,CAAC,CAAC3L,KAAF,EAAR;;AAEA,UAAIuK,CAAC,CAAC9N,QAAF,KAAe,CAAnB,EAAsB;AACpB8N,QAAAA,CAAC,GAAGA,CAAC,CAACkF,IAAF,CAAO9D,CAAP,CAAJ;AACD,OAFD,MAEO;AACLpB,QAAAA,CAAC,GAAGA,CAAC,CAACvK,KAAF,EAAJ;AACD,OAXmC,CAapC;;;AACA,UAAIgQ,CAAC,GAAG,IAAI5T,EAAJ,CAAO,CAAP,CAAR;AACA,UAAI6T,CAAC,GAAG,IAAI7T,EAAJ,CAAO,CAAP,CAAR,CAfoC,CAiBpC;;AACA,UAAI8T,CAAC,GAAG,IAAI9T,EAAJ,CAAO,CAAP,CAAR;AACA,UAAI+T,CAAC,GAAG,IAAI/T,EAAJ,CAAO,CAAP,CAAR;AAEA,UAAIgU,CAAC,GAAG,CAAR;;AAEA,aAAO7F,CAAC,CAAC8F,MAAF,MAAc7F,CAAC,CAAC6F,MAAF,EAArB,EAAiC;AAC/B9F,QAAAA,CAAC,CAAC1I,MAAF,CAAS,CAAT;AACA2I,QAAAA,CAAC,CAAC3I,MAAF,CAAS,CAAT;AACA,UAAEuO,CAAF;AACD;;AAED,UAAIE,EAAE,GAAG9F,CAAC,CAACxK,KAAF,EAAT;AACA,UAAIuQ,EAAE,GAAGhG,CAAC,CAACvK,KAAF,EAAT;;AAEA,aAAO,CAACuK,CAAC,CAAC1J,MAAF,EAAR,EAAoB;AAClB,aAAK,IAAI1C,CAAC,GAAG,CAAR,EAAWqS,EAAE,GAAG,CAArB,EAAwB,CAACjG,CAAC,CAAC7N,KAAF,CAAQ,CAAR,IAAa8T,EAAd,MAAsB,CAAtB,IAA2BrS,CAAC,GAAG,EAAvD,EAA2D,EAAEA,CAAF,EAAKqS,EAAE,KAAK,CAAvE,CAAyE;;AACzE,YAAIrS,CAAC,GAAG,CAAR,EAAW;AACToM,UAAAA,CAAC,CAAC1I,MAAF,CAAS1D,CAAT;;AACA,iBAAOA,CAAC,KAAK,CAAb,EAAgB;AACd,gBAAI6R,CAAC,CAACS,KAAF,MAAaR,CAAC,CAACQ,KAAF,EAAjB,EAA4B;AAC1BT,cAAAA,CAAC,CAAC7L,IAAF,CAAOmM,EAAP;AACAL,cAAAA,CAAC,CAAC7L,IAAF,CAAOmM,EAAP;AACD;;AAEDP,YAAAA,CAAC,CAACnO,MAAF,CAAS,CAAT;AACAoO,YAAAA,CAAC,CAACpO,MAAF,CAAS,CAAT;AACD;AACF;;AAED,aAAK,IAAIzD,CAAC,GAAG,CAAR,EAAWsS,EAAE,GAAG,CAArB,EAAwB,CAAClG,CAAC,CAAC9N,KAAF,CAAQ,CAAR,IAAagU,EAAd,MAAsB,CAAtB,IAA2BtS,CAAC,GAAG,EAAvD,EAA2D,EAAEA,CAAF,EAAKsS,EAAE,KAAK,CAAvE,CAAyE;;AACzE,YAAItS,CAAC,GAAG,CAAR,EAAW;AACToM,UAAAA,CAAC,CAAC3I,MAAF,CAASzD,CAAT;;AACA,iBAAOA,CAAC,KAAK,CAAb,EAAgB;AACd,gBAAI8R,CAAC,CAACO,KAAF,MAAaN,CAAC,CAACM,KAAF,EAAjB,EAA4B;AAC1BP,cAAAA,CAAC,CAAC/L,IAAF,CAAOmM,EAAP;AACAH,cAAAA,CAAC,CAAC/L,IAAF,CAAOmM,EAAP;AACD;;AAEDL,YAAAA,CAAC,CAACrO,MAAF,CAAS,CAAT;AACAsO,YAAAA,CAAC,CAACtO,MAAF,CAAS,CAAT;AACD;AACF;;AAED,YAAI0I,CAAC,CAACjN,GAAF,CAAMkN,CAAN,KAAY,CAAhB,EAAmB;AACjBD,UAAAA,CAAC,CAACnG,IAAF,CAAOoG,CAAP;AACAwF,UAAAA,CAAC,CAAC5L,IAAF,CAAO8L,CAAP;AACAD,UAAAA,CAAC,CAAC7L,IAAF,CAAO+L,CAAP;AACD,SAJD,MAIO;AACL3F,UAAAA,CAAC,CAACpG,IAAF,CAAOmG,CAAP;AACA2F,UAAAA,CAAC,CAAC9L,IAAF,CAAO4L,CAAP;AACAG,UAAAA,CAAC,CAAC/L,IAAF,CAAO6L,CAAP;AACD;AACF;;AAED,aAAO;AACLrM,QAAAA,CAAC,EAAEsM,CADE;AAELxO,QAAAA,CAAC,EAAEyO,CAFE;AAGLQ,QAAAA,GAAG,EAAEnG,CAAC,CAACgD,MAAF,CAAS4C,CAAT;AAHA,OAAP;AAKD,KA7ED,CAh8E0B,CA+gF1B;AACA;AACA;;;AACAhU,IAAAA,EAAE,CAACF,SAAH,CAAa0U,MAAb,GAAsB,SAASA,MAAT,CAAiBjF,CAAjB,EAAoB;AACxClQ,MAAAA,MAAM,CAACkQ,CAAC,CAAClP,QAAF,KAAe,CAAhB,CAAN;AACAhB,MAAAA,MAAM,CAAC,CAACkQ,CAAC,CAAC9K,MAAF,EAAF,CAAN;AAEA,UAAI+C,CAAC,GAAG,IAAR;AACA,UAAIlC,CAAC,GAAGiK,CAAC,CAAC3L,KAAF,EAAR;;AAEA,UAAI4D,CAAC,CAACnH,QAAF,KAAe,CAAnB,EAAsB;AACpBmH,QAAAA,CAAC,GAAGA,CAAC,CAAC6L,IAAF,CAAO9D,CAAP,CAAJ;AACD,OAFD,MAEO;AACL/H,QAAAA,CAAC,GAAGA,CAAC,CAAC5D,KAAF,EAAJ;AACD;;AAED,UAAI6Q,EAAE,GAAG,IAAIzU,EAAJ,CAAO,CAAP,CAAT;AACA,UAAI0U,EAAE,GAAG,IAAI1U,EAAJ,CAAO,CAAP,CAAT;AAEA,UAAI2U,KAAK,GAAGrP,CAAC,CAAC1B,KAAF,EAAZ;;AAEA,aAAO4D,CAAC,CAACoN,IAAF,CAAO,CAAP,IAAY,CAAZ,IAAiBtP,CAAC,CAACsP,IAAF,CAAO,CAAP,IAAY,CAApC,EAAuC;AACrC,aAAK,IAAI7S,CAAC,GAAG,CAAR,EAAWqS,EAAE,GAAG,CAArB,EAAwB,CAAC5M,CAAC,CAAClH,KAAF,CAAQ,CAAR,IAAa8T,EAAd,MAAsB,CAAtB,IAA2BrS,CAAC,GAAG,EAAvD,EAA2D,EAAEA,CAAF,EAAKqS,EAAE,KAAK,CAAvE,CAAyE;;AACzE,YAAIrS,CAAC,GAAG,CAAR,EAAW;AACTyF,UAAAA,CAAC,CAAC/B,MAAF,CAAS1D,CAAT;;AACA,iBAAOA,CAAC,KAAK,CAAb,EAAgB;AACd,gBAAI0S,EAAE,CAACJ,KAAH,EAAJ,EAAgB;AACdI,cAAAA,EAAE,CAAC1M,IAAH,CAAQ4M,KAAR;AACD;;AAEDF,YAAAA,EAAE,CAAChP,MAAH,CAAU,CAAV;AACD;AACF;;AAED,aAAK,IAAIzD,CAAC,GAAG,CAAR,EAAWsS,EAAE,GAAG,CAArB,EAAwB,CAAChP,CAAC,CAAChF,KAAF,CAAQ,CAAR,IAAagU,EAAd,MAAsB,CAAtB,IAA2BtS,CAAC,GAAG,EAAvD,EAA2D,EAAEA,CAAF,EAAKsS,EAAE,KAAK,CAAvE,CAAyE;;AACzE,YAAItS,CAAC,GAAG,CAAR,EAAW;AACTsD,UAAAA,CAAC,CAACG,MAAF,CAASzD,CAAT;;AACA,iBAAOA,CAAC,KAAK,CAAb,EAAgB;AACd,gBAAI0S,EAAE,CAACL,KAAH,EAAJ,EAAgB;AACdK,cAAAA,EAAE,CAAC3M,IAAH,CAAQ4M,KAAR;AACD;;AAEDD,YAAAA,EAAE,CAACjP,MAAH,CAAU,CAAV;AACD;AACF;;AAED,YAAI+B,CAAC,CAACtG,GAAF,CAAMoE,CAAN,KAAY,CAAhB,EAAmB;AACjBkC,UAAAA,CAAC,CAACQ,IAAF,CAAO1C,CAAP;AACAmP,UAAAA,EAAE,CAACzM,IAAH,CAAQ0M,EAAR;AACD,SAHD,MAGO;AACLpP,UAAAA,CAAC,CAAC0C,IAAF,CAAOR,CAAP;AACAkN,UAAAA,EAAE,CAAC1M,IAAH,CAAQyM,EAAR;AACD;AACF;;AAED,UAAIpP,GAAJ;;AACA,UAAImC,CAAC,CAACoN,IAAF,CAAO,CAAP,MAAc,CAAlB,EAAqB;AACnBvP,QAAAA,GAAG,GAAGoP,EAAN;AACD,OAFD,MAEO;AACLpP,QAAAA,GAAG,GAAGqP,EAAN;AACD;;AAED,UAAIrP,GAAG,CAACuP,IAAJ,CAAS,CAAT,IAAc,CAAlB,EAAqB;AACnBvP,QAAAA,GAAG,CAAC0C,IAAJ,CAASwH,CAAT;AACD;;AAED,aAAOlK,GAAP;AACD,KAhED;;AAkEArF,IAAAA,EAAE,CAACF,SAAH,CAAayU,GAAb,GAAmB,SAASA,GAAT,CAAc3T,GAAd,EAAmB;AACpC,UAAI,KAAK6D,MAAL,EAAJ,EAAmB,OAAO7D,GAAG,CAAC0F,GAAJ,EAAP;AACnB,UAAI1F,GAAG,CAAC6D,MAAJ,EAAJ,EAAkB,OAAO,KAAK6B,GAAL,EAAP;AAElB,UAAIkB,CAAC,GAAG,KAAK5D,KAAL,EAAR;AACA,UAAI0B,CAAC,GAAG1E,GAAG,CAACgD,KAAJ,EAAR;AACA4D,MAAAA,CAAC,CAACnH,QAAF,GAAa,CAAb;AACAiF,MAAAA,CAAC,CAACjF,QAAF,GAAa,CAAb,CAPoC,CASpC;;AACA,WAAK,IAAIqS,KAAK,GAAG,CAAjB,EAAoBlL,CAAC,CAACyM,MAAF,MAAc3O,CAAC,CAAC2O,MAAF,EAAlC,EAA8CvB,KAAK,EAAnD,EAAuD;AACrDlL,QAAAA,CAAC,CAAC/B,MAAF,CAAS,CAAT;AACAH,QAAAA,CAAC,CAACG,MAAF,CAAS,CAAT;AACD;;AAED,SAAG;AACD,eAAO+B,CAAC,CAACyM,MAAF,EAAP,EAAmB;AACjBzM,UAAAA,CAAC,CAAC/B,MAAF,CAAS,CAAT;AACD;;AACD,eAAOH,CAAC,CAAC2O,MAAF,EAAP,EAAmB;AACjB3O,UAAAA,CAAC,CAACG,MAAF,CAAS,CAAT;AACD;;AAED,YAAI9C,CAAC,GAAG6E,CAAC,CAACtG,GAAF,CAAMoE,CAAN,CAAR;;AACA,YAAI3C,CAAC,GAAG,CAAR,EAAW;AACT;AACA,cAAIiD,CAAC,GAAG4B,CAAR;AACAA,UAAAA,CAAC,GAAGlC,CAAJ;AACAA,UAAAA,CAAC,GAAGM,CAAJ;AACD,SALD,MAKO,IAAIjD,CAAC,KAAK,CAAN,IAAW2C,CAAC,CAACsP,IAAF,CAAO,CAAP,MAAc,CAA7B,EAAgC;AACrC;AACD;;AAEDpN,QAAAA,CAAC,CAACQ,IAAF,CAAO1C,CAAP;AACD,OAnBD,QAmBS,IAnBT;;AAqBA,aAAOA,CAAC,CAAC8L,MAAF,CAASsB,KAAT,CAAP;AACD,KArCD,CAplF0B,CA2nF1B;;;AACA1S,IAAAA,EAAE,CAACF,SAAH,CAAa+U,IAAb,GAAoB,SAASA,IAAT,CAAejU,GAAf,EAAoB;AACtC,aAAO,KAAK+S,IAAL,CAAU/S,GAAV,EAAe4G,CAAf,CAAiB6L,IAAjB,CAAsBzS,GAAtB,CAAP;AACD,KAFD;;AAIAZ,IAAAA,EAAE,CAACF,SAAH,CAAamU,MAAb,GAAsB,SAASA,MAAT,GAAmB;AACvC,aAAO,CAAC,KAAK3T,KAAL,CAAW,CAAX,IAAgB,CAAjB,MAAwB,CAA/B;AACD,KAFD;;AAIAN,IAAAA,EAAE,CAACF,SAAH,CAAauU,KAAb,GAAqB,SAASA,KAAT,GAAkB;AACrC,aAAO,CAAC,KAAK/T,KAAL,CAAW,CAAX,IAAgB,CAAjB,MAAwB,CAA/B;AACD,KAFD,CApoF0B,CAwoF1B;;;AACAN,IAAAA,EAAE,CAACF,SAAH,CAAa0F,KAAb,GAAqB,SAASA,KAAT,CAAgB5E,GAAhB,EAAqB;AACxC,aAAO,KAAKN,KAAL,CAAW,CAAX,IAAgBM,GAAvB;AACD,KAFD,CAzoF0B,CA6oF1B;;;AACAZ,IAAAA,EAAE,CAACF,SAAH,CAAagV,KAAb,GAAqB,SAASA,KAAT,CAAgB7O,GAAhB,EAAqB;AACxC5G,MAAAA,MAAM,CAAC,OAAO4G,GAAP,KAAe,QAAhB,CAAN;AACA,UAAItD,CAAC,GAAGsD,GAAG,GAAG,EAAd;AACA,UAAIgJ,CAAC,GAAG,CAAChJ,GAAG,GAAGtD,CAAP,IAAY,EAApB;AACA,UAAI4C,CAAC,GAAG,KAAK5C,CAAb,CAJwC,CAMxC;;AACA,UAAI,KAAKpC,MAAL,IAAe0O,CAAnB,EAAsB;AACpB,aAAKpL,OAAL,CAAaoL,CAAC,GAAG,CAAjB;;AACA,aAAK3O,KAAL,CAAW2O,CAAX,KAAiB1J,CAAjB;AACA,eAAO,IAAP;AACD,OAXuC,CAaxC;;;AACA,UAAIjB,KAAK,GAAGiB,CAAZ;;AACA,WAAK,IAAIxD,CAAC,GAAGkN,CAAb,EAAgB3K,KAAK,KAAK,CAAV,IAAevC,CAAC,GAAG,KAAKxB,MAAxC,EAAgDwB,CAAC,EAAjD,EAAqD;AACnD,YAAIE,CAAC,GAAG,KAAK3B,KAAL,CAAWyB,CAAX,IAAgB,CAAxB;AACAE,QAAAA,CAAC,IAAIqC,KAAL;AACAA,QAAAA,KAAK,GAAGrC,CAAC,KAAK,EAAd;AACAA,QAAAA,CAAC,IAAI,SAAL;AACA,aAAK3B,KAAL,CAAWyB,CAAX,IAAgBE,CAAhB;AACD;;AACD,UAAIqC,KAAK,KAAK,CAAd,EAAiB;AACf,aAAKhE,KAAL,CAAWyB,CAAX,IAAgBuC,KAAhB;AACA,aAAK/D,MAAL;AACD;;AACD,aAAO,IAAP;AACD,KA3BD;;AA6BAP,IAAAA,EAAE,CAACF,SAAH,CAAa2E,MAAb,GAAsB,SAASA,MAAT,GAAmB;AACvC,aAAO,KAAKlE,MAAL,KAAgB,CAAhB,IAAqB,KAAKD,KAAL,CAAW,CAAX,MAAkB,CAA9C;AACD,KAFD;;AAIAN,IAAAA,EAAE,CAACF,SAAH,CAAa8U,IAAb,GAAoB,SAASA,IAAT,CAAehU,GAAf,EAAoB;AACtC,UAAIP,QAAQ,GAAGO,GAAG,GAAG,CAArB;AAEA,UAAI,KAAKP,QAAL,KAAkB,CAAlB,IAAuB,CAACA,QAA5B,EAAsC,OAAO,CAAC,CAAR;AACtC,UAAI,KAAKA,QAAL,KAAkB,CAAlB,IAAuBA,QAA3B,EAAqC,OAAO,CAAP;AAErC,WAAK8B,KAAL;AAEA,UAAIkD,GAAJ;;AACA,UAAI,KAAK9E,MAAL,GAAc,CAAlB,EAAqB;AACnB8E,QAAAA,GAAG,GAAG,CAAN;AACD,OAFD,MAEO;AACL,YAAIhF,QAAJ,EAAc;AACZO,UAAAA,GAAG,GAAG,CAACA,GAAP;AACD;;AAEDvB,QAAAA,MAAM,CAACuB,GAAG,IAAI,SAAR,EAAmB,mBAAnB,CAAN;AAEA,YAAIqB,CAAC,GAAG,KAAK3B,KAAL,CAAW,CAAX,IAAgB,CAAxB;AACA+E,QAAAA,GAAG,GAAGpD,CAAC,KAAKrB,GAAN,GAAY,CAAZ,GAAgBqB,CAAC,GAAGrB,GAAJ,GAAU,CAAC,CAAX,GAAe,CAArC;AACD;;AACD,UAAI,KAAKP,QAAL,KAAkB,CAAtB,EAAyB,OAAO,CAACgF,GAAD,GAAO,CAAd;AACzB,aAAOA,GAAP;AACD,KAvBD,CA/qF0B,CAwsF1B;AACA;AACA;AACA;;;AACArF,IAAAA,EAAE,CAACF,SAAH,CAAaoB,GAAb,GAAmB,SAASA,GAAT,CAAcN,GAAd,EAAmB;AACpC,UAAI,KAAKP,QAAL,KAAkB,CAAlB,IAAuBO,GAAG,CAACP,QAAJ,KAAiB,CAA5C,EAA+C,OAAO,CAAC,CAAR;AAC/C,UAAI,KAAKA,QAAL,KAAkB,CAAlB,IAAuBO,GAAG,CAACP,QAAJ,KAAiB,CAA5C,EAA+C,OAAO,CAAP;AAE/C,UAAIgF,GAAG,GAAG,KAAK0P,IAAL,CAAUnU,GAAV,CAAV;AACA,UAAI,KAAKP,QAAL,KAAkB,CAAtB,EAAyB,OAAO,CAACgF,GAAD,GAAO,CAAd;AACzB,aAAOA,GAAP;AACD,KAPD,CA5sF0B,CAqtF1B;;;AACArF,IAAAA,EAAE,CAACF,SAAH,CAAaiV,IAAb,GAAoB,SAASA,IAAT,CAAenU,GAAf,EAAoB;AACtC;AACA,UAAI,KAAKL,MAAL,GAAcK,GAAG,CAACL,MAAtB,EAA8B,OAAO,CAAP;AAC9B,UAAI,KAAKA,MAAL,GAAcK,GAAG,CAACL,MAAtB,EAA8B,OAAO,CAAC,CAAR;AAE9B,UAAI8E,GAAG,GAAG,CAAV;;AACA,WAAK,IAAItD,CAAC,GAAG,KAAKxB,MAAL,GAAc,CAA3B,EAA8BwB,CAAC,IAAI,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACzC,YAAIyF,CAAC,GAAG,KAAKlH,KAAL,CAAWyB,CAAX,IAAgB,CAAxB;AACA,YAAIuD,CAAC,GAAG1E,GAAG,CAACN,KAAJ,CAAUyB,CAAV,IAAe,CAAvB;AAEA,YAAIyF,CAAC,KAAKlC,CAAV,EAAa;;AACb,YAAIkC,CAAC,GAAGlC,CAAR,EAAW;AACTD,UAAAA,GAAG,GAAG,CAAC,CAAP;AACD,SAFD,MAEO,IAAImC,CAAC,GAAGlC,CAAR,EAAW;AAChBD,UAAAA,GAAG,GAAG,CAAN;AACD;;AACD;AACD;;AACD,aAAOA,GAAP;AACD,KAnBD;;AAqBArF,IAAAA,EAAE,CAACF,SAAH,CAAakV,GAAb,GAAmB,SAASA,GAAT,CAAcpU,GAAd,EAAmB;AACpC,aAAO,KAAKgU,IAAL,CAAUhU,GAAV,MAAmB,CAA1B;AACD,KAFD;;AAIAZ,IAAAA,EAAE,CAACF,SAAH,CAAamV,EAAb,GAAkB,SAASA,EAAT,CAAarU,GAAb,EAAkB;AAClC,aAAO,KAAKM,GAAL,CAASN,GAAT,MAAkB,CAAzB;AACD,KAFD;;AAIAZ,IAAAA,EAAE,CAACF,SAAH,CAAaoV,IAAb,GAAoB,SAASA,IAAT,CAAetU,GAAf,EAAoB;AACtC,aAAO,KAAKgU,IAAL,CAAUhU,GAAV,KAAkB,CAAzB;AACD,KAFD;;AAIAZ,IAAAA,EAAE,CAACF,SAAH,CAAaqV,GAAb,GAAmB,SAASA,GAAT,CAAcvU,GAAd,EAAmB;AACpC,aAAO,KAAKM,GAAL,CAASN,GAAT,KAAiB,CAAxB;AACD,KAFD;;AAIAZ,IAAAA,EAAE,CAACF,SAAH,CAAasV,GAAb,GAAmB,SAASA,GAAT,CAAcxU,GAAd,EAAmB;AACpC,aAAO,KAAKgU,IAAL,CAAUhU,GAAV,MAAmB,CAAC,CAA3B;AACD,KAFD;;AAIAZ,IAAAA,EAAE,CAACF,SAAH,CAAauV,EAAb,GAAkB,SAASA,EAAT,CAAazU,GAAb,EAAkB;AAClC,aAAO,KAAKM,GAAL,CAASN,GAAT,MAAkB,CAAC,CAA1B;AACD,KAFD;;AAIAZ,IAAAA,EAAE,CAACF,SAAH,CAAawV,IAAb,GAAoB,SAASA,IAAT,CAAe1U,GAAf,EAAoB;AACtC,aAAO,KAAKgU,IAAL,CAAUhU,GAAV,KAAkB,CAAzB;AACD,KAFD;;AAIAZ,IAAAA,EAAE,CAACF,SAAH,CAAayV,GAAb,GAAmB,SAASA,GAAT,CAAc3U,GAAd,EAAmB;AACpC,aAAO,KAAKM,GAAL,CAASN,GAAT,KAAiB,CAAxB;AACD,KAFD;;AAIAZ,IAAAA,EAAE,CAACF,SAAH,CAAa0V,GAAb,GAAmB,SAASA,GAAT,CAAc5U,GAAd,EAAmB;AACpC,aAAO,KAAKgU,IAAL,CAAUhU,GAAV,MAAmB,CAA1B;AACD,KAFD;;AAIAZ,IAAAA,EAAE,CAACF,SAAH,CAAa2V,EAAb,GAAkB,SAASA,EAAT,CAAa7U,GAAb,EAAkB;AAClC,aAAO,KAAKM,GAAL,CAASN,GAAT,MAAkB,CAAzB;AACD,KAFD,CA/wF0B,CAmxF1B;AACA;AACA;AACA;;;AACAZ,IAAAA,EAAE,CAACQ,GAAH,GAAS,SAASA,GAAT,CAAcI,GAAd,EAAmB;AAC1B,aAAO,IAAI8U,GAAJ,CAAQ9U,GAAR,CAAP;AACD,KAFD;;AAIAZ,IAAAA,EAAE,CAACF,SAAH,CAAa6V,KAAb,GAAqB,SAASA,KAAT,CAAgBC,GAAhB,EAAqB;AACxCvW,MAAAA,MAAM,CAAC,CAAC,KAAKmB,GAAP,EAAY,uCAAZ,CAAN;AACAnB,MAAAA,MAAM,CAAC,KAAKgB,QAAL,KAAkB,CAAnB,EAAsB,+BAAtB,CAAN;AACA,aAAOuV,GAAG,CAACC,SAAJ,CAAc,IAAd,EAAoBC,SAApB,CAA8BF,GAA9B,CAAP;AACD,KAJD;;AAMA5V,IAAAA,EAAE,CAACF,SAAH,CAAaiW,OAAb,GAAuB,SAASA,OAAT,GAAoB;AACzC1W,MAAAA,MAAM,CAAC,KAAKmB,GAAN,EAAW,sDAAX,CAAN;AACA,aAAO,KAAKA,GAAL,CAASwV,WAAT,CAAqB,IAArB,CAAP;AACD,KAHD;;AAKAhW,IAAAA,EAAE,CAACF,SAAH,CAAagW,SAAb,GAAyB,SAASA,SAAT,CAAoBF,GAApB,EAAyB;AAChD,WAAKpV,GAAL,GAAWoV,GAAX;AACA,aAAO,IAAP;AACD,KAHD;;AAKA5V,IAAAA,EAAE,CAACF,SAAH,CAAamW,QAAb,GAAwB,SAASA,QAAT,CAAmBL,GAAnB,EAAwB;AAC9CvW,MAAAA,MAAM,CAAC,CAAC,KAAKmB,GAAP,EAAY,uCAAZ,CAAN;AACA,aAAO,KAAKsV,SAAL,CAAeF,GAAf,CAAP;AACD,KAHD;;AAKA5V,IAAAA,EAAE,CAACF,SAAH,CAAaoW,MAAb,GAAsB,SAASA,MAAT,CAAiBtV,GAAjB,EAAsB;AAC1CvB,MAAAA,MAAM,CAAC,KAAKmB,GAAN,EAAW,oCAAX,CAAN;AACA,aAAO,KAAKA,GAAL,CAASyH,GAAT,CAAa,IAAb,EAAmBrH,GAAnB,CAAP;AACD,KAHD;;AAKAZ,IAAAA,EAAE,CAACF,SAAH,CAAaqW,OAAb,GAAuB,SAASA,OAAT,CAAkBvV,GAAlB,EAAuB;AAC5CvB,MAAAA,MAAM,CAAC,KAAKmB,GAAN,EAAW,qCAAX,CAAN;AACA,aAAO,KAAKA,GAAL,CAASuH,IAAT,CAAc,IAAd,EAAoBnH,GAApB,CAAP;AACD,KAHD;;AAKAZ,IAAAA,EAAE,CAACF,SAAH,CAAasW,MAAb,GAAsB,SAASA,MAAT,CAAiBxV,GAAjB,EAAsB;AAC1CvB,MAAAA,MAAM,CAAC,KAAKmB,GAAN,EAAW,oCAAX,CAAN;AACA,aAAO,KAAKA,GAAL,CAAS0H,GAAT,CAAa,IAAb,EAAmBtH,GAAnB,CAAP;AACD,KAHD;;AAKAZ,IAAAA,EAAE,CAACF,SAAH,CAAauW,OAAb,GAAuB,SAASA,OAAT,CAAkBzV,GAAlB,EAAuB;AAC5CvB,MAAAA,MAAM,CAAC,KAAKmB,GAAN,EAAW,qCAAX,CAAN;AACA,aAAO,KAAKA,GAAL,CAASwH,IAAT,CAAc,IAAd,EAAoBpH,GAApB,CAAP;AACD,KAHD;;AAKAZ,IAAAA,EAAE,CAACF,SAAH,CAAawW,MAAb,GAAsB,SAASA,MAAT,CAAiB1V,GAAjB,EAAsB;AAC1CvB,MAAAA,MAAM,CAAC,KAAKmB,GAAN,EAAW,oCAAX,CAAN;AACA,aAAO,KAAKA,GAAL,CAAS+V,GAAT,CAAa,IAAb,EAAmB3V,GAAnB,CAAP;AACD,KAHD;;AAKAZ,IAAAA,EAAE,CAACF,SAAH,CAAa0W,MAAb,GAAsB,SAASA,MAAT,CAAiB5V,GAAjB,EAAsB;AAC1CvB,MAAAA,MAAM,CAAC,KAAKmB,GAAN,EAAW,oCAAX,CAAN;;AACA,WAAKA,GAAL,CAASiW,QAAT,CAAkB,IAAlB,EAAwB7V,GAAxB;;AACA,aAAO,KAAKJ,GAAL,CAASwC,GAAT,CAAa,IAAb,EAAmBpC,GAAnB,CAAP;AACD,KAJD;;AAMAZ,IAAAA,EAAE,CAACF,SAAH,CAAa4W,OAAb,GAAuB,SAASA,OAAT,CAAkB9V,GAAlB,EAAuB;AAC5CvB,MAAAA,MAAM,CAAC,KAAKmB,GAAN,EAAW,oCAAX,CAAN;;AACA,WAAKA,GAAL,CAASiW,QAAT,CAAkB,IAAlB,EAAwB7V,GAAxB;;AACA,aAAO,KAAKJ,GAAL,CAASgM,IAAT,CAAc,IAAd,EAAoB5L,GAApB,CAAP;AACD,KAJD;;AAMAZ,IAAAA,EAAE,CAACF,SAAH,CAAa6W,MAAb,GAAsB,SAASA,MAAT,GAAmB;AACvCtX,MAAAA,MAAM,CAAC,KAAKmB,GAAN,EAAW,oCAAX,CAAN;;AACA,WAAKA,GAAL,CAASoW,QAAT,CAAkB,IAAlB;;AACA,aAAO,KAAKpW,GAAL,CAAS0Q,GAAT,CAAa,IAAb,CAAP;AACD,KAJD;;AAMAlR,IAAAA,EAAE,CAACF,SAAH,CAAa+W,OAAb,GAAuB,SAASA,OAAT,GAAoB;AACzCxX,MAAAA,MAAM,CAAC,KAAKmB,GAAN,EAAW,qCAAX,CAAN;;AACA,WAAKA,GAAL,CAASoW,QAAT,CAAkB,IAAlB;;AACA,aAAO,KAAKpW,GAAL,CAAS2Q,IAAT,CAAc,IAAd,CAAP;AACD,KAJD,CA31F0B,CAi2F1B;;;AACAnR,IAAAA,EAAE,CAACF,SAAH,CAAagX,OAAb,GAAuB,SAASA,OAAT,GAAoB;AACzCzX,MAAAA,MAAM,CAAC,KAAKmB,GAAN,EAAW,qCAAX,CAAN;;AACA,WAAKA,GAAL,CAASoW,QAAT,CAAkB,IAAlB;;AACA,aAAO,KAAKpW,GAAL,CAASuW,IAAT,CAAc,IAAd,CAAP;AACD,KAJD;;AAMA/W,IAAAA,EAAE,CAACF,SAAH,CAAakX,OAAb,GAAuB,SAASA,OAAT,GAAoB;AACzC3X,MAAAA,MAAM,CAAC,KAAKmB,GAAN,EAAW,qCAAX,CAAN;;AACA,WAAKA,GAAL,CAASoW,QAAT,CAAkB,IAAlB;;AACA,aAAO,KAAKpW,GAAL,CAASqU,IAAT,CAAc,IAAd,CAAP;AACD,KAJD,CAx2F0B,CA82F1B;;;AACA7U,IAAAA,EAAE,CAACF,SAAH,CAAamX,MAAb,GAAsB,SAASA,MAAT,GAAmB;AACvC5X,MAAAA,MAAM,CAAC,KAAKmB,GAAN,EAAW,oCAAX,CAAN;;AACA,WAAKA,GAAL,CAASoW,QAAT,CAAkB,IAAlB;;AACA,aAAO,KAAKpW,GAAL,CAASsG,GAAT,CAAa,IAAb,CAAP;AACD,KAJD;;AAMA9G,IAAAA,EAAE,CAACF,SAAH,CAAaoX,MAAb,GAAsB,SAASA,MAAT,CAAiBtW,GAAjB,EAAsB;AAC1CvB,MAAAA,MAAM,CAAC,KAAKmB,GAAL,IAAY,CAACI,GAAG,CAACJ,GAAlB,EAAuB,mBAAvB,CAAN;;AACA,WAAKA,GAAL,CAASoW,QAAT,CAAkB,IAAlB;;AACA,aAAO,KAAKpW,GAAL,CAASiD,GAAT,CAAa,IAAb,EAAmB7C,GAAnB,CAAP;AACD,KAJD,CAr3F0B,CA23F1B;;;AACA,QAAIuW,MAAM,GAAG;AACXC,MAAAA,IAAI,EAAE,IADK;AAEXC,MAAAA,IAAI,EAAE,IAFK;AAGXC,MAAAA,IAAI,EAAE,IAHK;AAIXC,MAAAA,MAAM,EAAE;AAJG,KAAb,CA53F0B,CAm4F1B;;AACA,aAASC,MAAT,CAAiB1Z,IAAjB,EAAuByR,CAAvB,EAA0B;AACxB;AACA,WAAKzR,IAAL,GAAYA,IAAZ;AACA,WAAKyR,CAAL,GAAS,IAAIvP,EAAJ,CAAOuP,CAAP,EAAU,EAAV,CAAT;AACA,WAAKxQ,CAAL,GAAS,KAAKwQ,CAAL,CAAOzJ,SAAP,EAAT;AACA,WAAKuC,CAAL,GAAS,IAAIrI,EAAJ,CAAO,CAAP,EAAUoR,MAAV,CAAiB,KAAKrS,CAAtB,EAAyBiJ,IAAzB,CAA8B,KAAKuH,CAAnC,CAAT;AAEA,WAAKkI,GAAL,GAAW,KAAKC,IAAL,EAAX;AACD;;AAEDF,IAAAA,MAAM,CAAC1X,SAAP,CAAiB4X,IAAjB,GAAwB,SAASA,IAAT,GAAiB;AACvC,UAAID,GAAG,GAAG,IAAIzX,EAAJ,CAAO,IAAP,CAAV;AACAyX,MAAAA,GAAG,CAACnX,KAAJ,GAAY,IAAIO,KAAJ,CAAUgB,IAAI,CAACC,IAAL,CAAU,KAAK/C,CAAL,GAAS,EAAnB,CAAV,CAAZ;AACA,aAAO0Y,GAAP;AACD,KAJD;;AAMAD,IAAAA,MAAM,CAAC1X,SAAP,CAAiB6X,OAAjB,GAA2B,SAASA,OAAT,CAAkB/W,GAAlB,EAAuB;AAChD;AACA;AACA,UAAI+B,CAAC,GAAG/B,GAAR;AACA,UAAIgX,IAAJ;;AAEA,SAAG;AACD,aAAKC,KAAL,CAAWlV,CAAX,EAAc,KAAK8U,GAAnB;AACA9U,QAAAA,CAAC,GAAG,KAAKmV,KAAL,CAAWnV,CAAX,CAAJ;AACAA,QAAAA,CAAC,GAAGA,CAAC,CAACoF,IAAF,CAAO,KAAK0P,GAAZ,CAAJ;AACAG,QAAAA,IAAI,GAAGjV,CAAC,CAACmD,SAAF,EAAP;AACD,OALD,QAKS8R,IAAI,GAAG,KAAK7Y,CALrB;;AAOA,UAAImC,GAAG,GAAG0W,IAAI,GAAG,KAAK7Y,CAAZ,GAAgB,CAAC,CAAjB,GAAqB4D,CAAC,CAACoS,IAAF,CAAO,KAAKxF,CAAZ,CAA/B;;AACA,UAAIrO,GAAG,KAAK,CAAZ,EAAe;AACbyB,QAAAA,CAAC,CAACrC,KAAF,CAAQ,CAAR,IAAa,CAAb;AACAqC,QAAAA,CAAC,CAACpC,MAAF,GAAW,CAAX;AACD,OAHD,MAGO,IAAIW,GAAG,GAAG,CAAV,EAAa;AAClByB,QAAAA,CAAC,CAACqF,IAAF,CAAO,KAAKuH,CAAZ;AACD,OAFM,MAEA;AACL,YAAI5M,CAAC,CAACR,KAAF,KAAY4V,SAAhB,EAA2B;AACzB;AACApV,UAAAA,CAAC,CAACR,KAAF;AACD,SAHD,MAGO;AACL;AACAQ,UAAAA,CAAC,CAACqV,MAAF;AACD;AACF;;AAED,aAAOrV,CAAP;AACD,KA9BD;;AAgCA6U,IAAAA,MAAM,CAAC1X,SAAP,CAAiB+X,KAAjB,GAAyB,SAASA,KAAT,CAAgBI,KAAhB,EAAuB5T,GAAvB,EAA4B;AACnD4T,MAAAA,KAAK,CAACxS,MAAN,CAAa,KAAK1G,CAAlB,EAAqB,CAArB,EAAwBsF,GAAxB;AACD,KAFD;;AAIAmT,IAAAA,MAAM,CAAC1X,SAAP,CAAiBgY,KAAjB,GAAyB,SAASA,KAAT,CAAgBlX,GAAhB,EAAqB;AAC5C,aAAOA,GAAG,CAAC4L,IAAJ,CAAS,KAAKnE,CAAd,CAAP;AACD,KAFD;;AAIA,aAAS6P,IAAT,GAAiB;AACfV,MAAAA,MAAM,CAACW,IAAP,CACE,IADF,EAEE,MAFF,EAGE,yEAHF;AAID;;AACD1Y,IAAAA,QAAQ,CAACyY,IAAD,EAAOV,MAAP,CAAR;;AAEAU,IAAAA,IAAI,CAACpY,SAAL,CAAe+X,KAAf,GAAuB,SAASA,KAAT,CAAgBI,KAAhB,EAAuBG,MAAvB,EAA+B;AACpD;AACA,UAAIxG,IAAI,GAAG,QAAX;AAEA,UAAIyG,MAAM,GAAGxW,IAAI,CAACV,GAAL,CAAS8W,KAAK,CAAC1X,MAAf,EAAuB,CAAvB,CAAb;;AACA,WAAK,IAAIwB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsW,MAApB,EAA4BtW,CAAC,EAA7B,EAAiC;AAC/BqW,QAAAA,MAAM,CAAC9X,KAAP,CAAayB,CAAb,IAAkBkW,KAAK,CAAC3X,KAAN,CAAYyB,CAAZ,CAAlB;AACD;;AACDqW,MAAAA,MAAM,CAAC7X,MAAP,GAAgB8X,MAAhB;;AAEA,UAAIJ,KAAK,CAAC1X,MAAN,IAAgB,CAApB,EAAuB;AACrB0X,QAAAA,KAAK,CAAC3X,KAAN,CAAY,CAAZ,IAAiB,CAAjB;AACA2X,QAAAA,KAAK,CAAC1X,MAAN,GAAe,CAAf;AACA;AACD,OAdmD,CAgBpD;;;AACA,UAAI+X,IAAI,GAAGL,KAAK,CAAC3X,KAAN,CAAY,CAAZ,CAAX;AACA8X,MAAAA,MAAM,CAAC9X,KAAP,CAAa8X,MAAM,CAAC7X,MAAP,EAAb,IAAgC+X,IAAI,GAAG1G,IAAvC;;AAEA,WAAK7P,CAAC,GAAG,EAAT,EAAaA,CAAC,GAAGkW,KAAK,CAAC1X,MAAvB,EAA+BwB,CAAC,EAAhC,EAAoC;AAClC,YAAIwW,IAAI,GAAGN,KAAK,CAAC3X,KAAN,CAAYyB,CAAZ,IAAiB,CAA5B;AACAkW,QAAAA,KAAK,CAAC3X,KAAN,CAAYyB,CAAC,GAAG,EAAhB,IAAuB,CAACwW,IAAI,GAAG3G,IAAR,KAAiB,CAAlB,GAAwB0G,IAAI,KAAK,EAAvD;AACAA,QAAAA,IAAI,GAAGC,IAAP;AACD;;AACDD,MAAAA,IAAI,MAAM,EAAV;AACAL,MAAAA,KAAK,CAAC3X,KAAN,CAAYyB,CAAC,GAAG,EAAhB,IAAsBuW,IAAtB;;AACA,UAAIA,IAAI,KAAK,CAAT,IAAcL,KAAK,CAAC1X,MAAN,GAAe,EAAjC,EAAqC;AACnC0X,QAAAA,KAAK,CAAC1X,MAAN,IAAgB,EAAhB;AACD,OAFD,MAEO;AACL0X,QAAAA,KAAK,CAAC1X,MAAN,IAAgB,CAAhB;AACD;AACF,KAhCD;;AAkCA2X,IAAAA,IAAI,CAACpY,SAAL,CAAegY,KAAf,GAAuB,SAASA,KAAT,CAAgBlX,GAAhB,EAAqB;AAC1C;AACAA,MAAAA,GAAG,CAACN,KAAJ,CAAUM,GAAG,CAACL,MAAd,IAAwB,CAAxB;AACAK,MAAAA,GAAG,CAACN,KAAJ,CAAUM,GAAG,CAACL,MAAJ,GAAa,CAAvB,IAA4B,CAA5B;AACAK,MAAAA,GAAG,CAACL,MAAJ,IAAc,CAAd,CAJ0C,CAM1C;;AACA,UAAI6H,EAAE,GAAG,CAAT;;AACA,WAAK,IAAIrG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnB,GAAG,CAACL,MAAxB,EAAgCwB,CAAC,EAAjC,EAAqC;AACnC,YAAIE,CAAC,GAAGrB,GAAG,CAACN,KAAJ,CAAUyB,CAAV,IAAe,CAAvB;AACAqG,QAAAA,EAAE,IAAInG,CAAC,GAAG,KAAV;AACArB,QAAAA,GAAG,CAACN,KAAJ,CAAUyB,CAAV,IAAeqG,EAAE,GAAG,SAApB;AACAA,QAAAA,EAAE,GAAGnG,CAAC,GAAG,IAAJ,IAAamG,EAAE,GAAG,SAAN,GAAmB,CAA/B,CAAL;AACD,OAbyC,CAe1C;;;AACA,UAAIxH,GAAG,CAACN,KAAJ,CAAUM,GAAG,CAACL,MAAJ,GAAa,CAAvB,MAA8B,CAAlC,EAAqC;AACnCK,QAAAA,GAAG,CAACL,MAAJ;;AACA,YAAIK,GAAG,CAACN,KAAJ,CAAUM,GAAG,CAACL,MAAJ,GAAa,CAAvB,MAA8B,CAAlC,EAAqC;AACnCK,UAAAA,GAAG,CAACL,MAAJ;AACD;AACF;;AACD,aAAOK,GAAP;AACD,KAvBD;;AAyBA,aAAS4X,IAAT,GAAiB;AACfhB,MAAAA,MAAM,CAACW,IAAP,CACE,IADF,EAEE,MAFF,EAGE,gEAHF;AAID;;AACD1Y,IAAAA,QAAQ,CAAC+Y,IAAD,EAAOhB,MAAP,CAAR;;AAEA,aAASiB,IAAT,GAAiB;AACfjB,MAAAA,MAAM,CAACW,IAAP,CACE,IADF,EAEE,MAFF,EAGE,uDAHF;AAID;;AACD1Y,IAAAA,QAAQ,CAACgZ,IAAD,EAAOjB,MAAP,CAAR;;AAEA,aAASkB,MAAT,GAAmB;AACjB;AACAlB,MAAAA,MAAM,CAACW,IAAP,CACE,IADF,EAEE,OAFF,EAGE,qEAHF;AAID;;AACD1Y,IAAAA,QAAQ,CAACiZ,MAAD,EAASlB,MAAT,CAAR;;AAEAkB,IAAAA,MAAM,CAAC5Y,SAAP,CAAiBgY,KAAjB,GAAyB,SAASA,KAAT,CAAgBlX,GAAhB,EAAqB;AAC5C;AACA,UAAI0D,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAIvC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnB,GAAG,CAACL,MAAxB,EAAgCwB,CAAC,EAAjC,EAAqC;AACnC,YAAIgE,EAAE,GAAG,CAACnF,GAAG,CAACN,KAAJ,CAAUyB,CAAV,IAAe,CAAhB,IAAqB,IAArB,GAA4BuC,KAArC;AACA,YAAI8D,EAAE,GAAGrC,EAAE,GAAG,SAAd;AACAA,QAAAA,EAAE,MAAM,EAAR;AAEAnF,QAAAA,GAAG,CAACN,KAAJ,CAAUyB,CAAV,IAAeqG,EAAf;AACA9D,QAAAA,KAAK,GAAGyB,EAAR;AACD;;AACD,UAAIzB,KAAK,KAAK,CAAd,EAAiB;AACf1D,QAAAA,GAAG,CAACN,KAAJ,CAAUM,GAAG,CAACL,MAAJ,EAAV,IAA0B+D,KAA1B;AACD;;AACD,aAAO1D,GAAP;AACD,KAfD,CAxhG0B,CAyiG1B;;;AACAZ,IAAAA,EAAE,CAAC2Y,MAAH,GAAY,SAASC,KAAT,CAAgB9a,IAAhB,EAAsB;AAChC;AACA,UAAIqZ,MAAM,CAACrZ,IAAD,CAAV,EAAkB,OAAOqZ,MAAM,CAACrZ,IAAD,CAAb;AAElB,UAAI8a,KAAJ;;AACA,UAAI9a,IAAI,KAAK,MAAb,EAAqB;AACnB8a,QAAAA,KAAK,GAAG,IAAIV,IAAJ,EAAR;AACD,OAFD,MAEO,IAAIpa,IAAI,KAAK,MAAb,EAAqB;AAC1B8a,QAAAA,KAAK,GAAG,IAAIJ,IAAJ,EAAR;AACD,OAFM,MAEA,IAAI1a,IAAI,KAAK,MAAb,EAAqB;AAC1B8a,QAAAA,KAAK,GAAG,IAAIH,IAAJ,EAAR;AACD,OAFM,MAEA,IAAI3a,IAAI,KAAK,QAAb,EAAuB;AAC5B8a,QAAAA,KAAK,GAAG,IAAIF,MAAJ,EAAR;AACD,OAFM,MAEA;AACL,cAAM,IAAIlZ,KAAJ,CAAU,mBAAmB1B,IAA7B,CAAN;AACD;;AACDqZ,MAAAA,MAAM,CAACrZ,IAAD,CAAN,GAAe8a,KAAf;AAEA,aAAOA,KAAP;AACD,KAnBD,CA1iG0B,CA+jG1B;AACA;AACA;;;AACA,aAASlD,GAAT,CAAc1F,CAAd,EAAiB;AACf,UAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;AACzB,YAAI4I,KAAK,GAAG5Y,EAAE,CAAC2Y,MAAH,CAAU3I,CAAV,CAAZ;;AACA,aAAKA,CAAL,GAAS4I,KAAK,CAACrJ,CAAf;AACA,aAAKqJ,KAAL,GAAaA,KAAb;AACD,OAJD,MAIO;AACLvZ,QAAAA,MAAM,CAAC2Q,CAAC,CAACgF,GAAF,CAAM,CAAN,CAAD,EAAW,gCAAX,CAAN;AACA,aAAKhF,CAAL,GAASA,CAAT;AACA,aAAK4I,KAAL,GAAa,IAAb;AACD;AACF;;AAEDlD,IAAAA,GAAG,CAAC5V,SAAJ,CAAc8W,QAAd,GAAyB,SAASA,QAAT,CAAmBpP,CAAnB,EAAsB;AAC7CnI,MAAAA,MAAM,CAACmI,CAAC,CAACnH,QAAF,KAAe,CAAhB,EAAmB,+BAAnB,CAAN;AACAhB,MAAAA,MAAM,CAACmI,CAAC,CAAChH,GAAH,EAAQ,iCAAR,CAAN;AACD,KAHD;;AAKAkV,IAAAA,GAAG,CAAC5V,SAAJ,CAAc2W,QAAd,GAAyB,SAASA,QAAT,CAAmBjP,CAAnB,EAAsBlC,CAAtB,EAAyB;AAChDjG,MAAAA,MAAM,CAAC,CAACmI,CAAC,CAACnH,QAAF,GAAaiF,CAAC,CAACjF,QAAhB,MAA8B,CAA/B,EAAkC,+BAAlC,CAAN;AACAhB,MAAAA,MAAM,CAACmI,CAAC,CAAChH,GAAF,IAASgH,CAAC,CAAChH,GAAF,KAAU8E,CAAC,CAAC9E,GAAtB,EACJ,iCADI,CAAN;AAED,KAJD;;AAMAkV,IAAAA,GAAG,CAAC5V,SAAJ,CAAc+Y,IAAd,GAAqB,SAASA,IAAT,CAAerR,CAAf,EAAkB;AACrC,UAAI,KAAKoR,KAAT,EAAgB,OAAO,KAAKA,KAAL,CAAWjB,OAAX,CAAmBnQ,CAAnB,EAAsBsO,SAAtB,CAAgC,IAAhC,CAAP;AAChB,aAAOtO,CAAC,CAAC6L,IAAF,CAAO,KAAKrD,CAAZ,EAAe8F,SAAf,CAAyB,IAAzB,CAAP;AACD,KAHD;;AAKAJ,IAAAA,GAAG,CAAC5V,SAAJ,CAAcgH,GAAd,GAAoB,SAASA,GAAT,CAAcU,CAAd,EAAiB;AACnC,UAAIA,CAAC,CAAC/C,MAAF,EAAJ,EAAgB;AACd,eAAO+C,CAAC,CAAC5D,KAAF,EAAP;AACD;;AAED,aAAO,KAAKoM,CAAL,CAAO9H,GAAP,CAAWV,CAAX,EAAcsO,SAAd,CAAwB,IAAxB,CAAP;AACD,KAND;;AAQAJ,IAAAA,GAAG,CAAC5V,SAAJ,CAAcmI,GAAd,GAAoB,SAASA,GAAT,CAAcT,CAAd,EAAiBlC,CAAjB,EAAoB;AACtC,WAAKmR,QAAL,CAAcjP,CAAd,EAAiBlC,CAAjB;;AAEA,UAAID,GAAG,GAAGmC,CAAC,CAACS,GAAF,CAAM3C,CAAN,CAAV;;AACA,UAAID,GAAG,CAACnE,GAAJ,CAAQ,KAAK8O,CAAb,KAAmB,CAAvB,EAA0B;AACxB3K,QAAAA,GAAG,CAAC2C,IAAJ,CAAS,KAAKgI,CAAd;AACD;;AACD,aAAO3K,GAAG,CAACyQ,SAAJ,CAAc,IAAd,CAAP;AACD,KARD;;AAUAJ,IAAAA,GAAG,CAAC5V,SAAJ,CAAciI,IAAd,GAAqB,SAASA,IAAT,CAAeP,CAAf,EAAkBlC,CAAlB,EAAqB;AACxC,WAAKmR,QAAL,CAAcjP,CAAd,EAAiBlC,CAAjB;;AAEA,UAAID,GAAG,GAAGmC,CAAC,CAACO,IAAF,CAAOzC,CAAP,CAAV;;AACA,UAAID,GAAG,CAACnE,GAAJ,CAAQ,KAAK8O,CAAb,KAAmB,CAAvB,EAA0B;AACxB3K,QAAAA,GAAG,CAAC2C,IAAJ,CAAS,KAAKgI,CAAd;AACD;;AACD,aAAO3K,GAAP;AACD,KARD;;AAUAqQ,IAAAA,GAAG,CAAC5V,SAAJ,CAAcoI,GAAd,GAAoB,SAASA,GAAT,CAAcV,CAAd,EAAiBlC,CAAjB,EAAoB;AACtC,WAAKmR,QAAL,CAAcjP,CAAd,EAAiBlC,CAAjB;;AAEA,UAAID,GAAG,GAAGmC,CAAC,CAACU,GAAF,CAAM5C,CAAN,CAAV;;AACA,UAAID,GAAG,CAACuP,IAAJ,CAAS,CAAT,IAAc,CAAlB,EAAqB;AACnBvP,QAAAA,GAAG,CAAC0C,IAAJ,CAAS,KAAKiI,CAAd;AACD;;AACD,aAAO3K,GAAG,CAACyQ,SAAJ,CAAc,IAAd,CAAP;AACD,KARD;;AAUAJ,IAAAA,GAAG,CAAC5V,SAAJ,CAAckI,IAAd,GAAqB,SAASA,IAAT,CAAeR,CAAf,EAAkBlC,CAAlB,EAAqB;AACxC,WAAKmR,QAAL,CAAcjP,CAAd,EAAiBlC,CAAjB;;AAEA,UAAID,GAAG,GAAGmC,CAAC,CAACQ,IAAF,CAAO1C,CAAP,CAAV;;AACA,UAAID,GAAG,CAACuP,IAAJ,CAAS,CAAT,IAAc,CAAlB,EAAqB;AACnBvP,QAAAA,GAAG,CAAC0C,IAAJ,CAAS,KAAKiI,CAAd;AACD;;AACD,aAAO3K,GAAP;AACD,KARD;;AAUAqQ,IAAAA,GAAG,CAAC5V,SAAJ,CAAcyW,GAAd,GAAoB,SAASA,GAAT,CAAc/O,CAAd,EAAiB5G,GAAjB,EAAsB;AACxC,WAAKgW,QAAL,CAAcpP,CAAd;;AACA,aAAO,KAAKqR,IAAL,CAAUrR,CAAC,CAACwK,KAAF,CAAQpR,GAAR,CAAV,CAAP;AACD,KAHD;;AAKA8U,IAAAA,GAAG,CAAC5V,SAAJ,CAAc0M,IAAd,GAAqB,SAASA,IAAT,CAAehF,CAAf,EAAkBlC,CAAlB,EAAqB;AACxC,WAAKmR,QAAL,CAAcjP,CAAd,EAAiBlC,CAAjB;;AACA,aAAO,KAAKuT,IAAL,CAAUrR,CAAC,CAACgF,IAAF,CAAOlH,CAAP,CAAV,CAAP;AACD,KAHD;;AAKAoQ,IAAAA,GAAG,CAAC5V,SAAJ,CAAckD,GAAd,GAAoB,SAASA,GAAT,CAAcwE,CAAd,EAAiBlC,CAAjB,EAAoB;AACtC,WAAKmR,QAAL,CAAcjP,CAAd,EAAiBlC,CAAjB;;AACA,aAAO,KAAKuT,IAAL,CAAUrR,CAAC,CAACxE,GAAF,CAAMsC,CAAN,CAAV,CAAP;AACD,KAHD;;AAKAoQ,IAAAA,GAAG,CAAC5V,SAAJ,CAAcqR,IAAd,GAAqB,SAASA,IAAT,CAAe3J,CAAf,EAAkB;AACrC,aAAO,KAAKgF,IAAL,CAAUhF,CAAV,EAAaA,CAAC,CAAC5D,KAAF,EAAb,CAAP;AACD,KAFD;;AAIA8R,IAAAA,GAAG,CAAC5V,SAAJ,CAAcoR,GAAd,GAAoB,SAASA,GAAT,CAAc1J,CAAd,EAAiB;AACnC,aAAO,KAAKxE,GAAL,CAASwE,CAAT,EAAYA,CAAZ,CAAP;AACD,KAFD;;AAIAkO,IAAAA,GAAG,CAAC5V,SAAJ,CAAciX,IAAd,GAAqB,SAASA,IAAT,CAAevP,CAAf,EAAkB;AACrC,UAAIA,CAAC,CAAC/C,MAAF,EAAJ,EAAgB,OAAO+C,CAAC,CAAC5D,KAAF,EAAP;AAEhB,UAAIkV,IAAI,GAAG,KAAK9I,CAAL,CAAOxK,KAAP,CAAa,CAAb,CAAX;AACAnG,MAAAA,MAAM,CAACyZ,IAAI,GAAG,CAAP,KAAa,CAAd,CAAN,CAJqC,CAMrC;;AACA,UAAIA,IAAI,KAAK,CAAb,EAAgB;AACd,YAAIrV,GAAG,GAAG,KAAKuM,CAAL,CAAO/H,GAAP,CAAW,IAAIjI,EAAJ,CAAO,CAAP,CAAX,EAAsByF,MAAtB,CAA6B,CAA7B,CAAV;AACA,eAAO,KAAKhC,GAAL,CAAS+D,CAAT,EAAY/D,GAAZ,CAAP;AACD,OAVoC,CAYrC;AACA;AACA;;;AACA,UAAI8B,CAAC,GAAG,KAAKyK,CAAL,CAAOuC,IAAP,CAAY,CAAZ,CAAR;AACA,UAAItD,CAAC,GAAG,CAAR;;AACA,aAAO,CAAC1J,CAAC,CAACd,MAAF,EAAD,IAAec,CAAC,CAACC,KAAF,CAAQ,CAAR,MAAe,CAArC,EAAwC;AACtCyJ,QAAAA,CAAC;AACD1J,QAAAA,CAAC,CAACE,MAAF,CAAS,CAAT;AACD;;AACDpG,MAAAA,MAAM,CAAC,CAACkG,CAAC,CAACd,MAAF,EAAF,CAAN;AAEA,UAAIsU,GAAG,GAAG,IAAI/Y,EAAJ,CAAO,CAAP,EAAU2V,KAAV,CAAgB,IAAhB,CAAV;AACA,UAAIqD,IAAI,GAAGD,GAAG,CAAC9B,MAAJ,EAAX,CAxBqC,CA0BrC;AACA;;AACA,UAAIgC,IAAI,GAAG,KAAKjJ,CAAL,CAAOuC,IAAP,CAAY,CAAZ,EAAe9M,MAAf,CAAsB,CAAtB,CAAX;AACA,UAAIyT,CAAC,GAAG,KAAKlJ,CAAL,CAAOlK,SAAP,EAAR;AACAoT,MAAAA,CAAC,GAAG,IAAIlZ,EAAJ,CAAO,IAAIkZ,CAAJ,GAAQA,CAAf,EAAkBvD,KAAlB,CAAwB,IAAxB,CAAJ;;AAEA,aAAO,KAAKlS,GAAL,CAASyV,CAAT,EAAYD,IAAZ,EAAkB/X,GAAlB,CAAsB8X,IAAtB,MAAgC,CAAvC,EAA0C;AACxCE,QAAAA,CAAC,CAAC/C,OAAF,CAAU6C,IAAV;AACD;;AAED,UAAIzW,CAAC,GAAG,KAAKkB,GAAL,CAASyV,CAAT,EAAY3T,CAAZ,CAAR;AACA,UAAI5C,CAAC,GAAG,KAAKc,GAAL,CAAS+D,CAAT,EAAYjC,CAAC,CAAC+M,IAAF,CAAO,CAAP,EAAU7M,MAAV,CAAiB,CAAjB,CAAZ,CAAR;AACA,UAAIG,CAAC,GAAG,KAAKnC,GAAL,CAAS+D,CAAT,EAAYjC,CAAZ,CAAR;AACA,UAAIyK,CAAC,GAAGf,CAAR;;AACA,aAAOrJ,CAAC,CAAC1E,GAAF,CAAM6X,GAAN,MAAe,CAAtB,EAAyB;AACvB,YAAItB,GAAG,GAAG7R,CAAV;;AACA,aAAK,IAAI7D,CAAC,GAAG,CAAb,EAAgB0V,GAAG,CAACvW,GAAJ,CAAQ6X,GAAR,MAAiB,CAAjC,EAAoChX,CAAC,EAArC,EAAyC;AACvC0V,UAAAA,GAAG,GAAGA,GAAG,CAACd,MAAJ,EAAN;AACD;;AACDtX,QAAAA,MAAM,CAAC0C,CAAC,GAAGiO,CAAL,CAAN;AACA,YAAI1K,CAAC,GAAG,KAAK7B,GAAL,CAASlB,CAAT,EAAY,IAAIvC,EAAJ,CAAO,CAAP,EAAUoR,MAAV,CAAiBpB,CAAC,GAAGjO,CAAJ,GAAQ,CAAzB,CAAZ,CAAR;AAEAY,QAAAA,CAAC,GAAGA,CAAC,CAAC6T,MAAF,CAASlR,CAAT,CAAJ;AACA/C,QAAAA,CAAC,GAAG+C,CAAC,CAACqR,MAAF,EAAJ;AACA/Q,QAAAA,CAAC,GAAGA,CAAC,CAAC4Q,MAAF,CAASjU,CAAT,CAAJ;AACAyN,QAAAA,CAAC,GAAGjO,CAAJ;AACD;;AAED,aAAOY,CAAP;AACD,KAvDD;;AAyDA+S,IAAAA,GAAG,CAAC5V,SAAJ,CAAc+U,IAAd,GAAqB,SAASA,IAAT,CAAerN,CAAf,EAAkB;AACrC,UAAI2R,GAAG,GAAG3R,CAAC,CAACgN,MAAF,CAAS,KAAKxE,CAAd,CAAV;;AACA,UAAImJ,GAAG,CAAC9Y,QAAJ,KAAiB,CAArB,EAAwB;AACtB8Y,QAAAA,GAAG,CAAC9Y,QAAJ,GAAe,CAAf;AACA,eAAO,KAAKwY,IAAL,CAAUM,GAAV,EAAelC,MAAf,EAAP;AACD,OAHD,MAGO;AACL,eAAO,KAAK4B,IAAL,CAAUM,GAAV,CAAP;AACD;AACF,KARD;;AAUAzD,IAAAA,GAAG,CAAC5V,SAAJ,CAAc2D,GAAd,GAAoB,SAASA,GAAT,CAAc+D,CAAd,EAAiB5G,GAAjB,EAAsB;AACxC,UAAIA,GAAG,CAAC6D,MAAJ,EAAJ,EAAkB,OAAO,IAAIzE,EAAJ,CAAO,CAAP,EAAU2V,KAAV,CAAgB,IAAhB,CAAP;AAClB,UAAI/U,GAAG,CAACgU,IAAJ,CAAS,CAAT,MAAgB,CAApB,EAAuB,OAAOpN,CAAC,CAAC5D,KAAF,EAAP;AAEvB,UAAIwV,UAAU,GAAG,CAAjB;AACA,UAAIC,GAAG,GAAG,IAAIxY,KAAJ,CAAU,KAAKuY,UAAf,CAAV;AACAC,MAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,IAAIrZ,EAAJ,CAAO,CAAP,EAAU2V,KAAV,CAAgB,IAAhB,CAAT;AACA0D,MAAAA,GAAG,CAAC,CAAD,CAAH,GAAS7R,CAAT;;AACA,WAAK,IAAIzF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsX,GAAG,CAAC9Y,MAAxB,EAAgCwB,CAAC,EAAjC,EAAqC;AACnCsX,QAAAA,GAAG,CAACtX,CAAD,CAAH,GAAS,KAAKiB,GAAL,CAASqW,GAAG,CAACtX,CAAC,GAAG,CAAL,CAAZ,EAAqByF,CAArB,CAAT;AACD;;AAED,UAAInC,GAAG,GAAGgU,GAAG,CAAC,CAAD,CAAb;AACA,UAAIC,OAAO,GAAG,CAAd;AACA,UAAIC,UAAU,GAAG,CAAjB;AACA,UAAI9X,KAAK,GAAGb,GAAG,CAACkF,SAAJ,KAAkB,EAA9B;;AACA,UAAIrE,KAAK,KAAK,CAAd,EAAiB;AACfA,QAAAA,KAAK,GAAG,EAAR;AACD;;AAED,WAAKM,CAAC,GAAGnB,GAAG,CAACL,MAAJ,GAAa,CAAtB,EAAyBwB,CAAC,IAAI,CAA9B,EAAiCA,CAAC,EAAlC,EAAsC;AACpC,YAAIuB,IAAI,GAAG1C,GAAG,CAACN,KAAJ,CAAUyB,CAAV,CAAX;;AACA,aAAK,IAAIC,CAAC,GAAGP,KAAK,GAAG,CAArB,EAAwBO,CAAC,IAAI,CAA7B,EAAgCA,CAAC,EAAjC,EAAqC;AACnC,cAAIiE,GAAG,GAAI3C,IAAI,IAAItB,CAAT,GAAc,CAAxB;;AACA,cAAIqD,GAAG,KAAKgU,GAAG,CAAC,CAAD,CAAf,EAAoB;AAClBhU,YAAAA,GAAG,GAAG,KAAK6L,GAAL,CAAS7L,GAAT,CAAN;AACD;;AAED,cAAIY,GAAG,KAAK,CAAR,IAAaqT,OAAO,KAAK,CAA7B,EAAgC;AAC9BC,YAAAA,UAAU,GAAG,CAAb;AACA;AACD;;AAEDD,UAAAA,OAAO,KAAK,CAAZ;AACAA,UAAAA,OAAO,IAAIrT,GAAX;AACAsT,UAAAA,UAAU;AACV,cAAIA,UAAU,KAAKH,UAAf,KAA8BrX,CAAC,KAAK,CAAN,IAAWC,CAAC,KAAK,CAA/C,CAAJ,EAAuD;AAEvDqD,UAAAA,GAAG,GAAG,KAAKrC,GAAL,CAASqC,GAAT,EAAcgU,GAAG,CAACC,OAAD,CAAjB,CAAN;AACAC,UAAAA,UAAU,GAAG,CAAb;AACAD,UAAAA,OAAO,GAAG,CAAV;AACD;;AACD7X,QAAAA,KAAK,GAAG,EAAR;AACD;;AAED,aAAO4D,GAAP;AACD,KA9CD;;AAgDAqQ,IAAAA,GAAG,CAAC5V,SAAJ,CAAc+V,SAAd,GAA0B,SAASA,SAAT,CAAoBjV,GAApB,EAAyB;AACjD,UAAI+B,CAAC,GAAG/B,GAAG,CAACyS,IAAJ,CAAS,KAAKrD,CAAd,CAAR;AAEA,aAAOrN,CAAC,KAAK/B,GAAN,GAAY+B,CAAC,CAACiB,KAAF,EAAZ,GAAwBjB,CAA/B;AACD,KAJD;;AAMA+S,IAAAA,GAAG,CAAC5V,SAAJ,CAAckW,WAAd,GAA4B,SAASA,WAAT,CAAsBpV,GAAtB,EAA2B;AACrD,UAAIyE,GAAG,GAAGzE,GAAG,CAACgD,KAAJ,EAAV;AACAyB,MAAAA,GAAG,CAAC7E,GAAJ,GAAU,IAAV;AACA,aAAO6E,GAAP;AACD,KAJD,CA9xG0B,CAoyG1B;AACA;AACA;;;AAEArF,IAAAA,EAAE,CAACwZ,IAAH,GAAU,SAASA,IAAT,CAAe5Y,GAAf,EAAoB;AAC5B,aAAO,IAAI6Y,IAAJ,CAAS7Y,GAAT,CAAP;AACD,KAFD;;AAIA,aAAS6Y,IAAT,CAAezJ,CAAf,EAAkB;AAChB0F,MAAAA,GAAG,CAACyC,IAAJ,CAAS,IAAT,EAAenI,CAAf;AAEA,WAAK0C,KAAL,GAAa,KAAK1C,CAAL,CAAOlK,SAAP,EAAb;;AACA,UAAI,KAAK4M,KAAL,GAAa,EAAb,KAAoB,CAAxB,EAA2B;AACzB,aAAKA,KAAL,IAAc,KAAM,KAAKA,KAAL,GAAa,EAAjC;AACD;;AAED,WAAK/P,CAAL,GAAS,IAAI3C,EAAJ,CAAO,CAAP,EAAUoR,MAAV,CAAiB,KAAKsB,KAAtB,CAAT;AACA,WAAKe,EAAL,GAAU,KAAKoF,IAAL,CAAU,KAAKlW,CAAL,CAAOuO,GAAP,EAAV,CAAV;AACA,WAAKwI,IAAL,GAAY,KAAK/W,CAAL,CAAO6R,MAAP,CAAc,KAAKxE,CAAnB,CAAZ;AAEA,WAAK2J,IAAL,GAAY,KAAKD,IAAL,CAAU1W,GAAV,CAAc,KAAKL,CAAnB,EAAsB0P,KAAtB,CAA4B,CAA5B,EAA+BY,GAA/B,CAAmC,KAAKjD,CAAxC,CAAZ;AACA,WAAK2J,IAAL,GAAY,KAAKA,IAAL,CAAUtG,IAAV,CAAe,KAAK1Q,CAApB,CAAZ;AACA,WAAKgX,IAAL,GAAY,KAAKhX,CAAL,CAAOuF,GAAP,CAAW,KAAKyR,IAAhB,CAAZ;AACD;;AACDla,IAAAA,QAAQ,CAACga,IAAD,EAAO/D,GAAP,CAAR;;AAEA+D,IAAAA,IAAI,CAAC3Z,SAAL,CAAe+V,SAAf,GAA2B,SAASA,SAAT,CAAoBjV,GAApB,EAAyB;AAClD,aAAO,KAAKiY,IAAL,CAAUjY,GAAG,CAACoR,KAAJ,CAAU,KAAKU,KAAf,CAAV,CAAP;AACD,KAFD;;AAIA+G,IAAAA,IAAI,CAAC3Z,SAAL,CAAekW,WAAf,GAA6B,SAASA,WAAT,CAAsBpV,GAAtB,EAA2B;AACtD,UAAI+B,CAAC,GAAG,KAAKkW,IAAL,CAAUjY,GAAG,CAACoC,GAAJ,CAAQ,KAAK0W,IAAb,CAAV,CAAR;AACA/W,MAAAA,CAAC,CAACnC,GAAF,GAAQ,IAAR;AACA,aAAOmC,CAAP;AACD,KAJD;;AAMA8W,IAAAA,IAAI,CAAC3Z,SAAL,CAAe0M,IAAf,GAAsB,SAASA,IAAT,CAAehF,CAAf,EAAkBlC,CAAlB,EAAqB;AACzC,UAAIkC,CAAC,CAAC/C,MAAF,MAAca,CAAC,CAACb,MAAF,EAAlB,EAA8B;AAC5B+C,QAAAA,CAAC,CAAClH,KAAF,CAAQ,CAAR,IAAa,CAAb;AACAkH,QAAAA,CAAC,CAACjH,MAAF,GAAW,CAAX;AACA,eAAOiH,CAAP;AACD;;AAED,UAAI5B,CAAC,GAAG4B,CAAC,CAACgF,IAAF,CAAOlH,CAAP,CAAR;AACA,UAAI/C,CAAC,GAAGqD,CAAC,CAACwM,KAAF,CAAQ,KAAKM,KAAb,EAAoB1P,GAApB,CAAwB,KAAK2W,IAA7B,EAAmCxH,MAAnC,CAA0C,KAAKO,KAA/C,EAAsD1P,GAAtD,CAA0D,KAAKgN,CAA/D,CAAR;AACA,UAAI4J,CAAC,GAAGhU,CAAC,CAACoC,IAAF,CAAOzF,CAAP,EAAUkD,MAAV,CAAiB,KAAKiN,KAAtB,CAAR;AACA,UAAIrN,GAAG,GAAGuU,CAAV;;AAEA,UAAIA,CAAC,CAAC1Y,GAAF,CAAM,KAAK8O,CAAX,KAAiB,CAArB,EAAwB;AACtB3K,QAAAA,GAAG,GAAGuU,CAAC,CAAC5R,IAAF,CAAO,KAAKgI,CAAZ,CAAN;AACD,OAFD,MAEO,IAAI4J,CAAC,CAAChF,IAAF,CAAO,CAAP,IAAY,CAAhB,EAAmB;AACxBvP,QAAAA,GAAG,GAAGuU,CAAC,CAAC7R,IAAF,CAAO,KAAKiI,CAAZ,CAAN;AACD;;AAED,aAAO3K,GAAG,CAACyQ,SAAJ,CAAc,IAAd,CAAP;AACD,KAnBD;;AAqBA2D,IAAAA,IAAI,CAAC3Z,SAAL,CAAekD,GAAf,GAAqB,SAASA,GAAT,CAAcwE,CAAd,EAAiBlC,CAAjB,EAAoB;AACvC,UAAIkC,CAAC,CAAC/C,MAAF,MAAca,CAAC,CAACb,MAAF,EAAlB,EAA8B,OAAO,IAAIzE,EAAJ,CAAO,CAAP,EAAU8V,SAAV,CAAoB,IAApB,CAAP;AAE9B,UAAIlQ,CAAC,GAAG4B,CAAC,CAACxE,GAAF,CAAMsC,CAAN,CAAR;AACA,UAAI/C,CAAC,GAAGqD,CAAC,CAACwM,KAAF,CAAQ,KAAKM,KAAb,EAAoB1P,GAApB,CAAwB,KAAK2W,IAA7B,EAAmCxH,MAAnC,CAA0C,KAAKO,KAA/C,EAAsD1P,GAAtD,CAA0D,KAAKgN,CAA/D,CAAR;AACA,UAAI4J,CAAC,GAAGhU,CAAC,CAACoC,IAAF,CAAOzF,CAAP,EAAUkD,MAAV,CAAiB,KAAKiN,KAAtB,CAAR;AACA,UAAIrN,GAAG,GAAGuU,CAAV;;AACA,UAAIA,CAAC,CAAC1Y,GAAF,CAAM,KAAK8O,CAAX,KAAiB,CAArB,EAAwB;AACtB3K,QAAAA,GAAG,GAAGuU,CAAC,CAAC5R,IAAF,CAAO,KAAKgI,CAAZ,CAAN;AACD,OAFD,MAEO,IAAI4J,CAAC,CAAChF,IAAF,CAAO,CAAP,IAAY,CAAhB,EAAmB;AACxBvP,QAAAA,GAAG,GAAGuU,CAAC,CAAC7R,IAAF,CAAO,KAAKiI,CAAZ,CAAN;AACD;;AAED,aAAO3K,GAAG,CAACyQ,SAAJ,CAAc,IAAd,CAAP;AACD,KAdD;;AAgBA2D,IAAAA,IAAI,CAAC3Z,SAAL,CAAe+U,IAAf,GAAsB,SAASA,IAAT,CAAerN,CAAf,EAAkB;AACtC;AACA,UAAInC,GAAG,GAAG,KAAKwT,IAAL,CAAUrR,CAAC,CAACgN,MAAF,CAAS,KAAKxE,CAAd,EAAiBhN,GAAjB,CAAqB,KAAKyQ,EAA1B,CAAV,CAAV;AACA,aAAOpO,GAAG,CAACyQ,SAAJ,CAAc,IAAd,CAAP;AACD,KAJD;AAKD,GAl3GD,EAk3GIlX,MAl3GJ,EAk3GYP,cAl3GZ;AAm3GC,CAp3G4B,CAA7B;AAs3GA,MAAMwb,OAAO,GAAG,cAAhB;AAGA,IAAIC,sBAAsB,GAAG,KAA7B;AACA,IAAIC,aAAa,GAAG,KAApB;AACA,MAAMC,SAAS,GAAG;AAAEC,EAAAA,KAAK,EAAE,CAAT;AAAY,aAAW,CAAvB;AAA0BC,EAAAA,IAAI,EAAE,CAAhC;AAAmCC,EAAAA,OAAO,EAAE,CAA5C;AAA+CC,EAAAA,KAAK,EAAE,CAAtD;AAAyDlY,EAAAA,GAAG,EAAE;AAA9D,CAAlB;AACA,IAAImY,SAAS,GAAGL,SAAS,CAAC,SAAD,CAAzB;AACA,IAAIM,aAAa,GAAG,IAApB;;AACA,SAASC,eAAT,GAA2B;AACvB,MAAI;AACA,UAAMC,OAAO,GAAG,EAAhB,CADA,CAEA;;AACA,KAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,MAAvB,EAA+BC,OAA/B,CAAwCC,IAAD,IAAU;AAC7C,UAAI;AACA,YAAI,OAAOC,SAAP,CAAiBD,IAAjB,MAA2B,MAA/B,EAAuC;AACnC,gBAAM,IAAIlb,KAAJ,CAAU,eAAV,CAAN;AACH;;AACD;AACH,OALD,CAMA,OAAO4a,KAAP,EAAc;AACVI,QAAAA,OAAO,CAACI,IAAR,CAAaF,IAAb;AACH;AACJ,KAVD;;AAWA,QAAIF,OAAO,CAACja,MAAZ,EAAoB;AAChB,YAAM,IAAIf,KAAJ,CAAU,aAAagb,OAAO,CAACK,IAAR,CAAa,IAAb,CAAvB,CAAN;AACH;;AACD,QAAIC,MAAM,CAACC,YAAP,CAAoB,IAApB,EAA0BJ,SAA1B,CAAoC,KAApC,MAA+CG,MAAM,CAACC,YAAP,CAAoB,IAApB,EAA0B,MAA1B,CAAnD,EAAsF;AAClF,YAAM,IAAIvb,KAAJ,CAAU,uBAAV,CAAN;AACH;AACJ,GApBD,CAqBA,OAAO4a,KAAP,EAAc;AACV,WAAOA,KAAK,CAACY,OAAb;AACH;;AACD,SAAO,IAAP;AACH;;AACD,MAAMC,eAAe,GAAGV,eAAe,EAAvC;;AACA,IAAIW,QAAJ;;AACA,CAAC,UAAUA,QAAV,EAAoB;AACjBA,EAAAA,QAAQ,CAAC,OAAD,CAAR,GAAoB,OAApB;AACAA,EAAAA,QAAQ,CAAC,MAAD,CAAR,GAAmB,MAAnB;AACAA,EAAAA,QAAQ,CAAC,SAAD,CAAR,GAAsB,SAAtB;AACAA,EAAAA,QAAQ,CAAC,OAAD,CAAR,GAAoB,OAApB;AACAA,EAAAA,QAAQ,CAAC,KAAD,CAAR,GAAkB,KAAlB;AACH,CAND,EAMGA,QAAQ,KAAKA,QAAQ,GAAG,EAAhB,CANX;;AAOA,IAAIC,SAAJ;;AACA,CAAC,UAAUA,SAAV,EAAqB;AAClB;AACA;AACA;AACAA,EAAAA,SAAS,CAAC,eAAD,CAAT,GAA6B,eAA7B,CAJkB,CAKlB;;AACAA,EAAAA,SAAS,CAAC,iBAAD,CAAT,GAA+B,iBAA/B,CANkB,CAOlB;AACA;;AACAA,EAAAA,SAAS,CAAC,uBAAD,CAAT,GAAqC,uBAArC,CATkB,CAUlB;AACA;;AACAA,EAAAA,SAAS,CAAC,eAAD,CAAT,GAA6B,eAA7B,CAZkB,CAalB;;AACAA,EAAAA,SAAS,CAAC,cAAD,CAAT,GAA4B,cAA5B,CAdkB,CAelB;;AACAA,EAAAA,SAAS,CAAC,SAAD,CAAT,GAAuB,SAAvB,CAhBkB,CAiBlB;AACA;AACA;;AACAA,EAAAA,SAAS,CAAC,gBAAD,CAAT,GAA8B,gBAA9B,CApBkB,CAqBlB;AACA;AACA;;AACAA,EAAAA,SAAS,CAAC,eAAD,CAAT,GAA6B,eAA7B,CAxBkB,CAyBlB;AACA;AACA;AACA;;AACAA,EAAAA,SAAS,CAAC,aAAD,CAAT,GAA2B,aAA3B,CA7BkB,CA8BlB;AACA;AACA;;AACAA,EAAAA,SAAS,CAAC,kBAAD,CAAT,GAAgC,kBAAhC,CAjCkB,CAkClB;AACA;AACA;;AACAA,EAAAA,SAAS,CAAC,kBAAD,CAAT,GAAgC,kBAAhC,CArCkB,CAsClB;AACA;AACA;;AACAA,EAAAA,SAAS,CAAC,qBAAD,CAAT,GAAmC,qBAAnC,CAzCkB,CA0ClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,EAAAA,SAAS,CAAC,gBAAD,CAAT,GAA8B,gBAA9B,CApDkB,CAqDlB;AACA;;AACAA,EAAAA,SAAS,CAAC,oBAAD,CAAT,GAAkC,oBAAlC,CAvDkB,CAwDlB;AACA;;AACAA,EAAAA,SAAS,CAAC,eAAD,CAAT,GAA6B,eAA7B,CA1DkB,CA2DlB;AACA;;AACAA,EAAAA,SAAS,CAAC,yBAAD,CAAT,GAAuC,yBAAvC,CA7DkB,CA8DlB;AACA;;AACAA,EAAAA,SAAS,CAAC,yBAAD,CAAT,GAAuC,yBAAvC,CAhEkB,CAiElB;AACA;AACA;AACA;AACA;AACA;;AACAA,EAAAA,SAAS,CAAC,sBAAD,CAAT,GAAoC,sBAApC;AACH,CAxED,EAwEGA,SAAS,KAAKA,SAAS,GAAG,EAAjB,CAxEZ;;AAyEA,MAAMC,MAAN,CAAa;AACTrb,EAAAA,WAAW,CAAC8Z,OAAD,EAAU;AACjBwB,IAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4B,SAA5B,EAAuC;AACnCC,MAAAA,UAAU,EAAE,IADuB;AAEnCC,MAAAA,KAAK,EAAE3B,OAF4B;AAGnC4B,MAAAA,QAAQ,EAAE;AAHyB,KAAvC;AAKH;;AACDC,EAAAA,IAAI,CAACC,QAAD,EAAWC,IAAX,EAAiB;AACjB,UAAMC,KAAK,GAAGF,QAAQ,CAACG,WAAT,EAAd;;AACA,QAAI9B,SAAS,CAAC6B,KAAD,CAAT,IAAoB,IAAxB,EAA8B;AAC1B,WAAKE,kBAAL,CAAwB,wBAAxB,EAAkD,UAAlD,EAA8DJ,QAA9D;AACH;;AACD,QAAItB,SAAS,GAAGL,SAAS,CAAC6B,KAAD,CAAzB,EAAkC;AAC9B;AACH;;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAAkBF,OAAlB,EAA2BJ,IAA3B;AACH;;AACD3B,EAAAA,KAAK,CAAC,GAAG2B,IAAJ,EAAU;AACX,SAAKF,IAAL,CAAUN,MAAM,CAACe,MAAP,CAAcC,KAAxB,EAA+BR,IAA/B;AACH;;AACD1B,EAAAA,IAAI,CAAC,GAAG0B,IAAJ,EAAU;AACV,SAAKF,IAAL,CAAUN,MAAM,CAACe,MAAP,CAAcE,IAAxB,EAA8BT,IAA9B;AACH;;AACDU,EAAAA,IAAI,CAAC,GAAGV,IAAJ,EAAU;AACV,SAAKF,IAAL,CAAUN,MAAM,CAACe,MAAP,CAAcI,OAAxB,EAAiCX,IAAjC;AACH;;AACDY,EAAAA,SAAS,CAACxB,OAAD,EAAUyB,IAAV,EAAgBC,MAAhB,EAAwB;AAC7B;AACA,QAAI3C,aAAJ,EAAmB;AACf,aAAO,KAAKyC,SAAL,CAAe,gBAAf,EAAiCC,IAAjC,EAAuC,EAAvC,CAAP;AACH;;AACD,QAAI,CAACA,IAAL,EAAW;AACPA,MAAAA,IAAI,GAAGrB,MAAM,CAACuB,MAAP,CAAcC,aAArB;AACH;;AACD,QAAI,CAACF,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG,EAAT;AACH;;AACD,UAAMG,cAAc,GAAG,EAAvB;AACAxB,IAAAA,MAAM,CAACyB,IAAP,CAAYJ,MAAZ,EAAoBjC,OAApB,CAA6BsC,GAAD,IAAS;AACjC,UAAI;AACAF,QAAAA,cAAc,CAACjC,IAAf,CAAoBmC,GAAG,GAAG,GAAN,GAAYC,IAAI,CAACC,SAAL,CAAeP,MAAM,CAACK,GAAD,CAArB,CAAhC;AACH,OAFD,CAGA,OAAO3C,KAAP,EAAc;AACVyC,QAAAA,cAAc,CAACjC,IAAf,CAAoBmC,GAAG,GAAG,GAAN,GAAYC,IAAI,CAACC,SAAL,CAAeP,MAAM,CAACK,GAAD,CAAN,CAAYxb,QAAZ,EAAf,CAAhC;AACH;AACJ,KAPD;AAQAsb,IAAAA,cAAc,CAACjC,IAAf,CAAqB,QAAO6B,IAAK,EAAjC;AACAI,IAAAA,cAAc,CAACjC,IAAf,CAAqB,WAAU,KAAKf,OAAQ,EAA5C;AACA,UAAMqD,MAAM,GAAGlC,OAAf;;AACA,QAAI6B,cAAc,CAACtc,MAAnB,EAA2B;AACvBya,MAAAA,OAAO,IAAI,OAAO6B,cAAc,CAAChC,IAAf,CAAoB,IAApB,CAAP,GAAmC,GAA9C;AACH,KAzB4B,CA0B7B;;;AACA,UAAMT,KAAK,GAAG,IAAI5a,KAAJ,CAAUwb,OAAV,CAAd;AACAZ,IAAAA,KAAK,CAAC8C,MAAN,GAAeA,MAAf;AACA9C,IAAAA,KAAK,CAACqC,IAAN,GAAaA,IAAb;AACApB,IAAAA,MAAM,CAACyB,IAAP,CAAYJ,MAAZ,EAAoBjC,OAApB,CAA4B,UAAUsC,GAAV,EAAe;AACvC3C,MAAAA,KAAK,CAAC2C,GAAD,CAAL,GAAaL,MAAM,CAACK,GAAD,CAAnB;AACH,KAFD;AAGA,WAAO3C,KAAP;AACH;;AACD+C,EAAAA,UAAU,CAACnC,OAAD,EAAUyB,IAAV,EAAgBC,MAAhB,EAAwB;AAC9B,UAAM,KAAKF,SAAL,CAAexB,OAAf,EAAwByB,IAAxB,EAA8BC,MAA9B,CAAN;AACH;;AACDX,EAAAA,kBAAkB,CAACf,OAAD,EAAUld,IAAV,EAAgB0d,KAAhB,EAAuB;AACrC,WAAO,KAAK2B,UAAL,CAAgBnC,OAAhB,EAAyBI,MAAM,CAACuB,MAAP,CAAcS,gBAAvC,EAAyD;AAC5DC,MAAAA,QAAQ,EAAEvf,IADkD;AAE5D0d,MAAAA,KAAK,EAAEA;AAFqD,KAAzD,CAAP;AAIH;;AACDnc,EAAAA,MAAM,CAACie,SAAD,EAAYtC,OAAZ,EAAqByB,IAArB,EAA2BC,MAA3B,EAAmC;AACrC,QAAI,CAAC,CAACY,SAAN,EAAiB;AACb;AACH;;AACD,SAAKH,UAAL,CAAgBnC,OAAhB,EAAyByB,IAAzB,EAA+BC,MAA/B;AACH;;AACDa,EAAAA,cAAc,CAACD,SAAD,EAAYtC,OAAZ,EAAqBld,IAArB,EAA2B0d,KAA3B,EAAkC;AAC5C,QAAI,CAAC,CAAC8B,SAAN,EAAiB;AACb;AACH;;AACD,SAAKvB,kBAAL,CAAwBf,OAAxB,EAAiCld,IAAjC,EAAuC0d,KAAvC;AACH;;AACDgC,EAAAA,cAAc,CAACxC,OAAD,EAAU;AACpB,QAAIC,eAAJ,EAAqB;AACjB,WAAKkC,UAAL,CAAgB,6CAAhB,EAA+D/B,MAAM,CAACuB,MAAP,CAAcc,qBAA7E,EAAoG;AAChGC,QAAAA,SAAS,EAAE,4BADqF;AACvDhD,QAAAA,IAAI,EAAEO;AADiD,OAApG;AAGH;AACJ;;AACD0C,EAAAA,eAAe,CAACnC,KAAD,EAAQR,OAAR,EAAiB;AAC5B,QAAI,OAAQQ,KAAR,KAAmB,QAAvB,EAAiC;AAC7B;AACH;;AACD,QAAIR,OAAO,IAAI,IAAf,EAAqB;AACjBA,MAAAA,OAAO,GAAG,gBAAV;AACH;;AACD,QAAIQ,KAAK,GAAG,CAAR,IAAaA,KAAK,IAAI,gBAA1B,EAA4C;AACxC,WAAK2B,UAAL,CAAgBnC,OAAhB,EAAyBI,MAAM,CAACuB,MAAP,CAAciB,aAAvC,EAAsD;AAClDF,QAAAA,SAAS,EAAE,kBADuC;AAElDG,QAAAA,KAAK,EAAE,mBAF2C;AAGlDrC,QAAAA,KAAK,EAAEA;AAH2C,OAAtD;AAKH;;AACD,QAAIA,KAAK,GAAG,CAAZ,EAAe;AACX,WAAK2B,UAAL,CAAgBnC,OAAhB,EAAyBI,MAAM,CAACuB,MAAP,CAAciB,aAAvC,EAAsD;AAClDF,QAAAA,SAAS,EAAE,kBADuC;AAElDG,QAAAA,KAAK,EAAE,aAF2C;AAGlDrC,QAAAA,KAAK,EAAEA;AAH2C,OAAtD;AAKH;AACJ;;AACDsC,EAAAA,kBAAkB,CAACC,KAAD,EAAQC,aAAR,EAAuBhD,OAAvB,EAAgC;AAC9C,QAAIA,OAAJ,EAAa;AACTA,MAAAA,OAAO,GAAG,OAAOA,OAAjB;AACH,KAFD,MAGK;AACDA,MAAAA,OAAO,GAAG,EAAV;AACH;;AACD,QAAI+C,KAAK,GAAGC,aAAZ,EAA2B;AACvB,WAAKb,UAAL,CAAgB,qBAAqBnC,OAArC,EAA8CI,MAAM,CAACuB,MAAP,CAAcsB,gBAA5D,EAA8E;AAC1EF,QAAAA,KAAK,EAAEA,KADmE;AAE1EC,QAAAA,aAAa,EAAEA;AAF2D,OAA9E;AAIH;;AACD,QAAID,KAAK,GAAGC,aAAZ,EAA2B;AACvB,WAAKb,UAAL,CAAgB,uBAAuBnC,OAAvC,EAAgDI,MAAM,CAACuB,MAAP,CAAcuB,mBAA9D,EAAmF;AAC/EH,QAAAA,KAAK,EAAEA,KADwE;AAE/EC,QAAAA,aAAa,EAAEA;AAFgE,OAAnF;AAIH;AACJ;;AACDG,EAAAA,QAAQ,CAACC,MAAD,EAASC,IAAT,EAAe;AACnB,QAAID,MAAM,KAAK/C,MAAX,IAAqB+C,MAAM,IAAI,IAAnC,EAAyC;AACrC,WAAKjB,UAAL,CAAgB,aAAhB,EAA+B/B,MAAM,CAACuB,MAAP,CAAc2B,WAA7C,EAA0D;AAAExgB,QAAAA,IAAI,EAAEugB,IAAI,CAACvgB;AAAb,OAA1D;AACH;AACJ;;AACDygB,EAAAA,aAAa,CAACH,MAAD,EAASC,IAAT,EAAe;AACxB,QAAID,MAAM,KAAKC,IAAf,EAAqB;AACjB,WAAKlB,UAAL,CAAgB,uCAAuCH,IAAI,CAACC,SAAL,CAAeoB,IAAI,CAACvgB,IAApB,CAAvC,GAAmE,4BAAnF,EAAiHsd,MAAM,CAACuB,MAAP,CAAcc,qBAA/H,EAAsJ;AAAE3f,QAAAA,IAAI,EAAEsgB,MAAM,CAACtgB,IAAf;AAAqB4f,QAAAA,SAAS,EAAE;AAAhC,OAAtJ;AACH,KAFD,MAGK,IAAIU,MAAM,KAAK/C,MAAX,IAAqB+C,MAAM,IAAI,IAAnC,EAAyC;AAC1C,WAAKjB,UAAL,CAAgB,aAAhB,EAA+B/B,MAAM,CAACuB,MAAP,CAAc2B,WAA7C,EAA0D;AAAExgB,QAAAA,IAAI,EAAEugB,IAAI,CAACvgB;AAAb,OAA1D;AACH;AACJ;;AACkB,SAAZ0gB,YAAY,GAAG;AAClB,QAAI,CAAClE,aAAL,EAAoB;AAChBA,MAAAA,aAAa,GAAG,IAAIc,MAAJ,CAAWvB,OAAX,CAAhB;AACH;;AACD,WAAOS,aAAP;AACH;;AACmB,SAAbmE,aAAa,CAACC,UAAD,EAAaC,SAAb,EAAwB;AACxC,QAAI,CAACD,UAAD,IAAeC,SAAnB,EAA8B;AAC1B,WAAKH,YAAL,GAAoBrB,UAApB,CAA+B,uCAA/B,EAAwE/B,MAAM,CAACuB,MAAP,CAAcc,qBAAtF,EAA6G;AACzGC,QAAAA,SAAS,EAAE;AAD8F,OAA7G;AAGH;;AACD,QAAI5D,sBAAJ,EAA4B;AACxB,UAAI,CAAC4E,UAAL,EAAiB;AACb;AACH;;AACD,WAAKF,YAAL,GAAoBrB,UAApB,CAA+B,4BAA/B,EAA6D/B,MAAM,CAACuB,MAAP,CAAcc,qBAA3E,EAAkG;AAC9FC,QAAAA,SAAS,EAAE;AADmF,OAAlG;AAGH;;AACD3D,IAAAA,aAAa,GAAG,CAAC,CAAC2E,UAAlB;AACA5E,IAAAA,sBAAsB,GAAG,CAAC,CAAC6E,SAA3B;AACH;;AACiB,SAAXC,WAAW,CAACjD,QAAD,EAAW;AACzB,UAAME,KAAK,GAAG7B,SAAS,CAAC2B,QAAQ,CAACG,WAAT,EAAD,CAAvB;;AACA,QAAID,KAAK,IAAI,IAAb,EAAmB;AACfT,MAAAA,MAAM,CAACoD,YAAP,GAAsBlC,IAAtB,CAA2B,yBAAyBX,QAApD;AACA;AACH;;AACDtB,IAAAA,SAAS,GAAGwB,KAAZ;AACH;;AACU,SAAJgD,IAAI,CAAChF,OAAD,EAAU;AACjB,WAAO,IAAIuB,MAAJ,CAAWvB,OAAX,CAAP;AACH;;AAlLQ;;AAoLbuB,MAAM,CAACuB,MAAP,GAAgBxB,SAAhB;AACAC,MAAM,CAACe,MAAP,GAAgBjB,QAAhB;AAGA,MAAM4D,SAAS,GAAG,aAAlB;AAGA,MAAMC,MAAM,GAAG,IAAI3D,MAAJ,CAAW0D,SAAX,CAAf,C,CACA;;AACA,SAASE,SAAT,CAAmBxD,KAAnB,EAA0B;AACtB,SAAO,CAAC,CAAEA,KAAK,CAACyD,WAAhB;AACH;;AACD,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,MAAIA,KAAK,CAACC,KAAV,EAAiB;AACb,WAAOD,KAAP;AACH;;AACDA,EAAAA,KAAK,CAACC,KAAN,GAAc,YAAY;AACtB,UAAMxD,IAAI,GAAG/a,KAAK,CAACf,SAAN,CAAgBsf,KAAhB,CAAsBjH,IAAtB,CAA2BkH,SAA3B,CAAb;AACA,WAAOH,QAAQ,CAAC,IAAII,UAAJ,CAAeze,KAAK,CAACf,SAAN,CAAgBsf,KAAhB,CAAsBlD,KAAtB,CAA4BiD,KAA5B,EAAmCvD,IAAnC,CAAf,CAAD,CAAf;AACH,GAHD;;AAIA,SAAOuD,KAAP;AACH;;AACD,SAASI,WAAT,CAAqB/D,KAArB,EAA4B;AACxB,SAASgE,WAAW,CAAChE,KAAD,CAAX,IAAsB,EAAEA,KAAK,CAACjb,MAAN,GAAe,CAAjB,CAAvB,IAA+Ckf,OAAO,CAACjE,KAAD,CAA9D;AACH;;AACD,SAASiE,OAAT,CAAiBjE,KAAjB,EAAwB;AACpB,MAAIA,KAAK,IAAI,IAAb,EAAmB;AACf,WAAO,KAAP;AACH;;AACD,MAAIA,KAAK,CAACzb,WAAN,KAAsBuf,UAA1B,EAAsC;AAClC,WAAO,IAAP;AACH;;AACD,MAAI,OAAQ9D,KAAR,KAAmB,QAAvB,EAAiC;AAC7B,WAAO,KAAP;AACH;;AACD,MAAIA,KAAK,CAACjb,MAAN,IAAgB,IAApB,EAA0B;AACtB,WAAO,KAAP;AACH;;AACD,OAAK,IAAIwB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyZ,KAAK,CAACjb,MAA1B,EAAkCwB,CAAC,EAAnC,EAAuC;AACnC,UAAM2d,CAAC,GAAGlE,KAAK,CAACzZ,CAAD,CAAf;;AACA,QAAI,OAAQ2d,CAAR,KAAe,QAAf,IAA2BA,CAAC,GAAG,CAA/B,IAAoCA,CAAC,IAAI,GAAzC,IAAiDA,CAAC,GAAG,CAAzD,EAA6D;AACzD,aAAO,KAAP;AACH;AACJ;;AACD,SAAO,IAAP;AACH;;AACD,SAASC,QAAT,CAAkBnE,KAAlB,EAAyBoE,OAAzB,EAAkC;AAC9B,MAAI,CAACA,OAAL,EAAc;AACVA,IAAAA,OAAO,GAAG,EAAV;AACH;;AACD,MAAI,OAAQpE,KAAR,KAAmB,QAAvB,EAAiC;AAC7BuD,IAAAA,MAAM,CAACpB,eAAP,CAAuBnC,KAAvB,EAA8B,wBAA9B;AACA,UAAMqE,MAAM,GAAG,EAAf;;AACA,WAAOrE,KAAP,EAAc;AACVqE,MAAAA,MAAM,CAACC,OAAP,CAAetE,KAAK,GAAG,IAAvB;AACAA,MAAAA,KAAK,GAAGuE,QAAQ,CAACjF,MAAM,CAACU,KAAK,GAAG,GAAT,CAAP,CAAhB;AACH;;AACD,QAAIqE,MAAM,CAACtf,MAAP,KAAkB,CAAtB,EAAyB;AACrBsf,MAAAA,MAAM,CAACjF,IAAP,CAAY,CAAZ;AACH;;AACD,WAAOsE,QAAQ,CAAC,IAAII,UAAJ,CAAeO,MAAf,CAAD,CAAf;AACH;;AACD,MAAID,OAAO,CAACI,kBAAR,IAA8B,OAAQxE,KAAR,KAAmB,QAAjD,IAA6DA,KAAK,CAACyE,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,MAA0B,IAA3F,EAAiG;AAC7FzE,IAAAA,KAAK,GAAG,OAAOA,KAAf;AACH;;AACD,MAAIwD,SAAS,CAACxD,KAAD,CAAb,EAAsB;AAClBA,IAAAA,KAAK,GAAGA,KAAK,CAACyD,WAAN,EAAR;AACH;;AACD,MAAIO,WAAW,CAAChE,KAAD,CAAf,EAAwB;AACpB,QAAI0E,GAAG,GAAG1E,KAAK,CAACyE,SAAN,CAAgB,CAAhB,CAAV;;AACA,QAAIC,GAAG,CAAC3f,MAAJ,GAAa,CAAjB,EAAoB;AAChB,UAAIqf,OAAO,CAACO,MAAR,KAAmB,MAAvB,EAA+B;AAC3BD,QAAAA,GAAG,GAAG,QAAQA,GAAG,CAACD,SAAJ,CAAc,CAAd,CAAd;AACH,OAFD,MAGK,IAAIL,OAAO,CAACO,MAAR,KAAmB,OAAvB,EAAgC;AACjCD,QAAAA,GAAG,IAAI,GAAP;AACH,OAFI,MAGA;AACDnB,QAAAA,MAAM,CAAChD,kBAAP,CAA0B,wBAA1B,EAAoD,OAApD,EAA6DP,KAA7D;AACH;AACJ;;AACD,UAAMqE,MAAM,GAAG,EAAf;;AACA,SAAK,IAAI9d,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGme,GAAG,CAAC3f,MAAxB,EAAgCwB,CAAC,IAAI,CAArC,EAAwC;AACpC8d,MAAAA,MAAM,CAACjF,IAAP,CAAYmF,QAAQ,CAACG,GAAG,CAACD,SAAJ,CAAcle,CAAd,EAAiBA,CAAC,GAAG,CAArB,CAAD,EAA0B,EAA1B,CAApB;AACH;;AACD,WAAOmd,QAAQ,CAAC,IAAII,UAAJ,CAAeO,MAAf,CAAD,CAAf;AACH;;AACD,MAAIJ,OAAO,CAACjE,KAAD,CAAX,EAAoB;AAChB,WAAO0D,QAAQ,CAAC,IAAII,UAAJ,CAAe9D,KAAf,CAAD,CAAf;AACH;;AACD,SAAOuD,MAAM,CAAChD,kBAAP,CAA0B,wBAA1B,EAAoD,OAApD,EAA6DP,KAA7D,CAAP;AACH;;AACD,SAAS4E,MAAT,CAAgBC,KAAhB,EAAuB;AACnB,QAAMC,OAAO,GAAGD,KAAK,CAACE,GAAN,CAAUC,IAAI,IAAIb,QAAQ,CAACa,IAAD,CAA1B,CAAhB;AACA,QAAMjgB,MAAM,GAAG+f,OAAO,CAACG,MAAR,CAAe,CAACC,KAAD,EAAQF,IAAR,KAAkBE,KAAK,GAAGF,IAAI,CAACjgB,MAA9C,EAAuD,CAAvD,CAAf;AACA,QAAMsf,MAAM,GAAG,IAAIP,UAAJ,CAAe/e,MAAf,CAAf;AACA+f,EAAAA,OAAO,CAACG,MAAR,CAAe,CAACE,MAAD,EAASC,MAAT,KAAoB;AAC/Bf,IAAAA,MAAM,CAACgB,GAAP,CAAWD,MAAX,EAAmBD,MAAnB;AACA,WAAOA,MAAM,GAAGC,MAAM,CAACrgB,MAAvB;AACH,GAHD,EAGG,CAHH;AAIA,SAAO2e,QAAQ,CAACW,MAAD,CAAf;AACH;;AACD,SAASiB,UAAT,CAAoBtF,KAApB,EAA2B;AACvB,MAAIqE,MAAM,GAAGF,QAAQ,CAACnE,KAAD,CAArB;;AACA,MAAIqE,MAAM,CAACtf,MAAP,KAAkB,CAAtB,EAAyB;AACrB,WAAOsf,MAAP;AACH,GAJsB,CAKvB;;;AACA,MAAIpe,KAAK,GAAG,CAAZ;;AACA,SAAOA,KAAK,GAAGoe,MAAM,CAACtf,MAAf,IAAyBsf,MAAM,CAACpe,KAAD,CAAN,KAAkB,CAAlD,EAAqD;AACjDA,IAAAA,KAAK;AACR,GATsB,CAUvB;;;AACA,MAAIA,KAAJ,EAAW;AACPoe,IAAAA,MAAM,GAAGA,MAAM,CAACT,KAAP,CAAa3d,KAAb,CAAT;AACH;;AACD,SAAOoe,MAAP;AACH;;AACD,SAASkB,OAAT,CAAiBvF,KAAjB,EAAwBjb,MAAxB,EAAgC;AAC5Bib,EAAAA,KAAK,GAAGmE,QAAQ,CAACnE,KAAD,CAAhB;;AACA,MAAIA,KAAK,CAACjb,MAAN,GAAeA,MAAnB,EAA2B;AACvBwe,IAAAA,MAAM,CAAChD,kBAAP,CAA0B,oBAA1B,EAAgD,OAAhD,EAAyDsD,SAAS,CAAC,CAAD,CAAlE;AACH;;AACD,QAAMQ,MAAM,GAAG,IAAIP,UAAJ,CAAe/e,MAAf,CAAf;AACAsf,EAAAA,MAAM,CAACgB,GAAP,CAAWrF,KAAX,EAAkBjb,MAAM,GAAGib,KAAK,CAACjb,MAAjC;AACA,SAAO2e,QAAQ,CAACW,MAAD,CAAf;AACH;;AACD,SAASL,WAAT,CAAqBhE,KAArB,EAA4Bjb,MAA5B,EAAoC;AAChC,MAAI,OAAQib,KAAR,KAAmB,QAAnB,IAA+B,CAACA,KAAK,CAACwF,KAAN,CAAY,kBAAZ,CAApC,EAAqE;AACjE,WAAO,KAAP;AACH;;AACD,MAAIzgB,MAAM,IAAIib,KAAK,CAACjb,MAAN,KAAiB,IAAI,IAAIA,MAAvC,EAA+C;AAC3C,WAAO,KAAP;AACH;;AACD,SAAO,IAAP;AACH;;AACD,MAAM0gB,aAAa,GAAG,kBAAtB;;AACA,SAASC,OAAT,CAAiB1F,KAAjB,EAAwBoE,OAAxB,EAAiC;AAC7B,MAAI,CAACA,OAAL,EAAc;AACVA,IAAAA,OAAO,GAAG,EAAV;AACH;;AACD,MAAI,OAAQpE,KAAR,KAAmB,QAAvB,EAAiC;AAC7BuD,IAAAA,MAAM,CAACpB,eAAP,CAAuBnC,KAAvB,EAA8B,uBAA9B;AACA,QAAI0E,GAAG,GAAG,EAAV;;AACA,WAAO1E,KAAP,EAAc;AACV0E,MAAAA,GAAG,GAAGe,aAAa,CAACzF,KAAK,GAAG,GAAT,CAAb,GAA6B0E,GAAnC;AACA1E,MAAAA,KAAK,GAAG3Z,IAAI,CAACsf,KAAL,CAAW3F,KAAK,GAAG,EAAnB,CAAR;AACH;;AACD,QAAI0E,GAAG,CAAC3f,MAAR,EAAgB;AACZ,UAAI2f,GAAG,CAAC3f,MAAJ,GAAa,CAAjB,EAAoB;AAChB2f,QAAAA,GAAG,GAAG,MAAMA,GAAZ;AACH;;AACD,aAAO,OAAOA,GAAd;AACH;;AACD,WAAO,MAAP;AACH;;AACD,MAAI,OAAQ1E,KAAR,KAAmB,QAAvB,EAAiC;AAC7BA,IAAAA,KAAK,GAAGA,KAAK,CAACja,QAAN,CAAe,EAAf,CAAR;;AACA,QAAIia,KAAK,CAACjb,MAAN,GAAe,CAAnB,EAAsB;AAClB,aAAQ,QAAQib,KAAhB;AACH;;AACD,WAAO,OAAOA,KAAd;AACH;;AACD,MAAIoE,OAAO,CAACI,kBAAR,IAA8B,OAAQxE,KAAR,KAAmB,QAAjD,IAA6DA,KAAK,CAACyE,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,MAA0B,IAA3F,EAAiG;AAC7FzE,IAAAA,KAAK,GAAG,OAAOA,KAAf;AACH;;AACD,MAAIwD,SAAS,CAACxD,KAAD,CAAb,EAAsB;AAClB,WAAOA,KAAK,CAACyD,WAAN,EAAP;AACH;;AACD,MAAIO,WAAW,CAAChE,KAAD,CAAf,EAAwB;AACpB,QAAIA,KAAK,CAACjb,MAAN,GAAe,CAAnB,EAAsB;AAClB,UAAIqf,OAAO,CAACO,MAAR,KAAmB,MAAvB,EAA+B;AAC3B3E,QAAAA,KAAK,GAAG,QAAQA,KAAK,CAACyE,SAAN,CAAgB,CAAhB,CAAhB;AACH,OAFD,MAGK,IAAIL,OAAO,CAACO,MAAR,KAAmB,OAAvB,EAAgC;AACjC3E,QAAAA,KAAK,IAAI,GAAT;AACH,OAFI,MAGA;AACDuD,QAAAA,MAAM,CAAChD,kBAAP,CAA0B,wBAA1B,EAAoD,OAApD,EAA6DP,KAA7D;AACH;AACJ;;AACD,WAAOA,KAAK,CAACM,WAAN,EAAP;AACH;;AACD,MAAI2D,OAAO,CAACjE,KAAD,CAAX,EAAoB;AAChB,QAAIqE,MAAM,GAAG,IAAb;;AACA,SAAK,IAAI9d,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyZ,KAAK,CAACjb,MAA1B,EAAkCwB,CAAC,EAAnC,EAAuC;AACnC,UAAI2d,CAAC,GAAGlE,KAAK,CAACzZ,CAAD,CAAb;AACA8d,MAAAA,MAAM,IAAIoB,aAAa,CAAC,CAACvB,CAAC,GAAG,IAAL,KAAc,CAAf,CAAb,GAAiCuB,aAAa,CAACvB,CAAC,GAAG,IAAL,CAAxD;AACH;;AACD,WAAOG,MAAP;AACH;;AACD,SAAOd,MAAM,CAAChD,kBAAP,CAA0B,uBAA1B,EAAmD,OAAnD,EAA4DP,KAA5D,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS4F,aAAT,CAAuBC,IAAvB,EAA6B;AACzB,MAAI,OAAQA,IAAR,KAAkB,QAAtB,EAAgC;AAC5BA,IAAAA,IAAI,GAAGH,OAAO,CAACG,IAAD,CAAd;AACH,GAFD,MAGK,IAAI,CAAC7B,WAAW,CAAC6B,IAAD,CAAZ,IAAuBA,IAAI,CAAC9gB,MAAL,GAAc,CAAzC,EAA6C;AAC9C,WAAO,IAAP;AACH;;AACD,SAAO,CAAC8gB,IAAI,CAAC9gB,MAAL,GAAc,CAAf,IAAoB,CAA3B;AACH;;AACD,SAAS+gB,YAAT,CAAsBD,IAAtB,EAA4BV,MAA5B,EAAoCY,SAApC,EAA+C;AAC3C,MAAI,OAAQF,IAAR,KAAkB,QAAtB,EAAgC;AAC5BA,IAAAA,IAAI,GAAGH,OAAO,CAACG,IAAD,CAAd;AACH,GAFD,MAGK,IAAI,CAAC7B,WAAW,CAAC6B,IAAD,CAAZ,IAAuBA,IAAI,CAAC9gB,MAAL,GAAc,CAAzC,EAA6C;AAC9Cwe,IAAAA,MAAM,CAAChD,kBAAP,CAA0B,iBAA1B,EAA6C,OAA7C,EAAsDsF,IAAtD;AACH;;AACDV,EAAAA,MAAM,GAAG,IAAI,IAAIA,MAAjB;;AACA,MAAIY,SAAS,IAAI,IAAjB,EAAuB;AACnB,WAAO,OAAOF,IAAI,CAACpB,SAAL,CAAeU,MAAf,EAAuB,IAAI,IAAIY,SAA/B,CAAd;AACH;;AACD,SAAO,OAAOF,IAAI,CAACpB,SAAL,CAAeU,MAAf,CAAd;AACH;;AACD,SAASa,SAAT,CAAmBnB,KAAnB,EAA0B;AACtB,MAAIR,MAAM,GAAG,IAAb;AACAQ,EAAAA,KAAK,CAAC5F,OAAN,CAAe+F,IAAD,IAAU;AACpBX,IAAAA,MAAM,IAAIqB,OAAO,CAACV,IAAD,CAAP,CAAcP,SAAd,CAAwB,CAAxB,CAAV;AACH,GAFD;AAGA,SAAOJ,MAAP;AACH;;AACD,SAAS4B,QAAT,CAAkBjG,KAAlB,EAAyB;AACrB,QAAMkG,OAAO,GAAGC,aAAa,CAACT,OAAO,CAAC1F,KAAD,EAAQ;AAAE2E,IAAAA,MAAM,EAAE;AAAV,GAAR,CAAR,CAA7B;;AACA,MAAIuB,OAAO,KAAK,IAAhB,EAAsB;AAClB,WAAO,KAAP;AACH;;AACD,SAAOA,OAAP;AACH;;AACD,SAASC,aAAT,CAAuBnG,KAAvB,EAA8B;AAC1B,MAAI,OAAQA,KAAR,KAAmB,QAAvB,EAAiC;AAC7BA,IAAAA,KAAK,GAAG0F,OAAO,CAAC1F,KAAD,CAAf;AACH;;AACD,MAAI,CAACgE,WAAW,CAAChE,KAAD,CAAhB,EAAyB;AACrBuD,IAAAA,MAAM,CAAChD,kBAAP,CAA0B,oBAA1B,EAAgD,OAAhD,EAAyDP,KAAzD;AACH;;AACDA,EAAAA,KAAK,GAAGA,KAAK,CAACyE,SAAN,CAAgB,CAAhB,CAAR;AACA,MAAIU,MAAM,GAAG,CAAb;;AACA,SAAOA,MAAM,GAAGnF,KAAK,CAACjb,MAAf,IAAyBib,KAAK,CAACmF,MAAD,CAAL,KAAkB,GAAlD,EAAuD;AACnDA,IAAAA,MAAM;AACT;;AACD,SAAO,OAAOnF,KAAK,CAACyE,SAAN,CAAgBU,MAAhB,CAAd;AACH;;AACD,SAASiB,UAAT,CAAoBpG,KAApB,EAA2Bjb,MAA3B,EAAmC;AAC/B,MAAI,OAAQib,KAAR,KAAmB,QAAvB,EAAiC;AAC7BA,IAAAA,KAAK,GAAG0F,OAAO,CAAC1F,KAAD,CAAf;AACH,GAFD,MAGK,IAAI,CAACgE,WAAW,CAAChE,KAAD,CAAhB,EAAyB;AAC1BuD,IAAAA,MAAM,CAAChD,kBAAP,CAA0B,oBAA1B,EAAgD,OAAhD,EAAyDP,KAAzD;AACH;;AACD,MAAIA,KAAK,CAACjb,MAAN,GAAe,IAAIA,MAAJ,GAAa,CAAhC,EAAmC;AAC/Bwe,IAAAA,MAAM,CAAChD,kBAAP,CAA0B,oBAA1B,EAAgD,OAAhD,EAAyDsD,SAAS,CAAC,CAAD,CAAlE;AACH;;AACD,SAAO7D,KAAK,CAACjb,MAAN,GAAe,IAAIA,MAAJ,GAAa,CAAnC,EAAsC;AAClCib,IAAAA,KAAK,GAAG,QAAQA,KAAK,CAACyE,SAAN,CAAgB,CAAhB,CAAhB;AACH;;AACD,SAAOzE,KAAP;AACH;;AACD,SAASqG,cAAT,CAAwBC,SAAxB,EAAmC;AAC/B,QAAMjC,MAAM,GAAG;AACXld,IAAAA,CAAC,EAAE,IADQ;AAEXsM,IAAAA,CAAC,EAAE,IAFQ;AAGX8S,IAAAA,GAAG,EAAE,IAHM;AAIXC,IAAAA,aAAa,EAAE,CAJJ;AAKXtC,IAAAA,CAAC,EAAE;AALQ,GAAf;;AAOA,MAAIH,WAAW,CAACuC,SAAD,CAAf,EAA4B;AACxB,UAAMG,KAAK,GAAGtC,QAAQ,CAACmC,SAAD,CAAtB;;AACA,QAAIG,KAAK,CAAC1hB,MAAN,KAAiB,EAArB,EAAyB;AACrBwe,MAAAA,MAAM,CAAChD,kBAAP,CAA0B,4CAA1B,EAAwE,WAAxE,EAAqF+F,SAArF;AACH,KAJuB,CAKxB;;;AACAjC,IAAAA,MAAM,CAACld,CAAP,GAAWue,OAAO,CAACe,KAAK,CAAC7C,KAAN,CAAY,CAAZ,EAAe,EAAf,CAAD,CAAlB;AACAS,IAAAA,MAAM,CAAC5Q,CAAP,GAAWiS,OAAO,CAACe,KAAK,CAAC7C,KAAN,CAAY,EAAZ,EAAgB,EAAhB,CAAD,CAAlB;AACAS,IAAAA,MAAM,CAACH,CAAP,GAAWuC,KAAK,CAAC,EAAD,CAAhB,CARwB,CASxB;;AACA,QAAIpC,MAAM,CAACH,CAAP,GAAW,EAAf,EAAmB;AACf,UAAIG,MAAM,CAACH,CAAP,KAAa,CAAb,IAAkBG,MAAM,CAACH,CAAP,KAAa,CAAnC,EAAsC;AAClCG,QAAAA,MAAM,CAACH,CAAP,IAAY,EAAZ;AACH,OAFD,MAGK;AACDX,QAAAA,MAAM,CAAChD,kBAAP,CAA0B,0BAA1B,EAAsD,WAAtD,EAAmE+F,SAAnE;AACH;AACJ,KAjBuB,CAkBxB;;;AACAjC,IAAAA,MAAM,CAACmC,aAAP,GAAuB,IAAKnC,MAAM,CAACH,CAAP,GAAW,CAAvC,CAnBwB,CAoBxB;;AACA,QAAIG,MAAM,CAACmC,aAAX,EAA0B;AACtBC,MAAAA,KAAK,CAAC,EAAD,CAAL,IAAa,IAAb;AACH;;AACDpC,IAAAA,MAAM,CAACkC,GAAP,GAAab,OAAO,CAACe,KAAK,CAAC7C,KAAN,CAAY,EAAZ,EAAgB,EAAhB,CAAD,CAApB;AACH,GAzBD,MA0BK;AACDS,IAAAA,MAAM,CAACld,CAAP,GAAWmf,SAAS,CAACnf,CAArB;AACAkd,IAAAA,MAAM,CAAC5Q,CAAP,GAAW6S,SAAS,CAAC7S,CAArB;AACA4Q,IAAAA,MAAM,CAACH,CAAP,GAAWoC,SAAS,CAACpC,CAArB;AACAG,IAAAA,MAAM,CAACmC,aAAP,GAAuBF,SAAS,CAACE,aAAjC;AACAnC,IAAAA,MAAM,CAACkC,GAAP,GAAaD,SAAS,CAACC,GAAvB,CALC,CAMD;AACA;;AACA,QAAIlC,MAAM,CAACkC,GAAP,IAAc,IAAlB,EAAwB;AACpB,YAAMG,EAAE,GAAGnB,OAAO,CAACpB,QAAQ,CAACE,MAAM,CAACkC,GAAR,CAAT,EAAuB,EAAvB,CAAlB;AACAlC,MAAAA,MAAM,CAACkC,GAAP,GAAab,OAAO,CAACgB,EAAD,CAApB,CAFoB,CAGpB;;AACA,YAAMF,aAAa,GAAKE,EAAE,CAAC,CAAD,CAAF,IAAS,GAAV,GAAiB,CAAjB,GAAqB,CAA5C;;AACA,UAAIrC,MAAM,CAACmC,aAAP,IAAwB,IAA5B,EAAkC;AAC9BnC,QAAAA,MAAM,CAACmC,aAAP,GAAuBA,aAAvB;AACH,OAFD,MAGK,IAAInC,MAAM,CAACmC,aAAP,KAAyBA,aAA7B,EAA4C;AAC7CjD,QAAAA,MAAM,CAAChD,kBAAP,CAA0B,sCAA1B,EAAkE,WAAlE,EAA+E+F,SAA/E;AACH,OAVmB,CAWpB;;;AACAI,MAAAA,EAAE,CAAC,CAAD,CAAF,IAAS,IAAT;AACA,YAAMjT,CAAC,GAAGiS,OAAO,CAACgB,EAAD,CAAjB;;AACA,UAAIrC,MAAM,CAAC5Q,CAAP,IAAY,IAAhB,EAAsB;AAClB4Q,QAAAA,MAAM,CAAC5Q,CAAP,GAAWA,CAAX;AACH,OAFD,MAGK,IAAI4Q,MAAM,CAAC5Q,CAAP,KAAaA,CAAjB,EAAoB;AACrB8P,QAAAA,MAAM,CAAChD,kBAAP,CAA0B,0BAA1B,EAAsD,WAAtD,EAAmE+F,SAAnE;AACH;AACJ,KA5BA,CA6BD;;;AACA,QAAIjC,MAAM,CAACmC,aAAP,IAAwB,IAA5B,EAAkC;AAC9B,UAAInC,MAAM,CAACH,CAAP,IAAY,IAAhB,EAAsB;AAClBX,QAAAA,MAAM,CAAChD,kBAAP,CAA0B,uCAA1B,EAAmE,WAAnE,EAAgF+F,SAAhF;AACH,OAFD,MAGK,IAAIjC,MAAM,CAACH,CAAP,KAAa,CAAb,IAAkBG,MAAM,CAACH,CAAP,KAAa,CAAnC,EAAsC;AACvCG,QAAAA,MAAM,CAACmC,aAAP,GAAuBnC,MAAM,CAACH,CAA9B;AACH,OAFI,MAGA;AACDG,QAAAA,MAAM,CAACmC,aAAP,GAAuB,IAAKnC,MAAM,CAACH,CAAP,GAAW,CAAvC;AACH;AACJ,KAVD,MAWK;AACD,UAAIG,MAAM,CAACH,CAAP,IAAY,IAAhB,EAAsB;AAClBG,QAAAA,MAAM,CAACH,CAAP,GAAW,KAAKG,MAAM,CAACmC,aAAvB;AACH,OAFD,MAGK,IAAInC,MAAM,CAACmC,aAAP,KAA0B,IAAKnC,MAAM,CAACH,CAAP,GAAW,CAA9C,EAAmD;AACpDX,QAAAA,MAAM,CAAChD,kBAAP,CAA0B,oCAA1B,EAAgE,WAAhE,EAA6E+F,SAA7E;AACH;AACJ;;AACD,QAAIjC,MAAM,CAACld,CAAP,IAAY,IAAZ,IAAoB,CAAC6c,WAAW,CAACK,MAAM,CAACld,CAAR,CAApC,EAAgD;AAC5Coc,MAAAA,MAAM,CAAChD,kBAAP,CAA0B,gCAA1B,EAA4D,WAA5D,EAAyE+F,SAAzE;AACH,KAFD,MAGK;AACDjC,MAAAA,MAAM,CAACld,CAAP,GAAWif,UAAU,CAAC/B,MAAM,CAACld,CAAR,EAAW,EAAX,CAArB;AACH;;AACD,QAAIkd,MAAM,CAAC5Q,CAAP,IAAY,IAAZ,IAAoB,CAACuQ,WAAW,CAACK,MAAM,CAAC5Q,CAAR,CAApC,EAAgD;AAC5C8P,MAAAA,MAAM,CAAChD,kBAAP,CAA0B,gCAA1B,EAA4D,WAA5D,EAAyE+F,SAAzE;AACH,KAFD,MAGK;AACDjC,MAAAA,MAAM,CAAC5Q,CAAP,GAAW2S,UAAU,CAAC/B,MAAM,CAAC5Q,CAAR,EAAW,EAAX,CAArB;AACH;;AACD,UAAMiT,EAAE,GAAGvC,QAAQ,CAACE,MAAM,CAAC5Q,CAAR,CAAnB;;AACA,QAAIiT,EAAE,CAAC,CAAD,CAAF,IAAS,GAAb,EAAkB;AACdnD,MAAAA,MAAM,CAAChD,kBAAP,CAA0B,0BAA1B,EAAsD,WAAtD,EAAmE+F,SAAnE;AACH;;AACD,QAAIjC,MAAM,CAACmC,aAAX,EAA0B;AACtBE,MAAAA,EAAE,CAAC,CAAD,CAAF,IAAS,IAAT;AACH;;AACD,UAAMH,GAAG,GAAGb,OAAO,CAACgB,EAAD,CAAnB;;AACA,QAAIrC,MAAM,CAACkC,GAAX,EAAgB;AACZ,UAAI,CAACvC,WAAW,CAACK,MAAM,CAACkC,GAAR,CAAhB,EAA8B;AAC1BhD,QAAAA,MAAM,CAAChD,kBAAP,CAA0B,uBAA1B,EAAmD,WAAnD,EAAgE+F,SAAhE;AACH;;AACDjC,MAAAA,MAAM,CAACkC,GAAP,GAAaH,UAAU,CAAC/B,MAAM,CAACkC,GAAR,EAAa,EAAb,CAAvB;AACH,KA1EA,CA2ED;;;AACA,QAAIlC,MAAM,CAACkC,GAAP,IAAc,IAAlB,EAAwB;AACpBlC,MAAAA,MAAM,CAACkC,GAAP,GAAaA,GAAb;AACH,KAFD,MAGK,IAAIlC,MAAM,CAACkC,GAAP,KAAeA,GAAnB,EAAwB;AACzBhD,MAAAA,MAAM,CAAChD,kBAAP,CAA0B,gCAA1B,EAA4D,WAA5D,EAAyE+F,SAAzE;AACH;AACJ;;AACD,SAAOjC,MAAP;AACH;;AAGD,MAAMsC,SAAS,GAAG,iBAAlB;AAGA,IAAIniB,EAAE,GAAGZ,EAAE,CAACY,EAAZ;AACA,MAAMoiB,QAAQ,GAAG,IAAIhH,MAAJ,CAAW+G,SAAX,CAAjB;AACA,MAAME,iBAAiB,GAAG,EAA1B;AACA,MAAMC,QAAQ,GAAG,gBAAjB,C,CACA;;AACA,IAAIC,oBAAoB,GAAG,KAA3B;;AACA,MAAMC,SAAN,CAAgB;AACZziB,EAAAA,WAAW,CAAC0iB,gBAAD,EAAmBvC,GAAnB,EAAwB;AAC/BkC,IAAAA,QAAQ,CAACjE,QAAT,CAAkBuE,GAAG,CAACtE,MAAtB,EAA8BoE,SAA9B;;AACA,QAAIC,gBAAgB,KAAKJ,iBAAzB,EAA4C;AACxCD,MAAAA,QAAQ,CAACjF,UAAT,CAAoB,sDAApB,EAA4E/B,MAAM,CAACuB,MAAP,CAAcc,qBAA1F,EAAiH;AAC7GC,QAAAA,SAAS,EAAE;AADkG,OAAjH;AAGH;;AACD,SAAKiF,IAAL,GAAYzC,GAAZ;AACA,SAAK0C,YAAL,GAAoB,IAApB;AACAvH,IAAAA,MAAM,CAACwH,MAAP,CAAc,IAAd;AACH;;AACDpc,EAAAA,QAAQ,CAAC+U,KAAD,EAAQ;AACZ,WAAOsH,WAAW,CAACC,IAAI,CAAC,IAAD,CAAJ,CAAWtc,QAAX,CAAoB+U,KAApB,CAAD,CAAlB;AACH;;AACDpV,EAAAA,MAAM,CAACoV,KAAD,EAAQ;AACV,WAAOsH,WAAW,CAACC,IAAI,CAAC,IAAD,CAAJ,CAAW3c,MAAX,CAAkBoV,KAAlB,CAAD,CAAlB;AACH;;AACDlV,EAAAA,GAAG,GAAG;AACF,QAAI,KAAKqc,IAAL,CAAU,CAAV,MAAiB,GAArB,EAA0B;AACtB,aAAOH,SAAS,CAAC3D,IAAV,CAAe,KAAK8D,IAAL,CAAU1C,SAAV,CAAoB,CAApB,CAAf,CAAP;AACH;;AACD,WAAO,IAAP;AACH;;AACDhY,EAAAA,GAAG,CAAC+a,KAAD,EAAQ;AACP,WAAOF,WAAW,CAACC,IAAI,CAAC,IAAD,CAAJ,CAAW9a,GAAX,CAAe8a,IAAI,CAACC,KAAD,CAAnB,CAAD,CAAlB;AACH;;AACD9a,EAAAA,GAAG,CAAC8a,KAAD,EAAQ;AACP,WAAOF,WAAW,CAACC,IAAI,CAAC,IAAD,CAAJ,CAAW7a,GAAX,CAAe6a,IAAI,CAACC,KAAD,CAAnB,CAAD,CAAlB;AACH;;AACD/P,EAAAA,GAAG,CAAC+P,KAAD,EAAQ;AACP,UAAMta,CAAC,GAAG8Z,SAAS,CAAC3D,IAAV,CAAemE,KAAf,CAAV;;AACA,QAAIta,CAAC,CAACjE,MAAF,EAAJ,EAAgB;AACZwe,MAAAA,UAAU,CAAC,kBAAD,EAAqB,KAArB,CAAV;AACH;;AACD,WAAOH,WAAW,CAACC,IAAI,CAAC,IAAD,CAAJ,CAAW9P,GAAX,CAAe8P,IAAI,CAACC,KAAD,CAAnB,CAAD,CAAlB;AACH;;AACDhgB,EAAAA,GAAG,CAACggB,KAAD,EAAQ;AACP,WAAOF,WAAW,CAACC,IAAI,CAAC,IAAD,CAAJ,CAAW/f,GAAX,CAAe+f,IAAI,CAACC,KAAD,CAAnB,CAAD,CAAlB;AACH;;AACD3f,EAAAA,GAAG,CAAC2f,KAAD,EAAQ;AACP,UAAMxH,KAAK,GAAGuH,IAAI,CAACC,KAAD,CAAlB;;AACA,QAAIxH,KAAK,CAAC3U,KAAN,EAAJ,EAAmB;AACfoc,MAAAA,UAAU,CAAC,+BAAD,EAAkC,KAAlC,CAAV;AACH;;AACD,WAAOH,WAAW,CAACC,IAAI,CAAC,IAAD,CAAJ,CAAW1P,IAAX,CAAgBmI,KAAhB,CAAD,CAAlB;AACH;;AACD/X,EAAAA,GAAG,CAACuf,KAAD,EAAQ;AACP,UAAMxH,KAAK,GAAGuH,IAAI,CAACC,KAAD,CAAlB;;AACA,QAAIxH,KAAK,CAAC3U,KAAN,EAAJ,EAAmB;AACfoc,MAAAA,UAAU,CAAC,iCAAD,EAAoC,KAApC,CAAV;AACH;;AACD,WAAOH,WAAW,CAACC,IAAI,CAAC,IAAD,CAAJ,CAAWtf,GAAX,CAAe+X,KAAf,CAAD,CAAlB;AACH;;AACDnU,EAAAA,GAAG,CAAC2b,KAAD,EAAQ;AACP,UAAMxH,KAAK,GAAGuH,IAAI,CAACC,KAAD,CAAlB;;AACA,QAAI,KAAKE,UAAL,MAAqB1H,KAAK,CAAC3U,KAAN,EAAzB,EAAwC;AACpCoc,MAAAA,UAAU,CAAC,8BAAD,EAAiC,KAAjC,CAAV;AACH;;AACD,WAAOH,WAAW,CAACC,IAAI,CAAC,IAAD,CAAJ,CAAW1b,GAAX,CAAemU,KAAf,CAAD,CAAlB;AACH;;AACDvU,EAAAA,EAAE,CAAC+b,KAAD,EAAQ;AACN,UAAMxH,KAAK,GAAGuH,IAAI,CAACC,KAAD,CAAlB;;AACA,QAAI,KAAKE,UAAL,MAAqB1H,KAAK,CAAC3U,KAAN,EAAzB,EAAwC;AACpCoc,MAAAA,UAAU,CAAC,6BAAD,EAAgC,IAAhC,CAAV;AACH;;AACD,WAAOH,WAAW,CAACC,IAAI,CAAC,IAAD,CAAJ,CAAW9b,EAAX,CAAcuU,KAAd,CAAD,CAAlB;AACH;;AACD9T,EAAAA,GAAG,CAACsb,KAAD,EAAQ;AACP,UAAMxH,KAAK,GAAGuH,IAAI,CAACC,KAAD,CAAlB;;AACA,QAAI,KAAKE,UAAL,MAAqB1H,KAAK,CAAC3U,KAAN,EAAzB,EAAwC;AACpCoc,MAAAA,UAAU,CAAC,8BAAD,EAAiC,KAAjC,CAAV;AACH;;AACD,WAAOH,WAAW,CAACC,IAAI,CAAC,IAAD,CAAJ,CAAWrb,GAAX,CAAe8T,KAAf,CAAD,CAAlB;AACH;;AACD5J,EAAAA,IAAI,CAAC4J,KAAD,EAAQ;AACR,QAAI,KAAK0H,UAAL,MAAqB1H,KAAK,GAAG,CAAjC,EAAoC;AAChCyH,MAAAA,UAAU,CAAC,6BAAD,EAAgC,MAAhC,CAAV;AACH;;AACD,WAAOH,WAAW,CAACC,IAAI,CAAC,IAAD,CAAJ,CAAW3Q,KAAX,CAAiBoJ,KAAjB,CAAD,CAAlB;AACH;;AACDjF,EAAAA,GAAG,CAACiF,KAAD,EAAQ;AACP,QAAI,KAAK0H,UAAL,MAAqB1H,KAAK,GAAG,CAAjC,EAAoC;AAChCyH,MAAAA,UAAU,CAAC,8BAAD,EAAiC,KAAjC,CAAV;AACH;;AACD,WAAOH,WAAW,CAACC,IAAI,CAAC,IAAD,CAAJ,CAAWhR,IAAX,CAAgByJ,KAAhB,CAAD,CAAlB;AACH;;AACD2H,EAAAA,GAAG,CAAC3H,KAAD,EAAQ;AACP,QAAI,KAAK0H,UAAL,MAAqB1H,KAAK,GAAG,CAAjC,EAAoC;AAChCyH,MAAAA,UAAU,CAAC,8BAAD,EAAiC,KAAjC,CAAV;AACH;;AACD,WAAOH,WAAW,CAACC,IAAI,CAAC,IAAD,CAAJ,CAAW9Q,IAAX,CAAgBuJ,KAAhB,CAAD,CAAlB;AACH;;AACD/F,EAAAA,EAAE,CAACuN,KAAD,EAAQ;AACN,WAAOD,IAAI,CAAC,IAAD,CAAJ,CAAWtN,EAAX,CAAcsN,IAAI,CAACC,KAAD,CAAlB,CAAP;AACH;;AACD3N,EAAAA,EAAE,CAAC2N,KAAD,EAAQ;AACN,WAAOD,IAAI,CAAC,IAAD,CAAJ,CAAW1N,EAAX,CAAc0N,IAAI,CAACC,KAAD,CAAlB,CAAP;AACH;;AACDzN,EAAAA,GAAG,CAACyN,KAAD,EAAQ;AACP,WAAOD,IAAI,CAAC,IAAD,CAAJ,CAAWxN,GAAX,CAAewN,IAAI,CAACC,KAAD,CAAnB,CAAP;AACH;;AACD/N,EAAAA,EAAE,CAAC+N,KAAD,EAAQ;AACN,WAAOD,IAAI,CAAC,IAAD,CAAJ,CAAW9N,EAAX,CAAc8N,IAAI,CAACC,KAAD,CAAlB,CAAP;AACH;;AACD7N,EAAAA,GAAG,CAAC6N,KAAD,EAAQ;AACP,WAAOD,IAAI,CAAC,IAAD,CAAJ,CAAW5N,GAAX,CAAe4N,IAAI,CAACC,KAAD,CAAnB,CAAP;AACH;;AACDE,EAAAA,UAAU,GAAG;AACT,WAAQ,KAAKP,IAAL,CAAU,CAAV,MAAiB,GAAzB;AACH;;AACDle,EAAAA,MAAM,GAAG;AACL,WAAOse,IAAI,CAAC,IAAD,CAAJ,CAAWte,MAAX,EAAP;AACH;;AACDG,EAAAA,QAAQ,GAAG;AACP,QAAI;AACA,aAAOme,IAAI,CAAC,IAAD,CAAJ,CAAWne,QAAX,EAAP;AACH,KAFD,CAGA,OAAOwV,KAAP,EAAc;AACV6I,MAAAA,UAAU,CAAC,UAAD,EAAa,UAAb,EAAyB,KAAK1hB,QAAL,EAAzB,CAAV;AACH;;AACD,WAAO,IAAP;AACH;;AACD6hB,EAAAA,QAAQ,GAAG;AACP,QAAI;AACA,aAAOC,MAAM,CAAC,KAAK9hB,QAAL,EAAD,CAAb;AACH,KAFD,CAGA,OAAOvE,CAAP,EAAU,CAAG;;AACb,WAAOolB,QAAQ,CAACjF,UAAT,CAAoB,uCAApB,EAA6D/B,MAAM,CAACuB,MAAP,CAAcc,qBAA3E,EAAkG;AACrGjC,MAAAA,KAAK,EAAE,KAAKja,QAAL;AAD8F,KAAlG,CAAP;AAGH;;AACDA,EAAAA,QAAQ,GAAG;AACP;AACA,QAAI8d,SAAS,CAAC9e,MAAV,GAAmB,CAAvB,EAA0B;AACtB,UAAI8e,SAAS,CAAC,CAAD,CAAT,KAAiB,EAArB,EAAyB;AACrB,YAAI,CAACkD,oBAAL,EAA2B;AACvBA,UAAAA,oBAAoB,GAAG,IAAvB;AACAH,UAAAA,QAAQ,CAAC9F,IAAT,CAAc,uEAAd;AACH;AACJ,OALD,MAMK,IAAI+C,SAAS,CAAC,CAAD,CAAT,KAAiB,EAArB,EAAyB;AAC1B+C,QAAAA,QAAQ,CAACjF,UAAT,CAAoB,gFAApB,EAAsG/B,MAAM,CAACuB,MAAP,CAAcuB,mBAApH,EAAyI,EAAzI;AACH,OAFI,MAGA;AACDkE,QAAAA,QAAQ,CAACjF,UAAT,CAAoB,+CAApB,EAAqE/B,MAAM,CAACuB,MAAP,CAAcuB,mBAAnF,EAAwG,EAAxG;AACH;AACJ;;AACD,WAAO6E,IAAI,CAAC,IAAD,CAAJ,CAAWxhB,QAAX,CAAoB,EAApB,CAAP;AACH;;AACD0d,EAAAA,WAAW,GAAG;AACV,WAAO,KAAK0D,IAAZ;AACH;;AACD7d,EAAAA,MAAM,CAACiY,GAAD,EAAM;AACR,WAAO;AAAErf,MAAAA,IAAI,EAAE,WAAR;AAAqBwiB,MAAAA,GAAG,EAAE,KAAKjB,WAAL;AAA1B,KAAP;AACH;;AACU,SAAJJ,IAAI,CAACrD,KAAD,EAAQ;AACf,QAAIA,KAAK,YAAYgH,SAArB,EAAgC;AAC5B,aAAOhH,KAAP;AACH;;AACD,QAAI,OAAQA,KAAR,KAAmB,QAAvB,EAAiC;AAC7B,UAAIA,KAAK,CAACwF,KAAN,CAAY,kBAAZ,CAAJ,EAAqC;AACjC,eAAO,IAAIwB,SAAJ,CAAcH,iBAAd,EAAiCiB,KAAK,CAAC9H,KAAD,CAAtC,CAAP;AACH;;AACD,UAAIA,KAAK,CAACwF,KAAN,CAAY,YAAZ,CAAJ,EAA+B;AAC3B,eAAO,IAAIwB,SAAJ,CAAcH,iBAAd,EAAiCiB,KAAK,CAAC,IAAItjB,EAAJ,CAAOwb,KAAP,CAAD,CAAtC,CAAP;AACH;;AACD,aAAO4G,QAAQ,CAACrG,kBAAT,CAA4B,0BAA5B,EAAwD,OAAxD,EAAiEP,KAAjE,CAAP;AACH;;AACD,QAAI,OAAQA,KAAR,KAAmB,QAAvB,EAAiC;AAC7B,UAAIA,KAAK,GAAG,CAAZ,EAAe;AACXyH,QAAAA,UAAU,CAAC,WAAD,EAAc,gBAAd,EAAgCzH,KAAhC,CAAV;AACH;;AACD,UAAIA,KAAK,IAAI8G,QAAT,IAAqB9G,KAAK,IAAI,CAAC8G,QAAnC,EAA6C;AACzCW,QAAAA,UAAU,CAAC,UAAD,EAAa,gBAAb,EAA+BzH,KAA/B,CAAV;AACH;;AACD,aAAOgH,SAAS,CAAC3D,IAAV,CAAe/D,MAAM,CAACU,KAAD,CAArB,CAAP;AACH;;AACD,UAAM+H,QAAQ,GAAG/H,KAAjB;;AACA,QAAI,OAAQ+H,QAAR,KAAsB,QAA1B,EAAoC;AAChC,aAAOf,SAAS,CAAC3D,IAAV,CAAe0E,QAAQ,CAAChiB,QAAT,EAAf,CAAP;AACH;;AACD,QAAIke,OAAO,CAAC8D,QAAD,CAAX,EAAuB;AACnB,aAAOf,SAAS,CAAC3D,IAAV,CAAeqC,OAAO,CAACqC,QAAD,CAAtB,CAAP;AACH;;AACD,QAAIA,QAAJ,EAAc;AACV;AACA,UAAIA,QAAQ,CAACtE,WAAb,EAA0B;AACtB,cAAMiB,GAAG,GAAGqD,QAAQ,CAACtE,WAAT,EAAZ;;AACA,YAAI,OAAQiB,GAAR,KAAiB,QAArB,EAA+B;AAC3B,iBAAOsC,SAAS,CAAC3D,IAAV,CAAeqB,GAAf,CAAP;AACH;AACJ,OALD,MAMK;AACD;AACA,YAAIA,GAAG,GAAGqD,QAAQ,CAACZ,IAAnB,CAFC,CAGD;;AACA,YAAIzC,GAAG,IAAI,IAAP,IAAeqD,QAAQ,CAAC7lB,IAAT,KAAkB,WAArC,EAAkD;AAC9CwiB,UAAAA,GAAG,GAAGqD,QAAQ,CAACrD,GAAf;AACH;;AACD,YAAI,OAAQA,GAAR,KAAiB,QAArB,EAA+B;AAC3B,cAAIV,WAAW,CAACU,GAAD,CAAX,IAAqBA,GAAG,CAAC,CAAD,CAAH,KAAW,GAAX,IAAkBV,WAAW,CAACU,GAAG,CAACD,SAAJ,CAAc,CAAd,CAAD,CAAtD,EAA2E;AACvE,mBAAOuC,SAAS,CAAC3D,IAAV,CAAeqB,GAAf,CAAP;AACH;AACJ;AACJ;AACJ;;AACD,WAAOkC,QAAQ,CAACrG,kBAAT,CAA4B,yBAA5B,EAAuD,OAAvD,EAAgEP,KAAhE,CAAP;AACH;;AACiB,SAAXgI,WAAW,CAAChI,KAAD,EAAQ;AACtB,WAAO,CAAC,EAAEA,KAAK,IAAIA,KAAK,CAACoH,YAAjB,CAAR;AACH;;AAnNW,C,CAqNhB;;;AACA,SAASU,KAAT,CAAe9H,KAAf,EAAsB;AAClB;AACA,MAAI,OAAQA,KAAR,KAAmB,QAAvB,EAAiC;AAC7B,WAAO8H,KAAK,CAAC9H,KAAK,CAACja,QAAN,CAAe,EAAf,CAAD,CAAZ;AACH,GAJiB,CAKlB;;;AACA,MAAIia,KAAK,CAAC,CAAD,CAAL,KAAa,GAAjB,EAAsB;AAClB;AACAA,IAAAA,KAAK,GAAGA,KAAK,CAACyE,SAAN,CAAgB,CAAhB,CAAR,CAFkB,CAGlB;;AACA,QAAIzE,KAAK,CAAC,CAAD,CAAL,KAAa,GAAjB,EAAsB;AAClB4G,MAAAA,QAAQ,CAACrG,kBAAT,CAA4B,aAA5B,EAA2C,OAA3C,EAAoDP,KAApD;AACH,KANiB,CAOlB;;;AACAA,IAAAA,KAAK,GAAG8H,KAAK,CAAC9H,KAAD,CAAb,CARkB,CASlB;;AACA,QAAIA,KAAK,KAAK,MAAd,EAAsB;AAClB,aAAOA,KAAP;AACH,KAZiB,CAalB;;;AACA,WAAO,MAAMA,KAAb;AACH,GArBiB,CAsBlB;;;AACA,MAAIA,KAAK,CAACyE,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,MAA0B,IAA9B,EAAoC;AAChCzE,IAAAA,KAAK,GAAG,OAAOA,KAAf;AACH,GAzBiB,CA0BlB;;;AACA,MAAIA,KAAK,KAAK,IAAd,EAAoB;AAChB,WAAO,MAAP;AACH,GA7BiB,CA8BlB;;;AACA,MAAIA,KAAK,CAACjb,MAAN,GAAe,CAAnB,EAAsB;AAClBib,IAAAA,KAAK,GAAG,QAAQA,KAAK,CAACyE,SAAN,CAAgB,CAAhB,CAAhB;AACH,GAjCiB,CAkClB;;;AACA,SAAOzE,KAAK,CAACjb,MAAN,GAAe,CAAf,IAAoBib,KAAK,CAACyE,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,MAA0B,MAArD,EAA6D;AACzDzE,IAAAA,KAAK,GAAG,OAAOA,KAAK,CAACyE,SAAN,CAAgB,CAAhB,CAAf;AACH;;AACD,SAAOzE,KAAP;AACH;;AACD,SAASsH,WAAT,CAAqBtH,KAArB,EAA4B;AACxB,SAAOgH,SAAS,CAAC3D,IAAV,CAAeyE,KAAK,CAAC9H,KAAD,CAApB,CAAP;AACH;;AACD,SAASuH,IAAT,CAAcvH,KAAd,EAAqB;AACjB,QAAM0E,GAAG,GAAGsC,SAAS,CAAC3D,IAAV,CAAerD,KAAf,EAAsByD,WAAtB,EAAZ;;AACA,MAAIiB,GAAG,CAAC,CAAD,CAAH,KAAW,GAAf,EAAoB;AAChB,WAAQ,IAAIlgB,EAAJ,CAAO,MAAMkgB,GAAG,CAACD,SAAJ,CAAc,CAAd,CAAb,EAA+B,EAA/B,CAAR;AACH;;AACD,SAAO,IAAIjgB,EAAJ,CAAOkgB,GAAG,CAACD,SAAJ,CAAc,CAAd,CAAP,EAAyB,EAAzB,CAAP;AACH;;AACD,SAASgD,UAAT,CAAoBpF,KAApB,EAA2BH,SAA3B,EAAsClC,KAAtC,EAA6C;AACzC,QAAMkB,MAAM,GAAG;AAAEmB,IAAAA,KAAK,EAAEA,KAAT;AAAgBH,IAAAA,SAAS,EAAEA;AAA3B,GAAf;;AACA,MAAIlC,KAAK,IAAI,IAAb,EAAmB;AACfkB,IAAAA,MAAM,CAAClB,KAAP,GAAeA,KAAf;AACH;;AACD,SAAO4G,QAAQ,CAACjF,UAAT,CAAoBU,KAApB,EAA2BzC,MAAM,CAACuB,MAAP,CAAciB,aAAzC,EAAwDlB,MAAxD,CAAP;AACH,C,CACD;;;AACA,SAAS+G,WAAT,CAAqBjI,KAArB,EAA4B;AACxB,SAAQ,IAAIxb,EAAJ,CAAOwb,KAAP,EAAc,EAAd,CAAD,CAAoBja,QAApB,CAA6B,EAA7B,CAAP;AACH;;AAGD,MAAMmiB,SAAS,GAAG,kBAAlB;;AAGA,IAAIC,SAAS,GAAI5L,SAAS,IAAIA,SAAS,CAAC4L,SAAxB,IAAsC,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AAC/F,WAASC,KAAT,CAAexI,KAAf,EAAsB;AAAE,WAAOA,KAAK,YAAYsI,CAAjB,GAAqBtI,KAArB,GAA6B,IAAIsI,CAAJ,CAAM,UAAUG,OAAV,EAAmB;AAAEA,MAAAA,OAAO,CAACzI,KAAD,CAAP;AAAiB,KAA5C,CAApC;AAAoF;;AAC5G,SAAO,KAAKsI,CAAC,KAAKA,CAAC,GAAGI,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;AACvD,aAASC,SAAT,CAAmB5I,KAAnB,EAA0B;AAAE,UAAI;AAAE6I,QAAAA,IAAI,CAACN,SAAS,CAACxL,IAAV,CAAeiD,KAAf,CAAD,CAAJ;AAA8B,OAApC,CAAqC,OAAOxe,CAAP,EAAU;AAAEmnB,QAAAA,MAAM,CAACnnB,CAAD,CAAN;AAAY;AAAE;;AAC3F,aAASsnB,QAAT,CAAkB9I,KAAlB,EAAyB;AAAE,UAAI;AAAE6I,QAAAA,IAAI,CAACN,SAAS,CAAC,OAAD,CAAT,CAAmBvI,KAAnB,CAAD,CAAJ;AAAkC,OAAxC,CAAyC,OAAOxe,CAAP,EAAU;AAAEmnB,QAAAA,MAAM,CAACnnB,CAAD,CAAN;AAAY;AAAE;;AAC9F,aAASqnB,IAAT,CAAcxE,MAAd,EAAsB;AAAEA,MAAAA,MAAM,CAAC0E,IAAP,GAAcN,OAAO,CAACpE,MAAM,CAACrE,KAAR,CAArB,GAAsCwI,KAAK,CAACnE,MAAM,CAACrE,KAAR,CAAL,CAAoBgJ,IAApB,CAAyBJ,SAAzB,EAAoCE,QAApC,CAAtC;AAAsF;;AAC9GD,IAAAA,IAAI,CAAC,CAACN,SAAS,GAAGA,SAAS,CAAC7H,KAAV,CAAgB0H,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDtL,IAAzD,EAAD,CAAJ;AACH,GALM,CAAP;AAMH,CARD;;AASA,MAAMkM,QAAQ,GAAG,IAAIrJ,MAAJ,CAAWsI,SAAX,CAAjB;;AACA,SAASgB,cAAT,CAAwB9D,MAAxB,EAAgC9iB,IAAhC,EAAsC0d,KAAtC,EAA6C;AACzCH,EAAAA,MAAM,CAACC,cAAP,CAAsBsF,MAAtB,EAA8B9iB,IAA9B,EAAoC;AAChCyd,IAAAA,UAAU,EAAE,IADoB;AAEhCC,IAAAA,KAAK,EAAEA,KAFyB;AAGhCC,IAAAA,QAAQ,EAAE;AAHsB,GAApC;AAKH,C,CACD;;;AACA,SAASkJ,SAAT,CAAmBjlB,IAAnB,EAAyBqd,GAAzB,EAA8B;AAC1B,OAAK,IAAIhb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB,QAAIrC,IAAI,CAACqd,GAAD,CAAR,EAAe;AACX,aAAOrd,IAAI,CAACqd,GAAD,CAAX;AACH;;AACD,QAAI,CAACrd,IAAI,CAACI,SAAN,IAAmB,OAAQJ,IAAI,CAACI,SAAb,KAA4B,QAAnD,EAA6D;AACzD;AACH;;AACDJ,IAAAA,IAAI,GAAG2b,MAAM,CAACuJ,cAAP,CAAsBllB,IAAI,CAACI,SAA3B,EAAsCC,WAA7C;AACH;;AACD,SAAO,IAAP;AACH;;AACD,SAAS8kB,iBAAT,CAA2BjE,MAA3B,EAAmC;AAC/B,SAAO+C,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAChD,UAAMmB,QAAQ,GAAGzJ,MAAM,CAACyB,IAAP,CAAY8D,MAAZ,EAAoBL,GAApB,CAAyBxD,GAAD,IAAS;AAC9C,YAAMvB,KAAK,GAAGoF,MAAM,CAAC7D,GAAD,CAApB;AACA,aAAOmH,OAAO,CAACD,OAAR,CAAgBzI,KAAhB,EAAuBgJ,IAAvB,CAA6B9E,CAAD,KAAQ;AAAE3C,QAAAA,GAAG,EAAEA,GAAP;AAAYvB,QAAAA,KAAK,EAAEkE;AAAnB,OAAR,CAA5B,CAAP;AACH,KAHgB,CAAjB;AAIA,UAAMqF,OAAO,GAAG,MAAMb,OAAO,CAACc,GAAR,CAAYF,QAAZ,CAAtB;AACA,WAAOC,OAAO,CAACtE,MAAR,CAAe,CAACC,KAAD,EAAQb,MAAR,KAAmB;AACrCa,MAAAA,KAAK,CAAEb,MAAM,CAAC9C,GAAT,CAAL,GAAsB8C,MAAM,CAACrE,KAA7B;AACA,aAAOkF,KAAP;AACH,KAHM,EAGJ,EAHI,CAAP;AAIH,GAVe,CAAhB;AAWH;;AACD,SAASuE,eAAT,CAAyBrE,MAAzB,EAAiCsE,UAAjC,EAA6C;AACzC,MAAI,CAACtE,MAAD,IAAW,OAAQA,MAAR,KAAoB,QAAnC,EAA6C;AACzC6D,IAAAA,QAAQ,CAAC1I,kBAAT,CAA4B,gBAA5B,EAA8C,QAA9C,EAAwD6E,MAAxD;AACH;;AACDvF,EAAAA,MAAM,CAACyB,IAAP,CAAY8D,MAAZ,EAAoBnG,OAApB,CAA6BsC,GAAD,IAAS;AACjC,QAAI,CAACmI,UAAU,CAACnI,GAAD,CAAf,EAAsB;AAClB0H,MAAAA,QAAQ,CAAC1I,kBAAT,CAA4B,0BAA0BgB,GAAtD,EAA2D,iBAAiBA,GAA5E,EAAiF6D,MAAjF;AACH;AACJ,GAJD;AAKH;;AACD,SAASuE,WAAT,CAAqBvE,MAArB,EAA6B;AACzB,QAAMf,MAAM,GAAG,EAAf;;AACA,OAAK,MAAM9C,GAAX,IAAkB6D,MAAlB,EAA0B;AACtBf,IAAAA,MAAM,CAAC9C,GAAD,CAAN,GAAc6D,MAAM,CAAC7D,GAAD,CAApB;AACH;;AACD,SAAO8C,MAAP;AACH;;AACD,MAAMuF,MAAM,GAAG;AAAEC,EAAAA,MAAM,EAAE,IAAV;AAAgBC,EAAAA,OAAO,EAAE,IAAzB;AAA+B,cAAY,IAA3C;AAAiDrlB,EAAAA,MAAM,EAAE,IAAzD;AAA+DoC,EAAAA,MAAM,EAAE;AAAvE,CAAf;;AACA,SAASkjB,SAAT,CAAmB3E,MAAnB,EAA2B;AACvB;AACA,MAAIA,MAAM,KAAK7I,SAAX,IAAwB6I,MAAM,KAAK,IAAnC,IAA2CwE,MAAM,CAAC,OAAQxE,MAAT,CAArD,EAAwE;AACpE,WAAO,IAAP;AACH;;AACD,MAAI/f,KAAK,CAACC,OAAN,CAAc8f,MAAd,KAAyB,OAAQA,MAAR,KAAoB,QAAjD,EAA2D;AACvD,QAAI,CAACvF,MAAM,CAACmK,QAAP,CAAgB5E,MAAhB,CAAL,EAA8B;AAC1B,aAAO,KAAP;AACH;;AACD,UAAM9D,IAAI,GAAGzB,MAAM,CAACyB,IAAP,CAAY8D,MAAZ,CAAb;;AACA,SAAK,IAAI7e,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+a,IAAI,CAACvc,MAAzB,EAAiCwB,CAAC,EAAlC,EAAsC;AAClC,UAAI,CAACwjB,SAAS,CAAC3E,MAAM,CAAC9D,IAAI,CAAC/a,CAAD,CAAL,CAAP,CAAd,EAAiC;AAC7B,eAAO,KAAP;AACH;AACJ;;AACD,WAAO,IAAP;AACH;;AACD,SAAO0iB,QAAQ,CAAC1I,kBAAT,CAA6B,mBAAkB,OAAQ6E,MAAQ,EAA/D,EAAkE,QAAlE,EAA4EA,MAA5E,CAAP;AACH,C,CACD;AACA;;;AACA,SAAS6E,SAAT,CAAmB7E,MAAnB,EAA2B;AACvB,MAAI2E,SAAS,CAAC3E,MAAD,CAAb,EAAuB;AACnB,WAAOA,MAAP;AACH,GAHsB,CAIvB;;;AACA,MAAI/f,KAAK,CAACC,OAAN,CAAc8f,MAAd,CAAJ,EAA2B;AACvB,WAAOvF,MAAM,CAACwH,MAAP,CAAcjC,MAAM,CAACL,GAAP,CAAYC,IAAD,IAAUkF,QAAQ,CAAClF,IAAD,CAA7B,CAAd,CAAP;AACH;;AACD,MAAI,OAAQI,MAAR,KAAoB,QAAxB,EAAkC;AAC9B,UAAMf,MAAM,GAAG,EAAf;;AACA,SAAK,MAAM9C,GAAX,IAAkB6D,MAAlB,EAA0B;AACtB,YAAMpF,KAAK,GAAGoF,MAAM,CAAC7D,GAAD,CAApB;;AACA,UAAIvB,KAAK,KAAKzD,SAAd,EAAyB;AACrB;AACH;;AACD2M,MAAAA,cAAc,CAAC7E,MAAD,EAAS9C,GAAT,EAAc2I,QAAQ,CAAClK,KAAD,CAAtB,CAAd;AACH;;AACD,WAAOqE,MAAP;AACH;;AACD,SAAO4E,QAAQ,CAAC1I,kBAAT,CAA6B,mBAAkB,OAAQ6E,MAAQ,EAA/D,EAAkE,QAAlE,EAA4EA,MAA5E,CAAP;AACH;;AACD,SAAS8E,QAAT,CAAkB9E,MAAlB,EAA0B;AACtB,SAAO6E,SAAS,CAAC7E,MAAD,CAAhB;AACH;;AACD,MAAM+E,WAAN,CAAkB;AACd5lB,EAAAA,WAAW,CAACma,IAAD,EAAO;AACd,SAAK,MAAM6C,GAAX,IAAkB7C,IAAlB,EAAwB;AACpB,WAAK6C,GAAL,IAAY2I,QAAQ,CAACxL,IAAI,CAAC6C,GAAD,CAAL,CAApB;AACH;AACJ;;AALa;;AASlB,IAAI6I,IAAI,GAAGlnB,oBAAoB,CAAC,UAAUE,MAAV,EAAkB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA,GAAC,YAAY;AAEX,QAAIinB,IAAI,GAAG,OAAOtnB,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsC,EAAjD;AACA,QAAIunB,OAAO,GAAG,CAACD,IAAI,CAACE,kBAAN,IAA4B,OAAOC,OAAP,KAAmB,QAA/C,IAA2DA,OAAO,CAACC,QAAnE,IAA+ED,OAAO,CAACC,QAAR,CAAiBC,IAA9G;;AACA,QAAIJ,OAAJ,EAAa;AACXD,MAAAA,IAAI,GAAGxnB,cAAP;AACD;;AACD,QAAI8nB,SAAS,GAAG,CAACN,IAAI,CAACO,oBAAN,IAA8B,aAAa,QAA3C,IAAuDxnB,MAAM,CAACC,OAA9E;AACA,QAAIwnB,SAAS,GAAG,mBAAmBxO,KAAnB,CAAyB,EAAzB,CAAhB;AACA,QAAIyO,aAAa,GAAG,CAAC,EAAD,EAAK,IAAL,EAAW,OAAX,EAAoB,SAApB,CAApB;AACA,QAAIC,cAAc,GAAG,CAAC,CAAD,EAAI,GAAJ,EAAS,KAAT,EAAgB,QAAhB,CAArB;AACA,QAAIC,OAAO,GAAG,CAAC,CAAD,EAAI,IAAJ,EAAU,MAAV,EAAkB,SAAlB,CAAd;AACA,QAAIC,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,CAAZ;AACA,QAAIC,EAAE,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,KAAP,EAAc,CAAd,EAAiB,KAAjB,EAAwB,UAAxB,EAAoC,UAApC,EAAgD,UAAhD,EAA4D,KAA5D,EAAmE,CAAnE,EAAsE,UAAtE,EACC,CADD,EACI,UADJ,EACgB,UADhB,EAC4B,KAD5B,EACmC,UADnC,EAC+C,GAD/C,EACoD,CADpD,EACuD,GADvD,EAC4D,CAD5D,EAC+D,UAD/D,EAC2E,CAD3E,EAEC,UAFD,EAEa,CAFb,EAEgB,UAFhB,EAE4B,CAF5B,EAE+B,GAF/B,EAEoC,UAFpC,EAEgD,KAFhD,EAEuD,UAFvD,EAEmE,KAFnE,EAGC,UAHD,EAGa,KAHb,EAGoB,UAHpB,EAGgC,GAHhC,EAGqC,UAHrC,EAGiD,KAHjD,EAGwD,CAHxD,EAG2D,UAH3D,EAGuE,UAHvE,EAIC,UAJD,EAIa,UAJb,EAIyB,KAJzB,EAIgC,UAJhC,EAI4C,UAJ5C,EAIwD,CAJxD,EAI2D,UAJ3D,EAIuE,UAJvE,CAAT;AAKA,QAAIC,IAAI,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAX;AACA,QAAIC,UAAU,GAAG,CAAC,GAAD,EAAM,GAAN,CAAjB;AACA,QAAIC,YAAY,GAAG,CAAC,KAAD,EAAQ,QAAR,EAAkB,aAAlB,EAAiC,OAAjC,CAAnB;;AAEA,QAAIC,kBAAkB,GAAG,UAAUzV,IAAV,EAAgBjN,OAAhB,EAAyB2iB,UAAzB,EAAqC;AAC5D,aAAO,UAAU/L,OAAV,EAAmB;AACxB,eAAO,IAAIgM,MAAJ,CAAW3V,IAAX,EAAiBjN,OAAjB,EAA0BiN,IAA1B,EAAgC4V,MAAhC,CAAuCjM,OAAvC,EAAgD+L,UAAhD,GAAP;AACD,OAFD;AAGD,KAJD;;AAMA,QAAIG,uBAAuB,GAAG,UAAU7V,IAAV,EAAgBjN,OAAhB,EAAyB2iB,UAAzB,EAAqC;AACjE,aAAO,UAAU/L,OAAV,EAAmBmM,UAAnB,EAA+B;AACpC,eAAO,IAAIH,MAAJ,CAAW3V,IAAX,EAAiBjN,OAAjB,EAA0B+iB,UAA1B,EAAsCF,MAAtC,CAA6CjM,OAA7C,EAAsD+L,UAAtD,GAAP;AACD,OAFD;AAGD,KAJD;;AAMA,QAAIK,YAAY,GAAG,UAAU/V,IAAV,EAAgBjN,OAAhB,EAAyB;AAC1C,UAAIijB,MAAM,GAAGP,kBAAkB,CAACzV,IAAD,EAAOjN,OAAP,EAAgB,KAAhB,CAA/B;;AACAijB,MAAAA,MAAM,CAACC,MAAP,GAAgB,YAAY;AAC1B,eAAO,IAAIN,MAAJ,CAAW3V,IAAX,EAAiBjN,OAAjB,EAA0BiN,IAA1B,CAAP;AACD,OAFD;;AAGAgW,MAAAA,MAAM,CAACJ,MAAP,GAAgB,UAAUjM,OAAV,EAAmB;AACjC,eAAOqM,MAAM,CAACC,MAAP,GAAgBL,MAAhB,CAAuBjM,OAAvB,CAAP;AACD,OAFD;;AAGA,WAAK,IAAIjZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8kB,YAAY,CAACtmB,MAAjC,EAAyC,EAAEwB,CAA3C,EAA8C;AAC5C,YAAIrE,IAAI,GAAGmpB,YAAY,CAAC9kB,CAAD,CAAvB;AACAslB,QAAAA,MAAM,CAAC3pB,IAAD,CAAN,GAAeopB,kBAAkB,CAACzV,IAAD,EAAOjN,OAAP,EAAgB1G,IAAhB,CAAjC;AACD;;AACD,aAAO2pB,MAAP;AACD,KAbD;;AAeA,QAAIE,iBAAiB,GAAG,UAAUlW,IAAV,EAAgBjN,OAAhB,EAAyB;AAC/C,UAAIijB,MAAM,GAAGH,uBAAuB,CAAC7V,IAAD,EAAOjN,OAAP,EAAgB,KAAhB,CAApC;;AACAijB,MAAAA,MAAM,CAACC,MAAP,GAAgB,UAAUH,UAAV,EAAsB;AACpC,eAAO,IAAIH,MAAJ,CAAW3V,IAAX,EAAiBjN,OAAjB,EAA0B+iB,UAA1B,CAAP;AACD,OAFD;;AAGAE,MAAAA,MAAM,CAACJ,MAAP,GAAgB,UAAUjM,OAAV,EAAmBmM,UAAnB,EAA+B;AAC7C,eAAOE,MAAM,CAACC,MAAP,CAAcH,UAAd,EAA0BF,MAA1B,CAAiCjM,OAAjC,CAAP;AACD,OAFD;;AAGA,WAAK,IAAIjZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8kB,YAAY,CAACtmB,MAAjC,EAAyC,EAAEwB,CAA3C,EAA8C;AAC5C,YAAIrE,IAAI,GAAGmpB,YAAY,CAAC9kB,CAAD,CAAvB;AACAslB,QAAAA,MAAM,CAAC3pB,IAAD,CAAN,GAAewpB,uBAAuB,CAAC7V,IAAD,EAAOjN,OAAP,EAAgB1G,IAAhB,CAAtC;AACD;;AACD,aAAO2pB,MAAP;AACD,KAbD;;AAeA,QAAIG,UAAU,GAAG,CACf;AAAC1pB,MAAAA,IAAI,EAAE,QAAP;AAAiBsG,MAAAA,OAAO,EAAEmiB,cAA1B;AAA0ClV,MAAAA,IAAI,EAAEsV,IAAhD;AAAsDS,MAAAA,YAAY,EAAEA;AAApE,KADe,EAEf;AAACtpB,MAAAA,IAAI,EAAE,MAAP;AAAesG,MAAAA,OAAO,EAAEoiB,OAAxB;AAAiCnV,MAAAA,IAAI,EAAEsV,IAAvC;AAA6CS,MAAAA,YAAY,EAAEA;AAA3D,KAFe,EAGf;AAACtpB,MAAAA,IAAI,EAAE,OAAP;AAAgBsG,MAAAA,OAAO,EAAEkiB,aAAzB;AAAwCjV,MAAAA,IAAI,EAAEuV,UAA9C;AAA0DQ,MAAAA,YAAY,EAAEG;AAAxE,KAHe,CAAjB;AAMA,QAAIE,OAAO,GAAG,EAAd;AAAA,QAAkBC,WAAW,GAAG,EAAhC;;AAEA,SAAK,IAAI3lB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGylB,UAAU,CAACjnB,MAA/B,EAAuC,EAAEwB,CAAzC,EAA4C;AAC1C,UAAI4lB,SAAS,GAAGH,UAAU,CAACzlB,CAAD,CAA1B;AACA,UAAIsP,IAAI,GAAIsW,SAAS,CAACtW,IAAtB;;AACA,WAAK,IAAIrP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqP,IAAI,CAAC9Q,MAAzB,EAAiC,EAAEyB,CAAnC,EAAsC;AACpC,YAAI4lB,UAAU,GAAGD,SAAS,CAAC7pB,IAAV,GAAgB,GAAhB,GAAsBuT,IAAI,CAACrP,CAAD,CAA3C;AACA0lB,QAAAA,WAAW,CAAC9M,IAAZ,CAAiBgN,UAAjB;AACAH,QAAAA,OAAO,CAACG,UAAD,CAAP,GAAsBD,SAAS,CAACP,YAAV,CAAuB/V,IAAI,CAACrP,CAAD,CAA3B,EAAgC2lB,SAAS,CAACvjB,OAA1C,CAAtB;AACD;AACF;;AAED,aAAS4iB,MAAT,CAAgB3V,IAAhB,EAAsBjN,OAAtB,EAA+B+iB,UAA/B,EAA2C;AACzC,WAAKU,MAAL,GAAc,EAAd;AACA,WAAK5Y,CAAL,GAAS,EAAT;AACA,WAAK7K,OAAL,GAAeA,OAAf;AACA,WAAK+iB,UAAL,GAAkBA,UAAlB;AACA,WAAKW,KAAL,GAAa,IAAb;AACA,WAAKC,KAAL,GAAa,CAAb;AACA,WAAKtmB,KAAL,GAAa,CAAb;AACA,WAAKumB,UAAL,GAAmB,QAAQ3W,IAAI,IAAI,CAAhB,CAAD,IAAwB,CAA1C;AACA,WAAK4W,SAAL,GAAiB,KAAKD,UAAL,IAAmB,CAApC;AACA,WAAKE,YAAL,GAAoBf,UAAU,IAAI,CAAlC;AACA,WAAKgB,UAAL,GAAkB,CAAChB,UAAU,GAAG,EAAd,KAAqB,CAAvC;;AAEA,WAAK,IAAIplB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwB,EAAEA,CAA1B,EAA6B;AAC3B,aAAKkN,CAAL,CAAOlN,CAAP,IAAY,CAAZ;AACD;AACF;;AAEDilB,IAAAA,MAAM,CAAClnB,SAAP,CAAiBmnB,MAAjB,GAA0B,UAAUjM,OAAV,EAAmB;AAC3C,UAAIoN,SAAS,GAAG,OAAOpN,OAAP,KAAmB,QAAnC;;AACA,UAAIoN,SAAS,IAAIpN,OAAO,CAACjb,WAAR,KAAwBsoB,WAAzC,EAAsD;AACpDrN,QAAAA,OAAO,GAAG,IAAIsE,UAAJ,CAAetE,OAAf,CAAV;AACD;;AACD,UAAIza,MAAM,GAAGya,OAAO,CAACza,MAArB;AAAA,UAA6BsnB,MAAM,GAAG,KAAKA,MAA3C;AAAA,UAAmDI,SAAS,GAAG,KAAKA,SAApE;AAAA,UACED,UAAU,GAAG,KAAKA,UADpB;AAAA,UACgC1lB,KAAK,GAAG,CADxC;AAAA,UAC2C2M,CAAC,GAAG,KAAKA,CADpD;AAAA,UACuDlN,CADvD;AAAA,UAC0D0a,IAD1D;;AAGA,aAAOna,KAAK,GAAG/B,MAAf,EAAuB;AACrB,YAAI,KAAKunB,KAAT,EAAgB;AACd,eAAKA,KAAL,GAAa,KAAb;AACAD,UAAAA,MAAM,CAAC,CAAD,CAAN,GAAY,KAAKE,KAAjB;;AACA,eAAKhmB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGimB,UAAU,GAAG,CAA7B,EAAgC,EAAEjmB,CAAlC,EAAqC;AACnC8lB,YAAAA,MAAM,CAAC9lB,CAAD,CAAN,GAAY,CAAZ;AACD;AACF;;AACD,YAAIqmB,SAAJ,EAAe;AACb,eAAKrmB,CAAC,GAAG,KAAKN,KAAd,EAAqBa,KAAK,GAAG/B,MAAR,IAAkBwB,CAAC,GAAGkmB,SAA3C,EAAsD,EAAE3lB,KAAxD,EAA+D;AAC7DulB,YAAAA,MAAM,CAAC9lB,CAAC,IAAI,CAAN,CAAN,IAAkBiZ,OAAO,CAAC1Y,KAAD,CAAP,IAAkBmkB,KAAK,CAAC1kB,CAAC,KAAK,CAAP,CAAzC;AACD;AACF,SAJD,MAIO;AACL,eAAKA,CAAC,GAAG,KAAKN,KAAd,EAAqBa,KAAK,GAAG/B,MAAR,IAAkBwB,CAAC,GAAGkmB,SAA3C,EAAsD,EAAE3lB,KAAxD,EAA+D;AAC7Dma,YAAAA,IAAI,GAAGzB,OAAO,CAACxY,UAAR,CAAmBF,KAAnB,CAAP;;AACA,gBAAIma,IAAI,GAAG,IAAX,EAAiB;AACfoL,cAAAA,MAAM,CAAC9lB,CAAC,IAAI,CAAN,CAAN,IAAkB0a,IAAI,IAAIgK,KAAK,CAAC1kB,CAAC,KAAK,CAAP,CAA/B;AACD,aAFD,MAEO,IAAI0a,IAAI,GAAG,KAAX,EAAkB;AACvBoL,cAAAA,MAAM,CAAC9lB,CAAC,IAAI,CAAN,CAAN,IAAkB,CAAC,OAAQ0a,IAAI,IAAI,CAAjB,KAAwBgK,KAAK,CAAC1kB,CAAC,KAAK,CAAP,CAA/C;AACA8lB,cAAAA,MAAM,CAAC9lB,CAAC,IAAI,CAAN,CAAN,IAAkB,CAAC,OAAQ0a,IAAI,GAAG,IAAhB,KAA0BgK,KAAK,CAAC1kB,CAAC,KAAK,CAAP,CAAjD;AACD,aAHM,MAGA,IAAI0a,IAAI,GAAG,MAAP,IAAiBA,IAAI,IAAI,MAA7B,EAAqC;AAC1CoL,cAAAA,MAAM,CAAC9lB,CAAC,IAAI,CAAN,CAAN,IAAkB,CAAC,OAAQ0a,IAAI,IAAI,EAAjB,KAAyBgK,KAAK,CAAC1kB,CAAC,KAAK,CAAP,CAAhD;AACA8lB,cAAAA,MAAM,CAAC9lB,CAAC,IAAI,CAAN,CAAN,IAAkB,CAAC,OAAS0a,IAAI,IAAI,CAAT,GAAc,IAAvB,KAAiCgK,KAAK,CAAC1kB,CAAC,KAAK,CAAP,CAAxD;AACA8lB,cAAAA,MAAM,CAAC9lB,CAAC,IAAI,CAAN,CAAN,IAAkB,CAAC,OAAQ0a,IAAI,GAAG,IAAhB,KAA0BgK,KAAK,CAAC1kB,CAAC,KAAK,CAAP,CAAjD;AACD,aAJM,MAIA;AACL0a,cAAAA,IAAI,GAAG,WAAY,CAACA,IAAI,GAAG,KAAR,KAAkB,EAAnB,GAA0BzB,OAAO,CAACxY,UAAR,CAAmB,EAAEF,KAArB,IAA8B,KAAnE,CAAP;AACAulB,cAAAA,MAAM,CAAC9lB,CAAC,IAAI,CAAN,CAAN,IAAkB,CAAC,OAAQ0a,IAAI,IAAI,EAAjB,KAAyBgK,KAAK,CAAC1kB,CAAC,KAAK,CAAP,CAAhD;AACA8lB,cAAAA,MAAM,CAAC9lB,CAAC,IAAI,CAAN,CAAN,IAAkB,CAAC,OAAS0a,IAAI,IAAI,EAAT,GAAe,IAAxB,KAAkCgK,KAAK,CAAC1kB,CAAC,KAAK,CAAP,CAAzD;AACA8lB,cAAAA,MAAM,CAAC9lB,CAAC,IAAI,CAAN,CAAN,IAAkB,CAAC,OAAS0a,IAAI,IAAI,CAAT,GAAc,IAAvB,KAAiCgK,KAAK,CAAC1kB,CAAC,KAAK,CAAP,CAAxD;AACA8lB,cAAAA,MAAM,CAAC9lB,CAAC,IAAI,CAAN,CAAN,IAAkB,CAAC,OAAQ0a,IAAI,GAAG,IAAhB,KAA0BgK,KAAK,CAAC1kB,CAAC,KAAK,CAAP,CAAjD;AACD;AACF;AACF;;AACD,aAAKumB,aAAL,GAAqBvmB,CAArB;;AACA,YAAIA,CAAC,IAAIkmB,SAAT,EAAoB;AAClB,eAAKxmB,KAAL,GAAaM,CAAC,GAAGkmB,SAAjB;AACA,eAAKF,KAAL,GAAaF,MAAM,CAACG,UAAD,CAAnB;;AACA,eAAKjmB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGimB,UAAhB,EAA4B,EAAEjmB,CAA9B,EAAiC;AAC/BkN,YAAAA,CAAC,CAAClN,CAAD,CAAD,IAAQ8lB,MAAM,CAAC9lB,CAAD,CAAd;AACD;;AACDwmB,UAAAA,CAAC,CAACtZ,CAAD,CAAD;AACA,eAAK6Y,KAAL,GAAa,IAAb;AACD,SARD,MAQO;AACL,eAAKrmB,KAAL,GAAaM,CAAb;AACD;AACF;;AACD,aAAO,IAAP;AACD,KAvDD;;AAyDAilB,IAAAA,MAAM,CAAClnB,SAAP,CAAiB0oB,QAAjB,GAA4B,YAAY;AACtC,UAAIX,MAAM,GAAG,KAAKA,MAAlB;AAAA,UAA0B9lB,CAAC,GAAG,KAAKumB,aAAnC;AAAA,UAAkDN,UAAU,GAAG,KAAKA,UAApE;AAAA,UAAgF/Y,CAAC,GAAG,KAAKA,CAAzF;AACA4Y,MAAAA,MAAM,CAAC9lB,CAAC,IAAI,CAAN,CAAN,IAAkB,KAAKqC,OAAL,CAAarC,CAAC,GAAG,CAAjB,CAAlB;;AACA,UAAI,KAAKumB,aAAL,KAAuB,KAAKL,SAAhC,EAA2C;AACzCJ,QAAAA,MAAM,CAAC,CAAD,CAAN,GAAYA,MAAM,CAACG,UAAD,CAAlB;;AACA,aAAKjmB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGimB,UAAU,GAAG,CAA7B,EAAgC,EAAEjmB,CAAlC,EAAqC;AACnC8lB,UAAAA,MAAM,CAAC9lB,CAAD,CAAN,GAAY,CAAZ;AACD;AACF;;AACD8lB,MAAAA,MAAM,CAACG,UAAU,GAAG,CAAd,CAAN,IAA0B,UAA1B;;AACA,WAAKjmB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGimB,UAAhB,EAA4B,EAAEjmB,CAA9B,EAAiC;AAC/BkN,QAAAA,CAAC,CAAClN,CAAD,CAAD,IAAQ8lB,MAAM,CAAC9lB,CAAD,CAAd;AACD;;AACDwmB,MAAAA,CAAC,CAACtZ,CAAD,CAAD;AACD,KAdD;;AAgBA+X,IAAAA,MAAM,CAAClnB,SAAP,CAAiByB,QAAjB,GAA4BylB,MAAM,CAAClnB,SAAP,CAAiBogB,GAAjB,GAAuB,YAAY;AAC7D,WAAKsI,QAAL;AAEA,UAAIR,UAAU,GAAG,KAAKA,UAAtB;AAAA,UAAkC/Y,CAAC,GAAG,KAAKA,CAA3C;AAAA,UAA8CiZ,YAAY,GAAG,KAAKA,YAAlE;AAAA,UACIC,UAAU,GAAG,KAAKA,UADtB;AAAA,UACkCpmB,CAAC,GAAG,CADtC;AAAA,UACyCC,CAAC,GAAG,CAD7C;AAEA,UAAIke,GAAG,GAAG,EAAV;AAAA,UAAc6H,KAAd;;AACA,aAAO/lB,CAAC,GAAGkmB,YAAX,EAAyB;AACvB,aAAKnmB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGimB,UAAJ,IAAkBhmB,CAAC,GAAGkmB,YAAlC,EAAgD,EAAEnmB,CAAF,EAAK,EAAEC,CAAvD,EAA0D;AACxD+lB,UAAAA,KAAK,GAAG9Y,CAAC,CAAClN,CAAD,CAAT;AACAme,UAAAA,GAAG,IAAImG,SAAS,CAAE0B,KAAK,IAAI,CAAV,GAAe,IAAhB,CAAT,GAAiC1B,SAAS,CAAC0B,KAAK,GAAG,IAAT,CAA1C,GACA1B,SAAS,CAAE0B,KAAK,IAAI,EAAV,GAAgB,IAAjB,CADT,GACkC1B,SAAS,CAAE0B,KAAK,IAAI,CAAV,GAAe,IAAhB,CAD3C,GAEA1B,SAAS,CAAE0B,KAAK,IAAI,EAAV,GAAgB,IAAjB,CAFT,GAEkC1B,SAAS,CAAE0B,KAAK,IAAI,EAAV,GAAgB,IAAjB,CAF3C,GAGA1B,SAAS,CAAE0B,KAAK,IAAI,EAAV,GAAgB,IAAjB,CAHT,GAGkC1B,SAAS,CAAE0B,KAAK,IAAI,EAAV,GAAgB,IAAjB,CAHlD;AAID;;AACD,YAAI/lB,CAAC,GAAGgmB,UAAJ,KAAmB,CAAvB,EAA0B;AACxBO,UAAAA,CAAC,CAACtZ,CAAD,CAAD;AACAlN,UAAAA,CAAC,GAAG,CAAJ;AACD;AACF;;AACD,UAAIomB,UAAJ,EAAgB;AACdJ,QAAAA,KAAK,GAAG9Y,CAAC,CAAClN,CAAD,CAAT;;AACA,YAAIomB,UAAU,GAAG,CAAjB,EAAoB;AAClBjI,UAAAA,GAAG,IAAImG,SAAS,CAAE0B,KAAK,IAAI,CAAV,GAAe,IAAhB,CAAT,GAAiC1B,SAAS,CAAC0B,KAAK,GAAG,IAAT,CAAjD;AACD;;AACD,YAAII,UAAU,GAAG,CAAjB,EAAoB;AAClBjI,UAAAA,GAAG,IAAImG,SAAS,CAAE0B,KAAK,IAAI,EAAV,GAAgB,IAAjB,CAAT,GAAkC1B,SAAS,CAAE0B,KAAK,IAAI,CAAV,GAAe,IAAhB,CAAlD;AACD;;AACD,YAAII,UAAU,GAAG,CAAjB,EAAoB;AAClBjI,UAAAA,GAAG,IAAImG,SAAS,CAAE0B,KAAK,IAAI,EAAV,GAAgB,IAAjB,CAAT,GAAkC1B,SAAS,CAAE0B,KAAK,IAAI,EAAV,GAAgB,IAAjB,CAAlD;AACD;AACF;;AACD,aAAO7H,GAAP;AACD,KAhCD;;AAkCA8G,IAAAA,MAAM,CAAClnB,SAAP,CAAiB2oB,WAAjB,GAA+B,YAAY;AACzC,WAAKD,QAAL;AAEA,UAAIR,UAAU,GAAG,KAAKA,UAAtB;AAAA,UAAkC/Y,CAAC,GAAG,KAAKA,CAA3C;AAAA,UAA8CiZ,YAAY,GAAG,KAAKA,YAAlE;AAAA,UACIC,UAAU,GAAG,KAAKA,UADtB;AAAA,UACkCpmB,CAAC,GAAG,CADtC;AAAA,UACyCC,CAAC,GAAG,CAD7C;AAEA,UAAIigB,KAAK,GAAG,KAAKkF,UAAL,IAAmB,CAA/B;AACA,UAAIuB,MAAJ;;AACA,UAAIP,UAAJ,EAAgB;AACdO,QAAAA,MAAM,GAAG,IAAIL,WAAJ,CAAiBH,YAAY,GAAG,CAAhB,IAAsB,CAAtC,CAAT;AACD,OAFD,MAEO;AACLQ,QAAAA,MAAM,GAAG,IAAIL,WAAJ,CAAgBpG,KAAhB,CAAT;AACD;;AACD,UAAI9C,KAAK,GAAG,IAAIwJ,WAAJ,CAAgBD,MAAhB,CAAZ;;AACA,aAAO1mB,CAAC,GAAGkmB,YAAX,EAAyB;AACvB,aAAKnmB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGimB,UAAJ,IAAkBhmB,CAAC,GAAGkmB,YAAlC,EAAgD,EAAEnmB,CAAF,EAAK,EAAEC,CAAvD,EAA0D;AACxDmd,UAAAA,KAAK,CAACnd,CAAD,CAAL,GAAWiN,CAAC,CAAClN,CAAD,CAAZ;AACD;;AACD,YAAIC,CAAC,GAAGgmB,UAAJ,KAAmB,CAAvB,EAA0B;AACxBO,UAAAA,CAAC,CAACtZ,CAAD,CAAD;AACD;AACF;;AACD,UAAIkZ,UAAJ,EAAgB;AACdhJ,QAAAA,KAAK,CAACpd,CAAD,CAAL,GAAWkN,CAAC,CAAClN,CAAD,CAAZ;AACA2mB,QAAAA,MAAM,GAAGA,MAAM,CAACtJ,KAAP,CAAa,CAAb,EAAgB6C,KAAhB,CAAT;AACD;;AACD,aAAOyG,MAAP;AACD,KA1BD;;AA4BA1B,IAAAA,MAAM,CAAClnB,SAAP,CAAiB4oB,MAAjB,GAA0B1B,MAAM,CAAClnB,SAAP,CAAiB2oB,WAA3C;;AAEAzB,IAAAA,MAAM,CAAClnB,SAAP,CAAiB8oB,MAAjB,GAA0B5B,MAAM,CAAClnB,SAAP,CAAiBqf,KAAjB,GAAyB,YAAY;AAC7D,WAAKqJ,QAAL;AAEA,UAAIR,UAAU,GAAG,KAAKA,UAAtB;AAAA,UAAkC/Y,CAAC,GAAG,KAAKA,CAA3C;AAAA,UAA8CiZ,YAAY,GAAG,KAAKA,YAAlE;AAAA,UACIC,UAAU,GAAG,KAAKA,UADtB;AAAA,UACkCpmB,CAAC,GAAG,CADtC;AAAA,UACyCC,CAAC,GAAG,CAD7C;AAEA,UAAImd,KAAK,GAAG,EAAZ;AAAA,UAAgBwB,MAAhB;AAAA,UAAwBoH,KAAxB;;AACA,aAAO/lB,CAAC,GAAGkmB,YAAX,EAAyB;AACvB,aAAKnmB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGimB,UAAJ,IAAkBhmB,CAAC,GAAGkmB,YAAlC,EAAgD,EAAEnmB,CAAF,EAAK,EAAEC,CAAvD,EAA0D;AACxD2e,UAAAA,MAAM,GAAG3e,CAAC,IAAI,CAAd;AACA+lB,UAAAA,KAAK,GAAG9Y,CAAC,CAAClN,CAAD,CAAT;AACAod,UAAAA,KAAK,CAACwB,MAAD,CAAL,GAAgBoH,KAAK,GAAG,IAAxB;AACA5I,UAAAA,KAAK,CAACwB,MAAM,GAAG,CAAV,CAAL,GAAqBoH,KAAK,IAAI,CAAV,GAAe,IAAnC;AACA5I,UAAAA,KAAK,CAACwB,MAAM,GAAG,CAAV,CAAL,GAAqBoH,KAAK,IAAI,EAAV,GAAgB,IAApC;AACA5I,UAAAA,KAAK,CAACwB,MAAM,GAAG,CAAV,CAAL,GAAqBoH,KAAK,IAAI,EAAV,GAAgB,IAApC;AACD;;AACD,YAAI/lB,CAAC,GAAGgmB,UAAJ,KAAmB,CAAvB,EAA0B;AACxBO,UAAAA,CAAC,CAACtZ,CAAD,CAAD;AACD;AACF;;AACD,UAAIkZ,UAAJ,EAAgB;AACdxH,QAAAA,MAAM,GAAG3e,CAAC,IAAI,CAAd;AACA+lB,QAAAA,KAAK,GAAG9Y,CAAC,CAAClN,CAAD,CAAT;;AACA,YAAIomB,UAAU,GAAG,CAAjB,EAAoB;AAClBhJ,UAAAA,KAAK,CAACwB,MAAD,CAAL,GAAgBoH,KAAK,GAAG,IAAxB;AACD;;AACD,YAAII,UAAU,GAAG,CAAjB,EAAoB;AAClBhJ,UAAAA,KAAK,CAACwB,MAAM,GAAG,CAAV,CAAL,GAAqBoH,KAAK,IAAI,CAAV,GAAe,IAAnC;AACD;;AACD,YAAII,UAAU,GAAG,CAAjB,EAAoB;AAClBhJ,UAAAA,KAAK,CAACwB,MAAM,GAAG,CAAV,CAAL,GAAqBoH,KAAK,IAAI,EAAV,GAAgB,IAApC;AACD;AACF;;AACD,aAAO5I,KAAP;AACD,KAjCD;;AAmCA,QAAIoJ,CAAC,GAAG,UAAUtZ,CAAV,EAAa;AACnB,UAAI0C,CAAJ,EAAOpD,CAAP,EAAUxP,CAAV,EAAa8pB,EAAb,EAAiBC,EAAjB,EAAqBC,EAArB,EAAyBC,EAAzB,EAA6BC,EAA7B,EAAiCC,EAAjC,EAAqCC,EAArC,EAAyCC,EAAzC,EAA6CC,EAA7C,EAAiDC,EAAjD,EACI5e,EADJ,EACQG,EADR,EACYG,EADZ,EACgBG,EADhB,EACoBG,EADpB,EACwBG,EADxB,EAC4BG,EAD5B,EACgCG,EADhC,EACoCG,EADpC,EACwCG,EADxC,EAC4Ckd,GAD5C,EACiDC,GADjD,EACsDC,GADtD,EAC2DC,GAD3D,EACgEC,GADhE,EACqEC,GADrE,EAC0EC,GAD1E,EAC+EC,GAD/E,EAEIC,GAFJ,EAESC,GAFT,EAEcC,GAFd,EAEmBC,GAFnB,EAEwBC,GAFxB,EAE6BC,GAF7B,EAEkCC,GAFlC,EAEuCC,GAFvC,EAE4CC,GAF5C,EAEiDC,GAFjD,EAEsDC,GAFtD,EAE2DC,GAF3D,EAEgEC,GAFhE,EAEqEC,GAFrE,EAE0EC,GAF1E,EAE+EC,GAF/E,EAGIC,GAHJ,EAGSC,GAHT,EAGcC,GAHd,EAGmBC,GAHnB,EAGwBC,GAHxB,EAG6BC,GAH7B,EAGkCC,GAHlC,EAGuCC,GAHvC,EAG4CC,GAH5C,EAGiDC,GAHjD,EAGsDC,GAHtD,EAG2DC,GAH3D,EAGgEC,GAHhE,EAGqEC,GAHrE,EAG0EC,GAH1E,EAG+EC,GAH/E;;AAIA,WAAK/sB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,IAAI,CAAzB,EAA4B;AAC1B8pB,QAAAA,EAAE,GAAG5Z,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,EAAD,CAAR,GAAeA,CAAC,CAAC,EAAD,CAAhB,GAAuBA,CAAC,CAAC,EAAD,CAAxB,GAA+BA,CAAC,CAAC,EAAD,CAArC;AACA6Z,QAAAA,EAAE,GAAG7Z,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,EAAD,CAAR,GAAeA,CAAC,CAAC,EAAD,CAAhB,GAAuBA,CAAC,CAAC,EAAD,CAAxB,GAA+BA,CAAC,CAAC,EAAD,CAArC;AACA8Z,QAAAA,EAAE,GAAG9Z,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,EAAD,CAAR,GAAeA,CAAC,CAAC,EAAD,CAAhB,GAAuBA,CAAC,CAAC,EAAD,CAAxB,GAA+BA,CAAC,CAAC,EAAD,CAArC;AACA+Z,QAAAA,EAAE,GAAG/Z,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,EAAD,CAAR,GAAeA,CAAC,CAAC,EAAD,CAAhB,GAAuBA,CAAC,CAAC,EAAD,CAAxB,GAA+BA,CAAC,CAAC,EAAD,CAArC;AACAga,QAAAA,EAAE,GAAGha,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,EAAD,CAAR,GAAeA,CAAC,CAAC,EAAD,CAAhB,GAAuBA,CAAC,CAAC,EAAD,CAAxB,GAA+BA,CAAC,CAAC,EAAD,CAArC;AACAia,QAAAA,EAAE,GAAGja,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,EAAD,CAAR,GAAeA,CAAC,CAAC,EAAD,CAAhB,GAAuBA,CAAC,CAAC,EAAD,CAAxB,GAA+BA,CAAC,CAAC,EAAD,CAArC;AACAka,QAAAA,EAAE,GAAGla,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,EAAD,CAAR,GAAeA,CAAC,CAAC,EAAD,CAAhB,GAAuBA,CAAC,CAAC,EAAD,CAAxB,GAA+BA,CAAC,CAAC,EAAD,CAArC;AACAma,QAAAA,EAAE,GAAGna,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,EAAD,CAAR,GAAeA,CAAC,CAAC,EAAD,CAAhB,GAAuBA,CAAC,CAAC,EAAD,CAAxB,GAA+BA,CAAC,CAAC,EAAD,CAArC;AACAoa,QAAAA,EAAE,GAAGpa,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,EAAD,CAAR,GAAeA,CAAC,CAAC,EAAD,CAAhB,GAAuBA,CAAC,CAAC,EAAD,CAAxB,GAA+BA,CAAC,CAAC,EAAD,CAArC;AACAqa,QAAAA,EAAE,GAAGra,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,EAAD,CAAR,GAAeA,CAAC,CAAC,EAAD,CAAhB,GAAuBA,CAAC,CAAC,EAAD,CAAxB,GAA+BA,CAAC,CAAC,EAAD,CAArC;AAEA0C,QAAAA,CAAC,GAAG0X,EAAE,IAAKN,EAAE,IAAI,CAAP,GAAaC,EAAE,KAAK,EAAxB,CAAN;AACAza,QAAAA,CAAC,GAAG+a,EAAE,IAAKN,EAAE,IAAI,CAAP,GAAaD,EAAE,KAAK,EAAxB,CAAN;AACA9Z,QAAAA,CAAC,CAAC,CAAD,CAAD,IAAQ0C,CAAR;AACA1C,QAAAA,CAAC,CAAC,CAAD,CAAD,IAAQV,CAAR;AACAU,QAAAA,CAAC,CAAC,EAAD,CAAD,IAAS0C,CAAT;AACA1C,QAAAA,CAAC,CAAC,EAAD,CAAD,IAASV,CAAT;AACAU,QAAAA,CAAC,CAAC,EAAD,CAAD,IAAS0C,CAAT;AACA1C,QAAAA,CAAC,CAAC,EAAD,CAAD,IAASV,CAAT;AACAU,QAAAA,CAAC,CAAC,EAAD,CAAD,IAAS0C,CAAT;AACA1C,QAAAA,CAAC,CAAC,EAAD,CAAD,IAASV,CAAT;AACAU,QAAAA,CAAC,CAAC,EAAD,CAAD,IAAS0C,CAAT;AACA1C,QAAAA,CAAC,CAAC,EAAD,CAAD,IAASV,CAAT;AACAoD,QAAAA,CAAC,GAAGkX,EAAE,IAAKI,EAAE,IAAI,CAAP,GAAaC,EAAE,KAAK,EAAxB,CAAN;AACA3a,QAAAA,CAAC,GAAGua,EAAE,IAAKI,EAAE,IAAI,CAAP,GAAaD,EAAE,KAAK,EAAxB,CAAN;AACAha,QAAAA,CAAC,CAAC,CAAD,CAAD,IAAQ0C,CAAR;AACA1C,QAAAA,CAAC,CAAC,CAAD,CAAD,IAAQV,CAAR;AACAU,QAAAA,CAAC,CAAC,EAAD,CAAD,IAAS0C,CAAT;AACA1C,QAAAA,CAAC,CAAC,EAAD,CAAD,IAASV,CAAT;AACAU,QAAAA,CAAC,CAAC,EAAD,CAAD,IAAS0C,CAAT;AACA1C,QAAAA,CAAC,CAAC,EAAD,CAAD,IAASV,CAAT;AACAU,QAAAA,CAAC,CAAC,EAAD,CAAD,IAAS0C,CAAT;AACA1C,QAAAA,CAAC,CAAC,EAAD,CAAD,IAASV,CAAT;AACAU,QAAAA,CAAC,CAAC,EAAD,CAAD,IAAS0C,CAAT;AACA1C,QAAAA,CAAC,CAAC,EAAD,CAAD,IAASV,CAAT;AACAoD,QAAAA,CAAC,GAAGoX,EAAE,IAAKI,EAAE,IAAI,CAAP,GAAaC,EAAE,KAAK,EAAxB,CAAN;AACA7a,QAAAA,CAAC,GAAGya,EAAE,IAAKI,EAAE,IAAI,CAAP,GAAaD,EAAE,KAAK,EAAxB,CAAN;AACAla,QAAAA,CAAC,CAAC,CAAD,CAAD,IAAQ0C,CAAR;AACA1C,QAAAA,CAAC,CAAC,CAAD,CAAD,IAAQV,CAAR;AACAU,QAAAA,CAAC,CAAC,EAAD,CAAD,IAAS0C,CAAT;AACA1C,QAAAA,CAAC,CAAC,EAAD,CAAD,IAASV,CAAT;AACAU,QAAAA,CAAC,CAAC,EAAD,CAAD,IAAS0C,CAAT;AACA1C,QAAAA,CAAC,CAAC,EAAD,CAAD,IAASV,CAAT;AACAU,QAAAA,CAAC,CAAC,EAAD,CAAD,IAAS0C,CAAT;AACA1C,QAAAA,CAAC,CAAC,EAAD,CAAD,IAASV,CAAT;AACAU,QAAAA,CAAC,CAAC,EAAD,CAAD,IAAS0C,CAAT;AACA1C,QAAAA,CAAC,CAAC,EAAD,CAAD,IAASV,CAAT;AACAoD,QAAAA,CAAC,GAAGsX,EAAE,IAAKI,EAAE,IAAI,CAAP,GAAaC,EAAE,KAAK,EAAxB,CAAN;AACA/a,QAAAA,CAAC,GAAG2a,EAAE,IAAKI,EAAE,IAAI,CAAP,GAAaD,EAAE,KAAK,EAAxB,CAAN;AACApa,QAAAA,CAAC,CAAC,CAAD,CAAD,IAAQ0C,CAAR;AACA1C,QAAAA,CAAC,CAAC,CAAD,CAAD,IAAQV,CAAR;AACAU,QAAAA,CAAC,CAAC,EAAD,CAAD,IAAS0C,CAAT;AACA1C,QAAAA,CAAC,CAAC,EAAD,CAAD,IAASV,CAAT;AACAU,QAAAA,CAAC,CAAC,EAAD,CAAD,IAAS0C,CAAT;AACA1C,QAAAA,CAAC,CAAC,EAAD,CAAD,IAASV,CAAT;AACAU,QAAAA,CAAC,CAAC,EAAD,CAAD,IAAS0C,CAAT;AACA1C,QAAAA,CAAC,CAAC,EAAD,CAAD,IAASV,CAAT;AACAU,QAAAA,CAAC,CAAC,EAAD,CAAD,IAAS0C,CAAT;AACA1C,QAAAA,CAAC,CAAC,EAAD,CAAD,IAASV,CAAT;AACAoD,QAAAA,CAAC,GAAGwX,EAAE,IAAKN,EAAE,IAAI,CAAP,GAAaC,EAAE,KAAK,EAAxB,CAAN;AACAva,QAAAA,CAAC,GAAG6a,EAAE,IAAKN,EAAE,IAAI,CAAP,GAAaD,EAAE,KAAK,EAAxB,CAAN;AACA5Z,QAAAA,CAAC,CAAC,CAAD,CAAD,IAAQ0C,CAAR;AACA1C,QAAAA,CAAC,CAAC,CAAD,CAAD,IAAQV,CAAR;AACAU,QAAAA,CAAC,CAAC,EAAD,CAAD,IAAS0C,CAAT;AACA1C,QAAAA,CAAC,CAAC,EAAD,CAAD,IAASV,CAAT;AACAU,QAAAA,CAAC,CAAC,EAAD,CAAD,IAAS0C,CAAT;AACA1C,QAAAA,CAAC,CAAC,EAAD,CAAD,IAASV,CAAT;AACAU,QAAAA,CAAC,CAAC,EAAD,CAAD,IAAS0C,CAAT;AACA1C,QAAAA,CAAC,CAAC,EAAD,CAAD,IAASV,CAAT;AACAU,QAAAA,CAAC,CAAC,EAAD,CAAD,IAAS0C,CAAT;AACA1C,QAAAA,CAAC,CAAC,EAAD,CAAD,IAASV,CAAT;AAEA7D,QAAAA,EAAE,GAAGuE,CAAC,CAAC,CAAD,CAAN;AACApE,QAAAA,EAAE,GAAGoE,CAAC,CAAC,CAAD,CAAN;AACA4b,QAAAA,GAAG,GAAI5b,CAAC,CAAC,EAAD,CAAD,IAAS,CAAV,GAAgBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACA6b,QAAAA,GAAG,GAAI7b,CAAC,CAAC,EAAD,CAAD,IAAS,CAAV,GAAgBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACA0a,QAAAA,GAAG,GAAI1a,CAAC,CAAC,EAAD,CAAD,IAAS,CAAV,GAAgBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACA2a,QAAAA,GAAG,GAAI3a,CAAC,CAAC,EAAD,CAAD,IAAS,CAAV,GAAgBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACA0c,QAAAA,GAAG,GAAI1c,CAAC,CAAC,EAAD,CAAD,IAAS,CAAV,GAAgBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACA2c,QAAAA,GAAG,GAAI3c,CAAC,CAAC,EAAD,CAAD,IAAS,CAAV,GAAgBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACAwb,QAAAA,GAAG,GAAIxb,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAjC;AACAyb,QAAAA,GAAG,GAAIzb,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAjC;AACAgb,QAAAA,GAAG,GAAIhb,CAAC,CAAC,CAAD,CAAD,IAAQ,CAAT,GAAeA,CAAC,CAAC,CAAD,CAAD,KAAS,EAA9B;AACAib,QAAAA,GAAG,GAAIjb,CAAC,CAAC,CAAD,CAAD,IAAQ,CAAT,GAAeA,CAAC,CAAC,CAAD,CAAD,KAAS,EAA9B;AACAjE,QAAAA,EAAE,GAAIiE,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACA9D,QAAAA,EAAE,GAAI8D,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACA8b,QAAAA,GAAG,GAAI9b,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAjC;AACA+b,QAAAA,GAAG,GAAI/b,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAjC;AACA4a,QAAAA,GAAG,GAAI5a,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAjC;AACA6a,QAAAA,GAAG,GAAI7a,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAjC;AACA4c,QAAAA,GAAG,GAAI5c,CAAC,CAAC,EAAD,CAAD,IAAS,CAAV,GAAgBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACA6c,QAAAA,GAAG,GAAI7c,CAAC,CAAC,EAAD,CAAD,IAAS,CAAV,GAAgBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACAoc,QAAAA,GAAG,GAAIpc,CAAC,CAAC,CAAD,CAAD,IAAQ,EAAT,GAAgBA,CAAC,CAAC,CAAD,CAAD,KAAS,CAA/B;AACAqc,QAAAA,GAAG,GAAIrc,CAAC,CAAC,CAAD,CAAD,IAAQ,EAAT,GAAgBA,CAAC,CAAC,CAAD,CAAD,KAAS,CAA/B;AACAkb,QAAAA,GAAG,GAAIlb,CAAC,CAAC,EAAD,CAAD,IAAS,CAAV,GAAgBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACAmb,QAAAA,GAAG,GAAInb,CAAC,CAAC,EAAD,CAAD,IAAS,CAAV,GAAgBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACA3D,QAAAA,EAAE,GAAI2D,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACAxD,QAAAA,EAAE,GAAIwD,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACAgc,QAAAA,GAAG,GAAIhc,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAjC;AACAic,QAAAA,GAAG,GAAIjc,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAjC;AACA8a,QAAAA,GAAG,GAAI9a,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,CAAjC;AACA+a,QAAAA,GAAG,GAAI/a,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,CAAjC;AACAsa,QAAAA,GAAG,GAAIta,CAAC,CAAC,CAAD,CAAD,IAAQ,EAAT,GAAgBA,CAAC,CAAC,CAAD,CAAD,KAAS,CAA/B;AACAua,QAAAA,GAAG,GAAIva,CAAC,CAAC,CAAD,CAAD,IAAQ,EAAT,GAAgBA,CAAC,CAAC,CAAD,CAAD,KAAS,CAA/B;AACAsc,QAAAA,GAAG,GAAItc,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,CAAjC;AACAuc,QAAAA,GAAG,GAAIvc,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,CAAjC;AACAob,QAAAA,GAAG,GAAIpb,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,CAAjC;AACAqb,QAAAA,GAAG,GAAIrb,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,CAAjC;AACArD,QAAAA,EAAE,GAAIqD,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACAlD,QAAAA,EAAE,GAAIkD,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACAkc,QAAAA,GAAG,GAAIlc,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,CAAjC;AACAmc,QAAAA,GAAG,GAAInc,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,CAAjC;AACA0b,QAAAA,GAAG,GAAI1b,CAAC,CAAC,CAAD,CAAD,IAAQ,EAAT,GAAgBA,CAAC,CAAC,CAAD,CAAD,KAAS,CAA/B;AACA2b,QAAAA,GAAG,GAAI3b,CAAC,CAAC,CAAD,CAAD,IAAQ,EAAT,GAAgBA,CAAC,CAAC,CAAD,CAAD,KAAS,CAA/B;AACAwa,QAAAA,GAAG,GAAIxa,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAjC;AACAya,QAAAA,GAAG,GAAIza,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAjC;AACAwc,QAAAA,GAAG,GAAIxc,CAAC,CAAC,EAAD,CAAD,IAAS,CAAV,GAAgBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACAyc,QAAAA,GAAG,GAAIzc,CAAC,CAAC,EAAD,CAAD,IAAS,CAAV,GAAgBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACAsb,QAAAA,GAAG,GAAItb,CAAC,CAAC,EAAD,CAAD,IAAS,CAAV,GAAgBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACAub,QAAAA,GAAG,GAAIvb,CAAC,CAAC,EAAD,CAAD,IAAS,CAAV,GAAgBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACA/C,QAAAA,EAAE,GAAI+C,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACA5C,QAAAA,EAAE,GAAI4C,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AAEAA,QAAAA,CAAC,CAAC,CAAD,CAAD,GAAOvE,EAAE,GAAI,CAACM,EAAD,GAAMM,EAAnB;AACA2D,QAAAA,CAAC,CAAC,CAAD,CAAD,GAAOpE,EAAE,GAAI,CAACM,EAAD,GAAMM,EAAnB;AACAwD,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQsa,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACA1a,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQua,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACA3a,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQgb,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACApb,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQib,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACArb,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ0b,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACA9b,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ2b,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACA/b,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQoc,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACAxc,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQqc,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACAzc,QAAAA,CAAC,CAAC,CAAD,CAAD,GAAOjE,EAAE,GAAI,CAACM,EAAD,GAAMM,EAAnB;AACAqD,QAAAA,CAAC,CAAC,CAAD,CAAD,GAAO9D,EAAE,GAAI,CAACM,EAAD,GAAMM,EAAnB;AACAkD,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQwa,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACA5a,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQya,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACA7a,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQkb,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACAtb,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQmb,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACAvb,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ4b,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACAhc,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ6b,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACAjc,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQsc,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACA1c,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQuc,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACA3c,QAAAA,CAAC,CAAC,CAAD,CAAD,GAAO3D,EAAE,GAAI,CAACM,EAAD,GAAMM,EAAnB;AACA+C,QAAAA,CAAC,CAAC,CAAD,CAAD,GAAOxD,EAAE,GAAI,CAACM,EAAD,GAAMM,EAAnB;AACA4C,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ0a,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACA9a,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ2a,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACA/a,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQob,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACAxb,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQqb,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACAzb,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ8b,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACAlc,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ+b,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACAnc,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQwc,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACA5c,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQyc,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACA7c,QAAAA,CAAC,CAAC,CAAD,CAAD,GAAOrD,EAAE,GAAI,CAACM,EAAD,GAAMxB,EAAnB;AACAuE,QAAAA,CAAC,CAAC,CAAD,CAAD,GAAOlD,EAAE,GAAI,CAACM,EAAD,GAAMxB,EAAnB;AACAoE,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ4a,GAAG,GAAI,CAACE,GAAD,GAAOR,GAAtB;AACAta,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ6a,GAAG,GAAI,CAACE,GAAD,GAAOR,GAAtB;AACAva,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQsb,GAAG,GAAI,CAACE,GAAD,GAAOR,GAAtB;AACAhb,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQub,GAAG,GAAI,CAACE,GAAD,GAAOR,GAAtB;AACAjb,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQgc,GAAG,GAAI,CAACE,GAAD,GAAOR,GAAtB;AACA1b,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQic,GAAG,GAAI,CAACE,GAAD,GAAOR,GAAtB;AACA3b,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ0c,GAAG,GAAI,CAACE,GAAD,GAAOR,GAAtB;AACApc,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ2c,GAAG,GAAI,CAACE,GAAD,GAAOR,GAAtB;AACArc,QAAAA,CAAC,CAAC,CAAD,CAAD,GAAO/C,EAAE,GAAI,CAACxB,EAAD,GAAMM,EAAnB;AACAiE,QAAAA,CAAC,CAAC,CAAD,CAAD,GAAO5C,EAAE,GAAI,CAACxB,EAAD,GAAMM,EAAnB;AACA8D,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ8a,GAAG,GAAI,CAACR,GAAD,GAAOE,GAAtB;AACAxa,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ+a,GAAG,GAAI,CAACR,GAAD,GAAOE,GAAtB;AACAza,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQwb,GAAG,GAAI,CAACR,GAAD,GAAOE,GAAtB;AACAlb,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQyb,GAAG,GAAI,CAACR,GAAD,GAAOE,GAAtB;AACAnb,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQkc,GAAG,GAAI,CAACR,GAAD,GAAOE,GAAtB;AACA5b,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQmc,GAAG,GAAI,CAACR,GAAD,GAAOE,GAAtB;AACA7b,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ4c,GAAG,GAAI,CAACR,GAAD,GAAOE,GAAtB;AACAtc,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ6c,GAAG,GAAI,CAACR,GAAD,GAAOE,GAAtB;AAEAvc,QAAAA,CAAC,CAAC,CAAD,CAAD,IAAQyX,EAAE,CAAC3nB,CAAD,CAAV;AACAkQ,QAAAA,CAAC,CAAC,CAAD,CAAD,IAAQyX,EAAE,CAAC3nB,CAAC,GAAG,CAAL,CAAV;AACD;AACF,KAvLD;;AAyLA,QAAIonB,SAAJ,EAAe;AACbvnB,MAAAA,MAAM,CAACC,OAAP,GAAiB4oB,OAAjB;AACD,KAFD,MAEO;AACL,WAAK,IAAI1lB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2lB,WAAW,CAACnnB,MAAhC,EAAwC,EAAEwB,CAA1C,EAA6C;AAC3C8jB,QAAAA,IAAI,CAAC6B,WAAW,CAAC3lB,CAAD,CAAZ,CAAJ,GAAuB0lB,OAAO,CAACC,WAAW,CAAC3lB,CAAD,CAAZ,CAA9B;AACD;AACF;AACF,GAhdD;AAidC,CA3d8B,CAA/B;;AA6dA,SAASgqB,SAAT,CAAmB1K,IAAnB,EAAyB;AACrB,SAAO,OAAOuE,IAAI,CAACoG,UAAL,CAAgBrM,QAAQ,CAAC0B,IAAD,CAAxB,CAAd;AACH;;AAGD,MAAM4K,SAAS,GAAG,WAAlB;AAGA,MAAMC,QAAQ,GAAG,IAAI9Q,MAAJ,CAAW6Q,SAAX,CAAjB;;AACA,SAASE,eAAT,CAAyB3Q,KAAzB,EAAgC;AAC5B,QAAMqE,MAAM,GAAG,EAAf;;AACA,SAAOrE,KAAP,EAAc;AACVqE,IAAAA,MAAM,CAACC,OAAP,CAAetE,KAAK,GAAG,IAAvB;AACAA,IAAAA,KAAK,KAAK,CAAV;AACH;;AACD,SAAOqE,MAAP;AACH;;AACD,SAASuM,iBAAT,CAA2B/K,IAA3B,EAAiCV,MAAjC,EAAyCpgB,MAAzC,EAAiD;AAC7C,MAAIsf,MAAM,GAAG,CAAb;;AACA,OAAK,IAAI9d,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGxB,MAApB,EAA4BwB,CAAC,EAA7B,EAAiC;AAC7B8d,IAAAA,MAAM,GAAIA,MAAM,GAAG,GAAV,GAAiBwB,IAAI,CAACV,MAAM,GAAG5e,CAAV,CAA9B;AACH;;AACD,SAAO8d,MAAP;AACH;;AACD,SAASwM,OAAT,CAAiBzL,MAAjB,EAAyB;AACrB,MAAI/f,KAAK,CAACC,OAAN,CAAc8f,MAAd,CAAJ,EAA2B;AACvB,QAAI0L,OAAO,GAAG,EAAd;AACA1L,IAAAA,MAAM,CAACnG,OAAP,CAAe,UAAU8R,KAAV,EAAiB;AAC5BD,MAAAA,OAAO,GAAGA,OAAO,CAAClM,MAAR,CAAeiM,OAAO,CAACE,KAAD,CAAtB,CAAV;AACH,KAFD;;AAGA,QAAID,OAAO,CAAC/rB,MAAR,IAAkB,EAAtB,EAA0B;AACtB+rB,MAAAA,OAAO,CAACxM,OAAR,CAAgB,OAAOwM,OAAO,CAAC/rB,MAA/B;AACA,aAAO+rB,OAAP;AACH;;AACD,UAAM/rB,MAAM,GAAG4rB,eAAe,CAACG,OAAO,CAAC/rB,MAAT,CAA9B;AACAA,IAAAA,MAAM,CAACuf,OAAP,CAAe,OAAOvf,MAAM,CAACA,MAA7B;AACA,WAAOA,MAAM,CAAC6f,MAAP,CAAckM,OAAd,CAAP;AACH;;AACD,MAAI,CAAC/M,WAAW,CAACqB,MAAD,CAAhB,EAA0B;AACtBsL,IAAAA,QAAQ,CAACnQ,kBAAT,CAA4B,8BAA5B,EAA4D,QAA5D,EAAsE6E,MAAtE;AACH;;AACD,QAAMS,IAAI,GAAGxgB,KAAK,CAACf,SAAN,CAAgBsf,KAAhB,CAAsBjH,IAAtB,CAA2BwH,QAAQ,CAACiB,MAAD,CAAnC,CAAb;;AACA,MAAIS,IAAI,CAAC9gB,MAAL,KAAgB,CAAhB,IAAqB8gB,IAAI,CAAC,CAAD,CAAJ,IAAW,IAApC,EAA0C;AACtC,WAAOA,IAAP;AACH,GAFD,MAGK,IAAIA,IAAI,CAAC9gB,MAAL,IAAe,EAAnB,EAAuB;AACxB8gB,IAAAA,IAAI,CAACvB,OAAL,CAAa,OAAOuB,IAAI,CAAC9gB,MAAzB;AACA,WAAO8gB,IAAP;AACH;;AACD,QAAM9gB,MAAM,GAAG4rB,eAAe,CAAC9K,IAAI,CAAC9gB,MAAN,CAA9B;AACAA,EAAAA,MAAM,CAACuf,OAAP,CAAe,OAAOvf,MAAM,CAACA,MAA7B;AACA,SAAOA,MAAM,CAAC6f,MAAP,CAAciB,IAAd,CAAP;AACH;;AACD,SAASmL,MAAT,CAAgB5L,MAAhB,EAAwB;AACpB,SAAOM,OAAO,CAACmL,OAAO,CAACzL,MAAD,CAAR,CAAd;AACH;;AACD,SAAS6L,eAAT,CAAyBpL,IAAzB,EAA+BV,MAA/B,EAAuC+L,WAAvC,EAAoDnsB,MAApD,EAA4D;AACxD,QAAMsf,MAAM,GAAG,EAAf;;AACA,SAAO6M,WAAW,GAAG/L,MAAM,GAAG,CAAT,GAAapgB,MAAlC,EAA0C;AACtC,UAAMosB,OAAO,GAAGC,OAAO,CAACvL,IAAD,EAAOqL,WAAP,CAAvB;;AACA7M,IAAAA,MAAM,CAACjF,IAAP,CAAY+R,OAAO,CAAC9M,MAApB;AACA6M,IAAAA,WAAW,IAAIC,OAAO,CAACE,QAAvB;;AACA,QAAIH,WAAW,GAAG/L,MAAM,GAAG,CAAT,GAAapgB,MAA/B,EAAuC;AACnC2rB,MAAAA,QAAQ,CAAC/O,UAAT,CAAoB,sBAApB,EAA4C/B,MAAM,CAACuB,MAAP,CAAcmQ,cAA1D,EAA0E,EAA1E;AACH;AACJ;;AACD,SAAO;AAAED,IAAAA,QAAQ,EAAG,IAAItsB,MAAjB;AAA0Bsf,IAAAA,MAAM,EAAEA;AAAlC,GAAP;AACH,C,CACD;;;AACA,SAAS+M,OAAT,CAAiBvL,IAAjB,EAAuBV,MAAvB,EAA+B;AAC3B,MAAIU,IAAI,CAAC9gB,MAAL,KAAgB,CAApB,EAAuB;AACnB2rB,IAAAA,QAAQ,CAAC/O,UAAT,CAAoB,gBAApB,EAAsC/B,MAAM,CAACuB,MAAP,CAAcmQ,cAApD,EAAoE,EAApE;AACH,GAH0B,CAI3B;;;AACA,MAAIzL,IAAI,CAACV,MAAD,CAAJ,IAAgB,IAApB,EAA0B;AACtB,UAAMoM,YAAY,GAAG1L,IAAI,CAACV,MAAD,CAAJ,GAAe,IAApC;;AACA,QAAIA,MAAM,GAAG,CAAT,GAAaoM,YAAb,GAA4B1L,IAAI,CAAC9gB,MAArC,EAA6C;AACzC2rB,MAAAA,QAAQ,CAAC/O,UAAT,CAAoB,8BAApB,EAAoD/B,MAAM,CAACuB,MAAP,CAAcmQ,cAAlE,EAAkF,EAAlF;AACH;;AACD,UAAMvsB,MAAM,GAAG6rB,iBAAiB,CAAC/K,IAAD,EAAOV,MAAM,GAAG,CAAhB,EAAmBoM,YAAnB,CAAhC;;AACA,QAAIpM,MAAM,GAAG,CAAT,GAAaoM,YAAb,GAA4BxsB,MAA5B,GAAqC8gB,IAAI,CAAC9gB,MAA9C,EAAsD;AAClD2rB,MAAAA,QAAQ,CAAC/O,UAAT,CAAoB,6BAApB,EAAmD/B,MAAM,CAACuB,MAAP,CAAcmQ,cAAjE,EAAiF,EAAjF;AACH;;AACD,WAAOL,eAAe,CAACpL,IAAD,EAAOV,MAAP,EAAeA,MAAM,GAAG,CAAT,GAAaoM,YAA5B,EAA0CA,YAAY,GAAGxsB,MAAzD,CAAtB;AACH,GAVD,MAWK,IAAI8gB,IAAI,CAACV,MAAD,CAAJ,IAAgB,IAApB,EAA0B;AAC3B,UAAMpgB,MAAM,GAAG8gB,IAAI,CAACV,MAAD,CAAJ,GAAe,IAA9B;;AACA,QAAIA,MAAM,GAAG,CAAT,GAAapgB,MAAb,GAAsB8gB,IAAI,CAAC9gB,MAA/B,EAAuC;AACnC2rB,MAAAA,QAAQ,CAAC/O,UAAT,CAAoB,sBAApB,EAA4C/B,MAAM,CAACuB,MAAP,CAAcmQ,cAA1D,EAA0E,EAA1E;AACH;;AACD,WAAOL,eAAe,CAACpL,IAAD,EAAOV,MAAP,EAAeA,MAAM,GAAG,CAAxB,EAA2BpgB,MAA3B,CAAtB;AACH,GANI,MAOA,IAAI8gB,IAAI,CAACV,MAAD,CAAJ,IAAgB,IAApB,EAA0B;AAC3B,UAAMoM,YAAY,GAAG1L,IAAI,CAACV,MAAD,CAAJ,GAAe,IAApC;;AACA,QAAIA,MAAM,GAAG,CAAT,GAAaoM,YAAb,GAA4B1L,IAAI,CAAC9gB,MAArC,EAA6C;AACzC2rB,MAAAA,QAAQ,CAAC/O,UAAT,CAAoB,sBAApB,EAA4C/B,MAAM,CAACuB,MAAP,CAAcmQ,cAA1D,EAA0E,EAA1E;AACH;;AACD,UAAMvsB,MAAM,GAAG6rB,iBAAiB,CAAC/K,IAAD,EAAOV,MAAM,GAAG,CAAhB,EAAmBoM,YAAnB,CAAhC;;AACA,QAAIpM,MAAM,GAAG,CAAT,GAAaoM,YAAb,GAA4BxsB,MAA5B,GAAqC8gB,IAAI,CAAC9gB,MAA9C,EAAsD;AAClD2rB,MAAAA,QAAQ,CAAC/O,UAAT,CAAoB,sBAApB,EAA4C/B,MAAM,CAACuB,MAAP,CAAcmQ,cAA1D,EAA0E,EAA1E;AACH;;AACD,UAAMjN,MAAM,GAAGqB,OAAO,CAACG,IAAI,CAACjC,KAAL,CAAWuB,MAAM,GAAG,CAAT,GAAaoM,YAAxB,EAAsCpM,MAAM,GAAG,CAAT,GAAaoM,YAAb,GAA4BxsB,MAAlE,CAAD,CAAtB;AACA,WAAO;AAAEssB,MAAAA,QAAQ,EAAG,IAAIE,YAAJ,GAAmBxsB,MAAhC;AAAyCsf,MAAAA,MAAM,EAAEA;AAAjD,KAAP;AACH,GAXI,MAYA,IAAIwB,IAAI,CAACV,MAAD,CAAJ,IAAgB,IAApB,EAA0B;AAC3B,UAAMpgB,MAAM,GAAG8gB,IAAI,CAACV,MAAD,CAAJ,GAAe,IAA9B;;AACA,QAAIA,MAAM,GAAG,CAAT,GAAapgB,MAAb,GAAsB8gB,IAAI,CAAC9gB,MAA/B,EAAuC;AACnC2rB,MAAAA,QAAQ,CAAC/O,UAAT,CAAoB,gBAApB,EAAsC/B,MAAM,CAACuB,MAAP,CAAcmQ,cAApD,EAAoE,EAApE;AACH;;AACD,UAAMjN,MAAM,GAAGqB,OAAO,CAACG,IAAI,CAACjC,KAAL,CAAWuB,MAAM,GAAG,CAApB,EAAuBA,MAAM,GAAG,CAAT,GAAapgB,MAApC,CAAD,CAAtB;AACA,WAAO;AAAEssB,MAAAA,QAAQ,EAAG,IAAItsB,MAAjB;AAA0Bsf,MAAAA,MAAM,EAAEA;AAAlC,KAAP;AACH;;AACD,SAAO;AAAEgN,IAAAA,QAAQ,EAAE,CAAZ;AAAehN,IAAAA,MAAM,EAAEqB,OAAO,CAACG,IAAI,CAACV,MAAD,CAAL;AAA9B,GAAP;AACH;;AACD,SAASqM,MAAT,CAAgB3L,IAAhB,EAAsB;AAClB,QAAMY,KAAK,GAAGtC,QAAQ,CAAC0B,IAAD,CAAtB;;AACA,QAAMsL,OAAO,GAAGC,OAAO,CAAC3K,KAAD,EAAQ,CAAR,CAAvB;;AACA,MAAI0K,OAAO,CAACE,QAAR,KAAqB5K,KAAK,CAAC1hB,MAA/B,EAAuC;AACnC2rB,IAAAA,QAAQ,CAACnQ,kBAAT,CAA4B,kBAA5B,EAAgD,MAAhD,EAAwDsF,IAAxD;AACH;;AACD,SAAOsL,OAAO,CAAC9M,MAAf;AACH;;AAGD,MAAMoN,SAAS,GAAG,eAAlB;AAGA,MAAMC,QAAQ,GAAG,IAAI9R,MAAJ,CAAW6R,SAAX,CAAjB;;AACA,SAASE,kBAAT,CAA4BC,OAA5B,EAAqC;AACjC,MAAI,CAAC5N,WAAW,CAAC4N,OAAD,EAAU,EAAV,CAAhB,EAA+B;AAC3BF,IAAAA,QAAQ,CAACnR,kBAAT,CAA4B,iBAA5B,EAA+C,SAA/C,EAA0DqR,OAA1D;AACH;;AACDA,EAAAA,OAAO,GAAGA,OAAO,CAACtR,WAAR,EAAV;AACA,QAAMuR,KAAK,GAAGD,OAAO,CAACnN,SAAR,CAAkB,CAAlB,EAAqBpI,KAArB,CAA2B,EAA3B,CAAd;AACA,QAAMyV,QAAQ,GAAG,IAAIhO,UAAJ,CAAe,EAAf,CAAjB;;AACA,OAAK,IAAIvd,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBurB,IAAAA,QAAQ,CAACvrB,CAAD,CAAR,GAAcsrB,KAAK,CAACtrB,CAAD,CAAL,CAASS,UAAT,CAAoB,CAApB,CAAd;AACH;;AACD,QAAM+qB,MAAM,GAAG5N,QAAQ,CAACoM,SAAS,CAACuB,QAAD,CAAV,CAAvB;;AACA,OAAK,IAAIvrB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,IAAI,CAA7B,EAAgC;AAC5B,QAAKwrB,MAAM,CAACxrB,CAAC,IAAI,CAAN,CAAN,IAAkB,CAAnB,IAAyB,CAA7B,EAAgC;AAC5BsrB,MAAAA,KAAK,CAACtrB,CAAD,CAAL,GAAWsrB,KAAK,CAACtrB,CAAD,CAAL,CAASyrB,WAAT,EAAX;AACH;;AACD,QAAI,CAACD,MAAM,CAACxrB,CAAC,IAAI,CAAN,CAAN,GAAiB,IAAlB,KAA2B,CAA/B,EAAkC;AAC9BsrB,MAAAA,KAAK,CAACtrB,CAAC,GAAG,CAAL,CAAL,GAAesrB,KAAK,CAACtrB,CAAC,GAAG,CAAL,CAAL,CAAayrB,WAAb,EAAf;AACH;AACJ;;AACD,SAAO,OAAOH,KAAK,CAACxS,IAAN,CAAW,EAAX,CAAd;AACH,C,CACD;;;AACA,MAAM4S,gBAAgB,GAAG,gBAAzB;;AACA,SAASC,KAAT,CAAevf,CAAf,EAAkB;AACd,MAAItM,IAAI,CAAC6rB,KAAT,EAAgB;AACZ,WAAO7rB,IAAI,CAAC6rB,KAAL,CAAWvf,CAAX,CAAP;AACH;;AACD,SAAOtM,IAAI,CAACoa,GAAL,CAAS9N,CAAT,IAActM,IAAI,CAAC8rB,IAA1B;AACH,C,CACD;AACA;;;AACA,MAAMC,UAAU,GAAG,EAAnB;;AACA,KAAK,IAAI7rB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB6rB,EAAAA,UAAU,CAAC9S,MAAM,CAAC/Y,CAAD,CAAP,CAAV,GAAwB+Y,MAAM,CAAC/Y,CAAD,CAA9B;AACH;;AACD,KAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB6rB,EAAAA,UAAU,CAAC9S,MAAM,CAACC,YAAP,CAAoB,KAAKhZ,CAAzB,CAAD,CAAV,GAA0C+Y,MAAM,CAAC,KAAK/Y,CAAN,CAAhD;AACH,C,CACD;;;AACA,MAAM8rB,UAAU,GAAGhsB,IAAI,CAACsf,KAAL,CAAWuM,KAAK,CAACD,gBAAD,CAAhB,CAAnB;;AACA,SAASK,YAAT,CAAsBV,OAAtB,EAA+B;AAC3BA,EAAAA,OAAO,GAAGA,OAAO,CAACI,WAAR,EAAV;AACAJ,EAAAA,OAAO,GAAGA,OAAO,CAACnN,SAAR,CAAkB,CAAlB,IAAuBmN,OAAO,CAACnN,SAAR,CAAkB,CAAlB,EAAqB,CAArB,CAAvB,GAAiD,IAA3D;AACA,MAAIqN,QAAQ,GAAGF,OAAO,CAACvV,KAAR,CAAc,EAAd,EAAkB0I,GAAlB,CAAuBhe,CAAD,IAAO;AAAE,WAAOqrB,UAAU,CAACrrB,CAAD,CAAjB;AAAuB,GAAtD,EAAwDsY,IAAxD,CAA6D,EAA7D,CAAf,CAH2B,CAI3B;;AACA,SAAOyS,QAAQ,CAAC/sB,MAAT,IAAmBstB,UAA1B,EAAsC;AAClC,QAAI9F,KAAK,GAAGuF,QAAQ,CAACrN,SAAT,CAAmB,CAAnB,EAAsB4N,UAAtB,CAAZ;AACAP,IAAAA,QAAQ,GAAGvN,QAAQ,CAACgI,KAAD,EAAQ,EAAR,CAAR,GAAsB,EAAtB,GAA2BuF,QAAQ,CAACrN,SAAT,CAAmB8H,KAAK,CAACxnB,MAAzB,CAAtC;AACH;;AACD,MAAIwtB,QAAQ,GAAGjT,MAAM,CAAC,KAAMiF,QAAQ,CAACuN,QAAD,EAAW,EAAX,CAAR,GAAyB,EAAhC,CAArB;;AACA,SAAOS,QAAQ,CAACxtB,MAAT,GAAkB,CAAzB,EAA4B;AACxBwtB,IAAAA,QAAQ,GAAG,MAAMA,QAAjB;AACH;;AACD,SAAOA,QAAP;AACH;;AACD,SAASC,UAAT,CAAoBZ,OAApB,EAA6B;AACzB,MAAIvN,MAAM,GAAG,IAAb;;AACA,MAAI,OAAQuN,OAAR,KAAqB,QAAzB,EAAmC;AAC/BF,IAAAA,QAAQ,CAACnR,kBAAT,CAA4B,iBAA5B,EAA+C,SAA/C,EAA0DqR,OAA1D;AACH;;AACD,MAAIA,OAAO,CAACpM,KAAR,CAAc,wBAAd,CAAJ,EAA6C;AACzC;AACA,QAAIoM,OAAO,CAACnN,SAAR,CAAkB,CAAlB,EAAqB,CAArB,MAA4B,IAAhC,EAAsC;AAClCmN,MAAAA,OAAO,GAAG,OAAOA,OAAjB;AACH;;AACDvN,IAAAA,MAAM,GAAGsN,kBAAkB,CAACC,OAAD,CAA3B,CALyC,CAMzC;;AACA,QAAIA,OAAO,CAACpM,KAAR,CAAc,+BAAd,KAAkDnB,MAAM,KAAKuN,OAAjE,EAA0E;AACtEF,MAAAA,QAAQ,CAACnR,kBAAT,CAA4B,sBAA5B,EAAoD,SAApD,EAA+DqR,OAA/D;AACH,KATwC,CAUzC;;AACH,GAXD,MAYK,IAAIA,OAAO,CAACpM,KAAR,CAAc,gCAAd,CAAJ,EAAqD;AACtD;AACA,QAAIoM,OAAO,CAACnN,SAAR,CAAkB,CAAlB,EAAqB,CAArB,MAA4B6N,YAAY,CAACV,OAAD,CAA5C,EAAuD;AACnDF,MAAAA,QAAQ,CAACnR,kBAAT,CAA4B,mBAA5B,EAAiD,SAAjD,EAA4DqR,OAA5D;AACH;;AACDvN,IAAAA,MAAM,GAAG4D,WAAW,CAAC2J,OAAO,CAACnN,SAAR,CAAkB,CAAlB,CAAD,CAApB;;AACA,WAAOJ,MAAM,CAACtf,MAAP,GAAgB,EAAvB,EAA2B;AACvBsf,MAAAA,MAAM,GAAG,MAAMA,MAAf;AACH;;AACDA,IAAAA,MAAM,GAAGsN,kBAAkB,CAAC,OAAOtN,MAAR,CAA3B;AACH,GAVI,MAWA;AACDqN,IAAAA,QAAQ,CAACnR,kBAAT,CAA4B,iBAA5B,EAA+C,SAA/C,EAA0DqR,OAA1D;AACH;;AACD,SAAOvN,MAAP;AACH,C,CACD;;;AACA,SAASoO,kBAAT,CAA4BC,WAA5B,EAAyC;AACrC,MAAIrP,IAAI,GAAG,IAAX;;AACA,MAAI;AACAA,IAAAA,IAAI,GAAGmP,UAAU,CAACE,WAAW,CAACrP,IAAb,CAAjB;AACH,GAFD,CAGA,OAAOzE,KAAP,EAAc;AACV8S,IAAAA,QAAQ,CAACnR,kBAAT,CAA4B,sBAA5B,EAAoD,aAApD,EAAmEmS,WAAnE;AACH;;AACD,QAAMC,KAAK,GAAGrN,UAAU,CAACnB,QAAQ,CAAC6C,SAAS,CAAC3D,IAAV,CAAeqP,WAAW,CAACC,KAA3B,EAAkClP,WAAlC,EAAD,CAAT,CAAxB;AACA,SAAO+O,UAAU,CAAC1M,YAAY,CAACyK,SAAS,CAACS,MAAM,CAAC,CAAC3N,IAAD,EAAOsP,KAAP,CAAD,CAAP,CAAV,EAAmC,EAAnC,CAAb,CAAjB;AACH;;AAGD,MAAMC,WAAW,GAAG,4CAApB;AAGA,MAAMC,IAAI,GAAK,aAAa7L,SAAS,CAAC3D,IAAV,CAAe,CAAf,CAA5B;AAGA,MAAMyP,QAAQ,GAAG,oEAAjB;AAGA,MAAMC,SAAS,GAAG,eAAlB;AAGA,MAAMC,QAAQ,GAAG,IAAIpT,MAAJ,CAAWmT,SAAX,CAAjB,C,CACA;;AACA,IAAIE,wBAAJ;;AACA,CAAC,UAAUA,wBAAV,EAAoC;AACjCA,EAAAA,wBAAwB,CAAC,SAAD,CAAxB,GAAsC,EAAtC;AACAA,EAAAA,wBAAwB,CAAC,KAAD,CAAxB,GAAkC,KAAlC;AACAA,EAAAA,wBAAwB,CAAC,KAAD,CAAxB,GAAkC,KAAlC;AACAA,EAAAA,wBAAwB,CAAC,MAAD,CAAxB,GAAmC,MAAnC;AACAA,EAAAA,wBAAwB,CAAC,MAAD,CAAxB,GAAmC,MAAnC;AACH,CAND,EAMGA,wBAAwB,KAAKA,wBAAwB,GAAG,EAAhC,CAN3B;;AAOA,IAAIC,eAAJ;;AACA,CAAC,UAAUA,eAAV,EAA2B;AACxB;AACA;AACAA,EAAAA,eAAe,CAAC,qBAAD,CAAf,GAAyC,8BAAzC,CAHwB,CAIxB;AACA;;AACAA,EAAAA,eAAe,CAAC,YAAD,CAAf,GAAgC,sBAAhC,CANwB,CAOxB;AACA;;AACAA,EAAAA,eAAe,CAAC,SAAD,CAAf,GAA6B,gBAA7B,CATwB,CAUxB;AACA;;AACAA,EAAAA,eAAe,CAAC,kBAAD,CAAf,GAAsC,2BAAtC,CAZwB,CAaxB;AACA;AACA;;AACAA,EAAAA,eAAe,CAAC,cAAD,CAAf,GAAkC,oBAAlC,CAhBwB,CAiBxB;AACA;AACA;;AACAA,EAAAA,eAAe,CAAC,iBAAD,CAAf,GAAqC,kBAArC,CApBwB,CAqBxB;AACA;AACA;;AACAA,EAAAA,eAAe,CAAC,UAAD,CAAf,GAA8B,yBAA9B;AACH,CAzBD,EAyBGA,eAAe,KAAKA,eAAe,GAAG,EAAvB,CAzBlB;;AA0BA,SAASC,SAAT,CAAmBzR,MAAnB,EAA2ByD,MAA3B,EAAmCsB,KAAnC,EAA0C7J,MAA1C,EAAkDwW,YAAlD,EAAgE;AAC5D,SAAOJ,QAAQ,CAACzS,kBAAT,CAA6B,+BAA8B4E,MAAO,KAAIzD,MAAO,EAA7E,EAAgF,OAAhF,EAAyF+E,KAAzF,CAAP;AACH;;AACD,SAAS4M,UAAT,CAAoB3R,MAApB,EAA4ByD,MAA5B,EAAoCsB,KAApC,EAA2C7J,MAA3C,EAAmDwW,YAAnD,EAAiE;AAC7D;AACA,MAAI1R,MAAM,KAAKwR,eAAe,CAACI,UAA3B,IAAyC5R,MAAM,KAAKwR,eAAe,CAACK,mBAAxE,EAA6F;AACzF,QAAIhtB,CAAC,GAAG,CAAR;;AACA,SAAK,IAAI2G,CAAC,GAAGiY,MAAM,GAAG,CAAtB,EAAyBjY,CAAC,GAAGuZ,KAAK,CAAC1hB,MAAnC,EAA2CmI,CAAC,EAA5C,EAAgD;AAC5C,UAAIuZ,KAAK,CAACvZ,CAAD,CAAL,IAAY,CAAZ,KAAkB,IAAtB,EAA4B;AACxB;AACH;;AACD3G,MAAAA,CAAC;AACJ;;AACD,WAAOA,CAAP;AACH,GAX4D,CAY7D;AACA;;;AACA,MAAImb,MAAM,KAAKwR,eAAe,CAACM,OAA/B,EAAwC;AACpC,WAAO/M,KAAK,CAAC1hB,MAAN,GAAeogB,MAAf,GAAwB,CAA/B;AACH,GAhB4D,CAiB7D;;;AACA,SAAO,CAAP;AACH;;AACD,SAASsO,WAAT,CAAqB/R,MAArB,EAA6ByD,MAA7B,EAAqCsB,KAArC,EAA4C7J,MAA5C,EAAoDwW,YAApD,EAAkE;AAC9D;AACA,MAAI1R,MAAM,KAAKwR,eAAe,CAACQ,QAA/B,EAAyC;AACrC9W,IAAAA,MAAM,CAACwC,IAAP,CAAYgU,YAAZ;AACA,WAAO,CAAP;AACH,GAL6D,CAM9D;;;AACAxW,EAAAA,MAAM,CAACwC,IAAP,CAAY,MAAZ,EAP8D,CAQ9D;;AACA,SAAOiU,UAAU,CAAC3R,MAAD,EAASyD,MAAT,EAAiBsB,KAAjB,CAAjB;AACH,C,CACD;;;AACA,MAAMkN,cAAc,GAAG9T,MAAM,CAACwH,MAAP,CAAc;AACjCzI,EAAAA,KAAK,EAAEuU,SAD0B;AAEjCS,EAAAA,MAAM,EAAEP,UAFyB;AAGjCrtB,EAAAA,OAAO,EAAEytB;AAHwB,CAAd,CAAvB,C,CAKA;;AACA,SAASI,iBAAT,CAA2BpN,KAA3B,EAAkCqN,OAAlC,EAA2C;AACvC,MAAIA,OAAO,IAAI,IAAf,EAAqB;AACjBA,IAAAA,OAAO,GAAGH,cAAc,CAAC/U,KAAzB;AACH;;AACD6H,EAAAA,KAAK,GAAGtC,QAAQ,CAACsC,KAAD,CAAhB;AACA,QAAMpC,MAAM,GAAG,EAAf;AACA,MAAI9d,CAAC,GAAG,CAAR,CANuC,CAOvC;;AACA,SAAOA,CAAC,GAAGkgB,KAAK,CAAC1hB,MAAjB,EAAyB;AACrB,UAAMgC,CAAC,GAAG0f,KAAK,CAAClgB,CAAC,EAAF,CAAf,CADqB,CAErB;;AACA,QAAIQ,CAAC,IAAI,CAAL,KAAW,CAAf,EAAkB;AACdsd,MAAAA,MAAM,CAACjF,IAAP,CAAYrY,CAAZ;AACA;AACH,KANoB,CAOrB;;;AACA,QAAIgtB,WAAW,GAAG,IAAlB;AACA,QAAIC,YAAY,GAAG,IAAnB,CATqB,CAUrB;;AACA,QAAI,CAACjtB,CAAC,GAAG,IAAL,MAAe,IAAnB,EAAyB;AACrBgtB,MAAAA,WAAW,GAAG,CAAd;AACAC,MAAAA,YAAY,GAAG,IAAf,CAFqB,CAGrB;AACH,KAJD,MAKK,IAAI,CAACjtB,CAAC,GAAG,IAAL,MAAe,IAAnB,EAAyB;AAC1BgtB,MAAAA,WAAW,GAAG,CAAd;AACAC,MAAAA,YAAY,GAAG,KAAf,CAF0B,CAG1B;AACH,KAJI,MAKA,IAAI,CAACjtB,CAAC,GAAG,IAAL,MAAe,IAAnB,EAAyB;AAC1BgtB,MAAAA,WAAW,GAAG,CAAd;AACAC,MAAAA,YAAY,GAAG,MAAf;AACH,KAHI,MAIA;AACD,UAAI,CAACjtB,CAAC,GAAG,IAAL,MAAe,IAAnB,EAAyB;AACrBR,QAAAA,CAAC,IAAIutB,OAAO,CAACZ,eAAe,CAACK,mBAAjB,EAAsChtB,CAAC,GAAG,CAA1C,EAA6CkgB,KAA7C,EAAoDpC,MAApD,CAAZ;AACH,OAFD,MAGK;AACD9d,QAAAA,CAAC,IAAIutB,OAAO,CAACZ,eAAe,CAACI,UAAjB,EAA6B/sB,CAAC,GAAG,CAAjC,EAAoCkgB,KAApC,EAA2CpC,MAA3C,CAAZ;AACH;;AACD;AACH,KAjCoB,CAkCrB;;;AACA,QAAI9d,CAAC,GAAG,CAAJ,GAAQwtB,WAAR,IAAuBtN,KAAK,CAAC1hB,MAAjC,EAAyC;AACrCwB,MAAAA,CAAC,IAAIutB,OAAO,CAACZ,eAAe,CAACM,OAAjB,EAA0BjtB,CAAC,GAAG,CAA9B,EAAiCkgB,KAAjC,EAAwCpC,MAAxC,CAAZ;AACA;AACH,KAtCoB,CAuCrB;;;AACA,QAAIxa,GAAG,GAAG9C,CAAC,GAAI,CAAC,KAAM,IAAIgtB,WAAJ,GAAkB,CAAzB,IAA+B,CAA9C;;AACA,SAAK,IAAIvtB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGutB,WAApB,EAAiCvtB,CAAC,EAAlC,EAAsC;AAClC,UAAIytB,QAAQ,GAAGxN,KAAK,CAAClgB,CAAD,CAApB,CADkC,CAElC;;AACA,UAAI,CAAC0tB,QAAQ,GAAG,IAAZ,KAAqB,IAAzB,EAA+B;AAC3B1tB,QAAAA,CAAC,IAAIutB,OAAO,CAACZ,eAAe,CAACgB,gBAAjB,EAAmC3tB,CAAnC,EAAsCkgB,KAAtC,EAA6CpC,MAA7C,CAAZ;AACAxa,QAAAA,GAAG,GAAG,IAAN;AACA;AACH;;AACDA,MAAAA,GAAG,GAAIA,GAAG,IAAI,CAAR,GAAcoqB,QAAQ,GAAG,IAA/B;AACA1tB,MAAAA,CAAC;AACJ,KAnDoB,CAoDrB;;;AACA,QAAIsD,GAAG,KAAK,IAAZ,EAAkB;AACd;AACH,KAvDoB,CAwDrB;;;AACA,QAAIA,GAAG,GAAG,QAAV,EAAoB;AAChBtD,MAAAA,CAAC,IAAIutB,OAAO,CAACZ,eAAe,CAACiB,YAAjB,EAA+B5tB,CAAC,GAAG,CAAJ,GAAQwtB,WAAvC,EAAoDtN,KAApD,EAA2DpC,MAA3D,EAAmExa,GAAnE,CAAZ;AACA;AACH,KA5DoB,CA6DrB;;;AACA,QAAIA,GAAG,IAAI,MAAP,IAAiBA,GAAG,IAAI,MAA5B,EAAoC;AAChCtD,MAAAA,CAAC,IAAIutB,OAAO,CAACZ,eAAe,CAACkB,eAAjB,EAAkC7tB,CAAC,GAAG,CAAJ,GAAQwtB,WAA1C,EAAuDtN,KAAvD,EAA8DpC,MAA9D,EAAsExa,GAAtE,CAAZ;AACA;AACH,KAjEoB,CAkErB;;;AACA,QAAIA,GAAG,IAAImqB,YAAX,EAAyB;AACrBztB,MAAAA,CAAC,IAAIutB,OAAO,CAACZ,eAAe,CAACQ,QAAjB,EAA2BntB,CAAC,GAAG,CAAJ,GAAQwtB,WAAnC,EAAgDtN,KAAhD,EAAuDpC,MAAvD,EAA+Dxa,GAA/D,CAAZ;AACA;AACH;;AACDwa,IAAAA,MAAM,CAACjF,IAAP,CAAYvV,GAAZ;AACH;;AACD,SAAOwa,MAAP;AACH,C,CACD;;;AACA,SAASgQ,WAAT,CAAqB/sB,GAArB,EAA0B4X,IAAI,GAAG+T,wBAAwB,CAACnV,OAA1D,EAAmE;AAC/D,MAAIoB,IAAI,IAAI+T,wBAAwB,CAACnV,OAArC,EAA8C;AAC1CkV,IAAAA,QAAQ,CAAChR,cAAT;AACA1a,IAAAA,GAAG,GAAGA,GAAG,CAAC6X,SAAJ,CAAcD,IAAd,CAAN;AACH;;AACD,MAAImF,MAAM,GAAG,EAAb;;AACA,OAAK,IAAI9d,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGe,GAAG,CAACvC,MAAxB,EAAgCwB,CAAC,EAAjC,EAAqC;AACjC,UAAMQ,CAAC,GAAGO,GAAG,CAACN,UAAJ,CAAeT,CAAf,CAAV;;AACA,QAAIQ,CAAC,GAAG,IAAR,EAAc;AACVsd,MAAAA,MAAM,CAACjF,IAAP,CAAYrY,CAAZ;AACH,KAFD,MAGK,IAAIA,CAAC,GAAG,KAAR,EAAe;AAChBsd,MAAAA,MAAM,CAACjF,IAAP,CAAarY,CAAC,IAAI,CAAN,GAAW,IAAvB;AACAsd,MAAAA,MAAM,CAACjF,IAAP,CAAarY,CAAC,GAAG,IAAL,GAAa,IAAzB;AACH,KAHI,MAIA,IAAI,CAACA,CAAC,GAAG,MAAL,KAAgB,MAApB,EAA4B;AAC7BR,MAAAA,CAAC;AACD,YAAMgnB,EAAE,GAAGjmB,GAAG,CAACN,UAAJ,CAAeT,CAAf,CAAX;;AACA,UAAIA,CAAC,IAAIe,GAAG,CAACvC,MAAT,IAAmB,CAACwoB,EAAE,GAAG,MAAN,MAAkB,MAAzC,EAAiD;AAC7C,cAAM,IAAIvpB,KAAJ,CAAU,sBAAV,CAAN;AACH,OAL4B,CAM7B;;;AACA,YAAMswB,IAAI,GAAG,WAAW,CAACvtB,CAAC,GAAG,MAAL,KAAgB,EAA3B,KAAkCwmB,EAAE,GAAG,MAAvC,CAAb;AACAlJ,MAAAA,MAAM,CAACjF,IAAP,CAAakV,IAAI,IAAI,EAAT,GAAe,IAA3B;AACAjQ,MAAAA,MAAM,CAACjF,IAAP,CAAckV,IAAI,IAAI,EAAT,GAAe,IAAhB,GAAwB,IAApC;AACAjQ,MAAAA,MAAM,CAACjF,IAAP,CAAckV,IAAI,IAAI,CAAT,GAAc,IAAf,GAAuB,IAAnC;AACAjQ,MAAAA,MAAM,CAACjF,IAAP,CAAakV,IAAI,GAAG,IAAR,GAAgB,IAA5B;AACH,KAZI,MAaA;AACDjQ,MAAAA,MAAM,CAACjF,IAAP,CAAarY,CAAC,IAAI,EAAN,GAAY,IAAxB;AACAsd,MAAAA,MAAM,CAACjF,IAAP,CAAcrY,CAAC,IAAI,CAAN,GAAW,IAAZ,GAAoB,IAAhC;AACAsd,MAAAA,MAAM,CAACjF,IAAP,CAAarY,CAAC,GAAG,IAAL,GAAa,IAAzB;AACH;AACJ;;AACD,SAAOod,QAAQ,CAACE,MAAD,CAAf;AACH;;AACD,SAASkQ,aAAT,CAAuBC,UAAvB,EAAmC;AAC/B,SAAOA,UAAU,CAACzP,GAAX,CAAgB0P,SAAD,IAAe;AACjC,QAAIA,SAAS,IAAI,MAAjB,EAAyB;AACrB,aAAOnV,MAAM,CAACC,YAAP,CAAoBkV,SAApB,CAAP;AACH;;AACDA,IAAAA,SAAS,IAAI,OAAb;AACA,WAAOnV,MAAM,CAACC,YAAP,CAAqB,CAAEkV,SAAS,IAAI,EAAd,GAAoB,KAArB,IAA8B,MAAnD,EAA6D,CAACA,SAAS,GAAG,KAAb,IAAsB,MAAnF,CAAP;AACH,GANM,EAMJpV,IANI,CAMC,EAND,CAAP;AAOH;;AACD,SAASqV,YAAT,CAAsBjO,KAAtB,EAA6BqN,OAA7B,EAAsC;AAClC,SAAOS,aAAa,CAACV,iBAAiB,CAACpN,KAAD,EAAQqN,OAAR,CAAlB,CAApB;AACH;;AACD,SAASa,gBAAT,CAA0BrtB,GAA1B,EAA+B4X,IAAI,GAAG+T,wBAAwB,CAACnV,OAA/D,EAAwE;AACpE,SAAO+V,iBAAiB,CAACQ,WAAW,CAAC/sB,GAAD,EAAM4X,IAAN,CAAZ,CAAxB;AACH;;AAGD,SAAS0V,MAAT,CAAgB/O,IAAhB,EAAsB;AAClB,MAAKA,IAAI,CAAC9gB,MAAL,GAAc,CAAf,KAAsB,CAA1B,EAA6B;AACzB,UAAM,IAAIf,KAAJ,CAAU,UAAV,CAAN;AACH;;AACD,MAAIqgB,MAAM,GAAG,EAAb;;AACA,OAAK,IAAI9d,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsf,IAAI,CAAC9gB,MAAzB,EAAiCwB,CAAC,IAAI,CAAtC,EAAyC;AACrC8d,IAAAA,MAAM,CAACjF,IAAP,CAAYmF,QAAQ,CAACsB,IAAI,CAACpB,SAAL,CAAele,CAAf,EAAkBA,CAAC,GAAG,CAAtB,CAAD,EAA2B,EAA3B,CAApB;AACH;;AACD,SAAO8d,MAAP;AACH;;AACD,SAASwQ,WAAT,CAAqBhP,IAArB,EAA2BiP,IAA3B,EAAiC;AAC7B,MAAI,CAACA,IAAL,EAAW;AACPA,IAAAA,IAAI,GAAG,UAAU9U,KAAV,EAAiB;AAAE,aAAO,CAACuE,QAAQ,CAACvE,KAAD,EAAQ,EAAR,CAAT,CAAP;AAA+B,KAAzD;AACH;;AACD,MAAIpT,EAAE,GAAG,CAAT;AACA,MAAIyX,MAAM,GAAG,EAAb;AACAwB,EAAAA,IAAI,CAACxJ,KAAL,CAAW,GAAX,EAAgB4C,OAAhB,CAAyBqV,IAAD,IAAU;AAC9B,QAAIS,KAAK,GAAGT,IAAI,CAACjY,KAAL,CAAW,GAAX,CAAZ;AACAzP,IAAAA,EAAE,IAAI2X,QAAQ,CAACwQ,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAd;AACA1Q,IAAAA,MAAM,CAACzX,EAAD,CAAN,GAAakoB,IAAI,CAACC,KAAK,CAAC,CAAD,CAAN,CAAjB;AACH,GAJD;AAKA,SAAO1Q,MAAP;AACH;;AACD,SAAS2Q,gBAAT,CAA0BnP,IAA1B,EAAgC;AAC5B,MAAItb,EAAE,GAAG,CAAT;AACA,SAAOsb,IAAI,CAACxJ,KAAL,CAAW,GAAX,EAAgB0I,GAAhB,CAAqBb,CAAD,IAAO;AAC9B,QAAI6Q,KAAK,GAAG7Q,CAAC,CAAC7H,KAAF,CAAQ,GAAR,CAAZ;;AACA,QAAI0Y,KAAK,CAAChwB,MAAN,KAAiB,CAArB,EAAwB;AACpBgwB,MAAAA,KAAK,CAAC,CAAD,CAAL,GAAW,GAAX;AACH,KAFD,MAGK,IAAIA,KAAK,CAAC,CAAD,CAAL,KAAa,EAAjB,EAAqB;AACtBA,MAAAA,KAAK,CAAC,CAAD,CAAL,GAAW,GAAX;AACH;;AACD,QAAInoB,EAAE,GAAGrC,EAAE,GAAGga,QAAQ,CAACwQ,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAtB;AACAxqB,IAAAA,EAAE,GAAGga,QAAQ,CAACwQ,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAb;AACA,WAAO;AAAEhiB,MAAAA,CAAC,EAAEnG,EAAL;AAASuJ,MAAAA,CAAC,EAAE5L;AAAZ,KAAP;AACH,GAXM,CAAP;AAYH;;AACD,SAAS0qB,QAAT,CAAkBjV,KAAlB,EAAyBkV,MAAzB,EAAiC;AAC7B,MAAItoB,EAAE,GAAG,CAAT;;AACA,OAAK,IAAIrG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2uB,MAAM,CAACnwB,MAA3B,EAAmCwB,CAAC,EAApC,EAAwC;AACpC,QAAI4uB,KAAK,GAAGD,MAAM,CAAC3uB,CAAD,CAAlB;AACAqG,IAAAA,EAAE,IAAIuoB,KAAK,CAACpiB,CAAZ;;AACA,QAAIiN,KAAK,IAAIpT,EAAT,IAAeoT,KAAK,IAAIpT,EAAE,GAAGuoB,KAAK,CAAChf,CAAnC,IAAyC,CAAC6J,KAAK,GAAGpT,EAAT,KAAgBuoB,KAAK,CAACC,CAAN,IAAW,CAA3B,CAAD,KAAoC,CAAhF,EAAmF;AAC/E,UAAID,KAAK,CAAC3zB,CAAN,IAAW2zB,KAAK,CAAC3zB,CAAN,CAAQ6zB,OAAR,CAAgBrV,KAAK,GAAGpT,EAAxB,MAAgC,CAAC,CAAhD,EAAmD;AAC/C;AACH;;AACD,aAAOuoB,KAAP;AACH;AACJ;;AACD,SAAO,IAAP;AACH;;AACD,MAAMG,gBAAgB,GAAGN,gBAAgB,CAAC,87CAAD,CAAzC,C,CACA;;AACA,MAAMO,eAAe,GAAG,sDAAsDlZ,KAAtD,CAA4D,GAA5D,EAAiE0I,GAAjE,CAAsEb,CAAD,IAAOK,QAAQ,CAACL,CAAD,EAAI,EAAJ,CAApF,CAAxB;AACA,MAAMsR,gBAAgB,GAAG,CACrB;AAAErf,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,EAAZ;AAAgBV,EAAAA,CAAC,EAAE;AAAnB,CADqB,EAErB;AAAEoD,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,EAAZ;AAAgBjS,EAAAA,CAAC,EAAE,CAAC,EAAD,CAAnB;AAAyBuR,EAAAA,CAAC,EAAE;AAA5B,CAFqB,EAGrB;AAAEoD,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAZ;AAAejS,EAAAA,CAAC,EAAE,CAAC,EAAD,CAAlB;AAAwBuR,EAAAA,CAAC,EAAE,EAA3B;AAA+BqiB,EAAAA,CAAC,EAAE;AAAlC,CAHqB,EAIrB;AAAEjf,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAZ;AAAeV,EAAAA,CAAC,EAAE,EAAlB;AAAsBqiB,EAAAA,CAAC,EAAE;AAAzB,CAJqB,EAKrB;AAAEjf,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAZ;AAAeV,EAAAA,CAAC,EAAE,EAAlB;AAAsBqiB,EAAAA,CAAC,EAAE;AAAzB,CALqB,EAMrB;AAAEjf,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAZ;AAAejS,EAAAA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAlB;AAA6BuR,EAAAA,CAAC,EAAE,EAAhC;AAAoCqiB,EAAAA,CAAC,EAAE;AAAvC,CANqB,EAOrB;AAAEjf,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAZ;AAAeV,EAAAA,CAAC,EAAE,EAAlB;AAAsBqiB,EAAAA,CAAC,EAAE;AAAzB,CAPqB,EAQrB;AAAEjf,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAZ;AAAejS,EAAAA,CAAC,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAAlB;AAAgCuR,EAAAA,CAAC,EAAE,EAAnC;AAAuCqiB,EAAAA,CAAC,EAAE;AAA1C,CARqB,EASrB;AAAEjf,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,EAAZ;AAAgBjS,EAAAA,CAAC,EAAE,CAAC,EAAD,CAAnB;AAAyBuR,EAAAA,CAAC,EAAE;AAA5B,CATqB,EAUrB;AAAEoD,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAZ;AAAeV,EAAAA,CAAC,EAAE,EAAlB;AAAsBqiB,EAAAA,CAAC,EAAE;AAAzB,CAVqB,EAWrB;AAAEjf,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,EAAZ;AAAgBV,EAAAA,CAAC,EAAE;AAAnB,CAXqB,EAYrB;AAAEoD,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,EAAZ;AAAgBV,EAAAA,CAAC,EAAE;AAAnB,CAZqB,EAarB;AAAEoD,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAZ;AAAeV,EAAAA,CAAC,EAAE,EAAlB;AAAsBqiB,EAAAA,CAAC,EAAE;AAAzB,CAbqB,EAcrB;AAAEjf,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAZ;AAAeV,EAAAA,CAAC,EAAE,EAAlB;AAAsBqiB,EAAAA,CAAC,EAAE;AAAzB,CAdqB,EAerB;AAAEjf,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAZ;AAAeV,EAAAA,CAAC,EAAE,EAAlB;AAAsBqiB,EAAAA,CAAC,EAAE;AAAzB,CAfqB,EAgBrB;AAAEjf,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAZ;AAAejS,EAAAA,CAAC,EAAE,CAAC,EAAD,CAAlB;AAAwBuR,EAAAA,CAAC,EAAE,EAA3B;AAA+BqiB,EAAAA,CAAC,EAAE;AAAlC,CAhBqB,EAiBrB;AAAEjf,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAZ;AAAeV,EAAAA,CAAC,EAAE,EAAlB;AAAsBqiB,EAAAA,CAAC,EAAE;AAAzB,CAjBqB,EAkBrB;AAAEjf,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,EAAZ;AAAgBV,EAAAA,CAAC,EAAE;AAAnB,CAlBqB,EAmBrB;AAAEoD,EAAAA,CAAC,EAAE,GAAL;AAAU1C,EAAAA,CAAC,EAAE,CAAb;AAAgBV,EAAAA,CAAC,EAAE,IAAnB;AAAyBqiB,EAAAA,CAAC,EAAE;AAA5B,CAnBqB,EAoBrB;AAAEjf,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAZ;AAAeV,EAAAA,CAAC,EAAE,GAAlB;AAAuBqiB,EAAAA,CAAC,EAAE;AAA1B,CApBqB,EAqBrB;AAAEjf,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,EAAZ;AAAgBV,EAAAA,CAAC,EAAE;AAAnB,CArBqB,EAsBrB;AAAEoD,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,EAAZ;AAAgBV,EAAAA,CAAC,EAAE;AAAnB,CAtBqB,EAuBrB;AAAEoD,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,EAAZ;AAAgBV,EAAAA,CAAC,EAAE;AAAnB,CAvBqB,EAwBrB;AAAEoD,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,EAAZ;AAAgBV,EAAAA,CAAC,EAAE;AAAnB,CAxBqB,EAyBrB;AAAEoD,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAC,MAAb;AAAqBV,EAAAA,CAAC,EAAE;AAAxB,CAzBqB,EA0BrB;AAAEoD,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAC,MAAb;AAAqBV,EAAAA,CAAC,EAAE;AAAxB,CA1BqB,EA2BrB;AAAEoD,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAC,MAAb;AAAqBV,EAAAA,CAAC,EAAE;AAAxB,CA3BqB,EA4BrB;AAAEoD,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAC,MAAb;AAAqBjS,EAAAA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,CAAxB;AAAqDuR,EAAAA,CAAC,EAAE;AAAxD,CA5BqB,EA6BrB;AAAEoD,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAC,MAAb;AAAqBV,EAAAA,CAAC,EAAE;AAAxB,CA7BqB,EA8BrB;AAAEoD,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAC,MAAb;AAAqBjS,EAAAA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,CAAxB;AAAuCuR,EAAAA,CAAC,EAAE;AAA1C,CA9BqB,EA+BrB;AAAEoD,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAC,MAAb;AAAqBjS,EAAAA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAe,EAAf,EAAmB,EAAnB,CAAxB;AAAgDuR,EAAAA,CAAC,EAAE;AAAnD,CA/BqB,EAgCrB;AAAEoD,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAC,MAAb;AAAqBV,EAAAA,CAAC,EAAE;AAAxB,CAhCqB,EAiCrB;AAAEoD,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAC,MAAb;AAAqBV,EAAAA,CAAC,EAAE;AAAxB,CAjCqB,EAkCrB;AAAEoD,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAC,MAAb;AAAqBV,EAAAA,CAAC,EAAE;AAAxB,CAlCqB,EAmCrB;AAAEoD,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAC,MAAb;AAAqBV,EAAAA,CAAC,EAAE;AAAxB,CAnCqB,EAoCrB;AAAEoD,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAC,MAAb;AAAqBV,EAAAA,CAAC,EAAE;AAAxB,CApCqB,EAqCrB;AAAEoD,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAC,MAAb;AAAqBV,EAAAA,CAAC,EAAE;AAAxB,CArCqB,EAsCrB;AAAEoD,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAC,MAAb;AAAqBjS,EAAAA,CAAC,EAAE,CAAC,EAAD,CAAxB;AAA8BuR,EAAAA,CAAC,EAAE;AAAjC,CAtCqB,EAuCrB;AAAEoD,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAC,MAAb;AAAqBjS,EAAAA,CAAC,EAAE,CAAC,EAAD,CAAxB;AAA8BuR,EAAAA,CAAC,EAAE;AAAjC,CAvCqB,EAwCrB;AAAEoD,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAC,MAAb;AAAqBjS,EAAAA,CAAC,EAAE,CAAC,EAAD,CAAxB;AAA8BuR,EAAAA,CAAC,EAAE;AAAjC,CAxCqB,EAyCrB;AAAEoD,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAC,MAAb;AAAqBjS,EAAAA,CAAC,EAAE,CAAC,EAAD,CAAxB;AAA8BuR,EAAAA,CAAC,EAAE;AAAjC,CAzCqB,EA0CrB;AAAEoD,EAAAA,CAAC,EAAE,EAAL;AAAS1C,EAAAA,CAAC,EAAE,CAAC,MAAb;AAAqBjS,EAAAA,CAAC,EAAE,CAAC,EAAD,CAAxB;AAA8BuR,EAAAA,CAAC,EAAE;AAAjC,CA1CqB,CAAzB;AA4CA,MAAM0iB,iBAAiB,GAAGZ,WAAW,CAAC,ufAAD,CAArC;AACA,MAAMa,iBAAiB,GAAGb,WAAW,CAAC,wdAAD,CAArC;AACA,MAAMc,iBAAiB,GAAGd,WAAW,CAAC,w3DAAD,EAA23DD,MAA33D,CAArC;AACA,MAAMgB,cAAc,GAAGZ,gBAAgB,CAAC,yLAAD,CAAvC;;AACA,SAASa,OAAT,CAAiBC,MAAjB,EAAyB;AACrB,SAAOA,MAAM,CAAC7Q,MAAP,CAAc,CAACC,KAAD,EAAQlF,KAAR,KAAkB;AACnCA,IAAAA,KAAK,CAACf,OAAN,CAAee,KAAD,IAAW;AAAEkF,MAAAA,KAAK,CAAC9F,IAAN,CAAWY,KAAX;AAAoB,KAA/C;AACA,WAAOkF,KAAP;AACH,GAHM,EAGJ,EAHI,CAAP;AAIH;;AACD,SAAS6Q,gBAAT,CAA0BC,SAA1B,EAAqC;AACjC,SAAO,CAAC,CAACf,QAAQ,CAACe,SAAD,EAAYV,gBAAZ,CAAjB;AACH;;AACD,SAASW,gBAAT,CAA0BD,SAA1B,EAAqC;AACjC,MAAIb,KAAK,GAAGF,QAAQ,CAACe,SAAD,EAAYR,gBAAZ,CAApB;;AACA,MAAIL,KAAJ,EAAW;AACP,WAAO,CAACa,SAAS,GAAGb,KAAK,CAAC1hB,CAAnB,CAAP;AACH;;AACD,MAAIyiB,KAAK,GAAGT,iBAAiB,CAACO,SAAD,CAA7B;;AACA,MAAIE,KAAJ,EAAW;AACP,WAAOA,KAAP;AACH;;AACD,MAAIhf,KAAK,GAAGwe,iBAAiB,CAACM,SAAD,CAA7B;;AACA,MAAI9e,KAAJ,EAAW;AACP,WAAO,CAAC8e,SAAS,GAAG9e,KAAK,CAAC,CAAD,CAAlB,CAAP;AACH;;AACD,MAAIif,OAAO,GAAGR,iBAAiB,CAACK,SAAD,CAA/B;;AACA,MAAIG,OAAJ,EAAa;AACT,WAAOA,OAAP;AACH;;AACD,SAAO,IAAP;AACH;;AACD,SAASC,eAAT,CAAyBJ,SAAzB,EAAoC;AAChC,SAAO,CAAC,CAACf,QAAQ,CAACe,SAAD,EAAYJ,cAAZ,CAAjB;AACH;;AACD,SAASS,QAAT,CAAkBrW,KAAlB,EAAyB;AACrB;AACA;AACA;AACA,MAAIA,KAAK,CAACwF,KAAN,CAAY,eAAZ,KAAgCxF,KAAK,CAACjb,MAAN,IAAgB,EAApD,EAAwD;AACpD,WAAOib,KAAK,CAACM,WAAN,EAAP;AACH,GANoB,CAOrB;;;AACA,MAAI4V,KAAK,GAAGvB,gBAAgB,CAAC3U,KAAD,CAA5B;AACAkW,EAAAA,KAAK,GAAGL,OAAO,CAACK,KAAK,CAACnR,GAAN,CAAW9D,IAAD,IAAU;AAChC;AACA,QAAIsU,eAAe,CAACF,OAAhB,CAAwBpU,IAAxB,KAAiC,CAArC,EAAwC;AACpC,aAAO,EAAP;AACH;;AACD,QAAIA,IAAI,IAAI,MAAR,IAAkBA,IAAI,IAAI,MAA9B,EAAsC;AAClC,aAAO,EAAP;AACH,KAP+B,CAQhC;;;AACA,QAAIqV,YAAY,GAAGL,gBAAgB,CAAChV,IAAD,CAAnC;;AACA,QAAIqV,YAAJ,EAAkB;AACd,aAAOA,YAAP;AACH,KAZ+B,CAahC;;;AACA,WAAO,CAACrV,IAAD,CAAP;AACH,GAfe,CAAD,CAAf,CATqB,CAyBrB;;AACAiV,EAAAA,KAAK,GAAGvB,gBAAgB,CAACJ,aAAa,CAAC2B,KAAD,CAAd,EAAuBjD,wBAAwB,CAACsD,IAAhD,CAAxB,CA1BqB,CA2BrB;;AACAL,EAAAA,KAAK,CAACjX,OAAN,CAAegC,IAAD,IAAU;AACpB,QAAImV,eAAe,CAACnV,IAAD,CAAnB,EAA2B;AACvB,YAAM,IAAIjd,KAAJ,CAAU,gCAAV,CAAN;AACH;AACJ,GAJD,EA5BqB,CAiCrB;;AACAkyB,EAAAA,KAAK,CAACjX,OAAN,CAAegC,IAAD,IAAU;AACpB,QAAI8U,gBAAgB,CAAC9U,IAAD,CAApB,EAA4B;AACxB,YAAM,IAAIjd,KAAJ,CAAU,gCAAV,CAAN;AACH;AACJ,GAJD,EAlCqB,CAuCrB;;AACA,MAAI1B,IAAI,GAAGiyB,aAAa,CAAC2B,KAAD,CAAxB,CAxCqB,CAyCrB;;;AACA,MAAI5zB,IAAI,CAACmiB,SAAL,CAAe,CAAf,EAAkB,CAAlB,MAAyB,GAAzB,IAAgCniB,IAAI,CAACmiB,SAAL,CAAe,CAAf,EAAkB,CAAlB,MAAyB,IAAzD,IAAiEniB,IAAI,CAACmiB,SAAL,CAAeniB,IAAI,CAACyC,MAAL,GAAc,CAA7B,MAAoC,GAAzG,EAA8G;AAC1G,UAAM,IAAIf,KAAJ,CAAU,gBAAV,CAAN;AACH,GA5CoB,CA6CrB;;;AACA,MAAI1B,IAAI,CAACyC,MAAL,GAAc,EAAlB,EAAsB;AAClB,UAAM,IAAIf,KAAJ,CAAU,UAAV,CAAN;AACH;;AACD,SAAO1B,IAAP;AACH;;AAGD,SAASk0B,EAAT,CAAYC,IAAZ,EAAkB;AACd,SAAOlG,SAAS,CAAC8D,WAAW,CAACoC,IAAD,CAAZ,CAAhB;AACH;;AAGD,MAAMC,SAAS,GAAG,YAAlB;AAGA,MAAMC,QAAQ,GAAG,IAAI/W,MAAJ,CAAW8W,SAAX,CAAjB;AACA,MAAME,KAAK,GAAG,IAAI9S,UAAJ,CAAe,EAAf,CAAd;AACA8S,KAAK,CAACC,IAAN,CAAW,CAAX;AACA,MAAMC,SAAS,GAAG,IAAIC,MAAJ,CAAW,qBAAX,CAAlB;;AACA,SAASC,QAAT,CAAkB10B,IAAlB,EAAwB;AACpB;AACA,MAAI,OAAQA,IAAR,KAAkB,QAAtB,EAAgC;AAC5Bq0B,IAAAA,QAAQ,CAACpW,kBAAT,CAA4B,gCAA5B,EAA8D,MAA9D,EAAsEje,IAAtE;AACH;;AACD,MAAIwb,OAAO,GAAGxb,IAAd;AACA,MAAI+hB,MAAM,GAAGuS,KAAb;;AACA,SAAO9Y,OAAO,CAAC/Y,MAAf,EAAuB;AACnB,UAAMkyB,SAAS,GAAGnZ,OAAO,CAAC0H,KAAR,CAAcsR,SAAd,CAAlB;;AACA,QAAIG,SAAS,IAAI,IAAb,IAAqBA,SAAS,CAAC,CAAD,CAAT,KAAiB,EAA1C,EAA8C;AAC1CN,MAAAA,QAAQ,CAACpW,kBAAT,CAA4B,wCAA5B,EAAsE,MAAtE,EAA8Eje,IAA9E;AACH;;AACD,UAAM40B,KAAK,GAAG7C,WAAW,CAACgC,QAAQ,CAACY,SAAS,CAAC,CAAD,CAAV,CAAT,CAAzB;AACA5S,IAAAA,MAAM,GAAGkM,SAAS,CAAC3L,MAAM,CAAC,CAACP,MAAD,EAASkM,SAAS,CAAC2G,KAAD,CAAlB,CAAD,CAAP,CAAlB;AACApZ,IAAAA,OAAO,GAAGmZ,SAAS,CAAC,CAAD,CAAT,IAAgB,EAA1B;AACH;;AACD,SAAOvR,OAAO,CAACrB,MAAD,CAAd;AACH;;AAGD,IAAI8S,WAAW,GAAI5a,SAAS,IAAIA,SAAS,CAAC4L,SAAxB,IAAsC,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACjG,WAASC,KAAT,CAAexI,KAAf,EAAsB;AAAE,WAAOA,KAAK,YAAYsI,CAAjB,GAAqBtI,KAArB,GAA6B,IAAIsI,CAAJ,CAAM,UAAUG,OAAV,EAAmB;AAAEA,MAAAA,OAAO,CAACzI,KAAD,CAAP;AAAiB,KAA5C,CAApC;AAAoF;;AAC5G,SAAO,KAAKsI,CAAC,KAAKA,CAAC,GAAGI,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;AACvD,aAASC,SAAT,CAAmB5I,KAAnB,EAA0B;AAAE,UAAI;AAAE6I,QAAAA,IAAI,CAACN,SAAS,CAACxL,IAAV,CAAeiD,KAAf,CAAD,CAAJ;AAA8B,OAApC,CAAqC,OAAOxe,CAAP,EAAU;AAAEmnB,QAAAA,MAAM,CAACnnB,CAAD,CAAN;AAAY;AAAE;;AAC3F,aAASsnB,QAAT,CAAkB9I,KAAlB,EAAyB;AAAE,UAAI;AAAE6I,QAAAA,IAAI,CAACN,SAAS,CAAC,OAAD,CAAT,CAAmBvI,KAAnB,CAAD,CAAJ;AAAkC,OAAxC,CAAyC,OAAOxe,CAAP,EAAU;AAAEmnB,QAAAA,MAAM,CAACnnB,CAAD,CAAN;AAAY;AAAE;;AAC9F,aAASqnB,IAAT,CAAcxE,MAAd,EAAsB;AAAEA,MAAAA,MAAM,CAAC0E,IAAP,GAAcN,OAAO,CAACpE,MAAM,CAACrE,KAAR,CAArB,GAAsCwI,KAAK,CAACnE,MAAM,CAACrE,KAAR,CAAL,CAAoBgJ,IAApB,CAAyBJ,SAAzB,EAAoCE,QAApC,CAAtC;AAAsF;;AAC9GD,IAAAA,IAAI,CAAC,CAACN,SAAS,GAAGA,SAAS,CAAC7H,KAAV,CAAgB0H,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDtL,IAAzD,EAAD,CAAJ;AACH,GALM,CAAP;AAMH,CARD;;AASA,MAAMqa,QAAQ,GAAG,IAAIxX,MAAJ,CAAW8W,SAAX,CAAjB;AACA,MAAM9tB,OAAO,GAAG,IAAIkb,UAAJ,CAAe,EAAf,CAAhB;AACAlb,OAAO,CAACiuB,IAAR,CAAa,CAAb;AACA,MAAMQ,WAAW,GAAGrQ,SAAS,CAAC3D,IAAV,CAAe,CAAC,CAAhB,CAApB;AACA,MAAMiU,MAAM,GAAGtQ,SAAS,CAAC3D,IAAV,CAAe,CAAf,CAAf;AACA,MAAMkU,GAAG,GAAGvQ,SAAS,CAAC3D,IAAV,CAAe,CAAf,CAAZ;AACA,MAAMmU,UAAU,GAAGxQ,SAAS,CAAC3D,IAAV,CAAe,oEAAf,CAAnB;;AACA,SAASoU,WAAT,CAAqBzX,KAArB,EAA4B;AACxB,QAAMyG,KAAK,GAAGtC,QAAQ,CAACnE,KAAD,CAAtB;AACA,QAAM0X,SAAS,GAAGjR,KAAK,CAAC1hB,MAAN,GAAe,EAAjC;;AACA,MAAI2yB,SAAJ,EAAe;AACX,WAAO1R,SAAS,CAAC,CAACS,KAAD,EAAQ7d,OAAO,CAACgb,KAAR,CAAc8T,SAAd,CAAR,CAAD,CAAhB;AACH;;AACD,SAAOhS,OAAO,CAACe,KAAD,CAAd;AACH;;AACD,MAAMkR,OAAO,GAAGvR,UAAU,CAACmR,GAAG,CAAC9T,WAAJ,EAAD,EAAoB,EAApB,CAA1B;AACA,MAAMmU,QAAQ,GAAGxR,UAAU,CAACkR,MAAM,CAAC7T,WAAP,EAAD,EAAuB,EAAvB,CAA3B;AACA,MAAMoU,gBAAgB,GAAG;AACrBv1B,EAAAA,IAAI,EAAE,QADe;AAErB+b,EAAAA,OAAO,EAAE,QAFY;AAGrByZ,EAAAA,OAAO,EAAE,SAHY;AAIrBC,EAAAA,iBAAiB,EAAE,SAJE;AAKrBC,EAAAA,IAAI,EAAE;AALe,CAAzB;AAOA,MAAMC,gBAAgB,GAAG,CACrB,MADqB,EACb,SADa,EACF,SADE,EACS,mBADT,EAC8B,MAD9B,CAAzB;;AAGA,SAASC,WAAT,CAAqB3W,GAArB,EAA0B;AACtB,SAAO,UAAUvB,KAAV,EAAiB;AACpB,QAAI,OAAQA,KAAR,KAAmB,QAAvB,EAAiC;AAC7BoX,MAAAA,QAAQ,CAAC7W,kBAAT,CAA6B,4BAA2BiB,IAAI,CAACC,SAAL,CAAeF,GAAf,CAAoB,EAA5E,EAAgF,UAASA,GAAI,EAA7F,EAAgGvB,KAAhG;AACH;;AACD,WAAOA,KAAP;AACH,GALD;AAMH;;AACD,MAAMmY,YAAY,GAAG;AACjB71B,EAAAA,IAAI,EAAE41B,WAAW,CAAC,MAAD,CADA;AAEjB7Z,EAAAA,OAAO,EAAE6Z,WAAW,CAAC,SAAD,CAFH;AAGjBJ,EAAAA,OAAO,EAAE,UAAU9X,KAAV,EAAiB;AACtB,QAAI;AACA,aAAOgH,SAAS,CAAC3D,IAAV,CAAerD,KAAf,EAAsBja,QAAtB,EAAP;AACH,KAFD,CAGA,OAAO6Y,KAAP,EAAc,CAAG;;AACjB,WAAOwY,QAAQ,CAAC7W,kBAAT,CAA6B,oCAA7B,EAAkE,gBAAlE,EAAoFP,KAApF,CAAP;AACH,GATgB;AAUjB+X,EAAAA,iBAAiB,EAAE,UAAU/X,KAAV,EAAiB;AAChC,QAAI;AACA,aAAOwS,UAAU,CAACxS,KAAD,CAAV,CAAkBM,WAAlB,EAAP;AACH,KAFD,CAGA,OAAO1B,KAAP,EAAc,CAAG;;AACjB,WAAOwY,QAAQ,CAAC7W,kBAAT,CAA6B,0CAA7B,EAAwE,0BAAxE,EAAoGP,KAApG,CAAP;AACH,GAhBgB;AAiBjBgY,EAAAA,IAAI,EAAE,UAAUhY,KAAV,EAAiB;AACnB,QAAI;AACA,YAAMyG,KAAK,GAAGtC,QAAQ,CAACnE,KAAD,CAAtB;;AACA,UAAIyG,KAAK,CAAC1hB,MAAN,KAAiB,EAArB,EAAyB;AACrB,cAAM,IAAIf,KAAJ,CAAU,YAAV,CAAN;AACH;;AACD,aAAO0hB,OAAO,CAACe,KAAD,CAAd;AACH,KAND,CAOA,OAAO7H,KAAP,EAAc,CAAG;;AACjB,WAAOwY,QAAQ,CAAC7W,kBAAT,CAA6B,6BAA7B,EAA2D,aAA3D,EAA0EP,KAA1E,CAAP;AACH;AA3BgB,CAArB;;AA6BA,SAASoY,cAAT,CAAwBl2B,IAAxB,EAA8B;AAC1B;AACA;AACI,UAAMsjB,KAAK,GAAGtjB,IAAI,CAACsjB,KAAL,CAAW,gBAAX,CAAd;;AACA,QAAIA,KAAJ,EAAW;AACP,YAAM6S,MAAM,GAAI7S,KAAK,CAAC,CAAD,CAAL,KAAa,EAA7B;AACA,YAAM3a,KAAK,GAAG0Z,QAAQ,CAACiB,KAAK,CAAC,CAAD,CAAL,IAAY,KAAb,CAAtB;;AACA,UAAI3a,KAAK,GAAG,CAAR,KAAc,CAAd,IAAmBA,KAAK,GAAG,GAA3B,IAAmC2a,KAAK,CAAC,CAAD,CAAL,IAAYA,KAAK,CAAC,CAAD,CAAL,KAAalG,MAAM,CAACzU,KAAD,CAAtE,EAAgF;AAC5EusB,QAAAA,QAAQ,CAAC7W,kBAAT,CAA4B,uBAA5B,EAAqD,MAArD,EAA6Dre,IAA7D;AACH;;AACD,YAAMo2B,WAAW,GAAGd,UAAU,CAACphB,IAAX,CAAgBiiB,MAAM,GAAIxtB,KAAK,GAAG,CAAZ,GAAiBA,KAAvC,CAApB;AACA,YAAM0tB,WAAW,GAAGF,MAAM,GAAGC,WAAW,CAAC7rB,GAAZ,CAAgB8qB,GAAhB,EAAqB/vB,GAArB,CAAyB6vB,WAAzB,CAAH,GAA2CC,MAArE;AACA,aAAO,UAAUtX,KAAV,EAAiB;AACpB,cAAMkE,CAAC,GAAG8C,SAAS,CAAC3D,IAAV,CAAerD,KAAf,CAAV;;AACA,YAAIkE,CAAC,CAACrK,EAAF,CAAK0e,WAAL,KAAqBrU,CAAC,CAACzK,EAAF,CAAK6e,WAAL,CAAzB,EAA4C;AACxClB,UAAAA,QAAQ,CAAC7W,kBAAT,CAA6B,2BAA0Bre,IAAK,EAA5D,EAA+D,OAA/D,EAAwE8d,KAAxE;AACH;;AACD,eAAOoG,UAAU,CAAClC,CAAC,CAACtZ,MAAF,CAAS,GAAT,EAAc6Y,WAAd,EAAD,EAA8B,EAA9B,CAAjB;AACH,OAND;AAOH;AACJ,GApByB,CAqB1B;;AACA;AACI,UAAM+B,KAAK,GAAGtjB,IAAI,CAACsjB,KAAL,CAAW,cAAX,CAAd;;AACA,QAAIA,KAAJ,EAAW;AACP,YAAM3a,KAAK,GAAG0Z,QAAQ,CAACiB,KAAK,CAAC,CAAD,CAAN,CAAtB;;AACA,UAAI3a,KAAK,KAAK,CAAV,IAAeA,KAAK,GAAG,EAAvB,IAA6B2a,KAAK,CAAC,CAAD,CAAL,KAAalG,MAAM,CAACzU,KAAD,CAApD,EAA6D;AACzDusB,QAAAA,QAAQ,CAAC7W,kBAAT,CAA4B,qBAA5B,EAAmD,MAAnD,EAA2Dre,IAA3D;AACH;;AACD,aAAO,UAAU8d,KAAV,EAAiB;AACpB,cAAMyG,KAAK,GAAGtC,QAAQ,CAACnE,KAAD,CAAtB;;AACA,YAAIyG,KAAK,CAAC1hB,MAAN,KAAiB8F,KAArB,EAA4B;AACxBusB,UAAAA,QAAQ,CAAC7W,kBAAT,CAA6B,sBAAqBre,IAAK,EAAvD,EAA0D,OAA1D,EAAmE8d,KAAnE;AACH;;AACD,eAAOyX,WAAW,CAACzX,KAAD,CAAlB;AACH,OAND;AAOH;AACJ;;AACD,UAAQ9d,IAAR;AACI,SAAK,SAAL;AAAgB,aAAO,UAAU8d,KAAV,EAAiB;AACpC,eAAOoG,UAAU,CAACoM,UAAU,CAACxS,KAAD,CAAX,EAAoB,EAApB,CAAjB;AACH,OAFe;;AAGhB,SAAK,MAAL;AAAa,aAAO,UAAUA,KAAV,EAAiB;AACjC,eAAS,CAACA,KAAF,GAAW4X,QAAX,GAAsBD,OAA9B;AACH,OAFY;;AAGb,SAAK,OAAL;AAAc,aAAO,UAAU3X,KAAV,EAAiB;AAClC,eAAOuQ,SAAS,CAACvQ,KAAD,CAAhB;AACH,OAFa;;AAGd,SAAK,QAAL;AAAe,aAAO,UAAUA,KAAV,EAAiB;AACnC,eAAOwW,EAAE,CAACxW,KAAD,CAAT;AACH,OAFc;AAVnB;;AAcA,SAAO,IAAP;AACH;;AACD,SAASwY,UAAT,CAAoBl2B,IAApB,EAA0Bm2B,MAA1B,EAAkC;AAC9B,SAAQ,GAAEn2B,IAAK,IAAGm2B,MAAM,CAAC1T,GAAP,CAAW,CAAC;AAAEziB,IAAAA,IAAF;AAAQJ,IAAAA;AAAR,GAAD,KAAqBA,IAAI,GAAG,GAAP,GAAaI,IAA7C,EAAoD+c,IAApD,CAAyD,GAAzD,CAA8D,GAAhF;AACH;;AACD,MAAMqZ,gBAAN,CAAuB;AACnBn0B,EAAAA,WAAW,CAACo0B,KAAD,EAAQ;AACfzP,IAAAA,cAAc,CAAC,IAAD,EAAO,OAAP,EAAgBrJ,MAAM,CAACwH,MAAP,CAAc6C,QAAQ,CAACyO,KAAD,CAAtB,CAAhB,CAAd;AACAzP,IAAAA,cAAc,CAAC,IAAD,EAAO,eAAP,EAAwB,EAAxB,CAAd;AACAA,IAAAA,cAAc,CAAC,IAAD,EAAO,QAAP,EAAiB,EAAjB,CAAd,CAHe,CAIf;;AACA,UAAM0P,KAAK,GAAG,EAAd,CALe,CAMf;;AACA,UAAMC,OAAO,GAAG,EAAhB,CAPe,CAQf;;AACA,UAAMC,QAAQ,GAAG,EAAjB;AACAjZ,IAAAA,MAAM,CAACyB,IAAP,CAAYqX,KAAZ,EAAmB1Z,OAAnB,CAA4B/c,IAAD,IAAU;AACjC02B,MAAAA,KAAK,CAAC12B,IAAD,CAAL,GAAc,EAAd;AACA22B,MAAAA,OAAO,CAAC32B,IAAD,CAAP,GAAgB,EAAhB;AACA42B,MAAAA,QAAQ,CAAC52B,IAAD,CAAR,GAAiB,EAAjB;AACH,KAJD;;AAKA,SAAK,MAAMI,IAAX,IAAmBq2B,KAAnB,EAA0B;AACtB,YAAMI,WAAW,GAAG,EAApB;AACAJ,MAAAA,KAAK,CAACr2B,IAAD,CAAL,CAAY2c,OAAZ,CAAqB+Z,KAAD,IAAW;AAC3B;AACA,YAAID,WAAW,CAACC,KAAK,CAAC12B,IAAP,CAAf,EAA6B;AACzB80B,UAAAA,QAAQ,CAAC7W,kBAAT,CAA6B,2BAA0BiB,IAAI,CAACC,SAAL,CAAeuX,KAAK,CAAC12B,IAArB,CAA2B,OAAMkf,IAAI,CAACC,SAAL,CAAenf,IAAf,CAAqB,EAA7G,EAAgH,OAAhH,EAAyHq2B,KAAzH;AACH;;AACDI,QAAAA,WAAW,CAACC,KAAK,CAAC12B,IAAP,CAAX,GAA0B,IAA1B,CAL2B,CAM3B;;AACA,cAAM22B,QAAQ,GAAGD,KAAK,CAAC92B,IAAN,CAAWsjB,KAAX,CAAiB,qBAAjB,EAAwC,CAAxC,CAAjB;;AACA,YAAIyT,QAAQ,KAAK32B,IAAjB,EAAuB;AACnB80B,UAAAA,QAAQ,CAAC7W,kBAAT,CAA6B,8BAA6BiB,IAAI,CAACC,SAAL,CAAewX,QAAf,CAAyB,EAAnF,EAAsF,OAAtF,EAA+FN,KAA/F;AACH,SAV0B,CAW3B;;;AACA,cAAMO,OAAO,GAAGd,cAAc,CAACa,QAAD,CAA9B;;AACA,YAAIC,OAAJ,EAAa;AACT;AACH;;AACD,YAAI,CAACL,OAAO,CAACI,QAAD,CAAZ,EAAwB;AACpB7B,UAAAA,QAAQ,CAAC7W,kBAAT,CAA6B,gBAAeiB,IAAI,CAACC,SAAL,CAAewX,QAAf,CAAyB,EAArE,EAAwE,OAAxE,EAAiFN,KAAjF;AACH,SAlB0B,CAmB3B;;;AACAE,QAAAA,OAAO,CAACI,QAAD,CAAP,CAAkB7Z,IAAlB,CAAuB9c,IAAvB;AACAs2B,QAAAA,KAAK,CAACt2B,IAAD,CAAL,CAAY22B,QAAZ,IAAwB,IAAxB;AACH,OAtBD;AAuBH,KAxCc,CAyCf;;;AACA,UAAME,YAAY,GAAGtZ,MAAM,CAACyB,IAAP,CAAYuX,OAAZ,EAAqBO,MAArB,CAA6B71B,CAAD,IAAQs1B,OAAO,CAACt1B,CAAD,CAAP,CAAWwB,MAAX,KAAsB,CAA1D,CAArB;;AACA,QAAIo0B,YAAY,CAACp0B,MAAb,KAAwB,CAA5B,EAA+B;AAC3BqyB,MAAAA,QAAQ,CAAC7W,kBAAT,CAA4B,sBAA5B,EAAoD,OAApD,EAA6DoY,KAA7D;AACH,KAFD,MAGK,IAAIQ,YAAY,CAACp0B,MAAb,GAAsB,CAA1B,EAA6B;AAC9BqyB,MAAAA,QAAQ,CAAC7W,kBAAT,CAA6B,4CAA2C4Y,YAAY,CAACpU,GAAb,CAAkB3a,CAAD,IAAQoX,IAAI,CAACC,SAAL,CAAerX,CAAf,CAAzB,EAA6CiV,IAA7C,CAAkD,IAAlD,CAAwD,EAAhI,EAAmI,OAAnI,EAA4IsZ,KAA5I;AACH;;AACDzP,IAAAA,cAAc,CAAC,IAAD,EAAO,aAAP,EAAsBiQ,YAAY,CAAC,CAAD,CAAlC,CAAd,CAjDe,CAkDf;;AACA,aAASE,aAAT,CAAuBn3B,IAAvB,EAA6Bo3B,KAA7B,EAAoC;AAChC,UAAIA,KAAK,CAACp3B,IAAD,CAAT,EAAiB;AACbk1B,QAAAA,QAAQ,CAAC7W,kBAAT,CAA6B,8BAA6BiB,IAAI,CAACC,SAAL,CAAevf,IAAf,CAAqB,EAA/E,EAAkF,OAAlF,EAA2Fy2B,KAA3F;AACH;;AACDW,MAAAA,KAAK,CAACp3B,IAAD,CAAL,GAAc,IAAd;AACA2d,MAAAA,MAAM,CAACyB,IAAP,CAAYsX,KAAK,CAAC12B,IAAD,CAAjB,EAAyB+c,OAAzB,CAAkC8R,KAAD,IAAW;AACxC,YAAI,CAAC8H,OAAO,CAAC9H,KAAD,CAAZ,EAAqB;AACjB;AACH,SAHuC,CAIxC;;;AACAsI,QAAAA,aAAa,CAACtI,KAAD,EAAQuI,KAAR,CAAb,CALwC,CAMxC;;AACAzZ,QAAAA,MAAM,CAACyB,IAAP,CAAYgY,KAAZ,EAAmBra,OAAnB,CAA4Bsa,OAAD,IAAa;AACpCT,UAAAA,QAAQ,CAACS,OAAD,CAAR,CAAkBxI,KAAlB,IAA2B,IAA3B;AACH,SAFD;AAGH,OAVD;AAWA,aAAOuI,KAAK,CAACp3B,IAAD,CAAZ;AACH;;AACDm3B,IAAAA,aAAa,CAAC,KAAKG,WAAN,EAAmB,EAAnB,CAAb,CArEe,CAsEf;;AACA,SAAK,MAAMl3B,IAAX,IAAmBw2B,QAAnB,EAA6B;AACzB,YAAMW,EAAE,GAAG5Z,MAAM,CAACyB,IAAP,CAAYwX,QAAQ,CAACx2B,IAAD,CAApB,CAAX;AACAm3B,MAAAA,EAAE,CAACC,IAAH;AACA,WAAKC,MAAL,CAAYr3B,IAAZ,IAAoBk2B,UAAU,CAACl2B,IAAD,EAAOq2B,KAAK,CAACr2B,IAAD,CAAZ,CAAV,GAAgCm3B,EAAE,CAAC1U,GAAH,CAAQ3a,CAAD,IAAOouB,UAAU,CAACpuB,CAAD,EAAIuuB,KAAK,CAACvuB,CAAD,CAAT,CAAxB,EAAuCiV,IAAvC,CAA4C,EAA5C,CAApD;AACH;AACJ;;AACDua,EAAAA,UAAU,CAAC13B,IAAD,EAAO;AACb,QAAIg3B,OAAO,GAAG,KAAKW,aAAL,CAAmB33B,IAAnB,CAAd;;AACA,QAAI,CAACg3B,OAAL,EAAc;AACVA,MAAAA,OAAO,GAAG,KAAKW,aAAL,CAAmB33B,IAAnB,IAA2B,KAAK43B,WAAL,CAAiB53B,IAAjB,CAArC;AACH;;AACD,WAAOg3B,OAAP;AACH;;AACDY,EAAAA,WAAW,CAAC53B,IAAD,EAAO;AACd;AACA;AACI,YAAMg3B,OAAO,GAAGd,cAAc,CAACl2B,IAAD,CAA9B;;AACA,UAAIg3B,OAAJ,EAAa;AACT,eAAOA,OAAP;AACH;AACJ,KAPa,CAQd;;AACA,UAAM1T,KAAK,GAAGtjB,IAAI,CAACsjB,KAAL,CAAW,uBAAX,CAAd;;AACA,QAAIA,KAAJ,EAAW;AACP,YAAM+T,OAAO,GAAG/T,KAAK,CAAC,CAAD,CAArB;AACA,YAAMuU,UAAU,GAAG,KAAKH,UAAL,CAAgBL,OAAhB,CAAnB;AACA,YAAMx0B,MAAM,GAAGwf,QAAQ,CAACiB,KAAK,CAAC,CAAD,CAAN,CAAvB;AACA,aAAQxF,KAAD,IAAW;AACd,YAAIjb,MAAM,IAAI,CAAV,IAAeib,KAAK,CAACjb,MAAN,KAAiBA,MAApC,EAA4C;AACxCqyB,UAAAA,QAAQ,CAAC7W,kBAAT,CAA4B,yDAA5B,EAAuF,OAAvF,EAAgGP,KAAhG;AACH;;AACD,YAAIqE,MAAM,GAAGrE,KAAK,CAAC+E,GAAN,CAAUgV,UAAV,CAAb;;AACA,YAAI,KAAKJ,MAAL,CAAYJ,OAAZ,CAAJ,EAA0B;AACtBlV,UAAAA,MAAM,GAAGA,MAAM,CAACU,GAAP,CAAWwL,SAAX,CAAT;AACH;;AACD,eAAOA,SAAS,CAACvK,SAAS,CAAC3B,MAAD,CAAV,CAAhB;AACH,OATD;AAUH,KAxBa,CAyBd;;;AACA,UAAMoU,MAAM,GAAG,KAAKE,KAAL,CAAWz2B,IAAX,CAAf;;AACA,QAAIu2B,MAAJ,EAAY;AACR,YAAMuB,WAAW,GAAGxD,EAAE,CAAC,KAAKmD,MAAL,CAAYz3B,IAAZ,CAAD,CAAtB;AACA,aAAQ8d,KAAD,IAAW;AACd,cAAM8V,MAAM,GAAG2C,MAAM,CAAC1T,GAAP,CAAW,CAAC;AAAEziB,UAAAA,IAAF;AAAQJ,UAAAA;AAAR,SAAD,KAAoB;AAC1C,gBAAMmiB,MAAM,GAAG,KAAKuV,UAAL,CAAgB13B,IAAhB,EAAsB8d,KAAK,CAAC1d,IAAD,CAA3B,CAAf;;AACA,cAAI,KAAKq3B,MAAL,CAAYz3B,IAAZ,CAAJ,EAAuB;AACnB,mBAAOquB,SAAS,CAAClM,MAAD,CAAhB;AACH;;AACD,iBAAOA,MAAP;AACH,SANc,CAAf;AAOAyR,QAAAA,MAAM,CAACxR,OAAP,CAAe0V,WAAf;AACA,eAAOhU,SAAS,CAAC8P,MAAD,CAAhB;AACH,OAVD;AAWH;;AACD,WAAOsB,QAAQ,CAAC7W,kBAAT,CAA6B,iBAAgBre,IAAK,EAAlD,EAAqD,MAArD,EAA6DA,IAA7D,CAAP;AACH;;AACDs2B,EAAAA,UAAU,CAACl2B,IAAD,EAAO;AACb,UAAM+hB,MAAM,GAAG,KAAKsV,MAAL,CAAYr3B,IAAZ,CAAf;;AACA,QAAI,CAAC+hB,MAAL,EAAa;AACT+S,MAAAA,QAAQ,CAAC7W,kBAAT,CAA6B,iBAAgBiB,IAAI,CAACC,SAAL,CAAenf,IAAf,CAAqB,EAAlE,EAAqE,MAArE,EAA6EA,IAA7E;AACH;;AACD,WAAO+hB,MAAP;AACH;;AACD4V,EAAAA,UAAU,CAAC/3B,IAAD,EAAO8d,KAAP,EAAc;AACpB,WAAO,KAAK4Z,UAAL,CAAgB13B,IAAhB,EAAsB8d,KAAtB,CAAP;AACH;;AACDka,EAAAA,UAAU,CAAC53B,IAAD,EAAO0d,KAAP,EAAc;AACpB,WAAOuQ,SAAS,CAAC,KAAK0J,UAAL,CAAgB33B,IAAhB,EAAsB0d,KAAtB,CAAD,CAAhB;AACH;;AACDgR,EAAAA,MAAM,CAAChR,KAAD,EAAQ;AACV,WAAO,KAAKia,UAAL,CAAgB,KAAKT,WAArB,EAAkCxZ,KAAlC,CAAP;AACH;;AACDma,EAAAA,IAAI,CAACna,KAAD,EAAQ;AACR,WAAO,KAAKka,UAAL,CAAgB,KAAKV,WAArB,EAAkCxZ,KAAlC,CAAP;AACH;;AACDoa,EAAAA,MAAM,CAACl4B,IAAD,EAAO8d,KAAP,EAAcqa,QAAd,EAAwB;AAC1B;AACA;AACI,YAAMnB,OAAO,GAAGd,cAAc,CAACl2B,IAAD,CAA9B;;AACA,UAAIg3B,OAAJ,EAAa;AACT,eAAOmB,QAAQ,CAACn4B,IAAD,EAAO8d,KAAP,CAAf;AACH;AACJ,KAPyB,CAQ1B;;AACA,UAAMwF,KAAK,GAAGtjB,IAAI,CAACsjB,KAAL,CAAW,uBAAX,CAAd;;AACA,QAAIA,KAAJ,EAAW;AACP,YAAM+T,OAAO,GAAG/T,KAAK,CAAC,CAAD,CAArB;AACA,YAAMzgB,MAAM,GAAGwf,QAAQ,CAACiB,KAAK,CAAC,CAAD,CAAN,CAAvB;;AACA,UAAIzgB,MAAM,IAAI,CAAV,IAAeib,KAAK,CAACjb,MAAN,KAAiBA,MAApC,EAA4C;AACxCqyB,QAAAA,QAAQ,CAAC7W,kBAAT,CAA4B,yDAA5B,EAAuF,OAAvF,EAAgGP,KAAhG;AACH;;AACD,aAAOA,KAAK,CAAC+E,GAAN,CAAWb,CAAD,IAAO,KAAKkW,MAAL,CAAYb,OAAZ,EAAqBrV,CAArB,EAAwBmW,QAAxB,CAAjB,CAAP;AACH,KAjByB,CAkB1B;;;AACA,UAAM5B,MAAM,GAAG,KAAKE,KAAL,CAAWz2B,IAAX,CAAf;;AACA,QAAIu2B,MAAJ,EAAY;AACR,aAAOA,MAAM,CAACxT,MAAP,CAAc,CAACC,KAAD,EAAQ;AAAE5iB,QAAAA,IAAF;AAAQJ,QAAAA;AAAR,OAAR,KAA2B;AAC5CgjB,QAAAA,KAAK,CAAC5iB,IAAD,CAAL,GAAc,KAAK83B,MAAL,CAAYl4B,IAAZ,EAAkB8d,KAAK,CAAC1d,IAAD,CAAvB,EAA+B+3B,QAA/B,CAAd;AACA,eAAOnV,KAAP;AACH,OAHM,EAGJ,EAHI,CAAP;AAIH;;AACD,WAAOkS,QAAQ,CAAC7W,kBAAT,CAA6B,iBAAgBre,IAAK,EAAlD,EAAqD,MAArD,EAA6DA,IAA7D,CAAP;AACH;;AACDo4B,EAAAA,KAAK,CAACta,KAAD,EAAQqa,QAAR,EAAkB;AACnB,WAAO,KAAKD,MAAL,CAAY,KAAKZ,WAAjB,EAA8BxZ,KAA9B,EAAqCqa,QAArC,CAAP;AACH;;AACU,SAAJhX,IAAI,CAACsV,KAAD,EAAQ;AACf,WAAO,IAAID,gBAAJ,CAAqBC,KAArB,CAAP;AACH;;AACoB,SAAd4B,cAAc,CAAC5B,KAAD,EAAQ;AACzB,WAAOD,gBAAgB,CAACrV,IAAjB,CAAsBsV,KAAtB,EAA6Ba,WAApC;AACH;;AACgB,SAAVU,UAAU,CAAC53B,IAAD,EAAOq2B,KAAP,EAAc3Y,KAAd,EAAqB;AAClC,WAAO0Y,gBAAgB,CAACrV,IAAjB,CAAsBsV,KAAtB,EAA6BuB,UAA7B,CAAwC53B,IAAxC,EAA8C0d,KAA9C,CAAP;AACH;;AACgB,SAAVwa,UAAU,CAACC,MAAD,EAAS;AACtB,UAAMC,YAAY,GAAG,EAArB;;AACA,SAAK,MAAMp4B,IAAX,IAAmBm4B,MAAnB,EAA2B;AACvB,YAAMv4B,IAAI,GAAG21B,gBAAgB,CAACv1B,IAAD,CAA7B;;AACA,UAAI,CAACJ,IAAL,EAAW;AACPk1B,QAAAA,QAAQ,CAAC7W,kBAAT,CAA6B,kCAAiCiB,IAAI,CAACC,SAAL,CAAenf,IAAf,CAAqB,EAAnF,EAAsF,QAAtF,EAAgGm4B,MAAhG;AACH;;AACDC,MAAAA,YAAY,CAACtb,IAAb,CAAkB;AAAE9c,QAAAA,IAAF;AAAQJ,QAAAA;AAAR,OAAlB;AACH;;AACDw4B,IAAAA,YAAY,CAAChB,IAAb,CAAkB,CAAC1tB,CAAD,EAAIlC,CAAJ,KAAU;AACxB,aAAOmuB,gBAAgB,CAAC5C,OAAjB,CAAyBrpB,CAAC,CAAC1J,IAA3B,IAAmC21B,gBAAgB,CAAC5C,OAAjB,CAAyBvrB,CAAC,CAACxH,IAA3B,CAA1C;AACH,KAFD;AAGA,WAAOo2B,gBAAgB,CAACwB,UAAjB,CAA4B,cAA5B,EAA4C;AAAES,MAAAA,YAAY,EAAED;AAAhB,KAA5C,EAA4ED,MAA5E,CAAP;AACH;;AACY,SAANzJ,MAAM,CAACyJ,MAAD,EAAS9B,KAAT,EAAgB3Y,KAAhB,EAAuB;AAChC,WAAOgG,SAAS,CAAC,CACb,QADa,EAEb0S,gBAAgB,CAAC8B,UAAjB,CAA4BC,MAA5B,CAFa,EAGb/B,gBAAgB,CAACrV,IAAjB,CAAsBsV,KAAtB,EAA6BwB,IAA7B,CAAkCna,KAAlC,CAHa,CAAD,CAAhB;AAKH;;AACU,SAAJma,IAAI,CAACM,MAAD,EAAS9B,KAAT,EAAgB3Y,KAAhB,EAAuB;AAC9B,WAAOuQ,SAAS,CAACmI,gBAAgB,CAAC1H,MAAjB,CAAwByJ,MAAxB,EAAgC9B,KAAhC,EAAuC3Y,KAAvC,CAAD,CAAhB;AACH,GAlNkB,CAmNnB;;;AACmB,SAAZ4a,YAAY,CAACH,MAAD,EAAS9B,KAAT,EAAgB3Y,KAAhB,EAAuB6a,WAAvB,EAAoC;AACnD,WAAO1D,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD;AACAsD,MAAAA,MAAM,GAAG9Q,WAAW,CAAC8Q,MAAD,CAApB,CAFkD,CAGlD;;AACA,YAAMK,QAAQ,GAAG,EAAjB,CAJkD,CAKlD;;AACA,UAAIL,MAAM,CAAC1C,iBAAP,IAA4B,CAAC/T,WAAW,CAACyW,MAAM,CAAC1C,iBAAR,EAA2B,EAA3B,CAA5C,EAA4E;AACxE+C,QAAAA,QAAQ,CAACL,MAAM,CAAC1C,iBAAR,CAAR,GAAqC,IAArC;AACH,OARiD,CASlD;;;AACA,YAAMmB,OAAO,GAAGR,gBAAgB,CAACrV,IAAjB,CAAsBsV,KAAtB,CAAhB,CAVkD,CAWlD;;AACAO,MAAAA,OAAO,CAACoB,KAAR,CAActa,KAAd,EAAqB,CAAC9d,IAAD,EAAO8d,KAAP,KAAiB;AAClC,YAAI9d,IAAI,KAAK,SAAT,IAAsB,CAAC8hB,WAAW,CAAChE,KAAD,EAAQ,EAAR,CAAtC,EAAmD;AAC/C8a,UAAAA,QAAQ,CAAC9a,KAAD,CAAR,GAAkB,IAAlB;AACH;;AACD,eAAOA,KAAP;AACH,OALD,EAZkD,CAkBlD;;AACA,WAAK,MAAM1d,IAAX,IAAmBw4B,QAAnB,EAA6B;AACzBA,QAAAA,QAAQ,CAACx4B,IAAD,CAAR,GAAiB,MAAMu4B,WAAW,CAACv4B,IAAD,CAAlC;AACH,OArBiD,CAsBlD;;;AACA,UAAIm4B,MAAM,CAAC1C,iBAAP,IAA4B+C,QAAQ,CAACL,MAAM,CAAC1C,iBAAR,CAAxC,EAAoE;AAChE0C,QAAAA,MAAM,CAAC1C,iBAAP,GAA2B+C,QAAQ,CAACL,MAAM,CAAC1C,iBAAR,CAAnC;AACH,OAzBiD,CA0BlD;;;AACA/X,MAAAA,KAAK,GAAGkZ,OAAO,CAACoB,KAAR,CAActa,KAAd,EAAqB,CAAC9d,IAAD,EAAO8d,KAAP,KAAiB;AAC1C,YAAI9d,IAAI,KAAK,SAAT,IAAsB44B,QAAQ,CAAC9a,KAAD,CAAlC,EAA2C;AACvC,iBAAO8a,QAAQ,CAAC9a,KAAD,CAAf;AACH;;AACD,eAAOA,KAAP;AACH,OALO,CAAR;AAMA,aAAO;AAAEya,QAAAA,MAAF;AAAUza,QAAAA;AAAV,OAAP;AACH,KAlCiB,CAAlB;AAmCH;;AACgB,SAAV+a,UAAU,CAACN,MAAD,EAAS9B,KAAT,EAAgB3Y,KAAhB,EAAuB;AACpC;AACA0Y,IAAAA,gBAAgB,CAAC8B,UAAjB,CAA4BC,MAA5B,EAFoC,CAGpC;;AACA,UAAMO,YAAY,GAAG,EAArB;AACA,UAAMC,WAAW,GAAG,EAApB;AACAhD,IAAAA,gBAAgB,CAAChZ,OAAjB,CAA0B3c,IAAD,IAAU;AAC/B,YAAM0d,KAAK,GAAGya,MAAM,CAACn4B,IAAD,CAApB;;AACA,UAAI0d,KAAK,IAAI,IAAb,EAAmB;AACf;AACH;;AACDgb,MAAAA,YAAY,CAAC14B,IAAD,CAAZ,GAAqB61B,YAAY,CAAC71B,IAAD,CAAZ,CAAmB0d,KAAnB,CAArB;AACAib,MAAAA,WAAW,CAAC7b,IAAZ,CAAiB;AAAE9c,QAAAA,IAAF;AAAQJ,QAAAA,IAAI,EAAE21B,gBAAgB,CAACv1B,IAAD;AAA9B,OAAjB;AACH,KAPD;AAQA,UAAM42B,OAAO,GAAGR,gBAAgB,CAACrV,IAAjB,CAAsBsV,KAAtB,CAAhB;AACA,UAAMuC,eAAe,GAAGvR,WAAW,CAACgP,KAAD,CAAnC;;AACA,QAAIuC,eAAe,CAACP,YAApB,EAAkC;AAC9BvD,MAAAA,QAAQ,CAAC7W,kBAAT,CAA4B,0CAA5B,EAAwE,oBAAxE,EAA8FoY,KAA9F;AACH,KAFD,MAGK;AACDuC,MAAAA,eAAe,CAACP,YAAhB,GAA+BM,WAA/B;AACH,KArBmC,CAsBpC;;;AACA/B,IAAAA,OAAO,CAAClI,MAAR,CAAehR,KAAf;AACA,WAAO;AACH2Y,MAAAA,KAAK,EAAEuC,eADJ;AAEHT,MAAAA,MAAM,EAAEO,YAFL;AAGHxB,MAAAA,WAAW,EAAEN,OAAO,CAACM,WAHlB;AAIHha,MAAAA,OAAO,EAAE0Z,OAAO,CAACoB,KAAR,CAActa,KAAd,EAAqB,CAAC9d,IAAD,EAAO8d,KAAP,KAAiB;AAC3C;AACA,YAAI9d,IAAI,CAACsjB,KAAL,CAAW,aAAX,CAAJ,EAA+B;AAC3B,iBAAOE,OAAO,CAACvB,QAAQ,CAACnE,KAAD,CAAT,CAAd;AACH,SAJ0C,CAK3C;;;AACA,YAAI9d,IAAI,CAACsjB,KAAL,CAAW,QAAX,CAAJ,EAA0B;AACtB,iBAAOwB,SAAS,CAAC3D,IAAV,CAAerD,KAAf,EAAsBja,QAAtB,EAAP;AACH;;AACD,gBAAQ7D,IAAR;AACI,eAAK,SAAL;AACI,mBAAO8d,KAAK,CAACM,WAAN,EAAP;;AACJ,eAAK,MAAL;AACI,mBAAO,CAAC,CAACN,KAAT;;AACJ,eAAK,QAAL;AACI,gBAAI,OAAQA,KAAR,KAAmB,QAAvB,EAAiC;AAC7BoX,cAAAA,QAAQ,CAAC7W,kBAAT,CAA6B,gBAA7B,EAA8C,OAA9C,EAAuDP,KAAvD;AACH;;AACD,mBAAOA,KAAP;AATR;;AAWA,eAAOoX,QAAQ,CAAC7W,kBAAT,CAA4B,kBAA5B,EAAgD,MAAhD,EAAwDre,IAAxD,CAAP;AACH,OArBQ;AAJN,KAAP;AA2BH;;AA5SkB;;AAgTvB,MAAMi5B,SAAS,GAAG,yBAAlB;;AAGA,IAAIC,WAAW,GAAI7e,SAAS,IAAIA,SAAS,CAAC4L,SAAxB,IAAsC,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACjG,WAASC,KAAT,CAAexI,KAAf,EAAsB;AAAE,WAAOA,KAAK,YAAYsI,CAAjB,GAAqBtI,KAArB,GAA6B,IAAIsI,CAAJ,CAAM,UAAUG,OAAV,EAAmB;AAAEA,MAAAA,OAAO,CAACzI,KAAD,CAAP;AAAiB,KAA5C,CAApC;AAAoF;;AAC5G,SAAO,KAAKsI,CAAC,KAAKA,CAAC,GAAGI,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;AACvD,aAASC,SAAT,CAAmB5I,KAAnB,EAA0B;AAAE,UAAI;AAAE6I,QAAAA,IAAI,CAACN,SAAS,CAACxL,IAAV,CAAeiD,KAAf,CAAD,CAAJ;AAA8B,OAApC,CAAqC,OAAOxe,CAAP,EAAU;AAAEmnB,QAAAA,MAAM,CAACnnB,CAAD,CAAN;AAAY;AAAE;;AAC3F,aAASsnB,QAAT,CAAkB9I,KAAlB,EAAyB;AAAE,UAAI;AAAE6I,QAAAA,IAAI,CAACN,SAAS,CAAC,OAAD,CAAT,CAAmBvI,KAAnB,CAAD,CAAJ;AAAkC,OAAxC,CAAyC,OAAOxe,CAAP,EAAU;AAAEmnB,QAAAA,MAAM,CAACnnB,CAAD,CAAN;AAAY;AAAE;;AAC9F,aAASqnB,IAAT,CAAcxE,MAAd,EAAsB;AAAEA,MAAAA,MAAM,CAAC0E,IAAP,GAAcN,OAAO,CAACpE,MAAM,CAACrE,KAAR,CAArB,GAAsCwI,KAAK,CAACnE,MAAM,CAACrE,KAAR,CAAL,CAAoBgJ,IAApB,CAAyBJ,SAAzB,EAAoCE,QAApC,CAAtC;AAAsF;;AAC9GD,IAAAA,IAAI,CAAC,CAACN,SAAS,GAAGA,SAAS,CAAC7H,KAAV,CAAgB0H,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDtL,IAAzD,EAAD,CAAJ;AACH,GALM,CAAP;AAMH,CARD;;AASA,MAAMse,QAAQ,GAAG,IAAIzb,MAAJ,CAAWub,SAAX,CAAjB,C,CACA;AACA;AACA;;AACA,MAAMG,SAAN,SAAwBnR,WAAxB,CAAoC;AACd,SAAXoR,WAAW,CAACvb,KAAD,EAAQ;AACtB,WAAO,CAAC,EAAEA,KAAK,IAAIA,KAAK,CAACwb,YAAjB,CAAR;AACH;;AAH+B,C,CAKpC;AACA;;;AACA,MAAMC,QAAN,CAAe;AACXl3B,EAAAA,WAAW,GAAG;AACV82B,IAAAA,QAAQ,CAACtY,aAAT,CAAuBmE,GAAG,CAACtE,MAA3B,EAAmC6Y,QAAnC;AACAvS,IAAAA,cAAc,CAAC,IAAD,EAAO,aAAP,EAAsB,IAAtB,CAAd;AACH;;AACDwS,EAAAA,UAAU,GAAG;AACT,WAAON,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,YAAM;AAAE7O,QAAAA,KAAF;AAASoP,QAAAA;AAAT,UAAsB,MAAMtS,iBAAiB,CAAC;AAChDkD,QAAAA,KAAK,EAAE,KAAKqP,QAAL,CAAc,QAAd,CADyC;AAEhDD,QAAAA,QAAQ,EAAE,KAAKE,WAAL,GAAmBC,KAAnB,CAA0Bld,KAAD,IAAW;AAC1C;AACA;AACA,iBAAO,IAAP;AACH,SAJS;AAFsC,OAAD,CAAnD;AAQA,UAAImd,YAAY,GAAG,IAAnB;AAAA,UAAyBC,oBAAoB,GAAG,IAAhD;;AACA,UAAIzP,KAAK,IAAIA,KAAK,CAAC0P,aAAnB,EAAkC;AAC9B;AACA;AACA;AACAD,QAAAA,oBAAoB,GAAGhV,SAAS,CAAC3D,IAAV,CAAe,YAAf,CAAvB;AACA0Y,QAAAA,YAAY,GAAGxP,KAAK,CAAC0P,aAAN,CAAoBz0B,GAApB,CAAwB,CAAxB,EAA2BiF,GAA3B,CAA+BuvB,oBAA/B,CAAf;AACH;;AACD,aAAO;AAAED,QAAAA,YAAF;AAAgBC,QAAAA,oBAAhB;AAAsCL,QAAAA;AAAtC,OAAP;AACH,KAlBiB,CAAlB;AAmBH,GAzBU,CA0BX;;;AACAO,EAAAA,WAAW,CAACC,SAAD,EAAYC,QAAZ,EAAsB;AAC7B,WAAO,KAAKC,EAAL,CAAQF,SAAR,EAAmBC,QAAnB,CAAP;AACH,GA7BU,CA8BX;;;AACAE,EAAAA,cAAc,CAACH,SAAD,EAAYC,QAAZ,EAAsB;AAChC,WAAO,KAAK11B,GAAL,CAASy1B,SAAT,EAAoBC,QAApB,CAAP;AACH;;AACgB,SAAVG,UAAU,CAACvc,KAAD,EAAQ;AACrB,WAAO,CAAC,EAAEA,KAAK,IAAIA,KAAK,CAACwc,WAAjB,CAAR;AACH;;AApCU;;AAwCf,MAAMC,SAAS,GAAG,uBAAlB;;AAGA,IAAIC,WAAW,GAAIngB,SAAS,IAAIA,SAAS,CAAC4L,SAAxB,IAAsC,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACjG,WAASC,KAAT,CAAexI,KAAf,EAAsB;AAAE,WAAOA,KAAK,YAAYsI,CAAjB,GAAqBtI,KAArB,GAA6B,IAAIsI,CAAJ,CAAM,UAAUG,OAAV,EAAmB;AAAEA,MAAAA,OAAO,CAACzI,KAAD,CAAP;AAAiB,KAA5C,CAApC;AAAoF;;AAC5G,SAAO,KAAKsI,CAAC,KAAKA,CAAC,GAAGI,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;AACvD,aAASC,SAAT,CAAmB5I,KAAnB,EAA0B;AAAE,UAAI;AAAE6I,QAAAA,IAAI,CAACN,SAAS,CAACxL,IAAV,CAAeiD,KAAf,CAAD,CAAJ;AAA8B,OAApC,CAAqC,OAAOxe,CAAP,EAAU;AAAEmnB,QAAAA,MAAM,CAACnnB,CAAD,CAAN;AAAY;AAAE;;AAC3F,aAASsnB,QAAT,CAAkB9I,KAAlB,EAAyB;AAAE,UAAI;AAAE6I,QAAAA,IAAI,CAACN,SAAS,CAAC,OAAD,CAAT,CAAmBvI,KAAnB,CAAD,CAAJ;AAAkC,OAAxC,CAAyC,OAAOxe,CAAP,EAAU;AAAEmnB,QAAAA,MAAM,CAACnnB,CAAD,CAAN;AAAY;AAAE;;AAC9F,aAASqnB,IAAT,CAAcxE,MAAd,EAAsB;AAAEA,MAAAA,MAAM,CAAC0E,IAAP,GAAcN,OAAO,CAACpE,MAAM,CAACrE,KAAR,CAArB,GAAsCwI,KAAK,CAACnE,MAAM,CAACrE,KAAR,CAAL,CAAoBgJ,IAApB,CAAyBJ,SAAzB,EAAoCE,QAApC,CAAtC;AAAsF;;AAC9GD,IAAAA,IAAI,CAAC,CAACN,SAAS,GAAGA,SAAS,CAAC7H,KAAV,CAAgB0H,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDtL,IAAzD,EAAD,CAAJ;AACH,GALM,CAAP;AAMH,CARD;;AASA,MAAM4f,QAAQ,GAAG,IAAI/c,MAAJ,CAAW6c,SAAX,CAAjB;AACA,MAAMG,sBAAsB,GAAG,CAC3B,YAD2B,EACb,SADa,EACF,MADE,EACM,MADN,EACc,UADd,EAC0B,UAD1B,EACsC,cADtC,EACsD,sBADtD,EAC8E,OAD9E,EACuF,IADvF,EAC6F,MAD7F,EACqG,OADrG,CAA/B;AAGA,MAAMC,aAAa,GAAG,CAClBjd,MAAM,CAACuB,MAAP,CAAc2b,kBADI,EAElBld,MAAM,CAACuB,MAAP,CAAc4b,aAFI,EAGlBnd,MAAM,CAACuB,MAAP,CAAc6b,uBAHI,CAAtB;;AAKA,MAAMC,MAAN,CAAa;AACT;AACA;AACA14B,EAAAA,WAAW,GAAG;AACVo4B,IAAAA,QAAQ,CAAC5Z,aAAT,CAAuBmE,GAAG,CAACtE,MAA3B,EAAmCqa,MAAnC;AACA/T,IAAAA,cAAc,CAAC,IAAD,EAAO,WAAP,EAAoB,IAApB,CAAd;AACH,GANQ,CAOT;AACA;;;AACAgU,EAAAA,UAAU,CAACC,QAAD,EAAW;AACjB,WAAOT,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,WAAKU,cAAL,CAAoB,YAApB;;AACA,aAAO,MAAM,KAAKC,QAAL,CAAcH,UAAd,CAAyB,KAAK1K,UAAL,EAAzB,EAA4C2K,QAA5C,CAAb;AACH,KAHiB,CAAlB;AAIH;;AACDG,EAAAA,mBAAmB,CAACH,QAAD,EAAW;AAC1B,WAAOT,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,WAAKU,cAAL,CAAoB,qBAApB;;AACA,aAAO,MAAM,KAAKC,QAAL,CAAcC,mBAAd,CAAkC,KAAK9K,UAAL,EAAlC,EAAqD2K,QAArD,CAAb;AACH,KAHiB,CAAlB;AAIH,GApBQ,CAqBT;;;AACAI,EAAAA,WAAW,CAAC7K,WAAD,EAAc;AACrB,WAAOgK,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,WAAKU,cAAL,CAAoB,aAApB;;AACA,YAAMI,EAAE,GAAG,MAAMnU,iBAAiB,CAAC,KAAKoU,gBAAL,CAAsB/K,WAAtB,CAAD,CAAlC;AACA,aAAO,MAAM,KAAK2K,QAAL,CAAcE,WAAd,CAA0BC,EAA1B,CAAb;AACH,KAJiB,CAAlB;AAKH,GA5BQ,CA6BT;;;AACA7gB,EAAAA,IAAI,CAAC+V,WAAD,EAAcyK,QAAd,EAAwB;AACxB,WAAOT,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,WAAKU,cAAL,CAAoB,MAApB;;AACA,YAAMI,EAAE,GAAG,MAAMnU,iBAAiB,CAAC,KAAKoU,gBAAL,CAAsB/K,WAAtB,CAAD,CAAlC;AACA,aAAO,MAAM,KAAK2K,QAAL,CAAc1gB,IAAd,CAAmB6gB,EAAnB,EAAuBL,QAAvB,CAAb;AACH,KAJiB,CAAlB;AAKH,GApCQ,CAqCT;;;AACAO,EAAAA,eAAe,CAAChL,WAAD,EAAc;AACzB,WAAOgK,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,WAAKU,cAAL,CAAoB,iBAApB;;AACA,YAAMI,EAAE,GAAG,MAAM,KAAKG,mBAAL,CAAyBjL,WAAzB,CAAjB;AACA,YAAMkL,QAAQ,GAAG,MAAM,KAAKC,eAAL,CAAqBL,EAArB,CAAvB;AACA,aAAO,MAAM,KAAKH,QAAL,CAAcK,eAAd,CAA8BE,QAA9B,CAAb;AACH,KALiB,CAAlB;AAMH;;AACDE,EAAAA,UAAU,GAAG;AACT,WAAOpB,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,WAAKU,cAAL,CAAoB,YAApB;;AACA,YAAMW,OAAO,GAAG,MAAM,KAAKV,QAAL,CAAcW,UAAd,EAAtB;AACA,aAAOD,OAAO,CAACjG,OAAf;AACH,KAJiB,CAAlB;AAKH;;AACD+D,EAAAA,WAAW,GAAG;AACV,WAAOa,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,WAAKU,cAAL,CAAoB,aAApB;;AACA,aAAO,MAAM,KAAKC,QAAL,CAAcxB,WAAd,EAAb;AACH,KAHiB,CAAlB;AAIH;;AACDH,EAAAA,UAAU,GAAG;AACT,WAAOgB,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,WAAKU,cAAL,CAAoB,YAApB;;AACA,aAAO,MAAM,KAAKC,QAAL,CAAc3B,UAAd,EAAb;AACH,KAHiB,CAAlB;AAIH;;AACDb,EAAAA,WAAW,CAACv4B,IAAD,EAAO;AACd,WAAOo6B,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,WAAKU,cAAL,CAAoB,aAApB;;AACA,aAAO,MAAM,KAAKC,QAAL,CAAcxC,WAAd,CAA0Bv4B,IAA1B,CAAb;AACH,KAHiB,CAAlB;AAIH,GAtEQ,CAuET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAm7B,EAAAA,gBAAgB,CAAC/K,WAAD,EAAc;AAC1B,SAAK,MAAMnR,GAAX,IAAkBmR,WAAlB,EAA+B;AAC3B,UAAIkK,sBAAsB,CAACvH,OAAvB,CAA+B9T,GAA/B,MAAwC,CAAC,CAA7C,EAAgD;AAC5Cob,QAAAA,QAAQ,CAACpc,kBAAT,CAA4B,8BAA8BgB,GAA1D,EAA+D,aAA/D,EAA8EmR,WAA9E;AACH;AACJ;;AACD,UAAM8K,EAAE,GAAG7T,WAAW,CAAC+I,WAAD,CAAtB;;AACA,QAAI8K,EAAE,CAACna,IAAH,IAAW,IAAf,EAAqB;AACjBma,MAAAA,EAAE,CAACna,IAAH,GAAU,KAAKmP,UAAL,EAAV;AACH,KAFD,MAGK;AACD;AACAgL,MAAAA,EAAE,CAACna,IAAH,GAAUqF,OAAO,CAACc,GAAR,CAAY,CAClBd,OAAO,CAACD,OAAR,CAAgB+U,EAAE,CAACna,IAAnB,CADkB,EAElB,KAAKmP,UAAL,EAFkB,CAAZ,EAGPxJ,IAHO,CAGD3E,MAAD,IAAY;AAChB,YAAIA,MAAM,CAAC,CAAD,CAAN,CAAU/D,WAAV,OAA4B+D,MAAM,CAAC,CAAD,CAAN,CAAU/D,WAAV,EAAhC,EAAyD;AACrDqc,UAAAA,QAAQ,CAACpc,kBAAT,CAA4B,uBAA5B,EAAqD,aAArD,EAAoEmS,WAApE;AACH;;AACD,eAAOrO,MAAM,CAAC,CAAD,CAAb;AACH,OARS,CAAV;AASH;;AACD,WAAOmZ,EAAP;AACH,GAvGQ,CAwGT;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAG,EAAAA,mBAAmB,CAACjL,WAAD,EAAc;AAC7B,WAAOgK,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,YAAMc,EAAE,GAAG,MAAMnU,iBAAiB,CAAC,KAAKoU,gBAAL,CAAsB/K,WAAtB,CAAD,CAAlC;;AACA,UAAI8K,EAAE,CAACS,EAAH,IAAS,IAAb,EAAmB;AACfT,QAAAA,EAAE,CAACS,EAAH,GAAQvV,OAAO,CAACD,OAAR,CAAgB+U,EAAE,CAACS,EAAnB,EAAuBjV,IAAvB,CAA6BiV,EAAD,IAAQvB,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AACvF,cAAIuB,EAAE,IAAI,IAAV,EAAgB;AACZ,mBAAO,IAAP;AACH;;AACD,gBAAMrM,OAAO,GAAG,MAAM,KAAKiJ,WAAL,CAAiBoD,EAAjB,CAAtB;;AACA,cAAIrM,OAAO,IAAI,IAAf,EAAqB;AACjB+K,YAAAA,QAAQ,CAACpc,kBAAT,CAA4B,oCAA5B,EAAkE,OAAlE,EAA2E0d,EAA3E;AACH;;AACD,iBAAOrM,OAAP;AACH,SATsD,CAA/C,CAAR,CADe,CAWf;;AACA4L,QAAAA,EAAE,CAACS,EAAH,CAAMnC,KAAN,CAAald,KAAD,IAAW,CAAG,CAA1B;AACH,OAfiD,CAgBlD;;;AACA,YAAMsf,UAAU,GAAIV,EAAE,CAACzB,YAAH,IAAmB,IAAnB,IAA2ByB,EAAE,CAACxB,oBAAH,IAA2B,IAA1E;;AACA,UAAIwB,EAAE,CAAC7B,QAAH,IAAe,IAAf,KAAwB6B,EAAE,CAACt7B,IAAH,KAAY,CAAZ,IAAiBg8B,UAAzC,CAAJ,EAA0D;AACtDvB,QAAAA,QAAQ,CAACpc,kBAAT,CAA4B,8CAA5B,EAA4E,aAA5E,EAA2FmS,WAA3F;AACH,OAFD,MAGK,IAAI,CAAC8K,EAAE,CAACt7B,IAAH,KAAY,CAAZ,IAAiBs7B,EAAE,CAACt7B,IAAH,KAAY,CAA9B,KAAoCg8B,UAAxC,EAAoD;AACrDvB,QAAAA,QAAQ,CAACpc,kBAAT,CAA4B,2EAA5B,EAAyG,aAAzG,EAAwHmS,WAAxH;AACH;;AACD,UAAI,CAAC8K,EAAE,CAACt7B,IAAH,KAAY,CAAZ,IAAiBs7B,EAAE,CAACt7B,IAAH,IAAW,IAA7B,KAAuCs7B,EAAE,CAACzB,YAAH,IAAmB,IAAnB,IAA2ByB,EAAE,CAACxB,oBAAH,IAA2B,IAAjG,EAAwG;AACpG;AACAwB,QAAAA,EAAE,CAACt7B,IAAH,GAAU,CAAV;AACH,OAHD,MAIK,IAAIs7B,EAAE,CAACt7B,IAAH,KAAY,CAAZ,IAAiBs7B,EAAE,CAACt7B,IAAH,KAAY,CAAjC,EAAoC;AACrC;AACA;AACA,YAAIs7B,EAAE,CAAC7B,QAAH,IAAe,IAAnB,EAAyB;AACrB6B,UAAAA,EAAE,CAAC7B,QAAH,GAAc,KAAKE,WAAL,EAAd;AACH;AACJ,OANI,MAOA;AACD;AACA,cAAMsC,OAAO,GAAG,MAAM,KAAKzC,UAAL,EAAtB;;AACA,YAAI8B,EAAE,CAACt7B,IAAH,IAAW,IAAf,EAAqB;AACjB;AACA,cAAIi8B,OAAO,CAACpC,YAAR,IAAwB,IAAxB,IAAgCoC,OAAO,CAACnC,oBAAR,IAAgC,IAApE,EAA0E;AACtE;AACA;AACAwB,YAAAA,EAAE,CAACt7B,IAAH,GAAU,CAAV;;AACA,gBAAIs7B,EAAE,CAAC7B,QAAH,IAAe,IAAnB,EAAyB;AACrB;AACA;AACA,oBAAMA,QAAQ,GAAG6B,EAAE,CAAC7B,QAApB;AACA,qBAAO6B,EAAE,CAAC7B,QAAV;AACA6B,cAAAA,EAAE,CAACzB,YAAH,GAAkBJ,QAAlB;AACA6B,cAAAA,EAAE,CAACxB,oBAAH,GAA0BL,QAA1B;AACH,aAPD,MAQK;AACD;AACA,kBAAI6B,EAAE,CAACzB,YAAH,IAAmB,IAAvB,EAA6B;AACzByB,gBAAAA,EAAE,CAACzB,YAAH,GAAkBoC,OAAO,CAACpC,YAA1B;AACH;;AACD,kBAAIyB,EAAE,CAACxB,oBAAH,IAA2B,IAA/B,EAAqC;AACjCwB,gBAAAA,EAAE,CAACxB,oBAAH,GAA0BmC,OAAO,CAACnC,oBAAlC;AACH;AACJ;AACJ,WArBD,MAsBK,IAAImC,OAAO,CAACxC,QAAR,IAAoB,IAAxB,EAA8B;AAC/B;AACA;AACA,gBAAIuC,UAAJ,EAAgB;AACZvB,cAAAA,QAAQ,CAAChb,UAAT,CAAoB,mCAApB,EAAyD/B,MAAM,CAACuB,MAAP,CAAcc,qBAAvE,EAA8F;AAC1FC,gBAAAA,SAAS,EAAE;AAD+E,eAA9F;AAGH,aAP8B,CAQ/B;;;AACA,gBAAIsb,EAAE,CAAC7B,QAAH,IAAe,IAAnB,EAAyB;AACrB6B,cAAAA,EAAE,CAAC7B,QAAH,GAAcwC,OAAO,CAACxC,QAAtB;AACH,aAX8B,CAY/B;;;AACA6B,YAAAA,EAAE,CAACt7B,IAAH,GAAU,CAAV;AACH,WAdI,MAeA;AACD;AACAy6B,YAAAA,QAAQ,CAAChb,UAAT,CAAoB,mCAApB,EAAyD/B,MAAM,CAACuB,MAAP,CAAcc,qBAAvE,EAA8F;AAC1FC,cAAAA,SAAS,EAAE;AAD+E,aAA9F;AAGH;AACJ,SA7CD,MA8CK,IAAIsb,EAAE,CAACt7B,IAAH,KAAY,CAAhB,EAAmB;AACpB;AACA;AACA,cAAIs7B,EAAE,CAACzB,YAAH,IAAmB,IAAvB,EAA6B;AACzByB,YAAAA,EAAE,CAACzB,YAAH,GAAkBoC,OAAO,CAACpC,YAA1B;AACH;;AACD,cAAIyB,EAAE,CAACxB,oBAAH,IAA2B,IAA/B,EAAqC;AACjCwB,YAAAA,EAAE,CAACxB,oBAAH,GAA0BmC,OAAO,CAACnC,oBAAlC;AACH;AACJ;AACJ;;AACD,UAAIwB,EAAE,CAAC7K,KAAH,IAAY,IAAhB,EAAsB;AAClB6K,QAAAA,EAAE,CAAC7K,KAAH,GAAW,KAAK2K,mBAAL,CAAyB,SAAzB,CAAX;AACH;;AACD,UAAIE,EAAE,CAACY,QAAH,IAAe,IAAnB,EAAyB;AACrBZ,QAAAA,EAAE,CAACY,QAAH,GAAc,KAAKb,WAAL,CAAiBC,EAAjB,EAAqB1B,KAArB,CAA4Bld,KAAD,IAAW;AAChD,cAAIie,aAAa,CAACxH,OAAd,CAAsBzW,KAAK,CAACqC,IAA5B,KAAqC,CAAzC,EAA4C;AACxC,kBAAMrC,KAAN;AACH;;AACD,iBAAO+d,QAAQ,CAAChb,UAAT,CAAoB,2EAApB,EAAiG/B,MAAM,CAACuB,MAAP,CAAckd,uBAA/G,EAAwI;AAC3Izf,YAAAA,KAAK,EAAEA,KADoI;AAE3I4e,YAAAA,EAAE,EAAEA;AAFuI,WAAxI,CAAP;AAIH,SARa,CAAd;AASH;;AACD,UAAIA,EAAE,CAAC1F,OAAH,IAAc,IAAlB,EAAwB;AACpB0F,QAAAA,EAAE,CAAC1F,OAAH,GAAa,KAAKgG,UAAL,EAAb;AACH,OAFD,MAGK;AACDN,QAAAA,EAAE,CAAC1F,OAAH,GAAapP,OAAO,CAACc,GAAR,CAAY,CACrBd,OAAO,CAACD,OAAR,CAAgB+U,EAAE,CAAC1F,OAAnB,CADqB,EAErB,KAAKgG,UAAL,EAFqB,CAAZ,EAGV9U,IAHU,CAGJO,OAAD,IAAa;AACjB,cAAIA,OAAO,CAAC,CAAD,CAAP,KAAe,CAAf,IAAoBA,OAAO,CAAC,CAAD,CAAP,KAAeA,OAAO,CAAC,CAAD,CAA9C,EAAmD;AAC/CoT,YAAAA,QAAQ,CAACpc,kBAAT,CAA4B,0BAA5B,EAAwD,aAAxD,EAAuEmS,WAAvE;AACH;;AACD,iBAAOnJ,OAAO,CAAC,CAAD,CAAd;AACH,SARY,CAAb;AASH;;AACD,aAAO,MAAMF,iBAAiB,CAACmU,EAAD,CAA9B;AACH,KA5HiB,CAAlB;AA6HH,GA7OQ,CA8OT;AACA;;;AACAJ,EAAAA,cAAc,CAAClb,SAAD,EAAY;AACtB,QAAI,CAAC,KAAKmb,QAAV,EAAoB;AAChBV,MAAAA,QAAQ,CAAChb,UAAT,CAAoB,kBAApB,EAAwC/B,MAAM,CAACuB,MAAP,CAAcc,qBAAtD,EAA6E;AACzEC,QAAAA,SAAS,EAAGA,SAAS,IAAI;AADgD,OAA7E;AAGH;AACJ;;AACc,SAARoc,QAAQ,CAACte,KAAD,EAAQ;AACnB,WAAO,CAAC,EAAEA,KAAK,IAAIA,KAAK,CAACue,SAAjB,CAAR;AACH;;AAzPQ;;AA6Pb,IAAIC,kBAAkB,GAAG36B,MAAzB;;AAEA,SAASA,MAAT,CAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;AACxB,MAAI,CAACD,GAAL,EACE,MAAM,IAAIE,KAAJ,CAAUD,GAAG,IAAI,kBAAjB,CAAN;AACH;;AAEDF,MAAM,CAAC46B,KAAP,GAAe,SAASC,WAAT,CAAqB3rB,CAArB,EAAwB5L,CAAxB,EAA2BpD,GAA3B,EAAgC;AAC7C,MAAIgP,CAAC,IAAI5L,CAAT,EACE,MAAM,IAAInD,KAAJ,CAAUD,GAAG,IAAK,uBAAuBgP,CAAvB,GAA2B,MAA3B,GAAoC5L,CAAtD,CAAN;AACH,CAHD;;AAKA,IAAIw3B,gBAAgB,GAAGz7B,oBAAoB,CAAC,UAAUE,MAAV,EAAkB;AAC9D,MAAI,OAAOyc,MAAM,CAACiM,MAAd,KAAyB,UAA7B,EAAyC;AACvC;AACA1oB,IAAAA,MAAM,CAACC,OAAP,GAAiB,SAASY,QAAT,CAAkBC,IAAlB,EAAwBC,SAAxB,EAAmC;AAClD,UAAIA,SAAJ,EAAe;AACbD,QAAAA,IAAI,CAACE,MAAL,GAAcD,SAAd;AACAD,QAAAA,IAAI,CAACI,SAAL,GAAiBub,MAAM,CAACiM,MAAP,CAAc3nB,SAAS,CAACG,SAAxB,EAAmC;AAClDC,UAAAA,WAAW,EAAE;AACXyb,YAAAA,KAAK,EAAE9b,IADI;AAEX6b,YAAAA,UAAU,EAAE,KAFD;AAGXE,YAAAA,QAAQ,EAAE,IAHC;AAIX2e,YAAAA,YAAY,EAAE;AAJH;AADqC,SAAnC,CAAjB;AAQD;AACF,KAZD;AAaD,GAfD,MAeO;AACL;AACAx7B,IAAAA,MAAM,CAACC,OAAP,GAAiB,SAASY,QAAT,CAAkBC,IAAlB,EAAwBC,SAAxB,EAAmC;AAClD,UAAIA,SAAJ,EAAe;AACbD,QAAAA,IAAI,CAACE,MAAL,GAAcD,SAAd;;AACA,YAAIE,QAAQ,GAAG,YAAY,CAAE,CAA7B;;AACAA,QAAAA,QAAQ,CAACC,SAAT,GAAqBH,SAAS,CAACG,SAA/B;AACAJ,QAAAA,IAAI,CAACI,SAAL,GAAiB,IAAID,QAAJ,EAAjB;AACAH,QAAAA,IAAI,CAACI,SAAL,CAAeC,WAAf,GAA6BL,IAA7B;AACD;AACF,KARD;AASD;AACA,CA5B0C,CAA3C;AA8BA,IAAI26B,UAAU,GAAGF,gBAAjB;;AAEA,SAASG,eAAT,CAAyB/6B,GAAzB,EAA8BwC,CAA9B,EAAiC;AAC/B,MAAI,CAACxC,GAAG,CAACiD,UAAJ,CAAeT,CAAf,IAAoB,MAArB,MAAiC,MAArC,EAA6C;AAC3C,WAAO,KAAP;AACD;;AACD,MAAIA,CAAC,GAAG,CAAJ,IAASA,CAAC,GAAG,CAAJ,IAASxC,GAAG,CAACgB,MAA1B,EAAkC;AAChC,WAAO,KAAP;AACD;;AACD,SAAO,CAAChB,GAAG,CAACiD,UAAJ,CAAeT,CAAC,GAAG,CAAnB,IAAwB,MAAzB,MAAqC,MAA5C;AACD;;AAED,SAASH,OAAT,CAAiBrC,GAAjB,EAAsBg7B,GAAtB,EAA2B;AACzB,MAAI15B,KAAK,CAACC,OAAN,CAAcvB,GAAd,CAAJ,EACE,OAAOA,GAAG,CAAC6f,KAAJ,EAAP;AACF,MAAI,CAAC7f,GAAL,EACE,OAAO,EAAP;AACF,MAAI8F,GAAG,GAAG,EAAV;;AACA,MAAI,OAAO9F,GAAP,KAAe,QAAnB,EAA6B;AAC3B,QAAI,CAACg7B,GAAL,EAAU;AACR;AACA;AACA;AACA;AACA,UAAIhrB,CAAC,GAAG,CAAR;;AACA,WAAK,IAAIxN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGxC,GAAG,CAACgB,MAAxB,EAAgCwB,CAAC,EAAjC,EAAqC;AACnC,YAAIQ,CAAC,GAAGhD,GAAG,CAACiD,UAAJ,CAAeT,CAAf,CAAR;;AACA,YAAIQ,CAAC,GAAG,GAAR,EAAa;AACX8C,UAAAA,GAAG,CAACkK,CAAC,EAAF,CAAH,GAAWhN,CAAX;AACD,SAFD,MAEO,IAAIA,CAAC,GAAG,IAAR,EAAc;AACnB8C,UAAAA,GAAG,CAACkK,CAAC,EAAF,CAAH,GAAYhN,CAAC,IAAI,CAAN,GAAW,GAAtB;AACA8C,UAAAA,GAAG,CAACkK,CAAC,EAAF,CAAH,GAAYhN,CAAC,GAAG,EAAL,GAAW,GAAtB;AACD,SAHM,MAGA,IAAI+3B,eAAe,CAAC/6B,GAAD,EAAMwC,CAAN,CAAnB,EAA6B;AAClCQ,UAAAA,CAAC,GAAG,WAAW,CAACA,CAAC,GAAG,MAAL,KAAgB,EAA3B,KAAkChD,GAAG,CAACiD,UAAJ,CAAe,EAAET,CAAjB,IAAsB,MAAxD,CAAJ;AACAsD,UAAAA,GAAG,CAACkK,CAAC,EAAF,CAAH,GAAYhN,CAAC,IAAI,EAAN,GAAY,GAAvB;AACA8C,UAAAA,GAAG,CAACkK,CAAC,EAAF,CAAH,GAAahN,CAAC,IAAI,EAAN,GAAY,EAAb,GAAmB,GAA9B;AACA8C,UAAAA,GAAG,CAACkK,CAAC,EAAF,CAAH,GAAahN,CAAC,IAAI,CAAN,GAAW,EAAZ,GAAkB,GAA7B;AACA8C,UAAAA,GAAG,CAACkK,CAAC,EAAF,CAAH,GAAYhN,CAAC,GAAG,EAAL,GAAW,GAAtB;AACD,SANM,MAMA;AACL8C,UAAAA,GAAG,CAACkK,CAAC,EAAF,CAAH,GAAYhN,CAAC,IAAI,EAAN,GAAY,GAAvB;AACA8C,UAAAA,GAAG,CAACkK,CAAC,EAAF,CAAH,GAAahN,CAAC,IAAI,CAAN,GAAW,EAAZ,GAAkB,GAA7B;AACA8C,UAAAA,GAAG,CAACkK,CAAC,EAAF,CAAH,GAAYhN,CAAC,GAAG,EAAL,GAAW,GAAtB;AACD;AACF;AACF,KAzBD,MAyBO,IAAIg4B,GAAG,KAAK,KAAZ,EAAmB;AACxBh7B,MAAAA,GAAG,GAAGA,GAAG,CAACiC,OAAJ,CAAY,cAAZ,EAA4B,EAA5B,CAAN;AACA,UAAIjC,GAAG,CAACgB,MAAJ,GAAa,CAAb,KAAmB,CAAvB,EACEhB,GAAG,GAAG,MAAMA,GAAZ;;AACF,WAAKwC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGxC,GAAG,CAACgB,MAApB,EAA4BwB,CAAC,IAAI,CAAjC,EACEsD,GAAG,CAACuV,IAAJ,CAASmF,QAAQ,CAACxgB,GAAG,CAACwC,CAAD,CAAH,GAASxC,GAAG,CAACwC,CAAC,GAAG,CAAL,CAAb,EAAsB,EAAtB,CAAjB;AACH;AACF,GAjCD,MAiCO;AACL,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGxC,GAAG,CAACgB,MAApB,EAA4BwB,CAAC,EAA7B,EACEsD,GAAG,CAACtD,CAAD,CAAH,GAASxC,GAAG,CAACwC,CAAD,CAAH,GAAS,CAAlB;AACH;;AACD,SAAOsD,GAAP;AACD;;AACD,IAAIm1B,SAAS,GAAG54B,OAAhB;;AAEA,SAAS64B,OAAT,CAAiBl7B,GAAjB,EAAsB;AACpB,MAAI8F,GAAG,GAAG,EAAV;;AACA,OAAK,IAAItD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGxC,GAAG,CAACgB,MAAxB,EAAgCwB,CAAC,EAAjC,EACEsD,GAAG,IAAIq1B,KAAK,CAACn7B,GAAG,CAACwC,CAAD,CAAH,CAAOR,QAAP,CAAgB,EAAhB,CAAD,CAAZ;;AACF,SAAO8D,GAAP;AACD;;AACD,IAAIs1B,OAAO,GAAGF,OAAd;;AAEA,SAASG,KAAT,CAAe34B,CAAf,EAAkB;AAChB,MAAIoD,GAAG,GAAIpD,CAAC,KAAK,EAAP,GACEA,CAAC,KAAK,CAAP,GAAY,MADb,GAEEA,CAAC,IAAI,CAAN,GAAW,QAFZ,GAGC,CAACA,CAAC,GAAG,IAAL,KAAc,EAHzB;AAIA,SAAOoD,GAAG,KAAK,CAAf;AACD;;AACD,IAAIw1B,OAAO,GAAGD,KAAd;;AAEA,SAASE,OAAT,CAAiBv7B,GAAjB,EAAsBY,MAAtB,EAA8B;AAC5B,MAAIkF,GAAG,GAAG,EAAV;;AACA,OAAK,IAAItD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGxC,GAAG,CAACgB,MAAxB,EAAgCwB,CAAC,EAAjC,EAAqC;AACnC,QAAIE,CAAC,GAAG1C,GAAG,CAACwC,CAAD,CAAX;AACA,QAAI5B,MAAM,KAAK,QAAf,EACE8B,CAAC,GAAG24B,KAAK,CAAC34B,CAAD,CAAT;AACFoD,IAAAA,GAAG,IAAI01B,KAAK,CAAC94B,CAAC,CAACV,QAAF,CAAW,EAAX,CAAD,CAAZ;AACD;;AACD,SAAO8D,GAAP;AACD;;AACD,IAAI21B,SAAS,GAAGF,OAAhB;;AAEA,SAASJ,KAAT,CAAep3B,IAAf,EAAqB;AACnB,MAAIA,IAAI,CAAC/C,MAAL,KAAgB,CAApB,EACE,OAAO,MAAM+C,IAAb,CADF,KAGE,OAAOA,IAAP;AACH;;AACD,IAAI23B,OAAO,GAAGP,KAAd;;AAEA,SAASK,KAAT,CAAez3B,IAAf,EAAqB;AACnB,MAAIA,IAAI,CAAC/C,MAAL,KAAgB,CAApB,EACE,OAAO,MAAM+C,IAAb,CADF,KAEK,IAAIA,IAAI,CAAC/C,MAAL,KAAgB,CAApB,EACH,OAAO,OAAO+C,IAAd,CADG,KAEA,IAAIA,IAAI,CAAC/C,MAAL,KAAgB,CAApB,EACH,OAAO,QAAQ+C,IAAf,CADG,KAEA,IAAIA,IAAI,CAAC/C,MAAL,KAAgB,CAApB,EACH,OAAO,SAAS+C,IAAhB,CADG,KAEA,IAAIA,IAAI,CAAC/C,MAAL,KAAgB,CAApB,EACH,OAAO,UAAU+C,IAAjB,CADG,KAEA,IAAIA,IAAI,CAAC/C,MAAL,KAAgB,CAApB,EACH,OAAO,WAAW+C,IAAlB,CADG,KAEA,IAAIA,IAAI,CAAC/C,MAAL,KAAgB,CAApB,EACH,OAAO,YAAY+C,IAAnB,CADG,KAGH,OAAOA,IAAP;AACH;;AACD,IAAI43B,OAAO,GAAGH,KAAd;;AAEA,SAASI,MAAT,CAAgB57B,GAAhB,EAAqBkC,KAArB,EAA4BsB,GAA5B,EAAiC5C,MAAjC,EAAyC;AACvC,MAAI8C,GAAG,GAAGF,GAAG,GAAGtB,KAAhB;AACAu4B,EAAAA,kBAAkB,CAAC/2B,GAAG,GAAG,CAAN,KAAY,CAAb,CAAlB;AACA,MAAIoC,GAAG,GAAG,IAAIxE,KAAJ,CAAUoC,GAAG,GAAG,CAAhB,CAAV;;AACA,OAAK,IAAIlB,CAAC,GAAG,CAAR,EAAWsG,CAAC,GAAG5G,KAApB,EAA2BM,CAAC,GAAGsD,GAAG,CAAC9E,MAAnC,EAA2CwB,CAAC,IAAIsG,CAAC,IAAI,CAArD,EAAwD;AACtD,QAAIpG,CAAJ;AACA,QAAI9B,MAAM,KAAK,KAAf,EACE8B,CAAC,GAAI1C,GAAG,CAAC8I,CAAD,CAAH,IAAU,EAAX,GAAkB9I,GAAG,CAAC8I,CAAC,GAAG,CAAL,CAAH,IAAc,EAAhC,GAAuC9I,GAAG,CAAC8I,CAAC,GAAG,CAAL,CAAH,IAAc,CAArD,GAA0D9I,GAAG,CAAC8I,CAAC,GAAG,CAAL,CAAjE,CADF,KAGEpG,CAAC,GAAI1C,GAAG,CAAC8I,CAAC,GAAG,CAAL,CAAH,IAAc,EAAf,GAAsB9I,GAAG,CAAC8I,CAAC,GAAG,CAAL,CAAH,IAAc,EAApC,GAA2C9I,GAAG,CAAC8I,CAAC,GAAG,CAAL,CAAH,IAAc,CAAzD,GAA8D9I,GAAG,CAAC8I,CAAD,CAArE;AACFhD,IAAAA,GAAG,CAACtD,CAAD,CAAH,GAASE,CAAC,KAAK,CAAf;AACD;;AACD,SAAOoD,GAAP;AACD;;AACD,IAAI+1B,QAAQ,GAAGD,MAAf;;AAEA,SAASE,OAAT,CAAiB97B,GAAjB,EAAsBY,MAAtB,EAA8B;AAC5B,MAAIkF,GAAG,GAAG,IAAIxE,KAAJ,CAAUtB,GAAG,CAACgB,MAAJ,GAAa,CAAvB,CAAV;;AACA,OAAK,IAAIwB,CAAC,GAAG,CAAR,EAAWsG,CAAC,GAAG,CAApB,EAAuBtG,CAAC,GAAGxC,GAAG,CAACgB,MAA/B,EAAuCwB,CAAC,IAAIsG,CAAC,IAAI,CAAjD,EAAoD;AAClD,QAAI2H,CAAC,GAAGzQ,GAAG,CAACwC,CAAD,CAAX;;AACA,QAAI5B,MAAM,KAAK,KAAf,EAAsB;AACpBkF,MAAAA,GAAG,CAACgD,CAAD,CAAH,GAAS2H,CAAC,KAAK,EAAf;AACA3K,MAAAA,GAAG,CAACgD,CAAC,GAAG,CAAL,CAAH,GAAc2H,CAAC,KAAK,EAAP,GAAa,IAA1B;AACA3K,MAAAA,GAAG,CAACgD,CAAC,GAAG,CAAL,CAAH,GAAc2H,CAAC,KAAK,CAAP,GAAY,IAAzB;AACA3K,MAAAA,GAAG,CAACgD,CAAC,GAAG,CAAL,CAAH,GAAa2H,CAAC,GAAG,IAAjB;AACD,KALD,MAKO;AACL3K,MAAAA,GAAG,CAACgD,CAAC,GAAG,CAAL,CAAH,GAAa2H,CAAC,KAAK,EAAnB;AACA3K,MAAAA,GAAG,CAACgD,CAAC,GAAG,CAAL,CAAH,GAAc2H,CAAC,KAAK,EAAP,GAAa,IAA1B;AACA3K,MAAAA,GAAG,CAACgD,CAAC,GAAG,CAAL,CAAH,GAAc2H,CAAC,KAAK,CAAP,GAAY,IAAzB;AACA3K,MAAAA,GAAG,CAACgD,CAAD,CAAH,GAAS2H,CAAC,GAAG,IAAb;AACD;AACF;;AACD,SAAO3K,GAAP;AACD;;AACD,IAAIi2B,SAAS,GAAGD,OAAhB;;AAEA,SAASE,MAAT,CAAgBt5B,CAAhB,EAAmBqD,CAAnB,EAAsB;AACpB,SAAQrD,CAAC,KAAKqD,CAAP,GAAarD,CAAC,IAAK,KAAKqD,CAA/B;AACD;;AACD,IAAIk2B,QAAQ,GAAGD,MAAf;;AAEA,SAASE,MAAT,CAAgBx5B,CAAhB,EAAmBqD,CAAnB,EAAsB;AACpB,SAAQrD,CAAC,IAAIqD,CAAN,GAAYrD,CAAC,KAAM,KAAKqD,CAA/B;AACD;;AACD,IAAIo2B,QAAQ,GAAGD,MAAf;;AAEA,SAASE,KAAT,CAAen0B,CAAf,EAAkBlC,CAAlB,EAAqB;AACnB,SAAQkC,CAAC,GAAGlC,CAAL,KAAY,CAAnB;AACD;;AACD,IAAIs2B,OAAO,GAAGD,KAAd;;AAEA,SAASE,OAAT,CAAiBr0B,CAAjB,EAAoBlC,CAApB,EAAuB/C,CAAvB,EAA0B;AACxB,SAAQiF,CAAC,GAAGlC,CAAJ,GAAQ/C,CAAT,KAAgB,CAAvB;AACD;;AACD,IAAIu5B,SAAS,GAAGD,OAAhB;;AAEA,SAASE,OAAT,CAAiBv0B,CAAjB,EAAoBlC,CAApB,EAAuB/C,CAAvB,EAA0BquB,CAA1B,EAA6B;AAC3B,SAAQppB,CAAC,GAAGlC,CAAJ,GAAQ/C,CAAR,GAAYquB,CAAb,KAAoB,CAA3B;AACD;;AACD,IAAIoL,SAAS,GAAGD,OAAhB;;AAEA,SAASE,OAAT,CAAiBz0B,CAAjB,EAAoBlC,CAApB,EAAuB/C,CAAvB,EAA0BquB,CAA1B,EAA6B5zB,CAA7B,EAAgC;AAC9B,SAAQwK,CAAC,GAAGlC,CAAJ,GAAQ/C,CAAR,GAAYquB,CAAZ,GAAgB5zB,CAAjB,KAAwB,CAA/B;AACD;;AACD,IAAIk/B,SAAS,GAAGD,OAAhB;;AAEA,SAASE,KAAT,CAAeC,GAAf,EAAoBC,GAApB,EAAyBC,EAAzB,EAA6BC,EAA7B,EAAiC;AAC/B,MAAIC,EAAE,GAAGJ,GAAG,CAACC,GAAD,CAAZ;AACA,MAAII,EAAE,GAAGL,GAAG,CAACC,GAAG,GAAG,CAAP,CAAZ;AAEA,MAAIj0B,EAAE,GAAIm0B,EAAE,GAAGE,EAAN,KAAc,CAAvB;AACA,MAAI12B,EAAE,GAAG,CAACqC,EAAE,GAAGm0B,EAAL,GAAU,CAAV,GAAc,CAAf,IAAoBD,EAApB,GAAyBE,EAAlC;AACAJ,EAAAA,GAAG,CAACC,GAAD,CAAH,GAAWt2B,EAAE,KAAK,CAAlB;AACAq2B,EAAAA,GAAG,CAACC,GAAG,GAAG,CAAP,CAAH,GAAej0B,EAAf;AACD;;AACD,IAAIs0B,OAAO,GAAGP,KAAd;;AAEA,SAASQ,QAAT,CAAkBL,EAAlB,EAAsBC,EAAtB,EAA0BC,EAA1B,EAA8BC,EAA9B,EAAkC;AAChC,MAAIr0B,EAAE,GAAIm0B,EAAE,GAAGE,EAAN,KAAc,CAAvB;AACA,MAAI12B,EAAE,GAAG,CAACqC,EAAE,GAAGm0B,EAAL,GAAU,CAAV,GAAc,CAAf,IAAoBD,EAApB,GAAyBE,EAAlC;AACA,SAAOz2B,EAAE,KAAK,CAAd;AACD;;AACD,IAAI62B,UAAU,GAAGD,QAAjB;;AAEA,SAASE,QAAT,CAAkBP,EAAlB,EAAsBC,EAAtB,EAA0BC,EAA1B,EAA8BC,EAA9B,EAAkC;AAChC,MAAIr0B,EAAE,GAAGm0B,EAAE,GAAGE,EAAd;AACA,SAAOr0B,EAAE,KAAK,CAAd;AACD;;AACD,IAAI00B,UAAU,GAAGD,QAAjB;;AAEA,SAASE,UAAT,CAAoBT,EAApB,EAAwBC,EAAxB,EAA4BC,EAA5B,EAAgCC,EAAhC,EAAoCO,EAApC,EAAwCC,EAAxC,EAA4CC,EAA5C,EAAgDC,EAAhD,EAAoD;AAClD,MAAI74B,KAAK,GAAG,CAAZ;AACA,MAAI8D,EAAE,GAAGm0B,EAAT;AACAn0B,EAAAA,EAAE,GAAIA,EAAE,GAAGq0B,EAAN,KAAc,CAAnB;AACAn4B,EAAAA,KAAK,IAAI8D,EAAE,GAAGm0B,EAAL,GAAU,CAAV,GAAc,CAAvB;AACAn0B,EAAAA,EAAE,GAAIA,EAAE,GAAG60B,EAAN,KAAc,CAAnB;AACA34B,EAAAA,KAAK,IAAI8D,EAAE,GAAG60B,EAAL,GAAU,CAAV,GAAc,CAAvB;AACA70B,EAAAA,EAAE,GAAIA,EAAE,GAAG+0B,EAAN,KAAc,CAAnB;AACA74B,EAAAA,KAAK,IAAI8D,EAAE,GAAG+0B,EAAL,GAAU,CAAV,GAAc,CAAvB;AAEA,MAAIp3B,EAAE,GAAGu2B,EAAE,GAAGE,EAAL,GAAUQ,EAAV,GAAeE,EAAf,GAAoB54B,KAA7B;AACA,SAAOyB,EAAE,KAAK,CAAd;AACD;;AACD,IAAIq3B,YAAY,GAAGL,UAAnB;;AAEA,SAASM,UAAT,CAAoBf,EAApB,EAAwBC,EAAxB,EAA4BC,EAA5B,EAAgCC,EAAhC,EAAoCO,EAApC,EAAwCC,EAAxC,EAA4CC,EAA5C,EAAgDC,EAAhD,EAAoD;AAClD,MAAI/0B,EAAE,GAAGm0B,EAAE,GAAGE,EAAL,GAAUQ,EAAV,GAAeE,EAAxB;AACA,SAAO/0B,EAAE,KAAK,CAAd;AACD;;AACD,IAAIk1B,YAAY,GAAGD,UAAnB;;AAEA,SAASE,UAAT,CAAoBjB,EAApB,EAAwBC,EAAxB,EAA4BC,EAA5B,EAAgCC,EAAhC,EAAoCO,EAApC,EAAwCC,EAAxC,EAA4CC,EAA5C,EAAgDC,EAAhD,EAAoDK,EAApD,EAAwDC,EAAxD,EAA4D;AAC1D,MAAIn5B,KAAK,GAAG,CAAZ;AACA,MAAI8D,EAAE,GAAGm0B,EAAT;AACAn0B,EAAAA,EAAE,GAAIA,EAAE,GAAGq0B,EAAN,KAAc,CAAnB;AACAn4B,EAAAA,KAAK,IAAI8D,EAAE,GAAGm0B,EAAL,GAAU,CAAV,GAAc,CAAvB;AACAn0B,EAAAA,EAAE,GAAIA,EAAE,GAAG60B,EAAN,KAAc,CAAnB;AACA34B,EAAAA,KAAK,IAAI8D,EAAE,GAAG60B,EAAL,GAAU,CAAV,GAAc,CAAvB;AACA70B,EAAAA,EAAE,GAAIA,EAAE,GAAG+0B,EAAN,KAAc,CAAnB;AACA74B,EAAAA,KAAK,IAAI8D,EAAE,GAAG+0B,EAAL,GAAU,CAAV,GAAc,CAAvB;AACA/0B,EAAAA,EAAE,GAAIA,EAAE,GAAGq1B,EAAN,KAAc,CAAnB;AACAn5B,EAAAA,KAAK,IAAI8D,EAAE,GAAGq1B,EAAL,GAAU,CAAV,GAAc,CAAvB;AAEA,MAAI13B,EAAE,GAAGu2B,EAAE,GAAGE,EAAL,GAAUQ,EAAV,GAAeE,EAAf,GAAoBM,EAApB,GAAyBl5B,KAAlC;AACA,SAAOyB,EAAE,KAAK,CAAd;AACD;;AACD,IAAI23B,YAAY,GAAGH,UAAnB;;AAEA,SAASI,UAAT,CAAoBrB,EAApB,EAAwBC,EAAxB,EAA4BC,EAA5B,EAAgCC,EAAhC,EAAoCO,EAApC,EAAwCC,EAAxC,EAA4CC,EAA5C,EAAgDC,EAAhD,EAAoDK,EAApD,EAAwDC,EAAxD,EAA4D;AAC1D,MAAIr1B,EAAE,GAAGm0B,EAAE,GAAGE,EAAL,GAAUQ,EAAV,GAAeE,EAAf,GAAoBM,EAA7B;AAEA,SAAOr1B,EAAE,KAAK,CAAd;AACD;;AACD,IAAIw1B,YAAY,GAAGD,UAAnB;;AAEA,SAASE,SAAT,CAAmBvB,EAAnB,EAAuBC,EAAvB,EAA2B37B,GAA3B,EAAgC;AAC9B,MAAI+B,CAAC,GAAI45B,EAAE,IAAK,KAAK37B,GAAb,GAAsB07B,EAAE,KAAK17B,GAArC;AACA,SAAO+B,CAAC,KAAK,CAAb;AACD;;AACD,IAAIm7B,WAAW,GAAGD,SAAlB;;AAEA,SAASE,SAAT,CAAmBzB,EAAnB,EAAuBC,EAAvB,EAA2B37B,GAA3B,EAAgC;AAC9B,MAAI+B,CAAC,GAAI25B,EAAE,IAAK,KAAK17B,GAAb,GAAsB27B,EAAE,KAAK37B,GAArC;AACA,SAAO+B,CAAC,KAAK,CAAb;AACD;;AACD,IAAIq7B,WAAW,GAAGD,SAAlB;;AAEA,SAASE,QAAT,CAAkB3B,EAAlB,EAAsBC,EAAtB,EAA0B37B,GAA1B,EAA+B;AAC7B,SAAO07B,EAAE,KAAK17B,GAAd;AACD;;AACD,IAAIs9B,UAAU,GAAGD,QAAjB;;AAEA,SAASE,QAAT,CAAkB7B,EAAlB,EAAsBC,EAAtB,EAA0B37B,GAA1B,EAA+B;AAC7B,MAAI+B,CAAC,GAAI25B,EAAE,IAAK,KAAK17B,GAAb,GAAsB27B,EAAE,KAAK37B,GAArC;AACA,SAAO+B,CAAC,KAAK,CAAb;AACD;;AACD,IAAIy7B,UAAU,GAAGD,QAAjB;AAEA,IAAIE,KAAK,GAAG;AACX5+B,EAAAA,QAAQ,EAAE46B,UADC;AAEXz4B,EAAAA,OAAO,EAAE44B,SAFE;AAGXlX,EAAAA,KAAK,EAAEqX,OAHI;AAIXC,EAAAA,KAAK,EAAEC,OAJI;AAKXC,EAAAA,OAAO,EAAEE,SALE;AAMXN,EAAAA,KAAK,EAAEO,OANI;AAOXF,EAAAA,KAAK,EAAEG,OAPI;AAQXC,EAAAA,MAAM,EAAEC,QARG;AASXC,EAAAA,OAAO,EAAEC,SATE;AAUXC,EAAAA,MAAM,EAAEC,QAVG;AAWXC,EAAAA,MAAM,EAAEC,QAXG;AAYXC,EAAAA,KAAK,EAAEC,OAZI;AAaXC,EAAAA,OAAO,EAAEC,SAbE;AAcXC,EAAAA,OAAO,EAAEC,SAdE;AAeXC,EAAAA,OAAO,EAAEC,SAfE;AAgBXC,EAAAA,KAAK,EAAEO,OAhBI;AAiBXC,EAAAA,QAAQ,EAAEC,UAjBC;AAkBXC,EAAAA,QAAQ,EAAEC,UAlBC;AAmBXC,EAAAA,UAAU,EAAEK,YAnBD;AAoBXC,EAAAA,UAAU,EAAEC,YApBD;AAqBXC,EAAAA,UAAU,EAAEG,YArBD;AAsBXC,EAAAA,UAAU,EAAEC,YAtBD;AAuBXC,EAAAA,SAAS,EAAEC,WAvBA;AAwBXC,EAAAA,SAAS,EAAEC,WAxBA;AAyBXC,EAAAA,QAAQ,EAAEC,UAzBC;AA0BXC,EAAAA,QAAQ,EAAEC;AA1BC,CAAZ;;AA6BA,SAASE,SAAT,GAAqB;AACnB,OAAKC,OAAL,GAAe,IAAf;AACA,OAAKC,YAAL,GAAoB,CAApB;AACA,OAAKC,SAAL,GAAiB,KAAK1+B,WAAL,CAAiB0+B,SAAlC;AACA,OAAKC,OAAL,GAAe,KAAK3+B,WAAL,CAAiB2+B,OAAhC;AACA,OAAKC,YAAL,GAAoB,KAAK5+B,WAAL,CAAiB4+B,YAArC;AACA,OAAKC,SAAL,GAAiB,KAAK7+B,WAAL,CAAiB6+B,SAAjB,GAA6B,CAA9C;AACA,OAAKz+B,MAAL,GAAc,KAAd;AAEA,OAAK0+B,OAAL,GAAe,KAAKJ,SAAL,GAAiB,CAAhC;AACA,OAAKK,QAAL,GAAgB,KAAKL,SAAL,GAAiB,EAAjC;AACD;;AACD,IAAIM,WAAW,GAAGT,SAAlB;;AAEAA,SAAS,CAACx+B,SAAV,CAAoBmnB,MAApB,GAA6B,SAASA,MAAT,CAAgB1nB,GAAhB,EAAqBg7B,GAArB,EAA0B;AACrD;AACAh7B,EAAAA,GAAG,GAAG8+B,KAAK,CAACz8B,OAAN,CAAcrC,GAAd,EAAmBg7B,GAAnB,CAAN;AACA,MAAI,CAAC,KAAKgE,OAAV,EACE,KAAKA,OAAL,GAAeh/B,GAAf,CADF,KAGE,KAAKg/B,OAAL,GAAe,KAAKA,OAAL,CAAane,MAAb,CAAoB7gB,GAApB,CAAf;AACF,OAAKi/B,YAAL,IAAqBj/B,GAAG,CAACgB,MAAzB,CAPqD,CASrD;;AACA,MAAI,KAAKg+B,OAAL,CAAah+B,MAAb,IAAuB,KAAKs+B,OAAhC,EAAyC;AACvCt/B,IAAAA,GAAG,GAAG,KAAKg/B,OAAX,CADuC,CAGvC;;AACA,QAAI57B,CAAC,GAAGpD,GAAG,CAACgB,MAAJ,GAAa,KAAKs+B,OAA1B;AACA,SAAKN,OAAL,GAAeh/B,GAAG,CAAC6f,KAAJ,CAAU7f,GAAG,CAACgB,MAAJ,GAAaoC,CAAvB,EAA0BpD,GAAG,CAACgB,MAA9B,CAAf;AACA,QAAI,KAAKg+B,OAAL,CAAah+B,MAAb,KAAwB,CAA5B,EACE,KAAKg+B,OAAL,GAAe,IAAf;AAEFh/B,IAAAA,GAAG,GAAG8+B,KAAK,CAAClD,MAAN,CAAa57B,GAAb,EAAkB,CAAlB,EAAqBA,GAAG,CAACgB,MAAJ,GAAaoC,CAAlC,EAAqC,KAAKxC,MAA1C,CAAN;;AACA,SAAK,IAAI4B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGxC,GAAG,CAACgB,MAAxB,EAAgCwB,CAAC,IAAI,KAAK+8B,QAA1C,EACE,KAAKE,OAAL,CAAaz/B,GAAb,EAAkBwC,CAAlB,EAAqBA,CAAC,GAAG,KAAK+8B,QAA9B;AACH;;AAED,SAAO,IAAP;AACD,CAzBD;;AA2BAR,SAAS,CAACx+B,SAAV,CAAoB8oB,MAApB,GAA6B,SAASA,MAAT,CAAgB2R,GAAhB,EAAqB;AAChD,OAAKtT,MAAL,CAAY,KAAKgY,IAAL,EAAZ;AACAjF,EAAAA,kBAAkB,CAAC,KAAKuE,OAAL,KAAiB,IAAlB,CAAlB;AAEA,SAAO,KAAKW,OAAL,CAAa3E,GAAb,CAAP;AACD,CALD;;AAOA+D,SAAS,CAACx+B,SAAV,CAAoBm/B,IAApB,GAA2B,SAASE,GAAT,GAAe;AACxC,MAAIl8B,GAAG,GAAG,KAAKu7B,YAAf;AACA,MAAIvc,KAAK,GAAG,KAAK4c,OAAjB;AACA,MAAIx2B,CAAC,GAAG4Z,KAAK,GAAI,CAAChf,GAAG,GAAG,KAAK27B,SAAZ,IAAyB3c,KAA1C;AACA,MAAI5c,GAAG,GAAG,IAAIxE,KAAJ,CAAUwH,CAAC,GAAG,KAAKu2B,SAAnB,CAAV;AACAv5B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,IAAT;;AACA,OAAK,IAAItD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsG,CAApB,EAAuBtG,CAAC,EAAxB,EACEsD,GAAG,CAACtD,CAAD,CAAH,GAAS,CAAT,CAPsC,CASxC;;;AACAkB,EAAAA,GAAG,KAAK,CAAR;;AACA,MAAI,KAAK9C,MAAL,KAAgB,KAApB,EAA2B;AACzB,SAAK,IAAIyF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKg5B,SAAzB,EAAoCh5B,CAAC,EAArC,EACEP,GAAG,CAACtD,CAAC,EAAF,CAAH,GAAW,CAAX;;AAEFsD,IAAAA,GAAG,CAACtD,CAAC,EAAF,CAAH,GAAW,CAAX;AACAsD,IAAAA,GAAG,CAACtD,CAAC,EAAF,CAAH,GAAW,CAAX;AACAsD,IAAAA,GAAG,CAACtD,CAAC,EAAF,CAAH,GAAW,CAAX;AACAsD,IAAAA,GAAG,CAACtD,CAAC,EAAF,CAAH,GAAW,CAAX;AACAsD,IAAAA,GAAG,CAACtD,CAAC,EAAF,CAAH,GAAYkB,GAAG,KAAK,EAAT,GAAe,IAA1B;AACAoC,IAAAA,GAAG,CAACtD,CAAC,EAAF,CAAH,GAAYkB,GAAG,KAAK,EAAT,GAAe,IAA1B;AACAoC,IAAAA,GAAG,CAACtD,CAAC,EAAF,CAAH,GAAYkB,GAAG,KAAK,CAAT,GAAc,IAAzB;AACAoC,IAAAA,GAAG,CAACtD,CAAC,EAAF,CAAH,GAAWkB,GAAG,GAAG,IAAjB;AACD,GAZD,MAYO;AACLoC,IAAAA,GAAG,CAACtD,CAAC,EAAF,CAAH,GAAWkB,GAAG,GAAG,IAAjB;AACAoC,IAAAA,GAAG,CAACtD,CAAC,EAAF,CAAH,GAAYkB,GAAG,KAAK,CAAT,GAAc,IAAzB;AACAoC,IAAAA,GAAG,CAACtD,CAAC,EAAF,CAAH,GAAYkB,GAAG,KAAK,EAAT,GAAe,IAA1B;AACAoC,IAAAA,GAAG,CAACtD,CAAC,EAAF,CAAH,GAAYkB,GAAG,KAAK,EAAT,GAAe,IAA1B;AACAoC,IAAAA,GAAG,CAACtD,CAAC,EAAF,CAAH,GAAW,CAAX;AACAsD,IAAAA,GAAG,CAACtD,CAAC,EAAF,CAAH,GAAW,CAAX;AACAsD,IAAAA,GAAG,CAACtD,CAAC,EAAF,CAAH,GAAW,CAAX;AACAsD,IAAAA,GAAG,CAACtD,CAAC,EAAF,CAAH,GAAW,CAAX;;AAEA,SAAK6D,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,KAAKg5B,SAArB,EAAgCh5B,CAAC,EAAjC,EACEP,GAAG,CAACtD,CAAC,EAAF,CAAH,GAAW,CAAX;AACH;;AAED,SAAOsD,GAAP;AACD,CAtCD;;AAwCA,IAAI+5B,MAAM,GAAG;AACZd,EAAAA,SAAS,EAAES;AADC,CAAb;AAIA,IAAIM,QAAQ,GAAGhB,KAAK,CAAC9C,MAArB;;AAEA,SAAS+D,IAAT,CAAcrwB,CAAd,EAAiBd,CAAjB,EAAoBC,CAApB,EAAuB8K,CAAvB,EAA0B;AACxB,MAAIjK,CAAC,KAAK,CAAV,EACE,OAAOswB,IAAI,CAACpxB,CAAD,EAAIC,CAAJ,EAAO8K,CAAP,CAAX;AACF,MAAIjK,CAAC,KAAK,CAAN,IAAWA,CAAC,KAAK,CAArB,EACE,OAAOuwB,GAAG,CAACrxB,CAAD,EAAIC,CAAJ,EAAO8K,CAAP,CAAV;AACF,MAAIjK,CAAC,KAAK,CAAV,EACE,OAAOwwB,KAAK,CAACtxB,CAAD,EAAIC,CAAJ,EAAO8K,CAAP,CAAZ;AACH;;AACD,IAAIwmB,MAAM,GAAGJ,IAAb;;AAEA,SAASC,IAAT,CAAcpxB,CAAd,EAAiBC,CAAjB,EAAoB8K,CAApB,EAAuB;AACrB,SAAQ/K,CAAC,GAAGC,CAAL,GAAY,CAACD,CAAF,GAAO+K,CAAzB;AACD;;AACD,IAAIymB,MAAM,GAAGJ,IAAb;;AAEA,SAASE,KAAT,CAAetxB,CAAf,EAAkBC,CAAlB,EAAqB8K,CAArB,EAAwB;AACtB,SAAQ/K,CAAC,GAAGC,CAAL,GAAWD,CAAC,GAAG+K,CAAf,GAAqB9K,CAAC,GAAG8K,CAAhC;AACD;;AACD,IAAI0mB,OAAO,GAAGH,KAAd;;AAEA,SAASD,GAAT,CAAarxB,CAAb,EAAgBC,CAAhB,EAAmB8K,CAAnB,EAAsB;AACpB,SAAO/K,CAAC,GAAGC,CAAJ,GAAQ8K,CAAf;AACD;;AACD,IAAI2mB,KAAK,GAAGL,GAAZ;;AAEA,SAASM,MAAT,CAAgB3xB,CAAhB,EAAmB;AACjB,SAAOkxB,QAAQ,CAAClxB,CAAD,EAAI,CAAJ,CAAR,GAAiBkxB,QAAQ,CAAClxB,CAAD,EAAI,EAAJ,CAAzB,GAAmCkxB,QAAQ,CAAClxB,CAAD,EAAI,EAAJ,CAAlD;AACD;;AACD,IAAI4xB,QAAQ,GAAGD,MAAf;;AAEA,SAASE,MAAT,CAAgB7xB,CAAhB,EAAmB;AACjB,SAAOkxB,QAAQ,CAAClxB,CAAD,EAAI,CAAJ,CAAR,GAAiBkxB,QAAQ,CAAClxB,CAAD,EAAI,EAAJ,CAAzB,GAAmCkxB,QAAQ,CAAClxB,CAAD,EAAI,EAAJ,CAAlD;AACD;;AACD,IAAI8xB,QAAQ,GAAGD,MAAf;;AAEA,SAASE,MAAT,CAAgB/xB,CAAhB,EAAmB;AACjB,SAAOkxB,QAAQ,CAAClxB,CAAD,EAAI,CAAJ,CAAR,GAAiBkxB,QAAQ,CAAClxB,CAAD,EAAI,EAAJ,CAAzB,GAAoCA,CAAC,KAAK,CAAjD;AACD;;AACD,IAAIgyB,QAAQ,GAAGD,MAAf;;AAEA,SAASE,MAAT,CAAgBjyB,CAAhB,EAAmB;AACjB,SAAOkxB,QAAQ,CAAClxB,CAAD,EAAI,EAAJ,CAAR,GAAkBkxB,QAAQ,CAAClxB,CAAD,EAAI,EAAJ,CAA1B,GAAqCA,CAAC,KAAK,EAAlD;AACD;;AACD,IAAIkyB,QAAQ,GAAGD,MAAf;AAEA,IAAIE,QAAQ,GAAG;AACdhB,EAAAA,IAAI,EAAEI,MADQ;AAEdH,EAAAA,IAAI,EAAEI,MAFQ;AAGdF,EAAAA,KAAK,EAAEG,OAHO;AAIdJ,EAAAA,GAAG,EAAEK,KAJS;AAKdC,EAAAA,MAAM,EAAEC,QALM;AAMdC,EAAAA,MAAM,EAAEC,QANM;AAOdC,EAAAA,MAAM,EAAEC,QAPM;AAQdC,EAAAA,MAAM,EAAEC;AARM,CAAf;AAWA,IAAIE,QAAQ,GAAGlC,KAAK,CAAC5C,MAArB;AACA,IAAI+E,OAAO,GAAGnC,KAAK,CAAC1C,KAApB;AACA,IAAI8E,SAAS,GAAGpC,KAAK,CAACpC,OAAtB;AACA,IAAIyE,MAAM,GAAGJ,QAAQ,CAAChB,IAAtB;AACA,IAAIqB,WAAW,GAAGvB,MAAM,CAACd,SAAzB;AAEA,IAAIsC,MAAM,GAAG,CACX,UADW,EACC,UADD,EAEX,UAFW,EAEC,UAFD,CAAb;;AAKA,SAASC,IAAT,GAAgB;AACd,MAAI,EAAE,gBAAgBA,IAAlB,CAAJ,EACE,OAAO,IAAIA,IAAJ,EAAP;AAEFF,EAAAA,WAAW,CAACxoB,IAAZ,CAAiB,IAAjB;AACA,OAAKxG,CAAL,GAAS,CACP,UADO,EACK,UADL,EACiB,UADjB,EAEP,UAFO,EAEK,UAFL,CAAT;AAGA,OAAKmvB,CAAL,GAAS,IAAIjgC,KAAJ,CAAU,EAAV,CAAT;AACD;;AAEDw9B,KAAK,CAAC5+B,QAAN,CAAeohC,IAAf,EAAqBF,WAArB;AACA,IAAII,EAAE,GAAGF,IAAT;AAEAA,IAAI,CAACpC,SAAL,GAAiB,GAAjB;AACAoC,IAAI,CAACnC,OAAL,GAAe,GAAf;AACAmC,IAAI,CAAClC,YAAL,GAAoB,EAApB;AACAkC,IAAI,CAACjC,SAAL,GAAiB,EAAjB;;AAEAiC,IAAI,CAAC/gC,SAAL,CAAek/B,OAAf,GAAyB,SAASA,OAAT,CAAiBz/B,GAAjB,EAAsBkC,KAAtB,EAA6B;AACpD,MAAIq/B,CAAC,GAAG,KAAKA,CAAb;;AAEA,OAAK,IAAI/+B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EACE++B,CAAC,CAAC/+B,CAAD,CAAD,GAAOxC,GAAG,CAACkC,KAAK,GAAGM,CAAT,CAAV;;AAEF,SAAMA,CAAC,GAAG++B,CAAC,CAACvgC,MAAZ,EAAoBwB,CAAC,EAArB,EACE++B,CAAC,CAAC/+B,CAAD,CAAD,GAAOw+B,QAAQ,CAACO,CAAC,CAAC/+B,CAAC,GAAG,CAAL,CAAD,GAAW++B,CAAC,CAAC/+B,CAAC,GAAG,CAAL,CAAZ,GAAsB++B,CAAC,CAAC/+B,CAAC,GAAG,EAAL,CAAvB,GAAkC++B,CAAC,CAAC/+B,CAAC,GAAG,EAAL,CAApC,EAA8C,CAA9C,CAAf;;AAEF,MAAIyF,CAAC,GAAG,KAAKmK,CAAL,CAAO,CAAP,CAAR;AACA,MAAIrM,CAAC,GAAG,KAAKqM,CAAL,CAAO,CAAP,CAAR;AACA,MAAIpP,CAAC,GAAG,KAAKoP,CAAL,CAAO,CAAP,CAAR;AACA,MAAIif,CAAC,GAAG,KAAKjf,CAAL,CAAO,CAAP,CAAR;AACA,MAAI3U,CAAC,GAAG,KAAK2U,CAAL,CAAO,CAAP,CAAR;;AAEA,OAAK5P,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG++B,CAAC,CAACvgC,MAAlB,EAA0BwB,CAAC,EAA3B,EAA+B;AAC7B,QAAIkN,CAAC,GAAG,CAAC,EAAElN,CAAC,GAAG,EAAN,CAAT;AACA,QAAI6D,CAAC,GAAG66B,SAAS,CAACF,QAAQ,CAAC/4B,CAAD,EAAI,CAAJ,CAAT,EAAiBk5B,MAAM,CAACzxB,CAAD,EAAI3J,CAAJ,EAAO/C,CAAP,EAAUquB,CAAV,CAAvB,EAAqC5zB,CAArC,EAAwC8jC,CAAC,CAAC/+B,CAAD,CAAzC,EAA8C6+B,MAAM,CAAC3xB,CAAD,CAApD,CAAjB;AACAjS,IAAAA,CAAC,GAAG4zB,CAAJ;AACAA,IAAAA,CAAC,GAAGruB,CAAJ;AACAA,IAAAA,CAAC,GAAGg+B,QAAQ,CAACj7B,CAAD,EAAI,EAAJ,CAAZ;AACAA,IAAAA,CAAC,GAAGkC,CAAJ;AACAA,IAAAA,CAAC,GAAG5B,CAAJ;AACD;;AAED,OAAK+L,CAAL,CAAO,CAAP,IAAY6uB,OAAO,CAAC,KAAK7uB,CAAL,CAAO,CAAP,CAAD,EAAYnK,CAAZ,CAAnB;AACA,OAAKmK,CAAL,CAAO,CAAP,IAAY6uB,OAAO,CAAC,KAAK7uB,CAAL,CAAO,CAAP,CAAD,EAAYrM,CAAZ,CAAnB;AACA,OAAKqM,CAAL,CAAO,CAAP,IAAY6uB,OAAO,CAAC,KAAK7uB,CAAL,CAAO,CAAP,CAAD,EAAYpP,CAAZ,CAAnB;AACA,OAAKoP,CAAL,CAAO,CAAP,IAAY6uB,OAAO,CAAC,KAAK7uB,CAAL,CAAO,CAAP,CAAD,EAAYif,CAAZ,CAAnB;AACA,OAAKjf,CAAL,CAAO,CAAP,IAAY6uB,OAAO,CAAC,KAAK7uB,CAAL,CAAO,CAAP,CAAD,EAAY3U,CAAZ,CAAnB;AACD,CA9BD;;AAgCA6jC,IAAI,CAAC/gC,SAAL,CAAeo/B,OAAf,GAAyB,SAAStW,MAAT,CAAgB2R,GAAhB,EAAqB;AAC5C,MAAIA,GAAG,KAAK,KAAZ,EACE,OAAO8D,KAAK,CAACvD,OAAN,CAAc,KAAKnpB,CAAnB,EAAsB,KAAtB,CAAP,CADF,KAGE,OAAO0sB,KAAK,CAAChD,OAAN,CAAc,KAAK1pB,CAAnB,EAAsB,KAAtB,CAAP;AACH,CALD;;AAOA,IAAIqvB,OAAO,GAAG3C,KAAK,CAAC1C,KAApB;AACA,IAAIsF,SAAS,GAAG5C,KAAK,CAACtC,OAAtB;AACA,IAAImF,SAAS,GAAG7C,KAAK,CAACpC,OAAtB;AACA,IAAIkF,MAAM,GAAGb,QAAQ,CAACf,IAAtB;AACA,IAAI6B,OAAO,GAAGd,QAAQ,CAACb,KAAvB;AACA,IAAI4B,QAAQ,GAAGf,QAAQ,CAACR,MAAxB;AACA,IAAIwB,QAAQ,GAAGhB,QAAQ,CAACN,MAAxB;AACA,IAAIuB,QAAQ,GAAGjB,QAAQ,CAACJ,MAAxB;AACA,IAAIsB,QAAQ,GAAGlB,QAAQ,CAACF,MAAxB;AAEA,IAAIqB,WAAW,GAAGrC,MAAM,CAACd,SAAzB;AAEA,IAAIoD,QAAQ,GAAG,CACb,UADa,EACD,UADC,EACW,UADX,EACuB,UADvB,EAEb,UAFa,EAED,UAFC,EAEW,UAFX,EAEuB,UAFvB,EAGb,UAHa,EAGD,UAHC,EAGW,UAHX,EAGuB,UAHvB,EAIb,UAJa,EAID,UAJC,EAIW,UAJX,EAIuB,UAJvB,EAKb,UALa,EAKD,UALC,EAKW,UALX,EAKuB,UALvB,EAMb,UANa,EAMD,UANC,EAMW,UANX,EAMuB,UANvB,EAOb,UAPa,EAOD,UAPC,EAOW,UAPX,EAOuB,UAPvB,EAQb,UARa,EAQD,UARC,EAQW,UARX,EAQuB,UARvB,EASb,UATa,EASD,UATC,EASW,UATX,EASuB,UATvB,EAUb,UAVa,EAUD,UAVC,EAUW,UAVX,EAUuB,UAVvB,EAWb,UAXa,EAWD,UAXC,EAWW,UAXX,EAWuB,UAXvB,EAYb,UAZa,EAYD,UAZC,EAYW,UAZX,EAYuB,UAZvB,EAab,UAba,EAaD,UAbC,EAaW,UAbX,EAauB,UAbvB,EAcb,UAda,EAcD,UAdC,EAcW,UAdX,EAcuB,UAdvB,EAeb,UAfa,EAeD,UAfC,EAeW,UAfX,EAeuB,UAfvB,EAgBb,UAhBa,EAgBD,UAhBC,EAgBW,UAhBX,EAgBuB,UAhBvB,CAAf;;AAmBA,SAASC,MAAT,GAAkB;AAChB,MAAI,EAAE,gBAAgBA,MAAlB,CAAJ,EACE,OAAO,IAAIA,MAAJ,EAAP;AAEFF,EAAAA,WAAW,CAACtpB,IAAZ,CAAiB,IAAjB;AACA,OAAKxG,CAAL,GAAS,CACP,UADO,EACK,UADL,EACiB,UADjB,EAC6B,UAD7B,EAEP,UAFO,EAEK,UAFL,EAEiB,UAFjB,EAE6B,UAF7B,CAAT;AAIA,OAAKtJ,CAAL,GAASq5B,QAAT;AACA,OAAKZ,CAAL,GAAS,IAAIjgC,KAAJ,CAAU,EAAV,CAAT;AACD;;AACDw9B,KAAK,CAAC5+B,QAAN,CAAekiC,MAAf,EAAuBF,WAAvB;AACA,IAAIG,IAAI,GAAGD,MAAX;AAEAA,MAAM,CAAClD,SAAP,GAAmB,GAAnB;AACAkD,MAAM,CAACjD,OAAP,GAAiB,GAAjB;AACAiD,MAAM,CAAChD,YAAP,GAAsB,GAAtB;AACAgD,MAAM,CAAC/C,SAAP,GAAmB,EAAnB;;AAEA+C,MAAM,CAAC7hC,SAAP,CAAiBk/B,OAAjB,GAA2B,SAASA,OAAT,CAAiBz/B,GAAjB,EAAsBkC,KAAtB,EAA6B;AACtD,MAAIq/B,CAAC,GAAG,KAAKA,CAAb;;AAEA,OAAK,IAAI/+B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EACE++B,CAAC,CAAC/+B,CAAD,CAAD,GAAOxC,GAAG,CAACkC,KAAK,GAAGM,CAAT,CAAV;;AACF,SAAOA,CAAC,GAAG++B,CAAC,CAACvgC,MAAb,EAAqBwB,CAAC,EAAtB,EACE++B,CAAC,CAAC/+B,CAAD,CAAD,GAAOk/B,SAAS,CAACO,QAAQ,CAACV,CAAC,CAAC/+B,CAAC,GAAG,CAAL,CAAF,CAAT,EAAqB++B,CAAC,CAAC/+B,CAAC,GAAG,CAAL,CAAtB,EAA+Bw/B,QAAQ,CAACT,CAAC,CAAC/+B,CAAC,GAAG,EAAL,CAAF,CAAvC,EAAoD++B,CAAC,CAAC/+B,CAAC,GAAG,EAAL,CAArD,CAAhB;;AAEF,MAAIyF,CAAC,GAAG,KAAKmK,CAAL,CAAO,CAAP,CAAR;AACA,MAAIrM,CAAC,GAAG,KAAKqM,CAAL,CAAO,CAAP,CAAR;AACA,MAAIpP,CAAC,GAAG,KAAKoP,CAAL,CAAO,CAAP,CAAR;AACA,MAAIif,CAAC,GAAG,KAAKjf,CAAL,CAAO,CAAP,CAAR;AACA,MAAI3U,CAAC,GAAG,KAAK2U,CAAL,CAAO,CAAP,CAAR;AACA,MAAI4W,CAAC,GAAG,KAAK5W,CAAL,CAAO,CAAP,CAAR;AACA,MAAIqC,CAAC,GAAG,KAAKrC,CAAL,CAAO,CAAP,CAAR;AACA,MAAIA,CAAC,GAAG,KAAKA,CAAL,CAAO,CAAP,CAAR;AAEAqoB,EAAAA,kBAAkB,CAAC,KAAK3xB,CAAL,CAAO9H,MAAP,KAAkBugC,CAAC,CAACvgC,MAArB,CAAlB;;AACA,OAAKwB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG++B,CAAC,CAACvgC,MAAlB,EAA0BwB,CAAC,EAA3B,EAA+B;AAC7B,QAAI8/B,EAAE,GAAGX,SAAS,CAACvvB,CAAD,EAAI2vB,QAAQ,CAACtkC,CAAD,CAAZ,EAAiBmkC,MAAM,CAACnkC,CAAD,EAAIurB,CAAJ,EAAOvU,CAAP,CAAvB,EAAkC,KAAK3L,CAAL,CAAOtG,CAAP,CAAlC,EAA6C++B,CAAC,CAAC/+B,CAAD,CAA9C,CAAlB;AACA,QAAI+/B,EAAE,GAAGd,OAAO,CAACK,QAAQ,CAAC75B,CAAD,CAAT,EAAc45B,OAAO,CAAC55B,CAAD,EAAIlC,CAAJ,EAAO/C,CAAP,CAArB,CAAhB;AACAoP,IAAAA,CAAC,GAAGqC,CAAJ;AACAA,IAAAA,CAAC,GAAGuU,CAAJ;AACAA,IAAAA,CAAC,GAAGvrB,CAAJ;AACAA,IAAAA,CAAC,GAAGgkC,OAAO,CAACpQ,CAAD,EAAIiR,EAAJ,CAAX;AACAjR,IAAAA,CAAC,GAAGruB,CAAJ;AACAA,IAAAA,CAAC,GAAG+C,CAAJ;AACAA,IAAAA,CAAC,GAAGkC,CAAJ;AACAA,IAAAA,CAAC,GAAGw5B,OAAO,CAACa,EAAD,EAAKC,EAAL,CAAX;AACD;;AAED,OAAKnwB,CAAL,CAAO,CAAP,IAAYqvB,OAAO,CAAC,KAAKrvB,CAAL,CAAO,CAAP,CAAD,EAAYnK,CAAZ,CAAnB;AACA,OAAKmK,CAAL,CAAO,CAAP,IAAYqvB,OAAO,CAAC,KAAKrvB,CAAL,CAAO,CAAP,CAAD,EAAYrM,CAAZ,CAAnB;AACA,OAAKqM,CAAL,CAAO,CAAP,IAAYqvB,OAAO,CAAC,KAAKrvB,CAAL,CAAO,CAAP,CAAD,EAAYpP,CAAZ,CAAnB;AACA,OAAKoP,CAAL,CAAO,CAAP,IAAYqvB,OAAO,CAAC,KAAKrvB,CAAL,CAAO,CAAP,CAAD,EAAYif,CAAZ,CAAnB;AACA,OAAKjf,CAAL,CAAO,CAAP,IAAYqvB,OAAO,CAAC,KAAKrvB,CAAL,CAAO,CAAP,CAAD,EAAY3U,CAAZ,CAAnB;AACA,OAAK2U,CAAL,CAAO,CAAP,IAAYqvB,OAAO,CAAC,KAAKrvB,CAAL,CAAO,CAAP,CAAD,EAAY4W,CAAZ,CAAnB;AACA,OAAK5W,CAAL,CAAO,CAAP,IAAYqvB,OAAO,CAAC,KAAKrvB,CAAL,CAAO,CAAP,CAAD,EAAYqC,CAAZ,CAAnB;AACA,OAAKrC,CAAL,CAAO,CAAP,IAAYqvB,OAAO,CAAC,KAAKrvB,CAAL,CAAO,CAAP,CAAD,EAAYA,CAAZ,CAAnB;AACD,CAvCD;;AAyCAgwB,MAAM,CAAC7hC,SAAP,CAAiBo/B,OAAjB,GAA2B,SAAStW,MAAT,CAAgB2R,GAAhB,EAAqB;AAC9C,MAAIA,GAAG,KAAK,KAAZ,EACE,OAAO8D,KAAK,CAACvD,OAAN,CAAc,KAAKnpB,CAAnB,EAAsB,KAAtB,CAAP,CADF,KAGE,OAAO0sB,KAAK,CAAChD,OAAN,CAAc,KAAK1pB,CAAnB,EAAsB,KAAtB,CAAP;AACH,CALD;;AAOA,SAASowB,MAAT,GAAkB;AAChB,MAAI,EAAE,gBAAgBA,MAAlB,CAAJ,EACE,OAAO,IAAIA,MAAJ,EAAP;;AAEFH,EAAAA,IAAI,CAACzpB,IAAL,CAAU,IAAV;;AACA,OAAKxG,CAAL,GAAS,CACP,UADO,EACK,UADL,EACiB,UADjB,EAC6B,UAD7B,EAEP,UAFO,EAEK,UAFL,EAEiB,UAFjB,EAE6B,UAF7B,CAAT;AAGD;;AACD0sB,KAAK,CAAC5+B,QAAN,CAAesiC,MAAf,EAAuBH,IAAvB;AACA,IAAII,IAAI,GAAGD,MAAX;AAEAA,MAAM,CAACtD,SAAP,GAAmB,GAAnB;AACAsD,MAAM,CAACrD,OAAP,GAAiB,GAAjB;AACAqD,MAAM,CAACpD,YAAP,GAAsB,GAAtB;AACAoD,MAAM,CAACnD,SAAP,GAAmB,EAAnB;;AAEAmD,MAAM,CAACjiC,SAAP,CAAiBo/B,OAAjB,GAA2B,SAAStW,MAAT,CAAgB2R,GAAhB,EAAqB;AAC9C;AACA,MAAIA,GAAG,KAAK,KAAZ,EACE,OAAO8D,KAAK,CAACvD,OAAN,CAAc,KAAKnpB,CAAL,CAAOyN,KAAP,CAAa,CAAb,EAAgB,CAAhB,CAAd,EAAkC,KAAlC,CAAP,CADF,KAGE,OAAOif,KAAK,CAAChD,OAAN,CAAc,KAAK1pB,CAAL,CAAOyN,KAAP,CAAa,CAAb,EAAgB,CAAhB,CAAd,EAAkC,KAAlC,CAAP;AACH,CAND;;AAQA,IAAI6iB,WAAW,GAAG5D,KAAK,CAACR,SAAxB;AACA,IAAIqE,WAAW,GAAG7D,KAAK,CAACN,SAAxB;AACA,IAAIoE,UAAU,GAAG9D,KAAK,CAACJ,QAAvB;AACA,IAAImE,UAAU,GAAG/D,KAAK,CAACF,QAAvB;AACA,IAAIkE,OAAO,GAAGhE,KAAK,CAAClC,KAApB;AACA,IAAImG,UAAU,GAAGjE,KAAK,CAAC1B,QAAvB;AACA,IAAI4F,UAAU,GAAGlE,KAAK,CAACxB,QAAvB;AACA,IAAI2F,YAAY,GAAGnE,KAAK,CAACtB,UAAzB;AACA,IAAI0F,YAAY,GAAGpE,KAAK,CAAChB,UAAzB;AACA,IAAIqF,YAAY,GAAGrE,KAAK,CAACd,UAAzB;AACA,IAAIoF,YAAY,GAAGtE,KAAK,CAACV,UAAzB;AAEA,IAAIiF,WAAW,GAAGxD,MAAM,CAACd,SAAzB;AAEA,IAAIuE,QAAQ,GAAG,CACb,UADa,EACD,UADC,EACW,UADX,EACuB,UADvB,EAEb,UAFa,EAED,UAFC,EAEW,UAFX,EAEuB,UAFvB,EAGb,UAHa,EAGD,UAHC,EAGW,UAHX,EAGuB,UAHvB,EAIb,UAJa,EAID,UAJC,EAIW,UAJX,EAIuB,UAJvB,EAKb,UALa,EAKD,UALC,EAKW,UALX,EAKuB,UALvB,EAMb,UANa,EAMD,UANC,EAMW,UANX,EAMuB,UANvB,EAOb,UAPa,EAOD,UAPC,EAOW,UAPX,EAOuB,UAPvB,EAQb,UARa,EAQD,UARC,EAQW,UARX,EAQuB,UARvB,EASb,UATa,EASD,UATC,EASW,UATX,EASuB,UATvB,EAUb,UAVa,EAUD,UAVC,EAUW,UAVX,EAUuB,UAVvB,EAWb,UAXa,EAWD,UAXC,EAWW,UAXX,EAWuB,UAXvB,EAYb,UAZa,EAYD,UAZC,EAYW,UAZX,EAYuB,UAZvB,EAab,UAba,EAaD,UAbC,EAaW,UAbX,EAauB,UAbvB,EAcb,UAda,EAcD,UAdC,EAcW,UAdX,EAcuB,UAdvB,EAeb,UAfa,EAeD,UAfC,EAeW,UAfX,EAeuB,UAfvB,EAgBb,UAhBa,EAgBD,UAhBC,EAgBW,UAhBX,EAgBuB,UAhBvB,EAiBb,UAjBa,EAiBD,UAjBC,EAiBW,UAjBX,EAiBuB,UAjBvB,EAkBb,UAlBa,EAkBD,UAlBC,EAkBW,UAlBX,EAkBuB,UAlBvB,EAmBb,UAnBa,EAmBD,UAnBC,EAmBW,UAnBX,EAmBuB,UAnBvB,EAoBb,UApBa,EAoBD,UApBC,EAoBW,UApBX,EAoBuB,UApBvB,EAqBb,UArBa,EAqBD,UArBC,EAqBW,UArBX,EAqBuB,UArBvB,EAsBb,UAtBa,EAsBD,UAtBC,EAsBW,UAtBX,EAsBuB,UAtBvB,EAuBb,UAvBa,EAuBD,UAvBC,EAuBW,UAvBX,EAuBuB,UAvBvB,EAwBb,UAxBa,EAwBD,UAxBC,EAwBW,UAxBX,EAwBuB,UAxBvB,EAyBb,UAzBa,EAyBD,UAzBC,EAyBW,UAzBX,EAyBuB,UAzBvB,EA0Bb,UA1Ba,EA0BD,UA1BC,EA0BW,UA1BX,EA0BuB,UA1BvB,EA2Bb,UA3Ba,EA2BD,UA3BC,EA2BW,UA3BX,EA2BuB,UA3BvB,EA4Bb,UA5Ba,EA4BD,UA5BC,EA4BW,UA5BX,EA4BuB,UA5BvB,EA6Bb,UA7Ba,EA6BD,UA7BC,EA6BW,UA7BX,EA6BuB,UA7BvB,EA8Bb,UA9Ba,EA8BD,UA9BC,EA8BW,UA9BX,EA8BuB,UA9BvB,EA+Bb,UA/Ba,EA+BD,UA/BC,EA+BW,UA/BX,EA+BuB,UA/BvB,EAgCb,UAhCa,EAgCD,UAhCC,EAgCW,UAhCX,EAgCuB,UAhCvB,EAiCb,UAjCa,EAiCD,UAjCC,EAiCW,UAjCX,EAiCuB,UAjCvB,EAkCb,UAlCa,EAkCD,UAlCC,EAkCW,UAlCX,EAkCuB,UAlCvB,EAmCb,UAnCa,EAmCD,UAnCC,EAmCW,UAnCX,EAmCuB,UAnCvB,EAoCb,UApCa,EAoCD,UApCC,EAoCW,UApCX,EAoCuB,UApCvB,EAqCb,UArCa,EAqCD,UArCC,EAqCW,UArCX,EAqCuB,UArCvB,EAsCb,UAtCa,EAsCD,UAtCC,EAsCW,UAtCX,EAsCuB,UAtCvB,EAuCb,UAvCa,EAuCD,UAvCC,EAuCW,UAvCX,EAuCuB,UAvCvB,EAwCb,UAxCa,EAwCD,UAxCC,EAwCW,UAxCX,EAwCuB,UAxCvB,CAAf;;AA2CA,SAASC,MAAT,GAAkB;AAChB,MAAI,EAAE,gBAAgBA,MAAlB,CAAJ,EACE,OAAO,IAAIA,MAAJ,EAAP;AAEFF,EAAAA,WAAW,CAACzqB,IAAZ,CAAiB,IAAjB;AACA,OAAKxG,CAAL,GAAS,CACP,UADO,EACK,UADL,EAEP,UAFO,EAEK,UAFL,EAGP,UAHO,EAGK,UAHL,EAIP,UAJO,EAIK,UAJL,EAKP,UALO,EAKK,UALL,EAMP,UANO,EAMK,UANL,EAOP,UAPO,EAOK,UAPL,EAQP,UARO,EAQK,UARL,CAAT;AASA,OAAKtJ,CAAL,GAASw6B,QAAT;AACA,OAAK/B,CAAL,GAAS,IAAIjgC,KAAJ,CAAU,GAAV,CAAT;AACD;;AACDw9B,KAAK,CAAC5+B,QAAN,CAAeqjC,MAAf,EAAuBF,WAAvB;AACA,IAAIG,IAAI,GAAGD,MAAX;AAEAA,MAAM,CAACrE,SAAP,GAAmB,IAAnB;AACAqE,MAAM,CAACpE,OAAP,GAAiB,GAAjB;AACAoE,MAAM,CAACnE,YAAP,GAAsB,GAAtB;AACAmE,MAAM,CAAClE,SAAP,GAAmB,GAAnB;;AAEAkE,MAAM,CAAChjC,SAAP,CAAiBkjC,aAAjB,GAAiC,SAASA,aAAT,CAAuBzjC,GAAvB,EAA4BkC,KAA5B,EAAmC;AAClE,MAAIq/B,CAAC,GAAG,KAAKA,CAAb,CADkE,CAGlE;;AACA,OAAK,IAAI/+B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EACE++B,CAAC,CAAC/+B,CAAD,CAAD,GAAOxC,GAAG,CAACkC,KAAK,GAAGM,CAAT,CAAV;;AACF,SAAOA,CAAC,GAAG++B,CAAC,CAACvgC,MAAb,EAAqBwB,CAAC,IAAI,CAA1B,EAA6B;AAC3B,QAAIkhC,KAAK,GAAGC,SAAS,CAACpC,CAAC,CAAC/+B,CAAC,GAAG,CAAL,CAAF,EAAW++B,CAAC,CAAC/+B,CAAC,GAAG,CAAL,CAAZ,CAArB,CAD2B,CACiB;;AAC5C,QAAIohC,KAAK,GAAGC,SAAS,CAACtC,CAAC,CAAC/+B,CAAC,GAAG,CAAL,CAAF,EAAW++B,CAAC,CAAC/+B,CAAC,GAAG,CAAL,CAAZ,CAArB;AACA,QAAIshC,KAAK,GAAGvC,CAAC,CAAC/+B,CAAC,GAAG,EAAL,CAAb,CAH2B,CAGH;;AACxB,QAAIuhC,KAAK,GAAGxC,CAAC,CAAC/+B,CAAC,GAAG,EAAL,CAAb;AACA,QAAIwhC,KAAK,GAAGC,SAAS,CAAC1C,CAAC,CAAC/+B,CAAC,GAAG,EAAL,CAAF,EAAY++B,CAAC,CAAC/+B,CAAC,GAAG,EAAL,CAAb,CAArB,CAL2B,CAKmB;;AAC9C,QAAI0hC,KAAK,GAAGC,SAAS,CAAC5C,CAAC,CAAC/+B,CAAC,GAAG,EAAL,CAAF,EAAY++B,CAAC,CAAC/+B,CAAC,GAAG,EAAL,CAAb,CAArB;AACA,QAAI4hC,KAAK,GAAG7C,CAAC,CAAC/+B,CAAC,GAAG,EAAL,CAAb,CAP2B,CAOH;;AACxB,QAAI6hC,KAAK,GAAG9C,CAAC,CAAC/+B,CAAC,GAAG,EAAL,CAAb;AAEA++B,IAAAA,CAAC,CAAC/+B,CAAD,CAAD,GAAOygC,YAAY,CACjBS,KADiB,EACVE,KADU,EAEjBE,KAFiB,EAEVC,KAFU,EAGjBC,KAHiB,EAGVE,KAHU,EAIjBE,KAJiB,EAIVC,KAJU,CAAnB;AAKA9C,IAAAA,CAAC,CAAC/+B,CAAC,GAAG,CAAL,CAAD,GAAW0gC,YAAY,CACrBQ,KADqB,EACdE,KADc,EAErBE,KAFqB,EAEdC,KAFc,EAGrBC,KAHqB,EAGdE,KAHc,EAIrBE,KAJqB,EAIdC,KAJc,CAAvB;AAKD;AACF,CA3BD;;AA6BAd,MAAM,CAAChjC,SAAP,CAAiBk/B,OAAjB,GAA2B,SAASA,OAAT,CAAiBz/B,GAAjB,EAAsBkC,KAAtB,EAA6B;AACtD,OAAKuhC,aAAL,CAAmBzjC,GAAnB,EAAwBkC,KAAxB;;AAEA,MAAIq/B,CAAC,GAAG,KAAKA,CAAb;AAEA,MAAIxE,EAAE,GAAG,KAAK3qB,CAAL,CAAO,CAAP,CAAT;AACA,MAAI4qB,EAAE,GAAG,KAAK5qB,CAAL,CAAO,CAAP,CAAT;AACA,MAAI6qB,EAAE,GAAG,KAAK7qB,CAAL,CAAO,CAAP,CAAT;AACA,MAAI8qB,EAAE,GAAG,KAAK9qB,CAAL,CAAO,CAAP,CAAT;AACA,MAAIqrB,EAAE,GAAG,KAAKrrB,CAAL,CAAO,CAAP,CAAT;AACA,MAAIsrB,EAAE,GAAG,KAAKtrB,CAAL,CAAO,CAAP,CAAT;AACA,MAAIurB,EAAE,GAAG,KAAKvrB,CAAL,CAAO,CAAP,CAAT;AACA,MAAIwrB,EAAE,GAAG,KAAKxrB,CAAL,CAAO,CAAP,CAAT;AACA,MAAI6rB,EAAE,GAAG,KAAK7rB,CAAL,CAAO,CAAP,CAAT;AACA,MAAI8rB,EAAE,GAAG,KAAK9rB,CAAL,CAAO,CAAP,CAAT;AACA,MAAIkyB,EAAE,GAAG,KAAKlyB,CAAL,CAAO,EAAP,CAAT;AACA,MAAImyB,EAAE,GAAG,KAAKnyB,CAAL,CAAO,EAAP,CAAT;AACA,MAAIoyB,EAAE,GAAG,KAAKpyB,CAAL,CAAO,EAAP,CAAT;AACA,MAAIqyB,EAAE,GAAG,KAAKryB,CAAL,CAAO,EAAP,CAAT;AACA,MAAIsyB,EAAE,GAAG,KAAKtyB,CAAL,CAAO,EAAP,CAAT;AACA,MAAIuyB,EAAE,GAAG,KAAKvyB,CAAL,CAAO,EAAP,CAAT;AAEAqoB,EAAAA,kBAAkB,CAAC,KAAK3xB,CAAL,CAAO9H,MAAP,KAAkBugC,CAAC,CAACvgC,MAArB,CAAlB;;AACA,OAAK,IAAIwB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG++B,CAAC,CAACvgC,MAAtB,EAA8BwB,CAAC,IAAI,CAAnC,EAAsC;AACpC,QAAIkhC,KAAK,GAAGgB,EAAZ;AACA,QAAId,KAAK,GAAGe,EAAZ;AACA,QAAIb,KAAK,GAAGc,SAAS,CAAC3G,EAAD,EAAKC,EAAL,CAArB;AACA,QAAI6F,KAAK,GAAGc,SAAS,CAAC5G,EAAD,EAAKC,EAAL,CAArB;AACA,QAAI8F,KAAK,GAAGc,OAAO,CAAC7G,EAAD,EAAKC,EAAL,EAASoG,EAAT,EAAaC,EAAb,EAAiBC,EAAjB,CAAnB;AACA,QAAIN,KAAK,GAAGa,OAAO,CAAC9G,EAAD,EAAKC,EAAL,EAASoG,EAAT,EAAaC,EAAb,EAAiBC,EAAjB,EAAqBC,EAArB,CAAnB;AACA,QAAIL,KAAK,GAAG,KAAKt7B,CAAL,CAAOtG,CAAP,CAAZ;AACA,QAAI6hC,KAAK,GAAG,KAAKv7B,CAAL,CAAOtG,CAAC,GAAG,CAAX,CAAZ;AACA,QAAIwiC,KAAK,GAAGzD,CAAC,CAAC/+B,CAAD,CAAb;AACA,QAAIyiC,KAAK,GAAG1D,CAAC,CAAC/+B,CAAC,GAAG,CAAL,CAAb;AAEA,QAAI0iC,KAAK,GAAG/B,YAAY,CACtBO,KADsB,EACfE,KADe,EAEtBE,KAFsB,EAEfC,KAFe,EAGtBC,KAHsB,EAGfE,KAHe,EAItBE,KAJsB,EAIfC,KAJe,EAKtBW,KALsB,EAKfC,KALe,CAAxB;AAMA,QAAIE,KAAK,GAAG/B,YAAY,CACtBM,KADsB,EACfE,KADe,EAEtBE,KAFsB,EAEfC,KAFe,EAGtBC,KAHsB,EAGfE,KAHe,EAItBE,KAJsB,EAIfC,KAJe,EAKtBW,KALsB,EAKfC,KALe,CAAxB;AAOAvB,IAAAA,KAAK,GAAG0B,SAAS,CAACrI,EAAD,EAAKC,EAAL,CAAjB;AACA4G,IAAAA,KAAK,GAAGyB,SAAS,CAACtI,EAAD,EAAKC,EAAL,CAAjB;AACA8G,IAAAA,KAAK,GAAGwB,QAAQ,CAACvI,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,EAAiBO,EAAjB,CAAhB;AACAsG,IAAAA,KAAK,GAAGwB,QAAQ,CAACxI,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,EAAiBO,EAAjB,EAAqBC,EAArB,CAAhB;AAEA,QAAI8H,KAAK,GAAGzC,UAAU,CAACW,KAAD,EAAQE,KAAR,EAAeE,KAAf,EAAsBC,KAAtB,CAAtB;AACA,QAAI0B,KAAK,GAAGzC,UAAU,CAACU,KAAD,EAAQE,KAAR,EAAeE,KAAf,EAAsBC,KAAtB,CAAtB;AAEAW,IAAAA,EAAE,GAAGF,EAAL;AACAG,IAAAA,EAAE,GAAGF,EAAL;AAEAD,IAAAA,EAAE,GAAGF,EAAL;AACAG,IAAAA,EAAE,GAAGF,EAAL;AAEAD,IAAAA,EAAE,GAAGrG,EAAL;AACAsG,IAAAA,EAAE,GAAGrG,EAAL;AAEAD,IAAAA,EAAE,GAAG8E,UAAU,CAACpF,EAAD,EAAKC,EAAL,EAASsH,KAAT,EAAgBC,KAAhB,CAAf;AACAjH,IAAAA,EAAE,GAAG8E,UAAU,CAACpF,EAAD,EAAKA,EAAL,EAASsH,KAAT,EAAgBC,KAAhB,CAAf;AAEAxH,IAAAA,EAAE,GAAGF,EAAL;AACAG,IAAAA,EAAE,GAAGF,EAAL;AAEAD,IAAAA,EAAE,GAAGR,EAAL;AACAS,IAAAA,EAAE,GAAGR,EAAL;AAEAD,IAAAA,EAAE,GAAGF,EAAL;AACAG,IAAAA,EAAE,GAAGF,EAAL;AAEAD,IAAAA,EAAE,GAAGgG,UAAU,CAACmC,KAAD,EAAQC,KAAR,EAAeK,KAAf,EAAsBC,KAAtB,CAAf;AACAzI,IAAAA,EAAE,GAAGgG,UAAU,CAACkC,KAAD,EAAQC,KAAR,EAAeK,KAAf,EAAsBC,KAAtB,CAAf;AACD;;AAED3C,EAAAA,OAAO,CAAC,KAAK1wB,CAAN,EAAS,CAAT,EAAY2qB,EAAZ,EAAgBC,EAAhB,CAAP;AACA8F,EAAAA,OAAO,CAAC,KAAK1wB,CAAN,EAAS,CAAT,EAAY6qB,EAAZ,EAAgBC,EAAhB,CAAP;AACA4F,EAAAA,OAAO,CAAC,KAAK1wB,CAAN,EAAS,CAAT,EAAYqrB,EAAZ,EAAgBC,EAAhB,CAAP;AACAoF,EAAAA,OAAO,CAAC,KAAK1wB,CAAN,EAAS,CAAT,EAAYurB,EAAZ,EAAgBC,EAAhB,CAAP;AACAkF,EAAAA,OAAO,CAAC,KAAK1wB,CAAN,EAAS,CAAT,EAAY6rB,EAAZ,EAAgBC,EAAhB,CAAP;AACA4E,EAAAA,OAAO,CAAC,KAAK1wB,CAAN,EAAS,EAAT,EAAakyB,EAAb,EAAiBC,EAAjB,CAAP;AACAzB,EAAAA,OAAO,CAAC,KAAK1wB,CAAN,EAAS,EAAT,EAAaoyB,EAAb,EAAiBC,EAAjB,CAAP;AACA3B,EAAAA,OAAO,CAAC,KAAK1wB,CAAN,EAAS,EAAT,EAAasyB,EAAb,EAAiBC,EAAjB,CAAP;AACD,CAzFD;;AA2FApB,MAAM,CAAChjC,SAAP,CAAiBo/B,OAAjB,GAA2B,SAAStW,MAAT,CAAgB2R,GAAhB,EAAqB;AAC9C,MAAIA,GAAG,KAAK,KAAZ,EACE,OAAO8D,KAAK,CAACvD,OAAN,CAAc,KAAKnpB,CAAnB,EAAsB,KAAtB,CAAP,CADF,KAGE,OAAO0sB,KAAK,CAAChD,OAAN,CAAc,KAAK1pB,CAAnB,EAAsB,KAAtB,CAAP;AACH,CALD;;AAOA,SAAS0yB,OAAT,CAAiBY,EAAjB,EAAqBC,EAArB,EAAyBC,EAAzB,EAA6BC,EAA7B,EAAiCC,EAAjC,EAAqC;AACnC,MAAI1iC,CAAC,GAAIsiC,EAAE,GAAGE,EAAN,GAAc,CAACF,EAAF,GAAQI,EAA7B;AACA,MAAI1iC,CAAC,GAAG,CAAR,EACEA,CAAC,IAAI,WAAL;AACF,SAAOA,CAAP;AACD;;AAED,SAAS2hC,OAAT,CAAiBW,EAAjB,EAAqBC,EAArB,EAAyBC,EAAzB,EAA6BC,EAA7B,EAAiCC,EAAjC,EAAqCC,EAArC,EAAyC;AACvC,MAAI3iC,CAAC,GAAIuiC,EAAE,GAAGE,EAAN,GAAc,CAACF,EAAF,GAAQI,EAA7B;AACA,MAAI3iC,CAAC,GAAG,CAAR,EACEA,CAAC,IAAI,WAAL;AACF,SAAOA,CAAP;AACD;;AAED,SAASkiC,QAAT,CAAkBI,EAAlB,EAAsBC,EAAtB,EAA0BC,EAA1B,EAA8BC,EAA9B,EAAkCC,EAAlC,EAAsC;AACpC,MAAI1iC,CAAC,GAAIsiC,EAAE,GAAGE,EAAN,GAAaF,EAAE,GAAGI,EAAlB,GAAyBF,EAAE,GAAGE,EAAtC;AACA,MAAI1iC,CAAC,GAAG,CAAR,EACEA,CAAC,IAAI,WAAL;AACF,SAAOA,CAAP;AACD;;AAED,SAASmiC,QAAT,CAAkBG,EAAlB,EAAsBC,EAAtB,EAA0BC,EAA1B,EAA8BC,EAA9B,EAAkCC,EAAlC,EAAsCC,EAAtC,EAA0C;AACxC,MAAI3iC,CAAC,GAAIuiC,EAAE,GAAGE,EAAN,GAAaF,EAAE,GAAGI,EAAlB,GAAyBF,EAAE,GAAGE,EAAtC;AACA,MAAI3iC,CAAC,GAAG,CAAR,EACEA,CAAC,IAAI,WAAL;AACF,SAAOA,CAAP;AACD;;AAED,SAASgiC,SAAT,CAAmBM,EAAnB,EAAuBC,EAAvB,EAA2B;AACzB,MAAIjC,KAAK,GAAGhB,WAAW,CAACgD,EAAD,EAAKC,EAAL,EAAS,EAAT,CAAvB;AACA,MAAI7B,KAAK,GAAGpB,WAAW,CAACiD,EAAD,EAAKD,EAAL,EAAS,CAAT,CAAvB,CAFyB,CAEY;;AACrC,MAAI1B,KAAK,GAAGtB,WAAW,CAACiD,EAAD,EAAKD,EAAL,EAAS,CAAT,CAAvB,CAHyB,CAGY;;AAErC,MAAItiC,CAAC,GAAGsgC,KAAK,GAAGI,KAAR,GAAgBE,KAAxB;AACA,MAAI5gC,CAAC,GAAG,CAAR,EACEA,CAAC,IAAI,WAAL;AACF,SAAOA,CAAP;AACD;;AAED,SAASiiC,SAAT,CAAmBK,EAAnB,EAAuBC,EAAvB,EAA2B;AACzB,MAAI/B,KAAK,GAAGjB,WAAW,CAAC+C,EAAD,EAAKC,EAAL,EAAS,EAAT,CAAvB;AACA,MAAI5B,KAAK,GAAGpB,WAAW,CAACgD,EAAD,EAAKD,EAAL,EAAS,CAAT,CAAvB,CAFyB,CAEY;;AACrC,MAAIxB,KAAK,GAAGvB,WAAW,CAACgD,EAAD,EAAKD,EAAL,EAAS,CAAT,CAAvB,CAHyB,CAGY;;AAErC,MAAItiC,CAAC,GAAGwgC,KAAK,GAAGG,KAAR,GAAgBG,KAAxB;AACA,MAAI9gC,CAAC,GAAG,CAAR,EACEA,CAAC,IAAI,WAAL;AACF,SAAOA,CAAP;AACD;;AAED,SAASwhC,SAAT,CAAmBc,EAAnB,EAAuBC,EAAvB,EAA2B;AACzB,MAAIjC,KAAK,GAAGhB,WAAW,CAACgD,EAAD,EAAKC,EAAL,EAAS,EAAT,CAAvB;AACA,MAAI7B,KAAK,GAAGpB,WAAW,CAACgD,EAAD,EAAKC,EAAL,EAAS,EAAT,CAAvB;AACA,MAAI3B,KAAK,GAAGtB,WAAW,CAACiD,EAAD,EAAKD,EAAL,EAAS,CAAT,CAAvB,CAHyB,CAGY;;AAErC,MAAItiC,CAAC,GAAGsgC,KAAK,GAAGI,KAAR,GAAgBE,KAAxB;AACA,MAAI5gC,CAAC,GAAG,CAAR,EACEA,CAAC,IAAI,WAAL;AACF,SAAOA,CAAP;AACD;;AAED,SAASyhC,SAAT,CAAmBa,EAAnB,EAAuBC,EAAvB,EAA2B;AACzB,MAAI/B,KAAK,GAAGjB,WAAW,CAAC+C,EAAD,EAAKC,EAAL,EAAS,EAAT,CAAvB;AACA,MAAI5B,KAAK,GAAGpB,WAAW,CAAC+C,EAAD,EAAKC,EAAL,EAAS,EAAT,CAAvB;AACA,MAAIzB,KAAK,GAAGvB,WAAW,CAACgD,EAAD,EAAKD,EAAL,EAAS,CAAT,CAAvB,CAHyB,CAGY;;AAErC,MAAItiC,CAAC,GAAGwgC,KAAK,GAAGG,KAAR,GAAgBG,KAAxB;AACA,MAAI9gC,CAAC,GAAG,CAAR,EACEA,CAAC,IAAI,WAAL;AACF,SAAOA,CAAP;AACD;;AAED,SAAS6gC,SAAT,CAAmByB,EAAnB,EAAuBC,EAAvB,EAA2B;AACzB,MAAIjC,KAAK,GAAGhB,WAAW,CAACgD,EAAD,EAAKC,EAAL,EAAS,CAAT,CAAvB;AACA,MAAI7B,KAAK,GAAGpB,WAAW,CAACgD,EAAD,EAAKC,EAAL,EAAS,CAAT,CAAvB;AACA,MAAI3B,KAAK,GAAGpB,UAAU,CAAC8C,EAAD,EAAKC,EAAL,EAAS,CAAT,CAAtB;AAEA,MAAIviC,CAAC,GAAGsgC,KAAK,GAAGI,KAAR,GAAgBE,KAAxB;AACA,MAAI5gC,CAAC,GAAG,CAAR,EACEA,CAAC,IAAI,WAAL;AACF,SAAOA,CAAP;AACD;;AAED,SAAS+gC,SAAT,CAAmBuB,EAAnB,EAAuBC,EAAvB,EAA2B;AACzB,MAAI/B,KAAK,GAAGjB,WAAW,CAAC+C,EAAD,EAAKC,EAAL,EAAS,CAAT,CAAvB;AACA,MAAI5B,KAAK,GAAGpB,WAAW,CAAC+C,EAAD,EAAKC,EAAL,EAAS,CAAT,CAAvB;AACA,MAAIzB,KAAK,GAAGrB,UAAU,CAAC6C,EAAD,EAAKC,EAAL,EAAS,CAAT,CAAtB;AAEA,MAAIviC,CAAC,GAAGwgC,KAAK,GAAGG,KAAR,GAAgBG,KAAxB;AACA,MAAI9gC,CAAC,GAAG,CAAR,EACEA,CAAC,IAAI,WAAL;AACF,SAAOA,CAAP;AACD;;AAED,SAASugC,SAAT,CAAmB+B,EAAnB,EAAuBC,EAAvB,EAA2B;AACzB,MAAIjC,KAAK,GAAGhB,WAAW,CAACgD,EAAD,EAAKC,EAAL,EAAS,EAAT,CAAvB;AACA,MAAI7B,KAAK,GAAGpB,WAAW,CAACiD,EAAD,EAAKD,EAAL,EAAS,EAAT,CAAvB,CAFyB,CAEa;;AACtC,MAAI1B,KAAK,GAAGpB,UAAU,CAAC8C,EAAD,EAAKC,EAAL,EAAS,CAAT,CAAtB;AAEA,MAAIviC,CAAC,GAAGsgC,KAAK,GAAGI,KAAR,GAAgBE,KAAxB;AACA,MAAI5gC,CAAC,GAAG,CAAR,EACEA,CAAC,IAAI,WAAL;AACF,SAAOA,CAAP;AACD;;AAED,SAASygC,SAAT,CAAmB6B,EAAnB,EAAuBC,EAAvB,EAA2B;AACzB,MAAI/B,KAAK,GAAGjB,WAAW,CAAC+C,EAAD,EAAKC,EAAL,EAAS,EAAT,CAAvB;AACA,MAAI5B,KAAK,GAAGpB,WAAW,CAACgD,EAAD,EAAKD,EAAL,EAAS,EAAT,CAAvB,CAFyB,CAEa;;AACtC,MAAIxB,KAAK,GAAGrB,UAAU,CAAC6C,EAAD,EAAKC,EAAL,EAAS,CAAT,CAAtB;AAEA,MAAIviC,CAAC,GAAGwgC,KAAK,GAAGG,KAAR,GAAgBG,KAAxB;AACA,MAAI9gC,CAAC,GAAG,CAAR,EACEA,CAAC,IAAI,WAAL;AACF,SAAOA,CAAP;AACD;;AAED,SAAS4iC,MAAT,GAAkB;AAChB,MAAI,EAAE,gBAAgBA,MAAlB,CAAJ,EACE,OAAO,IAAIA,MAAJ,EAAP;;AAEFxC,EAAAA,IAAI,CAAC5qB,IAAL,CAAU,IAAV;;AACA,OAAKxG,CAAL,GAAS,CACP,UADO,EACK,UADL,EAEP,UAFO,EAEK,UAFL,EAGP,UAHO,EAGK,UAHL,EAIP,UAJO,EAIK,UAJL,EAKP,UALO,EAKK,UALL,EAMP,UANO,EAMK,UANL,EAOP,UAPO,EAOK,UAPL,EAQP,UARO,EAQK,UARL,CAAT;AASD;;AACD0sB,KAAK,CAAC5+B,QAAN,CAAe8lC,MAAf,EAAuBxC,IAAvB;AACA,IAAIyC,IAAI,GAAGD,MAAX;AAEAA,MAAM,CAAC9G,SAAP,GAAmB,IAAnB;AACA8G,MAAM,CAAC7G,OAAP,GAAiB,GAAjB;AACA6G,MAAM,CAAC5G,YAAP,GAAsB,GAAtB;AACA4G,MAAM,CAAC3G,SAAP,GAAmB,GAAnB;;AAEA2G,MAAM,CAACzlC,SAAP,CAAiBo/B,OAAjB,GAA2B,SAAStW,MAAT,CAAgB2R,GAAhB,EAAqB;AAC9C,MAAIA,GAAG,KAAK,KAAZ,EACE,OAAO8D,KAAK,CAACvD,OAAN,CAAc,KAAKnpB,CAAL,CAAOyN,KAAP,CAAa,CAAb,EAAgB,EAAhB,CAAd,EAAmC,KAAnC,CAAP,CADF,KAGE,OAAOif,KAAK,CAAChD,OAAN,CAAc,KAAK1pB,CAAL,CAAOyN,KAAP,CAAa,CAAb,EAAgB,EAAhB,CAAd,EAAmC,KAAnC,CAAP;AACH,CALD;;AAOA,IAAIqmB,IAAI,GAAG1E,EAAX;AACA,IAAI2E,MAAM,GAAG1D,IAAb;AACA,IAAI2D,MAAM,GAAG/D,IAAb;AACA,IAAIgE,MAAM,GAAGJ,IAAb;AACA,IAAIK,MAAM,GAAG9C,IAAb;AAEA,IAAI+C,GAAG,GAAG;AACTL,EAAAA,IAAI,EAAEA,IADG;AAETC,EAAAA,MAAM,EAAEA,MAFC;AAGTC,EAAAA,MAAM,EAAEA,MAHC;AAITC,EAAAA,MAAM,EAAEA,MAJC;AAKTC,EAAAA,MAAM,EAAEA;AALC,CAAV;AAQA,IAAIE,QAAQ,GAAG1H,KAAK,CAAC5C,MAArB;AACA,IAAIuK,OAAO,GAAG3H,KAAK,CAAC1C,KAApB;AACA,IAAIsK,SAAS,GAAG5H,KAAK,CAACxC,OAAtB;AACA,IAAIqK,SAAS,GAAG7H,KAAK,CAACtC,OAAtB;AACA,IAAIoK,WAAW,GAAG/G,MAAM,CAACd,SAAzB;;AAEA,SAAS8H,SAAT,GAAqB;AACnB,MAAI,EAAE,gBAAgBA,SAAlB,CAAJ,EACE,OAAO,IAAIA,SAAJ,EAAP;AAEFD,EAAAA,WAAW,CAAChuB,IAAZ,CAAiB,IAAjB;AAEA,OAAKxG,CAAL,GAAS,CAAE,UAAF,EAAc,UAAd,EAA0B,UAA1B,EAAsC,UAAtC,EAAkD,UAAlD,CAAT;AACA,OAAKxR,MAAL,GAAc,QAAd;AACD;;AACDk+B,KAAK,CAAC5+B,QAAN,CAAe2mC,SAAf,EAA0BD,WAA1B;AACA,IAAIE,SAAS,GAAGD,SAAhB;AAEAA,SAAS,CAAC3H,SAAV,GAAsB,GAAtB;AACA2H,SAAS,CAAC1H,OAAV,GAAoB,GAApB;AACA0H,SAAS,CAACzH,YAAV,GAAyB,GAAzB;AACAyH,SAAS,CAACxH,SAAV,GAAsB,EAAtB;;AAEAwH,SAAS,CAACtmC,SAAV,CAAoBk/B,OAApB,GAA8B,SAAS/X,MAAT,CAAgB1nB,GAAhB,EAAqBkC,KAArB,EAA4B;AACxD,MAAImS,CAAC,GAAG,KAAKjC,CAAL,CAAO,CAAP,CAAR;AACA,MAAIkC,CAAC,GAAG,KAAKlC,CAAL,CAAO,CAAP,CAAR;AACA,MAAImC,CAAC,GAAG,KAAKnC,CAAL,CAAO,CAAP,CAAR;AACA,MAAIoC,CAAC,GAAG,KAAKpC,CAAL,CAAO,CAAP,CAAR;AACA,MAAI20B,CAAC,GAAG,KAAK30B,CAAL,CAAO,CAAP,CAAR;AACA,MAAI40B,EAAE,GAAG3yB,CAAT;AACA,MAAI4yB,EAAE,GAAG3yB,CAAT;AACA,MAAI4yB,EAAE,GAAG3yB,CAAT;AACA,MAAI4yB,EAAE,GAAG3yB,CAAT;AACA,MAAI4yB,EAAE,GAAGL,CAAT;;AACA,OAAK,IAAItkC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,QAAI4kC,CAAC,GAAGZ,OAAO,CACbD,QAAQ,CACNG,SAAS,CAACtyB,CAAD,EAAI2U,CAAC,CAACvmB,CAAD,EAAI6R,CAAJ,EAAOC,CAAP,EAAUC,CAAV,CAAL,EAAmBxU,GAAG,CAACoD,CAAC,CAACX,CAAD,CAAD,GAAOP,KAAR,CAAtB,EAAsColC,CAAC,CAAC7kC,CAAD,CAAvC,CADH,EAENiN,CAAC,CAACjN,CAAD,CAFK,CADK,EAIbskC,CAJa,CAAf;AAKA1yB,IAAAA,CAAC,GAAG0yB,CAAJ;AACAA,IAAAA,CAAC,GAAGvyB,CAAJ;AACAA,IAAAA,CAAC,GAAGgyB,QAAQ,CAACjyB,CAAD,EAAI,EAAJ,CAAZ;AACAA,IAAAA,CAAC,GAAGD,CAAJ;AACAA,IAAAA,CAAC,GAAG+yB,CAAJ;AACAA,IAAAA,CAAC,GAAGZ,OAAO,CACTD,QAAQ,CACNG,SAAS,CAACK,EAAD,EAAKhe,CAAC,CAAC,KAAKvmB,CAAN,EAASwkC,EAAT,EAAaC,EAAb,EAAiBC,EAAjB,CAAN,EAA4BnnC,GAAG,CAACunC,EAAE,CAAC9kC,CAAD,CAAF,GAAQP,KAAT,CAA/B,EAAgDslC,EAAE,CAAC/kC,CAAD,CAAlD,CADH,EAENglC,EAAE,CAAChlC,CAAD,CAFI,CADC,EAIT2kC,EAJS,CAAX;AAKAJ,IAAAA,EAAE,GAAGI,EAAL;AACAA,IAAAA,EAAE,GAAGD,EAAL;AACAA,IAAAA,EAAE,GAAGX,QAAQ,CAACU,EAAD,EAAK,EAAL,CAAb;AACAA,IAAAA,EAAE,GAAGD,EAAL;AACAA,IAAAA,EAAE,GAAGI,CAAL;AACD;;AACDA,EAAAA,CAAC,GAAGX,SAAS,CAAC,KAAKt0B,CAAL,CAAO,CAAP,CAAD,EAAYmC,CAAZ,EAAe4yB,EAAf,CAAb;AACA,OAAK/0B,CAAL,CAAO,CAAP,IAAYs0B,SAAS,CAAC,KAAKt0B,CAAL,CAAO,CAAP,CAAD,EAAYoC,CAAZ,EAAe4yB,EAAf,CAArB;AACA,OAAKh1B,CAAL,CAAO,CAAP,IAAYs0B,SAAS,CAAC,KAAKt0B,CAAL,CAAO,CAAP,CAAD,EAAY20B,CAAZ,EAAeC,EAAf,CAArB;AACA,OAAK50B,CAAL,CAAO,CAAP,IAAYs0B,SAAS,CAAC,KAAKt0B,CAAL,CAAO,CAAP,CAAD,EAAYiC,CAAZ,EAAe4yB,EAAf,CAArB;AACA,OAAK70B,CAAL,CAAO,CAAP,IAAYs0B,SAAS,CAAC,KAAKt0B,CAAL,CAAO,CAAP,CAAD,EAAYkC,CAAZ,EAAe4yB,EAAf,CAArB;AACA,OAAK90B,CAAL,CAAO,CAAP,IAAYi1B,CAAZ;AACD,CAvCD;;AAyCAR,SAAS,CAACtmC,SAAV,CAAoBo/B,OAApB,GAA8B,SAAStW,MAAT,CAAgB2R,GAAhB,EAAqB;AACjD,MAAIA,GAAG,KAAK,KAAZ,EACE,OAAO8D,KAAK,CAACvD,OAAN,CAAc,KAAKnpB,CAAnB,EAAsB,QAAtB,CAAP,CADF,KAGE,OAAO0sB,KAAK,CAAChD,OAAN,CAAc,KAAK1pB,CAAnB,EAAsB,QAAtB,CAAP;AACH,CALD;;AAOA,SAAS4W,CAAT,CAAWvmB,CAAX,EAAcmM,CAAd,EAAiBC,CAAjB,EAAoB8K,CAApB,EAAuB;AACrB,MAAIlX,CAAC,IAAI,EAAT,EACE,OAAOmM,CAAC,GAAGC,CAAJ,GAAQ8K,CAAf,CADF,KAEK,IAAIlX,CAAC,IAAI,EAAT,EACH,OAAQmM,CAAC,GAAGC,CAAL,GAAY,CAACD,CAAF,GAAO+K,CAAzB,CADG,KAEA,IAAIlX,CAAC,IAAI,EAAT,EACH,OAAO,CAACmM,CAAC,GAAI,CAACC,CAAP,IAAa8K,CAApB,CADG,KAEA,IAAIlX,CAAC,IAAI,EAAT,EACH,OAAQmM,CAAC,GAAG+K,CAAL,GAAW9K,CAAC,GAAI,CAAC8K,CAAxB,CADG,KAGH,OAAO/K,CAAC,IAAIC,CAAC,GAAI,CAAC8K,CAAV,CAAR;AACH;;AAED,SAAS2tB,CAAT,CAAW7kC,CAAX,EAAc;AACZ,MAAIA,CAAC,IAAI,EAAT,EACE,OAAO,UAAP,CADF,KAEK,IAAIA,CAAC,IAAI,EAAT,EACH,OAAO,UAAP,CADG,KAEA,IAAIA,CAAC,IAAI,EAAT,EACH,OAAO,UAAP,CADG,KAEA,IAAIA,CAAC,IAAI,EAAT,EACH,OAAO,UAAP,CADG,KAGH,OAAO,UAAP;AACH;;AAED,SAAS+kC,EAAT,CAAY/kC,CAAZ,EAAe;AACb,MAAIA,CAAC,IAAI,EAAT,EACE,OAAO,UAAP,CADF,KAEK,IAAIA,CAAC,IAAI,EAAT,EACH,OAAO,UAAP,CADG,KAEA,IAAIA,CAAC,IAAI,EAAT,EACH,OAAO,UAAP,CADG,KAEA,IAAIA,CAAC,IAAI,EAAT,EACH,OAAO,UAAP,CADG,KAGH,OAAO,UAAP;AACH;;AAED,IAAIW,CAAC,GAAG,CACN,CADM,EACH,CADG,EACA,CADA,EACG,CADH,EACM,CADN,EACS,CADT,EACY,CADZ,EACe,CADf,EACkB,CADlB,EACqB,CADrB,EACwB,EADxB,EAC4B,EAD5B,EACgC,EADhC,EACoC,EADpC,EACwC,EADxC,EAC4C,EAD5C,EAEN,CAFM,EAEH,CAFG,EAEA,EAFA,EAEI,CAFJ,EAEO,EAFP,EAEW,CAFX,EAEc,EAFd,EAEkB,CAFlB,EAEqB,EAFrB,EAEyB,CAFzB,EAE4B,CAF5B,EAE+B,CAF/B,EAEkC,CAFlC,EAEqC,EAFrC,EAEyC,EAFzC,EAE6C,CAF7C,EAGN,CAHM,EAGH,EAHG,EAGC,EAHD,EAGK,CAHL,EAGQ,CAHR,EAGW,EAHX,EAGe,CAHf,EAGkB,CAHlB,EAGqB,CAHrB,EAGwB,CAHxB,EAG2B,CAH3B,EAG8B,CAH9B,EAGiC,EAHjC,EAGqC,EAHrC,EAGyC,CAHzC,EAG4C,EAH5C,EAIN,CAJM,EAIH,CAJG,EAIA,EAJA,EAII,EAJJ,EAIQ,CAJR,EAIW,CAJX,EAIc,EAJd,EAIkB,CAJlB,EAIqB,EAJrB,EAIyB,CAJzB,EAI4B,CAJ5B,EAI+B,EAJ/B,EAImC,EAJnC,EAIuC,CAJvC,EAI0C,CAJ1C,EAI6C,CAJ7C,EAKN,CALM,EAKH,CALG,EAKA,CALA,EAKG,CALH,EAKM,CALN,EAKS,EALT,EAKa,CALb,EAKgB,EALhB,EAKoB,EALpB,EAKwB,CALxB,EAK2B,CAL3B,EAK8B,CAL9B,EAKiC,EALjC,EAKqC,CALrC,EAKwC,EALxC,EAK4C,EAL5C,CAAR;AAQA,IAAImkC,EAAE,GAAG,CACP,CADO,EACJ,EADI,EACA,CADA,EACG,CADH,EACM,CADN,EACS,CADT,EACY,EADZ,EACgB,CADhB,EACmB,EADnB,EACuB,CADvB,EAC0B,EAD1B,EAC8B,CAD9B,EACiC,CADjC,EACoC,EADpC,EACwC,CADxC,EAC2C,EAD3C,EAEP,CAFO,EAEJ,EAFI,EAEA,CAFA,EAEG,CAFH,EAEM,CAFN,EAES,EAFT,EAEa,CAFb,EAEgB,EAFhB,EAEoB,EAFpB,EAEwB,EAFxB,EAE4B,CAF5B,EAE+B,EAF/B,EAEmC,CAFnC,EAEsC,CAFtC,EAEyC,CAFzC,EAE4C,CAF5C,EAGP,EAHO,EAGH,CAHG,EAGA,CAHA,EAGG,CAHH,EAGM,CAHN,EAGS,EAHT,EAGa,CAHb,EAGgB,CAHhB,EAGmB,EAHnB,EAGuB,CAHvB,EAG0B,EAH1B,EAG8B,CAH9B,EAGiC,EAHjC,EAGqC,CAHrC,EAGwC,CAHxC,EAG2C,EAH3C,EAIP,CAJO,EAIJ,CAJI,EAID,CAJC,EAIE,CAJF,EAIK,CAJL,EAIQ,EAJR,EAIY,EAJZ,EAIgB,CAJhB,EAImB,CAJnB,EAIsB,EAJtB,EAI0B,CAJ1B,EAI6B,EAJ7B,EAIiC,CAJjC,EAIoC,CAJpC,EAIuC,EAJvC,EAI2C,EAJ3C,EAKP,EALO,EAKH,EALG,EAKC,EALD,EAKK,CALL,EAKQ,CALR,EAKW,CALX,EAKc,CALd,EAKiB,CALjB,EAKoB,CALpB,EAKuB,CALvB,EAK0B,EAL1B,EAK8B,EAL9B,EAKkC,CALlC,EAKqC,CALrC,EAKwC,CALxC,EAK2C,EAL3C,CAAT;AAQA,IAAI73B,CAAC,GAAG,CACN,EADM,EACF,EADE,EACE,EADF,EACM,EADN,EACU,CADV,EACa,CADb,EACgB,CADhB,EACmB,CADnB,EACsB,EADtB,EAC0B,EAD1B,EAC8B,EAD9B,EACkC,EADlC,EACsC,CADtC,EACyC,CADzC,EAC4C,CAD5C,EAC+C,CAD/C,EAEN,CAFM,EAEH,CAFG,EAEA,CAFA,EAEG,EAFH,EAEO,EAFP,EAEW,CAFX,EAEc,CAFd,EAEiB,EAFjB,EAEqB,CAFrB,EAEwB,EAFxB,EAE4B,EAF5B,EAEgC,CAFhC,EAEmC,EAFnC,EAEuC,CAFvC,EAE0C,EAF1C,EAE8C,EAF9C,EAGN,EAHM,EAGF,EAHE,EAGE,CAHF,EAGK,CAHL,EAGQ,EAHR,EAGY,CAHZ,EAGe,EAHf,EAGmB,EAHnB,EAGuB,EAHvB,EAG2B,CAH3B,EAG8B,EAH9B,EAGkC,CAHlC,EAGqC,CAHrC,EAGwC,EAHxC,EAG4C,CAH5C,EAG+C,CAH/C,EAIN,EAJM,EAIF,EAJE,EAIE,EAJF,EAIM,EAJN,EAIU,EAJV,EAIc,EAJd,EAIkB,CAJlB,EAIqB,CAJrB,EAIwB,CAJxB,EAI2B,EAJ3B,EAI+B,CAJ/B,EAIkC,CAJlC,EAIqC,CAJrC,EAIwC,CAJxC,EAI2C,CAJ3C,EAI8C,EAJ9C,EAKN,CALM,EAKH,EALG,EAKC,CALD,EAKI,EALJ,EAKQ,CALR,EAKW,CALX,EAKc,EALd,EAKkB,EALlB,EAKsB,CALtB,EAKyB,EALzB,EAK6B,EAL7B,EAKiC,EALjC,EAKqC,EALrC,EAKyC,CALzC,EAK4C,CAL5C,EAK+C,CAL/C,CAAR;AAQA,IAAI+3B,EAAE,GAAG,CACP,CADO,EACJ,CADI,EACD,CADC,EACE,EADF,EACM,EADN,EACU,EADV,EACc,EADd,EACkB,CADlB,EACqB,CADrB,EACwB,CADxB,EAC2B,CAD3B,EAC8B,EAD9B,EACkC,EADlC,EACsC,EADtC,EAC0C,EAD1C,EAC8C,CAD9C,EAEP,CAFO,EAEJ,EAFI,EAEA,EAFA,EAEI,CAFJ,EAEO,EAFP,EAEW,CAFX,EAEc,CAFd,EAEiB,EAFjB,EAEqB,CAFrB,EAEwB,CAFxB,EAE2B,EAF3B,EAE+B,CAF/B,EAEkC,CAFlC,EAEqC,EAFrC,EAEyC,EAFzC,EAE6C,EAF7C,EAGP,CAHO,EAGJ,CAHI,EAGD,EAHC,EAGG,EAHH,EAGO,CAHP,EAGU,CAHV,EAGa,CAHb,EAGgB,EAHhB,EAGoB,EAHpB,EAGwB,EAHxB,EAG4B,CAH5B,EAG+B,EAH/B,EAGmC,EAHnC,EAGuC,EAHvC,EAG2C,CAH3C,EAG8C,CAH9C,EAIP,EAJO,EAIH,CAJG,EAIA,CAJA,EAIG,EAJH,EAIO,EAJP,EAIW,EAJX,EAIe,CAJf,EAIkB,EAJlB,EAIsB,CAJtB,EAIyB,CAJzB,EAI4B,EAJ5B,EAIgC,CAJhC,EAImC,EAJnC,EAIuC,CAJvC,EAI0C,EAJ1C,EAI8C,CAJ9C,EAKP,CALO,EAKJ,CALI,EAKD,EALC,EAKG,CALH,EAKM,EALN,EAKU,CALV,EAKa,EALb,EAKiB,CALjB,EAKoB,CALpB,EAKuB,EALvB,EAK2B,CAL3B,EAK8B,CAL9B,EAKiC,EALjC,EAKqC,EALrC,EAKyC,EALzC,EAK6C,EAL7C,CAAT;AAQA,IAAIC,MAAM,GAAG;AACZZ,EAAAA,SAAS,EAAEA;AADC,CAAb;;AAIA,SAASa,IAAT,CAAcvR,IAAd,EAAoB5Y,GAApB,EAAyBwd,GAAzB,EAA8B;AAC5B,MAAI,EAAE,gBAAgB2M,IAAlB,CAAJ,EACE,OAAO,IAAIA,IAAJ,CAASvR,IAAT,EAAe5Y,GAAf,EAAoBwd,GAApB,CAAP;AACF,OAAK4M,IAAL,GAAYxR,IAAZ;AACA,OAAK8I,SAAL,GAAiB9I,IAAI,CAAC8I,SAAL,GAAiB,CAAlC;AACA,OAAKC,OAAL,GAAe/I,IAAI,CAAC+I,OAAL,GAAe,CAA9B;AACA,OAAK0I,KAAL,GAAa,IAAb;AACA,OAAKC,KAAL,GAAa,IAAb;;AAEA,OAAK5mC,KAAL,CAAW49B,KAAK,CAACz8B,OAAN,CAAcmb,GAAd,EAAmBwd,GAAnB,CAAX;AACD;;AACD,IAAI+M,IAAI,GAAGJ,IAAX;;AAEAA,IAAI,CAACpnC,SAAL,CAAeW,KAAf,GAAuB,SAASW,IAAT,CAAc2b,GAAd,EAAmB;AACxC;AACA,MAAIA,GAAG,CAACxc,MAAJ,GAAa,KAAKk+B,SAAtB,EACE1hB,GAAG,GAAG,IAAI,KAAKoqB,IAAT,GAAgBlgB,MAAhB,CAAuBlK,GAAvB,EAA4B6L,MAA5B,EAAN;AACFoR,EAAAA,kBAAkB,CAACjd,GAAG,CAACxc,MAAJ,IAAc,KAAKk+B,SAApB,CAAlB,CAJwC,CAMxC;;AACA,OAAK,IAAI18B,CAAC,GAAGgb,GAAG,CAACxc,MAAjB,EAAyBwB,CAAC,GAAG,KAAK08B,SAAlC,EAA6C18B,CAAC,EAA9C,EACEgb,GAAG,CAACnC,IAAJ,CAAS,CAAT;;AAEF,OAAK7Y,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGgb,GAAG,CAACxc,MAApB,EAA4BwB,CAAC,EAA7B,EACEgb,GAAG,CAAChb,CAAD,CAAH,IAAU,IAAV;;AACF,OAAKqlC,KAAL,GAAa,IAAI,KAAKD,IAAT,GAAgBlgB,MAAhB,CAAuBlK,GAAvB,CAAb,CAZwC,CAcxC;;AACA,OAAKhb,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGgb,GAAG,CAACxc,MAApB,EAA4BwB,CAAC,EAA7B,EACEgb,GAAG,CAAChb,CAAD,CAAH,IAAU,IAAV;;AACF,OAAKslC,KAAL,GAAa,IAAI,KAAKF,IAAT,GAAgBlgB,MAAhB,CAAuBlK,GAAvB,CAAb;AACD,CAlBD;;AAoBAmqB,IAAI,CAACpnC,SAAL,CAAemnB,MAAf,GAAwB,SAASA,MAAT,CAAgB1nB,GAAhB,EAAqBg7B,GAArB,EAA0B;AAChD,OAAK6M,KAAL,CAAWngB,MAAX,CAAkB1nB,GAAlB,EAAuBg7B,GAAvB;AACA,SAAO,IAAP;AACD,CAHD;;AAKA2M,IAAI,CAACpnC,SAAL,CAAe8oB,MAAf,GAAwB,SAASA,MAAT,CAAgB2R,GAAhB,EAAqB;AAC3C,OAAK8M,KAAL,CAAWpgB,MAAX,CAAkB,KAAKmgB,KAAL,CAAWxe,MAAX,EAAlB;AACA,SAAO,KAAKye,KAAL,CAAWze,MAAX,CAAkB2R,GAAlB,CAAP;AACD,CAHD;;AAKA,IAAIgN,MAAM,GAAG7oC,oBAAoB,CAAC,UAAUE,MAAV,EAAkBC,OAAlB,EAA2B;AAC7D,MAAI82B,IAAI,GAAG92B,OAAX;AAEA82B,EAAAA,IAAI,CAAC0I,KAAL,GAAaA,KAAb;AACA1I,EAAAA,IAAI,CAACyJ,MAAL,GAAcA,MAAd;AACAzJ,EAAAA,IAAI,CAACmQ,GAAL,GAAWA,GAAX;AACAnQ,EAAAA,IAAI,CAACsR,MAAL,GAAcA,MAAd;AACAtR,EAAAA,IAAI,CAAC2R,IAAL,GAAYA,IAAZ,CAP6D,CAS7D;;AACA3R,EAAAA,IAAI,CAAC8P,IAAL,GAAY9P,IAAI,CAACmQ,GAAL,CAASL,IAArB;AACA9P,EAAAA,IAAI,CAACgQ,MAAL,GAAchQ,IAAI,CAACmQ,GAAL,CAASH,MAAvB;AACAhQ,EAAAA,IAAI,CAAC+P,MAAL,GAAc/P,IAAI,CAACmQ,GAAL,CAASJ,MAAvB;AACA/P,EAAAA,IAAI,CAACiQ,MAAL,GAAcjQ,IAAI,CAACmQ,GAAL,CAASF,MAAvB;AACAjQ,EAAAA,IAAI,CAACkQ,MAAL,GAAclQ,IAAI,CAACmQ,GAAL,CAASD,MAAvB;AACAlQ,EAAAA,IAAI,CAAC0Q,SAAL,GAAiB1Q,IAAI,CAACsR,MAAL,CAAYZ,SAA7B;AACC,CAhBgC,CAAjC;;AAkBA,SAASmB,sBAAT,CAAgC7oC,EAAhC,EAAoC8oC,OAApC,EAA6C7oC,MAA7C,EAAqD;AACpD,SAAOA,MAAM,GAAG;AACf8oC,IAAAA,IAAI,EAAED,OADS;AAEf5oC,IAAAA,OAAO,EAAE,EAFM;AAGf8oC,IAAAA,OAAO,EAAE,UAAUD,IAAV,EAAgBxnC,IAAhB,EAAsB;AAC9B,aAAO0nC,eAAe,EAAtB;AACA;AALc,GAAT,EAMJjpC,EAAE,CAACC,MAAD,EAASA,MAAM,CAACC,OAAhB,CANE,EAMwBD,MAAM,CAACC,OANtC;AAOA;;AAED,SAAS+oC,eAAT,GAA4B;AAC3B,QAAM,IAAIpoC,KAAJ,CAAU,yEAAV,CAAN;AACA;;AAED,IAAIqoC,oBAAoB,GAAGC,QAA3B;;AAEA,SAASA,QAAT,CAAkBxoC,GAAlB,EAAuBC,GAAvB,EAA4B;AAC1B,MAAI,CAACD,GAAL,EACE,MAAM,IAAIE,KAAJ,CAAUD,GAAG,IAAI,kBAAjB,CAAN;AACH;;AAEDuoC,QAAQ,CAAC7N,KAAT,GAAiB,SAASC,WAAT,CAAqB3rB,CAArB,EAAwB5L,CAAxB,EAA2BpD,GAA3B,EAAgC;AAC/C,MAAIgP,CAAC,IAAI5L,CAAT,EACE,MAAM,IAAInD,KAAJ,CAAUD,GAAG,IAAK,uBAAuBgP,CAAvB,GAA2B,MAA3B,GAAoC5L,CAAtD,CAAN;AACH,CAHD;;AAKA,IAAIolC,OAAO,GAAGP,sBAAsB,CAAC,UAAU5oC,MAAV,EAAkBC,OAAlB,EAA2B;AAEhE,MAAIw/B,KAAK,GAAGx/B,OAAZ;;AAEA,WAAS+C,OAAT,CAAiBrC,GAAjB,EAAsBg7B,GAAtB,EAA2B;AACzB,QAAI15B,KAAK,CAACC,OAAN,CAAcvB,GAAd,CAAJ,EACE,OAAOA,GAAG,CAAC6f,KAAJ,EAAP;AACF,QAAI,CAAC7f,GAAL,EACE,OAAO,EAAP;AACF,QAAI8F,GAAG,GAAG,EAAV;;AACA,QAAI,OAAO9F,GAAP,KAAe,QAAnB,EAA6B;AAC3B,WAAK,IAAIwC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGxC,GAAG,CAACgB,MAAxB,EAAgCwB,CAAC,EAAjC,EACEsD,GAAG,CAACtD,CAAD,CAAH,GAASxC,GAAG,CAACwC,CAAD,CAAH,GAAS,CAAlB;;AACF,aAAOsD,GAAP;AACD;;AACD,QAAIk1B,GAAG,KAAK,KAAZ,EAAmB;AACjBh7B,MAAAA,GAAG,GAAGA,GAAG,CAACiC,OAAJ,CAAY,cAAZ,EAA4B,EAA5B,CAAN;AACA,UAAIjC,GAAG,CAACgB,MAAJ,GAAa,CAAb,KAAmB,CAAvB,EACEhB,GAAG,GAAG,MAAMA,GAAZ;;AACF,WAAK,IAAIwC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGxC,GAAG,CAACgB,MAAxB,EAAgCwB,CAAC,IAAI,CAArC,EACEsD,GAAG,CAACuV,IAAJ,CAASmF,QAAQ,CAACxgB,GAAG,CAACwC,CAAD,CAAH,GAASxC,GAAG,CAACwC,CAAC,GAAG,CAAL,CAAb,EAAsB,EAAtB,CAAjB;AACH,KAND,MAMO;AACL,WAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGxC,GAAG,CAACgB,MAAxB,EAAgCwB,CAAC,EAAjC,EAAqC;AACnC,YAAIQ,CAAC,GAAGhD,GAAG,CAACiD,UAAJ,CAAeT,CAAf,CAAR;AACA,YAAIgE,EAAE,GAAGxD,CAAC,IAAI,CAAd;AACA,YAAI6F,EAAE,GAAG7F,CAAC,GAAG,IAAb;AACA,YAAIwD,EAAJ,EACEV,GAAG,CAACuV,IAAJ,CAAS7U,EAAT,EAAaqC,EAAb,EADF,KAGE/C,GAAG,CAACuV,IAAJ,CAASxS,EAAT;AACH;AACF;;AACD,WAAO/C,GAAP;AACD;;AACDg5B,EAAAA,KAAK,CAACz8B,OAAN,GAAgBA,OAAhB;;AAEA,WAAS84B,KAAT,CAAep3B,IAAf,EAAqB;AACnB,QAAIA,IAAI,CAAC/C,MAAL,KAAgB,CAApB,EACE,OAAO,MAAM+C,IAAb,CADF,KAGE,OAAOA,IAAP;AACH;;AACD+6B,EAAAA,KAAK,CAAC3D,KAAN,GAAcA,KAAd;;AAEA,WAASpX,KAAT,CAAe/jB,GAAf,EAAoB;AAClB,QAAI8F,GAAG,GAAG,EAAV;;AACA,SAAK,IAAItD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGxC,GAAG,CAACgB,MAAxB,EAAgCwB,CAAC,EAAjC,EACEsD,GAAG,IAAIq1B,KAAK,CAACn7B,GAAG,CAACwC,CAAD,CAAH,CAAOR,QAAP,CAAgB,EAAhB,CAAD,CAAZ;;AACF,WAAO8D,GAAP;AACD;;AACDg5B,EAAAA,KAAK,CAAC/a,KAAN,GAAcA,KAAd;;AAEA+a,EAAAA,KAAK,CAAC7R,MAAN,GAAe,SAASA,MAAT,CAAgBwb,GAAhB,EAAqBzN,GAArB,EAA0B;AACvC,QAAIA,GAAG,KAAK,KAAZ,EACE,OAAOjX,KAAK,CAAC0kB,GAAD,CAAZ,CADF,KAGE,OAAOA,GAAP;AACH,GALD;AAMC,CA1DmC,CAApC;AA4DA,IAAIC,SAAS,GAAGT,sBAAsB,CAAC,UAAU5oC,MAAV,EAAkBC,OAAlB,EAA2B;AAElE,MAAIw/B,KAAK,GAAGx/B,OAAZ;AAKAw/B,EAAAA,KAAK,CAACh/B,MAAN,GAAewoC,oBAAf;AACAxJ,EAAAA,KAAK,CAACz8B,OAAN,GAAgBmmC,OAAO,CAACnmC,OAAxB;AACAy8B,EAAAA,KAAK,CAAC3D,KAAN,GAAcqN,OAAO,CAACrN,KAAtB;AACA2D,EAAAA,KAAK,CAAC/a,KAAN,GAAcykB,OAAO,CAACzkB,KAAtB;AACA+a,EAAAA,KAAK,CAAC7R,MAAN,GAAeub,OAAO,CAACvb,MAAvB,CAXkE,CAalE;;AACA,WAAS0b,MAAT,CAAgBtnC,GAAhB,EAAqBqB,CAArB,EAAwBoP,IAAxB,EAA8B;AAC5B,QAAI82B,GAAG,GAAG,IAAItnC,KAAJ,CAAUgB,IAAI,CAACd,GAAL,CAASH,GAAG,CAACkF,SAAJ,EAAT,EAA0BuL,IAA1B,IAAkC,CAA5C,CAAV;AACA82B,IAAAA,GAAG,CAAC9V,IAAJ,CAAS,CAAT;AAEA,QAAIjiB,EAAE,GAAG,KAAMnO,CAAC,GAAG,CAAnB;AACA,QAAIoG,CAAC,GAAGzH,GAAG,CAACgD,KAAJ,EAAR;;AAEA,SAAK,IAAI7B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGomC,GAAG,CAAC5nC,MAAxB,EAAgCwB,CAAC,EAAjC,EAAqC;AACnC,UAAImX,CAAJ;AACA,UAAI7V,GAAG,GAAGgF,CAAC,CAAC7C,KAAF,CAAQ4K,EAAE,GAAG,CAAb,CAAV;;AACA,UAAI/H,CAAC,CAACgM,KAAF,EAAJ,EAAe;AACb,YAAIhR,GAAG,GAAG,CAAC+M,EAAE,IAAI,CAAP,IAAY,CAAtB,EACE8I,CAAC,GAAG,CAAC9I,EAAE,IAAI,CAAP,IAAY/M,GAAhB,CADF,KAGE6V,CAAC,GAAG7V,GAAJ;AACFgF,QAAAA,CAAC,CAACgK,KAAF,CAAQ6G,CAAR;AACD,OAND,MAMO;AACLA,QAAAA,CAAC,GAAG,CAAJ;AACD;;AAEDivB,MAAAA,GAAG,CAACpmC,CAAD,CAAH,GAASmX,CAAT;AACA7Q,MAAAA,CAAC,CAAC5C,MAAF,CAAS,CAAT;AACD;;AAED,WAAO0iC,GAAP;AACD;;AACD9J,EAAAA,KAAK,CAAC6J,MAAN,GAAeA,MAAf,CAxCkE,CA0ClE;;AACA,WAASE,MAAT,CAAgBC,EAAhB,EAAoBC,EAApB,EAAwB;AACtB,QAAIC,GAAG,GAAG,CACR,EADQ,EAER,EAFQ,CAAV;AAKAF,IAAAA,EAAE,GAAGA,EAAE,CAACzkC,KAAH,EAAL;AACA0kC,IAAAA,EAAE,GAAGA,EAAE,CAAC1kC,KAAH,EAAL;AACA,QAAI4kC,EAAE,GAAG,CAAT;AACA,QAAIC,EAAE,GAAG,CAAT;AACA,QAAIC,EAAJ;;AACA,WAAOL,EAAE,CAACzzB,IAAH,CAAQ,CAAC4zB,EAAT,IAAe,CAAf,IAAoBF,EAAE,CAAC1zB,IAAH,CAAQ,CAAC6zB,EAAT,IAAe,CAA1C,EAA6C;AAC3C;AACA,UAAIE,GAAG,GAAIN,EAAE,CAAC7iC,KAAH,CAAS,CAAT,IAAcgjC,EAAf,GAAqB,CAA/B;AACA,UAAII,GAAG,GAAIN,EAAE,CAAC9iC,KAAH,CAAS,CAAT,IAAcijC,EAAf,GAAqB,CAA/B;AACA,UAAIE,GAAG,KAAK,CAAZ,EACEA,GAAG,GAAG,CAAC,CAAP;AACF,UAAIC,GAAG,KAAK,CAAZ,EACEA,GAAG,GAAG,CAAC,CAAP;AACF,UAAIC,EAAJ;;AACA,UAAI,CAACF,GAAG,GAAG,CAAP,MAAc,CAAlB,EAAqB;AACnBE,QAAAA,EAAE,GAAG,CAAL;AACD,OAFD,MAEO;AACLH,QAAAA,EAAE,GAAIL,EAAE,CAAC7iC,KAAH,CAAS,CAAT,IAAcgjC,EAAf,GAAqB,CAA1B;AACA,YAAI,CAACE,EAAE,KAAK,CAAP,IAAYA,EAAE,KAAK,CAApB,KAA0BE,GAAG,KAAK,CAAtC,EACEC,EAAE,GAAG,CAACF,GAAN,CADF,KAGEE,EAAE,GAAGF,GAAL;AACH;;AACDJ,MAAAA,GAAG,CAAC,CAAD,CAAH,CAAO3tB,IAAP,CAAYiuB,EAAZ;AAEA,UAAIC,EAAJ;;AACA,UAAI,CAACF,GAAG,GAAG,CAAP,MAAc,CAAlB,EAAqB;AACnBE,QAAAA,EAAE,GAAG,CAAL;AACD,OAFD,MAEO;AACLJ,QAAAA,EAAE,GAAIJ,EAAE,CAAC9iC,KAAH,CAAS,CAAT,IAAcijC,EAAf,GAAqB,CAA1B;AACA,YAAI,CAACC,EAAE,KAAK,CAAP,IAAYA,EAAE,KAAK,CAApB,KAA0BC,GAAG,KAAK,CAAtC,EACEG,EAAE,GAAG,CAACF,GAAN,CADF,KAGEE,EAAE,GAAGF,GAAL;AACH;;AACDL,MAAAA,GAAG,CAAC,CAAD,CAAH,CAAO3tB,IAAP,CAAYkuB,EAAZ,EA9B2C,CAgC3C;;AACA,UAAI,IAAIN,EAAJ,KAAWK,EAAE,GAAG,CAApB,EACEL,EAAE,GAAG,IAAIA,EAAT;AACF,UAAI,IAAIC,EAAJ,KAAWK,EAAE,GAAG,CAApB,EACEL,EAAE,GAAG,IAAIA,EAAT;AACFJ,MAAAA,EAAE,CAAC5iC,MAAH,CAAU,CAAV;AACA6iC,MAAAA,EAAE,CAAC7iC,MAAH,CAAU,CAAV;AACD;;AAED,WAAO8iC,GAAP;AACD;;AACDlK,EAAAA,KAAK,CAAC+J,MAAN,GAAeA,MAAf;;AAEA,WAASW,cAAT,CAAwBC,GAAxB,EAA6BlrC,IAA7B,EAAmCmrC,QAAnC,EAA6C;AAC3C,QAAIlsB,GAAG,GAAG,MAAMjf,IAAhB;;AACAkrC,IAAAA,GAAG,CAAClpC,SAAJ,CAAchC,IAAd,IAAsB,SAASirC,cAAT,GAA0B;AAC9C,aAAO,KAAKhsB,GAAL,MAAchF,SAAd,GAA0B,KAAKgF,GAAL,CAA1B,GACL,KAAKA,GAAL,IAAYksB,QAAQ,CAAC9wB,IAAT,CAAc,IAAd,CADd;AAED,KAHD;AAID;;AACDkmB,EAAAA,KAAK,CAAC0K,cAAN,GAAuBA,cAAvB;;AAEA,WAASG,UAAT,CAAoBjnB,KAApB,EAA2B;AACzB,WAAO,OAAOA,KAAP,KAAiB,QAAjB,GAA4Boc,KAAK,CAACz8B,OAAN,CAAcqgB,KAAd,EAAqB,KAArB,CAA5B,GACLA,KADF;AAED;;AACDoc,EAAAA,KAAK,CAAC6K,UAAN,GAAmBA,UAAnB;;AAEA,WAASC,SAAT,CAAmBlnB,KAAnB,EAA0B;AACxB,WAAO,IAAI7iB,EAAJ,CAAO6iB,KAAP,EAAc,KAAd,EAAqB,IAArB,CAAP;AACD;;AACDoc,EAAAA,KAAK,CAAC8K,SAAN,GAAkBA,SAAlB;AACC,CAtHqC,CAAtC;AA0HA,IAAIjB,MAAM,GAAGD,SAAS,CAACC,MAAvB;AACA,IAAIE,MAAM,GAAGH,SAAS,CAACG,MAAvB;AACA,IAAIgB,UAAU,GAAGnB,SAAS,CAAC5oC,MAA3B;;AAEA,SAASgqC,SAAT,CAAmB3rC,IAAnB,EAAyB4rC,IAAzB,EAA+B;AAC7B,OAAK5rC,IAAL,GAAYA,IAAZ;AACA,OAAK6R,CAAL,GAAS,IAAInQ,EAAJ,CAAOkqC,IAAI,CAAC/5B,CAAZ,EAAe,EAAf,CAAT,CAF6B,CAI7B;;AACA,OAAK/O,GAAL,GAAW8oC,IAAI,CAAC1wB,KAAL,GAAaxZ,EAAE,CAACoB,GAAH,CAAO8oC,IAAI,CAAC1wB,KAAZ,CAAb,GAAkCxZ,EAAE,CAACoa,IAAH,CAAQ,KAAKjK,CAAb,CAA7C,CAL6B,CAO7B;;AACA,OAAKg6B,IAAL,GAAY,IAAInqC,EAAJ,CAAO,CAAP,EAAUuW,KAAV,CAAgB,KAAKnV,GAArB,CAAZ;AACA,OAAKuY,GAAL,GAAW,IAAI3Z,EAAJ,CAAO,CAAP,EAAUuW,KAAV,CAAgB,KAAKnV,GAArB,CAAX;AACA,OAAKgpC,GAAL,GAAW,IAAIpqC,EAAJ,CAAO,CAAP,EAAUuW,KAAV,CAAgB,KAAKnV,GAArB,CAAX,CAV6B,CAY7B;;AACA,OAAKzB,CAAL,GAASuqC,IAAI,CAACvqC,CAAL,IAAU,IAAIK,EAAJ,CAAOkqC,IAAI,CAACvqC,CAAZ,EAAe,EAAf,CAAnB;AACA,OAAKiV,CAAL,GAASs1B,IAAI,CAACt1B,CAAL,IAAU,KAAKy1B,aAAL,CAAmBH,IAAI,CAACt1B,CAAxB,EAA2Bs1B,IAAI,CAACI,IAAhC,CAAnB,CAd6B,CAgB7B;;AACA,OAAKC,OAAL,GAAe,IAAI9oC,KAAJ,CAAU,CAAV,CAAf;AACA,OAAK+oC,OAAL,GAAe,IAAI/oC,KAAJ,CAAU,CAAV,CAAf;AACA,OAAKgpC,OAAL,GAAe,IAAIhpC,KAAJ,CAAU,CAAV,CAAf;AACA,OAAKipC,OAAL,GAAe,IAAIjpC,KAAJ,CAAU,CAAV,CAAf;AAEA,OAAKkpC,UAAL,GAAkB,KAAKhrC,CAAL,GAAS,KAAKA,CAAL,CAAO+G,SAAP,EAAT,GAA8B,CAAhD,CAtB6B,CAwB7B;;AACA,MAAIkkC,WAAW,GAAG,KAAKjrC,CAAL,IAAU,KAAKwQ,CAAL,CAAO0D,GAAP,CAAW,KAAKlU,CAAhB,CAA5B;;AACA,MAAI,CAACirC,WAAD,IAAgBA,WAAW,CAACp1B,IAAZ,CAAiB,GAAjB,IAAwB,CAA5C,EAA+C;AAC7C,SAAKq1B,IAAL,GAAY,IAAZ;AACD,GAFD,MAEO;AACL,SAAKC,aAAL,GAAqB,IAArB;AACA,SAAKD,IAAL,GAAY,KAAKlrC,CAAL,CAAO4W,KAAP,CAAa,KAAKnV,GAAlB,CAAZ;AACD;AACF;;AACD,IAAIN,IAAI,GAAGmpC,SAAX;;AAEAA,SAAS,CAACvpC,SAAV,CAAoBqqC,KAApB,GAA4B,SAASA,KAAT,GAAiB;AAC3C,QAAM,IAAI3qC,KAAJ,CAAU,iBAAV,CAAN;AACD,CAFD;;AAIA6pC,SAAS,CAACvpC,SAAV,CAAoBsqC,QAApB,GAA+B,SAASA,QAAT,GAAoB;AACjD,QAAM,IAAI5qC,KAAJ,CAAU,iBAAV,CAAN;AACD,CAFD;;AAIA6pC,SAAS,CAACvpC,SAAV,CAAoBuqC,YAApB,GAAmC,SAASA,YAAT,CAAsB96B,CAAtB,EAAyBlH,CAAzB,EAA4B;AAC7D+gC,EAAAA,UAAU,CAAC75B,CAAC,CAAC+6B,WAAH,CAAV;;AACA,MAAIC,OAAO,GAAGh7B,CAAC,CAACi7B,WAAF,EAAd;;AAEA,MAAIrC,GAAG,GAAGD,MAAM,CAAC7/B,CAAD,EAAI,CAAJ,EAAO,KAAK0hC,UAAZ,CAAhB;AACA,MAAIU,CAAC,GAAG,CAAC,KAAMF,OAAO,CAAClmB,IAAR,GAAe,CAAtB,KAA6BkmB,OAAO,CAAClmB,IAAR,GAAe,CAAf,KAAqB,CAArB,GAAyB,CAAzB,GAA6B,CAA1D,CAAR;AACAomB,EAAAA,CAAC,IAAI,CAAL,CAN6D,CAQ7D;;AACA,MAAIC,IAAI,GAAG,EAAX;AACA,MAAI1oC,CAAJ;AACA,MAAI2oC,IAAJ;;AACA,OAAK3oC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGmmC,GAAG,CAAC5nC,MAApB,EAA4ByB,CAAC,IAAIuoC,OAAO,CAAClmB,IAAzC,EAA+C;AAC7CsmB,IAAAA,IAAI,GAAG,CAAP;;AACA,SAAK,IAAIp8B,CAAC,GAAGvM,CAAC,GAAGuoC,OAAO,CAAClmB,IAAZ,GAAmB,CAAhC,EAAmC9V,CAAC,IAAIvM,CAAxC,EAA2CuM,CAAC,EAA5C,EACEo8B,IAAI,GAAG,CAACA,IAAI,IAAI,CAAT,IAAcxC,GAAG,CAAC55B,CAAD,CAAxB;;AACFm8B,IAAAA,IAAI,CAAC9vB,IAAL,CAAU+vB,IAAV;AACD;;AAED,MAAInjC,CAAC,GAAG,KAAKojC,MAAL,CAAY,IAAZ,EAAkB,IAAlB,EAAwB,IAAxB,CAAR;AACA,MAAItlC,CAAC,GAAG,KAAKslC,MAAL,CAAY,IAAZ,EAAkB,IAAlB,EAAwB,IAAxB,CAAR;;AACA,OAAK,IAAI7oC,CAAC,GAAG0oC,CAAb,EAAgB1oC,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,SAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG0oC,IAAI,CAACnqC,MAArB,EAA6ByB,CAAC,EAA9B,EAAkC;AAChC2oC,MAAAA,IAAI,GAAGD,IAAI,CAAC1oC,CAAD,CAAX;AACA,UAAI2oC,IAAI,KAAK5oC,CAAb,EACEuD,CAAC,GAAGA,CAAC,CAACulC,QAAF,CAAWN,OAAO,CAACO,MAAR,CAAe9oC,CAAf,CAAX,CAAJ,CADF,KAEK,IAAI2oC,IAAI,KAAK,CAAC5oC,CAAd,EACHuD,CAAC,GAAGA,CAAC,CAACulC,QAAF,CAAWN,OAAO,CAACO,MAAR,CAAe9oC,CAAf,EAAkB8E,GAAlB,EAAX,CAAJ;AACH;;AACDU,IAAAA,CAAC,GAAGA,CAAC,CAACS,GAAF,CAAM3C,CAAN,CAAJ;AACD;;AACD,SAAOkC,CAAC,CAACujC,GAAF,EAAP;AACD,CAhCD;;AAkCA1B,SAAS,CAACvpC,SAAV,CAAoBkrC,QAApB,GAA+B,SAASA,QAAT,CAAkBz7B,CAAlB,EAAqBlH,CAArB,EAAwB;AACrD,MAAIpG,CAAC,GAAG,CAAR,CADqD,CAGrD;;AACA,MAAIgpC,SAAS,GAAG17B,CAAC,CAAC27B,aAAF,CAAgBjpC,CAAhB,CAAhB;;AACAA,EAAAA,CAAC,GAAGgpC,SAAS,CAAC5xB,GAAd;AACA,MAAIA,GAAG,GAAG4xB,SAAS,CAACH,MAApB,CANqD,CAQrD;;AACA,MAAI3C,GAAG,GAAGD,MAAM,CAAC7/B,CAAD,EAAIpG,CAAJ,EAAO,KAAK8nC,UAAZ,CAAhB,CATqD,CAWrD;;AACA,MAAIr2B,GAAG,GAAG,KAAKk3B,MAAL,CAAY,IAAZ,EAAkB,IAAlB,EAAwB,IAAxB,CAAV;;AACA,OAAK,IAAI7oC,CAAC,GAAGomC,GAAG,CAAC5nC,MAAJ,GAAa,CAA1B,EAA6BwB,CAAC,IAAI,CAAlC,EAAqCA,CAAC,EAAtC,EAA0C;AACxC;AACA,SAAK,IAAIwM,CAAC,GAAG,CAAb,EAAgBxM,CAAC,IAAI,CAAL,IAAUomC,GAAG,CAACpmC,CAAD,CAAH,KAAW,CAArC,EAAwCA,CAAC,EAAzC,EACEwM,CAAC;;AACH,QAAIxM,CAAC,IAAI,CAAT,EACEwM,CAAC;AACHmF,IAAAA,GAAG,GAAGA,GAAG,CAACy3B,IAAJ,CAAS58B,CAAT,CAAN;AAEA,QAAIxM,CAAC,GAAG,CAAR,EACE;AACF,QAAImX,CAAC,GAAGivB,GAAG,CAACpmC,CAAD,CAAX;AACAqnC,IAAAA,UAAU,CAAClwB,CAAC,KAAK,CAAP,CAAV;;AACA,QAAI3J,CAAC,CAAC7R,IAAF,KAAW,QAAf,EAAyB;AACvB;AACA,UAAIwb,CAAC,GAAG,CAAR,EACExF,GAAG,GAAGA,GAAG,CAACm3B,QAAJ,CAAaxxB,GAAG,CAAEH,CAAC,GAAG,CAAL,IAAW,CAAZ,CAAhB,CAAN,CADF,KAGExF,GAAG,GAAGA,GAAG,CAACm3B,QAAJ,CAAaxxB,GAAG,CAAE,CAACH,CAAD,GAAK,CAAN,IAAY,CAAb,CAAH,CAAmBpS,GAAnB,EAAb,CAAN;AACH,KAND,MAMO;AACL;AACA,UAAIoS,CAAC,GAAG,CAAR,EACExF,GAAG,GAAGA,GAAG,CAACzL,GAAJ,CAAQoR,GAAG,CAAEH,CAAC,GAAG,CAAL,IAAW,CAAZ,CAAX,CAAN,CADF,KAGExF,GAAG,GAAGA,GAAG,CAACzL,GAAJ,CAAQoR,GAAG,CAAE,CAACH,CAAD,GAAK,CAAN,IAAY,CAAb,CAAH,CAAmBpS,GAAnB,EAAR,CAAN;AACH;AACF;;AACD,SAAOyI,CAAC,CAAC7R,IAAF,KAAW,QAAX,GAAsBgW,GAAG,CAACq3B,GAAJ,EAAtB,GAAkCr3B,GAAzC;AACD,CAxCD;;AA0CA21B,SAAS,CAACvpC,SAAV,CAAoBsrC,WAApB,GAAkC,SAASA,WAAT,CAAqBC,IAArB,EAChCP,MADgC,EAEhCQ,MAFgC,EAGhCroC,GAHgC,EAIhCsoC,cAJgC,EAIhB;AAChB,MAAIC,QAAQ,GAAG,KAAK7B,OAApB;AACA,MAAItwB,GAAG,GAAG,KAAKuwB,OAAf;AACA,MAAIzB,GAAG,GAAG,KAAK0B,OAAf,CAHgB,CAKhB;;AACA,MAAI9oC,GAAG,GAAG,CAAV;AACA,MAAIgB,CAAJ;AACA,MAAIC,CAAJ;AACA,MAAIuN,CAAJ;;AACA,OAAKxN,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGkB,GAAhB,EAAqBlB,CAAC,EAAtB,EAA0B;AACxBwN,IAAAA,CAAC,GAAGu7B,MAAM,CAAC/oC,CAAD,CAAV;;AACA,QAAIkpC,SAAS,GAAG17B,CAAC,CAAC27B,aAAF,CAAgBG,IAAhB,CAAhB;;AACAG,IAAAA,QAAQ,CAACzpC,CAAD,CAAR,GAAckpC,SAAS,CAAC5xB,GAAxB;AACAA,IAAAA,GAAG,CAACtX,CAAD,CAAH,GAASkpC,SAAS,CAACH,MAAnB;AACD,GAfe,CAiBhB;;;AACA,OAAK/oC,CAAC,GAAGkB,GAAG,GAAG,CAAf,EAAkBlB,CAAC,IAAI,CAAvB,EAA0BA,CAAC,IAAI,CAA/B,EAAkC;AAChC,QAAIyF,CAAC,GAAGzF,CAAC,GAAG,CAAZ;AACA,QAAIuD,CAAC,GAAGvD,CAAR;;AACA,QAAIypC,QAAQ,CAAChkC,CAAD,CAAR,KAAgB,CAAhB,IAAqBgkC,QAAQ,CAAClmC,CAAD,CAAR,KAAgB,CAAzC,EAA4C;AAC1C6iC,MAAAA,GAAG,CAAC3gC,CAAD,CAAH,GAAS0gC,MAAM,CAACoD,MAAM,CAAC9jC,CAAD,CAAP,EAAYgkC,QAAQ,CAAChkC,CAAD,CAApB,EAAyB,KAAKuiC,UAA9B,CAAf;AACA5B,MAAAA,GAAG,CAAC7iC,CAAD,CAAH,GAAS4iC,MAAM,CAACoD,MAAM,CAAChmC,CAAD,CAAP,EAAYkmC,QAAQ,CAAClmC,CAAD,CAApB,EAAyB,KAAKykC,UAA9B,CAAf;AACAhpC,MAAAA,GAAG,GAAGc,IAAI,CAACd,GAAL,CAASonC,GAAG,CAAC3gC,CAAD,CAAH,CAAOjH,MAAhB,EAAwBQ,GAAxB,CAAN;AACAA,MAAAA,GAAG,GAAGc,IAAI,CAACd,GAAL,CAASonC,GAAG,CAAC7iC,CAAD,CAAH,CAAO/E,MAAhB,EAAwBQ,GAAxB,CAAN;AACA;AACD;;AAED,QAAI0qC,IAAI,GAAG,CACTX,MAAM,CAACtjC,CAAD,CADG;AACE;AACX,QAFS;AAEH;AACN,QAHS;AAGH;AACNsjC,IAAAA,MAAM,CAACxlC,CAAD;AAAK;AAJF,KAAX,CAXgC,CAkBhC;;AACA,QAAIwlC,MAAM,CAACtjC,CAAD,CAAN,CAAU4G,CAAV,CAAYlN,GAAZ,CAAgB4pC,MAAM,CAACxlC,CAAD,CAAN,CAAU8I,CAA1B,MAAiC,CAArC,EAAwC;AACtCq9B,MAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUX,MAAM,CAACtjC,CAAD,CAAN,CAAUS,GAAV,CAAc6iC,MAAM,CAACxlC,CAAD,CAApB,CAAV;AACAmmC,MAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUX,MAAM,CAACtjC,CAAD,CAAN,CAAUkkC,GAAV,GAAgBb,QAAhB,CAAyBC,MAAM,CAACxlC,CAAD,CAAN,CAAUwB,GAAV,EAAzB,CAAV;AACD,KAHD,MAGO,IAAIgkC,MAAM,CAACtjC,CAAD,CAAN,CAAU4G,CAAV,CAAYlN,GAAZ,CAAgB4pC,MAAM,CAACxlC,CAAD,CAAN,CAAU8I,CAAV,CAAY6I,MAAZ,EAAhB,MAA0C,CAA9C,EAAiD;AACtDw0B,MAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUX,MAAM,CAACtjC,CAAD,CAAN,CAAUkkC,GAAV,GAAgBb,QAAhB,CAAyBC,MAAM,CAACxlC,CAAD,CAA/B,CAAV;AACAmmC,MAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUX,MAAM,CAACtjC,CAAD,CAAN,CAAUS,GAAV,CAAc6iC,MAAM,CAACxlC,CAAD,CAAN,CAAUwB,GAAV,EAAd,CAAV;AACD,KAHM,MAGA;AACL2kC,MAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUX,MAAM,CAACtjC,CAAD,CAAN,CAAUkkC,GAAV,GAAgBb,QAAhB,CAAyBC,MAAM,CAACxlC,CAAD,CAA/B,CAAV;AACAmmC,MAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUX,MAAM,CAACtjC,CAAD,CAAN,CAAUkkC,GAAV,GAAgBb,QAAhB,CAAyBC,MAAM,CAACxlC,CAAD,CAAN,CAAUwB,GAAV,EAAzB,CAAV;AACD;;AAED,QAAIxE,KAAK,GAAG,CACV,CAAC,CADS;AACN;AACJ,KAAC,CAFS;AAEN;AACJ,KAAC,CAHS;AAGN;AACJ,KAAC,CAJS;AAIN;AACJ,KALU;AAKP;AACH,KANU;AAMP;AACH,KAPU;AAOP;AACH,KARU;AAQP;AACH;AAAI;AATM,KAAZ;AAYA,QAAIimC,GAAG,GAAGH,MAAM,CAACkD,MAAM,CAAC9jC,CAAD,CAAP,EAAY8jC,MAAM,CAAChmC,CAAD,CAAlB,CAAhB;AACAvE,IAAAA,GAAG,GAAGc,IAAI,CAACd,GAAL,CAASwnC,GAAG,CAAC,CAAD,CAAH,CAAOhoC,MAAhB,EAAwBQ,GAAxB,CAAN;AACAonC,IAAAA,GAAG,CAAC3gC,CAAD,CAAH,GAAS,IAAI3G,KAAJ,CAAUE,GAAV,CAAT;AACAonC,IAAAA,GAAG,CAAC7iC,CAAD,CAAH,GAAS,IAAIzE,KAAJ,CAAUE,GAAV,CAAT;;AACA,SAAKiB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGjB,GAAhB,EAAqBiB,CAAC,EAAtB,EAA0B;AACxB,UAAI2pC,EAAE,GAAGpD,GAAG,CAAC,CAAD,CAAH,CAAOvmC,CAAP,IAAY,CAArB;AACA,UAAI4pC,EAAE,GAAGrD,GAAG,CAAC,CAAD,CAAH,CAAOvmC,CAAP,IAAY,CAArB;AAEAmmC,MAAAA,GAAG,CAAC3gC,CAAD,CAAH,CAAOxF,CAAP,IAAYM,KAAK,CAAC,CAACqpC,EAAE,GAAG,CAAN,IAAW,CAAX,IAAgBC,EAAE,GAAG,CAArB,CAAD,CAAjB;AACAzD,MAAAA,GAAG,CAAC7iC,CAAD,CAAH,CAAOtD,CAAP,IAAY,CAAZ;AACAqX,MAAAA,GAAG,CAAC7R,CAAD,CAAH,GAASikC,IAAT;AACD;AACF;;AAED,MAAI/3B,GAAG,GAAG,KAAKk3B,MAAL,CAAY,IAAZ,EAAkB,IAAlB,EAAwB,IAAxB,CAAV;AACA,MAAInzB,GAAG,GAAG,KAAKqyB,OAAf;;AACA,OAAK/nC,CAAC,GAAGhB,GAAT,EAAcgB,CAAC,IAAI,CAAnB,EAAsBA,CAAC,EAAvB,EAA2B;AACzB,QAAIsG,CAAC,GAAG,CAAR;;AAEA,WAAOtG,CAAC,IAAI,CAAZ,EAAe;AACb,UAAIwnC,IAAI,GAAG,IAAX;;AACA,WAAKvnC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGiB,GAAhB,EAAqBjB,CAAC,EAAtB,EAA0B;AACxByV,QAAAA,GAAG,CAACzV,CAAD,CAAH,GAASmmC,GAAG,CAACnmC,CAAD,CAAH,CAAOD,CAAP,IAAY,CAArB;AACA,YAAI0V,GAAG,CAACzV,CAAD,CAAH,KAAW,CAAf,EACEunC,IAAI,GAAG,KAAP;AACH;;AACD,UAAI,CAACA,IAAL,EACE;AACFlhC,MAAAA,CAAC;AACDtG,MAAAA,CAAC;AACF;;AACD,QAAIA,CAAC,IAAI,CAAT,EACEsG,CAAC;AACHqL,IAAAA,GAAG,GAAGA,GAAG,CAACy3B,IAAJ,CAAS9iC,CAAT,CAAN;AACA,QAAItG,CAAC,GAAG,CAAR,EACE;;AAEF,SAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGiB,GAAhB,EAAqBjB,CAAC,EAAtB,EAA0B;AACxB,UAAIkX,CAAC,GAAGzB,GAAG,CAACzV,CAAD,CAAX;AACA,UAAIkX,CAAC,KAAK,CAAV,EACE,SADF,KAEK,IAAIA,CAAC,GAAG,CAAR,EACH3J,CAAC,GAAG8J,GAAG,CAACrX,CAAD,CAAH,CAAQkX,CAAC,GAAG,CAAL,IAAW,CAAlB,CAAJ,CADG,KAEA,IAAIA,CAAC,GAAG,CAAR,EACH3J,CAAC,GAAG8J,GAAG,CAACrX,CAAD,CAAH,CAAQ,CAACkX,CAAD,GAAK,CAAN,IAAY,CAAnB,EAAsBpS,GAAtB,EAAJ;AAEF,UAAIyI,CAAC,CAAC7R,IAAF,KAAW,QAAf,EACEgW,GAAG,GAAGA,GAAG,CAACm3B,QAAJ,CAAat7B,CAAb,CAAN,CADF,KAGEmE,GAAG,GAAGA,GAAG,CAACzL,GAAJ,CAAQsH,CAAR,CAAN;AACH;AACF,GA/Ge,CAgHhB;;;AACA,OAAKxN,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGkB,GAAhB,EAAqBlB,CAAC,EAAtB,EACEsX,GAAG,CAACtX,CAAD,CAAH,GAAS,IAAT;;AAEF,MAAIwpC,cAAJ,EACE,OAAO73B,GAAP,CADF,KAGE,OAAOA,GAAG,CAACq3B,GAAJ,EAAP;AACH,CA5HD;;AA8HA,SAASc,SAAT,CAAmBC,KAAnB,EAA0BpuC,IAA1B,EAAgC;AAC9B,OAAKouC,KAAL,GAAaA,KAAb;AACA,OAAKpuC,IAAL,GAAYA,IAAZ;AACA,OAAK4sC,WAAL,GAAmB,IAAnB;AACD;;AACDjB,SAAS,CAACwC,SAAV,GAAsBA,SAAtB;;AAEAA,SAAS,CAAC/rC,SAAV,CAAoB2V,EAApB,GAAyB,SAASA,EAAT,GAAuB;AAC9C,QAAM,IAAIjW,KAAJ,CAAU,iBAAV,CAAN;AACD,CAFD;;AAIAqsC,SAAS,CAAC/rC,SAAV,CAAoBsqC,QAApB,GAA+B,SAASA,QAAT,GAAoB;AACjD,SAAO,KAAK0B,KAAL,CAAW1B,QAAX,CAAoB,IAApB,CAAP;AACD,CAFD;;AAIAf,SAAS,CAACvpC,SAAV,CAAoBisC,WAApB,GAAkC,SAASA,WAAT,CAAqB9pB,KAArB,EAA4BsY,GAA5B,EAAiC;AACjEtY,EAAAA,KAAK,GAAGgmB,SAAS,CAACrmC,OAAV,CAAkBqgB,KAAlB,EAAyBsY,GAAzB,CAAR;AAEA,MAAIt3B,GAAG,GAAG,KAAKsM,CAAL,CAAOrK,UAAP,EAAV,CAHiE,CAKjE;;AACA,MAAI,CAAC+c,KAAK,CAAC,CAAD,CAAL,KAAa,IAAb,IAAqBA,KAAK,CAAC,CAAD,CAAL,KAAa,IAAlC,IAA0CA,KAAK,CAAC,CAAD,CAAL,KAAa,IAAxD,KACAA,KAAK,CAAC1hB,MAAN,GAAe,CAAf,KAAqB,IAAI0C,GAD7B,EACkC;AAChC,QAAIgf,KAAK,CAAC,CAAD,CAAL,KAAa,IAAjB,EACEmnB,UAAU,CAACnnB,KAAK,CAACA,KAAK,CAAC1hB,MAAN,GAAe,CAAhB,CAAL,GAA0B,CAA1B,KAAgC,CAAjC,CAAV,CADF,KAEK,IAAI0hB,KAAK,CAAC,CAAD,CAAL,KAAa,IAAjB,EACHmnB,UAAU,CAACnnB,KAAK,CAACA,KAAK,CAAC1hB,MAAN,GAAe,CAAhB,CAAL,GAA0B,CAA1B,KAAgC,CAAjC,CAAV;AAEF,QAAI8E,GAAG,GAAI,KAAK8kC,KAAL,CAAWloB,KAAK,CAAC7C,KAAN,CAAY,CAAZ,EAAe,IAAInc,GAAnB,CAAX,EACTgf,KAAK,CAAC7C,KAAN,CAAY,IAAInc,GAAhB,EAAqB,IAAI,IAAIA,GAA7B,CADS,CAAX;AAGA,WAAOoC,GAAP;AACD,GAXD,MAWO,IAAI,CAAC4c,KAAK,CAAC,CAAD,CAAL,KAAa,IAAb,IAAqBA,KAAK,CAAC,CAAD,CAAL,KAAa,IAAnC,KACCA,KAAK,CAAC1hB,MAAN,GAAe,CAAf,KAAqB0C,GAD1B,EAC+B;AACpC,WAAO,KAAK+oC,UAAL,CAAgB/pB,KAAK,CAAC7C,KAAN,CAAY,CAAZ,EAAe,IAAInc,GAAnB,CAAhB,EAAyCgf,KAAK,CAAC,CAAD,CAAL,KAAa,IAAtD,CAAP;AACD;;AACD,QAAM,IAAIziB,KAAJ,CAAU,sBAAV,CAAN;AACD,CAtBD;;AAwBAqsC,SAAS,CAAC/rC,SAAV,CAAoBmsC,gBAApB,GAAuC,SAASA,gBAAT,CAA0B1R,GAA1B,EAA+B;AACpE,SAAO,KAAK/N,MAAL,CAAY+N,GAAZ,EAAiB,IAAjB,CAAP;AACD,CAFD;;AAIAsR,SAAS,CAAC/rC,SAAV,CAAoBusB,OAApB,GAA8B,SAASA,OAAT,CAAiB6f,OAAjB,EAA0B;AACtD,MAAIjpC,GAAG,GAAG,KAAK6oC,KAAL,CAAWv8B,CAAX,CAAarK,UAAb,EAAV;AACA,MAAIiJ,CAAC,GAAG,KAAKg+B,IAAL,GAAYvqC,OAAZ,CAAoB,IAApB,EAA0BqB,GAA1B,CAAR;AAEA,MAAIipC,OAAJ,EACE,OAAO,CAAE,KAAKE,IAAL,GAAYn4B,MAAZ,KAAuB,IAAvB,GAA8B,IAAhC,EAAuCmM,MAAvC,CAA8CjS,CAA9C,CAAP;AAEF,SAAO,CAAE,IAAF,EAASiS,MAAT,CAAgBjS,CAAhB,EAAmB,KAAKi+B,IAAL,GAAYxqC,OAAZ,CAAoB,IAApB,EAA0BqB,GAA1B,CAAnB,CAAP;AACD,CARD;;AAUA4oC,SAAS,CAAC/rC,SAAV,CAAoB0sB,MAApB,GAA6B,SAASA,MAAT,CAAgB+N,GAAhB,EAAqB2R,OAArB,EAA8B;AACzD,SAAOjE,SAAS,CAACzb,MAAV,CAAiB,KAAKH,OAAL,CAAa6f,OAAb,CAAjB,EAAwC3R,GAAxC,CAAP;AACD,CAFD;;AAIAsR,SAAS,CAAC/rC,SAAV,CAAoBusC,UAApB,GAAiC,SAASA,UAAT,CAAoBC,KAApB,EAA2B;AAC1D,MAAI,KAAKhC,WAAT,EACE,OAAO,IAAP;AAEF,MAAIA,WAAW,GAAG;AAChBC,IAAAA,OAAO,EAAE,IADO;AAEhBpC,IAAAA,GAAG,EAAE,IAFW;AAGhBoE,IAAAA,IAAI,EAAE;AAHU,GAAlB;AAKAjC,EAAAA,WAAW,CAACnC,GAAZ,GAAkB,KAAK+C,aAAL,CAAmB,CAAnB,CAAlB;AACAZ,EAAAA,WAAW,CAACC,OAAZ,GAAsB,KAAKC,WAAL,CAAiB,CAAjB,EAAoB8B,KAApB,CAAtB;AACAhC,EAAAA,WAAW,CAACiC,IAAZ,GAAmB,KAAKC,QAAL,EAAnB;AACA,OAAKlC,WAAL,GAAmBA,WAAnB;AAEA,SAAO,IAAP;AACD,CAfD;;AAiBAuB,SAAS,CAAC/rC,SAAV,CAAoB2sC,WAApB,GAAkC,SAASA,WAAT,CAAqBpkC,CAArB,EAAwB;AACxD,MAAI,CAAC,KAAKiiC,WAAV,EACE,OAAO,KAAP;AAEF,MAAIC,OAAO,GAAG,KAAKD,WAAL,CAAiBC,OAA/B;AACA,MAAI,CAACA,OAAL,EACE,OAAO,KAAP;AAEF,SAAOA,OAAO,CAACO,MAAR,CAAevqC,MAAf,IAAyBsB,IAAI,CAACC,IAAL,CAAU,CAACuG,CAAC,CAACvC,SAAF,KAAgB,CAAjB,IAAsBykC,OAAO,CAAClmB,IAAxC,CAAhC;AACD,CATD;;AAWAwnB,SAAS,CAAC/rC,SAAV,CAAoB0qC,WAApB,GAAkC,SAASA,WAAT,CAAqBnmB,IAArB,EAA2BioB,KAA3B,EAAkC;AAClE,MAAI,KAAKhC,WAAL,IAAoB,KAAKA,WAAL,CAAiBC,OAAzC,EACE,OAAO,KAAKD,WAAL,CAAiBC,OAAxB;AAEF,MAAIA,OAAO,GAAG,CAAE,IAAF,CAAd;AACA,MAAI72B,GAAG,GAAG,IAAV;;AACA,OAAK,IAAI3R,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuqC,KAApB,EAA2BvqC,CAAC,IAAIsiB,IAAhC,EAAsC;AACpC,SAAK,IAAIriB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqiB,IAApB,EAA0BriB,CAAC,EAA3B,EACE0R,GAAG,GAAGA,GAAG,CAACg5B,GAAJ,EAAN;;AACFnC,IAAAA,OAAO,CAAC3vB,IAAR,CAAalH,GAAb;AACD;;AACD,SAAO;AACL2Q,IAAAA,IAAI,EAAEA,IADD;AAELymB,IAAAA,MAAM,EAAEP;AAFH,GAAP;AAID,CAfD;;AAiBAsB,SAAS,CAAC/rC,SAAV,CAAoBorC,aAApB,GAAoC,SAASA,aAAT,CAAuB7xB,GAAvB,EAA4B;AAC9D,MAAI,KAAKixB,WAAL,IAAoB,KAAKA,WAAL,CAAiBnC,GAAzC,EACE,OAAO,KAAKmC,WAAL,CAAiBnC,GAAxB;AAEF,MAAI9iC,GAAG,GAAG,CAAE,IAAF,CAAV;AACA,MAAItE,GAAG,GAAG,CAAC,KAAKsY,GAAN,IAAa,CAAvB;AACA,MAAIqzB,GAAG,GAAG3rC,GAAG,KAAK,CAAR,GAAY,IAAZ,GAAmB,KAAK2rC,GAAL,EAA7B;;AACA,OAAK,IAAI3qC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,GAApB,EAAyBgB,CAAC,EAA1B,EACEsD,GAAG,CAACtD,CAAD,CAAH,GAASsD,GAAG,CAACtD,CAAC,GAAG,CAAL,CAAH,CAAWkG,GAAX,CAAeykC,GAAf,CAAT;;AACF,SAAO;AACLrzB,IAAAA,GAAG,EAAEA,GADA;AAELyxB,IAAAA,MAAM,EAAEzlC;AAFH,GAAP;AAID,CAbD;;AAeAwmC,SAAS,CAAC/rC,SAAV,CAAoB0sC,QAApB,GAA+B,SAASA,QAAT,GAAoB;AACjD,SAAO,IAAP;AACD,CAFD;;AAIAX,SAAS,CAAC/rC,SAAV,CAAoBqrC,IAApB,GAA2B,SAASA,IAAT,CAAc9iC,CAAd,EAAiB;AAC1C,MAAI1F,CAAC,GAAG,IAAR;;AACA,OAAK,IAAIZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsG,CAApB,EAAuBtG,CAAC,EAAxB,EACEY,CAAC,GAAGA,CAAC,CAAC+pC,GAAF,EAAJ;;AACF,SAAO/pC,CAAP;AACD,CALD;;AAOA,IAAIgqC,kBAAkB,GAAGnF,sBAAsB,CAAC,UAAU5oC,MAAV,EAAkB;AAClE,MAAI,OAAOyc,MAAM,CAACiM,MAAd,KAAyB,UAA7B,EAAyC;AACvC;AACA1oB,IAAAA,MAAM,CAACC,OAAP,GAAiB,SAASY,QAAT,CAAkBC,IAAlB,EAAwBC,SAAxB,EAAmC;AAClD,UAAIA,SAAJ,EAAe;AACbD,QAAAA,IAAI,CAACE,MAAL,GAAcD,SAAd;AACAD,QAAAA,IAAI,CAACI,SAAL,GAAiBub,MAAM,CAACiM,MAAP,CAAc3nB,SAAS,CAACG,SAAxB,EAAmC;AAClDC,UAAAA,WAAW,EAAE;AACXyb,YAAAA,KAAK,EAAE9b,IADI;AAEX6b,YAAAA,UAAU,EAAE,KAFD;AAGXE,YAAAA,QAAQ,EAAE,IAHC;AAIX2e,YAAAA,YAAY,EAAE;AAJH;AADqC,SAAnC,CAAjB;AAQD;AACF,KAZD;AAaD,GAfD,MAeO;AACL;AACAx7B,IAAAA,MAAM,CAACC,OAAP,GAAiB,SAASY,QAAT,CAAkBC,IAAlB,EAAwBC,SAAxB,EAAmC;AAClD,UAAIA,SAAJ,EAAe;AACbD,QAAAA,IAAI,CAACE,MAAL,GAAcD,SAAd;;AACA,YAAIE,QAAQ,GAAG,YAAY,CAAE,CAA7B;;AACAA,QAAAA,QAAQ,CAACC,SAAT,GAAqBH,SAAS,CAACG,SAA/B;AACAJ,QAAAA,IAAI,CAACI,SAAL,GAAiB,IAAID,QAAJ,EAAjB;AACAH,QAAAA,IAAI,CAACI,SAAL,CAAeC,WAAf,GAA6BL,IAA7B;AACD;AACF,KARD;AASD;AACA,CA5B8C,CAA/C;AAmCA,IAAIktC,QAAQ,GAAG3E,SAAS,CAAC5oC,MAAzB;;AAEA,SAASwtC,UAAT,CAAoBvD,IAApB,EAA0B;AACxBppC,EAAAA,IAAI,CAACiY,IAAL,CAAU,IAAV,EAAgB,OAAhB,EAAyBmxB,IAAzB;AAEA,OAAK9hC,CAAL,GAAS,IAAIpI,EAAJ,CAAOkqC,IAAI,CAAC9hC,CAAZ,EAAe,EAAf,EAAmBmO,KAAnB,CAAyB,KAAKnV,GAA9B,CAAT;AACA,OAAK8E,CAAL,GAAS,IAAIlG,EAAJ,CAAOkqC,IAAI,CAAChkC,CAAZ,EAAe,EAAf,EAAmBqQ,KAAnB,CAAyB,KAAKnV,GAA9B,CAAT;AACA,OAAKssC,IAAL,GAAY,KAAKtD,GAAL,CAASxyB,OAAT,EAAZ;AAEA,OAAK+1B,KAAL,GAAa,KAAKvlC,CAAL,CAAOuO,OAAP,GAAiBnB,IAAjB,CAAsB,CAAtB,MAA6B,CAA1C;AACA,OAAKo4B,MAAL,GAAc,KAAKxlC,CAAL,CAAOuO,OAAP,GAAiB7N,GAAjB,CAAqB,KAAKqH,CAA1B,EAA6BqF,IAA7B,CAAkC,CAAC,CAAnC,MAA0C,CAAxD,CARwB,CAUxB;;AACA,OAAKq4B,IAAL,GAAY,KAAKC,gBAAL,CAAsB5D,IAAtB,CAAZ;AACA,OAAK6D,WAAL,GAAmB,IAAItsC,KAAJ,CAAU,CAAV,CAAnB;AACA,OAAKusC,WAAL,GAAmB,IAAIvsC,KAAJ,CAAU,CAAV,CAAnB;AACD;;AACD8rC,kBAAkB,CAACE,UAAD,EAAa3sC,IAAb,CAAlB;AACA,IAAImtC,OAAO,GAAGR,UAAd;;AAEAA,UAAU,CAAC/sC,SAAX,CAAqBotC,gBAArB,GAAwC,SAASA,gBAAT,CAA0B5D,IAA1B,EAAgC;AACtE;AACA,MAAI,CAAC,KAAKyD,KAAN,IAAe,CAAC,KAAK/4B,CAArB,IAA0B,CAAC,KAAKjV,CAAhC,IAAqC,KAAKwQ,CAAL,CAAO7K,IAAP,CAAY,CAAZ,MAAmB,CAA5D,EACE,OAHoE,CAKtE;;AACA,MAAI6nC,IAAJ;AACA,MAAIe,MAAJ;;AACA,MAAIhE,IAAI,CAACiD,IAAT,EAAe;AACbA,IAAAA,IAAI,GAAG,IAAIntC,EAAJ,CAAOkqC,IAAI,CAACiD,IAAZ,EAAkB,EAAlB,EAAsB52B,KAAtB,CAA4B,KAAKnV,GAAjC,CAAP;AACD,GAFD,MAEO;AACL,QAAI+sC,KAAK,GAAG,KAAKC,aAAL,CAAmB,KAAKj+B,CAAxB,CAAZ,CADK,CAEL;;;AACAg9B,IAAAA,IAAI,GAAGgB,KAAK,CAAC,CAAD,CAAL,CAASrsC,GAAT,CAAaqsC,KAAK,CAAC,CAAD,CAAlB,IAAyB,CAAzB,GAA6BA,KAAK,CAAC,CAAD,CAAlC,GAAwCA,KAAK,CAAC,CAAD,CAApD;AACAhB,IAAAA,IAAI,GAAGA,IAAI,CAAC52B,KAAL,CAAW,KAAKnV,GAAhB,CAAP;AACD;;AACD,MAAI8oC,IAAI,CAACgE,MAAT,EAAiB;AACfA,IAAAA,MAAM,GAAG,IAAIluC,EAAJ,CAAOkqC,IAAI,CAACgE,MAAZ,EAAoB,EAApB,CAAT;AACD,GAFD,MAEO;AACL;AACA,QAAIG,OAAO,GAAG,KAAKD,aAAL,CAAmB,KAAKzuC,CAAxB,CAAd;;AACA,QAAI,KAAKiV,CAAL,CAAOhR,GAAP,CAAWyqC,OAAO,CAAC,CAAD,CAAlB,EAAuBt/B,CAAvB,CAAyBjN,GAAzB,CAA6B,KAAK8S,CAAL,CAAO7F,CAAP,CAASqI,MAAT,CAAgB+1B,IAAhB,CAA7B,MAAwD,CAA5D,EAA+D;AAC7De,MAAAA,MAAM,GAAGG,OAAO,CAAC,CAAD,CAAhB;AACD,KAFD,MAEO;AACLH,MAAAA,MAAM,GAAGG,OAAO,CAAC,CAAD,CAAhB;AACAb,MAAAA,QAAQ,CAAC,KAAK54B,CAAL,CAAOhR,GAAP,CAAWsqC,MAAX,EAAmBn/B,CAAnB,CAAqBjN,GAArB,CAAyB,KAAK8S,CAAL,CAAO7F,CAAP,CAASqI,MAAT,CAAgB+1B,IAAhB,CAAzB,MAAoD,CAArD,CAAR;AACD;AACF,GA3BqE,CA6BtE;;;AACA,MAAImB,KAAJ;;AACA,MAAIpE,IAAI,CAACoE,KAAT,EAAgB;AACdA,IAAAA,KAAK,GAAGpE,IAAI,CAACoE,KAAL,CAAWntB,GAAX,CAAe,UAASotB,GAAT,EAAc;AACnC,aAAO;AACLnmC,QAAAA,CAAC,EAAE,IAAIpI,EAAJ,CAAOuuC,GAAG,CAACnmC,CAAX,EAAc,EAAd,CADE;AAELlC,QAAAA,CAAC,EAAE,IAAIlG,EAAJ,CAAOuuC,GAAG,CAACroC,CAAX,EAAc,EAAd;AAFE,OAAP;AAID,KALO,CAAR;AAMD,GAPD,MAOO;AACLooC,IAAAA,KAAK,GAAG,KAAKE,aAAL,CAAmBN,MAAnB,CAAR;AACD;;AAED,SAAO;AACLf,IAAAA,IAAI,EAAEA,IADD;AAELe,IAAAA,MAAM,EAAEA,MAFH;AAGLI,IAAAA,KAAK,EAAEA;AAHF,GAAP;AAKD,CA/CD;;AAiDAb,UAAU,CAAC/sC,SAAX,CAAqB0tC,aAArB,GAAqC,SAASA,aAAT,CAAuB5sC,GAAvB,EAA4B;AAC/D;AACA;AACA;AACA,MAAIJ,GAAG,GAAGI,GAAG,KAAK,KAAK2O,CAAb,GAAiB,KAAK/O,GAAtB,GAA4BpB,EAAE,CAACoa,IAAH,CAAQ5Y,GAAR,CAAtC;AACA,MAAIksC,IAAI,GAAG,IAAI1tC,EAAJ,CAAO,CAAP,EAAUuW,KAAV,CAAgBnV,GAAhB,EAAqBwW,OAArB,EAAX;AACA,MAAI62B,KAAK,GAAGf,IAAI,CAAC71B,MAAL,EAAZ;AAEA,MAAIhI,CAAC,GAAG,IAAI7P,EAAJ,CAAO,CAAP,EAAUuW,KAAV,CAAgBnV,GAAhB,EAAqByW,MAArB,GAA8BH,OAA9B,GAAwCN,MAAxC,CAA+Cs2B,IAA/C,CAAR;AAEA,MAAIgB,EAAE,GAAGD,KAAK,CAAC33B,MAAN,CAAajH,CAAb,EAAgB8G,OAAhB,EAAT;AACA,MAAIg4B,EAAE,GAAGF,KAAK,CAACz3B,MAAN,CAAanH,CAAb,EAAgB8G,OAAhB,EAAT;AACA,SAAO,CAAE+3B,EAAF,EAAMC,EAAN,CAAP;AACD,CAbD;;AAeAlB,UAAU,CAAC/sC,SAAX,CAAqB8tC,aAArB,GAAqC,SAASA,aAAT,CAAuBN,MAAvB,EAA+B;AAClE;AACA,MAAIU,QAAQ,GAAG,KAAKjvC,CAAL,CAAOmT,KAAP,CAAarQ,IAAI,CAACsf,KAAL,CAAW,KAAKpiB,CAAL,CAAO+G,SAAP,KAAqB,CAAhC,CAAb,CAAf,CAFkE,CAIlE;AACA;;AACA,MAAI8T,CAAC,GAAG0zB,MAAR;AACA,MAAI5tB,CAAC,GAAG,KAAK3gB,CAAL,CAAO6E,KAAP,EAAR;AACA,MAAI6Q,EAAE,GAAG,IAAIrV,EAAJ,CAAO,CAAP,CAAT;AACA,MAAI6uC,EAAE,GAAG,IAAI7uC,EAAJ,CAAO,CAAP,CAAT;AACA,MAAIsV,EAAE,GAAG,IAAItV,EAAJ,CAAO,CAAP,CAAT;AACA,MAAI8uC,EAAE,GAAG,IAAI9uC,EAAJ,CAAO,CAAP,CAAT,CAXkE,CAalE;;AACA,MAAIwJ,EAAJ;AACA,MAAI8B,EAAJ,CAfkE,CAgBlE;;AACA,MAAI3B,EAAJ;AACA,MAAI8B,EAAJ,CAlBkE,CAmBlE;;AACA,MAAI3B,EAAJ;AACA,MAAI8B,EAAJ;AAEA,MAAImjC,KAAJ;AACA,MAAIpsC,CAAC,GAAG,CAAR;AACA,MAAIY,CAAJ;AACA,MAAIwL,CAAJ;;AACA,SAAOyL,CAAC,CAAChF,IAAF,CAAO,CAAP,MAAc,CAArB,EAAwB;AACtB,QAAIrP,CAAC,GAAGma,CAAC,CAACzM,GAAF,CAAM2G,CAAN,CAAR;AACAjX,IAAAA,CAAC,GAAG+c,CAAC,CAACxX,GAAF,CAAM3C,CAAC,CAACvC,GAAF,CAAM4W,CAAN,CAAN,CAAJ;AACAzL,IAAAA,CAAC,GAAGuG,EAAE,CAACxM,GAAH,CAAO3C,CAAC,CAACvC,GAAF,CAAMyR,EAAN,CAAP,CAAJ;AACA,QAAIrG,CAAC,GAAG8/B,EAAE,CAAChmC,GAAH,CAAO3C,CAAC,CAACvC,GAAF,CAAMirC,EAAN,CAAP,CAAR;;AAEA,QAAI,CAACllC,EAAD,IAAOpG,CAAC,CAACzB,GAAF,CAAM8sC,QAAN,IAAkB,CAA7B,EAAgC;AAC9BplC,MAAAA,EAAE,GAAGulC,KAAK,CAACrnC,GAAN,EAAL;AACA4D,MAAAA,EAAE,GAAG+J,EAAL;AACA1L,MAAAA,EAAE,GAAGpG,CAAC,CAACmE,GAAF,EAAL;AACA+D,MAAAA,EAAE,GAAGsD,CAAL;AACD,KALD,MAKO,IAAIpF,EAAE,IAAI,EAAEhH,CAAF,KAAQ,CAAlB,EAAqB;AAC1B;AACD;;AACDosC,IAAAA,KAAK,GAAGxrC,CAAR;AAEA+c,IAAAA,CAAC,GAAG9F,CAAJ;AACAA,IAAAA,CAAC,GAAGjX,CAAJ;AACA+R,IAAAA,EAAE,GAAGD,EAAL;AACAA,IAAAA,EAAE,GAAGtG,CAAL;AACA+/B,IAAAA,EAAE,GAAGD,EAAL;AACAA,IAAAA,EAAE,GAAG7/B,CAAL;AACD;;AACDlF,EAAAA,EAAE,GAAGvG,CAAC,CAACmE,GAAF,EAAL;AACAkE,EAAAA,EAAE,GAAGmD,CAAL;AAEA,MAAIigC,IAAI,GAAGrlC,EAAE,CAACmI,GAAH,GAASjJ,GAAT,CAAa4C,EAAE,CAACqG,GAAH,EAAb,CAAX;AACA,MAAIm9B,IAAI,GAAGnlC,EAAE,CAACgI,GAAH,GAASjJ,GAAT,CAAa+C,EAAE,CAACkG,GAAH,EAAb,CAAX;;AACA,MAAIm9B,IAAI,CAACntC,GAAL,CAASktC,IAAT,KAAkB,CAAtB,EAAyB;AACvBllC,IAAAA,EAAE,GAAGN,EAAL;AACAoC,IAAAA,EAAE,GAAGN,EAAL;AACD,GA1DiE,CA4DlE;;;AACA,MAAI3B,EAAE,CAAC1I,QAAP,EAAiB;AACf0I,IAAAA,EAAE,GAAGA,EAAE,CAACjC,GAAH,EAAL;AACA+D,IAAAA,EAAE,GAAGA,EAAE,CAAC/D,GAAH,EAAL;AACD;;AACD,MAAIoC,EAAE,CAAC7I,QAAP,EAAiB;AACf6I,IAAAA,EAAE,GAAGA,EAAE,CAACpC,GAAH,EAAL;AACAkE,IAAAA,EAAE,GAAGA,EAAE,CAAClE,GAAH,EAAL;AACD;;AAED,SAAO,CACL;AAAEU,IAAAA,CAAC,EAAEuB,EAAL;AAASzD,IAAAA,CAAC,EAAEuF;AAAZ,GADK,EAEL;AAAErD,IAAAA,CAAC,EAAE0B,EAAL;AAAS5D,IAAAA,CAAC,EAAE0F;AAAZ,GAFK,CAAP;AAID,CA1ED;;AA4EA6hC,UAAU,CAAC/sC,SAAX,CAAqBwuC,UAArB,GAAkC,SAASA,UAAT,CAAoBjmC,CAApB,EAAuB;AACvD,MAAIqlC,KAAK,GAAG,KAAKT,IAAL,CAAUS,KAAtB;AACA,MAAIa,EAAE,GAAGb,KAAK,CAAC,CAAD,CAAd;AACA,MAAIc,EAAE,GAAGd,KAAK,CAAC,CAAD,CAAd;AAEA,MAAI5kB,EAAE,GAAG0lB,EAAE,CAAClpC,CAAH,CAAKtC,GAAL,CAASqF,CAAT,EAAYiL,QAAZ,CAAqB,KAAKvU,CAA1B,CAAT;AACA,MAAIgqB,EAAE,GAAGwlB,EAAE,CAACjpC,CAAH,CAAKwB,GAAL,GAAW9D,GAAX,CAAeqF,CAAf,EAAkBiL,QAAlB,CAA2B,KAAKvU,CAAhC,CAAT;AAEA,MAAI0vC,EAAE,GAAG3lB,EAAE,CAAC9lB,GAAH,CAAOurC,EAAE,CAAC/mC,CAAV,CAAT;AACA,MAAIknC,EAAE,GAAG3lB,EAAE,CAAC/lB,GAAH,CAAOwrC,EAAE,CAAChnC,CAAV,CAAT;AACA,MAAImnC,EAAE,GAAG7lB,EAAE,CAAC9lB,GAAH,CAAOurC,EAAE,CAACjpC,CAAV,CAAT;AACA,MAAIspC,EAAE,GAAG7lB,EAAE,CAAC/lB,GAAH,CAAOwrC,EAAE,CAAClpC,CAAV,CAAT,CAXuD,CAavD;;AACA,MAAI+iC,EAAE,GAAGhgC,CAAC,CAACH,GAAF,CAAMumC,EAAN,EAAUvmC,GAAV,CAAcwmC,EAAd,CAAT;AACA,MAAIpG,EAAE,GAAGqG,EAAE,CAAC1mC,GAAH,CAAO2mC,EAAP,EAAW9nC,GAAX,EAAT;AACA,SAAO;AAAEuhC,IAAAA,EAAE,EAAEA,EAAN;AAAUC,IAAAA,EAAE,EAAEA;AAAd,GAAP;AACD,CAjBD;;AAmBAuE,UAAU,CAAC/sC,SAAX,CAAqBksC,UAArB,GAAkC,SAASA,UAAT,CAAoB79B,CAApB,EAAuB8B,GAAvB,EAA4B;AAC5D9B,EAAAA,CAAC,GAAG,IAAI/O,EAAJ,CAAO+O,CAAP,EAAU,EAAV,CAAJ;AACA,MAAI,CAACA,CAAC,CAAC3N,GAAP,EACE2N,CAAC,GAAGA,CAAC,CAACwH,KAAF,CAAQ,KAAKnV,GAAb,CAAJ;AAEF,MAAI0tC,EAAE,GAAG//B,CAAC,CAACwI,MAAF,GAAWH,MAAX,CAAkBrI,CAAlB,EAAqBgI,OAArB,CAA6BhI,CAAC,CAACqI,MAAF,CAAS,KAAKhP,CAAd,CAA7B,EAA+C2O,OAA/C,CAAuD,KAAK7Q,CAA5D,CAAT;AACA,MAAI8I,CAAC,GAAG8/B,EAAE,CAACp3B,OAAH,EAAR;AACA,MAAI1I,CAAC,CAACuI,MAAF,GAAWP,MAAX,CAAkB83B,EAAlB,EAAsBhtC,GAAtB,CAA0B,KAAKqoC,IAA/B,MAAyC,CAA7C,EACE,MAAM,IAAI/pC,KAAJ,CAAU,eAAV,CAAN,CAR0D,CAU5D;AACA;;AACA,MAAI6U,KAAK,GAAGjG,CAAC,CAAC2H,OAAF,GAAY1B,KAAZ,EAAZ;AACA,MAAIpE,GAAG,IAAI,CAACoE,KAAR,IAAiB,CAACpE,GAAD,IAAQoE,KAA7B,EACEjG,CAAC,GAAGA,CAAC,CAAC6I,MAAF,EAAJ;AAEF,SAAO,KAAKkzB,KAAL,CAAWh8B,CAAX,EAAcC,CAAd,CAAP;AACD,CAjBD;;AAmBAy+B,UAAU,CAAC/sC,SAAX,CAAqBsqC,QAArB,GAAgC,SAASA,QAAT,CAAkBD,KAAlB,EAAyB;AACvD,MAAIA,KAAK,CAAC0E,GAAV,EACE,OAAO,IAAP;AAEF,MAAI1gC,CAAC,GAAGg8B,KAAK,CAACh8B,CAAd;AACA,MAAIC,CAAC,GAAG+7B,KAAK,CAAC/7B,CAAd;AAEA,MAAI0gC,EAAE,GAAG,KAAKtnC,CAAL,CAAOgP,MAAP,CAAcrI,CAAd,CAAT;AACA,MAAI4gC,GAAG,GAAG5gC,CAAC,CAACwI,MAAF,GAAWH,MAAX,CAAkBrI,CAAlB,EAAqBgI,OAArB,CAA6B24B,EAA7B,EAAiC34B,OAAjC,CAAyC,KAAK7Q,CAA9C,CAAV;AACA,SAAO8I,CAAC,CAACuI,MAAF,GAAWN,OAAX,CAAmB04B,GAAnB,EAAwBn6B,IAAxB,CAA6B,CAA7B,MAAoC,CAA3C;AACD,CAVD;;AAYAi4B,UAAU,CAAC/sC,SAAX,CAAqBkvC,eAArB,GACI,SAASA,eAAT,CAAyBlE,MAAzB,EAAiCQ,MAAjC,EAAyCC,cAAzC,EAAyD;AACvD,MAAI0D,OAAO,GAAG,KAAK9B,WAAnB;AACA,MAAI+B,OAAO,GAAG,KAAK9B,WAAnB;;AACA,OAAK,IAAIrrC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+oC,MAAM,CAACvqC,MAA3B,EAAmCwB,CAAC,EAApC,EAAwC;AACtC,QAAI8V,KAAK,GAAG,KAAKy2B,UAAL,CAAgBhD,MAAM,CAACvpC,CAAD,CAAtB,CAAZ;;AACA,QAAIwN,CAAC,GAAGu7B,MAAM,CAAC/oC,CAAD,CAAd;;AACA,QAAIwqC,IAAI,GAAGh9B,CAAC,CAACi9B,QAAF,EAAX;;AAEA,QAAI30B,KAAK,CAACwwB,EAAN,CAAShoC,QAAb,EAAuB;AACrBwX,MAAAA,KAAK,CAACwwB,EAAN,CAASzhC,IAAT;AACA2I,MAAAA,CAAC,GAAGA,CAAC,CAACzI,GAAF,CAAM,IAAN,CAAJ;AACD;;AACD,QAAI+Q,KAAK,CAACywB,EAAN,CAASjoC,QAAb,EAAuB;AACrBwX,MAAAA,KAAK,CAACywB,EAAN,CAAS1hC,IAAT;AACA2lC,MAAAA,IAAI,GAAGA,IAAI,CAACzlC,GAAL,CAAS,IAAT,CAAP;AACD;;AAEDmoC,IAAAA,OAAO,CAACltC,CAAC,GAAG,CAAL,CAAP,GAAiBwN,CAAjB;AACA0/B,IAAAA,OAAO,CAACltC,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAP,GAAqBwqC,IAArB;AACA2C,IAAAA,OAAO,CAACntC,CAAC,GAAG,CAAL,CAAP,GAAiB8V,KAAK,CAACwwB,EAAvB;AACA6G,IAAAA,OAAO,CAACntC,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAP,GAAqB8V,KAAK,CAACywB,EAA3B;AACD;;AACD,MAAIjjC,GAAG,GAAG,KAAK+lC,WAAL,CAAiB,CAAjB,EAAoB6D,OAApB,EAA6BC,OAA7B,EAAsCntC,CAAC,GAAG,CAA1C,EAA6CwpC,cAA7C,CAAV,CAtBuD,CAwBvD;;;AACA,OAAK,IAAIvpC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,CAAC,GAAG,CAAxB,EAA2BC,CAAC,EAA5B,EAAgC;AAC9BitC,IAAAA,OAAO,CAACjtC,CAAD,CAAP,GAAa,IAAb;AACAktC,IAAAA,OAAO,CAACltC,CAAD,CAAP,GAAa,IAAb;AACD;;AACD,SAAOqD,GAAP;AACD,CA/BL;;AAiCA,SAAS8pC,KAAT,CAAerD,KAAf,EAAsB39B,CAAtB,EAAyBC,CAAzB,EAA4BghC,KAA5B,EAAmC;AACjClvC,EAAAA,IAAI,CAAC2rC,SAAL,CAAe1zB,IAAf,CAAoB,IAApB,EAA0B2zB,KAA1B,EAAiC,QAAjC;;AACA,MAAI39B,CAAC,KAAK,IAAN,IAAcC,CAAC,KAAK,IAAxB,EAA8B;AAC5B,SAAKD,CAAL,GAAS,IAAT;AACA,SAAKC,CAAL,GAAS,IAAT;AACA,SAAKygC,GAAL,GAAW,IAAX;AACD,GAJD,MAIO;AACL,SAAK1gC,CAAL,GAAS,IAAI/O,EAAJ,CAAO+O,CAAP,EAAU,EAAV,CAAT;AACA,SAAKC,CAAL,GAAS,IAAIhP,EAAJ,CAAOgP,CAAP,EAAU,EAAV,CAAT,CAFK,CAGL;;AACA,QAAIghC,KAAJ,EAAW;AACT,WAAKjhC,CAAL,CAAO8H,QAAP,CAAgB,KAAK61B,KAAL,CAAWtrC,GAA3B;AACA,WAAK4N,CAAL,CAAO6H,QAAP,CAAgB,KAAK61B,KAAL,CAAWtrC,GAA3B;AACD;;AACD,QAAI,CAAC,KAAK2N,CAAL,CAAO3N,GAAZ,EACE,KAAK2N,CAAL,GAAS,KAAKA,CAAL,CAAOwH,KAAP,CAAa,KAAKm2B,KAAL,CAAWtrC,GAAxB,CAAT;AACF,QAAI,CAAC,KAAK4N,CAAL,CAAO5N,GAAZ,EACE,KAAK4N,CAAL,GAAS,KAAKA,CAAL,CAAOuH,KAAP,CAAa,KAAKm2B,KAAL,CAAWtrC,GAAxB,CAAT;AACF,SAAKquC,GAAL,GAAW,KAAX;AACD;AACF;;AACDlC,kBAAkB,CAACwC,KAAD,EAAQjvC,IAAI,CAAC2rC,SAAb,CAAlB;;AAEAgB,UAAU,CAAC/sC,SAAX,CAAqBqqC,KAArB,GAA6B,SAASA,KAAT,CAAeh8B,CAAf,EAAkBC,CAAlB,EAAqBghC,KAArB,EAA4B;AACvD,SAAO,IAAID,KAAJ,CAAU,IAAV,EAAgBhhC,CAAhB,EAAmBC,CAAnB,EAAsBghC,KAAtB,CAAP;AACD,CAFD;;AAIAvC,UAAU,CAAC/sC,SAAX,CAAqB2pC,aAArB,GAAqC,SAASA,aAAT,CAAuBT,GAAvB,EAA4BxoC,GAA5B,EAAiC;AACpE,SAAO2uC,KAAK,CAACE,QAAN,CAAe,IAAf,EAAqBrG,GAArB,EAA0BxoC,GAA1B,CAAP;AACD,CAFD;;AAIA2uC,KAAK,CAACrvC,SAAN,CAAgB0sC,QAAhB,GAA2B,SAASA,QAAT,GAAoB;AAC7C,MAAI,CAAC,KAAKV,KAAL,CAAWmB,IAAhB,EACE;AAEF,MAAIqC,GAAG,GAAG,KAAKhF,WAAf;AACA,MAAIgF,GAAG,IAAIA,GAAG,CAAC/C,IAAf,EACE,OAAO+C,GAAG,CAAC/C,IAAX;AAEF,MAAIA,IAAI,GAAG,KAAKT,KAAL,CAAW3B,KAAX,CAAiB,KAAKh8B,CAAL,CAAOqI,MAAP,CAAc,KAAKs1B,KAAL,CAAWmB,IAAX,CAAgBV,IAA9B,CAAjB,EAAsD,KAAKn+B,CAA3D,CAAX;;AACA,MAAIkhC,GAAJ,EAAS;AACP,QAAIxD,KAAK,GAAG,KAAKA,KAAjB;;AACA,QAAIyD,OAAO,GAAG,UAAShgC,CAAT,EAAY;AACxB,aAAOu8B,KAAK,CAAC3B,KAAN,CAAY56B,CAAC,CAACpB,CAAF,CAAIqI,MAAJ,CAAWs1B,KAAK,CAACmB,IAAN,CAAWV,IAAtB,CAAZ,EAAyCh9B,CAAC,CAACnB,CAA3C,CAAP;AACD,KAFD;;AAGAkhC,IAAAA,GAAG,CAAC/C,IAAJ,GAAWA,IAAX;AACAA,IAAAA,IAAI,CAACjC,WAAL,GAAmB;AACjBiC,MAAAA,IAAI,EAAE,IADW;AAEjBpE,MAAAA,GAAG,EAAEmH,GAAG,CAACnH,GAAJ,IAAW;AACd9uB,QAAAA,GAAG,EAAEi2B,GAAG,CAACnH,GAAJ,CAAQ9uB,GADC;AAEdyxB,QAAAA,MAAM,EAAEwE,GAAG,CAACnH,GAAJ,CAAQ2C,MAAR,CAAevqB,GAAf,CAAmBgvB,OAAnB;AAFM,OAFC;AAMjBhF,MAAAA,OAAO,EAAE+E,GAAG,CAAC/E,OAAJ,IAAe;AACtBlmB,QAAAA,IAAI,EAAEirB,GAAG,CAAC/E,OAAJ,CAAYlmB,IADI;AAEtBymB,QAAAA,MAAM,EAAEwE,GAAG,CAAC/E,OAAJ,CAAYO,MAAZ,CAAmBvqB,GAAnB,CAAuBgvB,OAAvB;AAFc;AANP,KAAnB;AAWD;;AACD,SAAOhD,IAAP;AACD,CA5BD;;AA8BA4C,KAAK,CAACrvC,SAAN,CAAgBgF,MAAhB,GAAyB,SAASA,MAAT,GAAkB;AACzC,MAAI,CAAC,KAAKwlC,WAAV,EACE,OAAO,CAAE,KAAKn8B,CAAP,EAAU,KAAKC,CAAf,CAAP;AAEF,SAAO,CAAE,KAAKD,CAAP,EAAU,KAAKC,CAAf,EAAkB,KAAKk8B,WAAL,IAAoB;AAC3CC,IAAAA,OAAO,EAAE,KAAKD,WAAL,CAAiBC,OAAjB,IAA4B;AACnClmB,MAAAA,IAAI,EAAE,KAAKimB,WAAL,CAAiBC,OAAjB,CAAyBlmB,IADI;AAEnCymB,MAAAA,MAAM,EAAE,KAAKR,WAAL,CAAiBC,OAAjB,CAAyBO,MAAzB,CAAgC1rB,KAAhC,CAAsC,CAAtC;AAF2B,KADM;AAK3C+oB,IAAAA,GAAG,EAAE,KAAKmC,WAAL,CAAiBnC,GAAjB,IAAwB;AAC3B9uB,MAAAA,GAAG,EAAE,KAAKixB,WAAL,CAAiBnC,GAAjB,CAAqB9uB,GADC;AAE3ByxB,MAAAA,MAAM,EAAE,KAAKR,WAAL,CAAiBnC,GAAjB,CAAqB2C,MAArB,CAA4B1rB,KAA5B,CAAkC,CAAlC;AAFmB;AALc,GAAtC,CAAP;AAUD,CAdD;;AAgBA+vB,KAAK,CAACE,QAAN,GAAiB,SAASA,QAAT,CAAkBvD,KAAlB,EAAyB9C,GAAzB,EAA8BxoC,GAA9B,EAAmC;AAClD,MAAI,OAAOwoC,GAAP,KAAe,QAAnB,EACEA,GAAG,GAAGhsB,IAAI,CAACwyB,KAAL,CAAWxG,GAAX,CAAN;AACF,MAAI3jC,GAAG,GAAGymC,KAAK,CAAC3B,KAAN,CAAYnB,GAAG,CAAC,CAAD,CAAf,EAAoBA,GAAG,CAAC,CAAD,CAAvB,EAA4BxoC,GAA5B,CAAV;AACA,MAAI,CAACwoC,GAAG,CAAC,CAAD,CAAR,EACE,OAAO3jC,GAAP;;AAEF,WAASoqC,SAAT,CAAmBzG,GAAnB,EAAwB;AACtB,WAAO8C,KAAK,CAAC3B,KAAN,CAAYnB,GAAG,CAAC,CAAD,CAAf,EAAoBA,GAAG,CAAC,CAAD,CAAvB,EAA4BxoC,GAA5B,CAAP;AACD;;AAED,MAAI8uC,GAAG,GAAGtG,GAAG,CAAC,CAAD,CAAb;AACA3jC,EAAAA,GAAG,CAACilC,WAAJ,GAAkB;AAChBiC,IAAAA,IAAI,EAAE,IADU;AAEhBhC,IAAAA,OAAO,EAAE+E,GAAG,CAAC/E,OAAJ,IAAe;AACtBlmB,MAAAA,IAAI,EAAEirB,GAAG,CAAC/E,OAAJ,CAAYlmB,IADI;AAEtBymB,MAAAA,MAAM,EAAE,CAAEzlC,GAAF,EAAQ+a,MAAR,CAAekvB,GAAG,CAAC/E,OAAJ,CAAYO,MAAZ,CAAmBvqB,GAAnB,CAAuBkvB,SAAvB,CAAf;AAFc,KAFR;AAMhBtH,IAAAA,GAAG,EAAEmH,GAAG,CAACnH,GAAJ,IAAW;AACd9uB,MAAAA,GAAG,EAAEi2B,GAAG,CAACnH,GAAJ,CAAQ9uB,GADC;AAEdyxB,MAAAA,MAAM,EAAE,CAAEzlC,GAAF,EAAQ+a,MAAR,CAAekvB,GAAG,CAACnH,GAAJ,CAAQ2C,MAAR,CAAevqB,GAAf,CAAmBkvB,SAAnB,CAAf;AAFM;AANA,GAAlB;AAWA,SAAOpqC,GAAP;AACD,CAxBD;;AA0BA8pC,KAAK,CAACrvC,SAAN,CAAgBkE,OAAhB,GAA0B,SAASA,OAAT,GAAmB;AAC3C,MAAI,KAAK0rC,UAAL,EAAJ,EACE,OAAO,qBAAP;AACF,SAAO,kBAAkB,KAAKvhC,CAAL,CAAO4H,OAAP,GAAiBxU,QAAjB,CAA0B,EAA1B,EAA8B,CAA9B,CAAlB,GACH,MADG,GACM,KAAK6M,CAAL,CAAO2H,OAAP,GAAiBxU,QAAjB,CAA0B,EAA1B,EAA8B,CAA9B,CADN,GACyC,GADhD;AAED,CALD;;AAOA4tC,KAAK,CAACrvC,SAAN,CAAgB4vC,UAAhB,GAA6B,SAASA,UAAT,GAAsB;AACjD,SAAO,KAAKb,GAAZ;AACD,CAFD;;AAIAM,KAAK,CAACrvC,SAAN,CAAgBmI,GAAhB,GAAsB,SAASA,GAAT,CAAasH,CAAb,EAAgB;AACpC;AACA,MAAI,KAAKs/B,GAAT,EACE,OAAOt/B,CAAP,CAHkC,CAKpC;;AACA,MAAIA,CAAC,CAACs/B,GAAN,EACE,OAAO,IAAP,CAPkC,CASpC;;AACA,MAAI,KAAKp5B,EAAL,CAAQlG,CAAR,CAAJ,EACE,OAAO,KAAKm9B,GAAL,EAAP,CAXkC,CAapC;;AACA,MAAI,KAAK5lC,GAAL,GAAW2O,EAAX,CAAclG,CAAd,CAAJ,EACE,OAAO,KAAKu8B,KAAL,CAAW3B,KAAX,CAAiB,IAAjB,EAAuB,IAAvB,CAAP,CAfkC,CAiBpC;;AACA,MAAI,KAAKh8B,CAAL,CAAOjN,GAAP,CAAWqO,CAAC,CAACpB,CAAb,MAAoB,CAAxB,EACE,OAAO,KAAK29B,KAAL,CAAW3B,KAAX,CAAiB,IAAjB,EAAuB,IAAvB,CAAP;AAEF,MAAI5nC,CAAC,GAAG,KAAK6L,CAAL,CAAOgI,MAAP,CAAc7G,CAAC,CAACnB,CAAhB,CAAR;AACA,MAAI7L,CAAC,CAACqS,IAAF,CAAO,CAAP,MAAc,CAAlB,EACErS,CAAC,GAAGA,CAAC,CAACiU,MAAF,CAAS,KAAKrI,CAAL,CAAOiI,MAAP,CAAc7G,CAAC,CAACpB,CAAhB,EAAmB6I,OAAnB,EAAT,CAAJ;AACF,MAAI24B,EAAE,GAAGptC,CAAC,CAACoU,MAAF,GAAWN,OAAX,CAAmB,KAAKlI,CAAxB,EAA2BkI,OAA3B,CAAmC9G,CAAC,CAACpB,CAArC,CAAT;AACA,MAAIyhC,EAAE,GAAGrtC,CAAC,CAACiU,MAAF,CAAS,KAAKrI,CAAL,CAAOiI,MAAP,CAAcu5B,EAAd,CAAT,EAA4Bt5B,OAA5B,CAAoC,KAAKjI,CAAzC,CAAT;AACA,SAAO,KAAK09B,KAAL,CAAW3B,KAAX,CAAiBwF,EAAjB,EAAqBC,EAArB,CAAP;AACD,CA3BD;;AA6BAT,KAAK,CAACrvC,SAAN,CAAgB4sC,GAAhB,GAAsB,SAASA,GAAT,GAAe;AACnC,MAAI,KAAKmC,GAAT,EACE,OAAO,IAAP,CAFiC,CAInC;;AACA,MAAIgB,GAAG,GAAG,KAAKzhC,CAAL,CAAO8H,MAAP,CAAc,KAAK9H,CAAnB,CAAV;AACA,MAAIyhC,GAAG,CAACj7B,IAAJ,CAAS,CAAT,MAAgB,CAApB,EACE,OAAO,KAAKk3B,KAAL,CAAW3B,KAAX,CAAiB,IAAjB,EAAuB,IAAvB,CAAP;AAEF,MAAI3iC,CAAC,GAAG,KAAKskC,KAAL,CAAWtkC,CAAnB;AAEA,MAAIkN,EAAE,GAAG,KAAKvG,CAAL,CAAOwI,MAAP,EAAT;AACA,MAAIm5B,KAAK,GAAGD,GAAG,CAAC74B,OAAJ,EAAZ;AACA,MAAIzU,CAAC,GAAGmS,EAAE,CAACwB,MAAH,CAAUxB,EAAV,EAAcyB,OAAd,CAAsBzB,EAAtB,EAA0ByB,OAA1B,CAAkC3O,CAAlC,EAAqCgP,MAArC,CAA4Cs5B,KAA5C,CAAR;AAEA,MAAIH,EAAE,GAAGptC,CAAC,CAACoU,MAAF,GAAWN,OAAX,CAAmB,KAAKlI,CAAL,CAAO+H,MAAP,CAAc,KAAK/H,CAAnB,CAAnB,CAAT;AACA,MAAIyhC,EAAE,GAAGrtC,CAAC,CAACiU,MAAF,CAAS,KAAKrI,CAAL,CAAOiI,MAAP,CAAcu5B,EAAd,CAAT,EAA4Bt5B,OAA5B,CAAoC,KAAKjI,CAAzC,CAAT;AACA,SAAO,KAAK09B,KAAL,CAAW3B,KAAX,CAAiBwF,EAAjB,EAAqBC,EAArB,CAAP;AACD,CAlBD;;AAoBAT,KAAK,CAACrvC,SAAN,CAAgBqsC,IAAhB,GAAuB,SAASA,IAAT,GAAgB;AACrC,SAAO,KAAKh+B,CAAL,CAAO4H,OAAP,EAAP;AACD,CAFD;;AAIAo5B,KAAK,CAACrvC,SAAN,CAAgBssC,IAAhB,GAAuB,SAASA,IAAT,GAAgB;AACrC,SAAO,KAAKh+B,CAAL,CAAO2H,OAAP,EAAP;AACD,CAFD;;AAIAo5B,KAAK,CAACrvC,SAAN,CAAgBkD,GAAhB,GAAsB,SAASA,GAAT,CAAaqF,CAAb,EAAgB;AACpCA,EAAAA,CAAC,GAAG,IAAIjJ,EAAJ,CAAOiJ,CAAP,EAAU,EAAV,CAAJ;AACA,MAAI,KAAKqnC,UAAL,EAAJ,EACE,OAAO,IAAP,CADF,KAEK,IAAI,KAAKjD,WAAL,CAAiBpkC,CAAjB,CAAJ,EACH,OAAO,KAAKyjC,KAAL,CAAWzB,YAAX,CAAwB,IAAxB,EAA8BhiC,CAA9B,CAAP,CADG,KAEA,IAAI,KAAKyjC,KAAL,CAAWmB,IAAf,EACH,OAAO,KAAKnB,KAAL,CAAWkD,eAAX,CAA2B,CAAE,IAAF,CAA3B,EAAqC,CAAE3mC,CAAF,CAArC,CAAP,CADG,KAGH,OAAO,KAAKyjC,KAAL,CAAWd,QAAX,CAAoB,IAApB,EAA0B3iC,CAA1B,CAAP;AACH,CAVD;;AAYA8mC,KAAK,CAACrvC,SAAN,CAAgBiwC,MAAhB,GAAyB,SAASA,MAAT,CAAgB1H,EAAhB,EAAoBqG,EAApB,EAAwBpG,EAAxB,EAA4B;AACnD,MAAIwC,MAAM,GAAG,CAAE,IAAF,EAAQ4D,EAAR,CAAb;AACA,MAAIpD,MAAM,GAAG,CAAEjD,EAAF,EAAMC,EAAN,CAAb;AACA,MAAI,KAAKwD,KAAL,CAAWmB,IAAf,EACE,OAAO,KAAKnB,KAAL,CAAWkD,eAAX,CAA2BlE,MAA3B,EAAmCQ,MAAnC,CAAP,CADF,KAGE,OAAO,KAAKQ,KAAL,CAAWV,WAAX,CAAuB,CAAvB,EAA0BN,MAA1B,EAAkCQ,MAAlC,EAA0C,CAA1C,CAAP;AACH,CAPD;;AASA6D,KAAK,CAACrvC,SAAN,CAAgBkwC,OAAhB,GAA0B,SAASA,OAAT,CAAiB3H,EAAjB,EAAqBqG,EAArB,EAAyBpG,EAAzB,EAA6B;AACrD,MAAIwC,MAAM,GAAG,CAAE,IAAF,EAAQ4D,EAAR,CAAb;AACA,MAAIpD,MAAM,GAAG,CAAEjD,EAAF,EAAMC,EAAN,CAAb;AACA,MAAI,KAAKwD,KAAL,CAAWmB,IAAf,EACE,OAAO,KAAKnB,KAAL,CAAWkD,eAAX,CAA2BlE,MAA3B,EAAmCQ,MAAnC,EAA2C,IAA3C,CAAP,CADF,KAGE,OAAO,KAAKQ,KAAL,CAAWV,WAAX,CAAuB,CAAvB,EAA0BN,MAA1B,EAAkCQ,MAAlC,EAA0C,CAA1C,EAA6C,IAA7C,CAAP;AACH,CAPD;;AASA6D,KAAK,CAACrvC,SAAN,CAAgB2V,EAAhB,GAAqB,SAASA,EAAT,CAAYlG,CAAZ,EAAe;AAClC,SAAO,SAASA,CAAT,IACA,KAAKs/B,GAAL,KAAat/B,CAAC,CAACs/B,GAAf,KACK,KAAKA,GAAL,IAAY,KAAK1gC,CAAL,CAAOjN,GAAP,CAAWqO,CAAC,CAACpB,CAAb,MAAoB,CAApB,IAAyB,KAAKC,CAAL,CAAOlN,GAAP,CAAWqO,CAAC,CAACnB,CAAb,MAAoB,CAD9D,CADP;AAGD,CAJD;;AAMA+gC,KAAK,CAACrvC,SAAN,CAAgBgH,GAAhB,GAAsB,SAASA,GAAT,CAAampC,WAAb,EAA0B;AAC9C,MAAI,KAAKpB,GAAT,EACE,OAAO,IAAP;AAEF,MAAIxpC,GAAG,GAAG,KAAKymC,KAAL,CAAW3B,KAAX,CAAiB,KAAKh8B,CAAtB,EAAyB,KAAKC,CAAL,CAAO6I,MAAP,EAAzB,CAAV;;AACA,MAAIg5B,WAAW,IAAI,KAAK3F,WAAxB,EAAqC;AACnC,QAAIgF,GAAG,GAAG,KAAKhF,WAAf;;AACA,QAAI4F,MAAM,GAAG,UAAS3gC,CAAT,EAAY;AACvB,aAAOA,CAAC,CAACzI,GAAF,EAAP;AACD,KAFD;;AAGAzB,IAAAA,GAAG,CAACilC,WAAJ,GAAkB;AAChBnC,MAAAA,GAAG,EAAEmH,GAAG,CAACnH,GAAJ,IAAW;AACd9uB,QAAAA,GAAG,EAAEi2B,GAAG,CAACnH,GAAJ,CAAQ9uB,GADC;AAEdyxB,QAAAA,MAAM,EAAEwE,GAAG,CAACnH,GAAJ,CAAQ2C,MAAR,CAAevqB,GAAf,CAAmB2vB,MAAnB;AAFM,OADA;AAKhB3F,MAAAA,OAAO,EAAE+E,GAAG,CAAC/E,OAAJ,IAAe;AACtBlmB,QAAAA,IAAI,EAAEirB,GAAG,CAAC/E,OAAJ,CAAYlmB,IADI;AAEtBymB,QAAAA,MAAM,EAAEwE,GAAG,CAAC/E,OAAJ,CAAYO,MAAZ,CAAmBvqB,GAAnB,CAAuB2vB,MAAvB;AAFc;AALR,KAAlB;AAUD;;AACD,SAAO7qC,GAAP;AACD,CAtBD;;AAwBA8pC,KAAK,CAACrvC,SAAN,CAAgB4rC,GAAhB,GAAsB,SAASA,GAAT,GAAe;AACnC,MAAI,KAAKmD,GAAT,EACE,OAAO,KAAK/C,KAAL,CAAWlB,MAAX,CAAkB,IAAlB,EAAwB,IAAxB,EAA8B,IAA9B,CAAP;AAEF,MAAIvlC,GAAG,GAAG,KAAKymC,KAAL,CAAWlB,MAAX,CAAkB,KAAKz8B,CAAvB,EAA0B,KAAKC,CAA/B,EAAkC,KAAK09B,KAAL,CAAW/yB,GAA7C,CAAV;AACA,SAAO1T,GAAP;AACD,CAND;;AAQA,SAAS8qC,MAAT,CAAgBrE,KAAhB,EAAuB39B,CAAvB,EAA0BC,CAA1B,EAA6B8K,CAA7B,EAAgC;AAC9BhZ,EAAAA,IAAI,CAAC2rC,SAAL,CAAe1zB,IAAf,CAAoB,IAApB,EAA0B2zB,KAA1B,EAAiC,UAAjC;;AACA,MAAI39B,CAAC,KAAK,IAAN,IAAcC,CAAC,KAAK,IAApB,IAA4B8K,CAAC,KAAK,IAAtC,EAA4C;AAC1C,SAAK/K,CAAL,GAAS,KAAK29B,KAAL,CAAW/yB,GAApB;AACA,SAAK3K,CAAL,GAAS,KAAK09B,KAAL,CAAW/yB,GAApB;AACA,SAAKG,CAAL,GAAS,IAAI9Z,EAAJ,CAAO,CAAP,CAAT;AACD,GAJD,MAIO;AACL,SAAK+O,CAAL,GAAS,IAAI/O,EAAJ,CAAO+O,CAAP,EAAU,EAAV,CAAT;AACA,SAAKC,CAAL,GAAS,IAAIhP,EAAJ,CAAOgP,CAAP,EAAU,EAAV,CAAT;AACA,SAAK8K,CAAL,GAAS,IAAI9Z,EAAJ,CAAO8Z,CAAP,EAAU,EAAV,CAAT;AACD;;AACD,MAAI,CAAC,KAAK/K,CAAL,CAAO3N,GAAZ,EACE,KAAK2N,CAAL,GAAS,KAAKA,CAAL,CAAOwH,KAAP,CAAa,KAAKm2B,KAAL,CAAWtrC,GAAxB,CAAT;AACF,MAAI,CAAC,KAAK4N,CAAL,CAAO5N,GAAZ,EACE,KAAK4N,CAAL,GAAS,KAAKA,CAAL,CAAOuH,KAAP,CAAa,KAAKm2B,KAAL,CAAWtrC,GAAxB,CAAT;AACF,MAAI,CAAC,KAAK0Y,CAAL,CAAO1Y,GAAZ,EACE,KAAK0Y,CAAL,GAAS,KAAKA,CAAL,CAAOvD,KAAP,CAAa,KAAKm2B,KAAL,CAAWtrC,GAAxB,CAAT;AAEF,OAAK4vC,IAAL,GAAY,KAAKl3B,CAAL,KAAW,KAAK4yB,KAAL,CAAW/yB,GAAlC;AACD;;AACD4zB,kBAAkB,CAACwD,MAAD,EAASjwC,IAAI,CAAC2rC,SAAd,CAAlB;;AAEAgB,UAAU,CAAC/sC,SAAX,CAAqB8qC,MAArB,GAA8B,SAASA,MAAT,CAAgBz8B,CAAhB,EAAmBC,CAAnB,EAAsB8K,CAAtB,EAAyB;AACrD,SAAO,IAAIi3B,MAAJ,CAAW,IAAX,EAAiBhiC,CAAjB,EAAoBC,CAApB,EAAuB8K,CAAvB,CAAP;AACD,CAFD;;AAIAi3B,MAAM,CAACrwC,SAAP,CAAiBirC,GAAjB,GAAuB,SAASA,GAAT,GAAe;AACpC,MAAI,KAAK2E,UAAL,EAAJ,EACE,OAAO,KAAK5D,KAAL,CAAW3B,KAAX,CAAiB,IAAjB,EAAuB,IAAvB,CAAP;AAEF,MAAIkG,IAAI,GAAG,KAAKn3B,CAAL,CAAOlC,OAAP,EAAX;AACA,MAAIs5B,KAAK,GAAGD,IAAI,CAAC15B,MAAL,EAAZ;AACA,MAAIm4B,EAAE,GAAG,KAAK3gC,CAAL,CAAOqI,MAAP,CAAc85B,KAAd,CAAT;AACA,MAAIC,EAAE,GAAG,KAAKniC,CAAL,CAAOoI,MAAP,CAAc85B,KAAd,EAAqB95B,MAArB,CAA4B65B,IAA5B,CAAT;AAEA,SAAO,KAAKvE,KAAL,CAAW3B,KAAX,CAAiB2E,EAAjB,EAAqByB,EAArB,CAAP;AACD,CAVD;;AAYAJ,MAAM,CAACrwC,SAAP,CAAiBgH,GAAjB,GAAuB,SAASA,GAAT,GAAe;AACpC,SAAO,KAAKglC,KAAL,CAAWlB,MAAX,CAAkB,KAAKz8B,CAAvB,EAA0B,KAAKC,CAAL,CAAO6I,MAAP,EAA1B,EAA2C,KAAKiC,CAAhD,CAAP;AACD,CAFD;;AAIAi3B,MAAM,CAACrwC,SAAP,CAAiBmI,GAAjB,GAAuB,SAASA,GAAT,CAAasH,CAAb,EAAgB;AACrC;AACA,MAAI,KAAKmgC,UAAL,EAAJ,EACE,OAAOngC,CAAP,CAHmC,CAKrC;;AACA,MAAIA,CAAC,CAACmgC,UAAF,EAAJ,EACE,OAAO,IAAP,CAPmC,CASrC;;AACA,MAAIc,GAAG,GAAGjhC,CAAC,CAAC2J,CAAF,CAAIvC,MAAJ,EAAV;AACA,MAAI85B,EAAE,GAAG,KAAKv3B,CAAL,CAAOvC,MAAP,EAAT;AACA,MAAIkyB,EAAE,GAAG,KAAK16B,CAAL,CAAOqI,MAAP,CAAcg6B,GAAd,CAAT;AACA,MAAI1H,EAAE,GAAGv5B,CAAC,CAACpB,CAAF,CAAIqI,MAAJ,CAAWi6B,EAAX,CAAT;AACA,MAAIC,EAAE,GAAG,KAAKtiC,CAAL,CAAOoI,MAAP,CAAcg6B,GAAG,CAACh6B,MAAJ,CAAWjH,CAAC,CAAC2J,CAAb,CAAd,CAAT;AACA,MAAIy3B,EAAE,GAAGphC,CAAC,CAACnB,CAAF,CAAIoI,MAAJ,CAAWi6B,EAAE,CAACj6B,MAAH,CAAU,KAAK0C,CAAf,CAAX,CAAT;AAEA,MAAIvH,CAAC,GAAGk3B,EAAE,CAACzyB,MAAH,CAAU0yB,EAAV,CAAR;AACA,MAAInmC,CAAC,GAAG+tC,EAAE,CAACt6B,MAAH,CAAUu6B,EAAV,CAAR;;AACA,MAAIh/B,CAAC,CAACiD,IAAF,CAAO,CAAP,MAAc,CAAlB,EAAqB;AACnB,QAAIjS,CAAC,CAACiS,IAAF,CAAO,CAAP,MAAc,CAAlB,EACE,OAAO,KAAKk3B,KAAL,CAAWlB,MAAX,CAAkB,IAAlB,EAAwB,IAAxB,EAA8B,IAA9B,CAAP,CADF,KAGE,OAAO,KAAK8B,GAAL,EAAP;AACH;;AAED,MAAIkE,EAAE,GAAGj/B,CAAC,CAACgF,MAAF,EAAT;AACA,MAAIk6B,EAAE,GAAGD,EAAE,CAACp6B,MAAH,CAAU7E,CAAV,CAAT;AACA,MAAI+N,CAAC,GAAGmpB,EAAE,CAACryB,MAAH,CAAUo6B,EAAV,CAAR;AAEA,MAAIjB,EAAE,GAAGhtC,CAAC,CAACgU,MAAF,GAAWR,OAAX,CAAmB06B,EAAnB,EAAuBx6B,OAAvB,CAA+BqJ,CAA/B,EAAkCrJ,OAAlC,CAA0CqJ,CAA1C,CAAT;AACA,MAAIkwB,EAAE,GAAGjtC,CAAC,CAAC6T,MAAF,CAASkJ,CAAC,CAACrJ,OAAF,CAAUs5B,EAAV,CAAT,EAAwBt5B,OAAxB,CAAgCq6B,EAAE,CAACl6B,MAAH,CAAUq6B,EAAV,CAAhC,CAAT;AACA,MAAIC,EAAE,GAAG,KAAK53B,CAAL,CAAO1C,MAAP,CAAcjH,CAAC,CAAC2J,CAAhB,EAAmB1C,MAAnB,CAA0B7E,CAA1B,CAAT;AAEA,SAAO,KAAKm6B,KAAL,CAAWlB,MAAX,CAAkB+E,EAAlB,EAAsBC,EAAtB,EAA0BkB,EAA1B,CAAP;AACD,CAnCD;;AAqCAX,MAAM,CAACrwC,SAAP,CAAiB+qC,QAAjB,GAA4B,SAASA,QAAT,CAAkBt7B,CAAlB,EAAqB;AAC/C;AACA,MAAI,KAAKmgC,UAAL,EAAJ,EACE,OAAOngC,CAAC,CAACm8B,GAAF,EAAP,CAH6C,CAK/C;;AACA,MAAIn8B,CAAC,CAACmgC,UAAF,EAAJ,EACE,OAAO,IAAP,CAP6C,CAS/C;;AACA,MAAIe,EAAE,GAAG,KAAKv3B,CAAL,CAAOvC,MAAP,EAAT;AACA,MAAIkyB,EAAE,GAAG,KAAK16B,CAAd;AACA,MAAI26B,EAAE,GAAGv5B,CAAC,CAACpB,CAAF,CAAIqI,MAAJ,CAAWi6B,EAAX,CAAT;AACA,MAAIC,EAAE,GAAG,KAAKtiC,CAAd;AACA,MAAIuiC,EAAE,GAAGphC,CAAC,CAACnB,CAAF,CAAIoI,MAAJ,CAAWi6B,EAAX,EAAej6B,MAAf,CAAsB,KAAK0C,CAA3B,CAAT;AAEA,MAAIvH,CAAC,GAAGk3B,EAAE,CAACzyB,MAAH,CAAU0yB,EAAV,CAAR;AACA,MAAInmC,CAAC,GAAG+tC,EAAE,CAACt6B,MAAH,CAAUu6B,EAAV,CAAR;;AACA,MAAIh/B,CAAC,CAACiD,IAAF,CAAO,CAAP,MAAc,CAAlB,EAAqB;AACnB,QAAIjS,CAAC,CAACiS,IAAF,CAAO,CAAP,MAAc,CAAlB,EACE,OAAO,KAAKk3B,KAAL,CAAWlB,MAAX,CAAkB,IAAlB,EAAwB,IAAxB,EAA8B,IAA9B,CAAP,CADF,KAGE,OAAO,KAAK8B,GAAL,EAAP;AACH;;AAED,MAAIkE,EAAE,GAAGj/B,CAAC,CAACgF,MAAF,EAAT;AACA,MAAIk6B,EAAE,GAAGD,EAAE,CAACp6B,MAAH,CAAU7E,CAAV,CAAT;AACA,MAAI+N,CAAC,GAAGmpB,EAAE,CAACryB,MAAH,CAAUo6B,EAAV,CAAR;AAEA,MAAIjB,EAAE,GAAGhtC,CAAC,CAACgU,MAAF,GAAWR,OAAX,CAAmB06B,EAAnB,EAAuBx6B,OAAvB,CAA+BqJ,CAA/B,EAAkCrJ,OAAlC,CAA0CqJ,CAA1C,CAAT;AACA,MAAIkwB,EAAE,GAAGjtC,CAAC,CAAC6T,MAAF,CAASkJ,CAAC,CAACrJ,OAAF,CAAUs5B,EAAV,CAAT,EAAwBt5B,OAAxB,CAAgCq6B,EAAE,CAACl6B,MAAH,CAAUq6B,EAAV,CAAhC,CAAT;AACA,MAAIC,EAAE,GAAG,KAAK53B,CAAL,CAAO1C,MAAP,CAAc7E,CAAd,CAAT;AAEA,SAAO,KAAKm6B,KAAL,CAAWlB,MAAX,CAAkB+E,EAAlB,EAAsBC,EAAtB,EAA0BkB,EAA1B,CAAP;AACD,CAlCD;;AAoCAX,MAAM,CAACrwC,SAAP,CAAiBqrC,IAAjB,GAAwB,SAASA,IAAT,CAAc1nC,GAAd,EAAmB;AACzC,MAAIA,GAAG,KAAK,CAAZ,EACE,OAAO,IAAP;AACF,MAAI,KAAKisC,UAAL,EAAJ,EACE,OAAO,IAAP;AACF,MAAI,CAACjsC,GAAL,EACE,OAAO,KAAKipC,GAAL,EAAP;AAEF,MAAI3qC,CAAJ;;AACA,MAAI,KAAK+pC,KAAL,CAAWiB,KAAX,IAAoB,KAAKjB,KAAL,CAAWkB,MAAnC,EAA2C;AACzC,QAAIrqC,CAAC,GAAG,IAAR;;AACA,SAAKZ,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG0B,GAAhB,EAAqB1B,CAAC,EAAtB,EACEY,CAAC,GAAGA,CAAC,CAAC+pC,GAAF,EAAJ;;AACF,WAAO/pC,CAAP;AACD,GAdwC,CAgBzC;AACA;;;AACA,MAAI6E,CAAC,GAAG,KAAKskC,KAAL,CAAWtkC,CAAnB;AACA,MAAIslC,IAAI,GAAG,KAAKhB,KAAL,CAAWgB,IAAtB;AAEA,MAAIiE,EAAE,GAAG,KAAK5iC,CAAd;AACA,MAAI6iC,EAAE,GAAG,KAAK5iC,CAAd;AACA,MAAI6iC,EAAE,GAAG,KAAK/3B,CAAd;AACA,MAAIg4B,GAAG,GAAGD,EAAE,CAACt6B,MAAH,GAAYA,MAAZ,EAAV,CAxByC,CA0BzC;;AACA,MAAIw6B,GAAG,GAAGH,EAAE,CAAC96B,MAAH,CAAU86B,EAAV,CAAV;;AACA,OAAKjvC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG0B,GAAhB,EAAqB1B,CAAC,EAAtB,EAA0B;AACxB,QAAIqvC,GAAG,GAAGL,EAAE,CAACp6B,MAAH,EAAV;AACA,QAAI06B,IAAI,GAAGF,GAAG,CAACx6B,MAAJ,EAAX;AACA,QAAI26B,IAAI,GAAGD,IAAI,CAAC16B,MAAL,EAAX;AACA,QAAIpU,CAAC,GAAG6uC,GAAG,CAACl7B,MAAJ,CAAWk7B,GAAX,EAAgBj7B,OAAhB,CAAwBi7B,GAAxB,EAA6Bj7B,OAA7B,CAAqC3O,CAAC,CAACgP,MAAF,CAAS06B,GAAT,CAArC,CAAR;AAEA,QAAIK,EAAE,GAAGR,EAAE,CAACv6B,MAAH,CAAU66B,IAAV,CAAT;AACA,QAAI1B,EAAE,GAAGptC,CAAC,CAACoU,MAAF,GAAWN,OAAX,CAAmBk7B,EAAE,CAACr7B,MAAH,CAAUq7B,EAAV,CAAnB,CAAT;AACA,QAAIC,EAAE,GAAGD,EAAE,CAACl7B,OAAH,CAAWs5B,EAAX,CAAT;AACA,QAAI8B,GAAG,GAAGlvC,CAAC,CAACiU,MAAF,CAASg7B,EAAT,CAAV;AACAC,IAAAA,GAAG,GAAGA,GAAG,CAACt7B,OAAJ,CAAYs7B,GAAZ,EAAiBp7B,OAAjB,CAAyBi7B,IAAzB,CAAN;AACA,QAAIR,EAAE,GAAGK,GAAG,CAAC36B,MAAJ,CAAWy6B,EAAX,CAAT;AACA,QAAIlvC,CAAC,GAAG,CAAJ,GAAQ0B,GAAZ,EACEytC,GAAG,GAAGA,GAAG,CAAC16B,MAAJ,CAAW86B,IAAX,CAAN;AAEFP,IAAAA,EAAE,GAAGpB,EAAL;AACAsB,IAAAA,EAAE,GAAGH,EAAL;AACAK,IAAAA,GAAG,GAAGM,GAAN;AACD;;AAED,SAAO,KAAK3F,KAAL,CAAWlB,MAAX,CAAkBmG,EAAlB,EAAsBI,GAAG,CAAC36B,MAAJ,CAAWs2B,IAAX,CAAtB,EAAwCmE,EAAxC,CAAP;AACD,CAjDD;;AAmDAd,MAAM,CAACrwC,SAAP,CAAiB4sC,GAAjB,GAAuB,SAASA,GAAT,GAAe;AACpC,MAAI,KAAKgD,UAAL,EAAJ,EACE,OAAO,IAAP;AAEF,MAAI,KAAK5D,KAAL,CAAWiB,KAAf,EACE,OAAO,KAAK2E,QAAL,EAAP,CADF,KAEK,IAAI,KAAK5F,KAAL,CAAWkB,MAAf,EACH,OAAO,KAAK2E,SAAL,EAAP,CADG,KAGH,OAAO,KAAKC,IAAL,EAAP;AACH,CAVD;;AAYAzB,MAAM,CAACrwC,SAAP,CAAiB4xC,QAAjB,GAA4B,SAASA,QAAT,GAAoB;AAC9C,MAAI/B,EAAJ;AACA,MAAIC,EAAJ;AACA,MAAIkB,EAAJ,CAH8C,CAI9C;;AACA,MAAI,KAAKV,IAAT,EAAe;AACb;AACA;AACA;AAEA;AACA,QAAIyB,EAAE,GAAG,KAAK1jC,CAAL,CAAOwI,MAAP,EAAT,CANa,CAOb;;AACA,QAAIm7B,EAAE,GAAG,KAAK1jC,CAAL,CAAOuI,MAAP,EAAT,CARa,CASb;;AACA,QAAIo7B,IAAI,GAAGD,EAAE,CAACn7B,MAAH,EAAX,CAVa,CAWb;;AACA,QAAI1H,CAAC,GAAG,KAAKd,CAAL,CAAO+H,MAAP,CAAc47B,EAAd,EAAkBn7B,MAAlB,GAA2BN,OAA3B,CAAmCw7B,EAAnC,EAAuCx7B,OAAvC,CAA+C07B,IAA/C,CAAR;AACA9iC,IAAAA,CAAC,GAAGA,CAAC,CAACkH,OAAF,CAAUlH,CAAV,CAAJ,CAba,CAcb;;AACA,QAAIe,CAAC,GAAG6hC,EAAE,CAAC37B,MAAH,CAAU27B,EAAV,EAAc17B,OAAd,CAAsB07B,EAAtB,CAAR,CAfa,CAgBb;;AACA,QAAIjsC,CAAC,GAAGoK,CAAC,CAAC2G,MAAF,GAAWN,OAAX,CAAmBpH,CAAnB,EAAsBoH,OAAtB,CAA8BpH,CAA9B,CAAR,CAjBa,CAmBb;;AACA,QAAI+iC,KAAK,GAAGD,IAAI,CAAC57B,OAAL,CAAa47B,IAAb,CAAZ;AACAC,IAAAA,KAAK,GAAGA,KAAK,CAAC77B,OAAN,CAAc67B,KAAd,CAAR;AACAA,IAAAA,KAAK,GAAGA,KAAK,CAAC77B,OAAN,CAAc67B,KAAd,CAAR,CAtBa,CAwBb;;AACArC,IAAAA,EAAE,GAAG/pC,CAAL,CAzBa,CA0Bb;;AACAgqC,IAAAA,EAAE,GAAG5/B,CAAC,CAACwG,MAAF,CAASvH,CAAC,CAACoH,OAAF,CAAUzQ,CAAV,CAAT,EAAuByQ,OAAvB,CAA+B27B,KAA/B,CAAL,CA3Ba,CA4Bb;;AACAlB,IAAAA,EAAE,GAAG,KAAK1iC,CAAL,CAAO8H,MAAP,CAAc,KAAK9H,CAAnB,CAAL;AACD,GA9BD,MA8BO;AACL;AACA;AACA;AAEA;AACA,QAAI5G,CAAC,GAAG,KAAK2G,CAAL,CAAOwI,MAAP,EAAR,CANK,CAOL;;AACA,QAAIrR,CAAC,GAAG,KAAK8I,CAAL,CAAOuI,MAAP,EAAR,CARK,CASL;;AACA,QAAIpU,CAAC,GAAG+C,CAAC,CAACqR,MAAF,EAAR,CAVK,CAWL;;AACA,QAAIia,CAAC,GAAG,KAAKziB,CAAL,CAAO+H,MAAP,CAAc5Q,CAAd,EAAiBqR,MAAjB,GAA0BN,OAA1B,CAAkC7O,CAAlC,EAAqC6O,OAArC,CAA6C9T,CAA7C,CAAR;AACAquB,IAAAA,CAAC,GAAGA,CAAC,CAACza,OAAF,CAAUya,CAAV,CAAJ,CAbK,CAcL;;AACA,QAAI5zB,CAAC,GAAGwK,CAAC,CAAC0O,MAAF,CAAS1O,CAAT,EAAY2O,OAAZ,CAAoB3O,CAApB,CAAR,CAfK,CAgBL;;AACA,QAAI+gB,CAAC,GAAGvrB,CAAC,CAAC2Z,MAAF,EAAR,CAjBK,CAmBL;;AACA,QAAI0S,EAAE,GAAG9mB,CAAC,CAAC4T,OAAF,CAAU5T,CAAV,CAAT;AACA8mB,IAAAA,EAAE,GAAGA,EAAE,CAAClT,OAAH,CAAWkT,EAAX,CAAL;AACAA,IAAAA,EAAE,GAAGA,EAAE,CAAClT,OAAH,CAAWkT,EAAX,CAAL,CAtBK,CAwBL;;AACAsmB,IAAAA,EAAE,GAAGpnB,CAAC,CAAClS,OAAF,CAAUua,CAAV,EAAava,OAAb,CAAqBua,CAArB,CAAL,CAzBK,CA0BL;;AACAgf,IAAAA,EAAE,GAAG5yC,CAAC,CAACwZ,MAAF,CAASoa,CAAC,CAACva,OAAF,CAAUs5B,EAAV,CAAT,EAAwBt5B,OAAxB,CAAgCgT,EAAhC,CAAL,CA3BK,CA4BL;;AACAynB,IAAAA,EAAE,GAAG,KAAK1iC,CAAL,CAAOoI,MAAP,CAAc,KAAK0C,CAAnB,CAAL;AACA43B,IAAAA,EAAE,GAAGA,EAAE,CAAC36B,OAAH,CAAW26B,EAAX,CAAL;AACD;;AAED,SAAO,KAAKhF,KAAL,CAAWlB,MAAX,CAAkB+E,EAAlB,EAAsBC,EAAtB,EAA0BkB,EAA1B,CAAP;AACD,CArED;;AAuEAX,MAAM,CAACrwC,SAAP,CAAiB6xC,SAAjB,GAA6B,SAASA,SAAT,GAAqB;AAChD,MAAIhC,EAAJ;AACA,MAAIC,EAAJ;AACA,MAAIkB,EAAJ,CAHgD,CAIhD;;AACA,MAAI,KAAKV,IAAT,EAAe;AACb;AACA;AACA;AAEA;AACA,QAAIyB,EAAE,GAAG,KAAK1jC,CAAL,CAAOwI,MAAP,EAAT,CANa,CAOb;;AACA,QAAIm7B,EAAE,GAAG,KAAK1jC,CAAL,CAAOuI,MAAP,EAAT,CARa,CASb;;AACA,QAAIo7B,IAAI,GAAGD,EAAE,CAACn7B,MAAH,EAAX,CAVa,CAWb;;AACA,QAAI1H,CAAC,GAAG,KAAKd,CAAL,CAAO+H,MAAP,CAAc47B,EAAd,EAAkBn7B,MAAlB,GAA2BN,OAA3B,CAAmCw7B,EAAnC,EAAuCx7B,OAAvC,CAA+C07B,IAA/C,CAAR;AACA9iC,IAAAA,CAAC,GAAGA,CAAC,CAACkH,OAAF,CAAUlH,CAAV,CAAJ,CAba,CAcb;;AACA,QAAIe,CAAC,GAAG6hC,EAAE,CAAC37B,MAAH,CAAU27B,EAAV,EAAc17B,OAAd,CAAsB07B,EAAtB,EAA0B17B,OAA1B,CAAkC,KAAK21B,KAAL,CAAWtkC,CAA7C,CAAR,CAfa,CAgBb;;AACA,QAAI5B,CAAC,GAAGoK,CAAC,CAAC2G,MAAF,GAAWN,OAAX,CAAmBpH,CAAnB,EAAsBoH,OAAtB,CAA8BpH,CAA9B,CAAR,CAjBa,CAkBb;;AACA0gC,IAAAA,EAAE,GAAG/pC,CAAL,CAnBa,CAoBb;;AACA,QAAIosC,KAAK,GAAGD,IAAI,CAAC57B,OAAL,CAAa47B,IAAb,CAAZ;AACAC,IAAAA,KAAK,GAAGA,KAAK,CAAC77B,OAAN,CAAc67B,KAAd,CAAR;AACAA,IAAAA,KAAK,GAAGA,KAAK,CAAC77B,OAAN,CAAc67B,KAAd,CAAR;AACApC,IAAAA,EAAE,GAAG5/B,CAAC,CAACwG,MAAF,CAASvH,CAAC,CAACoH,OAAF,CAAUzQ,CAAV,CAAT,EAAuByQ,OAAvB,CAA+B27B,KAA/B,CAAL,CAxBa,CAyBb;;AACAlB,IAAAA,EAAE,GAAG,KAAK1iC,CAAL,CAAO8H,MAAP,CAAc,KAAK9H,CAAnB,CAAL;AACD,GA3BD,MA2BO;AACL;AACA;AAEA;AACA,QAAIuG,KAAK,GAAG,KAAKuE,CAAL,CAAOvC,MAAP,EAAZ,CALK,CAML;;AACA,QAAIs7B,KAAK,GAAG,KAAK7jC,CAAL,CAAOuI,MAAP,EAAZ,CAPK,CAQL;;AACA,QAAI41B,IAAI,GAAG,KAAKp+B,CAAL,CAAOqI,MAAP,CAAcy7B,KAAd,CAAX,CATK,CAUL;;AACA,QAAIC,KAAK,GAAG,KAAK/jC,CAAL,CAAOiI,MAAP,CAAczB,KAAd,EAAqB6B,MAArB,CAA4B,KAAKrI,CAAL,CAAO+H,MAAP,CAAcvB,KAAd,CAA5B,CAAZ;AACAu9B,IAAAA,KAAK,GAAGA,KAAK,CAACh8B,MAAN,CAAag8B,KAAb,EAAoB/7B,OAApB,CAA4B+7B,KAA5B,CAAR,CAZK,CAaL;;AACA,QAAIC,KAAK,GAAG5F,IAAI,CAACp2B,OAAL,CAAao2B,IAAb,CAAZ;AACA4F,IAAAA,KAAK,GAAGA,KAAK,CAACh8B,OAAN,CAAcg8B,KAAd,CAAR;AACA,QAAIC,KAAK,GAAGD,KAAK,CAACj8B,MAAN,CAAai8B,KAAb,CAAZ;AACAxC,IAAAA,EAAE,GAAGuC,KAAK,CAACv7B,MAAN,GAAeN,OAAf,CAAuB+7B,KAAvB,CAAL,CAjBK,CAkBL;;AACAtB,IAAAA,EAAE,GAAG,KAAK1iC,CAAL,CAAO8H,MAAP,CAAc,KAAKgD,CAAnB,EAAsBvC,MAAtB,GAA+BN,OAA/B,CAAuC47B,KAAvC,EAA8C57B,OAA9C,CAAsD1B,KAAtD,CAAL,CAnBK,CAoBL;;AACA,QAAI09B,OAAO,GAAGJ,KAAK,CAACt7B,MAAN,EAAd;AACA07B,IAAAA,OAAO,GAAGA,OAAO,CAACl8B,OAAR,CAAgBk8B,OAAhB,CAAV;AACAA,IAAAA,OAAO,GAAGA,OAAO,CAACl8B,OAAR,CAAgBk8B,OAAhB,CAAV;AACAA,IAAAA,OAAO,GAAGA,OAAO,CAACl8B,OAAR,CAAgBk8B,OAAhB,CAAV;AACAzC,IAAAA,EAAE,GAAGsC,KAAK,CAAC17B,MAAN,CAAa27B,KAAK,CAAC97B,OAAN,CAAcs5B,EAAd,CAAb,EAAgCt5B,OAAhC,CAAwCg8B,OAAxC,CAAL;AACD;;AAED,SAAO,KAAKvG,KAAL,CAAWlB,MAAX,CAAkB+E,EAAlB,EAAsBC,EAAtB,EAA0BkB,EAA1B,CAAP;AACD,CA7DD;;AA+DAX,MAAM,CAACrwC,SAAP,CAAiB8xC,IAAjB,GAAwB,SAASA,IAAT,GAAgB;AACtC,MAAIpqC,CAAC,GAAG,KAAKskC,KAAL,CAAWtkC,CAAnB,CADsC,CAGtC;;AACA,MAAIupC,EAAE,GAAG,KAAK5iC,CAAd;AACA,MAAI6iC,EAAE,GAAG,KAAK5iC,CAAd;AACA,MAAI6iC,EAAE,GAAG,KAAK/3B,CAAd;AACA,MAAIg4B,GAAG,GAAGD,EAAE,CAACt6B,MAAH,GAAYA,MAAZ,EAAV;AAEA,MAAIy6B,GAAG,GAAGL,EAAE,CAACp6B,MAAH,EAAV;AACA,MAAI27B,GAAG,GAAGtB,EAAE,CAACr6B,MAAH,EAAV;AAEA,MAAIpU,CAAC,GAAG6uC,GAAG,CAACl7B,MAAJ,CAAWk7B,GAAX,EAAgBj7B,OAAhB,CAAwBi7B,GAAxB,EAA6Bj7B,OAA7B,CAAqC3O,CAAC,CAACgP,MAAF,CAAS06B,GAAT,CAArC,CAAR;AAEA,MAAIqB,IAAI,GAAGxB,EAAE,CAAC76B,MAAH,CAAU66B,EAAV,CAAX;AACAwB,EAAAA,IAAI,GAAGA,IAAI,CAACp8B,OAAL,CAAao8B,IAAb,CAAP;AACA,MAAIhB,EAAE,GAAGgB,IAAI,CAAC/7B,MAAL,CAAY87B,GAAZ,CAAT;AACA,MAAI3C,EAAE,GAAGptC,CAAC,CAACoU,MAAF,GAAWN,OAAX,CAAmBk7B,EAAE,CAACr7B,MAAH,CAAUq7B,EAAV,CAAnB,CAAT;AACA,MAAIC,EAAE,GAAGD,EAAE,CAACl7B,OAAH,CAAWs5B,EAAX,CAAT;AAEA,MAAI6C,IAAI,GAAGF,GAAG,CAAC37B,MAAJ,EAAX;AACA67B,EAAAA,IAAI,GAAGA,IAAI,CAACr8B,OAAL,CAAaq8B,IAAb,CAAP;AACAA,EAAAA,IAAI,GAAGA,IAAI,CAACr8B,OAAL,CAAaq8B,IAAb,CAAP;AACAA,EAAAA,IAAI,GAAGA,IAAI,CAACr8B,OAAL,CAAaq8B,IAAb,CAAP;AACA,MAAI5C,EAAE,GAAGrtC,CAAC,CAACiU,MAAF,CAASg7B,EAAT,EAAan7B,OAAb,CAAqBm8B,IAArB,CAAT;AACA,MAAI1B,EAAE,GAAGE,EAAE,CAAC96B,MAAH,CAAU86B,EAAV,EAAcx6B,MAAd,CAAqBy6B,EAArB,CAAT;AAEA,SAAO,KAAKnF,KAAL,CAAWlB,MAAX,CAAkB+E,EAAlB,EAAsBC,EAAtB,EAA0BkB,EAA1B,CAAP;AACD,CA5BD;;AA8BAX,MAAM,CAACrwC,SAAP,CAAiB2yC,IAAjB,GAAwB,SAASA,IAAT,GAAgB;AACtC,MAAI,CAAC,KAAK3G,KAAL,CAAWiB,KAAhB,EACE,OAAO,KAAKL,GAAL,GAAWzkC,GAAX,CAAe,IAAf,CAAP,CAFoC,CAItC;AACA;AAEA;;AACA,MAAI4pC,EAAE,GAAG,KAAK1jC,CAAL,CAAOwI,MAAP,EAAT,CARsC,CAStC;;AACA,MAAIm7B,EAAE,GAAG,KAAK1jC,CAAL,CAAOuI,MAAP,EAAT,CAVsC,CAWtC;;AACA,MAAI+7B,EAAE,GAAG,KAAKx5B,CAAL,CAAOvC,MAAP,EAAT,CAZsC,CAatC;;AACA,MAAIo7B,IAAI,GAAGD,EAAE,CAACn7B,MAAH,EAAX,CAdsC,CAetC;;AACA,MAAI3G,CAAC,GAAG6hC,EAAE,CAAC37B,MAAH,CAAU27B,EAAV,EAAc17B,OAAd,CAAsB07B,EAAtB,CAAR,CAhBsC,CAiBtC;;AACA,MAAIc,EAAE,GAAG3iC,CAAC,CAAC2G,MAAF,EAAT,CAlBsC,CAmBtC;;AACA,MAAI3Z,CAAC,GAAG,KAAKmR,CAAL,CAAO+H,MAAP,CAAc47B,EAAd,EAAkBn7B,MAAlB,GAA2BN,OAA3B,CAAmCw7B,EAAnC,EAAuCx7B,OAAvC,CAA+C07B,IAA/C,CAAR;AACA/0C,EAAAA,CAAC,GAAGA,CAAC,CAACmZ,OAAF,CAAUnZ,CAAV,CAAJ;AACAA,EAAAA,CAAC,GAAGA,CAAC,CAACkZ,MAAF,CAASlZ,CAAT,EAAYmZ,OAAZ,CAAoBnZ,CAApB,CAAJ;AACAA,EAAAA,CAAC,GAAGA,CAAC,CAACqZ,OAAF,CAAUs8B,EAAV,CAAJ,CAvBsC,CAwBtC;;AACA,MAAIC,EAAE,GAAG51C,CAAC,CAAC2Z,MAAF,EAAT,CAzBsC,CA0BtC;;AACA,MAAI/Q,CAAC,GAAGmsC,IAAI,CAAC57B,OAAL,CAAa47B,IAAb,CAAR;AACAnsC,EAAAA,CAAC,GAAGA,CAAC,CAACuQ,OAAF,CAAUvQ,CAAV,CAAJ;AACAA,EAAAA,CAAC,GAAGA,CAAC,CAACuQ,OAAF,CAAUvQ,CAAV,CAAJ;AACAA,EAAAA,CAAC,GAAGA,CAAC,CAACuQ,OAAF,CAAUvQ,CAAV,CAAJ,CA9BsC,CA+BtC;;AACA,MAAIgU,CAAC,GAAG5J,CAAC,CAACmG,OAAF,CAAUnZ,CAAV,EAAa2Z,MAAb,GAAsBN,OAAtB,CAA8Bs8B,EAA9B,EAAkCt8B,OAAlC,CAA0Cu8B,EAA1C,EAA8Cv8B,OAA9C,CAAsDzQ,CAAtD,CAAR,CAhCsC,CAiCtC;;AACA,MAAIitC,IAAI,GAAGf,EAAE,CAACt7B,MAAH,CAAUoD,CAAV,CAAX;AACAi5B,EAAAA,IAAI,GAAGA,IAAI,CAAC18B,OAAL,CAAa08B,IAAb,CAAP;AACAA,EAAAA,IAAI,GAAGA,IAAI,CAAC18B,OAAL,CAAa08B,IAAb,CAAP;AACA,MAAIlD,EAAE,GAAG,KAAKxhC,CAAL,CAAOqI,MAAP,CAAco8B,EAAd,EAAkBv8B,OAAlB,CAA0Bw8B,IAA1B,CAAT;AACAlD,EAAAA,EAAE,GAAGA,EAAE,CAACx5B,OAAH,CAAWw5B,EAAX,CAAL;AACAA,EAAAA,EAAE,GAAGA,EAAE,CAACx5B,OAAH,CAAWw5B,EAAX,CAAL,CAvCsC,CAwCtC;;AACA,MAAIC,EAAE,GAAG,KAAKxhC,CAAL,CAAOoI,MAAP,CAAcoD,CAAC,CAACpD,MAAF,CAAS5Q,CAAC,CAACyQ,OAAF,CAAUuD,CAAV,CAAT,EAAuBvD,OAAvB,CAA+BrZ,CAAC,CAACwZ,MAAF,CAASo8B,EAAT,CAA/B,CAAd,CAAT;AACAhD,EAAAA,EAAE,GAAGA,EAAE,CAACz5B,OAAH,CAAWy5B,EAAX,CAAL;AACAA,EAAAA,EAAE,GAAGA,EAAE,CAACz5B,OAAH,CAAWy5B,EAAX,CAAL;AACAA,EAAAA,EAAE,GAAGA,EAAE,CAACz5B,OAAH,CAAWy5B,EAAX,CAAL,CA5CsC,CA6CtC;;AACA,MAAIkB,EAAE,GAAG,KAAK53B,CAAL,CAAOhD,MAAP,CAAclZ,CAAd,EAAiB2Z,MAAjB,GAA0BN,OAA1B,CAAkCq8B,EAAlC,EAAsCr8B,OAAtC,CAA8Cu8B,EAA9C,CAAT;AAEA,SAAO,KAAK9G,KAAL,CAAWlB,MAAX,CAAkB+E,EAAlB,EAAsBC,EAAtB,EAA0BkB,EAA1B,CAAP;AACD,CAjDD;;AAmDAX,MAAM,CAACrwC,SAAP,CAAiBkD,GAAjB,GAAuB,SAASA,GAAT,CAAaqF,CAAb,EAAgByqC,KAAhB,EAAuB;AAC5CzqC,EAAAA,CAAC,GAAG,IAAIjJ,EAAJ,CAAOiJ,CAAP,EAAUyqC,KAAV,CAAJ;AAEA,SAAO,KAAKhH,KAAL,CAAWd,QAAX,CAAoB,IAApB,EAA0B3iC,CAA1B,CAAP;AACD,CAJD;;AAMA8nC,MAAM,CAACrwC,SAAP,CAAiB2V,EAAjB,GAAsB,SAASA,EAAT,CAAYlG,CAAZ,EAAe;AACnC,MAAIA,CAAC,CAAC7R,IAAF,KAAW,QAAf,EACE,OAAO,KAAK+X,EAAL,CAAQlG,CAAC,CAACm8B,GAAF,EAAR,CAAP;AAEF,MAAI,SAASn8B,CAAb,EACE,OAAO,IAAP,CALiC,CAOnC;;AACA,MAAIkhC,EAAE,GAAG,KAAKv3B,CAAL,CAAOvC,MAAP,EAAT;AACA,MAAI65B,GAAG,GAAGjhC,CAAC,CAAC2J,CAAF,CAAIvC,MAAJ,EAAV;AACA,MAAI,KAAKxI,CAAL,CAAOqI,MAAP,CAAcg6B,GAAd,EAAmBn6B,OAAnB,CAA2B9G,CAAC,CAACpB,CAAF,CAAIqI,MAAJ,CAAWi6B,EAAX,CAA3B,EAA2C77B,IAA3C,CAAgD,CAAhD,MAAuD,CAA3D,EACE,OAAO,KAAP,CAXiC,CAanC;;AACA,MAAIm+B,EAAE,GAAGtC,EAAE,CAACj6B,MAAH,CAAU,KAAK0C,CAAf,CAAT;AACA,MAAI85B,GAAG,GAAGxC,GAAG,CAACh6B,MAAJ,CAAWjH,CAAC,CAAC2J,CAAb,CAAV;AACA,SAAO,KAAK9K,CAAL,CAAOoI,MAAP,CAAcw8B,GAAd,EAAmB38B,OAAnB,CAA2B9G,CAAC,CAACnB,CAAF,CAAIoI,MAAJ,CAAWu8B,EAAX,CAA3B,EAA2Cn+B,IAA3C,CAAgD,CAAhD,MAAuD,CAA9D;AACD,CAjBD;;AAmBAu7B,MAAM,CAACrwC,SAAP,CAAiBmzC,MAAjB,GAA0B,SAASA,MAAT,CAAgB9kC,CAAhB,EAAmB;AAC3C,MAAI+kC,EAAE,GAAG,KAAKh6B,CAAL,CAAOvC,MAAP,EAAT;AACA,MAAI7G,EAAE,GAAG3B,CAAC,CAACwH,KAAF,CAAQ,KAAKm2B,KAAL,CAAWtrC,GAAnB,EAAwBgW,MAAxB,CAA+B08B,EAA/B,CAAT;AACA,MAAI,KAAK/kC,CAAL,CAAOjN,GAAP,CAAW4O,EAAX,MAAmB,CAAvB,EACE,OAAO,IAAP;AAEF,MAAIqjC,EAAE,GAAGhlC,CAAC,CAACvK,KAAF,EAAT;AACA,MAAIgC,CAAC,GAAG,KAAKkmC,KAAL,CAAW7B,IAAX,CAAgBzzB,MAAhB,CAAuB08B,EAAvB,CAAR;;AACA,WAAS;AACPC,IAAAA,EAAE,CAACprC,IAAH,CAAQ,KAAK+jC,KAAL,CAAW/sC,CAAnB;AACA,QAAIo0C,EAAE,CAACjyC,GAAH,CAAO,KAAK4qC,KAAL,CAAWv8B,CAAlB,KAAwB,CAA5B,EACE,OAAO,KAAP;AAEFO,IAAAA,EAAE,CAACqG,OAAH,CAAWvQ,CAAX;AACA,QAAI,KAAKuI,CAAL,CAAOjN,GAAP,CAAW4O,EAAX,MAAmB,CAAvB,EACE,OAAO,IAAP;AACH;AACF,CAjBD;;AAmBAqgC,MAAM,CAACrwC,SAAP,CAAiBkE,OAAjB,GAA2B,SAASA,OAAT,GAAmB;AAC5C,MAAI,KAAK0rC,UAAL,EAAJ,EACE,OAAO,sBAAP;AACF,SAAO,mBAAmB,KAAKvhC,CAAL,CAAO5M,QAAP,CAAgB,EAAhB,EAAoB,CAApB,CAAnB,GACH,MADG,GACM,KAAK6M,CAAL,CAAO7M,QAAP,CAAgB,EAAhB,EAAoB,CAApB,CADN,GAEH,MAFG,GAEM,KAAK2X,CAAL,CAAO3X,QAAP,CAAgB,EAAhB,EAAoB,CAApB,CAFN,GAE+B,GAFtC;AAGD,CAND;;AAQA4uC,MAAM,CAACrwC,SAAP,CAAiB4vC,UAAjB,GAA8B,SAASA,UAAT,GAAsB;AAClD;AACA,SAAO,KAAKx2B,CAAL,CAAOtE,IAAP,CAAY,CAAZ,MAAmB,CAA1B;AACD,CAHD;;AAKA,IAAIw+B,OAAO,GAAG5L,sBAAsB,CAAC,UAAU5oC,MAAV,EAAkBC,OAAlB,EAA2B;AAEhE,MAAIitC,KAAK,GAAGjtC,OAAZ;AAEAitC,EAAAA,KAAK,CAAC5rC,IAAN,GAAaA,IAAb;AACA4rC,EAAAA,KAAK,CAACuH,KAAN,GAAchG,OAAd;AACAvB,EAAAA,KAAK,CAACtyB,IAAN,GAA+C,IAA/C;AACAsyB,EAAAA,KAAK,CAACwH,OAAN,GAAqD,IAArD;AACC,CARmC,CAApC;AAUA,IAAIC,QAAQ,GAAG/L,sBAAsB,CAAC,UAAU5oC,MAAV,EAAkBC,OAAlB,EAA2B;AAEjE,MAAI20C,MAAM,GAAG30C,OAAb;AAMA,MAAIQ,MAAM,GAAG4oC,SAAS,CAAC5oC,MAAvB;;AAEA,WAASo0C,WAAT,CAAqB7zB,OAArB,EAA8B;AAC5B,QAAIA,OAAO,CAACliB,IAAR,KAAiB,OAArB,EACE,KAAKouC,KAAL,GAAa,IAAIsH,OAAO,CAACC,KAAZ,CAAkBzzB,OAAlB,CAAb,CADF,KAEK,IAAIA,OAAO,CAACliB,IAAR,KAAiB,SAArB,EACH,KAAKouC,KAAL,GAAa,IAAIsH,OAAO,CAACE,OAAZ,CAAoB1zB,OAApB,CAAb,CADG,KAGH,KAAKksB,KAAL,GAAa,IAAIsH,OAAO,CAAC55B,IAAZ,CAAiBoG,OAAjB,CAAb;AACF,SAAK5L,CAAL,GAAS,KAAK83B,KAAL,CAAW93B,CAApB;AACA,SAAKjV,CAAL,GAAS,KAAK+sC,KAAL,CAAW/sC,CAApB;AACA,SAAK42B,IAAL,GAAY/V,OAAO,CAAC+V,IAApB;AAEAt2B,IAAAA,MAAM,CAAC,KAAK2U,CAAL,CAAOo2B,QAAP,EAAD,EAAoB,eAApB,CAAN;AACA/qC,IAAAA,MAAM,CAAC,KAAK2U,CAAL,CAAOhR,GAAP,CAAW,KAAKjE,CAAhB,EAAmB2wC,UAAnB,EAAD,EAAkC,yBAAlC,CAAN;AACD;;AACD8D,EAAAA,MAAM,CAACC,WAAP,GAAqBA,WAArB;;AAEA,WAASC,WAAT,CAAqB51C,IAArB,EAA2B8hB,OAA3B,EAAoC;AAClCvE,IAAAA,MAAM,CAACC,cAAP,CAAsBk4B,MAAtB,EAA8B11C,IAA9B,EAAoC;AAClCs8B,MAAAA,YAAY,EAAE,IADoB;AAElC7e,MAAAA,UAAU,EAAE,IAFsB;AAGlCo4B,MAAAA,GAAG,EAAE,YAAW;AACd,YAAI7H,KAAK,GAAG,IAAI2H,WAAJ,CAAgB7zB,OAAhB,CAAZ;AACAvE,QAAAA,MAAM,CAACC,cAAP,CAAsBk4B,MAAtB,EAA8B11C,IAA9B,EAAoC;AAClCs8B,UAAAA,YAAY,EAAE,IADoB;AAElC7e,UAAAA,UAAU,EAAE,IAFsB;AAGlCC,UAAAA,KAAK,EAAEswB;AAH2B,SAApC;AAKA,eAAOA,KAAP;AACD;AAXiC,KAApC;AAaD;;AAED4H,EAAAA,WAAW,CAAC,MAAD,EAAS;AAClBh2C,IAAAA,IAAI,EAAE,OADY;AAElBkb,IAAAA,KAAK,EAAE,MAFW;AAGlBrJ,IAAAA,CAAC,EAAE,uDAHe;AAIlB/H,IAAAA,CAAC,EAAE,uDAJe;AAKlBlC,IAAAA,CAAC,EAAE,uDALe;AAMlBvG,IAAAA,CAAC,EAAE,uDANe;AAOlB42B,IAAAA,IAAI,EAAE4R,MAAM,CAAC5B,MAPK;AAQlB+D,IAAAA,IAAI,EAAE,KARY;AASlB11B,IAAAA,CAAC,EAAE,CACD,uDADC,EAED,uDAFC;AATe,GAAT,CAAX;AAeA0/B,EAAAA,WAAW,CAAC,MAAD,EAAS;AAClBh2C,IAAAA,IAAI,EAAE,OADY;AAElBkb,IAAAA,KAAK,EAAE,MAFW;AAGlBrJ,IAAAA,CAAC,EAAE,gEAHe;AAIlB/H,IAAAA,CAAC,EAAE,gEAJe;AAKlBlC,IAAAA,CAAC,EAAE,gEALe;AAMlBvG,IAAAA,CAAC,EAAE,gEANe;AAOlB42B,IAAAA,IAAI,EAAE4R,MAAM,CAAC5B,MAPK;AAQlB+D,IAAAA,IAAI,EAAE,KARY;AASlB11B,IAAAA,CAAC,EAAE,CACD,gEADC,EAED,gEAFC;AATe,GAAT,CAAX;AAeA0/B,EAAAA,WAAW,CAAC,MAAD,EAAS;AAClBh2C,IAAAA,IAAI,EAAE,OADY;AAElBkb,IAAAA,KAAK,EAAE,IAFW;AAGlBrJ,IAAAA,CAAC,EAAE,yEAHe;AAIlB/H,IAAAA,CAAC,EAAE,yEAJe;AAKlBlC,IAAAA,CAAC,EAAE,yEALe;AAMlBvG,IAAAA,CAAC,EAAE,yEANe;AAOlB42B,IAAAA,IAAI,EAAE4R,MAAM,CAAC5B,MAPK;AAQlB+D,IAAAA,IAAI,EAAE,KARY;AASlB11B,IAAAA,CAAC,EAAE,CACD,yEADC,EAED,yEAFC;AATe,GAAT,CAAX;AAeA0/B,EAAAA,WAAW,CAAC,MAAD,EAAS;AAClBh2C,IAAAA,IAAI,EAAE,OADY;AAElBkb,IAAAA,KAAK,EAAE,IAFW;AAGlBrJ,IAAAA,CAAC,EAAE,oEACA,8CAJe;AAKlB/H,IAAAA,CAAC,EAAE,oEACA,8CANe;AAOlBlC,IAAAA,CAAC,EAAE,oEACA,8CARe;AASlBvG,IAAAA,CAAC,EAAE,oEACA,8CAVe;AAWlB42B,IAAAA,IAAI,EAAE4R,MAAM,CAAC3B,MAXK;AAYlB8D,IAAAA,IAAI,EAAE,KAZY;AAalB11B,IAAAA,CAAC,EAAE,CACD,6EACA,qCAFC,EAGD,6EACA,qCAJC;AAbe,GAAT,CAAX;AAqBA0/B,EAAAA,WAAW,CAAC,MAAD,EAAS;AAClBh2C,IAAAA,IAAI,EAAE,OADY;AAElBkb,IAAAA,KAAK,EAAE,IAFW;AAGlBrJ,IAAAA,CAAC,EAAE,2DACA,wDADA,GAEA,8CALe;AAMlB/H,IAAAA,CAAC,EAAE,2DACA,wDADA,GAEA,8CARe;AASlBlC,IAAAA,CAAC,EAAE,2DACA,wDADA,GAEA,8CAXe;AAYlBvG,IAAAA,CAAC,EAAE,2DACA,wDADA,GAEA,8CAde;AAelB42B,IAAAA,IAAI,EAAE4R,MAAM,CAAC1B,MAfK;AAgBlB6D,IAAAA,IAAI,EAAE,KAhBY;AAiBlB11B,IAAAA,CAAC,EAAE,CACD,2DACA,wDADA,GAEA,8CAHC,EAID,2DACA,wDADA,GAEA,8CANC;AAjBe,GAAT,CAAX;AA2BA0/B,EAAAA,WAAW,CAAC,YAAD,EAAe;AACxBh2C,IAAAA,IAAI,EAAE,MADkB;AAExBkb,IAAAA,KAAK,EAAE,QAFiB;AAGxBrJ,IAAAA,CAAC,EAAE,qEAHqB;AAIxB/H,IAAAA,CAAC,EAAE,OAJqB;AAKxBlC,IAAAA,CAAC,EAAE,GALqB;AAMxBvG,IAAAA,CAAC,EAAE,qEANqB;AAOxB42B,IAAAA,IAAI,EAAE4R,MAAM,CAAC5B,MAPW;AAQxB+D,IAAAA,IAAI,EAAE,KARkB;AASxB11B,IAAAA,CAAC,EAAE,CACD,GADC;AATqB,GAAf,CAAX;AAcA0/B,EAAAA,WAAW,CAAC,SAAD,EAAY;AACrBh2C,IAAAA,IAAI,EAAE,SADe;AAErBkb,IAAAA,KAAK,EAAE,QAFc;AAGrBrJ,IAAAA,CAAC,EAAE,qEAHkB;AAIrB/H,IAAAA,CAAC,EAAE,IAJkB;AAKrBjF,IAAAA,CAAC,EAAE,GALkB;AAMrB;AACAquB,IAAAA,CAAC,EAAE,qEAPkB;AAQrB7xB,IAAAA,CAAC,EAAE,qEARkB;AASrB42B,IAAAA,IAAI,EAAE4R,MAAM,CAAC5B,MATQ;AAUrB+D,IAAAA,IAAI,EAAE,KAVe;AAWrB11B,IAAAA,CAAC,EAAE,CACD,kEADC,EAGD;AACA,sEAJC;AAXkB,GAAZ,CAAX;AAmBA,MAAIs7B,GAAJ;;AACA,MAAI;AACFA,IAAAA,GAAG;AAAG;AAAmD,QAAD,CAAOsE,KAAP,EAAxD;AACD,GAFD,CAEE,OAAO52C,CAAP,EAAU;AACVsyC,IAAAA,GAAG,GAAGv3B,SAAN;AACD;;AAED27B,EAAAA,WAAW,CAAC,WAAD,EAAc;AACvBh2C,IAAAA,IAAI,EAAE,OADiB;AAEvBkb,IAAAA,KAAK,EAAE,MAFgB;AAGvBrJ,IAAAA,CAAC,EAAE,yEAHoB;AAIvB/H,IAAAA,CAAC,EAAE,GAJoB;AAKvBlC,IAAAA,CAAC,EAAE,GALoB;AAMvBvG,IAAAA,CAAC,EAAE,yEANoB;AAOvB4S,IAAAA,CAAC,EAAE,GAPoB;AAQvBgkB,IAAAA,IAAI,EAAE4R,MAAM,CAAC5B,MARU;AAUvB;AACA4G,IAAAA,IAAI,EAAE,kEAXiB;AAYvBe,IAAAA,MAAM,EAAE,kEAZe;AAavBI,IAAAA,KAAK,EAAE,CACL;AACElmC,MAAAA,CAAC,EAAE,kCADL;AAEElC,MAAAA,CAAC,EAAE;AAFL,KADK,EAKL;AACEkC,MAAAA,CAAC,EAAE,mCADL;AAEElC,MAAAA,CAAC,EAAE;AAFL,KALK,CAbgB;AAwBvBokC,IAAAA,IAAI,EAAE,KAxBiB;AAyBvB11B,IAAAA,CAAC,EAAE,CACD,kEADC,EAED,kEAFC,EAGDs7B,GAHC;AAzBoB,GAAd,CAAX;AA+BC,CA9MoC,CAArC;;AAoNA,SAASuE,QAAT,CAAkBj0B,OAAlB,EAA2B;AACzB,MAAI,EAAE,gBAAgBi0B,QAAlB,CAAJ,EACE,OAAO,IAAIA,QAAJ,CAAaj0B,OAAb,CAAP;AACF,OAAK+V,IAAL,GAAY/V,OAAO,CAAC+V,IAApB;AACA,OAAKme,UAAL,GAAkB,CAAC,CAACl0B,OAAO,CAACk0B,UAA5B;AAEA,OAAKz7B,MAAL,GAAc,KAAKsd,IAAL,CAAU+I,OAAxB;AACA,OAAKqV,UAAL,GAAkBn0B,OAAO,CAACm0B,UAAR,IAAsB,KAAKpe,IAAL,CAAUgJ,YAAlD;AAEA,OAAKqV,OAAL,GAAe,IAAf;AACA,OAAKC,cAAL,GAAsB,IAAtB;AACA,OAAKpN,CAAL,GAAS,IAAT;AACA,OAAKqN,CAAL,GAAS,IAAT;AAEA,MAAIC,OAAO,GAAGpM,OAAO,CAACnmC,OAAR,CAAgBge,OAAO,CAACu0B,OAAxB,EAAiCv0B,OAAO,CAACw0B,UAAR,IAAsB,KAAvD,CAAd;AACA,MAAIjmB,KAAK,GAAG4Z,OAAO,CAACnmC,OAAR,CAAgBge,OAAO,CAACuO,KAAxB,EAA+BvO,OAAO,CAACy0B,QAAR,IAAoB,KAAnD,CAAZ;AACA,MAAIC,IAAI,GAAGvM,OAAO,CAACnmC,OAAR,CAAgBge,OAAO,CAAC00B,IAAxB,EAA8B10B,OAAO,CAAC20B,OAAR,IAAmB,KAAjD,CAAX;AACA1M,EAAAA,oBAAoB,CAACsM,OAAO,CAAC5zC,MAAR,IAAmB,KAAKwzC,UAAL,GAAkB,CAAtC,EACb,qCAAqC,KAAKA,UAA1C,GAAuD,OAD1C,CAApB;;AAEA,OAAKtzC,KAAL,CAAW0zC,OAAX,EAAoBhmB,KAApB,EAA2BmmB,IAA3B;AACD;;AACD,IAAIE,QAAQ,GAAGX,QAAf;;AAEAA,QAAQ,CAAC/zC,SAAT,CAAmBW,KAAnB,GAA2B,SAASW,IAAT,CAAc+yC,OAAd,EAAuBhmB,KAAvB,EAA8BmmB,IAA9B,EAAoC;AAC7D,MAAIG,IAAI,GAAGN,OAAO,CAAC/zB,MAAR,CAAe+N,KAAf,EAAsB/N,MAAtB,CAA6Bk0B,IAA7B,CAAX;AAEA,OAAKzN,CAAL,GAAS,IAAIhmC,KAAJ,CAAU,KAAKwX,MAAL,GAAc,CAAxB,CAAT;AACA,OAAK67B,CAAL,GAAS,IAAIrzC,KAAJ,CAAU,KAAKwX,MAAL,GAAc,CAAxB,CAAT;;AACA,OAAK,IAAItW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKmyC,CAAL,CAAO3zC,MAA3B,EAAmCwB,CAAC,EAApC,EAAwC;AACtC,SAAK8kC,CAAL,CAAO9kC,CAAP,IAAY,IAAZ;AACA,SAAKmyC,CAAL,CAAOnyC,CAAP,IAAY,IAAZ;AACD;;AAED,OAAKi9B,OAAL,CAAayV,IAAb;;AACA,OAAKT,OAAL,GAAe,CAAf;AACA,OAAKC,cAAL,GAAsB,eAAtB,CAZ6D,CAYrB;AACzC,CAbD;;AAeAJ,QAAQ,CAAC/zC,SAAT,CAAmB40C,KAAnB,GAA2B,SAASpN,IAAT,GAAgB;AACzC,SAAO,IAAIC,MAAM,CAACD,IAAX,CAAgB,KAAK3R,IAArB,EAA2B,KAAKkR,CAAhC,CAAP;AACD,CAFD;;AAIAgN,QAAQ,CAAC/zC,SAAT,CAAmBk/B,OAAnB,GAA6B,SAAS/X,MAAT,CAAgBwtB,IAAhB,EAAsB;AACjD,MAAIE,IAAI,GAAG,KAAKD,KAAL,GACKztB,MADL,CACY,KAAKitB,CADjB,EAEKjtB,MAFL,CAEY,CAAE,IAAF,CAFZ,CAAX;;AAGA,MAAIwtB,IAAJ,EACEE,IAAI,GAAGA,IAAI,CAAC1tB,MAAL,CAAYwtB,IAAZ,CAAP;AACF,OAAK5N,CAAL,GAAS8N,IAAI,CAAC/rB,MAAL,EAAT;AACA,OAAKsrB,CAAL,GAAS,KAAKQ,KAAL,GAAaztB,MAAb,CAAoB,KAAKitB,CAAzB,EAA4BtrB,MAA5B,EAAT;AACA,MAAI,CAAC6rB,IAAL,EACE;AAEF,OAAK5N,CAAL,GAAS,KAAK6N,KAAL,GACKztB,MADL,CACY,KAAKitB,CADjB,EAEKjtB,MAFL,CAEY,CAAE,IAAF,CAFZ,EAGKA,MAHL,CAGYwtB,IAHZ,EAIK7rB,MAJL,EAAT;AAKA,OAAKsrB,CAAL,GAAS,KAAKQ,KAAL,GAAaztB,MAAb,CAAoB,KAAKitB,CAAzB,EAA4BtrB,MAA5B,EAAT;AACD,CAjBD;;AAmBAirB,QAAQ,CAAC/zC,SAAT,CAAmB80C,MAAnB,GAA4B,SAASA,MAAT,CAAgBT,OAAhB,EAAyBC,UAAzB,EAAqCnsC,GAArC,EAA0C4sC,MAA1C,EAAkD;AAC5E;AACA,MAAI,OAAOT,UAAP,KAAsB,QAA1B,EAAoC;AAClCS,IAAAA,MAAM,GAAG5sC,GAAT;AACAA,IAAAA,GAAG,GAAGmsC,UAAN;AACAA,IAAAA,UAAU,GAAG,IAAb;AACD;;AAEDD,EAAAA,OAAO,GAAGpM,OAAO,CAACnmC,OAAR,CAAgBuyC,OAAhB,EAAyBC,UAAzB,CAAV;AACAnsC,EAAAA,GAAG,GAAG8/B,OAAO,CAACnmC,OAAR,CAAgBqG,GAAhB,EAAqB4sC,MAArB,CAAN;AAEAhN,EAAAA,oBAAoB,CAACsM,OAAO,CAAC5zC,MAAR,IAAmB,KAAKwzC,UAAL,GAAkB,CAAtC,EACb,qCAAqC,KAAKA,UAA1C,GAAuD,OAD1C,CAApB;;AAGA,OAAK/U,OAAL,CAAamV,OAAO,CAAC/zB,MAAR,CAAenY,GAAG,IAAI,EAAtB,CAAb;;AACA,OAAK+rC,OAAL,GAAe,CAAf;AACD,CAhBD;;AAkBAH,QAAQ,CAAC/zC,SAAT,CAAmBg1C,QAAnB,GAA8B,SAASA,QAAT,CAAkB7xC,GAAlB,EAAuBs3B,GAAvB,EAA4BtyB,GAA5B,EAAiC4sC,MAAjC,EAAyC;AACrE,MAAI,KAAKb,OAAL,GAAe,KAAKC,cAAxB,EACE,MAAM,IAAIz0C,KAAJ,CAAU,oBAAV,CAAN,CAFmE,CAIrE;;AACA,MAAI,OAAO+6B,GAAP,KAAe,QAAnB,EAA6B;AAC3Bsa,IAAAA,MAAM,GAAG5sC,GAAT;AACAA,IAAAA,GAAG,GAAGsyB,GAAN;AACAA,IAAAA,GAAG,GAAG,IAAN;AACD,GAToE,CAWrE;;;AACA,MAAItyB,GAAJ,EAAS;AACPA,IAAAA,GAAG,GAAG8/B,OAAO,CAACnmC,OAAR,CAAgBqG,GAAhB,EAAqB4sC,MAAM,IAAI,KAA/B,CAAN;;AACA,SAAK7V,OAAL,CAAa/2B,GAAb;AACD;;AAED,MAAI8sC,IAAI,GAAG,EAAX;;AACA,SAAOA,IAAI,CAACx0C,MAAL,GAAc0C,GAArB,EAA0B;AACxB,SAAKixC,CAAL,GAAS,KAAKQ,KAAL,GAAaztB,MAAb,CAAoB,KAAKitB,CAAzB,EAA4BtrB,MAA5B,EAAT;AACAmsB,IAAAA,IAAI,GAAGA,IAAI,CAAC30B,MAAL,CAAY,KAAK8zB,CAAjB,CAAP;AACD;;AAED,MAAI7uC,GAAG,GAAG0vC,IAAI,CAAC31B,KAAL,CAAW,CAAX,EAAcnc,GAAd,CAAV;;AACA,OAAK+7B,OAAL,CAAa/2B,GAAb;;AACA,OAAK+rC,OAAL;AACA,SAAOjM,OAAO,CAACvb,MAAR,CAAennB,GAAf,EAAoBk1B,GAApB,CAAP;AACD,CA3BD;;AA+BA,IAAIya,QAAQ,GAAG/M,SAAS,CAAC5oC,MAAzB;;AAEA,SAAS41C,OAAT,CAAiBC,EAAjB,EAAqBt1B,OAArB,EAA8B;AAC5B,OAAKs1B,EAAL,GAAUA,EAAV;AACA,OAAKC,IAAL,GAAY,IAAZ;AACA,OAAKC,GAAL,GAAW,IAAX,CAH4B,CAK5B;;AACA,MAAIx1B,OAAO,CAACu1B,IAAZ,EACE,KAAKE,cAAL,CAAoBz1B,OAAO,CAACu1B,IAA5B,EAAkCv1B,OAAO,CAAC01B,OAA1C;AACF,MAAI11B,OAAO,CAACw1B,GAAZ,EACE,KAAKG,aAAL,CAAmB31B,OAAO,CAACw1B,GAA3B,EAAgCx1B,OAAO,CAAC41B,MAAxC;AACH;;AACD,IAAIz4B,GAAG,GAAGk4B,OAAV;;AAEAA,OAAO,CAACQ,UAAR,GAAqB,SAASA,UAAT,CAAoBP,EAApB,EAAwBE,GAAxB,EAA6B7a,GAA7B,EAAkC;AACrD,MAAI6a,GAAG,YAAYH,OAAnB,EACE,OAAOG,GAAP;AAEF,SAAO,IAAIH,OAAJ,CAAYC,EAAZ,EAAgB;AACrBE,IAAAA,GAAG,EAAEA,GADgB;AAErBI,IAAAA,MAAM,EAAEjb;AAFa,GAAhB,CAAP;AAID,CARD;;AAUA0a,OAAO,CAACS,WAAR,GAAsB,SAASA,WAAT,CAAqBR,EAArB,EAAyBC,IAAzB,EAA+B5a,GAA/B,EAAoC;AACxD,MAAI4a,IAAI,YAAYF,OAApB,EACE,OAAOE,IAAP;AAEF,SAAO,IAAIF,OAAJ,CAAYC,EAAZ,EAAgB;AACrBC,IAAAA,IAAI,EAAEA,IADe;AAErBG,IAAAA,OAAO,EAAE/a;AAFY,GAAhB,CAAP;AAID,CARD;;AAUA0a,OAAO,CAACn1C,SAAR,CAAkBsqC,QAAlB,GAA6B,SAASA,QAAT,GAAoB;AAC/C,MAAIgL,GAAG,GAAG,KAAKO,SAAL,EAAV;AAEA,MAAIP,GAAG,CAAC1F,UAAJ,EAAJ,EACE,OAAO;AAAE7vB,IAAAA,MAAM,EAAE,KAAV;AAAiB3C,IAAAA,MAAM,EAAE;AAAzB,GAAP;AACF,MAAI,CAACk4B,GAAG,CAAChL,QAAJ,EAAL,EACE,OAAO;AAAEvqB,IAAAA,MAAM,EAAE,KAAV;AAAiB3C,IAAAA,MAAM,EAAE;AAAzB,GAAP;AACF,MAAI,CAACk4B,GAAG,CAACpyC,GAAJ,CAAQ,KAAKkyC,EAAL,CAAQpJ,KAAR,CAAc/sC,CAAtB,EAAyB2wC,UAAzB,EAAL,EACE,OAAO;AAAE7vB,IAAAA,MAAM,EAAE,KAAV;AAAiB3C,IAAAA,MAAM,EAAE;AAAzB,GAAP;AAEF,SAAO;AAAE2C,IAAAA,MAAM,EAAE,IAAV;AAAgB3C,IAAAA,MAAM,EAAE;AAAxB,GAAP;AACD,CAXD;;AAaA+3B,OAAO,CAACn1C,SAAR,CAAkB61C,SAAlB,GAA8B,SAASA,SAAT,CAAmBzJ,OAAnB,EAA4B3R,GAA5B,EAAiC;AAC7D;AACA,MAAI,OAAO2R,OAAP,KAAmB,QAAvB,EAAiC;AAC/B3R,IAAAA,GAAG,GAAG2R,OAAN;AACAA,IAAAA,OAAO,GAAG,IAAV;AACD;;AAED,MAAI,CAAC,KAAKkJ,GAAV,EACE,KAAKA,GAAL,GAAW,KAAKF,EAAL,CAAQlhC,CAAR,CAAUhR,GAAV,CAAc,KAAKmyC,IAAnB,CAAX;AAEF,MAAI,CAAC5a,GAAL,EACE,OAAO,KAAK6a,GAAZ;AAEF,SAAO,KAAKA,GAAL,CAAS5oB,MAAT,CAAgB+N,GAAhB,EAAqB2R,OAArB,CAAP;AACD,CAdD;;AAgBA+I,OAAO,CAACn1C,SAAR,CAAkB81C,UAAlB,GAA+B,SAASA,UAAT,CAAoBrb,GAApB,EAAyB;AACtD,MAAIA,GAAG,KAAK,KAAZ,EACE,OAAO,KAAK4a,IAAL,CAAU5zC,QAAV,CAAmB,EAAnB,EAAuB,CAAvB,CAAP,CADF,KAGE,OAAO,KAAK4zC,IAAZ;AACH,CALD;;AAOAF,OAAO,CAACn1C,SAAR,CAAkBu1C,cAAlB,GAAmC,SAASA,cAAT,CAAwBt4B,GAAxB,EAA6Bwd,GAA7B,EAAkC;AACnE,OAAK4a,IAAL,GAAY,IAAI/1C,EAAJ,CAAO2d,GAAP,EAAYwd,GAAG,IAAI,EAAnB,CAAZ,CADmE,CAGnE;AACA;;AACA,OAAK4a,IAAL,GAAY,KAAKA,IAAL,CAAU9hC,IAAV,CAAe,KAAK6hC,EAAL,CAAQpJ,KAAR,CAAc/sC,CAA7B,CAAZ;AACD,CAND;;AAQAk2C,OAAO,CAACn1C,SAAR,CAAkBy1C,aAAlB,GAAkC,SAASA,aAAT,CAAuBx4B,GAAvB,EAA4Bwd,GAA5B,EAAiC;AACjE,MAAIxd,GAAG,CAAC5O,CAAJ,IAAS4O,GAAG,CAAC3O,CAAjB,EAAoB;AAClB;AACA;AACA;AACA,QAAI,KAAK8mC,EAAL,CAAQpJ,KAAR,CAAcpuC,IAAd,KAAuB,MAA3B,EAAmC;AACjCs3C,MAAAA,QAAQ,CAACj4B,GAAG,CAAC5O,CAAL,EAAQ,mBAAR,CAAR;AACD,KAFD,MAEO,IAAI,KAAK+mC,EAAL,CAAQpJ,KAAR,CAAcpuC,IAAd,KAAuB,OAAvB,IACA,KAAKw3C,EAAL,CAAQpJ,KAAR,CAAcpuC,IAAd,KAAuB,SAD3B,EACsC;AAC3Cs3C,MAAAA,QAAQ,CAACj4B,GAAG,CAAC5O,CAAJ,IAAS4O,GAAG,CAAC3O,CAAd,EAAiB,8BAAjB,CAAR;AACD;;AACD,SAAKgnC,GAAL,GAAW,KAAKF,EAAL,CAAQpJ,KAAR,CAAc3B,KAAd,CAAoBptB,GAAG,CAAC5O,CAAxB,EAA2B4O,GAAG,CAAC3O,CAA/B,CAAX;AACA;AACD;;AACD,OAAKgnC,GAAL,GAAW,KAAKF,EAAL,CAAQpJ,KAAR,CAAcC,WAAd,CAA0BhvB,GAA1B,EAA+Bwd,GAA/B,CAAX;AACD,CAfD,C,CAiBA;;;AACA0a,OAAO,CAACn1C,SAAR,CAAkB+1C,MAAlB,GAA2B,SAASA,MAAT,CAAgBT,GAAhB,EAAqB;AAC9C,MAAG,CAACA,GAAG,CAAChL,QAAJ,EAAJ,EAAoB;AAClB4K,IAAAA,QAAQ,CAACI,GAAG,CAAChL,QAAJ,EAAD,EAAiB,4BAAjB,CAAR;AACD;;AACD,SAAOgL,GAAG,CAACpyC,GAAJ,CAAQ,KAAKmyC,IAAb,EAAmBhJ,IAAnB,EAAP;AACD,CALD,C,CAOA;;;AACA8I,OAAO,CAACn1C,SAAR,CAAkBg2C,IAAlB,GAAyB,SAASA,IAAT,CAAcv2C,GAAd,EAAmBg7B,GAAnB,EAAwB3a,OAAxB,EAAiC;AACxD,SAAO,KAAKs1B,EAAL,CAAQY,IAAR,CAAav2C,GAAb,EAAkB,IAAlB,EAAwBg7B,GAAxB,EAA6B3a,OAA7B,CAAP;AACD,CAFD;;AAIAq1B,OAAO,CAACn1C,SAAR,CAAkBi2C,MAAlB,GAA2B,SAASA,MAAT,CAAgBx2C,GAAhB,EAAqBuiB,SAArB,EAAgC;AACzD,SAAO,KAAKozB,EAAL,CAAQa,MAAR,CAAex2C,GAAf,EAAoBuiB,SAApB,EAA+B,IAA/B,CAAP;AACD,CAFD;;AAIAmzB,OAAO,CAACn1C,SAAR,CAAkBkE,OAAlB,GAA4B,SAASA,OAAT,GAAmB;AAC7C,SAAO,iBAAiB,KAAKmxC,IAAL,IAAa,KAAKA,IAAL,CAAU5zC,QAAV,CAAmB,EAAnB,EAAuB,CAAvB,CAA9B,IACA,QADA,IACY,KAAK6zC,GAAL,IAAY,KAAKA,GAAL,CAASpxC,OAAT,EADxB,IAC8C,IADrD;AAED,CAHD;;AAQA,IAAIgyC,QAAQ,GAAG/N,SAAS,CAAC5oC,MAAzB;;AAEA,SAAS42C,SAAT,CAAmBr2B,OAAnB,EAA4B2a,GAA5B,EAAiC;AAC/B,MAAI3a,OAAO,YAAYq2B,SAAvB,EACE,OAAOr2B,OAAP;AAEF,MAAI,KAAKs2B,UAAL,CAAgBt2B,OAAhB,EAAyB2a,GAAzB,CAAJ,EACE;AAEFyb,EAAAA,QAAQ,CAACp2B,OAAO,CAACjd,CAAR,IAAaid,OAAO,CAAC3Q,CAAtB,EAAyB,0BAAzB,CAAR;AACA,OAAKtM,CAAL,GAAS,IAAIvD,EAAJ,CAAOwgB,OAAO,CAACjd,CAAf,EAAkB,EAAlB,CAAT;AACA,OAAKsM,CAAL,GAAS,IAAI7P,EAAJ,CAAOwgB,OAAO,CAAC3Q,CAAf,EAAkB,EAAlB,CAAT;AACA,MAAI2Q,OAAO,CAACoC,aAAR,KAA0BjK,SAA9B,EACE,KAAKiK,aAAL,GAAqB,IAArB,CADF,KAGE,KAAKA,aAAL,GAAqBpC,OAAO,CAACoC,aAA7B;AACH;;AACD,IAAIF,SAAS,GAAGm0B,SAAhB;;AAEA,SAASE,QAAT,GAAoB;AAClB,OAAKC,KAAL,GAAa,CAAb;AACD;;AAED,SAASC,SAAT,CAAmBja,GAAnB,EAAwB7sB,CAAxB,EAA2B;AACzB,MAAI+mC,OAAO,GAAGla,GAAG,CAAC7sB,CAAC,CAAC6mC,KAAF,EAAD,CAAjB;;AACA,MAAI,EAAEE,OAAO,GAAG,IAAZ,CAAJ,EAAuB;AACrB,WAAOA,OAAP;AACD;;AACD,MAAIC,QAAQ,GAAGD,OAAO,GAAG,GAAzB,CALyB,CAOzB;;AACA,MAAIC,QAAQ,KAAK,CAAb,IAAkBA,QAAQ,GAAG,CAAjC,EAAoC;AAClC,WAAO,KAAP;AACD;;AAED,MAAIj3C,GAAG,GAAG,CAAV;;AACA,OAAK,IAAIyC,CAAC,GAAG,CAAR,EAAWG,GAAG,GAAGqN,CAAC,CAAC6mC,KAAxB,EAA+Br0C,CAAC,GAAGw0C,QAAnC,EAA6Cx0C,CAAC,IAAIG,GAAG,EAArD,EAAyD;AACvD5C,IAAAA,GAAG,KAAK,CAAR;AACAA,IAAAA,GAAG,IAAI88B,GAAG,CAACl6B,GAAD,CAAV;AACA5C,IAAAA,GAAG,MAAM,CAAT;AACD,GAjBwB,CAmBzB;;;AACA,MAAIA,GAAG,IAAI,IAAX,EAAiB;AACf,WAAO,KAAP;AACD;;AAEDiQ,EAAAA,CAAC,CAAC6mC,KAAF,GAAUl0C,GAAV;AACA,SAAO5C,GAAP;AACD;;AAED,SAASk3C,SAAT,CAAmBpa,GAAnB,EAAwB;AACtB,MAAIr6B,CAAC,GAAG,CAAR;AACA,MAAIkB,GAAG,GAAGm5B,GAAG,CAAC77B,MAAJ,GAAa,CAAvB;;AACA,SAAO,CAAC67B,GAAG,CAACr6B,CAAD,CAAJ,IAAW,EAAEq6B,GAAG,CAACr6B,CAAC,GAAG,CAAL,CAAH,GAAa,IAAf,CAAX,IAAmCA,CAAC,GAAGkB,GAA9C,EAAmD;AACjDlB,IAAAA,CAAC;AACF;;AACD,MAAIA,CAAC,KAAK,CAAV,EAAa;AACX,WAAOq6B,GAAP;AACD;;AACD,SAAOA,GAAG,CAAChd,KAAJ,CAAUrd,CAAV,CAAP;AACD;;AAEDk0C,SAAS,CAACn2C,SAAV,CAAoBo2C,UAApB,GAAiC,SAASA,UAAT,CAAoB70B,IAApB,EAA0BkZ,GAA1B,EAA+B;AAC9DlZ,EAAAA,IAAI,GAAG4mB,SAAS,CAACrmC,OAAV,CAAkByf,IAAlB,EAAwBkZ,GAAxB,CAAP;AACA,MAAIhrB,CAAC,GAAG,IAAI4mC,QAAJ,EAAR;;AACA,MAAI90B,IAAI,CAAC9R,CAAC,CAAC6mC,KAAF,EAAD,CAAJ,KAAoB,IAAxB,EAA8B;AAC5B,WAAO,KAAP;AACD;;AACD,MAAInzC,GAAG,GAAGozC,SAAS,CAACh1B,IAAD,EAAO9R,CAAP,CAAnB;;AACA,MAAItM,GAAG,KAAK,KAAZ,EAAmB;AACjB,WAAO,KAAP;AACD;;AACD,MAAKA,GAAG,GAAGsM,CAAC,CAAC6mC,KAAT,KAAoB/0B,IAAI,CAAC9gB,MAA7B,EAAqC;AACnC,WAAO,KAAP;AACD;;AACD,MAAI8gB,IAAI,CAAC9R,CAAC,CAAC6mC,KAAF,EAAD,CAAJ,KAAoB,IAAxB,EAA8B;AAC5B,WAAO,KAAP;AACD;;AACD,MAAIx+B,IAAI,GAAGy+B,SAAS,CAACh1B,IAAD,EAAO9R,CAAP,CAApB;;AACA,MAAIqI,IAAI,KAAK,KAAb,EAAoB;AAClB,WAAO,KAAP;AACD;;AACD,MAAIjV,CAAC,GAAG0e,IAAI,CAACjC,KAAL,CAAW7P,CAAC,CAAC6mC,KAAb,EAAoBx+B,IAAI,GAAGrI,CAAC,CAAC6mC,KAA7B,CAAR;AACA7mC,EAAAA,CAAC,CAAC6mC,KAAF,IAAWx+B,IAAX;;AACA,MAAIyJ,IAAI,CAAC9R,CAAC,CAAC6mC,KAAF,EAAD,CAAJ,KAAoB,IAAxB,EAA8B;AAC5B,WAAO,KAAP;AACD;;AACD,MAAIK,IAAI,GAAGJ,SAAS,CAACh1B,IAAD,EAAO9R,CAAP,CAApB;;AACA,MAAIknC,IAAI,KAAK,KAAb,EAAoB;AAClB,WAAO,KAAP;AACD;;AACD,MAAIp1B,IAAI,CAAC9gB,MAAL,KAAgBk2C,IAAI,GAAGlnC,CAAC,CAAC6mC,KAA7B,EAAoC;AAClC,WAAO,KAAP;AACD;;AACD,MAAInnC,CAAC,GAAGoS,IAAI,CAACjC,KAAL,CAAW7P,CAAC,CAAC6mC,KAAb,EAAoBK,IAAI,GAAGlnC,CAAC,CAAC6mC,KAA7B,CAAR;;AACA,MAAIzzC,CAAC,CAAC,CAAD,CAAD,KAAS,CAAb,EAAgB;AACd,QAAIA,CAAC,CAAC,CAAD,CAAD,GAAO,IAAX,EAAiB;AACfA,MAAAA,CAAC,GAAGA,CAAC,CAACyc,KAAF,CAAQ,CAAR,CAAJ;AACD,KAFD,MAEO;AACL;AACA,aAAO,KAAP;AACD;AACF;;AACD,MAAInQ,CAAC,CAAC,CAAD,CAAD,KAAS,CAAb,EAAgB;AACd,QAAIA,CAAC,CAAC,CAAD,CAAD,GAAO,IAAX,EAAiB;AACfA,MAAAA,CAAC,GAAGA,CAAC,CAACmQ,KAAF,CAAQ,CAAR,CAAJ;AACD,KAFD,MAEO;AACL;AACA,aAAO,KAAP;AACD;AACF;;AAED,OAAKzc,CAAL,GAAS,IAAIvD,EAAJ,CAAOuD,CAAP,CAAT;AACA,OAAKsM,CAAL,GAAS,IAAI7P,EAAJ,CAAO6P,CAAP,CAAT;AACA,OAAK+S,aAAL,GAAqB,IAArB;AAEA,SAAO,IAAP;AACD,CAvDD;;AAyDA,SAAS00B,eAAT,CAAyB1O,GAAzB,EAA8B/kC,GAA9B,EAAmC;AACjC,MAAIA,GAAG,GAAG,IAAV,EAAgB;AACd+kC,IAAAA,GAAG,CAACptB,IAAJ,CAAS3X,GAAT;AACA;AACD;;AACD,MAAI0zC,MAAM,GAAG,KAAK90C,IAAI,CAACoa,GAAL,CAAShZ,GAAT,IAAgBpB,IAAI,CAAC+0C,GAArB,KAA6B,CAAlC,CAAb;AACA5O,EAAAA,GAAG,CAACptB,IAAJ,CAAS+7B,MAAM,GAAG,IAAlB;;AACA,SAAO,EAAEA,MAAT,EAAiB;AACf3O,IAAAA,GAAG,CAACptB,IAAJ,CAAU3X,GAAG,MAAM0zC,MAAM,IAAI,CAAhB,CAAJ,GAA0B,IAAnC;AACD;;AACD3O,EAAAA,GAAG,CAACptB,IAAJ,CAAS3X,GAAT;AACD;;AAEDgzC,SAAS,CAACn2C,SAAV,CAAoB+2C,KAApB,GAA4B,SAASA,KAAT,CAAetc,GAAf,EAAoB;AAC9C,MAAI53B,CAAC,GAAG,KAAKA,CAAL,CAAOf,OAAP,EAAR;AACA,MAAIqN,CAAC,GAAG,KAAKA,CAAL,CAAOrN,OAAP,EAAR,CAF8C,CAI9C;;AACA,MAAIe,CAAC,CAAC,CAAD,CAAD,GAAO,IAAX,EACEA,CAAC,GAAG,CAAE,CAAF,EAAMyd,MAAN,CAAazd,CAAb,CAAJ,CAN4C,CAO9C;;AACA,MAAIsM,CAAC,CAAC,CAAD,CAAD,GAAO,IAAX,EACEA,CAAC,GAAG,CAAE,CAAF,EAAMmR,MAAN,CAAanR,CAAb,CAAJ;AAEFtM,EAAAA,CAAC,GAAG6zC,SAAS,CAAC7zC,CAAD,CAAb;AACAsM,EAAAA,CAAC,GAAGunC,SAAS,CAACvnC,CAAD,CAAb;;AAEA,SAAO,CAACA,CAAC,CAAC,CAAD,CAAF,IAAS,EAAEA,CAAC,CAAC,CAAD,CAAD,GAAO,IAAT,CAAhB,EAAgC;AAC9BA,IAAAA,CAAC,GAAGA,CAAC,CAACmQ,KAAF,CAAQ,CAAR,CAAJ;AACD;;AACD,MAAI4oB,GAAG,GAAG,CAAE,IAAF,CAAV;AACA0O,EAAAA,eAAe,CAAC1O,GAAD,EAAMrlC,CAAC,CAACpC,MAAR,CAAf;AACAynC,EAAAA,GAAG,GAAGA,GAAG,CAAC5nB,MAAJ,CAAWzd,CAAX,CAAN;AACAqlC,EAAAA,GAAG,CAACptB,IAAJ,CAAS,IAAT;AACA87B,EAAAA,eAAe,CAAC1O,GAAD,EAAM/4B,CAAC,CAAC1O,MAAR,CAAf;AACA,MAAIu2C,QAAQ,GAAG9O,GAAG,CAAC5nB,MAAJ,CAAWnR,CAAX,CAAf;AACA,MAAI5J,GAAG,GAAG,CAAE,IAAF,CAAV;AACAqxC,EAAAA,eAAe,CAACrxC,GAAD,EAAMyxC,QAAQ,CAACv2C,MAAf,CAAf;AACA8E,EAAAA,GAAG,GAAGA,GAAG,CAAC+a,MAAJ,CAAW02B,QAAX,CAAN;AACA,SAAO7O,SAAS,CAACzb,MAAV,CAAiBnnB,GAAjB,EAAsBk1B,GAAtB,CAAP;AACD,CA3BD;;AAiCA,IAAIwc,IAAI,GAAsC,YAAW;AAAE,QAAM,IAAIv3C,KAAJ,CAAU,aAAV,CAAN;AAAiC,CAA5F;;AACA,IAAIw3C,QAAQ,GAAG/O,SAAS,CAAC5oC,MAAzB;;AAKA,SAAS43C,EAAT,CAAYr3B,OAAZ,EAAqB;AACnB,MAAI,EAAE,gBAAgBq3B,EAAlB,CAAJ,EACE,OAAO,IAAIA,EAAJ,CAAOr3B,OAAP,CAAP,CAFiB,CAInB;;AACA,MAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAC/Bo3B,IAAAA,QAAQ,CAAC37B,MAAM,CAACvb,SAAP,CAAiBo3C,cAAjB,CAAgC/+B,IAAhC,CAAqCo7B,QAArC,EAA+C3zB,OAA/C,CAAD,EACN,mBAAmBA,OADb,CAAR;AAGAA,IAAAA,OAAO,GAAG2zB,QAAQ,CAAC3zB,OAAD,CAAlB;AACD,GAVkB,CAYnB;;;AACA,MAAIA,OAAO,YAAY2zB,QAAQ,CAACE,WAAhC,EACE7zB,OAAO,GAAG;AAAEksB,IAAAA,KAAK,EAAElsB;AAAT,GAAV;AAEF,OAAKksB,KAAL,GAAalsB,OAAO,CAACksB,KAAR,CAAcA,KAA3B;AACA,OAAK/sC,CAAL,GAAS,KAAK+sC,KAAL,CAAW/sC,CAApB;AACA,OAAKo4C,EAAL,GAAU,KAAKp4C,CAAL,CAAOmT,KAAP,CAAa,CAAb,CAAV;AACA,OAAK8B,CAAL,GAAS,KAAK83B,KAAL,CAAW93B,CAApB,CAnBmB,CAqBnB;;AACA,OAAKA,CAAL,GAAS4L,OAAO,CAACksB,KAAR,CAAc93B,CAAvB;AACA,OAAKA,CAAL,CAAOq4B,UAAP,CAAkBzsB,OAAO,CAACksB,KAAR,CAAc/sC,CAAd,CAAgB+G,SAAhB,KAA8B,CAAhD,EAvBmB,CAyBnB;;AACA,OAAK6vB,IAAL,GAAY/V,OAAO,CAAC+V,IAAR,IAAgB/V,OAAO,CAACksB,KAAR,CAAcnW,IAA1C;AACD;;AACD,IAAIuf,EAAE,GAAG+B,EAAT;;AAEAA,EAAE,CAACn3C,SAAH,CAAas3C,OAAb,GAAuB,SAASA,OAAT,CAAiBx3B,OAAjB,EAA0B;AAC/C,SAAO,IAAI7C,GAAJ,CAAQ,IAAR,EAAc6C,OAAd,CAAP;AACD,CAFD;;AAIAq3B,EAAE,CAACn3C,SAAH,CAAau3C,cAAb,GAA8B,SAASA,cAAT,CAAwBlC,IAAxB,EAA8B5a,GAA9B,EAAmC;AAC/D,SAAOxd,GAAG,CAAC24B,WAAJ,CAAgB,IAAhB,EAAsBP,IAAtB,EAA4B5a,GAA5B,CAAP;AACD,CAFD;;AAIA0c,EAAE,CAACn3C,SAAH,CAAaw3C,aAAb,GAA6B,SAASA,aAAT,CAAuBlC,GAAvB,EAA4B7a,GAA5B,EAAiC;AAC5D,SAAOxd,GAAG,CAAC04B,UAAJ,CAAe,IAAf,EAAqBL,GAArB,EAA0B7a,GAA1B,CAAP;AACD,CAFD;;AAIA0c,EAAE,CAACn3C,SAAH,CAAay3C,UAAb,GAA0B,SAASA,UAAT,CAAoB33B,OAApB,EAA6B;AACrD,MAAI,CAACA,OAAL,EACEA,OAAO,GAAG,EAAV,CAFmD,CAIrD;;AACA,MAAI43B,IAAI,GAAG,IAAIhD,QAAJ,CAAa;AACtB7e,IAAAA,IAAI,EAAE,KAAKA,IADW;AAEtB2e,IAAAA,IAAI,EAAE10B,OAAO,CAAC00B,IAFQ;AAGtBC,IAAAA,OAAO,EAAE30B,OAAO,CAAC20B,OAAR,IAAmB,MAHN;AAItBJ,IAAAA,OAAO,EAAEv0B,OAAO,CAACu0B,OAAR,IAAmB4C,IAAI,EAJV;AAKtB3C,IAAAA,UAAU,EAAEx0B,OAAO,CAACu0B,OAAR,IAAmBv0B,OAAO,CAACw0B,UAA3B,IAAyC,MAL/B;AAMtBjmB,IAAAA,KAAK,EAAE,KAAKpvB,CAAL,CAAO6C,OAAP;AANe,GAAb,CAAX;AASA,MAAIqgB,KAAK,GAAG,KAAKljB,CAAL,CAAOmG,UAAP,EAAZ;AACA,MAAIuyC,GAAG,GAAG,KAAK14C,CAAL,CAAOmJ,GAAP,CAAW,IAAI9I,EAAJ,CAAO,CAAP,CAAX,CAAV;;AACA,WAAS;AACP,QAAI+1C,IAAI,GAAG,IAAI/1C,EAAJ,CAAOo4C,IAAI,CAAC1C,QAAL,CAAc7yB,KAAd,CAAP,CAAX;AACA,QAAIkzB,IAAI,CAACj0C,GAAL,CAASu2C,GAAT,IAAgB,CAApB,EACE;AAEFtC,IAAAA,IAAI,CAAC3uC,KAAL,CAAW,CAAX;AACA,WAAO,KAAK6wC,cAAL,CAAoBlC,IAApB,CAAP;AACD;AACF,CAxBD;;AA0BA8B,EAAE,CAACn3C,SAAH,CAAa43C,YAAb,GAA4B,SAASA,YAAT,CAAsBn4C,GAAtB,EAA2Bo4C,SAA3B,EAAsC;AAChE,MAAIhjC,KAAK,GAAGpV,GAAG,CAAC2F,UAAJ,KAAmB,CAAnB,GAAuB,KAAKnG,CAAL,CAAO+G,SAAP,EAAnC;AACA,MAAI6O,KAAK,GAAG,CAAZ,EACEpV,GAAG,GAAGA,GAAG,CAAC2S,KAAJ,CAAUyC,KAAV,CAAN;AACF,MAAI,CAACgjC,SAAD,IAAcp4C,GAAG,CAAC2B,GAAJ,CAAQ,KAAKnC,CAAb,KAAmB,CAArC,EACE,OAAOQ,GAAG,CAAC2I,GAAJ,CAAQ,KAAKnJ,CAAb,CAAP,CADF,KAGE,OAAOQ,GAAP;AACH,CARD;;AAUA03C,EAAE,CAACn3C,SAAH,CAAag2C,IAAb,GAAoB,SAASA,IAAT,CAAcv2C,GAAd,EAAmBwd,GAAnB,EAAwBwd,GAAxB,EAA6B3a,OAA7B,EAAsC;AACxD,MAAI,OAAO2a,GAAP,KAAe,QAAnB,EAA6B;AAC3B3a,IAAAA,OAAO,GAAG2a,GAAV;AACAA,IAAAA,GAAG,GAAG,IAAN;AACD;;AACD,MAAI,CAAC3a,OAAL,EACEA,OAAO,GAAG,EAAV;AAEF7C,EAAAA,GAAG,GAAG,KAAKs6B,cAAL,CAAoBt6B,GAApB,EAAyBwd,GAAzB,CAAN;AACAh7B,EAAAA,GAAG,GAAG,KAAKm4C,YAAL,CAAkB,IAAIt4C,EAAJ,CAAOG,GAAP,EAAY,EAAZ,CAAlB,CAAN,CATwD,CAWxD;;AACA,MAAI0iB,KAAK,GAAG,KAAKljB,CAAL,CAAOmG,UAAP,EAAZ;AACA,MAAI0yC,IAAI,GAAG76B,GAAG,CAAC64B,UAAJ,GAAiBh0C,OAAjB,CAAyB,IAAzB,EAA+BqgB,KAA/B,CAAX,CAbwD,CAexD;;AACA,MAAIkM,KAAK,GAAG5uB,GAAG,CAACqC,OAAJ,CAAY,IAAZ,EAAkBqgB,KAAlB,CAAZ,CAhBwD,CAkBxD;;AACA,MAAIu1B,IAAI,GAAG,IAAIhD,QAAJ,CAAa;AACtB7e,IAAAA,IAAI,EAAE,KAAKA,IADW;AAEtBwe,IAAAA,OAAO,EAAEyD,IAFa;AAGtBzpB,IAAAA,KAAK,EAAEA,KAHe;AAItBmmB,IAAAA,IAAI,EAAE10B,OAAO,CAAC00B,IAJQ;AAKtBC,IAAAA,OAAO,EAAE30B,OAAO,CAAC20B,OAAR,IAAmB;AALN,GAAb,CAAX,CAnBwD,CA2BxD;;AACA,MAAIsD,GAAG,GAAG,KAAK94C,CAAL,CAAOmJ,GAAP,CAAW,IAAI9I,EAAJ,CAAO,CAAP,CAAX,CAAV;;AAEA,OAAK,IAAI04C,IAAI,GAAG,CAAhB,GAAqBA,IAAI,EAAzB,EAA6B;AAC3B,QAAIzvC,CAAC,GAAGuX,OAAO,CAACvX,CAAR,GACNuX,OAAO,CAACvX,CAAR,CAAUyvC,IAAV,CADM,GAEN,IAAI14C,EAAJ,CAAOo4C,IAAI,CAAC1C,QAAL,CAAc,KAAK/1C,CAAL,CAAOmG,UAAP,EAAd,CAAP,CAFF;AAGAmD,IAAAA,CAAC,GAAG,KAAKqvC,YAAL,CAAkBrvC,CAAlB,EAAqB,IAArB,CAAJ;AACA,QAAIA,CAAC,CAACuM,IAAF,CAAO,CAAP,KAAa,CAAb,IAAkBvM,CAAC,CAACnH,GAAF,CAAM22C,GAAN,KAAc,CAApC,EACE;AAEF,QAAIE,EAAE,GAAG,KAAK/jC,CAAL,CAAOhR,GAAP,CAAWqF,CAAX,CAAT;AACA,QAAI0vC,EAAE,CAACrI,UAAH,EAAJ,EACE;AAEF,QAAIsI,GAAG,GAAGD,EAAE,CAAC5L,IAAH,EAAV;AACA,QAAIxpC,CAAC,GAAGq1C,GAAG,CAAC3kC,IAAJ,CAAS,KAAKtU,CAAd,CAAR;AACA,QAAI4D,CAAC,CAACiS,IAAF,CAAO,CAAP,MAAc,CAAlB,EACE;AAEF,QAAI3F,CAAC,GAAG5G,CAAC,CAACwM,IAAF,CAAO,KAAK9V,CAAZ,EAAeiE,GAAf,CAAmBL,CAAC,CAACK,GAAF,CAAM+Z,GAAG,CAAC64B,UAAJ,EAAN,EAAwB7tC,IAAxB,CAA6BxI,GAA7B,CAAnB,CAAR;AACA0P,IAAAA,CAAC,GAAGA,CAAC,CAACoE,IAAF,CAAO,KAAKtU,CAAZ,CAAJ;AACA,QAAIkQ,CAAC,CAAC2F,IAAF,CAAO,CAAP,MAAc,CAAlB,EACE;AAEF,QAAIoN,aAAa,GAAG,CAAC+1B,EAAE,CAAC3L,IAAH,GAAU/3B,KAAV,KAAoB,CAApB,GAAwB,CAAzB,KACC2jC,GAAG,CAAC92C,GAAJ,CAAQyB,CAAR,MAAe,CAAf,GAAmB,CAAnB,GAAuB,CADxB,CAApB,CAtB2B,CAyB3B;;AACA,QAAIid,OAAO,CAACq4B,SAAR,IAAqBhpC,CAAC,CAAC/N,GAAF,CAAM,KAAKi2C,EAAX,IAAiB,CAA1C,EAA6C;AAC3CloC,MAAAA,CAAC,GAAG,KAAKlQ,CAAL,CAAOmJ,GAAP,CAAW+G,CAAX,CAAJ;AACA+S,MAAAA,aAAa,IAAI,CAAjB;AACD;;AAED,WAAO,IAAIF,SAAJ,CAAc;AAAEnf,MAAAA,CAAC,EAAEA,CAAL;AAAQsM,MAAAA,CAAC,EAAEA,CAAX;AAAc+S,MAAAA,aAAa,EAAEA;AAA7B,KAAd,CAAP;AACD;AACF,CA/DD;;AAiEAi1B,EAAE,CAACn3C,SAAH,CAAai2C,MAAb,GAAsB,SAASA,MAAT,CAAgBx2C,GAAhB,EAAqB24C,WAArB,EAAkCn7B,GAAlC,EAAuCwd,GAAvC,EAA4C;AAChEh7B,EAAAA,GAAG,GAAG,KAAKm4C,YAAL,CAAkB,IAAIt4C,EAAJ,CAAOG,GAAP,EAAY,EAAZ,CAAlB,CAAN;AACAwd,EAAAA,GAAG,GAAG,KAAKu6B,aAAL,CAAmBv6B,GAAnB,EAAwBwd,GAAxB,CAAN;AACA2d,EAAAA,WAAW,GAAG,IAAIp2B,SAAJ,CAAco2B,WAAd,EAA2B,KAA3B,CAAd,CAHgE,CAKhE;;AACA,MAAIv1C,CAAC,GAAGu1C,WAAW,CAACv1C,CAApB;AACA,MAAIsM,CAAC,GAAGipC,WAAW,CAACjpC,CAApB;AACA,MAAItM,CAAC,CAACiS,IAAF,CAAO,CAAP,IAAY,CAAZ,IAAiBjS,CAAC,CAACzB,GAAF,CAAM,KAAKnC,CAAX,KAAiB,CAAtC,EACE,OAAO,KAAP;AACF,MAAIkQ,CAAC,CAAC2F,IAAF,CAAO,CAAP,IAAY,CAAZ,IAAiB3F,CAAC,CAAC/N,GAAF,CAAM,KAAKnC,CAAX,KAAiB,CAAtC,EACE,OAAO,KAAP,CAX8D,CAahE;;AACA,MAAIo5C,IAAI,GAAGlpC,CAAC,CAAC4F,IAAF,CAAO,KAAK9V,CAAZ,CAAX;AACA,MAAI8pC,EAAE,GAAGsP,IAAI,CAACn1C,GAAL,CAASzD,GAAT,EAAc8T,IAAd,CAAmB,KAAKtU,CAAxB,CAAT;AACA,MAAI+pC,EAAE,GAAGqP,IAAI,CAACn1C,GAAL,CAASL,CAAT,EAAY0Q,IAAZ,CAAiB,KAAKtU,CAAtB,CAAT;AACA,MAAIwQ,CAAJ;;AAEA,MAAI,CAAC,KAAKu8B,KAAL,CAAW5B,aAAhB,EAA+B;AAC7B36B,IAAAA,CAAC,GAAG,KAAKyE,CAAL,CAAO+7B,MAAP,CAAclH,EAAd,EAAkB9rB,GAAG,CAAC44B,SAAJ,EAAlB,EAAmC7M,EAAnC,CAAJ;AACA,QAAIv5B,CAAC,CAACmgC,UAAF,EAAJ,EACE,OAAO,KAAP;AAEF,WAAOngC,CAAC,CAAC48B,IAAF,GAAS94B,IAAT,CAAc,KAAKtU,CAAnB,EAAsBmC,GAAtB,CAA0ByB,CAA1B,MAAiC,CAAxC;AACD,GAzB+D,CA2BhE;AACA;;;AAEA4M,EAAAA,CAAC,GAAG,KAAKyE,CAAL,CAAOg8B,OAAP,CAAenH,EAAf,EAAmB9rB,GAAG,CAAC44B,SAAJ,EAAnB,EAAoC7M,EAApC,CAAJ;AACA,MAAIv5B,CAAC,CAACmgC,UAAF,EAAJ,EACE,OAAO,KAAP,CAhC8D,CAkChE;AACA;AACA;;AACA,SAAOngC,CAAC,CAAC0jC,MAAF,CAAStwC,CAAT,CAAP;AACD,CAtCD;;AAwCAs0C,EAAE,CAACn3C,SAAH,CAAas4C,aAAb,GAA6B,UAAS74C,GAAT,EAAc24C,WAAd,EAA2Bl2C,CAA3B,EAA8Bu4B,GAA9B,EAAmC;AAC9Dyc,EAAAA,QAAQ,CAAC,CAAC,IAAIh1C,CAAL,MAAYA,CAAb,EAAgB,0CAAhB,CAAR;AACAk2C,EAAAA,WAAW,GAAG,IAAIp2B,SAAJ,CAAco2B,WAAd,EAA2B3d,GAA3B,CAAd;AAEA,MAAIx7B,CAAC,GAAG,KAAKA,CAAb;AACA,MAAI/B,CAAC,GAAG,IAAIoC,EAAJ,CAAOG,GAAP,CAAR;AACA,MAAIoD,CAAC,GAAGu1C,WAAW,CAACv1C,CAApB;AACA,MAAIsM,CAAC,GAAGipC,WAAW,CAACjpC,CAApB,CAP8D,CAS9D;;AACA,MAAIopC,MAAM,GAAGr2C,CAAC,GAAG,CAAjB;AACA,MAAIs2C,WAAW,GAAGt2C,CAAC,IAAI,CAAvB;AACA,MAAIW,CAAC,CAACzB,GAAF,CAAM,KAAK4qC,KAAL,CAAWv8B,CAAX,CAAa8D,IAAb,CAAkB,KAAKy4B,KAAL,CAAW/sC,CAA7B,CAAN,KAA0C,CAA1C,IAA+Cu5C,WAAnD,EACE,MAAM,IAAI94C,KAAJ,CAAU,sCAAV,CAAN,CAb4D,CAe9D;;AACA,MAAI84C,WAAJ,EACE31C,CAAC,GAAG,KAAKmpC,KAAL,CAAWE,UAAX,CAAsBrpC,CAAC,CAACsF,GAAF,CAAM,KAAK6jC,KAAL,CAAW/sC,CAAjB,CAAtB,EAA2Cs5C,MAA3C,CAAJ,CADF,KAGE11C,CAAC,GAAG,KAAKmpC,KAAL,CAAWE,UAAX,CAAsBrpC,CAAtB,EAAyB01C,MAAzB,CAAJ;AAEF,MAAIE,IAAI,GAAGL,WAAW,CAACv1C,CAAZ,CAAckS,IAAd,CAAmB9V,CAAnB,CAAX;AACA,MAAI2xC,EAAE,GAAG3xC,CAAC,CAACmJ,GAAF,CAAMlL,CAAN,EAASgG,GAAT,CAAau1C,IAAb,EAAmBllC,IAAnB,CAAwBtU,CAAxB,CAAT;AACA,MAAI4xC,EAAE,GAAG1hC,CAAC,CAACjM,GAAF,CAAMu1C,IAAN,EAAYllC,IAAZ,CAAiBtU,CAAjB,CAAT,CAvB8D,CAyB9D;AACA;;AACA,SAAO,KAAKiV,CAAL,CAAO+7B,MAAP,CAAcW,EAAd,EAAkB/tC,CAAlB,EAAqBguC,EAArB,CAAP;AACD,CA5BD;;AA8BAsG,EAAE,CAACn3C,SAAH,CAAa04C,mBAAb,GAAmC,UAASx7C,CAAT,EAAYk7C,WAAZ,EAAyBO,CAAzB,EAA4Ble,GAA5B,EAAiC;AAClE2d,EAAAA,WAAW,GAAG,IAAIp2B,SAAJ,CAAco2B,WAAd,EAA2B3d,GAA3B,CAAd;AACA,MAAI2d,WAAW,CAACl2B,aAAZ,KAA8B,IAAlC,EACE,OAAOk2B,WAAW,CAACl2B,aAAnB;;AAEF,OAAK,IAAIjgB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,QAAI22C,MAAJ;;AACA,QAAI;AACFA,MAAAA,MAAM,GAAG,KAAKN,aAAL,CAAmBp7C,CAAnB,EAAsBk7C,WAAtB,EAAmCn2C,CAAnC,CAAT;AACD,KAFD,CAEE,OAAO/E,CAAP,EAAU;AACV;AACD;;AAED,QAAI07C,MAAM,CAACjjC,EAAP,CAAUgjC,CAAV,CAAJ,EACE,OAAO12C,CAAP;AACH;;AACD,QAAM,IAAIvC,KAAJ,CAAU,sCAAV,CAAN;AACD,CAjBD;;AAmBA,IAAIm5C,UAAU,GAAGnR,sBAAsB,CAAC,UAAU5oC,MAAV,EAAkBC,OAAlB,EAA2B;AAEnE,MAAI+5C,QAAQ,GAAG/5C,OAAf;AAEA+5C,EAAAA,QAAQ,CAAC/+B,OAAT;AAAmB;AAAiB;AAAEA,IAAAA,OAAO,EAAE;AAAX,IAAqBA,OAAzD;AACA++B,EAAAA,QAAQ,CAACva,KAAT,GAAiB4J,SAAjB;;AACA2Q,EAAAA,QAAQ,CAAC7B,IAAT,GAAmD,YAAW;AAAE,UAAM,IAAIv3C,KAAJ,CAAU,aAAV,CAAN;AAAiC,GAAjG;;AACAo5C,EAAAA,QAAQ,CAAC9M,KAAT,GAAiBsH,OAAjB;AACAwF,EAAAA,QAAQ,CAACpF,MAAT,GAAkBD,QAAlB,CARmE,CAUnE;;AACAqF,EAAAA,QAAQ,CAAC1D,EAAT,GAAcA,EAAd;AACA0D,EAAAA,QAAQ,CAACC,KAAT,GAA6D,IAA7D;AACC,CAbsC,CAAvC;AAeA,IAAIC,IAAI,GAAGH,UAAU,CAACzD,EAAtB;AAGA,MAAM6D,SAAS,GAAG,mBAAlB;AAGA,MAAMC,QAAQ,GAAG,IAAI59B,MAAJ,CAAW29B,SAAX,CAAjB;AACA,IAAIE,MAAM,GAAG,IAAb;;AACA,SAASC,QAAT,GAAoB;AAChB,MAAI,CAACD,MAAL,EAAa;AACTA,IAAAA,MAAM,GAAG,IAAIH,IAAJ,CAAS,WAAT,CAAT;AACH;;AACD,SAAOG,MAAP;AACH;;AACD,MAAME,UAAN,CAAiB;AACbp5C,EAAAA,WAAW,CAACq5C,UAAD,EAAa;AACpB10B,IAAAA,cAAc,CAAC,IAAD,EAAO,OAAP,EAAgB,WAAhB,CAAd;AACAA,IAAAA,cAAc,CAAC,IAAD,EAAO,YAAP,EAAqBxD,OAAO,CAACk4B,UAAD,CAA5B,CAAd;AACA,UAAMhC,OAAO,GAAG8B,QAAQ,GAAG7B,cAAX,CAA0B13B,QAAQ,CAAC,KAAKy5B,UAAN,CAAlC,CAAhB;AACA10B,IAAAA,cAAc,CAAC,IAAD,EAAO,WAAP,EAAoB,OAAO0yB,OAAO,CAACzB,SAAR,CAAkB,KAAlB,EAAyB,KAAzB,CAA3B,CAAd;AACAjxB,IAAAA,cAAc,CAAC,IAAD,EAAO,qBAAP,EAA8B,OAAO0yB,OAAO,CAACzB,SAAR,CAAkB,IAAlB,EAAwB,KAAxB,CAArC,CAAd;AACAjxB,IAAAA,cAAc,CAAC,IAAD,EAAO,eAAP,EAAwB,IAAxB,CAAd;AACH;;AACD20B,EAAAA,SAAS,CAACr2B,KAAD,EAAQ;AACb,UAAMs2B,EAAE,GAAGJ,QAAQ,GAAG5B,aAAX,CAAyB33B,QAAQ,CAAC,KAAK45B,SAAN,CAAjC,CAAX;AACA,UAAM9K,EAAE,GAAGyK,QAAQ,GAAG5B,aAAX,CAAyB33B,QAAQ,CAACqD,KAAD,CAAjC,CAAX;AACA,WAAO,OAAOs2B,EAAE,CAAClE,GAAH,CAAOntC,GAAP,CAAWwmC,EAAE,CAAC2G,GAAd,EAAmBnJ,gBAAnB,CAAoC,KAApC,CAAd;AACH;;AACDuN,EAAAA,UAAU,CAAC5wB,MAAD,EAAS;AACf,UAAMwuB,OAAO,GAAG8B,QAAQ,GAAG7B,cAAX,CAA0B13B,QAAQ,CAAC,KAAKy5B,UAAN,CAAlC,CAAhB;AACA,UAAMK,WAAW,GAAG95B,QAAQ,CAACiJ,MAAD,CAA5B;;AACA,QAAI6wB,WAAW,CAACl5C,MAAZ,KAAuB,EAA3B,EAA+B;AAC3By4C,MAAAA,QAAQ,CAACj9B,kBAAT,CAA4B,mBAA5B,EAAiD,QAAjD,EAA2D6M,MAA3D;AACH;;AACD,UAAM9G,SAAS,GAAGs1B,OAAO,CAACtB,IAAR,CAAa2D,WAAb,EAA0B;AAAExB,MAAAA,SAAS,EAAE;AAAb,KAA1B,CAAlB;AACA,WAAOp2B,cAAc,CAAC;AAClBG,MAAAA,aAAa,EAAEF,SAAS,CAACE,aADP;AAElBrf,MAAAA,CAAC,EAAEif,UAAU,CAAC,OAAOE,SAAS,CAACnf,CAAV,CAAYpB,QAAZ,CAAqB,EAArB,CAAR,EAAkC,EAAlC,CAFK;AAGlB0N,MAAAA,CAAC,EAAE2S,UAAU,CAAC,OAAOE,SAAS,CAAC7S,CAAV,CAAY1N,QAAZ,CAAqB,EAArB,CAAR,EAAkC,EAAlC;AAHK,KAAD,CAArB;AAKH;;AACDm4C,EAAAA,mBAAmB,CAACC,QAAD,EAAW;AAC1B,UAAMvC,OAAO,GAAG8B,QAAQ,GAAG7B,cAAX,CAA0B13B,QAAQ,CAAC,KAAKy5B,UAAN,CAAlC,CAAhB;AACA,UAAMQ,YAAY,GAAGV,QAAQ,GAAG5B,aAAX,CAAyB33B,QAAQ,CAACk6B,gBAAgB,CAACF,QAAD,CAAjB,CAAjC,CAArB;AACA,WAAO/3B,UAAU,CAAC,OAAOw1B,OAAO,CAACvB,MAAR,CAAe+D,YAAY,CAACjE,SAAb,EAAf,EAAyCp0C,QAAzC,CAAkD,EAAlD,CAAR,EAA+D,EAA/D,CAAjB;AACH;;AACkB,SAAZu4C,YAAY,CAACt+B,KAAD,EAAQ;AACvB,WAAO,CAAC,EAAEA,KAAK,IAAIA,KAAK,CAACu+B,aAAjB,CAAR;AACH;;AAlCY;;AAoCjB,SAASC,gBAAT,CAA0BpxB,MAA1B,EAAkC9G,SAAlC,EAA6C;AACzC,QAAMm4B,GAAG,GAAGp4B,cAAc,CAACC,SAAD,CAA1B;AACA,QAAMo4B,EAAE,GAAG;AAAEv3C,IAAAA,CAAC,EAAEgd,QAAQ,CAACs6B,GAAG,CAACt3C,CAAL,CAAb;AAAsBsM,IAAAA,CAAC,EAAE0Q,QAAQ,CAACs6B,GAAG,CAAChrC,CAAL;AAAjC,GAAX;AACA,SAAO,OAAOiqC,QAAQ,GAAGd,aAAX,CAAyBz4B,QAAQ,CAACiJ,MAAD,CAAjC,EAA2CsxB,EAA3C,EAA+CD,GAAG,CAACj4B,aAAnD,EAAkEwK,MAAlE,CAAyE,KAAzE,EAAgF,KAAhF,CAAd;AACH;;AACD,SAASqtB,gBAAT,CAA0B98B,GAA1B,EAA+Bo9B,UAA/B,EAA2C;AACvC,QAAMl4B,KAAK,GAAGtC,QAAQ,CAAC5C,GAAD,CAAtB;;AACA,MAAIkF,KAAK,CAAC1hB,MAAN,KAAiB,EAArB,EAAyB;AACrB,UAAM65C,UAAU,GAAG,IAAIjB,UAAJ,CAAel3B,KAAf,CAAnB;;AACA,QAAIk4B,UAAJ,EAAgB;AACZ,aAAO,OAAOjB,QAAQ,GAAG7B,cAAX,CAA0Bp1B,KAA1B,EAAiC0zB,SAAjC,CAA2C,IAA3C,EAAiD,KAAjD,CAAd;AACH;;AACD,WAAOyE,UAAU,CAACb,SAAlB;AACH,GAND,MAOK,IAAIt3B,KAAK,CAAC1hB,MAAN,KAAiB,EAArB,EAAyB;AAC1B,QAAI45C,UAAJ,EAAgB;AACZ,aAAOj5B,OAAO,CAACe,KAAD,CAAd;AACH;;AACD,WAAO,OAAOi3B,QAAQ,GAAG5B,aAAX,CAAyBr1B,KAAzB,EAAgC0zB,SAAhC,CAA0C,KAA1C,EAAiD,KAAjD,CAAd;AACH,GALI,MAMA,IAAI1zB,KAAK,CAAC1hB,MAAN,KAAiB,EAArB,EAAyB;AAC1B,QAAI,CAAC45C,UAAL,EAAiB;AACb,aAAOj5B,OAAO,CAACe,KAAD,CAAd;AACH;;AACD,WAAO,OAAOi3B,QAAQ,GAAG5B,aAAX,CAAyBr1B,KAAzB,EAAgC0zB,SAAhC,CAA0C,IAA1C,EAAgD,KAAhD,CAAd;AACH;;AACD,SAAOqD,QAAQ,CAACj9B,kBAAT,CAA4B,+BAA5B,EAA6D,KAA7D,EAAoE,YAApE,CAAP;AACH;;AAGD,MAAMs+B,SAAS,GAAG,oBAAlB;AAGA,MAAMC,QAAQ,GAAG,IAAIl/B,MAAJ,CAAWi/B,SAAX,CAAjB;AACA,IAAIE,gBAAJ;;AACA,CAAC,UAAUA,gBAAV,EAA4B;AACzBA,EAAAA,gBAAgB,CAACA,gBAAgB,CAAC,QAAD,CAAhB,GAA6B,CAA9B,CAAhB,GAAmD,QAAnD;AACAA,EAAAA,gBAAgB,CAACA,gBAAgB,CAAC,SAAD,CAAhB,GAA8B,CAA/B,CAAhB,GAAoD,SAApD;AACAA,EAAAA,gBAAgB,CAACA,gBAAgB,CAAC,SAAD,CAAhB,GAA8B,CAA/B,CAAhB,GAAoD,SAApD;AACH,CAJD,EAIGA,gBAAgB,KAAKA,gBAAgB,GAAG,EAAxB,CAJnB,E,CAKA;;;AACA,SAASC,aAAT,CAAuBh/B,KAAvB,EAA8B;AAC1B,MAAIA,KAAK,KAAK,IAAd,EAAoB;AAChB,WAAO,IAAP;AACH;;AACD,SAAOwS,UAAU,CAACxS,KAAD,CAAjB;AACH;;AACD,SAASi/B,YAAT,CAAsBj/B,KAAtB,EAA6B;AACzB,MAAIA,KAAK,KAAK,IAAd,EAAoB;AAChB,WAAO6S,IAAP;AACH;;AACD,SAAO7L,SAAS,CAAC3D,IAAV,CAAerD,KAAf,CAAP;AACH;;AACD,SAASk/B,cAAT,CAAwB39B,GAAxB,EAA6B;AACzB,QAAMw8B,SAAS,GAAGM,gBAAgB,CAAC98B,GAAD,CAAlC;AACA,SAAOiR,UAAU,CAAC1M,YAAY,CAACyK,SAAS,CAACzK,YAAY,CAACi4B,SAAD,EAAY,CAAZ,CAAb,CAAV,EAAwC,EAAxC,CAAb,CAAjB;AACH;;AACD,SAASoB,cAAT,CAAwB/xB,MAAxB,EAAgC9G,SAAhC,EAA2C;AACvC,SAAO44B,cAAc,CAACV,gBAAgB,CAACr6B,QAAQ,CAACiJ,MAAD,CAAT,EAAmB9G,SAAnB,CAAjB,CAArB;AACH;;AACD,SAAS84B,YAAT,CAAsBp/B,KAAtB,EAA6B1d,IAA7B,EAAmC;AAC/B,QAAM+hB,MAAM,GAAGiB,UAAU,CAAC0B,SAAS,CAAC3D,IAAV,CAAerD,KAAf,EAAsByD,WAAtB,EAAD,CAAzB;;AACA,MAAIY,MAAM,CAACtf,MAAP,GAAgB,EAApB,EAAwB;AACpB+5C,IAAAA,QAAQ,CAACv+B,kBAAT,CAA4B,wBAAwBje,IAApD,EAA2D,iBAAiBA,IAA5E,EAAmF0d,KAAnF;AACH;;AACD,SAAOqE,MAAP;AACH;;AACD,SAASg7B,YAAT,CAAsBC,IAAtB,EAA4BC,WAA5B,EAAyC;AACrC,SAAO;AACH3tB,IAAAA,OAAO,EAAEY,UAAU,CAAC8sB,IAAD,CADhB;AAEHC,IAAAA,WAAW,EAAE,CAACA,WAAW,IAAI,EAAhB,EAAoBx6B,GAApB,CAAwB,CAACy6B,UAAD,EAAa14C,KAAb,KAAuB;AACxD,UAAI8e,aAAa,CAAC45B,UAAD,CAAb,KAA8B,EAAlC,EAAsC;AAClCV,QAAAA,QAAQ,CAACv+B,kBAAT,CAA4B,gCAA5B,EAA+D,cAAa++B,IAAK,IAAGx4C,KAAM,GAA1F,EAA8F04C,UAA9F;AACH;;AACD,aAAOA,UAAU,CAACl/B,WAAX,EAAP;AACH,KALY;AAFV,GAAP;AASH;;AACD,SAASm/B,aAAT,CAAuBz/B,KAAvB,EAA8B;AAC1B,MAAI3a,KAAK,CAACC,OAAN,CAAc0a,KAAd,CAAJ,EAA0B;AACtB,WAAOA,KAAK,CAAC+E,GAAN,CAAU,CAACM,GAAD,EAAMve,KAAN,KAAgB;AAC7B,UAAIzB,KAAK,CAACC,OAAN,CAAc+f,GAAd,CAAJ,EAAwB;AACpB,YAAIA,GAAG,CAACtgB,MAAJ,GAAa,CAAjB,EAAoB;AAChB+5C,UAAAA,QAAQ,CAACv+B,kBAAT,CAA4B,uDAA5B,EAAsF,SAAQzZ,KAAM,GAApG,EAAwGue,GAAxG;AACH;;AACD,eAAOg6B,YAAY,CAACh6B,GAAG,CAAC,CAAD,CAAJ,EAASA,GAAG,CAAC,CAAD,CAAZ,CAAnB;AACH;;AACD,aAAOg6B,YAAY,CAACh6B,GAAG,CAACuM,OAAL,EAAcvM,GAAG,CAACk6B,WAAlB,CAAnB;AACH,KARM,CAAP;AASH;;AACD,QAAMl7B,MAAM,GAAGxE,MAAM,CAACyB,IAAP,CAAYtB,KAAZ,EAAmB+E,GAAnB,CAAwBu6B,IAAD,IAAU;AAC5C,UAAMC,WAAW,GAAGv/B,KAAK,CAACs/B,IAAD,CAAL,CAAYr6B,MAAZ,CAAmB,CAACC,KAAD,EAAQs6B,UAAR,KAAuB;AAC1Dt6B,MAAAA,KAAK,CAACs6B,UAAD,CAAL,GAAoB,IAApB;AACA,aAAOt6B,KAAP;AACH,KAHmB,EAGjB,EAHiB,CAApB;AAIA,WAAOm6B,YAAY,CAACC,IAAD,EAAOz/B,MAAM,CAACyB,IAAP,CAAYi+B,WAAZ,EAAyB7lB,IAAzB,EAAP,CAAnB;AACH,GANc,CAAf;AAOArV,EAAAA,MAAM,CAACqV,IAAP,CAAY,CAAC1tB,CAAD,EAAIlC,CAAJ,KAAWkC,CAAC,CAAC4lB,OAAF,CAAU8tB,aAAV,CAAwB51C,CAAC,CAAC8nB,OAA1B,CAAvB;AACA,SAAOvN,MAAP;AACH;;AACD,SAASs7B,gBAAT,CAA0B3/B,KAA1B,EAAiC;AAC7B,SAAOy/B,aAAa,CAACz/B,KAAD,CAAb,CAAqB+E,GAArB,CAA0BM,GAAD,IAAS,CAACA,GAAG,CAACuM,OAAL,EAAcvM,GAAG,CAACk6B,WAAlB,CAAlC,CAAP;AACH;;AACD,SAASK,iBAAT,CAA2BltB,WAA3B,EAAwCpM,SAAxC,EAAmD;AAC/C;AACA;AACA;AACA,MAAIoM,WAAW,CAACiJ,QAAZ,IAAwB,IAA5B,EAAkC;AAC9B,UAAMA,QAAQ,GAAG3U,SAAS,CAAC3D,IAAV,CAAeqP,WAAW,CAACiJ,QAA3B,CAAjB;AACA,UAAMI,YAAY,GAAG/U,SAAS,CAAC3D,IAAV,CAAeqP,WAAW,CAACqJ,YAAZ,IAA4B,CAA3C,CAArB;;AACA,QAAI,CAACJ,QAAQ,CAAC1hB,EAAT,CAAY8hB,YAAZ,CAAL,EAAgC;AAC5B+iB,MAAAA,QAAQ,CAACv+B,kBAAT,CAA4B,4CAA5B,EAA0E,IAA1E,EAAgF;AAC5Eob,QAAAA,QAD4E;AAClEI,QAAAA;AADkE,OAAhF;AAGH;AACJ;;AACD,QAAMtD,MAAM,GAAG,CACX2mB,YAAY,CAAC1sB,WAAW,CAACoF,OAAZ,IAAuB,CAAxB,EAA2B,SAA3B,CADD,EAEXsnB,YAAY,CAAC1sB,WAAW,CAACC,KAAZ,IAAqB,CAAtB,EAAyB,OAAzB,CAFD,EAGXysB,YAAY,CAAC1sB,WAAW,CAACsJ,oBAAZ,IAAoC,CAArC,EAAwC,sBAAxC,CAHD,EAIXojB,YAAY,CAAC1sB,WAAW,CAACqJ,YAAZ,IAA4B,CAA7B,EAAgC,cAAhC,CAJD,EAKXqjB,YAAY,CAAC1sB,WAAW,CAAC0L,QAAZ,IAAwB,CAAzB,EAA4B,UAA5B,CALD,EAMT1L,WAAW,CAACuL,EAAZ,IAAkB,IAAnB,GAA2BzL,UAAU,CAACE,WAAW,CAACuL,EAAb,CAArC,GAAwD,IAN9C,EAOXmhB,YAAY,CAAC1sB,WAAW,CAAC1S,KAAZ,IAAqB,CAAtB,EAAyB,OAAzB,CAPD,EAQV0S,WAAW,CAAC7M,IAAZ,IAAoB,IARV,EASV85B,gBAAgB,CAACjtB,WAAW,CAACmtB,UAAZ,IAA0B,EAA3B,CATN,CAAf;;AAWA,MAAIv5B,SAAJ,EAAe;AACX,UAAMm4B,GAAG,GAAGp4B,cAAc,CAACC,SAAD,CAA1B;AACAmS,IAAAA,MAAM,CAACrZ,IAAP,CAAYggC,YAAY,CAACX,GAAG,CAACj4B,aAAL,EAAoB,eAApB,CAAxB;AACAiS,IAAAA,MAAM,CAACrZ,IAAP,CAAYkG,UAAU,CAACm5B,GAAG,CAACt3C,CAAL,CAAtB;AACAsxB,IAAAA,MAAM,CAACrZ,IAAP,CAAYkG,UAAU,CAACm5B,GAAG,CAAChrC,CAAL,CAAtB;AACH;;AACD,SAAOuS,SAAS,CAAC,CAAC,MAAD,EAASgL,MAAM,CAACyH,MAAD,CAAf,CAAD,CAAhB;AACH;;AACD,SAASqnB,iBAAT,CAA2BptB,WAA3B,EAAwCpM,SAAxC,EAAmD;AAC/C,QAAMmS,MAAM,GAAG,CACX2mB,YAAY,CAAC1sB,WAAW,CAACoF,OAAZ,IAAuB,CAAxB,EAA2B,SAA3B,CADD,EAEXsnB,YAAY,CAAC1sB,WAAW,CAACC,KAAZ,IAAqB,CAAtB,EAAyB,OAAzB,CAFD,EAGXysB,YAAY,CAAC1sB,WAAW,CAACiJ,QAAZ,IAAwB,CAAzB,EAA4B,UAA5B,CAHD,EAIXyjB,YAAY,CAAC1sB,WAAW,CAAC0L,QAAZ,IAAwB,CAAzB,EAA4B,UAA5B,CAJD,EAKT1L,WAAW,CAACuL,EAAZ,IAAkB,IAAnB,GAA2BzL,UAAU,CAACE,WAAW,CAACuL,EAAb,CAArC,GAAwD,IAL9C,EAMXmhB,YAAY,CAAC1sB,WAAW,CAAC1S,KAAZ,IAAqB,CAAtB,EAAyB,OAAzB,CAND,EAOV0S,WAAW,CAAC7M,IAAZ,IAAoB,IAPV,EAQV85B,gBAAgB,CAACjtB,WAAW,CAACmtB,UAAZ,IAA0B,EAA3B,CARN,CAAf;;AAUA,MAAIv5B,SAAJ,EAAe;AACX,UAAMm4B,GAAG,GAAGp4B,cAAc,CAACC,SAAD,CAA1B;AACAmS,IAAAA,MAAM,CAACrZ,IAAP,CAAYggC,YAAY,CAACX,GAAG,CAACj4B,aAAL,EAAoB,eAApB,CAAxB;AACAiS,IAAAA,MAAM,CAACrZ,IAAP,CAAYkG,UAAU,CAACm5B,GAAG,CAACt3C,CAAL,CAAtB;AACAsxB,IAAAA,MAAM,CAACrZ,IAAP,CAAYkG,UAAU,CAACm5B,GAAG,CAAChrC,CAAL,CAAtB;AACH;;AACD,SAAOuS,SAAS,CAAC,CAAC,MAAD,EAASgL,MAAM,CAACyH,MAAD,CAAf,CAAD,CAAhB;AACH;;AACD,SAASsnB,kBAAT,CAA4BviB,EAA5B,EAAgC/E,MAAhC,EAAwCunB,SAAxC,EAAmD;AAC/C,MAAI;AACA,UAAMC,KAAK,GAAGhB,YAAY,CAACxmB,MAAM,CAAC,CAAD,CAAP,CAAZ,CAAwBrvB,QAAxB,EAAd;;AACA,QAAI62C,KAAK,KAAK,CAAV,IAAeA,KAAK,KAAK,CAA7B,EAAgC;AAC5B,YAAM,IAAIj8C,KAAJ,CAAU,WAAV,CAAN;AACH;;AACDw5B,IAAAA,EAAE,CAACtZ,CAAH,GAAO+7B,KAAP;AACH,GAND,CAOA,OAAOrhC,KAAP,EAAc;AACVkgC,IAAAA,QAAQ,CAACv+B,kBAAT,CAA4B,mCAA5B,EAAiE,GAAjE,EAAsEkY,MAAM,CAAC,CAAD,CAA5E;AACH;;AACD+E,EAAAA,EAAE,CAACr2B,CAAH,GAAOif,UAAU,CAACqS,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAAjB;AACA+E,EAAAA,EAAE,CAAC/pB,CAAH,GAAO2S,UAAU,CAACqS,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAAjB;;AACA,MAAI;AACA,UAAMrL,MAAM,GAAGmD,SAAS,CAACyvB,SAAS,CAACxiB,EAAD,CAAV,CAAxB;AACAA,IAAAA,EAAE,CAACna,IAAH,GAAU87B,cAAc,CAAC/xB,MAAD,EAAS;AAAEjmB,MAAAA,CAAC,EAAEq2B,EAAE,CAACr2B,CAAR;AAAWsM,MAAAA,CAAC,EAAE+pB,EAAE,CAAC/pB,CAAjB;AAAoB+S,MAAAA,aAAa,EAAEgX,EAAE,CAACtZ;AAAtC,KAAT,CAAxB;AACH,GAHD,CAIA,OAAOtF,KAAP,EAAc;AACV4B,IAAAA,OAAO,CAACC,GAAR,CAAY7B,KAAZ;AACH;AACJ;;AACD,SAASshC,aAAT,CAAuBpvB,OAAvB,EAAgC;AAC5B,QAAM4B,WAAW,GAAGlB,MAAM,CAACV,OAAO,CAAClN,KAAR,CAAc,CAAd,CAAD,CAA1B;;AACA,MAAI8O,WAAW,CAAC3tB,MAAZ,KAAuB,CAAvB,IAA4B2tB,WAAW,CAAC3tB,MAAZ,KAAuB,EAAvD,EAA2D;AACvD+5C,IAAAA,QAAQ,CAACv+B,kBAAT,CAA4B,iDAA5B,EAA+E,SAA/E,EAA0FmF,OAAO,CAACoL,OAAD,CAAjG;AACH;;AACD,QAAMkL,oBAAoB,GAAGijB,YAAY,CAACvsB,WAAW,CAAC,CAAD,CAAZ,CAAzC;AACA,QAAMqJ,YAAY,GAAGkjB,YAAY,CAACvsB,WAAW,CAAC,CAAD,CAAZ,CAAjC;AACA,QAAM8K,EAAE,GAAG;AACPt7B,IAAAA,IAAI,EAAE,CADC;AAEP41B,IAAAA,OAAO,EAAEmnB,YAAY,CAACvsB,WAAW,CAAC,CAAD,CAAZ,CAAZ,CAA6BtpB,QAA7B,EAFF;AAGPupB,IAAAA,KAAK,EAAEssB,YAAY,CAACvsB,WAAW,CAAC,CAAD,CAAZ,CAAZ,CAA6BtpB,QAA7B,EAHA;AAIP4yB,IAAAA,oBAAoB,EAAEA,oBAJf;AAKPD,IAAAA,YAAY,EAAEA,YALP;AAMPJ,IAAAA,QAAQ,EAAE,IANH;AAOPyC,IAAAA,QAAQ,EAAE6gB,YAAY,CAACvsB,WAAW,CAAC,CAAD,CAAZ,CAPf;AAQPuL,IAAAA,EAAE,EAAE+gB,aAAa,CAACtsB,WAAW,CAAC,CAAD,CAAZ,CARV;AASP1S,IAAAA,KAAK,EAAEi/B,YAAY,CAACvsB,WAAW,CAAC,CAAD,CAAZ,CATZ;AAUP7M,IAAAA,IAAI,EAAE6M,WAAW,CAAC,CAAD,CAVV;AAWPmtB,IAAAA,UAAU,EAAEJ,aAAa,CAAC/sB,WAAW,CAAC,CAAD,CAAZ;AAXlB,GAAX,CAP4B,CAoB5B;;AACA,MAAIA,WAAW,CAAC3tB,MAAZ,KAAuB,CAA3B,EAA8B;AAC1B,WAAOy4B,EAAP;AACH;;AACDA,EAAAA,EAAE,CAACrD,IAAH,GAAU5J,SAAS,CAACO,OAAD,CAAnB;;AACAivB,EAAAA,kBAAkB,CAACviB,EAAD,EAAK9K,WAAW,CAAC9O,KAAZ,CAAkB,CAAlB,CAAL,EAA2Bg8B,iBAA3B,CAAlB;;AACA,SAAOpiB,EAAP;AACH;;AACD,SAAS2iB,aAAT,CAAuBrvB,OAAvB,EAAgC;AAC5B,QAAM4B,WAAW,GAAGlB,MAAM,CAACV,OAAO,CAAClN,KAAR,CAAc,CAAd,CAAD,CAA1B;;AACA,MAAI8O,WAAW,CAAC3tB,MAAZ,KAAuB,CAAvB,IAA4B2tB,WAAW,CAAC3tB,MAAZ,KAAuB,EAAvD,EAA2D;AACvD+5C,IAAAA,QAAQ,CAACv+B,kBAAT,CAA4B,iDAA5B,EAA+E,SAA/E,EAA0FmF,OAAO,CAACoL,OAAD,CAAjG;AACH;;AACD,QAAM0M,EAAE,GAAG;AACPt7B,IAAAA,IAAI,EAAE,CADC;AAEP41B,IAAAA,OAAO,EAAEmnB,YAAY,CAACvsB,WAAW,CAAC,CAAD,CAAZ,CAAZ,CAA6BtpB,QAA7B,EAFF;AAGPupB,IAAAA,KAAK,EAAEssB,YAAY,CAACvsB,WAAW,CAAC,CAAD,CAAZ,CAAZ,CAA6BtpB,QAA7B,EAHA;AAIPuyB,IAAAA,QAAQ,EAAEsjB,YAAY,CAACvsB,WAAW,CAAC,CAAD,CAAZ,CAJf;AAKP0L,IAAAA,QAAQ,EAAE6gB,YAAY,CAACvsB,WAAW,CAAC,CAAD,CAAZ,CALf;AAMPuL,IAAAA,EAAE,EAAE+gB,aAAa,CAACtsB,WAAW,CAAC,CAAD,CAAZ,CANV;AAOP1S,IAAAA,KAAK,EAAEi/B,YAAY,CAACvsB,WAAW,CAAC,CAAD,CAAZ,CAPZ;AAQP7M,IAAAA,IAAI,EAAE6M,WAAW,CAAC,CAAD,CARV;AASPmtB,IAAAA,UAAU,EAAEJ,aAAa,CAAC/sB,WAAW,CAAC,CAAD,CAAZ;AATlB,GAAX,CAL4B,CAgB5B;;AACA,MAAIA,WAAW,CAAC3tB,MAAZ,KAAuB,CAA3B,EAA8B;AAC1B,WAAOy4B,EAAP;AACH;;AACDA,EAAAA,EAAE,CAACrD,IAAH,GAAU5J,SAAS,CAACO,OAAD,CAAnB;;AACAivB,EAAAA,kBAAkB,CAACviB,EAAD,EAAK9K,WAAW,CAAC9O,KAAZ,CAAkB,CAAlB,CAAL,EAA2Bk8B,iBAA3B,CAAlB;;AACA,SAAOtiB,EAAP;AACH,C,CACD;;;AACA,SAAS4iB,MAAT,CAAgBC,cAAhB,EAAgC;AAC5B,QAAM3tB,WAAW,GAAGlB,MAAM,CAAC6uB,cAAD,CAA1B;;AACA,MAAI3tB,WAAW,CAAC3tB,MAAZ,KAAuB,CAAvB,IAA4B2tB,WAAW,CAAC3tB,MAAZ,KAAuB,CAAvD,EAA0D;AACtD+5C,IAAAA,QAAQ,CAACv+B,kBAAT,CAA4B,yBAA5B,EAAuD,gBAAvD,EAAyE8/B,cAAzE;AACH;;AACD,QAAM7iB,EAAE,GAAG;AACP7K,IAAAA,KAAK,EAAEssB,YAAY,CAACvsB,WAAW,CAAC,CAAD,CAAZ,CAAZ,CAA6BtpB,QAA7B,EADA;AAEPuyB,IAAAA,QAAQ,EAAEsjB,YAAY,CAACvsB,WAAW,CAAC,CAAD,CAAZ,CAFf;AAGP0L,IAAAA,QAAQ,EAAE6gB,YAAY,CAACvsB,WAAW,CAAC,CAAD,CAAZ,CAHf;AAIPuL,IAAAA,EAAE,EAAE+gB,aAAa,CAACtsB,WAAW,CAAC,CAAD,CAAZ,CAJV;AAKP1S,IAAAA,KAAK,EAAEi/B,YAAY,CAACvsB,WAAW,CAAC,CAAD,CAAZ,CALZ;AAMP7M,IAAAA,IAAI,EAAE6M,WAAW,CAAC,CAAD,CANV;AAOPoF,IAAAA,OAAO,EAAE;AAPF,GAAX,CAL4B,CAc5B;;AACA,MAAIpF,WAAW,CAAC3tB,MAAZ,KAAuB,CAA3B,EAA8B;AAC1B,WAAOy4B,EAAP;AACH;;AACD,MAAI;AACAA,IAAAA,EAAE,CAACtZ,CAAH,GAAO8C,SAAS,CAAC3D,IAAV,CAAeqP,WAAW,CAAC,CAAD,CAA1B,EAA+BtpB,QAA/B,EAAP;AACH,GAFD,CAGA,OAAOwV,KAAP,EAAc;AACV4B,IAAAA,OAAO,CAACC,GAAR,CAAY7B,KAAZ;AACA,WAAO4e,EAAP;AACH;;AACDA,EAAAA,EAAE,CAACr2B,CAAH,GAAOif,UAAU,CAACsM,WAAW,CAAC,CAAD,CAAZ,EAAiB,EAAjB,CAAjB;AACA8K,EAAAA,EAAE,CAAC/pB,CAAH,GAAO2S,UAAU,CAACsM,WAAW,CAAC,CAAD,CAAZ,EAAiB,EAAjB,CAAjB;;AACA,MAAI1L,SAAS,CAAC3D,IAAV,CAAema,EAAE,CAACr2B,CAAlB,EAAqB8B,MAArB,MAAiC+d,SAAS,CAAC3D,IAAV,CAAema,EAAE,CAAC/pB,CAAlB,EAAqBxK,MAArB,EAArC,EAAoE;AAChE;AACAu0B,IAAAA,EAAE,CAAC1F,OAAH,GAAa0F,EAAE,CAACtZ,CAAhB;AACAsZ,IAAAA,EAAE,CAACtZ,CAAH,GAAO,CAAP;AACH,GAJD,MAKK;AACD;AACAsZ,IAAAA,EAAE,CAAC1F,OAAH,GAAazxB,IAAI,CAACsf,KAAL,CAAW,CAAC6X,EAAE,CAACtZ,CAAH,GAAO,EAAR,IAAc,CAAzB,CAAb;;AACA,QAAIsZ,EAAE,CAAC1F,OAAH,GAAa,CAAjB,EAAoB;AAChB0F,MAAAA,EAAE,CAAC1F,OAAH,GAAa,CAAb;AACH;;AACD,QAAItR,aAAa,GAAGgX,EAAE,CAACtZ,CAAH,GAAO,EAA3B;AACA,UAAMo8B,GAAG,GAAG5tB,WAAW,CAAC9O,KAAZ,CAAkB,CAAlB,EAAqB,CAArB,CAAZ;;AACA,QAAI4Z,EAAE,CAAC1F,OAAH,KAAe,CAAnB,EAAsB;AAClBwoB,MAAAA,GAAG,CAAClhC,IAAJ,CAASsG,OAAO,CAAC8X,EAAE,CAAC1F,OAAJ,CAAhB;AACAwoB,MAAAA,GAAG,CAAClhC,IAAJ,CAAS,IAAT;AACAkhC,MAAAA,GAAG,CAAClhC,IAAJ,CAAS,IAAT;AACAoH,MAAAA,aAAa,IAAIgX,EAAE,CAAC1F,OAAH,GAAa,CAAb,GAAiB,CAAlC;AACH;;AACD,UAAM1K,MAAM,GAAGmD,SAAS,CAACS,MAAM,CAACsvB,GAAD,CAAP,CAAxB;;AACA,QAAI;AACA9iB,MAAAA,EAAE,CAACna,IAAH,GAAU87B,cAAc,CAAC/xB,MAAD,EAAS;AAAEjmB,QAAAA,CAAC,EAAEue,OAAO,CAAC8X,EAAE,CAACr2B,CAAJ,CAAZ;AAAoBsM,QAAAA,CAAC,EAAEiS,OAAO,CAAC8X,EAAE,CAAC/pB,CAAJ,CAA9B;AAAsC+S,QAAAA,aAAa,EAAEA;AAArD,OAAT,CAAxB;AACH,KAFD,CAGA,OAAO5H,KAAP,EAAc;AACV4B,MAAAA,OAAO,CAACC,GAAR,CAAY7B,KAAZ;AACH;;AACD4e,IAAAA,EAAE,CAACrD,IAAH,GAAU5J,SAAS,CAAC8vB,cAAD,CAAnB;AACH;;AACD7iB,EAAAA,EAAE,CAACt7B,IAAH,GAAU,IAAV;AACA,SAAOs7B,EAAP;AACH;;AACD,SAASwW,KAAT,CAAeqM,cAAf,EAA+B;AAC3B,QAAMvvB,OAAO,GAAG3M,QAAQ,CAACk8B,cAAD,CAAxB,CAD2B,CAE3B;;AACA,MAAIvvB,OAAO,CAAC,CAAD,CAAP,GAAa,IAAjB,EAAuB;AACnB,WAAOsvB,MAAM,CAACtvB,OAAD,CAAb;AACH,GAL0B,CAM3B;;;AACA,UAAQA,OAAO,CAAC,CAAD,CAAf;AACI,SAAK,CAAL;AACI,aAAOqvB,aAAa,CAACrvB,OAAD,CAApB;;AACJ,SAAK,CAAL;AACI,aAAOovB,aAAa,CAACpvB,OAAD,CAApB;AAJR;;AAMA,SAAOguB,QAAQ,CAACn9B,UAAT,CAAqB,iCAAgCmP,OAAO,CAAC,CAAD,CAAI,EAAhE,EAAmElR,MAAM,CAACuB,MAAP,CAAcc,qBAAjF,EAAwG;AAC3GC,IAAAA,SAAS,EAAE,kBADgG;AAE3Gq+B,IAAAA,eAAe,EAAEzvB,OAAO,CAAC,CAAD;AAFmF,GAAxG,CAAP;AAIH;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM0vB,KAAN,CAAY;AACRj8C,EAAAA,WAAW,CAACk8C,QAAD,EAAW;AAClBv3B,IAAAA,cAAc,CAAC,IAAD,EAAO,UAAP,EAAmBu3B,QAAnB,CAAd;AACAv3B,IAAAA,cAAc,CAAC,IAAD,EAAO,MAAP,EAAeu3B,QAAQ,CAAC17C,MAAxB,CAAd;AACAmkB,IAAAA,cAAc,CAAC,IAAD,EAAO,cAAP,EAAuB,EAAvB,CAAd;AACAA,IAAAA,cAAc,CAAC,IAAD,EAAO,SAAP,EAAkBu3B,QAAQ,CAACC,MAAT,CAAgB,CAAhB,CAAlB,CAAd,CAJkB,CAKlB;;AACA,SAAK,IAAIn6C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGk6C,QAAQ,CAAC17C,MAA7B,EAAqCwB,CAAC,EAAtC,EAA0C;AACtC,WAAKo6C,YAAL,CAAkBF,QAAQ,CAACC,MAAT,CAAgBn6C,CAAhB,CAAlB,IAAwCA,CAAxC;AACH;AACJ;;AACDyqB,EAAAA,MAAM,CAAChR,KAAD,EAAQ;AACV,QAAI4gC,MAAM,GAAGz8B,QAAQ,CAACnE,KAAD,CAArB;;AACA,QAAI4gC,MAAM,CAAC77C,MAAP,KAAkB,CAAtB,EAAyB;AACrB,aAAO,EAAP;AACH;;AACD,QAAI87C,MAAM,GAAG,CAAC,CAAD,CAAb;;AACA,SAAK,IAAIt6C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGq6C,MAAM,CAAC77C,MAA3B,EAAmC,EAAEwB,CAArC,EAAwC;AACpC,UAAIuC,KAAK,GAAG83C,MAAM,CAACr6C,CAAD,CAAlB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGq6C,MAAM,CAAC97C,MAA3B,EAAmC,EAAEyB,CAArC,EAAwC;AACpCsC,QAAAA,KAAK,IAAI+3C,MAAM,CAACr6C,CAAD,CAAN,IAAa,CAAtB;AACAq6C,QAAAA,MAAM,CAACr6C,CAAD,CAAN,GAAYsC,KAAK,GAAG,KAAKpE,IAAzB;AACAoE,QAAAA,KAAK,GAAIA,KAAK,GAAG,KAAKpE,IAAd,GAAsB,CAA9B;AACH;;AACD,aAAOoE,KAAK,GAAG,CAAf,EAAkB;AACd+3C,QAAAA,MAAM,CAACzhC,IAAP,CAAYtW,KAAK,GAAG,KAAKpE,IAAzB;AACAoE,QAAAA,KAAK,GAAIA,KAAK,GAAG,KAAKpE,IAAd,GAAsB,CAA9B;AACH;AACJ;;AACD,QAAImC,MAAM,GAAG,EAAb,CAlBU,CAmBV;;AACA,SAAK,IAAIgG,CAAC,GAAG,CAAb,EAAgB+zC,MAAM,CAAC/zC,CAAD,CAAN,KAAc,CAAd,IAAmBA,CAAC,GAAG+zC,MAAM,CAAC77C,MAAP,GAAgB,CAAvD,EAA0D,EAAE8H,CAA5D,EAA+D;AAC3DhG,MAAAA,MAAM,IAAI,KAAKi6C,OAAf;AACH,KAtBS,CAuBV;;;AACA,SAAK,IAAI/2C,CAAC,GAAG82C,MAAM,CAAC97C,MAAP,GAAgB,CAA7B,EAAgCgF,CAAC,IAAI,CAArC,EAAwC,EAAEA,CAA1C,EAA6C;AACzClD,MAAAA,MAAM,IAAI,KAAK45C,QAAL,CAAcI,MAAM,CAAC92C,CAAD,CAApB,CAAV;AACH;;AACD,WAAOlD,MAAP;AACH;;AACD2qB,EAAAA,MAAM,CAACxR,KAAD,EAAQ;AACV,QAAI,OAAQA,KAAR,KAAmB,QAAvB,EAAiC;AAC7B,YAAM,IAAI+gC,SAAJ,CAAc,iBAAd,CAAN;AACH;;AACD,QAAIt6B,KAAK,GAAG,EAAZ;;AACA,QAAIzG,KAAK,CAACjb,MAAN,KAAiB,CAArB,EAAwB;AACpB,aAAO,IAAI+e,UAAJ,CAAe2C,KAAf,CAAP;AACH;;AACDA,IAAAA,KAAK,CAACrH,IAAN,CAAW,CAAX;;AACA,SAAK,IAAI7Y,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyZ,KAAK,CAACjb,MAA1B,EAAkCwB,CAAC,EAAnC,EAAuC;AACnC,UAAIy6C,IAAI,GAAG,KAAKL,YAAL,CAAkB3gC,KAAK,CAACzZ,CAAD,CAAvB,CAAX;;AACA,UAAIy6C,IAAI,KAAKzkC,SAAb,EAAwB;AACpB,cAAM,IAAIvY,KAAJ,CAAU,aAAa,KAAKU,IAAlB,GAAyB,YAAnC,CAAN;AACH;;AACD,UAAIoE,KAAK,GAAGk4C,IAAZ;;AACA,WAAK,IAAIx6C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGigB,KAAK,CAAC1hB,MAA1B,EAAkC,EAAEyB,CAApC,EAAuC;AACnCsC,QAAAA,KAAK,IAAI2d,KAAK,CAACjgB,CAAD,CAAL,GAAW,KAAK9B,IAAzB;AACA+hB,QAAAA,KAAK,CAACjgB,CAAD,CAAL,GAAWsC,KAAK,GAAG,IAAnB;AACAA,QAAAA,KAAK,KAAK,CAAV;AACH;;AACD,aAAOA,KAAK,GAAG,CAAf,EAAkB;AACd2d,QAAAA,KAAK,CAACrH,IAAN,CAAWtW,KAAK,GAAG,IAAnB;AACAA,QAAAA,KAAK,KAAK,CAAV;AACH;AACJ,KAxBS,CAyBV;;;AACA,SAAK,IAAI+D,CAAC,GAAG,CAAb,EAAgBmT,KAAK,CAACnT,CAAD,CAAL,KAAa,KAAKi0C,OAAlB,IAA6Bj0C,CAAC,GAAGmT,KAAK,CAACjb,MAAN,GAAe,CAAhE,EAAmE,EAAE8H,CAArE,EAAwE;AACpE4Z,MAAAA,KAAK,CAACrH,IAAN,CAAW,CAAX;AACH;;AACD,WAAO+E,QAAQ,CAAC,IAAIL,UAAJ,CAAe2C,KAAK,CAACw6B,OAAN,EAAf,CAAD,CAAf;AACH;;AAtEO;;AAwEZ,MAAMC,MAAM,GAAG,IAAIV,KAAJ,CAAU,kCAAV,CAAf;AACA,MAAMW,MAAM,GAAG,IAAIX,KAAJ,CAAU,4DAAV,CAAf,C,CACA;AACA;;AAGA,MAAMY,SAAS,GAAG,YAAlB;AAGA,MAAMC,QAAQ,GAAG,IAAIzhC,MAAJ,CAAWwhC,SAAX,CAAjB;;AACA,SAASE,QAAT,CAAkBz7B,IAAlB,EAAwB;AACpB,SAAO,OAAQkmB,MAAM,CAAC5B,MAAP,GAAgB1e,MAAhB,CAAuBtH,QAAQ,CAAC0B,IAAD,CAA/B,EAAuCuH,MAAvC,CAA8C,KAA9C,CAAf;AACH;;AAGD,MAAMm0B,SAAS,GAAG,gBAAlB;AAGA,MAAMC,QAAQ,GAAG,IAAI5hC,MAAJ,CAAW2hC,SAAX,CAAjB;;AACA,SAASE,eAAT,CAAyBzhC,KAAzB,EAAgC;AAC5B,SAAQA,KAAK,IAAI,OAAQA,KAAK,CAAC0hC,SAAd,KAA6B,UAA9C;AACH;;AACD,SAASC,kBAAT,CAA4B5jB,OAA5B,EAAqC;AACjC,QAAMjJ,IAAI,GAAG,UAAU8sB,SAAV,EAAqBx9B,OAArB,EAA8B;AACvC,QAAIA,OAAO,IAAI,IAAf,EAAqB;AACjBA,MAAAA,OAAO,GAAG,EAAV;AACH;;AACD,UAAMy9B,YAAY,GAAG,EAArB;;AACA,QAAID,SAAS,CAACE,cAAd,EAA8B;AAC1B,UAAI;AACAD,QAAAA,YAAY,CAACziC,IAAb,CAAkB,IAAIwiC,SAAS,CAACE,cAAd,CAA6B/jB,OAA7B,EAAsC3Z,OAAO,CAAC29B,MAA9C,CAAlB;AACH,OAFD,CAGA,OAAOnjC,KAAP,EAAc,CAAG;AACpB;;AACD,QAAIgjC,SAAS,CAACI,iBAAd,EAAiC;AAC7B,UAAI;AACAH,QAAAA,YAAY,CAACziC,IAAb,CAAkB,IAAIwiC,SAAS,CAACI,iBAAd,CAAgCjkB,OAAhC,EAAyC3Z,OAAO,CAAC69B,SAAjD,CAAlB;AACH,OAFD,CAGA,OAAOrjC,KAAP,EAAc,CAAG;AACpB;;AACD,QAAIgjC,SAAS,CAACM,eAAd,EAA+B;AAC3B,UAAI;AACAL,QAAAA,YAAY,CAACziC,IAAb,CAAkB,IAAIwiC,SAAS,CAACM,eAAd,CAA8BnkB,OAA9B,EAAuC3Z,OAAO,CAAC+9B,OAA/C,CAAlB;AACH,OAFD,CAGA,OAAOvjC,KAAP,EAAc,CAAG;AACpB;;AACD,QAAIgjC,SAAS,CAACQ,cAAd,EAA8B;AAC1B;AACA;AACA;AACA;AACA,YAAMC,IAAI,GAAG,CAAC,QAAD,EAAW,SAAX,EAAsB,SAAtB,CAAb;;AACA,UAAI;AACA,cAAMhlB,QAAQ,GAAG,IAAIukB,SAAS,CAACQ,cAAd,CAA6BrkB,OAA7B,CAAjB;;AACA,YAAIV,QAAQ,CAACU,OAAT,IAAoBskB,IAAI,CAAChtB,OAAL,CAAagI,QAAQ,CAACU,OAAT,CAAiBz7B,IAA9B,MAAwC,CAAC,CAAjE,EAAoE;AAChEu/C,UAAAA,YAAY,CAACziC,IAAb,CAAkBie,QAAlB;AACH;AACJ,OALD,CAMA,OAAOze,KAAP,EAAc,CAAG;AACpB;;AACD,QAAIgjC,SAAS,CAACU,kBAAd,EAAkC;AAC9B,UAAI;AACAT,QAAAA,YAAY,CAACziC,IAAb,CAAkB,IAAIwiC,SAAS,CAACU,kBAAd,CAAiCvkB,OAAjC,CAAlB;AACH,OAFD,CAGA,OAAOnf,KAAP,EAAc,CAAG;AACpB;;AACD,QAAIijC,YAAY,CAAC98C,MAAb,KAAwB,CAA5B,EAA+B;AAC3B,aAAO,IAAP;AACH;;AACD,QAAI68C,SAAS,CAACW,gBAAd,EAAgC;AAC5B,UAAIC,MAAM,GAAG,CAAb;;AACA,UAAIp+B,OAAO,CAACo+B,MAAR,IAAkB,IAAtB,EAA4B;AACxBA,QAAAA,MAAM,GAAGp+B,OAAO,CAACo+B,MAAjB;AACH,OAFD,MAGK,IAAIzkB,OAAO,KAAK,WAAhB,EAA6B;AAC9BykB,QAAAA,MAAM,GAAG,CAAT;AACH;;AACD,aAAO,IAAIZ,SAAS,CAACW,gBAAd,CAA+BV,YAA/B,EAA6CW,MAA7C,CAAP;AACH;;AACD,WAAOX,YAAY,CAAC,CAAD,CAAnB;AACH,GAzDD;;AA0DA/sB,EAAAA,IAAI,CAAC4sB,SAAL,GAAiB,UAAU3jB,OAAV,EAAmB;AAChC,WAAO4jB,kBAAkB,CAAC5jB,OAAD,CAAzB;AACH,GAFD;;AAGA,SAAOjJ,IAAP;AACH;;AACD,SAAS2tB,kBAAT,CAA4BC,GAA5B,EAAiC3kB,OAAjC,EAA0C;AACtC,QAAMjJ,IAAI,GAAG,UAAU8sB,SAAV,EAAqBx9B,OAArB,EAA8B;AACvC,QAAIw9B,SAAS,CAACe,eAAd,EAA+B;AAC3B,aAAO,IAAIf,SAAS,CAACe,eAAd,CAA8BD,GAA9B,EAAmC3kB,OAAnC,CAAP;AACH;;AACD,WAAO,IAAP;AACH,GALD;;AAMAjJ,EAAAA,IAAI,CAAC4sB,SAAL,GAAiB,UAAU3jB,OAAV,EAAmB;AAChC,WAAO0kB,kBAAkB,CAACC,GAAD,EAAM3kB,OAAN,CAAzB;AACH,GAFD;;AAGA,SAAOjJ,IAAP;AACH;;AACD,MAAM8tB,SAAS,GAAG;AACd9qB,EAAAA,OAAO,EAAE,CADK;AAEd+qB,EAAAA,UAAU,EAAE,4CAFE;AAGdvgD,EAAAA,IAAI,EAAE,WAHQ;AAIdwgD,EAAAA,gBAAgB,EAAEnB,kBAAkB,CAAC,WAAD;AAJtB,CAAlB;AAMA,MAAMoB,OAAO,GAAG;AACZjrB,EAAAA,OAAO,EAAE,CADG;AAEZ+qB,EAAAA,UAAU,EAAE,4CAFA;AAGZvgD,EAAAA,IAAI,EAAE,SAHM;AAIZwgD,EAAAA,gBAAgB,EAAEnB,kBAAkB,CAAC,SAAD;AAJxB,CAAhB;AAMA,MAAMqB,aAAa,GAAG;AAClBlrB,EAAAA,OAAO,EAAE,EADS;AAElBx1B,EAAAA,IAAI,EAAE,eAFY;AAGlBwgD,EAAAA,gBAAgB,EAAEL,kBAAkB,CAAC,qCAAD,EAAwC,eAAxC;AAHlB,CAAtB;AAKA,MAAMQ,QAAQ,GAAG;AACbC,EAAAA,WAAW,EAAE;AAAEprB,IAAAA,OAAO,EAAE,CAAX;AAAcx1B,IAAAA,IAAI,EAAE;AAApB,GADA;AAEbsgD,EAAAA,SAAS,EAAEA,SAFE;AAGbO,EAAAA,OAAO,EAAEP,SAHI;AAIbQ,EAAAA,MAAM,EAAE;AAAEtrB,IAAAA,OAAO,EAAE,CAAX;AAAcx1B,IAAAA,IAAI,EAAE;AAApB,GAJK;AAKbygD,EAAAA,OAAO,EAAEA,OALI;AAMbM,EAAAA,OAAO,EAAEN,OANI;AAObO,EAAAA,OAAO,EAAE;AACLxrB,IAAAA,OAAO,EAAE,CADJ;AAEL+qB,IAAAA,UAAU,EAAE,4CAFP;AAGLvgD,IAAAA,IAAI,EAAE,SAHD;AAILwgD,IAAAA,gBAAgB,EAAEnB,kBAAkB,CAAC,SAAD;AAJ/B,GAPI;AAab4B,EAAAA,KAAK,EAAE;AACHzrB,IAAAA,OAAO,EAAE,EADN;AAEHx1B,IAAAA,IAAI,EAAE,OAFH;AAGHwgD,IAAAA,gBAAgB,EAAEnB,kBAAkB,CAAC,OAAD;AAHjC,GAbM;AAkBb6B,EAAAA,MAAM,EAAE;AACJ1rB,IAAAA,OAAO,EAAE,CADL;AAEJ+qB,IAAAA,UAAU,EAAE,4CAFR;AAGJvgD,IAAAA,IAAI,EAAE,QAHF;AAIJwgD,IAAAA,gBAAgB,EAAEnB,kBAAkB,CAAC,QAAD;AAJhC,GAlBK;AAwBb;AACA8B,EAAAA,OAAO,EAAE;AACL3rB,IAAAA,OAAO,EAAE,EADJ;AAELx1B,IAAAA,IAAI,EAAE,SAFD;AAGLwgD,IAAAA,gBAAgB,EAAEL,kBAAkB,CAAC,mCAAD,EAAsC,SAAtC;AAH/B,GAzBI;AA8BbiB,EAAAA,aAAa,EAAE;AAAE5rB,IAAAA,OAAO,EAAE,EAAX;AAAex1B,IAAAA,IAAI,EAAE;AAArB,GA9BF;AA+Bb0gD,EAAAA,aAAa,EAAEA,aA/BF;AAgCbW,EAAAA,cAAc,EAAEX,aAhCH;AAiCbY,EAAAA,YAAY,EAAE;AACV9rB,IAAAA,OAAO,EAAE,CADC;AAEVx1B,IAAAA,IAAI,EAAE,cAFI;AAGVwgD,IAAAA,gBAAgB,EAAEL,kBAAkB,CAAC,qCAAD,EAAwC,cAAxC;AAH1B,GAjCD;AAsCboB,EAAAA,IAAI,EAAE;AAAE/rB,IAAAA,OAAO,EAAE,GAAX;AAAgBx1B,IAAAA,IAAI,EAAE;AAAtB,GAtCO;AAuCbwhD,EAAAA,KAAK,EAAE;AAAEhsB,IAAAA,OAAO,EAAE,GAAX;AAAgBx1B,IAAAA,IAAI,EAAE;AAAtB,GAvCM;AAwCbyhD,EAAAA,QAAQ,EAAE;AAAEjsB,IAAAA,OAAO,EAAE,KAAX;AAAkBx1B,IAAAA,IAAI,EAAE;AAAxB,GAxCG;AAyCb0hD,EAAAA,GAAG,EAAE;AAAElsB,IAAAA,OAAO,EAAE,EAAX;AAAex1B,IAAAA,IAAI,EAAE;AAArB,GAzCQ;AA0Cb2hD,EAAAA,IAAI,EAAE;AAAEnsB,IAAAA,OAAO,EAAE,EAAX;AAAex1B,IAAAA,IAAI,EAAE;AAArB;AA1CO,CAAjB;AA4CA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAS07B,UAAT,CAAoBD,OAApB,EAA6B;AACzB;AACA,MAAIA,OAAO,IAAI,IAAf,EAAqB;AACjB,WAAO,IAAP;AACH;;AACD,MAAI,OAAQA,OAAR,KAAqB,QAAzB,EAAmC;AAC/B,SAAK,MAAMz7B,IAAX,IAAmB2gD,QAAnB,EAA6B;AACzB,YAAMiB,QAAQ,GAAGjB,QAAQ,CAAC3gD,IAAD,CAAzB;;AACA,UAAI4hD,QAAQ,CAACpsB,OAAT,KAAqBiG,OAAzB,EAAkC;AAC9B,eAAO;AACHz7B,UAAAA,IAAI,EAAE4hD,QAAQ,CAAC5hD,IADZ;AAEHw1B,UAAAA,OAAO,EAAEosB,QAAQ,CAACpsB,OAFf;AAGH+qB,UAAAA,UAAU,EAAGqB,QAAQ,CAACrB,UAAT,IAAuB,IAHjC;AAIHC,UAAAA,gBAAgB,EAAGoB,QAAQ,CAACpB,gBAAT,IAA6B;AAJ7C,SAAP;AAMH;AACJ;;AACD,WAAO;AACHhrB,MAAAA,OAAO,EAAEiG,OADN;AAEHz7B,MAAAA,IAAI,EAAE;AAFH,KAAP;AAIH;;AACD,MAAI,OAAQy7B,OAAR,KAAqB,QAAzB,EAAmC;AAC/B,UAAMmmB,QAAQ,GAAGjB,QAAQ,CAACllB,OAAD,CAAzB;;AACA,QAAImmB,QAAQ,IAAI,IAAhB,EAAsB;AAClB,aAAO,IAAP;AACH;;AACD,WAAO;AACH5hD,MAAAA,IAAI,EAAE4hD,QAAQ,CAAC5hD,IADZ;AAEHw1B,MAAAA,OAAO,EAAEosB,QAAQ,CAACpsB,OAFf;AAGH+qB,MAAAA,UAAU,EAAEqB,QAAQ,CAACrB,UAHlB;AAIHC,MAAAA,gBAAgB,EAAGoB,QAAQ,CAACpB,gBAAT,IAA6B;AAJ7C,KAAP;AAMH;;AACD,QAAMoB,QAAQ,GAAGjB,QAAQ,CAACllB,OAAO,CAACz7B,IAAT,CAAzB,CAlCyB,CAmCzB;;AACA,MAAI,CAAC4hD,QAAL,EAAe;AACX,QAAI,OAAQnmB,OAAO,CAACjG,OAAhB,KAA6B,QAAjC,EAA2C;AACvC0pB,MAAAA,QAAQ,CAACjhC,kBAAT,CAA4B,yBAA5B,EAAuD,SAAvD,EAAkEwd,OAAlE;AACH;;AACD,WAAOA,OAAP;AACH,GAzCwB,CA0CzB;;;AACA,MAAIA,OAAO,CAACjG,OAAR,KAAoB,CAApB,IAAyBiG,OAAO,CAACjG,OAAR,KAAoBosB,QAAQ,CAACpsB,OAA1D,EAAmE;AAC/D0pB,IAAAA,QAAQ,CAACjhC,kBAAT,CAA4B,0BAA5B,EAAwD,SAAxD,EAAmEwd,OAAnE;AACH,GA7CwB,CA8CzB;AACA;;;AACA,MAAIomB,eAAe,GAAGpmB,OAAO,CAAC+kB,gBAAR,IAA4B,IAAlD;;AACA,MAAIqB,eAAe,IAAI,IAAnB,IAA2BD,QAAQ,CAACpB,gBAAxC,EAA0D;AACtD,QAAIrB,eAAe,CAACyC,QAAQ,CAACpB,gBAAV,CAAnB,EAAgD;AAC5CqB,MAAAA,eAAe,GAAGD,QAAQ,CAACpB,gBAAT,CAA0BpB,SAA1B,CAAoC3jB,OAApC,CAAlB;AACH,KAFD,MAGK;AACDomB,MAAAA,eAAe,GAAGD,QAAQ,CAACpB,gBAA3B;AACH;AACJ,GAxDwB,CAyDzB;;;AACA,SAAO;AACHxgD,IAAAA,IAAI,EAAEy7B,OAAO,CAACz7B,IADX;AAEHw1B,IAAAA,OAAO,EAAEosB,QAAQ,CAACpsB,OAFf;AAGH+qB,IAAAA,UAAU,EAAG9kB,OAAO,CAAC8kB,UAAR,IAAsBqB,QAAQ,CAACrB,UAA/B,IAA6C,IAHvD;AAIHC,IAAAA,gBAAgB,EAAEqB;AAJf,GAAP;AAMH;;AAGD,SAASC,QAAT,CAAkBv+B,IAAlB,EAAwB;AACpBA,EAAAA,IAAI,GAAG1B,QAAQ,CAAC0B,IAAD,CAAf;AACA,MAAIw+B,QAAQ,GAAG,EAAf;;AACA,OAAK,IAAI99C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsf,IAAI,CAAC9gB,MAAzB,EAAiCwB,CAAC,EAAlC,EAAsC;AAClC89C,IAAAA,QAAQ,IAAI/kC,MAAM,CAACC,YAAP,CAAoBsG,IAAI,CAACtf,CAAD,CAAxB,CAAZ;AACH;;AACD,SAAO+9C,IAAI,CAACD,QAAD,CAAX;AACH;;AAGD,MAAME,SAAS,GAAG,WAAlB;;AAGA,IAAIC,WAAW,GAAIjoC,SAAS,IAAIA,SAAS,CAAC4L,SAAxB,IAAsC,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACjG,WAASC,KAAT,CAAexI,KAAf,EAAsB;AAAE,WAAOA,KAAK,YAAYsI,CAAjB,GAAqBtI,KAArB,GAA6B,IAAIsI,CAAJ,CAAM,UAAUG,OAAV,EAAmB;AAAEA,MAAAA,OAAO,CAACzI,KAAD,CAAP;AAAiB,KAA5C,CAApC;AAAoF;;AAC5G,SAAO,KAAKsI,CAAC,KAAKA,CAAC,GAAGI,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;AACvD,aAASC,SAAT,CAAmB5I,KAAnB,EAA0B;AAAE,UAAI;AAAE6I,QAAAA,IAAI,CAACN,SAAS,CAACxL,IAAV,CAAeiD,KAAf,CAAD,CAAJ;AAA8B,OAApC,CAAqC,OAAOxe,CAAP,EAAU;AAAEmnB,QAAAA,MAAM,CAACnnB,CAAD,CAAN;AAAY;AAAE;;AAC3F,aAASsnB,QAAT,CAAkB9I,KAAlB,EAAyB;AAAE,UAAI;AAAE6I,QAAAA,IAAI,CAACN,SAAS,CAAC,OAAD,CAAT,CAAmBvI,KAAnB,CAAD,CAAJ;AAAkC,OAAxC,CAAyC,OAAOxe,CAAP,EAAU;AAAEmnB,QAAAA,MAAM,CAACnnB,CAAD,CAAN;AAAY;AAAE;;AAC9F,aAASqnB,IAAT,CAAcxE,MAAd,EAAsB;AAAEA,MAAAA,MAAM,CAAC0E,IAAP,GAAcN,OAAO,CAACpE,MAAM,CAACrE,KAAR,CAArB,GAAsCwI,KAAK,CAACnE,MAAM,CAACrE,KAAR,CAAL,CAAoBgJ,IAApB,CAAyBJ,SAAzB,EAAoCE,QAApC,CAAtC;AAAsF;;AAC9GD,IAAAA,IAAI,CAAC,CAACN,SAAS,GAAGA,SAAS,CAAC7H,KAAV,CAAgB0H,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDtL,IAAzD,EAAD,CAAJ;AACH,GALM,CAAP;AAMH,CARD;;AASA,SAAS0nC,MAAT,CAAgBC,IAAhB,EAAsBtgC,OAAtB,EAA+B;AAC3B,SAAOogC,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,QAAIpgC,OAAO,IAAI,IAAf,EAAqB;AACjBA,MAAAA,OAAO,GAAG,EAAV;AACH;;AACD,UAAMugC,OAAO,GAAG;AACZ94B,MAAAA,MAAM,EAAGzH,OAAO,CAACyH,MAAR,IAAkB,KADf;AAEZ+4B,MAAAA,OAAO,EAAGxgC,OAAO,CAACwgC,OAAR,IAAmB,EAFjB;AAGZC,MAAAA,IAAI,EAAGzgC,OAAO,CAACygC,IAAR,IAAgBtoC,SAHX;AAIZnF,MAAAA,IAAI,EAAE,MAJM;AAKZ0tC,MAAAA,KAAK,EAAE,UALK;AAMZC,MAAAA,WAAW,EAAE,aAND;AAOZC,MAAAA,QAAQ,EAAE,QAPE;AAQZC,MAAAA,QAAQ,EAAE,QARE,CAQQ;;AARR,KAAhB;AAUA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACT,IAAD,EAAOC,OAAP,CAA5B;AACA,UAAME,IAAI,GAAG,MAAMK,QAAQ,CAACj4B,WAAT,EAAnB;AACA,UAAM23B,OAAO,GAAG,EAAhB;;AACA,QAAIM,QAAQ,CAACN,OAAT,CAAiB3lC,OAArB,EAA8B;AAC1BimC,MAAAA,QAAQ,CAACN,OAAT,CAAiB3lC,OAAjB,CAAyB,CAACe,KAAD,EAAQuB,GAAR,KAAgB;AACrCqjC,QAAAA,OAAO,CAACrjC,GAAG,CAACjB,WAAJ,EAAD,CAAP,GAA6BN,KAA7B;AACH,OAFD;AAGH,KAJD,MAKK;AACCklC,MAAAA,QAAQ,CAACN,OAAV,CAAmBtjC,IAApB,GAA4BrC,OAA5B,CAAqCsC,GAAD,IAAS;AACzCqjC,QAAAA,OAAO,CAACrjC,GAAG,CAACjB,WAAJ,EAAD,CAAP,GAA6B4kC,QAAQ,CAACN,OAAT,CAAiBzM,GAAjB,CAAqB52B,GAArB,CAA7B;AACH,OAFD;AAGH;;AACD,WAAO;AACHqjC,MAAAA,OAAO,EAAEA,OADN;AAEHQ,MAAAA,UAAU,EAAEF,QAAQ,CAACG,MAFlB;AAGHC,MAAAA,aAAa,EAAEJ,QAAQ,CAACK,UAHrB;AAIHV,MAAAA,IAAI,EAAE1gC,QAAQ,CAAC,IAAIL,UAAJ,CAAe+gC,IAAf,CAAD;AAJX,KAAP;AAMH,GAjCiB,CAAlB;AAkCH;;AAGD,IAAIW,WAAW,GAAIjpC,SAAS,IAAIA,SAAS,CAAC4L,SAAxB,IAAsC,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACjG,WAASC,KAAT,CAAexI,KAAf,EAAsB;AAAE,WAAOA,KAAK,YAAYsI,CAAjB,GAAqBtI,KAArB,GAA6B,IAAIsI,CAAJ,CAAM,UAAUG,OAAV,EAAmB;AAAEA,MAAAA,OAAO,CAACzI,KAAD,CAAP;AAAiB,KAA5C,CAApC;AAAoF;;AAC5G,SAAO,KAAKsI,CAAC,KAAKA,CAAC,GAAGI,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;AACvD,aAASC,SAAT,CAAmB5I,KAAnB,EAA0B;AAAE,UAAI;AAAE6I,QAAAA,IAAI,CAACN,SAAS,CAACxL,IAAV,CAAeiD,KAAf,CAAD,CAAJ;AAA8B,OAApC,CAAqC,OAAOxe,CAAP,EAAU;AAAEmnB,QAAAA,MAAM,CAACnnB,CAAD,CAAN;AAAY;AAAE;;AAC3F,aAASsnB,QAAT,CAAkB9I,KAAlB,EAAyB;AAAE,UAAI;AAAE6I,QAAAA,IAAI,CAACN,SAAS,CAAC,OAAD,CAAT,CAAmBvI,KAAnB,CAAD,CAAJ;AAAkC,OAAxC,CAAyC,OAAOxe,CAAP,EAAU;AAAEmnB,QAAAA,MAAM,CAACnnB,CAAD,CAAN;AAAY;AAAE;;AAC9F,aAASqnB,IAAT,CAAcxE,MAAd,EAAsB;AAAEA,MAAAA,MAAM,CAAC0E,IAAP,GAAcN,OAAO,CAACpE,MAAM,CAACrE,KAAR,CAArB,GAAsCwI,KAAK,CAACnE,MAAM,CAACrE,KAAR,CAAL,CAAoBgJ,IAApB,CAAyBJ,SAAzB,EAAoCE,QAApC,CAAtC;AAAsF;;AAC9GD,IAAAA,IAAI,CAAC,CAACN,SAAS,GAAGA,SAAS,CAAC7H,KAAV,CAAgB0H,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDtL,IAAzD,EAAD,CAAJ;AACH,GALM,CAAP;AAMH,CARD;;AASA,MAAM0oC,QAAQ,GAAG,IAAI7lC,MAAJ,CAAW2kC,SAAX,CAAjB;;AACA,SAASmB,OAAT,CAAiBC,QAAjB,EAA2B;AACvB,SAAO,IAAIj9B,OAAJ,CAAaD,OAAD,IAAa;AAC5Bm9B,IAAAA,UAAU,CAACn9B,OAAD,EAAUk9B,QAAV,CAAV;AACH,GAFM,CAAP;AAGH;;AACD,SAASE,OAAT,CAAiB7lC,KAAjB,EAAwB9d,IAAxB,EAA8B;AAC1B,MAAI8d,KAAK,IAAI,IAAb,EAAmB;AACf,WAAO,IAAP;AACH;;AACD,MAAI,OAAQA,KAAR,KAAmB,QAAvB,EAAiC;AAC7B,WAAOA,KAAP;AACH;;AACD,MAAI+D,WAAW,CAAC/D,KAAD,CAAf,EAAwB;AACpB,QAAI9d,IAAI,KAAKA,IAAI,CAACma,KAAL,CAAW,GAAX,EAAgB,CAAhB,MAAuB,MAAvB,IAAiCna,IAAI,CAACma,KAAL,CAAW,GAAX,EAAgB,CAAhB,EAAmBypC,IAAnB,OAA8B,kBAApE,CAAR,EAAiG;AAC7F,UAAI;AACA,eAAOpxB,YAAY,CAAC1U,KAAD,CAAnB;AACH,OAFD,CAGA,OAAOpB,KAAP,EAAc,CAAG;AACpB;;AACD,WAAO8G,OAAO,CAAC1F,KAAD,CAAd;AACH;;AACD,SAAOA,KAAP;AACH,C,CACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS+lC,UAAT,CAAoBC,UAApB,EAAgCnB,IAAhC,EAAsCoB,WAAtC,EAAmD;AAC/C;AACA,QAAMC,YAAY,GAAI,OAAQF,UAAR,KAAwB,QAAxB,IAAoCA,UAAU,CAACG,aAAX,IAA4B,IAAjE,GAAyEH,UAAU,CAACG,aAApF,GAAoG,EAAzH;AACAV,EAAAA,QAAQ,CAAC1jC,cAAT,CAAyBmkC,YAAY,GAAG,CAAf,IAAqBA,YAAY,GAAG,CAAhB,KAAuB,CAApE,EAAwE,mCAAxE,EAA6G,0BAA7G,EAAyIA,YAAzI;AACA,QAAME,gBAAgB,GAAK,OAAQJ,UAAR,KAAwB,QAAzB,GAAqCA,UAAU,CAACI,gBAAhD,GAAmE,IAA7F;AACA,QAAMC,oBAAoB,GAAK,OAAQL,UAAR,KAAwB,QAAxB,IAAoC,OAAQA,UAAU,CAACK,oBAAnB,KAA6C,QAAlF,GAA8FL,UAAU,CAACK,oBAAzG,GAAgI,GAA9J;AACAZ,EAAAA,QAAQ,CAAC1jC,cAAT,CAAyBskC,oBAAoB,GAAG,CAAvB,IAA6BA,oBAAoB,GAAG,CAAxB,KAA+B,CAApF,EAAwF,2CAAxF,EAAqI,iCAArI,EAAwKA,oBAAxK;AACA,QAAMzB,OAAO,GAAG,EAAhB;AACA,MAAIlC,GAAG,GAAG,IAAV,CAR+C,CAS/C;;AACA,QAAMt+B,OAAO,GAAG;AACZyH,IAAAA,MAAM,EAAE;AADI,GAAhB;AAGA,MAAIy6B,QAAQ,GAAG,KAAf;AACA,MAAIC,OAAO,GAAG,IAAI,EAAJ,GAAS,IAAvB;;AACA,MAAI,OAAQP,UAAR,KAAwB,QAA5B,EAAsC;AAClCtD,IAAAA,GAAG,GAAGsD,UAAN;AACH,GAFD,MAGK,IAAI,OAAQA,UAAR,KAAwB,QAA5B,EAAsC;AACvC,QAAIA,UAAU,IAAI,IAAd,IAAsBA,UAAU,CAACtD,GAAX,IAAkB,IAA5C,EAAkD;AAC9C+C,MAAAA,QAAQ,CAACllC,kBAAT,CAA4B,aAA5B,EAA2C,gBAA3C,EAA6DylC,UAA7D;AACH;;AACDtD,IAAAA,GAAG,GAAGsD,UAAU,CAACtD,GAAjB;;AACA,QAAI,OAAQsD,UAAU,CAACO,OAAnB,KAAgC,QAAhC,IAA4CP,UAAU,CAACO,OAAX,GAAqB,CAArE,EAAwE;AACpEA,MAAAA,OAAO,GAAGP,UAAU,CAACO,OAArB;AACH;;AACD,QAAIP,UAAU,CAACpB,OAAf,EAAwB;AACpB,WAAK,MAAMrjC,GAAX,IAAkBykC,UAAU,CAACpB,OAA7B,EAAsC;AAClCA,QAAAA,OAAO,CAACrjC,GAAG,CAACjB,WAAJ,EAAD,CAAP,GAA6B;AAAEiB,UAAAA,GAAG,EAAEA,GAAP;AAAYvB,UAAAA,KAAK,EAAEV,MAAM,CAAC0mC,UAAU,CAACpB,OAAX,CAAmBrjC,GAAnB,CAAD;AAAzB,SAA7B;;AACA,YAAI,CAAC,eAAD,EAAkB,mBAAlB,EAAuC8T,OAAvC,CAA+C9T,GAAG,CAACjB,WAAJ,EAA/C,KAAqE,CAAzE,EAA4E;AACxEgmC,UAAAA,QAAQ,GAAG,IAAX;AACH;AACJ;AACJ;;AACDliC,IAAAA,OAAO,CAACoiC,SAAR,GAAoB,CAAC,CAACR,UAAU,CAACQ,SAAjC;;AACA,QAAIR,UAAU,CAACS,IAAX,IAAmB,IAAnB,IAA2BT,UAAU,CAACU,QAAX,IAAuB,IAAtD,EAA4D;AACxD,UAAIhE,GAAG,CAACj+B,SAAJ,CAAc,CAAd,EAAiB,CAAjB,MAAwB,QAAxB,IAAoCuhC,UAAU,CAACW,2BAAX,KAA2C,IAAnF,EAAyF;AACrFlB,QAAAA,QAAQ,CAAC9jC,UAAT,CAAoB,kDAApB,EAAwE/B,MAAM,CAACuB,MAAP,CAAcS,gBAAtF,EAAwG;AAAEC,UAAAA,QAAQ,EAAE,KAAZ;AAAmB6gC,UAAAA,GAAG,EAAEA,GAAxB;AAA6B+D,UAAAA,IAAI,EAAET,UAAU,CAACS,IAA9C;AAAoDC,UAAAA,QAAQ,EAAE;AAA9D,SAAxG;AACH;;AACD,YAAME,aAAa,GAAGZ,UAAU,CAACS,IAAX,GAAkB,GAAlB,GAAwBT,UAAU,CAACU,QAAzD;AACA9B,MAAAA,OAAO,CAAC,eAAD,CAAP,GAA2B;AACvBrjC,QAAAA,GAAG,EAAE,eADkB;AAEvBvB,QAAAA,KAAK,EAAE,WAAWokC,QAAQ,CAAC/vB,WAAW,CAACuyB,aAAD,CAAZ;AAFH,OAA3B;AAIH;AACJ;;AACD,MAAI/B,IAAJ,EAAU;AACNzgC,IAAAA,OAAO,CAACyH,MAAR,GAAiB,MAAjB;AACAzH,IAAAA,OAAO,CAACygC,IAAR,GAAeA,IAAf;;AACA,QAAID,OAAO,CAAC,cAAD,CAAP,IAA2B,IAA/B,EAAqC;AACjCA,MAAAA,OAAO,CAAC,cAAD,CAAP,GAA0B;AAAErjC,QAAAA,GAAG,EAAE,cAAP;AAAuBvB,QAAAA,KAAK,EAAE;AAA9B,OAA1B;AACH;;AACD,QAAI4kC,OAAO,CAAC,gBAAD,CAAP,IAA6B,IAAjC,EAAuC;AACnCA,MAAAA,OAAO,CAAC,gBAAD,CAAP,GAA4B;AAAErjC,QAAAA,GAAG,EAAE,gBAAP;AAAyBvB,QAAAA,KAAK,EAAEV,MAAM,CAACulC,IAAI,CAAC9/C,MAAN;AAAtC,OAA5B;AACH;AACJ;;AACD,QAAM8hD,WAAW,GAAG,EAApB;AACAhnC,EAAAA,MAAM,CAACyB,IAAP,CAAYsjC,OAAZ,EAAqB3lC,OAArB,CAA8BsC,GAAD,IAAS;AAClC,UAAMulC,MAAM,GAAGlC,OAAO,CAACrjC,GAAD,CAAtB;AACAslC,IAAAA,WAAW,CAACC,MAAM,CAACvlC,GAAR,CAAX,GAA0BulC,MAAM,CAAC9mC,KAAjC;AACH,GAHD;AAIAoE,EAAAA,OAAO,CAACwgC,OAAR,GAAkBiC,WAAlB;;AACA,QAAME,cAAc,GAAI,YAAY;AAChC,QAAIC,KAAK,GAAG,IAAZ;AACA,UAAMC,OAAO,GAAG,IAAIv+B,OAAJ,CAAY,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;AACnD,UAAI49B,OAAJ,EAAa;AACTS,QAAAA,KAAK,GAAGpB,UAAU,CAAC,MAAM;AACrB,cAAIoB,KAAK,IAAI,IAAb,EAAmB;AACf;AACH;;AACDA,UAAAA,KAAK,GAAG,IAAR;AACAr+B,UAAAA,MAAM,CAAC88B,QAAQ,CAACzkC,SAAT,CAAmB,SAAnB,EAA8BpB,MAAM,CAACuB,MAAP,CAAc+lC,OAA5C,EAAqD;AACxDC,YAAAA,WAAW,EAAEtB,OAAO,CAACzhC,OAAO,CAACygC,IAAT,EAAegC,WAAW,CAAC,cAAD,CAA1B,CADoC;AAExDO,YAAAA,aAAa,EAAEhjC,OAAO,CAACyH,MAFiC;AAGxD06B,YAAAA,OAAO,EAAEA,OAH+C;AAIxD7D,YAAAA,GAAG,EAAEA;AAJmD,WAArD,CAAD,CAAN;AAMH,SAXiB,EAWf6D,OAXe,CAAlB;AAYH;AACJ,KAfe,CAAhB;;AAgBA,UAAMc,MAAM,GAAG,YAAY;AACvB,UAAIL,KAAK,IAAI,IAAb,EAAmB;AACf;AACH;;AACDM,MAAAA,YAAY,CAACN,KAAD,CAAZ;AACAA,MAAAA,KAAK,GAAG,IAAR;AACH,KAND;;AAOA,WAAO;AAAEC,MAAAA,OAAF;AAAWI,MAAAA;AAAX,KAAP;AACH,GA1BsB,EAAvB;;AA2BA,QAAME,YAAY,GAAI,YAAY;AAC9B,WAAO/B,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,WAAK,IAAIgC,OAAO,GAAG,CAAnB,EAAsBA,OAAO,GAAGtB,YAAhC,EAA8CsB,OAAO,EAArD,EAAyD;AACrD,YAAItC,QAAQ,GAAG,IAAf;;AACA,YAAI;AACAA,UAAAA,QAAQ,GAAG,MAAMT,MAAM,CAAC/B,GAAD,EAAMt+B,OAAN,CAAvB,CADA,CAEA;;AACA,cAAI8gC,QAAQ,CAACE,UAAT,KAAwB,GAAxB,IAA+BoC,OAAO,GAAGtB,YAA7C,EAA2D;AACvD,gBAAIuB,QAAQ,GAAG,IAAf;;AACA,gBAAIrB,gBAAJ,EAAsB;AAClBqB,cAAAA,QAAQ,GAAG,MAAMrB,gBAAgB,CAACoB,OAAD,EAAU9E,GAAV,CAAjC;AACH;;AACD,gBAAI+E,QAAJ,EAAc;AACV,kBAAIC,KAAK,GAAG,CAAZ;AACA,oBAAMC,UAAU,GAAGzC,QAAQ,CAACN,OAAT,CAAiB,aAAjB,CAAnB;;AACA,kBAAI,OAAQ+C,UAAR,KAAwB,QAAxB,IAAoCA,UAAU,CAACniC,KAAX,CAAiB,eAAjB,CAAxC,EAA2E;AACvEkiC,gBAAAA,KAAK,GAAGnjC,QAAQ,CAACojC,UAAD,CAAR,GAAuB,IAA/B;AACH,eAFD,MAGK;AACDD,gBAAAA,KAAK,GAAGrB,oBAAoB,GAAG9hC,QAAQ,CAACjF,MAAM,CAACjZ,IAAI,CAACuhD,MAAL,KAAgBvhD,IAAI,CAAC4B,GAAL,CAAS,CAAT,EAAYu/C,OAAZ,CAAjB,CAAP,CAAvC;AACH,eARS,CASV;;;AACA,oBAAM9B,OAAO,CAACgC,KAAD,CAAb;AACA;AACH;AACJ;AACJ,SAtBD,CAuBA,OAAO9oC,KAAP,EAAc;AACVsmC,UAAAA,QAAQ,GAAGtmC,KAAK,CAACsmC,QAAjB;;AACA,cAAIA,QAAQ,IAAI,IAAhB,EAAsB;AAClB6B,YAAAA,cAAc,CAACM,MAAf;AACA5B,YAAAA,QAAQ,CAAC9jC,UAAT,CAAoB,kBAApB,EAAwC/B,MAAM,CAACuB,MAAP,CAAc0mC,YAAtD,EAAoE;AAChEV,cAAAA,WAAW,EAAEtB,OAAO,CAACzhC,OAAO,CAACygC,IAAT,EAAegC,WAAW,CAAC,cAAD,CAA1B,CAD4C;AAEhEO,cAAAA,aAAa,EAAEhjC,OAAO,CAACyH,MAFyC;AAGhEi8B,cAAAA,WAAW,EAAElpC,KAHmD;AAIhE8jC,cAAAA,GAAG,EAAEA;AAJ2D,aAApE;AAMH;AACJ;;AACD,YAAImC,IAAI,GAAGK,QAAQ,CAACL,IAApB;;AACA,YAAIyB,QAAQ,IAAIpB,QAAQ,CAACE,UAAT,KAAwB,GAAxC,EAA6C;AACzCP,UAAAA,IAAI,GAAG,IAAP;AACH,SAFD,MAGK,IAAIK,QAAQ,CAACE,UAAT,GAAsB,GAAtB,IAA6BF,QAAQ,CAACE,UAAT,IAAuB,GAAxD,EAA6D;AAC9D2B,UAAAA,cAAc,CAACM,MAAf;AACA5B,UAAAA,QAAQ,CAAC9jC,UAAT,CAAoB,cAApB,EAAoC/B,MAAM,CAACuB,MAAP,CAAc0mC,YAAlD,EAAgE;AAC5DxC,YAAAA,MAAM,EAAEH,QAAQ,CAACE,UAD2C;AAE5DR,YAAAA,OAAO,EAAEM,QAAQ,CAACN,OAF0C;AAG5DC,YAAAA,IAAI,EAAEgB,OAAO,CAAChB,IAAD,EAASK,QAAQ,CAACN,OAAV,GAAqBM,QAAQ,CAACN,OAAT,CAAiB,cAAjB,CAArB,GAAwD,IAAhE,CAH+C;AAI5DuC,YAAAA,WAAW,EAAEtB,OAAO,CAACzhC,OAAO,CAACygC,IAAT,EAAegC,WAAW,CAAC,cAAD,CAA1B,CAJwC;AAK5DO,YAAAA,aAAa,EAAEhjC,OAAO,CAACyH,MALqC;AAM5D62B,YAAAA,GAAG,EAAEA;AANuD,WAAhE;AAQH;;AACD,YAAIuD,WAAJ,EAAiB;AACb,cAAI;AACA,kBAAM5hC,MAAM,GAAG,MAAM4hC,WAAW,CAACpB,IAAD,EAAOK,QAAP,CAAhC;AACA6B,YAAAA,cAAc,CAACM,MAAf;AACA,mBAAOhjC,MAAP;AACH,WAJD,CAKA,OAAOzF,KAAP,EAAc;AACV;AACA,gBAAIA,KAAK,CAACmpC,aAAN,IAAuBP,OAAO,GAAGtB,YAArC,EAAmD;AAC/C,kBAAIuB,QAAQ,GAAG,IAAf;;AACA,kBAAIrB,gBAAJ,EAAsB;AAClBqB,gBAAAA,QAAQ,GAAG,MAAMrB,gBAAgB,CAACoB,OAAD,EAAU9E,GAAV,CAAjC;AACH;;AACD,kBAAI+E,QAAJ,EAAc;AACV,sBAAMlB,OAAO,GAAGF,oBAAoB,GAAG9hC,QAAQ,CAACjF,MAAM,CAACjZ,IAAI,CAACuhD,MAAL,KAAgBvhD,IAAI,CAAC4B,GAAL,CAAS,CAAT,EAAYu/C,OAAZ,CAAjB,CAAP,CAA/C,CADU,CAEV;;AACA,sBAAM9B,OAAO,CAACa,OAAD,CAAb;AACA;AACH;AACJ;;AACDQ,YAAAA,cAAc,CAACM,MAAf;AACA5B,YAAAA,QAAQ,CAAC9jC,UAAT,CAAoB,2BAApB,EAAiD/B,MAAM,CAACuB,MAAP,CAAc0mC,YAA/D,EAA6E;AACzEhD,cAAAA,IAAI,EAAEgB,OAAO,CAAChB,IAAD,EAASK,QAAQ,CAACN,OAAV,GAAqBM,QAAQ,CAACN,OAAT,CAAiB,cAAjB,CAArB,GAAwD,IAAhE,CAD4D;AAEzEhmC,cAAAA,KAAK,EAAEA,KAFkE;AAGzEuoC,cAAAA,WAAW,EAAEtB,OAAO,CAACzhC,OAAO,CAACygC,IAAT,EAAegC,WAAW,CAAC,cAAD,CAA1B,CAHqD;AAIzEO,cAAAA,aAAa,EAAEhjC,OAAO,CAACyH,MAJkD;AAKzE62B,cAAAA,GAAG,EAAEA;AALoE,aAA7E;AAOH;AACJ;;AACDqE,QAAAA,cAAc,CAACM,MAAf,GAlFqD,CAmFrD;AACA;;AACA,eAAOxC,IAAP;AACH;;AACD,aAAOY,QAAQ,CAAC9jC,UAAT,CAAoB,iBAApB,EAAuC/B,MAAM,CAACuB,MAAP,CAAc0mC,YAArD,EAAmE;AACtEV,QAAAA,WAAW,EAAEtB,OAAO,CAACzhC,OAAO,CAACygC,IAAT,EAAegC,WAAW,CAAC,cAAD,CAA1B,CADkD;AAEtEO,QAAAA,aAAa,EAAEhjC,OAAO,CAACyH,MAF+C;AAGtE62B,QAAAA,GAAG,EAAEA;AAHiE,OAAnE,CAAP;AAKH,KA7FiB,CAAlB;AA8FH,GA/FoB,EAArB;;AAgGA,SAAOh6B,OAAO,CAACs/B,IAAR,CAAa,CAACjB,cAAc,CAACE,OAAhB,EAAyBM,YAAzB,CAAb,CAAP;AACH;;AACD,SAASU,SAAT,CAAmBjC,UAAnB,EAA+BkC,IAA/B,EAAqCjC,WAArC,EAAkD;AAC9C,MAAIkC,eAAe,GAAG,CAACnoC,KAAD,EAAQklC,QAAR,KAAqB;AACvC,QAAI7gC,MAAM,GAAG,IAAb;;AACA,QAAIrE,KAAK,IAAI,IAAb,EAAmB;AACf,UAAI;AACAqE,QAAAA,MAAM,GAAG7C,IAAI,CAACwyB,KAAL,CAAWtf,YAAY,CAAC1U,KAAD,CAAvB,CAAT;AACH,OAFD,CAGA,OAAOpB,KAAP,EAAc;AACV6mC,QAAAA,QAAQ,CAAC9jC,UAAT,CAAoB,cAApB,EAAoC/B,MAAM,CAACuB,MAAP,CAAc0mC,YAAlD,EAAgE;AAC5DhD,UAAAA,IAAI,EAAE7kC,KADsD;AAE5DpB,UAAAA,KAAK,EAAEA;AAFqD,SAAhE;AAIH;AACJ;;AACD,QAAIqnC,WAAJ,EAAiB;AACb5hC,MAAAA,MAAM,GAAG4hC,WAAW,CAAC5hC,MAAD,EAAS6gC,QAAT,CAApB;AACH;;AACD,WAAO7gC,MAAP;AACH,GAjBD,CAD8C,CAmB9C;AACA;AACA;;;AACA,MAAIwgC,IAAI,GAAG,IAAX;;AACA,MAAIqD,IAAI,IAAI,IAAZ,EAAkB;AACdrD,IAAAA,IAAI,GAAGxwB,WAAW,CAAC6zB,IAAD,CAAlB,CADc,CAEd;;AACA,UAAME,OAAO,GAAI,OAAQpC,UAAR,KAAwB,QAAzB,GAAsC;AAAEtD,MAAAA,GAAG,EAAEsD;AAAP,KAAtC,GAA6Dr8B,WAAW,CAACq8B,UAAD,CAAxF;;AACA,QAAIoC,OAAO,CAACxD,OAAZ,EAAqB;AACjB,YAAMyD,cAAc,GAAIxoC,MAAM,CAACyB,IAAP,CAAY8mC,OAAO,CAACxD,OAApB,EAA6BxrB,MAA7B,CAAqCvsB,CAAD,IAAQA,CAAC,CAACyT,WAAF,OAAoB,cAAhE,EAAiFvb,MAAlF,KAA8F,CAArH;;AACA,UAAI,CAACsjD,cAAL,EAAqB;AACjBD,QAAAA,OAAO,CAACxD,OAAR,GAAkBj7B,WAAW,CAACy+B,OAAO,CAACxD,OAAT,CAA7B;AACAwD,QAAAA,OAAO,CAACxD,OAAR,CAAgB,cAAhB,IAAkC,kBAAlC;AACH;AACJ,KAND,MAOK;AACDwD,MAAAA,OAAO,CAACxD,OAAR,GAAkB;AAAE,wBAAgB;AAAlB,OAAlB;AACH;;AACDoB,IAAAA,UAAU,GAAGoC,OAAb;AACH;;AACD,SAAOrC,UAAU,CAACC,UAAD,EAAanB,IAAb,EAAmBsD,eAAnB,CAAjB;AACH;;AACD,SAASG,IAAT,CAAcxzB,IAAd,EAAoB1Q,OAApB,EAA6B;AACzB,MAAI,CAACA,OAAL,EAAc;AACVA,IAAAA,OAAO,GAAG,EAAV;AACH;;AACDA,EAAAA,OAAO,GAAGuF,WAAW,CAACvF,OAAD,CAArB;;AACA,MAAIA,OAAO,CAACuB,KAAR,IAAiB,IAArB,EAA2B;AACvBvB,IAAAA,OAAO,CAACuB,KAAR,GAAgB,CAAhB;AACH;;AACD,MAAIvB,OAAO,CAACmkC,OAAR,IAAmB,IAAvB,EAA6B;AACzBnkC,IAAAA,OAAO,CAACmkC,OAAR,GAAkB,KAAlB;AACH;;AACD,MAAInkC,OAAO,CAACokC,QAAR,IAAoB,IAAxB,EAA8B;AAC1BpkC,IAAAA,OAAO,CAACokC,QAAR,GAAmB,GAAnB;AACH;;AACD,SAAO,IAAI9/B,OAAJ,CAAY,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;AAC1C,QAAIq+B,KAAK,GAAG,IAAZ;AACA,QAAIj+B,IAAI,GAAG,KAAX,CAF0C,CAG1C;;AACA,UAAMs+B,MAAM,GAAG,MAAM;AACjB,UAAIt+B,IAAJ,EAAU;AACN,eAAO,KAAP;AACH;;AACDA,MAAAA,IAAI,GAAG,IAAP;;AACA,UAAIi+B,KAAJ,EAAW;AACPM,QAAAA,YAAY,CAACN,KAAD,CAAZ;AACH;;AACD,aAAO,IAAP;AACH,KATD;;AAUA,QAAI5iC,OAAO,CAACmiC,OAAZ,EAAqB;AACjBS,MAAAA,KAAK,GAAGpB,UAAU,CAAC,MAAM;AACrB,YAAIyB,MAAM,EAAV,EAAc;AACV1+B,UAAAA,MAAM,CAAC,IAAI3kB,KAAJ,CAAU,SAAV,CAAD,CAAN;AACH;AACJ,OAJiB,EAIfogB,OAAO,CAACmiC,OAJO,CAAlB;AAKH;;AACD,UAAMkC,UAAU,GAAGrkC,OAAO,CAACqkC,UAA3B;AACA,QAAIjB,OAAO,GAAG,CAAd;;AACA,aAASkB,KAAT,GAAiB;AACb,aAAO5zB,IAAI,GAAG9L,IAAP,CAAY,UAAU3E,MAAV,EAAkB;AACjC;AACA,YAAIA,MAAM,KAAK9H,SAAf,EAA0B;AACtB,cAAI8qC,MAAM,EAAV,EAAc;AACV5+B,YAAAA,OAAO,CAACpE,MAAD,CAAP;AACH;AACJ,SAJD,MAKK,IAAID,OAAO,CAACukC,QAAZ,EAAsB;AACvBvkC,UAAAA,OAAO,CAACukC,QAAR,CAAiBC,IAAjB,CAAsB,MAAtB,EAA8BF,KAA9B;AACH,SAFI,MAGA,IAAItkC,OAAO,CAACykC,SAAZ,EAAuB;AACxBzkC,UAAAA,OAAO,CAACykC,SAAR,CAAkBD,IAAlB,CAAuB,OAAvB,EAAgCF,KAAhC,EADwB,CAExB;AACH,SAHI,MAIA,IAAI,CAAC3/B,IAAL,EAAW;AACZy+B,UAAAA,OAAO;;AACP,cAAIA,OAAO,GAAGiB,UAAd,EAA0B;AACtB,gBAAIpB,MAAM,EAAV,EAAc;AACV1+B,cAAAA,MAAM,CAAC,IAAI3kB,KAAJ,CAAU,qBAAV,CAAD,CAAN;AACH;;AACD;AACH;;AACD,cAAIuiD,OAAO,GAAGniC,OAAO,CAACokC,QAAR,GAAmBjkC,QAAQ,CAACjF,MAAM,CAACjZ,IAAI,CAACuhD,MAAL,KAAgBvhD,IAAI,CAAC4B,GAAL,CAAS,CAAT,EAAYu/C,OAAZ,CAAjB,CAAP,CAAzC;;AACA,cAAIjB,OAAO,GAAGniC,OAAO,CAACuB,KAAtB,EAA6B;AACzB4gC,YAAAA,OAAO,GAAGniC,OAAO,CAACuB,KAAlB;AACH;;AACD,cAAI4gC,OAAO,GAAGniC,OAAO,CAACmkC,OAAtB,EAA+B;AAC3BhC,YAAAA,OAAO,GAAGniC,OAAO,CAACmkC,OAAlB;AACH;;AACD3C,UAAAA,UAAU,CAAC8C,KAAD,EAAQnC,OAAR,CAAV;AACH;;AACD,eAAO,IAAP;AACH,OAhCM,EAgCJ,UAAU3nC,KAAV,EAAiB;AAChB,YAAIyoC,MAAM,EAAV,EAAc;AACV1+B,UAAAA,MAAM,CAAC/J,KAAD,CAAN;AACH;AACJ,OApCM,CAAP;AAqCH;;AACD8pC,IAAAA,KAAK;AACR,GA/DM,CAAP;AAgEH;;AAGD,IAAII,QAAQ,GAAG,kCAAf,C,CAEA;;AACA,IAAIC,YAAY,GAAG,EAAnB;;AACA,KAAK,IAAIrrC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGorC,QAAQ,CAAC/jD,MAA7B,EAAqC2Y,CAAC,EAAtC,EAA0C;AACxC,MAAI/K,CAAC,GAAGm2C,QAAQ,CAACpI,MAAT,CAAgBhjC,CAAhB,CAAR;AAEA,MAAIqrC,YAAY,CAACp2C,CAAD,CAAZ,KAAoB4J,SAAxB,EAAmC,MAAM,IAAIwkC,SAAJ,CAAcpuC,CAAC,GAAG,eAAlB,CAAN;AACnCo2C,EAAAA,YAAY,CAACp2C,CAAD,CAAZ,GAAkB+K,CAAlB;AACD;;AAED,SAASsrC,WAAT,CAAsBlV,GAAtB,EAA2B;AACzB,MAAIhqC,CAAC,GAAGgqC,GAAG,IAAI,EAAf;AACA,SAAQ,CAACA,GAAG,GAAG,SAAP,KAAqB,CAAtB,GACJ,EAAGhqC,CAAC,IAAI,CAAN,GAAW,CAAb,IAAkB,UADd,GAEJ,EAAGA,CAAC,IAAI,CAAN,GAAW,CAAb,IAAkB,UAFd,GAGJ,EAAGA,CAAC,IAAI,CAAN,GAAW,CAAb,IAAkB,UAHd,GAIJ,EAAGA,CAAC,IAAI,CAAN,GAAW,CAAb,IAAkB,UAJd,GAKJ,EAAGA,CAAC,IAAI,CAAN,GAAW,CAAb,IAAkB,UALrB;AAMD;;AAED,SAASm/C,SAAT,CAAoBC,MAApB,EAA4B;AAC1B,MAAIC,GAAG,GAAG,CAAV;;AACA,OAAK,IAAI5iD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2iD,MAAM,CAACnkD,MAA3B,EAAmC,EAAEwB,CAArC,EAAwC;AACtC,QAAIQ,CAAC,GAAGmiD,MAAM,CAACliD,UAAP,CAAkBT,CAAlB,CAAR;AACA,QAAIQ,CAAC,GAAG,EAAJ,IAAUA,CAAC,GAAG,GAAlB,EAAuB,OAAO,qBAAqBmiD,MAArB,GAA8B,GAArC;AAEvBC,IAAAA,GAAG,GAAGH,WAAW,CAACG,GAAD,CAAX,GAAoBpiD,CAAC,IAAI,CAA/B;AACD;;AACDoiD,EAAAA,GAAG,GAAGH,WAAW,CAACG,GAAD,CAAjB;;AAEA,OAAK5iD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG2iD,MAAM,CAACnkD,MAAvB,EAA+B,EAAEwB,CAAjC,EAAoC;AAClC,QAAI2d,CAAC,GAAGglC,MAAM,CAACliD,UAAP,CAAkBT,CAAlB,CAAR;AACA4iD,IAAAA,GAAG,GAAGH,WAAW,CAACG,GAAD,CAAX,GAAoBjlC,CAAC,GAAG,IAA9B;AACD;;AACD,SAAOilC,GAAP;AACD;;AAED,SAASC,QAAT,CAAmBF,MAAnB,EAA2BpkD,KAA3B,EAAkCukD,KAAlC,EAAyC;AACvCA,EAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;AACA,MAAKH,MAAM,CAACnkD,MAAP,GAAgB,CAAhB,GAAoBD,KAAK,CAACC,MAA3B,GAAqCskD,KAAzC,EAAgD,MAAM,IAAItI,SAAJ,CAAc,sBAAd,CAAN;AAEhDmI,EAAAA,MAAM,GAAGA,MAAM,CAAC5oC,WAAP,EAAT,CAJuC,CAMvC;;AACA,MAAI6oC,GAAG,GAAGF,SAAS,CAACC,MAAD,CAAnB;AACA,MAAI,OAAOC,GAAP,KAAe,QAAnB,EAA6B,MAAM,IAAInlD,KAAJ,CAAUmlD,GAAV,CAAN;AAE7B,MAAI9kC,MAAM,GAAG6kC,MAAM,GAAG,GAAtB;;AACA,OAAK,IAAI3iD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGzB,KAAK,CAACC,MAA1B,EAAkC,EAAEwB,CAApC,EAAuC;AACrC,QAAIoM,CAAC,GAAG7N,KAAK,CAACyB,CAAD,CAAb;AACA,QAAKoM,CAAC,IAAI,CAAN,KAAa,CAAjB,EAAoB,MAAM,IAAI3O,KAAJ,CAAU,gBAAV,CAAN;AAEpBmlD,IAAAA,GAAG,GAAGH,WAAW,CAACG,GAAD,CAAX,GAAmBx2C,CAAzB;AACA0R,IAAAA,MAAM,IAAIykC,QAAQ,CAACpI,MAAT,CAAgB/tC,CAAhB,CAAV;AACD;;AAED,OAAKpM,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmB,EAAEA,CAArB,EAAwB;AACtB4iD,IAAAA,GAAG,GAAGH,WAAW,CAACG,GAAD,CAAjB;AACD;;AACDA,EAAAA,GAAG,IAAI,CAAP;;AAEA,OAAK5iD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmB,EAAEA,CAArB,EAAwB;AACtB,QAAI2d,CAAC,GAAIilC,GAAG,IAAK,CAAC,IAAI5iD,CAAL,IAAU,CAAnB,GAAyB,IAAjC;AACA8d,IAAAA,MAAM,IAAIykC,QAAQ,CAACpI,MAAT,CAAgBx8B,CAAhB,CAAV;AACD;;AAED,SAAOG,MAAP;AACD;;AAED,SAASilC,QAAT,CAAmBhiD,GAAnB,EAAwB+hD,KAAxB,EAA+B;AAC7BA,EAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;AACA,MAAI/hD,GAAG,CAACvC,MAAJ,GAAa,CAAjB,EAAoB,OAAOuC,GAAG,GAAG,YAAb;AACpB,MAAIA,GAAG,CAACvC,MAAJ,GAAaskD,KAAjB,EAAwB,OAAO,sBAAP,CAHK,CAK7B;;AACA,MAAIE,OAAO,GAAGjiD,GAAG,CAACgZ,WAAJ,EAAd;AACA,MAAIkpC,OAAO,GAAGliD,GAAG,CAAC0qB,WAAJ,EAAd;AACA,MAAI1qB,GAAG,KAAKiiD,OAAR,IAAmBjiD,GAAG,KAAKkiD,OAA/B,EAAwC,OAAO,uBAAuBliD,GAA9B;AACxCA,EAAAA,GAAG,GAAGiiD,OAAN;AAEA,MAAIltC,KAAK,GAAG/U,GAAG,CAACmiD,WAAJ,CAAgB,GAAhB,CAAZ;AACA,MAAIptC,KAAK,KAAK,CAAC,CAAf,EAAkB,OAAO,gCAAgC/U,GAAvC;AAClB,MAAI+U,KAAK,KAAK,CAAd,EAAiB,OAAO,wBAAwB/U,GAA/B;AAEjB,MAAI4hD,MAAM,GAAG5hD,GAAG,CAACsc,KAAJ,CAAU,CAAV,EAAavH,KAAb,CAAb;AACA,MAAIqtC,SAAS,GAAGpiD,GAAG,CAACsc,KAAJ,CAAUvH,KAAK,GAAG,CAAlB,CAAhB;AACA,MAAIqtC,SAAS,CAAC3kD,MAAV,GAAmB,CAAvB,EAA0B,OAAO,gBAAP;AAE1B,MAAIokD,GAAG,GAAGF,SAAS,CAACC,MAAD,CAAnB;AACA,MAAI,OAAOC,GAAP,KAAe,QAAnB,EAA6B,OAAOA,GAAP;AAE7B,MAAIrkD,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIyB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmjD,SAAS,CAAC3kD,MAA9B,EAAsC,EAAEwB,CAAxC,EAA2C;AACzC,QAAIQ,CAAC,GAAG2iD,SAAS,CAAChJ,MAAV,CAAiBn6C,CAAjB,CAAR;AACA,QAAI2d,CAAC,GAAG6kC,YAAY,CAAChiD,CAAD,CAApB;AACA,QAAImd,CAAC,KAAK3H,SAAV,EAAqB,OAAO,uBAAuBxV,CAA9B;AACrBoiD,IAAAA,GAAG,GAAGH,WAAW,CAACG,GAAD,CAAX,GAAmBjlC,CAAzB,CAJyC,CAMzC;;AACA,QAAI3d,CAAC,GAAG,CAAJ,IAASmjD,SAAS,CAAC3kD,MAAvB,EAA+B;AAC/BD,IAAAA,KAAK,CAACsa,IAAN,CAAW8E,CAAX;AACD;;AAED,MAAIilC,GAAG,KAAK,CAAZ,EAAe,OAAO,0BAA0B7hD,GAAjC;AACf,SAAO;AAAE4hD,IAAAA,MAAM,EAAEA,MAAV;AAAkBpkD,IAAAA,KAAK,EAAEA;AAAzB,GAAP;AACD;;AAED,SAAS6kD,YAAT,GAAyB;AACvB,MAAI9/C,GAAG,GAAGy/C,QAAQ,CAAC5oC,KAAT,CAAe,IAAf,EAAqBmD,SAArB,CAAV;;AACA,MAAI,OAAOha,GAAP,KAAe,QAAnB,EAA6B,OAAOA,GAAP;AAC9B;;AAED,SAAS+/C,QAAT,CAAmBtiD,GAAnB,EAAwB;AACtB,MAAIuC,GAAG,GAAGy/C,QAAQ,CAAC5oC,KAAT,CAAe,IAAf,EAAqBmD,SAArB,CAAV;;AACA,MAAI,OAAOha,GAAP,KAAe,QAAnB,EAA6B,OAAOA,GAAP;AAE7B,QAAM,IAAI7F,KAAJ,CAAU6F,GAAV,CAAN;AACD;;AAED,SAASggD,OAAT,CAAkBhkC,IAAlB,EAAwBikC,MAAxB,EAAgCC,OAAhC,EAAyCpmB,GAAzC,EAA8C;AAC5C,MAAI3jB,KAAK,GAAG,CAAZ;AACA,MAAInK,IAAI,GAAG,CAAX;AACA,MAAIm0C,IAAI,GAAG,CAAC,KAAKD,OAAN,IAAiB,CAA5B;AAEA,MAAI1lC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAI9d,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsf,IAAI,CAAC9gB,MAAzB,EAAiC,EAAEwB,CAAnC,EAAsC;AACpCyZ,IAAAA,KAAK,GAAIA,KAAK,IAAI8pC,MAAV,GAAoBjkC,IAAI,CAACtf,CAAD,CAAhC;AACAsP,IAAAA,IAAI,IAAIi0C,MAAR;;AAEA,WAAOj0C,IAAI,IAAIk0C,OAAf,EAAwB;AACtBl0C,MAAAA,IAAI,IAAIk0C,OAAR;AACA1lC,MAAAA,MAAM,CAACjF,IAAP,CAAaY,KAAK,IAAInK,IAAV,GAAkBm0C,IAA9B;AACD;AACF;;AAED,MAAIrmB,GAAJ,EAAS;AACP,QAAI9tB,IAAI,GAAG,CAAX,EAAc;AACZwO,MAAAA,MAAM,CAACjF,IAAP,CAAaY,KAAK,IAAK+pC,OAAO,GAAGl0C,IAArB,GAA8Bm0C,IAA1C;AACD;AACF,GAJD,MAIO;AACL,QAAIn0C,IAAI,IAAIi0C,MAAZ,EAAoB,OAAO,gBAAP;AACpB,QAAK9pC,KAAK,IAAK+pC,OAAO,GAAGl0C,IAArB,GAA8Bm0C,IAAlC,EAAwC,OAAO,kBAAP;AACzC;;AAED,SAAO3lC,MAAP;AACD;;AAED,SAAS4lC,aAAT,CAAwBxjC,KAAxB,EAA+B;AAC7B,MAAI5c,GAAG,GAAGggD,OAAO,CAACpjC,KAAD,EAAQ,CAAR,EAAW,CAAX,EAAc,IAAd,CAAjB;AACA,MAAIphB,KAAK,CAACC,OAAN,CAAcuE,GAAd,CAAJ,EAAwB,OAAOA,GAAP;AACzB;;AAED,SAASqgD,OAAT,CAAkBzjC,KAAlB,EAAyB;AACvB,MAAI5c,GAAG,GAAGggD,OAAO,CAACpjC,KAAD,EAAQ,CAAR,EAAW,CAAX,EAAc,IAAd,CAAjB;AACA,MAAIphB,KAAK,CAACC,OAAN,CAAcuE,GAAd,CAAJ,EAAwB,OAAOA,GAAP;AAExB,QAAM,IAAI7F,KAAJ,CAAU6F,GAAV,CAAN;AACD;;AAED,SAASsgD,eAAT,CAA0BrlD,KAA1B,EAAiC;AAC/B,MAAI+E,GAAG,GAAGggD,OAAO,CAAC/kD,KAAD,EAAQ,CAAR,EAAW,CAAX,EAAc,KAAd,CAAjB;AACA,MAAIO,KAAK,CAACC,OAAN,CAAcuE,GAAd,CAAJ,EAAwB,OAAOA,GAAP;AACzB;;AAED,SAASugD,SAAT,CAAoBtlD,KAApB,EAA2B;AACzB,MAAI+E,GAAG,GAAGggD,OAAO,CAAC/kD,KAAD,EAAQ,CAAR,EAAW,CAAX,EAAc,KAAd,CAAjB;AACA,MAAIO,KAAK,CAACC,OAAN,CAAcuE,GAAd,CAAJ,EAAwB,OAAOA,GAAP;AAExB,QAAM,IAAI7F,KAAJ,CAAU6F,GAAV,CAAN;AACD;;AAED,IAAIwgD,MAAM,GAAG;AACXV,EAAAA,YAAY,EAAEA,YADH;AAEXn4B,EAAAA,MAAM,EAAEo4B,QAFG;AAGX54B,EAAAA,MAAM,EAAEo4B,QAHG;AAIXa,EAAAA,aAAa,EAAEA,aAJJ;AAKXC,EAAAA,OAAO,EAAEA,OALE;AAMXC,EAAAA,eAAe,EAAEA,eANN;AAOXC,EAAAA,SAAS,EAAEA;AAPA,CAAb;AAUA,MAAME,SAAS,GAAG,iBAAlB;AAGA,MAAMC,QAAQ,GAAG,IAAI3qC,MAAJ,CAAW0qC,SAAX,CAAjB;;AACA,MAAME,SAAN,CAAgB;AACZjmD,EAAAA,WAAW,GAAG;AACVgmD,IAAAA,QAAQ,CAAC5nC,QAAT,CAAkBuE,GAAG,CAACtE,MAAtB,EAA8B4nC,SAA9B;AACA,SAAKC,OAAL,GAAe,KAAKC,iBAAL,EAAf;AACH;;AACDA,EAAAA,iBAAiB,GAAG;AAChB,UAAMD,OAAO,GAAI,EAAjB;AACA,UAAM74B,OAAO,GAAG,KAAKA,OAAL,CAAa+4B,IAAb,CAAkB,IAAlB,CAAhB;AACA,UAAMC,SAAS,GAAG,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAlB;AACA,UAAMxtB,QAAQ,GAAG,KAAKA,QAAL,CAAcwtB,IAAd,CAAmB,IAAnB,CAAjB;AACA,UAAM9kC,IAAI,GAAG,KAAKA,IAAL,CAAU8kC,IAAV,CAAe,IAAf,CAAb;AACA,UAAMxwB,IAAI,GAAG,KAAKA,IAAL,CAAUwwB,IAAV,CAAe,IAAf,CAAb;AACA,UAAMjmC,GAAG,GAAG,KAAKA,GAAL,CAASimC,IAAT,CAAc,IAAd,CAAZ;AACA,UAAMlmD,MAAM,GAAG,KAAKA,MAAL,CAAYkmD,IAAZ,CAAiB,IAAjB,CAAf;AACA,UAAMzoD,IAAI,GAAG,KAAKA,IAAL,CAAUyoD,IAAV,CAAe,IAAf,CAAb;;AACA,UAAME,UAAU,GAAI3mC,CAAD,IAAO;AAAE,aAAO,KAAK2B,IAAL,CAAU3B,CAAV,EAAa,IAAb,CAAP;AAA4B,KAAxD;;AACAumC,IAAAA,OAAO,CAAC/3B,WAAR,GAAsB;AAClByH,MAAAA,IAAI,EAAEA,IADY;AAElBj4B,MAAAA,IAAI,EAAEA,IAFY;AAGlB29C,MAAAA,UAAU,EAAE2K,SAAS,CAACM,SAAV,CAAoB,KAAKjL,UAAL,CAAgB8K,IAAhB,CAAqB,IAArB,CAApB,EAAgD,IAAhD,CAHM;AAIlBI,MAAAA,SAAS,EAAEP,SAAS,CAACM,SAAV,CAAoB3wB,IAApB,EAA0B,IAA1B,CAJO;AAKlB6wB,MAAAA,WAAW,EAAER,SAAS,CAACM,SAAV,CAAoBrmD,MAApB,EAA4B,IAA5B,CALK;AAMlBwmD,MAAAA,gBAAgB,EAAET,SAAS,CAACM,SAAV,CAAoBrmD,MAApB,EAA4B,IAA5B,CANA;AAOlBymD,MAAAA,aAAa,EAAEV,SAAS,CAACM,SAAV,CAAoBrmD,MAApB,EAA4B,IAA5B,CAPG;AAQlB4e,MAAAA,IAAI,EAAEuO,OARY;AASlB;AACA;AACA+J,MAAAA,QAAQ,EAAE6uB,SAAS,CAACM,SAAV,CAAoBF,SAApB,CAXQ;AAYlB5uB,MAAAA,oBAAoB,EAAEwuB,SAAS,CAACM,SAAV,CAAoBF,SAApB,CAZJ;AAalB7uB,MAAAA,YAAY,EAAEyuB,SAAS,CAACM,SAAV,CAAoBF,SAApB,CAbI;AAclBxsB,MAAAA,QAAQ,EAAEwsB,SAdQ;AAelB3sB,MAAAA,EAAE,EAAEusB,SAAS,CAACM,SAAV,CAAoBl5B,OAApB,EAA6B,IAA7B,CAfc;AAgBlB5R,MAAAA,KAAK,EAAE4qC,SAhBW;AAiBlBj4B,MAAAA,KAAK,EAAEluB,MAjBW;AAkBlBohB,MAAAA,IAAI,EAAEA,IAlBY;AAmBlB1e,MAAAA,CAAC,EAAEqjD,SAAS,CAACM,SAAV,CAAoB,KAAKK,OAAzB,CAnBe;AAoBlB13C,MAAAA,CAAC,EAAE+2C,SAAS,CAACM,SAAV,CAAoB,KAAKK,OAAzB,CApBe;AAqBlBjnC,MAAAA,CAAC,EAAEsmC,SAAS,CAACM,SAAV,CAAoBrmD,MAApB,CArBe;AAsBlB2mD,MAAAA,OAAO,EAAEZ,SAAS,CAACM,SAAV,CAAoBl5B,OAApB,EAA6B,IAA7B,CAtBS;AAuBlB0uB,MAAAA,GAAG,EAAEkK,SAAS,CAACM,SAAV,CAAoBjlC,IAApB;AAvBa,KAAtB;AAyBA4kC,IAAAA,OAAO,CAACY,kBAAR,GAA6B;AACzBhoC,MAAAA,IAAI,EAAEmnC,SAAS,CAACM,SAAV,CAAoBl5B,OAApB,CADmB;AAEzBe,MAAAA,KAAK,EAAE63B,SAAS,CAACM,SAAV,CAAoBrmD,MAApB,CAFkB;AAGzB25B,MAAAA,QAAQ,EAAEosB,SAAS,CAACM,SAAV,CAAoBF,SAApB,CAHe;AAIzBjvB,MAAAA,QAAQ,EAAE6uB,SAAS,CAACM,SAAV,CAAoBF,SAApB,CAJe;AAKzB5uB,MAAAA,oBAAoB,EAAEwuB,SAAS,CAACM,SAAV,CAAoBF,SAApB,CALG;AAMzB7uB,MAAAA,YAAY,EAAEyuB,SAAS,CAACM,SAAV,CAAoBF,SAApB,CANW;AAOzB3sB,MAAAA,EAAE,EAAEusB,SAAS,CAACM,SAAV,CAAoBl5B,OAApB,CAPqB;AAQzB5R,MAAAA,KAAK,EAAEwqC,SAAS,CAACM,SAAV,CAAoBF,SAApB,CARkB;AASzB/kC,MAAAA,IAAI,EAAE2kC,SAAS,CAACM,SAAV,CAAoBD,UAApB,CATmB;AAUzB3oD,MAAAA,IAAI,EAAEsoD,SAAS,CAACM,SAAV,CAAoBrmD,MAApB,CAVmB;AAWzBo7C,MAAAA,UAAU,EAAE2K,SAAS,CAACM,SAAV,CAAoB,KAAKjL,UAAL,CAAgB8K,IAAhB,CAAqB,IAArB,CAApB,EAAgD,IAAhD;AAXa,KAA7B;AAaAF,IAAAA,OAAO,CAACa,UAAR,GAAqB;AACjBL,MAAAA,gBAAgB,EAAExmD,MADD;AAEjBumD,MAAAA,WAAW,EAAEvmD,MAFI;AAGjB8mD,MAAAA,eAAe,EAAEpxB,IAHA;AAIjBvI,MAAAA,OAAO,EAAEA,OAJQ;AAKjB45B,MAAAA,MAAM,EAAEhB,SAAS,CAACiB,OAAV,CAAkBtxB,IAAlB,CALS;AAMjBtU,MAAAA,IAAI,EAAEA,IANW;AAOjB6lC,MAAAA,QAAQ,EAAEjnD,MAPO;AAQjBsmD,MAAAA,SAAS,EAAE5wB;AARM,KAArB;AAUAswB,IAAAA,OAAO,CAACkB,OAAR,GAAkB;AACd1tB,MAAAA,EAAE,EAAEusB,SAAS,CAACM,SAAV,CAAoB,KAAKl5B,OAAzB,EAAkC,IAAlC,CADU;AAEdvO,MAAAA,IAAI,EAAEmnC,SAAS,CAACM,SAAV,CAAoB,KAAKl5B,OAAzB,EAAkC,IAAlC,CAFQ;AAGdg6B,MAAAA,eAAe,EAAEpB,SAAS,CAACM,SAAV,CAAoBl5B,OAApB,EAA6B,IAA7B,CAHH;AAIdq5B,MAAAA,gBAAgB,EAAExmD,MAJJ;AAKd;AACA4lB,MAAAA,IAAI,EAAEmgC,SAAS,CAACM,SAAV,CAAoBpmC,GAApB,CANQ;AAOdmnC,MAAAA,OAAO,EAAEjB,SAPK;AAQdkB,MAAAA,SAAS,EAAEtB,SAAS,CAACM,SAAV,CAAoBjlC,IAApB,CARG;AASdklC,MAAAA,SAAS,EAAE5wB,IATG;AAUdoxB,MAAAA,eAAe,EAAEpxB,IAVH;AAWd4xB,MAAAA,IAAI,EAAEvB,SAAS,CAACiB,OAAV,CAAkB,KAAKH,UAAL,CAAgBX,IAAhB,CAAqB,IAArB,CAAlB,CAXQ;AAYdK,MAAAA,WAAW,EAAEvmD,MAZC;AAadymD,MAAAA,aAAa,EAAEV,SAAS,CAACM,SAAV,CAAoBrmD,MAApB,EAA4B,IAA5B,CAbD;AAcdunD,MAAAA,iBAAiB,EAAEpB,SAdL;AAedqB,MAAAA,iBAAiB,EAAEzB,SAAS,CAACM,SAAV,CAAoBF,SAApB,CAfL;AAgBdvF,MAAAA,MAAM,EAAEmF,SAAS,CAACM,SAAV,CAAoBrmD,MAApB,CAhBM;AAiBdvC,MAAAA,IAAI,EAAEA;AAjBQ,KAAlB;AAmBAuoD,IAAAA,OAAO,CAACl+B,KAAR,GAAgB;AACZ4N,MAAAA,IAAI,EAAEA,IADM;AAEZ+xB,MAAAA,UAAU,EAAE/xB,IAFA;AAGZ11B,MAAAA,MAAM,EAAEA,MAHI;AAIZ0nD,MAAAA,SAAS,EAAE1nD,MAJC;AAKZkuB,MAAAA,KAAK,EAAE63B,SAAS,CAACM,SAAV,CAAoBpmC,GAApB,CALK;AAMZ0nC,MAAAA,UAAU,EAAE,KAAKA,UAAL,CAAgBzB,IAAhB,CAAqB,IAArB,CANA;AAOZvsB,MAAAA,QAAQ,EAAEwsB,SAPE;AAQZiB,MAAAA,OAAO,EAAEjB,SARG;AASZyB,MAAAA,KAAK,EAAEz6B,OATK;AAUZ06B,MAAAA,SAAS,EAAEzmC,IAVC;AAWZ0mC,MAAAA,YAAY,EAAE/B,SAAS,CAACM,SAAV,CAAoBN,SAAS,CAACiB,OAAV,CAAkBtxB,IAAlB,CAApB,CAXF;AAYZ8B,MAAAA,aAAa,EAAEuuB,SAAS,CAACM,SAAV,CAAoBF,SAApB;AAZH,KAAhB;AAcAH,IAAAA,OAAO,CAAC+B,qBAAR,GAAgC7iC,WAAW,CAAC8gC,OAAO,CAACl+B,KAAT,CAA3C;AACAk+B,IAAAA,OAAO,CAAC+B,qBAAR,CAA8BD,YAA9B,GAA6C/B,SAAS,CAACM,SAAV,CAAoBN,SAAS,CAACiB,OAAV,CAAkB,KAAKgB,mBAAL,CAAyB9B,IAAzB,CAA8B,IAA9B,CAAlB,CAApB,CAA7C;AACAF,IAAAA,OAAO,CAACrxB,MAAR,GAAiB;AACbszB,MAAAA,SAAS,EAAElC,SAAS,CAACM,SAAV,CAAoB3tB,QAApB,EAA8B5gB,SAA9B,CADE;AAEbowC,MAAAA,OAAO,EAAEnC,SAAS,CAACM,SAAV,CAAoB3tB,QAApB,EAA8B5gB,SAA9B,CAFI;AAGbwuC,MAAAA,SAAS,EAAEP,SAAS,CAACM,SAAV,CAAoB3wB,IAApB,EAA0B5d,SAA1B,CAHE;AAIbqV,MAAAA,OAAO,EAAE44B,SAAS,CAACM,SAAV,CAAoBl5B,OAApB,EAA6BrV,SAA7B,CAJI;AAKbivC,MAAAA,MAAM,EAAEhB,SAAS,CAACM,SAAV,CAAoB,KAAKU,MAAL,CAAYb,IAAZ,CAAiB,IAAjB,CAApB,EAA4CpuC,SAA5C;AALK,KAAjB;AAOAkuC,IAAAA,OAAO,CAACmC,SAAR,GAAoB;AAChB5B,MAAAA,WAAW,EAAER,SAAS,CAACM,SAAV,CAAoBrmD,MAApB,CADG;AAEhBsmD,MAAAA,SAAS,EAAEP,SAAS,CAACM,SAAV,CAAoB3wB,IAApB,CAFK;AAGhB8wB,MAAAA,gBAAgB,EAAExmD,MAHF;AAIhBooD,MAAAA,OAAO,EAAErC,SAAS,CAACM,SAAV,CAAoB,KAAKhhC,OAAL,CAAa6gC,IAAb,CAAkB,IAAlB,CAApB,CAJO;AAKhB/4B,MAAAA,OAAO,EAAEA,OALO;AAMhB/L,MAAAA,IAAI,EAAE2kC,SAAS,CAACsC,YAAV,CAAuBjnC,IAAvB,EAA6B,IAA7B,CANU;AAOhB2lC,MAAAA,MAAM,EAAEhB,SAAS,CAACiB,OAAV,CAAkBtxB,IAAlB,CAPQ;AAQhBoxB,MAAAA,eAAe,EAAEpxB,IARD;AAShBuxB,MAAAA,QAAQ,EAAEjnD;AATM,KAApB;AAWA,WAAOgmD,OAAP;AACH;;AACD5K,EAAAA,UAAU,CAACA,UAAD,EAAa;AACnB,WAAOJ,aAAa,CAACI,UAAU,IAAI,EAAf,CAApB;AACH,GAzHW,CA0HZ;AACA;;;AACAp7C,EAAAA,MAAM,CAACA,MAAD,EAAS;AACX,QAAIA,MAAM,KAAK,IAAf,EAAqB;AACjB,aAAO,CAAP;AACH;;AACD,WAAOuiB,SAAS,CAAC3D,IAAV,CAAe5e,MAAf,EAAuB2E,QAAvB,EAAP;AACH;;AACDlH,EAAAA,IAAI,CAACuC,MAAD,EAAS;AACT,QAAIA,MAAM,KAAK,IAAX,IAAmBA,MAAM,IAAI,IAAjC,EAAuC;AACnC,aAAO,CAAP;AACH;;AACD,WAAOuiB,SAAS,CAAC3D,IAAV,CAAe5e,MAAf,EAAuB2E,QAAvB,EAAP;AACH,GAvIW,CAwIZ;;;AACAwhD,EAAAA,SAAS,CAAC5qC,KAAD,EAAQ;AACb,WAAOgH,SAAS,CAAC3D,IAAV,CAAerD,KAAf,CAAP;AACH,GA3IW,CA4IZ;;;AACA8J,EAAAA,OAAO,CAAC9J,KAAD,EAAQ;AACX,QAAI,OAAQA,KAAR,KAAmB,SAAvB,EAAkC;AAC9B,aAAOA,KAAP;AACH;;AACD,QAAI,OAAQA,KAAR,KAAmB,QAAvB,EAAiC;AAC7BA,MAAAA,KAAK,GAAGA,KAAK,CAACM,WAAN,EAAR;;AACA,UAAIN,KAAK,KAAK,MAAd,EAAsB;AAClB,eAAO,IAAP;AACH;;AACD,UAAIA,KAAK,KAAK,OAAd,EAAuB;AACnB,eAAO,KAAP;AACH;AACJ;;AACD,UAAM,IAAIhc,KAAJ,CAAU,uBAAuBgc,KAAjC,CAAN;AACH;;AACD0E,EAAAA,GAAG,CAAC1E,KAAD,EAAQ+sC,MAAR,EAAgB;AACf,QAAI,OAAQ/sC,KAAR,KAAmB,QAAvB,EAAiC;AAC7B,UAAI,CAAC+sC,MAAD,IAAW/sC,KAAK,CAACyE,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,MAA0B,IAAzC,EAA+C;AAC3CzE,QAAAA,KAAK,GAAG,OAAOA,KAAf;AACH;;AACD,UAAIgE,WAAW,CAAChE,KAAD,CAAf,EAAwB;AACpB,eAAOA,KAAK,CAACM,WAAN,EAAP;AACH;AACJ;;AACD,WAAOiqC,QAAQ,CAAChqC,kBAAT,CAA4B,cAA5B,EAA4C,OAA5C,EAAqDP,KAArD,CAAP;AACH;;AACD6F,EAAAA,IAAI,CAAC7F,KAAD,EAAQ+sC,MAAR,EAAgB;AAChB,UAAM1oC,MAAM,GAAG,KAAKK,GAAL,CAAS1E,KAAT,EAAgB+sC,MAAhB,CAAf;;AACA,QAAK1oC,MAAM,CAACtf,MAAP,GAAgB,CAAjB,KAAwB,CAA5B,EAA+B;AAC3B,YAAM,IAAIf,KAAJ,CAAU,gCAAgCgc,KAA1C,CAAN;AACH;;AACD,WAAOqE,MAAP;AACH,GA7KW,CA8KZ;AACA;;;AACAuN,EAAAA,OAAO,CAAC5R,KAAD,EAAQ;AACX,WAAOwS,UAAU,CAACxS,KAAD,CAAjB;AACH;;AACDgtC,EAAAA,WAAW,CAAChtC,KAAD,EAAQ;AACf,QAAI,CAACgE,WAAW,CAAChE,KAAD,EAAQ,EAAR,CAAhB,EAA6B;AACzB,aAAO,IAAP;AACH;;AACD,UAAM4R,OAAO,GAAGY,UAAU,CAAC1M,YAAY,CAAC9F,KAAD,EAAQ,EAAR,CAAb,CAA1B;AACA,WAAQ4R,OAAO,KAAKgB,WAAb,GAA4B,IAA5B,GAAmChB,OAA1C;AACH;;AACDg6B,EAAAA,eAAe,CAAC5rC,KAAD,EAAQ;AACnB,WAAOyS,kBAAkB,CAACzS,KAAD,CAAzB;AACH,GA5LW,CA6LZ;;;AACAmd,EAAAA,QAAQ,CAACA,QAAD,EAAW;AACf,QAAIA,QAAQ,IAAI,IAAhB,EAAsB;AAClB,aAAO,QAAP;AACH;;AACD,QAAIA,QAAQ,KAAK,UAAjB,EAA6B;AACzB,aAAO,KAAP;AACH;;AACD,QAAIA,QAAQ,KAAK,QAAb,IAAyBA,QAAQ,KAAK,SAA1C,EAAqD;AACjD,aAAOA,QAAP;AACH;;AACD,QAAI,OAAQA,QAAR,KAAsB,QAAtB,IAAkCnZ,WAAW,CAACmZ,QAAD,CAAjD,EAA6D;AACzD,aAAOlX,QAAQ,CAACkX,QAAD,CAAf;AACH;;AACD,UAAM,IAAIn5B,KAAJ,CAAU,kBAAV,CAAN;AACH,GA5MW,CA6MZ;;;AACAm2B,EAAAA,IAAI,CAACna,KAAD,EAAQ+sC,MAAR,EAAgB;AAChB,UAAM1oC,MAAM,GAAG,KAAKK,GAAL,CAAS1E,KAAT,EAAgB+sC,MAAhB,CAAf;;AACA,QAAInnC,aAAa,CAACvB,MAAD,CAAb,KAA0B,EAA9B,EAAkC;AAC9B,aAAOkmC,QAAQ,CAAChqC,kBAAT,CAA4B,cAA5B,EAA4C,OAA5C,EAAqDP,KAArD,CAAP;AACH;;AACD,WAAOqE,MAAP;AACH,GApNW,CAqNZ;;;AACA+nC,EAAAA,UAAU,CAACpsC,KAAD,EAAQ;AACd,QAAIA,KAAK,IAAI,IAAb,EAAmB;AACf,aAAO,IAAP;AACH;;AACD,UAAMkE,CAAC,GAAG8C,SAAS,CAAC3D,IAAV,CAAerD,KAAf,CAAV;;AACA,QAAI;AACA,aAAOkE,CAAC,CAAC9a,QAAF,EAAP;AACH,KAFD,CAGA,OAAOwV,KAAP,EAAc,CAAG;;AACjB,WAAO,IAAP;AACH;;AACDusC,EAAAA,OAAO,CAACnrC,KAAD,EAAQ;AACX,QAAI,CAACgE,WAAW,CAAChE,KAAD,CAAhB,EAAyB;AACrB,YAAM,IAAIhc,KAAJ,CAAU,iBAAV,CAAN;AACH;;AACD,WAAOoiB,UAAU,CAACpG,KAAD,EAAQ,EAAR,CAAjB;AACH;;AACDitC,EAAAA,MAAM,CAACjtC,KAAD,EAAQktC,MAAR,EAAgB;AAClB,QAAIltC,KAAK,CAACmtC,MAAN,IAAgB,IAAhB,IAAwBntC,KAAK,CAACqsC,KAAN,IAAe,IAA3C,EAAiD;AAC7CrsC,MAAAA,KAAK,CAACqsC,KAAN,GAAcrsC,KAAK,CAACmtC,MAApB;AACH;;AACD,WAAO3C,SAAS,CAAC9B,KAAV,CAAgBwE,MAAhB,EAAwBltC,KAAxB,CAAP;AACH;;AACDuM,EAAAA,KAAK,CAACvM,KAAD,EAAQ;AACT,WAAO,KAAKitC,MAAL,CAAYjtC,KAAZ,EAAmB,KAAKyqC,OAAL,CAAal+B,KAAhC,CAAP;AACH;;AACDigC,EAAAA,qBAAqB,CAACxsC,KAAD,EAAQ;AACzB,WAAO,KAAKitC,MAAL,CAAYjtC,KAAZ,EAAmB,KAAKyqC,OAAL,CAAa+B,qBAAhC,CAAP;AACH,GAlPW,CAmPZ;;;AACAnB,EAAAA,kBAAkB,CAACrrC,KAAD,EAAQ;AACtB,WAAOwqC,SAAS,CAAC9B,KAAV,CAAgB,KAAK+B,OAAL,CAAaY,kBAA7B,EAAiDrrC,KAAjD,CAAP;AACH;;AACDysC,EAAAA,mBAAmB,CAAC/5B,WAAD,EAAc;AAC7B;AACA,QAAIA,WAAW,CAAC06B,GAAZ,IAAmB,IAAnB,IAA2B16B,WAAW,CAAC0L,QAAZ,IAAwB,IAAvD,EAA6D;AACzD1L,MAAAA,WAAW,CAAC0L,QAAZ,GAAuB1L,WAAW,CAAC06B,GAAnC;AACH,KAJ4B,CAK7B;AACA;;;AACA,QAAI16B,WAAW,CAACuL,EAAZ,IAAkBjX,SAAS,CAAC3D,IAAV,CAAeqP,WAAW,CAACuL,EAA3B,EAA+Bh1B,MAA/B,EAAtB,EAA+D;AAC3DypB,MAAAA,WAAW,CAACuL,EAAZ,GAAiB,4CAAjB;AACH,KAT4B,CAU7B;;;AACA,QAAIvL,WAAW,CAACjW,KAAZ,IAAqB,IAArB,IAA6BiW,WAAW,CAAC7M,IAAZ,IAAoB,IAArD,EAA2D;AACvD6M,MAAAA,WAAW,CAAC7M,IAAZ,GAAmB6M,WAAW,CAACjW,KAA/B;AACH,KAb4B,CAc7B;;;AACA,QAAIiW,WAAW,CAACuL,EAAZ,IAAkB,IAAlB,IAA0BvL,WAAW,CAAC04B,OAAZ,IAAuB,IAArD,EAA2D;AACvD14B,MAAAA,WAAW,CAAC04B,OAAZ,GAAsB,KAAKQ,eAAL,CAAqBl5B,WAArB,CAAtB;AACH;;AACD,QAAI,CAACA,WAAW,CAACxwB,IAAZ,KAAqB,CAArB,IAA0BwwB,WAAW,CAACxwB,IAAZ,KAAqB,CAAhD,KAAsDwwB,WAAW,CAACmtB,UAAZ,IAA0B,IAApF,EAA0F;AACtFntB,MAAAA,WAAW,CAACmtB,UAAZ,GAAyB,EAAzB;AACH;;AACD,UAAMx7B,MAAM,GAAGmmC,SAAS,CAAC9B,KAAV,CAAgB,KAAK+B,OAAL,CAAa/3B,WAA7B,EAA0CA,WAA1C,CAAf;;AACA,QAAIA,WAAW,CAACoF,OAAZ,IAAuB,IAA3B,EAAiC;AAC7B,UAAIA,OAAO,GAAGpF,WAAW,CAACoF,OAA1B;;AACA,UAAI9T,WAAW,CAAC8T,OAAD,CAAf,EAA0B;AACtBA,QAAAA,OAAO,GAAG9Q,SAAS,CAAC3D,IAAV,CAAeyU,OAAf,EAAwB1uB,QAAxB,EAAV;AACH;;AACDib,MAAAA,MAAM,CAACyT,OAAP,GAAiBA,OAAjB;AACH,KAND,MAOK;AACD,UAAIA,OAAO,GAAGpF,WAAW,CAAC26B,SAA1B,CADC,CAED;;AACA,UAAIv1B,OAAO,IAAI,IAAX,IAAmBzT,MAAM,CAACH,CAAP,IAAY,IAAnC,EAAyC;AACrC4T,QAAAA,OAAO,GAAGpF,WAAW,CAACoF,OAAtB;AACH;;AACD,UAAI9T,WAAW,CAAC8T,OAAD,CAAf,EAA0B;AACtBA,QAAAA,OAAO,GAAG9Q,SAAS,CAAC3D,IAAV,CAAeyU,OAAf,EAAwB1uB,QAAxB,EAAV;AACH;;AACD,UAAI,OAAQ0uB,OAAR,KAAqB,QAArB,IAAiCzT,MAAM,CAACH,CAAP,IAAY,IAAjD,EAAuD;AACnD4T,QAAAA,OAAO,GAAG,CAACzT,MAAM,CAACH,CAAP,GAAW,EAAZ,IAAkB,CAA5B;;AACA,YAAI4T,OAAO,GAAG,CAAd,EAAiB;AACbA,UAAAA,OAAO,GAAG,CAAV;AACH;;AACDA,QAAAA,OAAO,GAAGvT,QAAQ,CAACuT,OAAD,CAAlB;AACH;;AACD,UAAI,OAAQA,OAAR,KAAqB,QAAzB,EAAmC;AAC/BA,QAAAA,OAAO,GAAG,CAAV;AACH;;AACDzT,MAAAA,MAAM,CAACyT,OAAP,GAAiBA,OAAjB;AACH,KAjD4B,CAkD7B;;;AACA,QAAIzT,MAAM,CAAC0mC,SAAP,IAAoB1mC,MAAM,CAAC0mC,SAAP,CAAiB/kD,OAAjB,CAAyB,IAAzB,EAA+B,EAA/B,MAAuC,GAA/D,EAAoE;AAChEqe,MAAAA,MAAM,CAAC0mC,SAAP,GAAmB,IAAnB;AACH;;AACD,WAAO1mC,MAAP;AACH;;AACDqO,EAAAA,WAAW,CAAC1S,KAAD,EAAQ;AACf,WAAOg0B,KAAK,CAACh0B,KAAD,CAAZ;AACH;;AACDsrC,EAAAA,UAAU,CAACtrC,KAAD,EAAQ;AACd,WAAOwqC,SAAS,CAAC9B,KAAV,CAAgB,KAAK+B,OAAL,CAAaa,UAA7B,EAAyCtrC,KAAzC,CAAP;AACH;;AACD2rC,EAAAA,OAAO,CAAC3rC,KAAD,EAAQ;AACX,UAAMqE,MAAM,GAAGmmC,SAAS,CAAC9B,KAAV,CAAgB,KAAK+B,OAAL,CAAakB,OAA7B,EAAsC3rC,KAAtC,CAAf,CADW,CAEX;;AACA,QAAIqE,MAAM,CAACgG,IAAP,IAAe,IAAnB,EAAyB;AACrB,UAAIhG,MAAM,CAACgG,IAAP,CAAYtlB,MAAZ,IAAsB,CAA1B,EAA6B;AACzB;AACA,cAAMib,KAAK,GAAGgH,SAAS,CAAC3D,IAAV,CAAegB,MAAM,CAACgG,IAAtB,EAA4BjhB,QAA5B,EAAd;;AACA,YAAI4W,KAAK,KAAK,CAAV,IAAeA,KAAK,KAAK,CAA7B,EAAgC;AAC5B;AACA,cAAIqE,MAAM,CAACghC,MAAP,IAAiB,IAAjB,IAA0BhhC,MAAM,CAACghC,MAAP,KAAkBrlC,KAAhD,EAAwD;AACpDuqC,YAAAA,QAAQ,CAAChqC,kBAAT,CAA4B,iCAA5B,EAA+D,OAA/D,EAAwE;AAAE8J,cAAAA,IAAI,EAAEhG,MAAM,CAACgG,IAAf;AAAqBg7B,cAAAA,MAAM,EAAEhhC,MAAM,CAACghC;AAApC,aAAxE;AACH;;AACDhhC,UAAAA,MAAM,CAACghC,MAAP,GAAgBrlC,KAAhB;AACA,iBAAOqE,MAAM,CAACgG,IAAd;AACH,SAPD,MAQK;AACDkgC,UAAAA,QAAQ,CAAChqC,kBAAT,CAA4B,yBAA5B,EAAuD,YAAvD,EAAqE8D,MAAM,CAACgG,IAA5E;AACH;AACJ,OAdD,MAeK,IAAIhG,MAAM,CAACgG,IAAP,CAAYtlB,MAAZ,KAAuB,EAA3B,EAA+B;AAChC;AACAwlD,QAAAA,QAAQ,CAAChqC,kBAAT,CAA4B,mBAA5B,EAAiD,YAAjD,EAA+D8D,MAAM,CAACgG,IAAtE;AACH;AACJ;;AACD,QAAIhG,MAAM,CAACghC,MAAP,IAAiB,IAArB,EAA2B;AACvBhhC,MAAAA,MAAM,CAACipC,SAAP,GAAmB,IAAnB;AACH;;AACD,WAAOjpC,MAAP;AACH;;AACDmnC,EAAAA,MAAM,CAACxrC,KAAD,EAAQ;AACV,QAAI3a,KAAK,CAACC,OAAN,CAAc0a,KAAd,CAAJ,EAA0B;AACtB,aAAOA,KAAK,CAAC+E,GAAN,CAAWb,CAAD,IAAO,KAAKsnC,MAAL,CAAYtnC,CAAZ,CAAjB,CAAP;AACH,KAFD,MAGK,IAAIlE,KAAK,IAAI,IAAb,EAAmB;AACpB,aAAO,KAAKma,IAAL,CAAUna,KAAV,EAAiB,IAAjB,CAAP;AACH;;AACD,WAAO,IAAP;AACH;;AACDoZ,EAAAA,MAAM,CAACpZ,KAAD,EAAQ;AACV,WAAOwqC,SAAS,CAAC9B,KAAV,CAAgB,KAAK+B,OAAL,CAAarxB,MAA7B,EAAqCpZ,KAArC,CAAP;AACH;;AACD4sC,EAAAA,SAAS,CAAC5sC,KAAD,EAAQ;AACb,WAAOwqC,SAAS,CAAC9B,KAAV,CAAgB,KAAK+B,OAAL,CAAamC,SAA7B,EAAwC5sC,KAAxC,CAAP;AACH;;AACW,SAAL0oC,KAAK,CAACwE,MAAD,EAAS9nC,MAAT,EAAiB;AACzB,UAAMf,MAAM,GAAG,EAAf;;AACA,SAAK,MAAM9C,GAAX,IAAkB2rC,MAAlB,EAA0B;AACtB,UAAI;AACA,cAAMltC,KAAK,GAAGktC,MAAM,CAAC3rC,GAAD,CAAN,CAAY6D,MAAM,CAAC7D,GAAD,CAAlB,CAAd;;AACA,YAAIvB,KAAK,KAAKzD,SAAd,EAAyB;AACrB8H,UAAAA,MAAM,CAAC9C,GAAD,CAAN,GAAcvB,KAAd;AACH;AACJ,OALD,CAMA,OAAOpB,KAAP,EAAc;AACVA,QAAAA,KAAK,CAAC2uC,QAAN,GAAiBhsC,GAAjB;AACA3C,QAAAA,KAAK,CAAC4uC,UAAN,GAAmBpoC,MAAM,CAAC7D,GAAD,CAAzB;AACA,cAAM3C,KAAN;AACH;AACJ;;AACD,WAAOyF,MAAP;AACH,GAjXW,CAkXZ;;;AACgB,SAATymC,SAAS,CAACoC,MAAD,EAASO,SAAT,EAAoB;AAChC,WAAQ,UAAUztC,KAAV,EAAiB;AACrB,UAAIA,KAAK,IAAI,IAAb,EAAmB;AACf,eAAOytC,SAAP;AACH;;AACD,aAAOP,MAAM,CAACltC,KAAD,CAAb;AACH,KALD;AAMH,GA1XW,CA2XZ;;;AACmB,SAAZ8sC,YAAY,CAACI,MAAD,EAASQ,YAAT,EAAuB;AACtC,WAAQ,UAAU1tC,KAAV,EAAiB;AACrB,UAAI,CAACA,KAAL,EAAY;AACR,eAAO0tC,YAAP;AACH;;AACD,aAAOR,MAAM,CAACltC,KAAD,CAAb;AACH,KALD;AAMH,GAnYW,CAoYZ;;;AACc,SAAPyrC,OAAO,CAACyB,MAAD,EAAS;AACnB,WAAQ,UAAUvpC,KAAV,EAAiB;AACrB,UAAI,CAACte,KAAK,CAACC,OAAN,CAAcqe,KAAd,CAAL,EAA2B;AACvB,cAAM,IAAI3f,KAAJ,CAAU,cAAV,CAAN;AACH;;AACD,YAAMqgB,MAAM,GAAG,EAAf;AACAV,MAAAA,KAAK,CAAC1E,OAAN,CAAc,UAAUe,KAAV,EAAiB;AAC3BqE,QAAAA,MAAM,CAACjF,IAAP,CAAY8tC,MAAM,CAACltC,KAAD,CAAlB;AACH,OAFD;AAGA,aAAOqE,MAAP;AACH,KATD;AAUH;;AAhZW;;AAoZhB,IAAIspC,WAAW,GAAIpxC,SAAS,IAAIA,SAAS,CAAC4L,SAAxB,IAAsC,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACjG,WAASC,KAAT,CAAexI,KAAf,EAAsB;AAAE,WAAOA,KAAK,YAAYsI,CAAjB,GAAqBtI,KAArB,GAA6B,IAAIsI,CAAJ,CAAM,UAAUG,OAAV,EAAmB;AAAEA,MAAAA,OAAO,CAACzI,KAAD,CAAP;AAAiB,KAA5C,CAApC;AAAoF;;AAC5G,SAAO,KAAKsI,CAAC,KAAKA,CAAC,GAAGI,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;AACvD,aAASC,SAAT,CAAmB5I,KAAnB,EAA0B;AAAE,UAAI;AAAE6I,QAAAA,IAAI,CAACN,SAAS,CAACxL,IAAV,CAAeiD,KAAf,CAAD,CAAJ;AAA8B,OAApC,CAAqC,OAAOxe,CAAP,EAAU;AAAEmnB,QAAAA,MAAM,CAACnnB,CAAD,CAAN;AAAY;AAAE;;AAC3F,aAASsnB,QAAT,CAAkB9I,KAAlB,EAAyB;AAAE,UAAI;AAAE6I,QAAAA,IAAI,CAACN,SAAS,CAAC,OAAD,CAAT,CAAmBvI,KAAnB,CAAD,CAAJ;AAAkC,OAAxC,CAAyC,OAAOxe,CAAP,EAAU;AAAEmnB,QAAAA,MAAM,CAACnnB,CAAD,CAAN;AAAY;AAAE;;AAC9F,aAASqnB,IAAT,CAAcxE,MAAd,EAAsB;AAAEA,MAAAA,MAAM,CAAC0E,IAAP,GAAcN,OAAO,CAACpE,MAAM,CAACrE,KAAR,CAArB,GAAsCwI,KAAK,CAACnE,MAAM,CAACrE,KAAR,CAAL,CAAoBgJ,IAApB,CAAyBJ,SAAzB,EAAoCE,QAApC,CAAtC;AAAsF;;AAC9GD,IAAAA,IAAI,CAAC,CAACN,SAAS,GAAGA,SAAS,CAAC7H,KAAV,CAAgB0H,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDtL,IAAzD,EAAD,CAAJ;AACH,GALM,CAAP;AAMH,CARD;;AASA,MAAM6wC,QAAQ,GAAG,IAAIhuC,MAAJ,CAAW0qC,SAAX,CAAjB,C,CACA;AACA;;AACA,SAASuD,UAAT,CAAoBC,KAApB,EAA2B;AACvB,MAAIA,KAAK,IAAI,IAAb,EAAmB;AACf,WAAO,MAAP;AACH;;AACD,MAAIloC,aAAa,CAACkoC,KAAD,CAAb,KAAyB,EAA7B,EAAiC;AAC7BF,IAAAA,QAAQ,CAACrtC,kBAAT,CAA4B,eAA5B,EAA6C,OAA7C,EAAsDutC,KAAtD;AACH;;AACD,SAAOA,KAAK,CAACxtC,WAAN,EAAP;AACH;;AACD,SAASytC,eAAT,CAAyBvC,MAAzB,EAAiC;AAC7B;AACAA,EAAAA,MAAM,GAAGA,MAAM,CAAC5nC,KAAP,EAAT;;AACA,SAAO4nC,MAAM,CAACzmD,MAAP,GAAgB,CAAhB,IAAqBymD,MAAM,CAACA,MAAM,CAACzmD,MAAP,GAAgB,CAAjB,CAAN,IAA6B,IAAzD,EAA+D;AAC3DymD,IAAAA,MAAM,CAACwC,GAAP;AACH;;AACD,SAAOxC,MAAM,CAACzmC,GAAP,CAAY+oC,KAAD,IAAW;AACzB,QAAIzoD,KAAK,CAACC,OAAN,CAAcwoD,KAAd,CAAJ,EAA0B;AACtB;AACA,YAAMG,MAAM,GAAG,EAAf;AACAH,MAAAA,KAAK,CAAC7uC,OAAN,CAAe6uC,KAAD,IAAW;AACrBG,QAAAA,MAAM,CAACJ,UAAU,CAACC,KAAD,CAAX,CAAN,GAA4B,IAA5B;AACH,OAFD,EAHsB,CAMtB;;AACA,YAAMI,MAAM,GAAGruC,MAAM,CAACyB,IAAP,CAAY2sC,MAAZ,CAAf;AACAC,MAAAA,MAAM,CAACx0B,IAAP;AACA,aAAOw0B,MAAM,CAAC7uC,IAAP,CAAY,GAAZ,CAAP;AACH,KAVD,MAWK;AACD,aAAOwuC,UAAU,CAACC,KAAD,CAAjB;AACH;AACJ,GAfM,EAeJzuC,IAfI,CAeC,GAfD,CAAP;AAgBH;;AACD,SAAS8uC,iBAAT,CAA2BtoC,IAA3B,EAAiC;AAC7B,MAAIA,IAAI,KAAK,EAAb,EAAiB;AACb,WAAO,EAAP;AACH;;AACD,SAAOA,IAAI,CAACxJ,KAAL,CAAW,IAAX,EAAiB0I,GAAjB,CAAsB+oC,KAAD,IAAW;AACnC,QAAIA,KAAK,KAAK,EAAd,EAAkB;AACd,aAAO,EAAP;AACH;;AACD,UAAM/4B,KAAK,GAAG+4B,KAAK,CAACzxC,KAAN,CAAY,GAAZ,EAAiB0I,GAAjB,CAAsB+oC,KAAD,IAAW;AAC1C,aAASA,KAAK,KAAK,MAAX,GAAqB,IAArB,GAA4BA,KAApC;AACH,KAFa,CAAd;AAGA,WAAS/4B,KAAK,CAAChwB,MAAN,KAAiB,CAAlB,GAAuBgwB,KAAK,CAAC,CAAD,CAA5B,GAAkCA,KAA1C;AACH,GARM,CAAP;AASH;;AACD,SAASq5B,WAAT,CAAqBjyB,SAArB,EAAgC;AAC5B,MAAI,OAAQA,SAAR,KAAuB,QAA3B,EAAqC;AACjCA,IAAAA,SAAS,GAAGA,SAAS,CAAC7b,WAAV,EAAZ;;AACA,QAAIsF,aAAa,CAACuW,SAAD,CAAb,KAA6B,EAAjC,EAAqC;AACjC,aAAO,QAAQA,SAAf;AACH;;AACD,QAAIA,SAAS,CAAC9G,OAAV,CAAkB,GAAlB,MAA2B,CAAC,CAAhC,EAAmC;AAC/B,aAAO8G,SAAP;AACH;AACJ,GARD,MASK,IAAI92B,KAAK,CAACC,OAAN,CAAc62B,SAAd,CAAJ,EAA8B;AAC/B,WAAO,cAAc4xB,eAAe,CAAC5xB,SAAD,CAApC;AACH,GAFI,MAGA,IAAIb,SAAS,CAACC,WAAV,CAAsBY,SAAtB,CAAJ,EAAsC;AACvCyxB,IAAAA,QAAQ,CAAC9sC,IAAT,CAAc,iBAAd;AACA,UAAM,IAAI9c,KAAJ,CAAU,iBAAV,CAAN;AACH,GAHI,MAIA,IAAIm4B,SAAS,IAAI,OAAQA,SAAR,KAAuB,QAAxC,EAAkD;AACnD,WAAO,aAAaA,SAAS,CAACvK,OAAV,IAAqB,GAAlC,IAAyC,GAAzC,GAA+Cm8B,eAAe,CAAC5xB,SAAS,CAACqvB,MAAV,IAAoB,EAArB,CAArE;AACH;;AACD,QAAM,IAAIxnD,KAAJ,CAAU,qBAAqBm4B,SAA/B,CAAN;AACH,C,CACD;AACA;;;AACA,SAASkyB,OAAT,GAAmB;AACf,SAAQ,IAAIC,IAAJ,EAAD,CAAaD,OAAb,EAAP;AACH;;AACD,SAAS3G,KAAT,CAAe/B,QAAf,EAAyB;AACrB,SAAO,IAAIj9B,OAAJ,CAAaD,OAAD,IAAa;AAC5Bm9B,IAAAA,UAAU,CAACn9B,OAAD,EAAUk9B,QAAV,CAAV;AACH,GAFM,CAAP;AAGH,C,CACD;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM4I,cAAc,GAAG,CAAC,OAAD,EAAU,SAAV,EAAqB,SAArB,EAAgC,MAAhC,CAAvB;;AACA,MAAMC,KAAN,CAAY;AACRjqD,EAAAA,WAAW,CAACkqD,GAAD,EAAMryB,QAAN,EAAgBwsB,IAAhB,EAAsB;AAC7B1/B,IAAAA,cAAc,CAAC,IAAD,EAAO,KAAP,EAAculC,GAAd,CAAd;AACAvlC,IAAAA,cAAc,CAAC,IAAD,EAAO,UAAP,EAAmBkT,QAAnB,CAAd;AACAlT,IAAAA,cAAc,CAAC,IAAD,EAAO,MAAP,EAAe0/B,IAAf,CAAd;AACH;;AACQ,MAAL8F,KAAK,GAAG;AACR,YAAQ,KAAKxsD,IAAb;AACI,WAAK,IAAL;AACI,eAAO,KAAKi4B,IAAZ;;AACJ,WAAK,QAAL;AACI,eAAO,KAAKf,MAAZ;AAJR;;AAMA,WAAO,KAAKq1B,GAAZ;AACH;;AACO,MAAJvsD,IAAI,GAAG;AACP,WAAO,KAAKusD,GAAL,CAASpyC,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAP;AACH;;AACO,MAAJ8d,IAAI,GAAG;AACP,UAAMpF,KAAK,GAAG,KAAK05B,GAAL,CAASpyC,KAAT,CAAe,GAAf,CAAd;;AACA,QAAI0Y,KAAK,CAAC,CAAD,CAAL,KAAa,IAAjB,EAAuB;AACnB,aAAO,IAAP;AACH;;AACD,WAAOA,KAAK,CAAC,CAAD,CAAZ;AACH;;AACS,MAANqE,MAAM,GAAG;AACT,UAAMrE,KAAK,GAAG,KAAK05B,GAAL,CAASpyC,KAAT,CAAe,GAAf,CAAd;;AACA,QAAI0Y,KAAK,CAAC,CAAD,CAAL,KAAa,QAAjB,EAA2B;AACvB,aAAO,IAAP;AACH;;AACD,UAAMnD,OAAO,GAAGmD,KAAK,CAAC,CAAD,CAArB;AACA,UAAMy2B,MAAM,GAAG2C,iBAAiB,CAACp5B,KAAK,CAAC,CAAD,CAAN,CAAhC;AACA,UAAMqE,MAAM,GAAG,EAAf;;AACA,QAAIoyB,MAAM,CAACzmD,MAAP,GAAgB,CAApB,EAAuB;AACnBq0B,MAAAA,MAAM,CAACoyB,MAAP,GAAgBA,MAAhB;AACH;;AACD,QAAI55B,OAAO,IAAIA,OAAO,KAAK,GAA3B,EAAgC;AAC5BwH,MAAAA,MAAM,CAACxH,OAAP,GAAiBA,OAAjB;AACH;;AACD,WAAOwH,MAAP;AACH;;AACDu1B,EAAAA,QAAQ,GAAG;AACP,WAAQ,KAAKF,GAAL,CAASp5B,OAAT,CAAiB,GAAjB,KAAyB,CAAzB,IAA8Bk5B,cAAc,CAACl5B,OAAf,CAAuB,KAAKo5B,GAA5B,KAAoC,CAA1E;AACH;;AA3CO,C,CA6CZ;;;AACA,MAAMG,SAAS,GAAG;AACd,OAAK;AAAEC,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,KAAK,EAAE,IAAxB;AAA8BC,IAAAA,IAAI,EAAE,IAApC;AAA0C7F,IAAAA,MAAM,EAAE;AAAlD,GADS;AAEd,OAAK;AAAE2F,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,KAAK,EAAE,IAAxB;AAA8BC,IAAAA,IAAI,EAAE,IAApC;AAA0C7F,IAAAA,MAAM,EAAE;AAAlD,GAFS;AAGd,OAAK;AAAE2F,IAAAA,MAAM,EAAE,MAAV;AAAkBC,IAAAA,KAAK,EAAE,IAAzB;AAA+BC,IAAAA,IAAI,EAAE;AAArC,GAHS;AAId,QAAM;AAAEF,IAAAA,MAAM,EAAE,KAAV;AAAiBG,IAAAA,GAAG,EAAE;AAAtB,GAJQ;AAKd,QAAM;AAAEH,IAAAA,MAAM,EAAE,KAAV;AAAiBG,IAAAA,GAAG,EAAE;AAAtB,GALQ;AAMd,SAAO;AAAEH,IAAAA,MAAM,EAAE,MAAV;AAAkBG,IAAAA,GAAG,EAAE;AAAvB;AANO,CAAlB;;AAQA,SAASC,UAAT,CAAoBjvC,KAApB,EAA2B;AACvB,SAAOoG,UAAU,CAACY,SAAS,CAAC3D,IAAV,CAAerD,KAAf,EAAsByD,WAAtB,EAAD,EAAsC,EAAtC,CAAjB;AACH,C,CACD;;;AACA,SAASyrC,YAAT,CAAsBrpC,IAAtB,EAA4B;AACxB,SAAOs7B,MAAM,CAACnwB,MAAP,CAAcpM,MAAM,CAAC,CAACiB,IAAD,EAAOC,YAAY,CAACw7B,QAAQ,CAACA,QAAQ,CAACz7B,IAAD,CAAT,CAAT,EAA2B,CAA3B,EAA8B,CAA9B,CAAnB,CAAD,CAApB,CAAP;AACH;;AACD,MAAMspC,QAAN,CAAe;AACX5qD,EAAAA,WAAW,CAAC84B,QAAD,EAAWzL,OAAX,EAAoBtvB,IAApB,EAA0B;AACjC4mB,IAAAA,cAAc,CAAC,IAAD,EAAO,UAAP,EAAmBmU,QAAnB,CAAd;AACAnU,IAAAA,cAAc,CAAC,IAAD,EAAO,MAAP,EAAe5mB,IAAf,CAAd;AACA4mB,IAAAA,cAAc,CAAC,IAAD,EAAO,SAAP,EAAkBmU,QAAQ,CAAC+xB,SAAT,CAAmBx9B,OAAnB,CAA2BA,OAA3B,CAAlB,CAAd;AACH;;AACDy9B,EAAAA,WAAW,CAACC,QAAD,EAAWC,UAAX,EAAuB;AAC9B,WAAO5B,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD;AACA,YAAMj7B,WAAW,GAAG;AAChBuL,QAAAA,EAAE,EAAE,KAAKrM,OADO;AAEhB/L,QAAAA,IAAI,EAAEG,SAAS,CAAC,CAACspC,QAAD,EAAWt4B,QAAQ,CAAC,KAAK10B,IAAN,CAAnB,EAAiCitD,UAAU,IAAI,IAA/C,CAAD;AAFC,OAApB;;AAIA,UAAI;AACA,cAAMlrC,MAAM,GAAG,MAAM,KAAKgZ,QAAL,CAAc1gB,IAAd,CAAmB+V,WAAnB,CAArB;;AACA,YAAIrO,MAAM,KAAK,IAAf,EAAqB;AACjB,iBAAO,IAAP;AACH;;AACD,cAAMc,MAAM,GAAG6B,SAAS,CAAC3D,IAAV,CAAeyC,YAAY,CAACzB,MAAD,EAAS,CAAT,EAAY,EAAZ,CAA3B,EAA4Cjb,QAA5C,EAAf;AACA,cAAMrE,MAAM,GAAGiiB,SAAS,CAAC3D,IAAV,CAAeyC,YAAY,CAACzB,MAAD,EAASc,MAAT,EAAiBA,MAAM,GAAG,EAA1B,CAA3B,EAA0D/b,QAA1D,EAAf;AACA,eAAO0c,YAAY,CAACzB,MAAD,EAASc,MAAM,GAAG,EAAlB,EAAsBA,MAAM,GAAG,EAAT,GAAcpgB,MAApC,CAAnB;AACH,OARD,CASA,OAAO6Z,KAAP,EAAc;AACV,YAAIA,KAAK,CAACqC,IAAN,KAAerB,MAAM,CAACuB,MAAP,CAAcquC,cAAjC,EAAiD;AAC7C,iBAAO,IAAP;AACH;;AACD,eAAO,IAAP;AACH;AACJ,KArBiB,CAAlB;AAsBH;;AACDC,EAAAA,WAAW,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAC5B,UAAMC,QAAQ,GAAGhB,SAAS,CAACtvC,MAAM,CAACowC,QAAD,CAAP,CAA1B;;AACA,QAAIE,QAAQ,IAAI,IAAhB,EAAsB;AAClBhC,MAAAA,QAAQ,CAACjsC,UAAT,CAAqB,0BAAyB+tC,QAAS,EAAvD,EAA0D9vC,MAAM,CAACuB,MAAP,CAAcc,qBAAxE,EAA+F;AAC3FC,QAAAA,SAAS,EAAG,cAAawtC,QAAS;AADyD,OAA/F;AAGH;;AACD,QAAIE,QAAQ,CAACZ,GAAT,KAAiB,KAArB,EAA4B;AACxB,aAAO,KAAK3xB,QAAL,CAAc+xB,SAAd,CAAwBx9B,OAAxB,CAAgC+9B,QAAhC,CAAP;AACH;;AACD,UAAMlpC,KAAK,GAAGtC,QAAQ,CAACwrC,QAAD,CAAtB,CAV4B,CAW5B;;AACA,QAAIC,QAAQ,CAACd,KAAT,IAAkB,IAAtB,EAA4B;AACxB,YAAMA,KAAK,GAAGa,QAAQ,CAACnqC,KAAT,CAAe,2CAAf,CAAd;;AACA,UAAIspC,KAAJ,EAAW;AACP,cAAM/pD,MAAM,GAAGwf,QAAQ,CAACuqC,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAvB;;AACA,YAAIA,KAAK,CAAC,CAAD,CAAL,CAAS/pD,MAAT,KAAoBA,MAAM,GAAG,CAA7B,IAAkCA,MAAM,IAAI,CAA5C,IAAiDA,MAAM,IAAI,EAA/D,EAAmE;AAC/D,iBAAOmqD,YAAY,CAACtqC,MAAM,CAAC,CAAC,CAACgrC,QAAQ,CAACd,KAAV,CAAD,EAAoB,OAAOA,KAAK,CAAC,CAAD,CAAhC,CAAD,CAAP,CAAnB;AACH;AACJ;AACJ,KApB2B,CAqB5B;;;AACA,QAAIc,QAAQ,CAACb,IAAT,IAAiB,IAArB,EAA2B;AACvB,YAAMA,IAAI,GAAGY,QAAQ,CAACnqC,KAAT,CAAe,uCAAf,CAAb;;AACA,UAAIupC,IAAJ,EAAU;AACN,cAAMhqD,MAAM,GAAGwf,QAAQ,CAACwqC,IAAI,CAAC,CAAD,CAAL,EAAU,EAAV,CAAvB;;AACA,YAAIA,IAAI,CAAC,CAAD,CAAJ,CAAQhqD,MAAR,KAAmBA,MAAM,GAAG,CAA5B,IAAiCA,MAAM,IAAI,CAA3C,IAAgDA,MAAM,IAAI,EAA9D,EAAkE;AAC9D,iBAAOmqD,YAAY,CAACtqC,MAAM,CAAC,CAAC,CAACgrC,QAAQ,CAACb,IAAV,CAAD,EAAmB,OAAOA,IAAI,CAAC,CAAD,CAA9B,CAAD,CAAP,CAAnB;AACH;AACJ;AACJ,KA9B2B,CA+B5B;;;AACA,QAAIa,QAAQ,CAAC1G,MAAT,IAAmB,IAAvB,EAA6B;AACzB,YAAMnkD,MAAM,GAAG0hB,KAAK,CAAC,CAAD,CAApB,CADyB,CAEzB;;AACA,UAAIpI,OAAO,GAAGoI,KAAK,CAAC,CAAD,CAAnB;;AACA,UAAIpI,OAAO,KAAK,IAAhB,EAAsB;AAClB,YAAItZ,MAAM,KAAK,EAAX,IAAiBA,MAAM,KAAK,EAAhC,EAAoC;AAChCsZ,UAAAA,OAAO,GAAG,CAAC,CAAX;AACH;AACJ,OAJD,MAKK;AACDA,QAAAA,OAAO,GAAG,CAAC,CAAX;AACH;;AACD,UAAIA,OAAO,IAAI,CAAX,IAAgBoI,KAAK,CAAC1hB,MAAN,KAAiB,IAAIA,MAArC,IAA+CA,MAAM,IAAI,CAAzD,IAA8DA,MAAM,IAAI,EAA5E,EAAgF;AAC5E,cAAMD,KAAK,GAAGulD,MAAM,CAACH,OAAP,CAAezjC,KAAK,CAAC7C,KAAN,CAAY,CAAZ,CAAf,CAAd;AACA9e,QAAAA,KAAK,CAACwf,OAAN,CAAcjG,OAAd;AACA,eAAOgsC,MAAM,CAACr5B,MAAP,CAAc4+B,QAAQ,CAAC1G,MAAvB,EAA+BpkD,KAA/B,CAAP;AACH;AACJ;;AACD,WAAO,IAAP;AACH;;AACD0tB,EAAAA,UAAU,CAACk9B,QAAD,EAAW;AACjB,WAAO/B,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,UAAI+B,QAAQ,IAAI,IAAhB,EAAsB;AAClBA,QAAAA,QAAQ,GAAG,EAAX;AACH,OAHiD,CAIlD;;;AACA,UAAIA,QAAQ,KAAK,EAAjB,EAAqB;AACjB,YAAI;AACA;AACA,gBAAMh9B,WAAW,GAAG;AAChBuL,YAAAA,EAAE,EAAE,KAAKrM,OADO;AAEhB/L,YAAAA,IAAI,EAAG,eAAemR,QAAQ,CAAC,KAAK10B,IAAN,CAAR,CAAoBmiB,SAApB,CAA8B,CAA9B;AAFN,WAApB;AAIA,gBAAMkrC,QAAQ,GAAG,MAAM,KAAKtyB,QAAL,CAAc1gB,IAAd,CAAmB+V,WAAnB,CAAvB,CANA,CAOA;;AACA,cAAIi9B,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK78B,QAAtC,EAAgD;AAC5C,mBAAO,IAAP;AACH;;AACD,iBAAO,KAAKuK,QAAL,CAAc+xB,SAAd,CAAwBpC,WAAxB,CAAoC2C,QAApC,CAAP;AACH,SAZD,CAaA,OAAO/wC,KAAP,EAAc;AACV,cAAIA,KAAK,CAACqC,IAAN,KAAerB,MAAM,CAACuB,MAAP,CAAcquC,cAAjC,EAAiD;AAC7C,mBAAO,IAAP;AACH;;AACD,gBAAM5wC,KAAN;AACH;AACJ,OAzBiD,CA0BlD;;;AACA,YAAM+wC,QAAQ,GAAG,MAAM,KAAKN,WAAL,CAAiB,YAAjB,EAA+BJ,UAAU,CAACS,QAAD,CAAzC,CAAvB,CA3BkD,CA4BlD;;AACA,UAAIC,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,KAAK,IAArC,EAA2C;AACvC,eAAO,IAAP;AACH,OA/BiD,CAgClD;;;AACA,YAAM/9B,OAAO,GAAG,KAAK69B,WAAL,CAAiBC,QAAjB,EAA2BC,QAA3B,CAAhB;;AACA,UAAI/9B,OAAO,IAAI,IAAf,EAAqB;AACjBg8B,QAAAA,QAAQ,CAACjsC,UAAT,CAAqB,kCAArB,EAAwD/B,MAAM,CAACuB,MAAP,CAAcc,qBAAtE,EAA6F;AACzFC,UAAAA,SAAS,EAAG,cAAawtC,QAAS,GADuD;AAEzFA,UAAAA,QAAQ,EAAEA,QAF+E;AAGzF7pC,UAAAA,IAAI,EAAE8pC;AAHmF,SAA7F;AAKH;;AACD,aAAO/9B,OAAP;AACH,KA1CiB,CAAlB;AA2CH;;AACDi+B,EAAAA,cAAc,GAAG;AACb,WAAOlC,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD;AACA,YAAMgC,QAAQ,GAAG,MAAM,KAAKN,WAAL,CAAiB,YAAjB,CAAvB,CAFkD,CAGlD;;AACA,UAAIM,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,KAAK,IAArC,EAA2C;AACvC,eAAO,IAAP;AACH,OANiD,CAOlD;;;AACA,YAAMG,IAAI,GAAGH,QAAQ,CAACnqC,KAAT,CAAe,+DAAf,CAAb;;AACA,UAAIsqC,IAAJ,EAAU;AACN,cAAM/qD,MAAM,GAAGwf,QAAQ,CAACurC,IAAI,CAAC,CAAD,CAAL,EAAU,EAAV,CAAvB;;AACA,YAAIA,IAAI,CAAC,CAAD,CAAJ,CAAQ/qD,MAAR,KAAmBA,MAAM,GAAG,CAAhC,EAAmC;AAC/B,iBAAO,aAAao8C,MAAM,CAACnwB,MAAP,CAAc,OAAO8+B,IAAI,CAAC,CAAD,CAAzB,CAApB;AACH;AACJ,OAdiD,CAelD;;;AACA,YAAMC,KAAK,GAAGJ,QAAQ,CAACnqC,KAAT,CAAe,+BAAf,CAAd;;AACA,UAAIuqC,KAAJ,EAAW;AACP,YAAIA,KAAK,CAAC,CAAD,CAAL,CAAShrD,MAAT,KAAqB,KAAK,CAA9B,EAAkC;AAC9B,iBAAO,YAAYgrD,KAAK,CAAC,CAAD,CAAxB;AACH;AACJ;;AACD,aAAOnC,QAAQ,CAACjsC,UAAT,CAAqB,0CAArB,EAAgE/B,MAAM,CAACuB,MAAP,CAAcc,qBAA9E,EAAqG;AACxGC,QAAAA,SAAS,EAAE,kBAD6F;AAExG2D,QAAAA,IAAI,EAAE8pC;AAFkG,OAArG,CAAP;AAIH,KA1BiB,CAAlB;AA2BH;;AACDK,EAAAA,OAAO,CAACzuC,GAAD,EAAM;AACT,WAAOosC,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD;AACA,UAAIsC,QAAQ,GAAG57B,WAAW,CAAC9S,GAAD,CAA1B,CAFkD,CAGlD;AACA;;AACA0uC,MAAAA,QAAQ,GAAGrrC,MAAM,CAAC,CAACqqC,UAAU,CAAC,EAAD,CAAX,EAAiBA,UAAU,CAACgB,QAAQ,CAAClrD,MAAV,CAA3B,EAA8CkrD,QAA9C,CAAD,CAAjB,CALkD,CAMlD;;AACA,UAAKA,QAAQ,CAAClrD,MAAT,GAAkB,EAAnB,KAA2B,CAA/B,EAAkC;AAC9BkrD,QAAAA,QAAQ,GAAGrrC,MAAM,CAAC,CAACqrC,QAAD,EAAW7pC,UAAU,CAAC,IAAD,EAAO,KAAM7E,GAAG,CAACxc,MAAJ,GAAa,EAA1B,CAArB,CAAD,CAAjB;AACH;;AACD,YAAM4qD,QAAQ,GAAG,MAAM,KAAKN,WAAL,CAAiB,YAAjB,EAA+B3pC,OAAO,CAACuqC,QAAD,CAAtC,CAAvB;;AACA,UAAIN,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,KAAK,IAArC,EAA2C;AACvC,eAAO,IAAP;AACH;;AACD,aAAOj7B,YAAY,CAACi7B,QAAD,CAAnB;AACH,KAfiB,CAAlB;AAgBH;;AA7KU;;AA+Kf,IAAIO,gBAAgB,GAAG,IAAvB;AACA,IAAIC,UAAU,GAAG,CAAjB;;AACA,MAAMC,YAAN,SAA2B30B,QAA3B,CAAoC;AAChC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIl3B,EAAAA,WAAW,CAACw5B,OAAD,EAAU;AACjB6vB,IAAAA,QAAQ,CAACjrC,QAAT,CAAkBuE,GAAG,CAACtE,MAAtB,EAA8B6Y,QAA9B;AACA,YAFiB,CAGjB;;AACA,SAAK40B,OAAL,GAAe,EAAf;AACA,SAAKC,QAAL,GAAgB;AAAE/jC,MAAAA,KAAK,EAAE,CAAC;AAAV,KAAhB;AACA,SAAK6iC,SAAL,GAAiBloC,GAAG,CAACtE,MAAJ,CAAW2tC,YAAX,EAAjB,CANiB,CAOjB;AACA;AACA;;AACArnC,IAAAA,cAAc,CAAC,IAAD,EAAO,YAAP,EAAsB6U,OAAO,KAAK,KAAlC,CAAd;;AACA,QAAI,KAAKyyB,UAAT,EAAqB;AACjBzyB,MAAAA,OAAO,GAAG,KAAK0yB,aAAL,EAAV;AACH;;AACD,QAAI1yB,OAAO,YAAYrV,OAAvB,EAAgC;AAC5B,WAAKgoC,eAAL,GAAuB3yB,OAAvB,CAD4B,CAE5B;;AACAA,MAAAA,OAAO,CAACjC,KAAR,CAAeld,KAAD,IAAW,CAAG,CAA5B,EAH4B,CAI5B;;AACA,WAAK+xC,MAAL,GAAc70B,KAAd,CAAqBld,KAAD,IAAW,CAAG,CAAlC;AACH,KAND,MAOK;AACD,YAAMgyC,YAAY,GAAGznC,SAAS,CAAEjC,GAAG,CAACtE,MAAN,EAAe,YAAf,CAAT,CAAsCmb,OAAtC,CAArB;;AACA,UAAI6yB,YAAJ,EAAkB;AACd1nC,QAAAA,cAAc,CAAC,IAAD,EAAO,UAAP,EAAmB0nC,YAAnB,CAAd;AACA,aAAKC,IAAL,CAAU,SAAV,EAAqBD,YAArB,EAAmC,IAAnC;AACH,OAHD,MAIK;AACDhD,QAAAA,QAAQ,CAACrtC,kBAAT,CAA4B,iBAA5B,EAA+C,SAA/C,EAA0Dwd,OAA1D;AACH;AACJ;;AACD,SAAK+yB,uBAAL,GAA+B,CAAC,IAAhC;AACA,SAAKC,gBAAL,GAAwB,CAAC,CAAzB;AACA,SAAKC,gBAAL,GAAwB,IAAxB;AACA,SAAKC,cAAL,GAAsB,CAAtB;AACH;;AACDN,EAAAA,MAAM,GAAG;AACL,WAAOhD,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,UAAI,KAAKuD,QAAL,IAAiB,IAArB,EAA2B;AACvB,YAAInzB,OAAO,GAAG,IAAd;;AACA,YAAI,KAAK2yB,eAAT,EAA0B;AACtB,cAAI;AACA3yB,YAAAA,OAAO,GAAG,MAAM,KAAK2yB,eAArB;AACH,WAFD,CAGA,OAAO9xC,KAAP,EAAc,CAAG;AACpB,SAPsB,CAQvB;;;AACA,YAAImf,OAAO,IAAI,IAAf,EAAqB;AACjBA,UAAAA,OAAO,GAAG,MAAM,KAAK0yB,aAAL,EAAhB;AACH,SAXsB,CAYvB;AACA;;;AACA,YAAI,CAAC1yB,OAAL,EAAc;AACV6vB,UAAAA,QAAQ,CAACjsC,UAAT,CAAoB,qBAApB,EAA2C/B,MAAM,CAACuB,MAAP,CAAcC,aAAzD,EAAwE,EAAxE;AACH,SAhBsB,CAiBvB;;;AACA,YAAI,KAAK8vC,QAAL,IAAiB,IAArB,EAA2B;AACvB,cAAI,KAAKV,UAAT,EAAqB;AACjB,iBAAKU,QAAL,GAAgBnzB,OAAhB;AACH,WAFD,MAGK;AACD7U,YAAAA,cAAc,CAAC,IAAD,EAAO,UAAP,EAAmB6U,OAAnB,CAAd;AACH;;AACD,eAAK8yB,IAAL,CAAU,SAAV,EAAqB9yB,OAArB,EAA8B,IAA9B;AACH;AACJ;;AACD,aAAO,KAAKmzB,QAAZ;AACH,KA9BiB,CAAlB;AA+BH,GA9E+B,CA+EhC;AACA;AACA;;;AACS,MAALC,KAAK,GAAG;AACR,WAAO7I,IAAI,CAAC,MAAM;AACd,aAAO,KAAKqI,MAAL,GAAc3nC,IAAd,CAAoB+U,OAAD,IAAa;AACnC,eAAOA,OAAP;AACH,OAFM,EAEHnf,KAAD,IAAW;AACV;AACA,YAAIA,KAAK,CAACqC,IAAN,KAAerB,MAAM,CAACuB,MAAP,CAAciwC,aAA7B,IAA8CxyC,KAAK,CAAC8vC,KAAN,KAAgB,WAAlE,EAA+E;AAC3E,iBAAOnyC,SAAP;AACH;;AACD,cAAMqC,KAAN;AACH,OARM,CAAP;AASH,KAVU,CAAX;AAWH,GA9F+B,CA+FhC;;;AACmB,SAAZ2xC,YAAY,GAAG;AAClB,QAAIL,gBAAgB,IAAI,IAAxB,EAA8B;AAC1BA,MAAAA,gBAAgB,GAAG,IAAI1F,SAAJ,EAAnB;AACH;;AACD,WAAO0F,gBAAP;AACH,GArG+B,CAsGhC;;;AACiB,SAAVlyB,UAAU,CAACD,OAAD,EAAU;AACvB,WAAOC,UAAU,CAAED,OAAO,IAAI,IAAZ,GAAoB,WAApB,GAAkCA,OAAnC,CAAjB;AACH,GAzG+B,CA0GhC;AACA;;;AACAszB,EAAAA,uBAAuB,CAACC,MAAD,EAAS;AAC5B,WAAO3D,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,YAAM,KAAKgD,MAAL,EAAN,CADkD,CAElD;;AACA,UAAIW,MAAM,GAAG,CAAb,EAAgB;AACZ;AACA,eAAO,KAAKC,oBAAZ,EAAkC;AAC9B;AACA,gBAAMC,mBAAmB,GAAG,KAAKD,oBAAjC;;AACA,cAAI;AACA;AACA,kBAAMltC,MAAM,GAAG,MAAMmtC,mBAArB;;AACA,gBAAKnD,OAAO,KAAKhqC,MAAM,CAACotC,QAApB,IAAiCH,MAArC,EAA6C;AACzC,qBAAOjtC,MAAM,CAAC2mC,WAAd;AACH,aALD,CAMA;;;AACA;AACH,WARD,CASA,OAAOpsC,KAAP,EAAc;AACV;AACA;AACA;AACA;AACA,gBAAI,KAAK2yC,oBAAL,KAA8BC,mBAAlC,EAAuD;AACnD;AACH;AACJ;AACJ;AACJ;;AACD,YAAME,OAAO,GAAGrD,OAAO,EAAvB;AACA,YAAMsD,wBAAwB,GAAGtoC,iBAAiB,CAAC;AAC/C2hC,QAAAA,WAAW,EAAE,KAAK4G,OAAL,CAAa,gBAAb,EAA+B,EAA/B,CADkC;AAE/CC,QAAAA,YAAY,EAAE,KAAK7zB,UAAL,GAAkBhV,IAAlB,CAAwB+U,OAAD,IAAc,IAArC,EAA6Cnf,KAAD,IAAYA,KAAxD;AAFiC,OAAD,CAAjB,CAG9BoK,IAH8B,CAGzB,CAAC;AAAEgiC,QAAAA,WAAF;AAAe6G,QAAAA;AAAf,OAAD,KAAmC;AACvC,YAAIA,YAAJ,EAAkB;AACd;AACA,cAAI,KAAKN,oBAAL,KAA8BI,wBAAlC,EAA4D;AACxD,iBAAKJ,oBAAL,GAA4B,IAA5B;AACH;;AACD,gBAAMM,YAAN;AACH;;AACD,cAAMJ,QAAQ,GAAGpD,OAAO,EAAxB;AACArD,QAAAA,WAAW,GAAGhkC,SAAS,CAAC3D,IAAV,CAAe2nC,WAAf,EAA4B5hD,QAA5B,EAAd;;AACA,YAAI4hD,WAAW,GAAG,KAAK8F,uBAAvB,EAAgD;AAC5C9F,UAAAA,WAAW,GAAG,KAAK8F,uBAAnB;AACH;;AACD,aAAKA,uBAAL,GAA+B9F,WAA/B;;AACA,aAAK8G,mBAAL,CAAyB9G,WAAzB,EAduC,CAcA;;;AACvC,eAAO;AAAEA,UAAAA,WAAF;AAAe0G,UAAAA,OAAf;AAAwBD,UAAAA;AAAxB,SAAP;AACH,OAnBgC,CAAjC;AAoBA,WAAKF,oBAAL,GAA4BI,wBAA5B,CAjDkD,CAkDlD;;AACAA,MAAAA,wBAAwB,CAAC71B,KAAzB,CAAgCld,KAAD,IAAW;AACtC;AACA,YAAI,KAAK2yC,oBAAL,KAA8BI,wBAAlC,EAA4D;AACxD,eAAKJ,oBAAL,GAA4B,IAA5B;AACH;AACJ,OALD;AAMA,aAAO,CAAC,MAAMI,wBAAP,EAAiC3G,WAAxC;AACH,KA1DiB,CAAlB;AA2DH;;AACD1C,EAAAA,IAAI,GAAG;AACH,WAAOqF,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,YAAMoE,MAAM,GAAG5B,UAAU,EAAzB,CADkD,CAElD;;AACA,YAAM6B,OAAO,GAAG,EAAhB;AACA,UAAIhH,WAAW,GAAG,IAAlB;;AACA,UAAI;AACAA,QAAAA,WAAW,GAAG,MAAM,KAAKqG,uBAAL,CAA6B,MAAM,KAAKY,eAAL,GAAuB,CAA1D,CAApB;AACH,OAFD,CAGA,OAAOrzC,KAAP,EAAc;AACV,aAAKiyC,IAAL,CAAU,OAAV,EAAmBjyC,KAAnB;AACA;AACH;;AACD,WAAKkzC,mBAAL,CAAyB9G,WAAzB,EAZkD,CAalD;;;AACA,WAAK6F,IAAL,CAAU,MAAV,EAAkBkB,MAAlB,EAA0B/G,WAA1B,EAdkD,CAelD;;AACA,UAAIA,WAAW,KAAK,KAAK+F,gBAAzB,EAA2C;AACvC,aAAKF,IAAL,CAAU,SAAV,EAAqBkB,MAArB;AACA;AACH,OAnBiD,CAoBlD;;;AACA,UAAI,KAAKzB,QAAL,CAAc/jC,KAAd,KAAwB,CAAC,CAA7B,EAAgC;AAC5B,aAAK+jC,QAAL,CAAc/jC,KAAd,GAAsBy+B,WAAW,GAAG,CAApC;AACH;;AACD,UAAI3kD,IAAI,CAACyE,GAAL,CAAU,KAAKwlD,QAAL,CAAc/jC,KAAf,GAAwBy+B,WAAjC,IAAgD,IAApD,EAA0D;AACtD4C,QAAAA,QAAQ,CAAC9sC,IAAT,CAAe,+DAA8D,KAAKwvC,QAAL,CAAc/jC,KAAM,eAAcy+B,WAAY,GAA3H;AACA,aAAK6F,IAAL,CAAU,OAAV,EAAmBjD,QAAQ,CAAC5sC,SAAT,CAAmB,6BAAnB,EAAkDpB,MAAM,CAACuB,MAAP,CAAciwC,aAAhE,EAA+E;AAC9FpG,UAAAA,WAAW,EAAEA,WADiF;AAE9F0D,UAAAA,KAAK,EAAE,WAFuF;AAG9FwD,UAAAA,mBAAmB,EAAE,KAAK5B,QAAL,CAAc/jC;AAH2D,SAA/E,CAAnB;AAKA,aAAKskC,IAAL,CAAU,OAAV,EAAmB7F,WAAnB;AACH,OARD,MASK;AACD;AACA,aAAK,IAAIzkD,CAAC,GAAG,KAAK+pD,QAAL,CAAc/jC,KAAd,GAAsB,CAAnC,EAAsChmB,CAAC,IAAIykD,WAA3C,EAAwDzkD,CAAC,EAAzD,EAA6D;AACzD,eAAKsqD,IAAL,CAAU,OAAV,EAAmBtqD,CAAnB;AACH;AACJ,OAtCiD,CAuClD;;;AACA,UAAI,KAAK+pD,QAAL,CAAc/jC,KAAd,KAAwBy+B,WAA5B,EAAyC;AACrC,aAAKsF,QAAL,CAAc/jC,KAAd,GAAsBy+B,WAAtB;AACAnrC,QAAAA,MAAM,CAACyB,IAAP,CAAY,KAAKgvC,QAAjB,EAA2BrxC,OAA3B,CAAoCsC,GAAD,IAAS;AACxC;AACA,cAAIA,GAAG,KAAK,OAAZ,EAAqB;AACjB;AACH,WAJuC,CAKxC;;;AACA,gBAAM4wC,gBAAgB,GAAG,KAAK7B,QAAL,CAAc/uC,GAAd,CAAzB,CANwC,CAOxC;AACA;AACA;;AACA,cAAI4wC,gBAAgB,KAAK,SAAzB,EAAoC;AAChC;AACH,WAZuC,CAaxC;AACA;;;AACA,cAAInH,WAAW,GAAGmH,gBAAd,GAAiC,EAArC,EAAyC;AACrC,mBAAO,KAAK7B,QAAL,CAAc/uC,GAAd,CAAP;AACH;AACJ,SAlBD;AAmBH,OA7DiD,CA8DlD;;;AACA,UAAI,KAAKwvC,gBAAL,KAA0B,CAAC,CAA/B,EAAkC;AAC9B,aAAKA,gBAAL,GAAwB/F,WAAW,GAAG,CAAtC;AACH,OAjEiD,CAkElD;;;AACA,WAAKqF,OAAL,CAAapxC,OAAb,CAAsByvC,KAAD,IAAW;AAC5B,gBAAQA,KAAK,CAACxsD,IAAd;AACI,eAAK,IAAL;AAAW;AACP,oBAAMi4B,IAAI,GAAGu0B,KAAK,CAACv0B,IAAnB;AACA,kBAAIi4B,MAAM,GAAG,KAAKC,qBAAL,CAA2Bl4B,IAA3B,EAAiCnR,IAAjC,CAAuC2iC,OAAD,IAAa;AAC5D,oBAAI,CAACA,OAAD,IAAYA,OAAO,CAACX,WAAR,IAAuB,IAAvC,EAA6C;AACzC,yBAAO,IAAP;AACH;;AACD,qBAAKsF,QAAL,CAAc,OAAOn2B,IAArB,IAA6BwxB,OAAO,CAACX,WAArC;AACA,qBAAK6F,IAAL,CAAU12B,IAAV,EAAgBwxB,OAAhB;AACA,uBAAO,IAAP;AACH,eAPY,EAOV7vB,KAPU,CAOHld,KAAD,IAAW;AAAE,qBAAKiyC,IAAL,CAAU,OAAV,EAAmBjyC,KAAnB;AAA4B,eAPrC,CAAb;AAQAozC,cAAAA,OAAO,CAAC5yC,IAAR,CAAagzC,MAAb;AACA;AACH;;AACD,eAAK,QAAL;AAAe;AACX,oBAAMh5B,MAAM,GAAGs1B,KAAK,CAACt1B,MAArB;AACAA,cAAAA,MAAM,CAACszB,SAAP,GAAmB,KAAKqE,gBAAL,GAAwB,CAA3C;AACA33B,cAAAA,MAAM,CAACuzB,OAAP,GAAiB3B,WAAjB;AACA,oBAAMoH,MAAM,GAAG,KAAKE,OAAL,CAAal5B,MAAb,EAAqBpQ,IAArB,CAA2B+iC,IAAD,IAAU;AAC/C,oBAAIA,IAAI,CAAChnD,MAAL,KAAgB,CAApB,EAAuB;AACnB;AACH;;AACDgnD,gBAAAA,IAAI,CAAC9sC,OAAL,CAAcwB,GAAD,IAAS;AAClB,uBAAK6vC,QAAL,CAAc,OAAO7vC,GAAG,CAACsqC,SAAzB,IAAsCtqC,GAAG,CAACuqC,WAA1C;AACA,uBAAKsF,QAAL,CAAc,OAAO7vC,GAAG,CAAC8qC,eAAzB,IAA4C9qC,GAAG,CAACuqC,WAAhD;AACA,uBAAK6F,IAAL,CAAUz3B,MAAV,EAAkB3Y,GAAlB;AACH,iBAJD;AAKH,eATc,EASZqb,KATY,CASLld,KAAD,IAAW;AAAE,qBAAKiyC,IAAL,CAAU,OAAV,EAAmBjyC,KAAnB;AAA4B,eATnC,CAAf;AAUAozC,cAAAA,OAAO,CAAC5yC,IAAR,CAAagzC,MAAb;AACA;AACH;AA9BL;AAgCH,OAjCD;;AAkCA,WAAKrB,gBAAL,GAAwB/F,WAAxB,CArGkD,CAsGlD;;AACAtiC,MAAAA,OAAO,CAACc,GAAR,CAAYwoC,OAAZ,EAAqBhpC,IAArB,CAA0B,MAAM;AAC5B,aAAK6nC,IAAL,CAAU,SAAV,EAAqBkB,MAArB;AACH,OAFD,EAEGj2B,KAFH,CAEUld,KAAD,IAAW;AAAE,aAAKiyC,IAAL,CAAU,OAAV,EAAmBjyC,KAAnB;AAA4B,OAFlD;AAGA;AACH,KA3GiB,CAAlB;AA4GH,GAtR+B,CAuRhC;;;AACA2zC,EAAAA,gBAAgB,CAACvH,WAAD,EAAc;AAC1B,SAAK+F,gBAAL,GAAwB/F,WAAW,GAAG,CAAtC;;AACA,QAAI,KAAKwH,OAAT,EAAkB;AACd,WAAKlK,IAAL;AACH;AACJ;;AACU,MAAPvqB,OAAO,GAAG;AACV,WAAO,KAAKmzB,QAAZ;AACH,GAhS+B,CAiShC;AACA;;;AACAT,EAAAA,aAAa,GAAG;AACZ,WAAO9C,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,aAAOC,QAAQ,CAACjsC,UAAT,CAAoB,6CAApB,EAAmE/B,MAAM,CAACuB,MAAP,CAAcc,qBAAjF,EAAwG;AAC3GC,QAAAA,SAAS,EAAE;AADgG,OAAxG,CAAP;AAGH,KAJiB,CAAlB;AAKH;;AACD8b,EAAAA,UAAU,GAAG;AACT,WAAO2vB,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,YAAM5vB,OAAO,GAAG,MAAM,KAAK4yB,MAAL,EAAtB,CADkD,CAElD;AACA;AACA;;AACA,YAAM8B,cAAc,GAAG,MAAM,KAAKhC,aAAL,EAA7B;;AACA,UAAI1yB,OAAO,CAACjG,OAAR,KAAoB26B,cAAc,CAAC36B,OAAvC,EAAgD;AAC5C;AACA;AACA,YAAI,KAAK04B,UAAT,EAAqB;AACjB,eAAKU,QAAL,GAAgBuB,cAAhB,CADiB,CAEjB;;AACA,eAAK1B,gBAAL,GAAwB,CAAC,CAAzB;AACA,eAAK2B,gBAAL,GAAwB,IAAxB;AACA,eAAKC,uBAAL,GAA+B,IAA/B;AACA,eAAK1B,cAAL,GAAsB,CAAtB;AACA,eAAKX,QAAL,CAAc/jC,KAAd,GAAsB,CAAC,CAAvB;AACA,eAAKukC,uBAAL,GAA+B,CAAC,IAAhC;AACA,eAAKS,oBAAL,GAA4B,IAA5B,CATiB,CAUjB;AACA;AACA;;AACA,eAAKV,IAAL,CAAU,SAAV,EAAqB4B,cAArB,EAAqC10B,OAArC;AACA,gBAAM2pB,KAAK,CAAC,CAAD,CAAX;AACA,iBAAO,KAAKwJ,QAAZ;AACH;;AACD,cAAMtyC,KAAK,GAAGgvC,QAAQ,CAAC5sC,SAAT,CAAmB,4BAAnB,EAAiDpB,MAAM,CAACuB,MAAP,CAAciwC,aAA/D,EAA8E;AACxF1C,UAAAA,KAAK,EAAE,SADiF;AAExF3wB,UAAAA,OAAO,EAAEA,OAF+E;AAGxF60B,UAAAA,eAAe,EAAEH;AAHuE,SAA9E,CAAd;AAKA,aAAK5B,IAAL,CAAU,OAAV,EAAmBjyC,KAAnB;AACA,cAAMA,KAAN;AACH;;AACD,aAAOmf,OAAP;AACH,KAnCiB,CAAlB;AAoCH;;AACc,MAAXitB,WAAW,GAAG;AACd,SAAKqG,uBAAL,CAA6B,MAAM,KAAKY,eAAL,GAAuB,CAA1D,EAA6DjpC,IAA7D,CAAmEgiC,WAAD,IAAiB;AAC/E,WAAK8G,mBAAL,CAAyB9G,WAAzB;AACH,KAFD,EAEIpsC,KAAD,IAAW,CAAG,CAFjB;;AAGA,WAAQ,KAAK8zC,gBAAL,IAAyB,IAA1B,GAAkC,KAAKA,gBAAvC,GAA0D,CAAC,CAAlE;AACH;;AACU,MAAPF,OAAO,GAAG;AACV,WAAQ,KAAKK,OAAL,IAAgB,IAAxB;AACH;;AACU,MAAPL,OAAO,CAACxyC,KAAD,EAAQ;AACf,QAAIA,KAAK,IAAI,CAAC,KAAK6yC,OAAnB,EAA4B;AACxB,WAAKA,OAAL,GAAeC,WAAW,CAAC,MAAM;AAAE,aAAKxK,IAAL;AAAc,OAAvB,EAAyB,KAAK2J,eAA9B,CAA1B;;AACA,UAAI,CAAC,KAAKc,cAAV,EAA0B;AACtB,aAAKA,cAAL,GAAsBnN,UAAU,CAAC,MAAM;AACnC,eAAK0C,IAAL,GADmC,CAEnC;AACA;;AACA,eAAKyK,cAAL,GAAsBnN,UAAU,CAAC,MAAM;AACnC;AACA;AACA,gBAAI,CAAC,KAAKiN,OAAV,EAAmB;AACf,mBAAKvK,IAAL;AACH,aALkC,CAMnC;;;AACA,iBAAKyK,cAAL,GAAsB,IAAtB;AACH,WAR+B,EAQ7B,KAAKd,eARwB,CAAhC;AASH,SAb+B,EAa7B,CAb6B,CAAhC;AAcH;AACJ,KAlBD,MAmBK,IAAI,CAACjyC,KAAD,IAAU,KAAK6yC,OAAnB,EAA4B;AAC7BG,MAAAA,aAAa,CAAC,KAAKH,OAAN,CAAb;AACA,WAAKA,OAAL,GAAe,IAAf;AACH;AACJ;;AACkB,MAAfZ,eAAe,GAAG;AAClB,WAAO,KAAKjB,gBAAZ;AACH;;AACkB,MAAfiB,eAAe,CAACjyC,KAAD,EAAQ;AACvB,QAAI,OAAQA,KAAR,KAAmB,QAAnB,IAA+BA,KAAK,IAAI,CAAxC,IAA6CuE,QAAQ,CAACjF,MAAM,CAACU,KAAD,CAAP,CAAR,IAA2BA,KAA5E,EAAmF;AAC/E,YAAM,IAAIhc,KAAJ,CAAU,0BAAV,CAAN;AACH;;AACD,SAAKgtD,gBAAL,GAAwBhxC,KAAxB;;AACA,QAAI,KAAK6yC,OAAT,EAAkB;AACdG,MAAAA,aAAa,CAAC,KAAKH,OAAN,CAAb;AACA,WAAKA,OAAL,GAAeC,WAAW,CAAC,MAAM;AAAE,aAAKxK,IAAL;AAAc,OAAvB,EAAyB,KAAK0I,gBAA9B,CAA1B;AACH;AACJ;;AACDiC,EAAAA,mBAAmB,GAAG;AAClB,UAAMC,GAAG,GAAG7E,OAAO,EAAnB,CADkB,CAElB;;AACA,QAAK6E,GAAG,GAAG,KAAKjC,cAAZ,GAA8B,IAAI,KAAKD,gBAA3C,EAA6D;AACzD,WAAKC,cAAL,GAAsBiC,GAAtB;AACA,WAAKP,uBAAL,GAA+B,KAAKQ,cAAL,GAAsBnqC,IAAtB,CAA4BgiC,WAAD,IAAiB;AACvE,YAAI,KAAK0H,gBAAL,IAAyB,IAAzB,IAAiC1H,WAAW,GAAG,KAAK0H,gBAAxD,EAA0E;AACtE,eAAKA,gBAAL,GAAwB1H,WAAxB;AACH;;AACD,eAAO,KAAK0H,gBAAZ;AACH,OAL8B,CAA/B;AAMH;;AACD,WAAO,KAAKC,uBAAZ;AACH;;AACDb,EAAAA,mBAAmB,CAAC9G,WAAD,EAAc;AAC7B;AACA,QAAI,KAAK0H,gBAAL,IAAyB,IAAzB,IAAiC1H,WAAW,GAAG,KAAK0H,gBAAxD,EAA0E;AACtE;AACH,KAJ4B,CAK7B;;;AACA,SAAKzB,cAAL,GAAsB5C,OAAO,EAA7B,CAN6B,CAO7B;;AACA,QAAI,KAAKqE,gBAAL,IAAyB,IAAzB,IAAiC1H,WAAW,GAAG,KAAK0H,gBAAxD,EAA0E;AACtE,WAAKA,gBAAL,GAAwB1H,WAAxB;AACA,WAAK2H,uBAAL,GAA+BjqC,OAAO,CAACD,OAAR,CAAgBuiC,WAAhB,CAA/B;AACH;AACJ;;AACDoI,EAAAA,kBAAkB,CAAC7H,eAAD,EAAkBL,aAAlB,EAAiC3E,OAAjC,EAA0C;AACxD,WAAOoH,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,aAAO,KAAK0F,mBAAL,CAAyB9H,eAAzB,EAA2CL,aAAa,IAAI,IAAlB,GAA0B,CAA1B,GAA8BA,aAAxE,EAAuF3E,OAAO,IAAI,CAAlG,EAAqG,IAArG,CAAP;AACH,KAFiB,CAAlB;AAGH;;AACD8M,EAAAA,mBAAmB,CAAC9H,eAAD,EAAkBL,aAAlB,EAAiC3E,OAAjC,EAA0C+M,WAA1C,EAAuD;AACtE,WAAO3F,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,YAAMhC,OAAO,GAAG,MAAM,KAAK0G,qBAAL,CAA2B9G,eAA3B,CAAtB,CADkD,CAElD;;AACA,UAAI,CAACI,OAAO,GAAGA,OAAO,CAACT,aAAX,GAA2B,CAAnC,KAAyCA,aAA7C,EAA4D;AACxD,eAAOS,OAAP;AACH,OALiD,CAMlD;;;AACA,aAAO,IAAIjjC,OAAJ,CAAY,CAACD,OAAD,EAAUE,MAAV,KAAqB;AACpC,cAAM4qC,WAAW,GAAG,EAApB;AACA,YAAIxqC,IAAI,GAAG,KAAX;;AACA,cAAMyqC,WAAW,GAAG,YAAY;AAC5B,cAAIzqC,IAAJ,EAAU;AACN,mBAAO,IAAP;AACH;;AACDA,UAAAA,IAAI,GAAG,IAAP;AACAwqC,UAAAA,WAAW,CAACt0C,OAAZ,CAAqB6V,IAAD,IAAU;AAAEA,YAAAA,IAAI;AAAK,WAAzC;AACA,iBAAO,KAAP;AACH,SAPD;;AAQA,cAAM2+B,YAAY,GAAI9H,OAAD,IAAa;AAC9B,cAAIA,OAAO,CAACT,aAAR,GAAwBA,aAA5B,EAA2C;AACvC;AACH;;AACD,cAAIsI,WAAW,EAAf,EAAmB;AACf;AACH;;AACD/qC,UAAAA,OAAO,CAACkjC,OAAD,CAAP;AACH,SARD;;AASA,aAAKtvB,EAAL,CAAQkvB,eAAR,EAAyBkI,YAAzB;AACAF,QAAAA,WAAW,CAACn0C,IAAZ,CAAiB,MAAM;AAAE,eAAKkd,cAAL,CAAoBivB,eAApB,EAAqCkI,YAArC;AAAqD,SAA9E;;AACA,YAAIH,WAAJ,EAAiB;AACb,cAAII,eAAe,GAAGJ,WAAW,CAACK,UAAlC;AACA,cAAIC,YAAY,GAAG,IAAnB;;AACA,gBAAMC,cAAc,GAAI7I,WAAD,IAAiB2C,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AACnF,gBAAI5kC,IAAJ,EAAU;AACN;AACH,aAHkF,CAInF;AACA;AACA;;;AACA,kBAAM2+B,KAAK,CAAC,IAAD,CAAX;AACA,iBAAKpqB,mBAAL,CAAyBg2B,WAAW,CAACjwC,IAArC,EAA2C2F,IAA3C,CAAiD2J,KAAD,IAAWg7B,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AACtG,kBAAI5kC,IAAJ,EAAU;AACN;AACH;;AACD,kBAAI4J,KAAK,IAAI2gC,WAAW,CAAC3gC,KAAzB,EAAgC;AAC5B+gC,gBAAAA,eAAe,GAAG1I,WAAlB;AACH,eAFD,MAGK;AACD;AACA;AACI,wBAAM8I,KAAK,GAAG,MAAM,KAAKC,cAAL,CAAoBxI,eAApB,CAApB;;AACA,sBAAIuI,KAAK,IAAIA,KAAK,CAAC9I,WAAN,IAAqB,IAAlC,EAAwC;AACpC;AACH;AACJ,iBAPA,CAQD;AACA;AACA;AACA;;AACA,oBAAI4I,YAAY,IAAI,IAApB,EAA0B;AACtBA,kBAAAA,YAAY,GAAGF,eAAe,GAAG,CAAjC;;AACA,sBAAIE,YAAY,GAAGN,WAAW,CAACK,UAA/B,EAA2C;AACvCC,oBAAAA,YAAY,GAAGN,WAAW,CAACK,UAA3B;AACH;AACJ;;AACD,uBAAOC,YAAY,IAAI5I,WAAvB,EAAoC;AAChC,sBAAIjiC,IAAJ,EAAU;AACN;AACH;;AACD,wBAAMwD,KAAK,GAAG,MAAM,KAAKynC,wBAAL,CAA8BJ,YAA9B,CAApB;;AACA,uBAAK,IAAIK,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAG1nC,KAAK,CAACggC,YAAN,CAAmBxnD,MAAzC,EAAiDkvD,EAAE,EAAnD,EAAuD;AACnD,0BAAMz2B,EAAE,GAAGjR,KAAK,CAACggC,YAAN,CAAmB0H,EAAnB,CAAX,CADmD,CAEnD;;AACA,wBAAIz2B,EAAE,CAACrD,IAAH,KAAYoxB,eAAhB,EAAiC;AAC7B;AACH,qBALkD,CAMnD;;;AACA,wBAAI/tB,EAAE,CAACna,IAAH,KAAYiwC,WAAW,CAACjwC,IAAxB,IAAgCma,EAAE,CAAC7K,KAAH,KAAa2gC,WAAW,CAAC3gC,KAA7D,EAAoE;AAChE,0BAAI5J,IAAJ,EAAU;AACN;AACH,uBAH+D,CAIhE;;;AACA,4BAAM4iC,OAAO,GAAG,MAAM,KAAKyH,kBAAL,CAAwB51B,EAAE,CAACrD,IAA3B,EAAiC+wB,aAAjC,CAAtB,CALgE,CAMhE;;AACA,0BAAIsI,WAAW,EAAf,EAAmB;AACf;AACH,uBAT+D,CAUhE;;;AACA,0BAAI9xC,MAAM,GAAG,UAAb;;AACA,0BAAI8b,EAAE,CAAC3X,IAAH,KAAYytC,WAAW,CAACztC,IAAxB,IAAgC2X,EAAE,CAACS,EAAH,KAAUq1B,WAAW,CAACr1B,EAAtD,IAA4DT,EAAE,CAACxd,KAAH,CAAS/F,EAAT,CAAYq5C,WAAW,CAACtzC,KAAxB,CAAhE,EAAgG;AAC5F0B,wBAAAA,MAAM,GAAG,UAAT;AACH,uBAFD,MAGK,IAAI8b,EAAE,CAAC3X,IAAH,KAAY,IAAZ,IAAoB2X,EAAE,CAACna,IAAH,KAAYma,EAAE,CAACS,EAAnC,IAAyCT,EAAE,CAACxd,KAAH,CAAS/W,MAAT,EAA7C,EAAgE;AACjEyY,wBAAAA,MAAM,GAAG,WAAT;AACH,uBAjB+D,CAkBhE;;;AACAiH,sBAAAA,MAAM,CAACilC,QAAQ,CAAC5sC,SAAT,CAAmB,0BAAnB,EAA+CpB,MAAM,CAACuB,MAAP,CAAc+yC,oBAA7D,EAAmF;AACtFC,wBAAAA,SAAS,EAAGzyC,MAAM,KAAK,UAAX,IAAyBA,MAAM,KAAK,WADsC;AAEtFA,wBAAAA,MAFsF;AAGtF0yC,wBAAAA,WAAW,EAAE,KAAKC,gBAAL,CAAsB72B,EAAtB,CAHyE;AAItFrD,wBAAAA,IAAI,EAAEoxB,eAJgF;AAKtFI,wBAAAA;AALsF,uBAAnF,CAAD,CAAN;AAOA;AACH;AACJ;;AACDiI,kBAAAA,YAAY;AACf;AACJ;;AACD,kBAAI7qC,IAAJ,EAAU;AACN;AACH;;AACD,mBAAK6/B,IAAL,CAAU,OAAV,EAAmBiL,cAAnB;AACH,aAzEqE,CAAtE,EAyEKj1C,KAAD,IAAW;AACX,kBAAImK,IAAJ,EAAU;AACN;AACH;;AACD,mBAAK6/B,IAAL,CAAU,OAAV,EAAmBiL,cAAnB;AACH,aA9ED;AA+EH,WAvFkD,CAAnD;;AAwFA,cAAI9qC,IAAJ,EAAU;AACN;AACH;;AACD,eAAK6/B,IAAL,CAAU,OAAV,EAAmBiL,cAAnB;AACAN,UAAAA,WAAW,CAACn0C,IAAZ,CAAiB,MAAM;AACnB,iBAAKkd,cAAL,CAAoB,OAApB,EAA6Bu3B,cAA7B;AACH,WAFD;AAGH;;AACD,YAAI,OAAQtN,OAAR,KAAqB,QAArB,IAAiCA,OAAO,GAAG,CAA/C,EAAkD;AAC9C,gBAAMS,KAAK,GAAGpB,UAAU,CAAC,MAAM;AAC3B,gBAAI4N,WAAW,EAAf,EAAmB;AACf;AACH;;AACD7qC,YAAAA,MAAM,CAACilC,QAAQ,CAAC5sC,SAAT,CAAmB,kBAAnB,EAAuCpB,MAAM,CAACuB,MAAP,CAAc+lC,OAArD,EAA8D;AAAEX,cAAAA,OAAO,EAAEA;AAAX,aAA9D,CAAD,CAAN;AACH,WALuB,EAKrBA,OALqB,CAAxB;;AAMA,cAAIS,KAAK,CAACsN,KAAV,EAAiB;AACbtN,YAAAA,KAAK,CAACsN,KAAN;AACH;;AACDf,UAAAA,WAAW,CAACn0C,IAAZ,CAAiB,MAAM;AAAEkoC,YAAAA,YAAY,CAACN,KAAD,CAAZ;AAAsB,WAA/C;AACH;AACJ,OArIM,CAAP;AAsIH,KA7IiB,CAAlB;AA8IH;;AACDmM,EAAAA,cAAc,GAAG;AACb,WAAOxF,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,aAAO,KAAK0D,uBAAL,CAA6B,CAA7B,CAAP;AACH,KAFiB,CAAlB;AAGH;;AACDx1B,EAAAA,WAAW,GAAG;AACV,WAAO8xB,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,YAAM,KAAK3vB,UAAL,EAAN;AACA,YAAM3Z,MAAM,GAAG,MAAM,KAAKutC,OAAL,CAAa,aAAb,EAA4B,EAA5B,CAArB;;AACA,UAAI;AACA,eAAO5qC,SAAS,CAAC3D,IAAV,CAAegB,MAAf,CAAP;AACH,OAFD,CAGA,OAAOzF,KAAP,EAAc;AACV,eAAOgvC,QAAQ,CAACjsC,UAAT,CAAoB,yBAApB,EAA+C/B,MAAM,CAACuB,MAAP,CAAc0mC,YAA7D,EAA2E;AAC9Eh8B,UAAAA,MAAM,EAAE,aADsE;AAE9ExH,UAAAA,MAF8E;AAEtEzF,UAAAA;AAFsE,SAA3E,CAAP;AAIH;AACJ,KAZiB,CAAlB;AAaH;;AACDse,EAAAA,UAAU,CAACq3B,aAAD,EAAgBp3B,QAAhB,EAA0B;AAChC,WAAOwwB,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,YAAM,KAAK3vB,UAAL,EAAN;AACA,YAAM9c,MAAM,GAAG,MAAMmI,iBAAiB,CAAC;AACnCuI,QAAAA,OAAO,EAAE,KAAK69B,WAAL,CAAiB8E,aAAjB,CAD0B;AAEnCp3B,QAAAA,QAAQ,EAAE,KAAKq3B,YAAL,CAAkBr3B,QAAlB;AAFyB,OAAD,CAAtC;AAIA,YAAM9Y,MAAM,GAAG,MAAM,KAAKutC,OAAL,CAAa,YAAb,EAA2B1wC,MAA3B,CAArB;;AACA,UAAI;AACA,eAAO8F,SAAS,CAAC3D,IAAV,CAAegB,MAAf,CAAP;AACH,OAFD,CAGA,OAAOzF,KAAP,EAAc;AACV,eAAOgvC,QAAQ,CAACjsC,UAAT,CAAoB,yBAApB,EAA+C/B,MAAM,CAACuB,MAAP,CAAc0mC,YAA7D,EAA2E;AAC9Eh8B,UAAAA,MAAM,EAAE,YADsE;AAE9E3K,UAAAA,MAF8E;AAEtEmD,UAAAA,MAFsE;AAE9DzF,UAAAA;AAF8D,SAA3E,CAAP;AAIH;AACJ,KAhBiB,CAAlB;AAiBH;;AACD0e,EAAAA,mBAAmB,CAACi3B,aAAD,EAAgBp3B,QAAhB,EAA0B;AACzC,WAAOwwB,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,YAAM,KAAK3vB,UAAL,EAAN;AACA,YAAM9c,MAAM,GAAG,MAAMmI,iBAAiB,CAAC;AACnCuI,QAAAA,OAAO,EAAE,KAAK69B,WAAL,CAAiB8E,aAAjB,CAD0B;AAEnCp3B,QAAAA,QAAQ,EAAE,KAAKq3B,YAAL,CAAkBr3B,QAAlB;AAFyB,OAAD,CAAtC;AAIA,YAAM9Y,MAAM,GAAG,MAAM,KAAKutC,OAAL,CAAa,qBAAb,EAAoC1wC,MAApC,CAArB;;AACA,UAAI;AACA,eAAO8F,SAAS,CAAC3D,IAAV,CAAegB,MAAf,EAAuBjb,QAAvB,EAAP;AACH,OAFD,CAGA,OAAOwV,KAAP,EAAc;AACV,eAAOgvC,QAAQ,CAACjsC,UAAT,CAAoB,yBAApB,EAA+C/B,MAAM,CAACuB,MAAP,CAAc0mC,YAA7D,EAA2E;AAC9Eh8B,UAAAA,MAAM,EAAE,qBADsE;AAE9E3K,UAAAA,MAF8E;AAEtEmD,UAAAA,MAFsE;AAE9DzF,UAAAA;AAF8D,SAA3E,CAAP;AAIH;AACJ,KAhBiB,CAAlB;AAiBH;;AACD61C,EAAAA,OAAO,CAACF,aAAD,EAAgBp3B,QAAhB,EAA0B;AAC7B,WAAOwwB,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,YAAM,KAAK3vB,UAAL,EAAN;AACA,YAAM9c,MAAM,GAAG,MAAMmI,iBAAiB,CAAC;AACnCuI,QAAAA,OAAO,EAAE,KAAK69B,WAAL,CAAiB8E,aAAjB,CAD0B;AAEnCp3B,QAAAA,QAAQ,EAAE,KAAKq3B,YAAL,CAAkBr3B,QAAlB;AAFyB,OAAD,CAAtC;AAIA,YAAM9Y,MAAM,GAAG,MAAM,KAAKutC,OAAL,CAAa,SAAb,EAAwB1wC,MAAxB,CAArB;;AACA,UAAI;AACA,eAAOwE,OAAO,CAACrB,MAAD,CAAd;AACH,OAFD,CAGA,OAAOzF,KAAP,EAAc;AACV,eAAOgvC,QAAQ,CAACjsC,UAAT,CAAoB,yBAApB,EAA+C/B,MAAM,CAACuB,MAAP,CAAc0mC,YAA7D,EAA2E;AAC9Eh8B,UAAAA,MAAM,EAAE,SADsE;AAE9E3K,UAAAA,MAF8E;AAEtEmD,UAAAA,MAFsE;AAE9DzF,UAAAA;AAF8D,SAA3E,CAAP;AAIH;AACJ,KAhBiB,CAAlB;AAiBH;;AACD81C,EAAAA,YAAY,CAACH,aAAD,EAAgBI,QAAhB,EAA0Bx3B,QAA1B,EAAoC;AAC5C,WAAOwwB,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,YAAM,KAAK3vB,UAAL,EAAN;AACA,YAAM9c,MAAM,GAAG,MAAMmI,iBAAiB,CAAC;AACnCuI,QAAAA,OAAO,EAAE,KAAK69B,WAAL,CAAiB8E,aAAjB,CAD0B;AAEnCp3B,QAAAA,QAAQ,EAAE,KAAKq3B,YAAL,CAAkBr3B,QAAlB,CAFyB;AAGnCw3B,QAAAA,QAAQ,EAAEjsC,OAAO,CAACD,OAAR,CAAgBksC,QAAhB,EAA0B3rC,IAA1B,CAAgCjV,CAAD,IAAOkS,QAAQ,CAAClS,CAAD,CAA9C;AAHyB,OAAD,CAAtC;AAKA,YAAMsQ,MAAM,GAAG,MAAM,KAAKutC,OAAL,CAAa,cAAb,EAA6B1wC,MAA7B,CAArB;;AACA,UAAI;AACA,eAAOwE,OAAO,CAACrB,MAAD,CAAd;AACH,OAFD,CAGA,OAAOzF,KAAP,EAAc;AACV,eAAOgvC,QAAQ,CAACjsC,UAAT,CAAoB,yBAApB,EAA+C/B,MAAM,CAACuB,MAAP,CAAc0mC,YAA7D,EAA2E;AAC9Eh8B,UAAAA,MAAM,EAAE,cADsE;AAE9E3K,UAAAA,MAF8E;AAEtEmD,UAAAA,MAFsE;AAE9DzF,UAAAA;AAF8D,SAA3E,CAAP;AAIH;AACJ,KAjBiB,CAAlB;AAkBH,GA/oB+B,CAgpBhC;;;AACAy1C,EAAAA,gBAAgB,CAAC72B,EAAD,EAAKrD,IAAL,EAAWw5B,UAAX,EAAuB;AACnC,QAAIx5B,IAAI,IAAI,IAAR,IAAgBvU,aAAa,CAACuU,IAAD,CAAb,KAAwB,EAA5C,EAAgD;AAC5C,YAAM,IAAIn2B,KAAJ,CAAU,oCAAV,CAAN;AACH;;AACD,UAAMqgB,MAAM,GAAGmZ,EAAf,CAJmC,CAKnC;;AACA,QAAIrD,IAAI,IAAI,IAAR,IAAgBqD,EAAE,CAACrD,IAAH,KAAYA,IAAhC,EAAsC;AAClCyzB,MAAAA,QAAQ,CAACjsC,UAAT,CAAoB,0DAApB,EAAgF/B,MAAM,CAACuB,MAAP,CAAcC,aAA9F,EAA6G;AAAEwzC,QAAAA,YAAY,EAAEp3B,EAAE,CAACrD,IAAnB;AAAyB06B,QAAAA,YAAY,EAAE16B;AAAvC,OAA7G;AACH;;AACD9V,IAAAA,MAAM,CAACywC,IAAP,GAAc,CAACC,QAAD,EAAWxO,OAAX,KAAuBoH,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAChF,UAAIoH,QAAQ,IAAI,IAAhB,EAAsB;AAClBA,QAAAA,QAAQ,GAAG,CAAX;AACH;;AACD,UAAIxO,OAAO,IAAI,IAAf,EAAqB;AACjBA,QAAAA,OAAO,GAAG,CAAV;AACH,OAN+E,CAOhF;;;AACA,UAAI6N,WAAW,GAAG73C,SAAlB;;AACA,UAAIw4C,QAAQ,KAAK,CAAb,IAAkBpB,UAAU,IAAI,IAApC,EAA0C;AACtCS,QAAAA,WAAW,GAAG;AACVvuC,UAAAA,IAAI,EAAE2X,EAAE,CAAC3X,IADC;AAEVxC,UAAAA,IAAI,EAAEma,EAAE,CAACna,IAFC;AAGVsP,UAAAA,KAAK,EAAE6K,EAAE,CAAC7K,KAHA;AAIVsL,UAAAA,EAAE,EAAET,EAAE,CAACS,EAJG;AAKVje,UAAAA,KAAK,EAAEwd,EAAE,CAACxd,KALA;AAMV2zC,UAAAA;AANU,SAAd;AAQH;;AACD,YAAMhI,OAAO,GAAG,MAAM,KAAK0H,mBAAL,CAAyB71B,EAAE,CAACrD,IAA5B,EAAkC46B,QAAlC,EAA4CxO,OAA5C,EAAqD6N,WAArD,CAAtB;;AACA,UAAIzI,OAAO,IAAI,IAAX,IAAmBoJ,QAAQ,KAAK,CAApC,EAAuC;AACnC,eAAO,IAAP;AACH,OAtB+E,CAuBhF;;;AACA,WAAKzE,QAAL,CAAc,OAAO9yB,EAAE,CAACrD,IAAxB,IAAgCwxB,OAAO,CAACX,WAAxC;;AACA,UAAIW,OAAO,CAACtG,MAAR,KAAmB,CAAvB,EAA0B;AACtBuI,QAAAA,QAAQ,CAACjsC,UAAT,CAAoB,oBAApB,EAA0C/B,MAAM,CAACuB,MAAP,CAAcquC,cAAxD,EAAwE;AACpEjE,UAAAA,eAAe,EAAE/tB,EAAE,CAACrD,IADgD;AAEpEzH,UAAAA,WAAW,EAAE8K,EAFuD;AAGpEmuB,UAAAA,OAAO,EAAEA;AAH2D,SAAxE;AAKH;;AACD,aAAOA,OAAP;AACH,KAjC+C,CAAhD;;AAkCA,WAAOtnC,MAAP;AACH;;AACDqZ,EAAAA,eAAe,CAACs3B,iBAAD,EAAoB;AAC/B,WAAOrH,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,YAAM,KAAK3vB,UAAL,EAAN;AACA,YAAMi3B,KAAK,GAAG,MAAMvsC,OAAO,CAACD,OAAR,CAAgBusC,iBAAhB,EAAmChsC,IAAnC,CAAwC5e,CAAC,IAAIsb,OAAO,CAACtb,CAAD,CAApD,CAApB;AACA,YAAMozB,EAAE,GAAG,KAAK4xB,SAAL,CAAe18B,WAAf,CAA2BsiC,iBAA3B,CAAX;;AACA,UAAIx3B,EAAE,CAAC0tB,aAAH,IAAoB,IAAxB,EAA8B;AAC1B1tB,QAAAA,EAAE,CAAC0tB,aAAH,GAAmB,CAAnB;AACH;;AACD,YAAMF,WAAW,GAAG,MAAM,KAAKqG,uBAAL,CAA6B,MAAM,IAAI,KAAKY,eAA5C,CAA1B;;AACA,UAAI;AACA,cAAM93B,IAAI,GAAG,MAAM,KAAKy3B,OAAL,CAAa,iBAAb,EAAgC;AAAEoD,UAAAA,iBAAiB,EAAEC;AAArB,SAAhC,CAAnB;AACA,eAAO,KAAKZ,gBAAL,CAAsB72B,EAAtB,EAA0BrD,IAA1B,EAAgC6wB,WAAhC,CAAP;AACH,OAHD,CAIA,OAAOpsC,KAAP,EAAc;AACVA,QAAAA,KAAK,CAAC8T,WAAN,GAAoB8K,EAApB;AACA5e,QAAAA,KAAK,CAAC2sC,eAAN,GAAwB/tB,EAAE,CAACrD,IAA3B;AACA,cAAMvb,KAAN;AACH;AACJ,KAjBiB,CAAlB;AAkBH;;AACDs2C,EAAAA,sBAAsB,CAACxiC,WAAD,EAAc;AAChC,WAAOi7B,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,YAAM73B,MAAM,GAAG,MAAMpD,WAArB;AACA,YAAM8K,EAAE,GAAG,EAAX;AACA,OAAC,MAAD,EAAS,IAAT,EAAeve,OAAf,CAAwBsC,GAAD,IAAS;AAC5B,YAAIuU,MAAM,CAACvU,GAAD,CAAN,IAAe,IAAnB,EAAyB;AACrB;AACH;;AACDic,QAAAA,EAAE,CAACjc,GAAD,CAAF,GAAUmH,OAAO,CAACD,OAAR,CAAgBqN,MAAM,CAACvU,GAAD,CAAtB,EAA6ByH,IAA7B,CAAmC9E,CAAD,IAAQA,CAAC,GAAG,KAAKurC,WAAL,CAAiBvrC,CAAjB,CAAH,GAAyB,IAApE,CAAV;AACH,OALD;AAMA,OAAC,UAAD,EAAa,UAAb,EAAyB,cAAzB,EAAyC,sBAAzC,EAAiE,OAAjE,EAA0EjF,OAA1E,CAAmFsC,GAAD,IAAS;AACvF,YAAIuU,MAAM,CAACvU,GAAD,CAAN,IAAe,IAAnB,EAAyB;AACrB;AACH;;AACDic,QAAAA,EAAE,CAACjc,GAAD,CAAF,GAAUmH,OAAO,CAACD,OAAR,CAAgBqN,MAAM,CAACvU,GAAD,CAAtB,EAA6ByH,IAA7B,CAAmC9E,CAAD,IAAQA,CAAC,GAAG8C,SAAS,CAAC3D,IAAV,CAAea,CAAf,CAAH,GAAuB,IAAlE,CAAV;AACH,OALD;AAMA,OAAC,MAAD,EAASjF,OAAT,CAAkBsC,GAAD,IAAS;AACtB,YAAIuU,MAAM,CAACvU,GAAD,CAAN,IAAe,IAAnB,EAAyB;AACrB;AACH;;AACDic,QAAAA,EAAE,CAACjc,GAAD,CAAF,GAAUmH,OAAO,CAACD,OAAR,CAAgBqN,MAAM,CAACvU,GAAD,CAAtB,EAA6ByH,IAA7B,CAAmC9E,CAAD,IAASA,CAAC,IAAI,IAAN,GAAcA,CAAd,GAAkB,IAA5D,CAAV;AACH,OALD;;AAMA,UAAI4R,MAAM,CAAC+pB,UAAX,EAAuB;AACnBriB,QAAAA,EAAE,CAACqiB,UAAH,GAAgB,KAAKuP,SAAL,CAAevP,UAAf,CAA0B/pB,MAAM,CAAC+pB,UAAjC,CAAhB;AACH;;AACD,OAAC,MAAD,EAAS5gC,OAAT,CAAkBsC,GAAD,IAAS;AACtB,YAAIuU,MAAM,CAACvU,GAAD,CAAN,IAAe,IAAnB,EAAyB;AACrB;AACH;;AACDic,QAAAA,EAAE,CAACjc,GAAD,CAAF,GAAUmH,OAAO,CAACD,OAAR,CAAgBqN,MAAM,CAACvU,GAAD,CAAtB,EAA6ByH,IAA7B,CAAmC9E,CAAD,IAAQA,CAAC,GAAGwB,OAAO,CAACxB,CAAD,CAAV,GAAgB,IAA3D,CAAV;AACH,OALD;AAMA,aAAO,KAAKkrC,SAAL,CAAe/D,kBAAf,CAAkC,MAAMhiC,iBAAiB,CAACmU,EAAD,CAAzD,CAAP;AACH,KA/BiB,CAAlB;AAgCH;;AACD23B,EAAAA,UAAU,CAAC/7B,MAAD,EAAS;AACf,WAAOu0B,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClDv0B,MAAAA,MAAM,GAAG,MAAMA,MAAf;AACA,YAAM/U,MAAM,GAAG,EAAf;;AACA,UAAI+U,MAAM,CAACxH,OAAP,IAAkB,IAAtB,EAA4B;AACxBvN,QAAAA,MAAM,CAACuN,OAAP,GAAiB,KAAK69B,WAAL,CAAiBr2B,MAAM,CAACxH,OAAxB,CAAjB;AACH;;AACD,OAAC,WAAD,EAAc,QAAd,EAAwB3S,OAAxB,CAAiCsC,GAAD,IAAS;AACrC,YAAI6X,MAAM,CAAC7X,GAAD,CAAN,IAAe,IAAnB,EAAyB;AACrB;AACH;;AACD8C,QAAAA,MAAM,CAAC9C,GAAD,CAAN,GAAc6X,MAAM,CAAC7X,GAAD,CAApB;AACH,OALD;AAMA,OAAC,WAAD,EAAc,SAAd,EAAyBtC,OAAzB,CAAkCsC,GAAD,IAAS;AACtC,YAAI6X,MAAM,CAAC7X,GAAD,CAAN,IAAe,IAAnB,EAAyB;AACrB;AACH;;AACD8C,QAAAA,MAAM,CAAC9C,GAAD,CAAN,GAAc,KAAKizC,YAAL,CAAkBp7B,MAAM,CAAC7X,GAAD,CAAxB,CAAd;AACH,OALD;AAMA,aAAO,KAAK6tC,SAAL,CAAeh2B,MAAf,CAAsB,MAAM/P,iBAAiB,CAAChF,MAAD,CAA7C,CAAP;AACH,KAnBiB,CAAlB;AAoBH;;AACD1H,EAAAA,IAAI,CAAC+V,WAAD,EAAcyK,QAAd,EAAwB;AACxB,WAAOwwB,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,YAAM,KAAK3vB,UAAL,EAAN;AACA,YAAM9c,MAAM,GAAG,MAAMmI,iBAAiB,CAAC;AACnCqJ,QAAAA,WAAW,EAAE,KAAKwiC,sBAAL,CAA4BxiC,WAA5B,CADsB;AAEnCyK,QAAAA,QAAQ,EAAE,KAAKq3B,YAAL,CAAkBr3B,QAAlB;AAFyB,OAAD,CAAtC;AAIA,YAAM9Y,MAAM,GAAG,MAAM,KAAKutC,OAAL,CAAa,MAAb,EAAqB1wC,MAArB,CAArB;;AACA,UAAI;AACA,eAAOwE,OAAO,CAACrB,MAAD,CAAd;AACH,OAFD,CAGA,OAAOzF,KAAP,EAAc;AACV,eAAOgvC,QAAQ,CAACjsC,UAAT,CAAoB,yBAApB,EAA+C/B,MAAM,CAACuB,MAAP,CAAc0mC,YAA7D,EAA2E;AAC9Eh8B,UAAAA,MAAM,EAAE,MADsE;AAE9E3K,UAAAA,MAF8E;AAEtEmD,UAAAA,MAFsE;AAE9DzF,UAAAA;AAF8D,SAA3E,CAAP;AAIH;AACJ,KAhBiB,CAAlB;AAiBH;;AACD2e,EAAAA,WAAW,CAAC7K,WAAD,EAAc;AACrB,WAAOi7B,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,YAAM,KAAK3vB,UAAL,EAAN;AACA,YAAM9c,MAAM,GAAG,MAAMmI,iBAAiB,CAAC;AACnCqJ,QAAAA,WAAW,EAAE,KAAKwiC,sBAAL,CAA4BxiC,WAA5B;AADsB,OAAD,CAAtC;AAGA,YAAMrO,MAAM,GAAG,MAAM,KAAKutC,OAAL,CAAa,aAAb,EAA4B1wC,MAA5B,CAArB;;AACA,UAAI;AACA,eAAO8F,SAAS,CAAC3D,IAAV,CAAegB,MAAf,CAAP;AACH,OAFD,CAGA,OAAOzF,KAAP,EAAc;AACV,eAAOgvC,QAAQ,CAACjsC,UAAT,CAAoB,yBAApB,EAA+C/B,MAAM,CAACuB,MAAP,CAAc0mC,YAA7D,EAA2E;AAC9Eh8B,UAAAA,MAAM,EAAE,aADsE;AAE9E3K,UAAAA,MAF8E;AAEtEmD,UAAAA,MAFsE;AAE9DzF,UAAAA;AAF8D,SAA3E,CAAP;AAIH;AACJ,KAfiB,CAAlB;AAgBH;;AACD6wC,EAAAA,WAAW,CAAC8E,aAAD,EAAgB;AACvB,WAAO5G,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,YAAM/7B,OAAO,GAAG,MAAM,KAAKiJ,WAAL,CAAiB05B,aAAjB,CAAtB;;AACA,UAAI3iC,OAAO,IAAI,IAAf,EAAqB;AACjBg8B,QAAAA,QAAQ,CAACjsC,UAAT,CAAoB,yBAApB,EAA+C/B,MAAM,CAACuB,MAAP,CAAcc,qBAA7D,EAAoF;AAChFC,UAAAA,SAAS,EAAG,eAAcV,IAAI,CAACC,SAAL,CAAe8yC,aAAf,CAA8B;AADwB,SAApF;AAGH;;AACD,aAAO3iC,OAAP;AACH,KARiB,CAAlB;AASH;;AACDwjC,EAAAA,SAAS,CAACC,mBAAD,EAAsBC,mBAAtB,EAA2C;AAChD,WAAO3H,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,YAAM,KAAK3vB,UAAL,EAAN;AACAq3B,MAAAA,mBAAmB,GAAG,MAAMA,mBAA5B,CAFkD,CAGlD;;AACA,UAAIrK,WAAW,GAAG,CAAC,GAAnB;AACA,YAAM9pC,MAAM,GAAG;AACXo0C,QAAAA,mBAAmB,EAAE,CAAC,CAACA;AADZ,OAAf;;AAGA,UAAItxC,WAAW,CAACqxC,mBAAD,EAAsB,EAAtB,CAAf,EAA0C;AACtCn0C,QAAAA,MAAM,CAAC6pC,SAAP,GAAmBsK,mBAAnB;AACH,OAFD,MAGK;AACD,YAAI;AACAn0C,UAAAA,MAAM,CAACic,QAAP,GAAkB,KAAKiyB,SAAL,CAAejyB,QAAf,CAAwB,MAAM,KAAKq3B,YAAL,CAAkBa,mBAAlB,CAA9B,CAAlB;;AACA,cAAIrxC,WAAW,CAAC9C,MAAM,CAACic,QAAR,CAAf,EAAkC;AAC9B6tB,YAAAA,WAAW,GAAGzmC,QAAQ,CAACrD,MAAM,CAACic,QAAP,CAAgB1Y,SAAhB,CAA0B,CAA1B,CAAD,EAA+B,EAA/B,CAAtB;AACH;AACJ,SALD,CAMA,OAAO7F,KAAP,EAAc;AACVgvC,UAAAA,QAAQ,CAACrtC,kBAAT,CAA4B,iCAA5B,EAA+D,qBAA/D,EAAsF80C,mBAAtF;AACH;AACJ;;AACD,aAAO/M,IAAI,CAAC,MAAMqF,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAC7D,cAAMphC,KAAK,GAAG,MAAM,KAAKqlC,OAAL,CAAa,UAAb,EAAyB1wC,MAAzB,CAApB,CAD6D,CAE7D;;AACA,YAAIqL,KAAK,IAAI,IAAb,EAAmB;AACf;AACA;AACA;AACA,cAAIrL,MAAM,CAAC6pC,SAAP,IAAoB,IAAxB,EAA8B;AAC1B,gBAAI,KAAKuF,QAAL,CAAc,OAAOpvC,MAAM,CAAC6pC,SAA5B,KAA0C,IAA9C,EAAoD;AAChD,qBAAO,IAAP;AACH;AACJ,WARc,CASf;;;AACA,cAAI7pC,MAAM,CAACic,QAAP,IAAmB,IAAvB,EAA6B;AACzB,gBAAI6tB,WAAW,GAAG,KAAKsF,QAAL,CAAc/jC,KAAhC,EAAuC;AACnC,qBAAO,IAAP;AACH;AACJ,WAdc,CAef;;;AACA,iBAAOhQ,SAAP;AACH,SApB4D,CAqB7D;;;AACA,YAAI+4C,mBAAJ,EAAyB;AACrB,cAAItK,WAAW,GAAG,IAAlB;;AACA,eAAK,IAAIzkD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgmB,KAAK,CAACggC,YAAN,CAAmBxnD,MAAvC,EAA+CwB,CAAC,EAAhD,EAAoD;AAChD,kBAAMi3B,EAAE,GAAGjR,KAAK,CAACggC,YAAN,CAAmBhmD,CAAnB,CAAX;;AACA,gBAAIi3B,EAAE,CAACwtB,WAAH,IAAkB,IAAtB,EAA4B;AACxBxtB,cAAAA,EAAE,CAAC0tB,aAAH,GAAmB,CAAnB;AACH,aAFD,MAGK,IAAI1tB,EAAE,CAAC0tB,aAAH,IAAoB,IAAxB,EAA8B;AAC/B,kBAAIF,WAAW,IAAI,IAAnB,EAAyB;AACrBA,gBAAAA,WAAW,GAAG,MAAM,KAAKqG,uBAAL,CAA6B,MAAM,IAAI,KAAKY,eAA5C,CAApB;AACH,eAH8B,CAI/B;;;AACA,kBAAI/G,aAAa,GAAIF,WAAW,GAAGxtB,EAAE,CAACwtB,WAAlB,GAAiC,CAArD;;AACA,kBAAIE,aAAa,IAAI,CAArB,EAAwB;AACpBA,gBAAAA,aAAa,GAAG,CAAhB;AACH;;AACD1tB,cAAAA,EAAE,CAAC0tB,aAAH,GAAmBA,aAAnB;AACH;AACJ;;AACD,gBAAMqK,YAAY,GAAG,KAAKnG,SAAL,CAAe5C,qBAAf,CAAqCjgC,KAArC,CAArB;AACAgpC,UAAAA,YAAY,CAAChJ,YAAb,GAA4BgJ,YAAY,CAAChJ,YAAb,CAA0BxnC,GAA1B,CAA+ByY,EAAD,IAAQ,KAAK62B,gBAAL,CAAsB72B,EAAtB,CAAtC,CAA5B;AACA,iBAAO+3B,YAAP;AACH;;AACD,eAAO,KAAKnG,SAAL,CAAe7iC,KAAf,CAAqBA,KAArB,CAAP;AACH,OA9C4B,CAAlB,EA8CP;AAAEo8B,QAAAA,QAAQ,EAAE;AAAZ,OA9CO,CAAX;AA+CH,KArEiB,CAAlB;AAsEH;;AACD/sB,EAAAA,QAAQ,CAACy5B,mBAAD,EAAsB;AAC1B,WAAQ,KAAKD,SAAL,CAAeC,mBAAf,EAAoC,KAApC,CAAR;AACH;;AACDrB,EAAAA,wBAAwB,CAACqB,mBAAD,EAAsB;AAC1C,WAAQ,KAAKD,SAAL,CAAeC,mBAAf,EAAoC,IAApC,CAAR;AACH;;AACDtB,EAAAA,cAAc,CAACxI,eAAD,EAAkB;AAC5B,WAAOoC,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,YAAM,KAAK3vB,UAAL,EAAN;AACAutB,MAAAA,eAAe,GAAG,MAAMA,eAAxB;AACA,YAAMrqC,MAAM,GAAG;AAAEqqC,QAAAA,eAAe,EAAE,KAAK6D,SAAL,CAAej1B,IAAf,CAAoBoxB,eAApB,EAAqC,IAArC;AAAnB,OAAf;AACA,aAAOjD,IAAI,CAAC,MAAMqF,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAC7D,cAAMtpC,MAAM,GAAG,MAAM,KAAKutC,OAAL,CAAa,gBAAb,EAA+B1wC,MAA/B,CAArB;;AACA,YAAImD,MAAM,IAAI,IAAd,EAAoB;AAChB,cAAI,KAAKisC,QAAL,CAAc,OAAO/E,eAArB,KAAyC,IAA7C,EAAmD;AAC/C,mBAAO,IAAP;AACH;;AACD,iBAAOhvC,SAAP;AACH;;AACD,cAAMihB,EAAE,GAAG,KAAK4xB,SAAL,CAAe3C,mBAAf,CAAmCpoC,MAAnC,CAAX;;AACA,YAAImZ,EAAE,CAACwtB,WAAH,IAAkB,IAAtB,EAA4B;AACxBxtB,UAAAA,EAAE,CAAC0tB,aAAH,GAAmB,CAAnB;AACH,SAFD,MAGK,IAAI1tB,EAAE,CAAC0tB,aAAH,IAAoB,IAAxB,EAA8B;AAC/B,gBAAMF,WAAW,GAAG,MAAM,KAAKqG,uBAAL,CAA6B,MAAM,IAAI,KAAKY,eAA5C,CAA1B,CAD+B,CAE/B;;AACA,cAAI/G,aAAa,GAAIF,WAAW,GAAGxtB,EAAE,CAACwtB,WAAlB,GAAiC,CAArD;;AACA,cAAIE,aAAa,IAAI,CAArB,EAAwB;AACpBA,YAAAA,aAAa,GAAG,CAAhB;AACH;;AACD1tB,UAAAA,EAAE,CAAC0tB,aAAH,GAAmBA,aAAnB;AACH;;AACD,eAAO,KAAKmJ,gBAAL,CAAsB72B,EAAtB,CAAP;AACH,OAtB4B,CAAlB,EAsBP;AAAEmrB,QAAAA,QAAQ,EAAE;AAAZ,OAtBO,CAAX;AAuBH,KA3BiB,CAAlB;AA4BH;;AACD0J,EAAAA,qBAAqB,CAAC9G,eAAD,EAAkB;AACnC,WAAOoC,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,YAAM,KAAK3vB,UAAL,EAAN;AACAutB,MAAAA,eAAe,GAAG,MAAMA,eAAxB;AACA,YAAMrqC,MAAM,GAAG;AAAEqqC,QAAAA,eAAe,EAAE,KAAK6D,SAAL,CAAej1B,IAAf,CAAoBoxB,eAApB,EAAqC,IAArC;AAAnB,OAAf;AACA,aAAOjD,IAAI,CAAC,MAAMqF,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAC7D,cAAMtpC,MAAM,GAAG,MAAM,KAAKutC,OAAL,CAAa,uBAAb,EAAsC1wC,MAAtC,CAArB;;AACA,YAAImD,MAAM,IAAI,IAAd,EAAoB;AAChB,cAAI,KAAKisC,QAAL,CAAc,OAAO/E,eAArB,KAAyC,IAA7C,EAAmD;AAC/C,mBAAO,IAAP;AACH;;AACD,iBAAOhvC,SAAP;AACH,SAP4D,CAQ7D;;;AACA,YAAI8H,MAAM,CAAC0mC,SAAP,IAAoB,IAAxB,EAA8B;AAC1B,iBAAOxuC,SAAP;AACH;;AACD,cAAMovC,OAAO,GAAG,KAAKyD,SAAL,CAAezD,OAAf,CAAuBtnC,MAAvB,CAAhB;;AACA,YAAIsnC,OAAO,CAACX,WAAR,IAAuB,IAA3B,EAAiC;AAC7BW,UAAAA,OAAO,CAACT,aAAR,GAAwB,CAAxB;AACH,SAFD,MAGK,IAAIS,OAAO,CAACT,aAAR,IAAyB,IAA7B,EAAmC;AACpC,gBAAMF,WAAW,GAAG,MAAM,KAAKqG,uBAAL,CAA6B,MAAM,IAAI,KAAKY,eAA5C,CAA1B,CADoC,CAEpC;;AACA,cAAI/G,aAAa,GAAIF,WAAW,GAAGW,OAAO,CAACX,WAAvB,GAAsC,CAA1D;;AACA,cAAIE,aAAa,IAAI,CAArB,EAAwB;AACpBA,YAAAA,aAAa,GAAG,CAAhB;AACH;;AACDS,UAAAA,OAAO,CAACT,aAAR,GAAwBA,aAAxB;AACH;;AACD,eAAOS,OAAP;AACH,OA1B4B,CAAlB,EA0BP;AAAEhD,QAAAA,QAAQ,EAAE;AAAZ,OA1BO,CAAX;AA2BH,KA/BiB,CAAlB;AAgCH;;AACD2J,EAAAA,OAAO,CAACl5B,MAAD,EAAS;AACZ,WAAOu0B,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,YAAM,KAAK3vB,UAAL,EAAN;AACA,YAAM9c,MAAM,GAAG,MAAMmI,iBAAiB,CAAC;AAAE+P,QAAAA,MAAM,EAAE,KAAK+7B,UAAL,CAAgB/7B,MAAhB;AAAV,OAAD,CAAtC;AACA,YAAM2yB,IAAI,GAAG,MAAM,KAAK6F,OAAL,CAAa,SAAb,EAAwB1wC,MAAxB,CAAnB;AACA6qC,MAAAA,IAAI,CAAC9sC,OAAL,CAAcwB,GAAD,IAAS;AAClB,YAAIA,GAAG,CAACosC,OAAJ,IAAe,IAAnB,EAAyB;AACrBpsC,UAAAA,GAAG,CAACosC,OAAJ,GAAc,KAAd;AACH;AACJ,OAJD;AAKA,aAAOrC,SAAS,CAACiB,OAAV,CAAkB,KAAK2D,SAAL,CAAexC,SAAf,CAAyBjC,IAAzB,CAA8B,KAAKyE,SAAnC,CAAlB,EAAiErD,IAAjE,CAAP;AACH,KAViB,CAAlB;AAWH;;AACDyJ,EAAAA,aAAa,GAAG;AACZ,WAAO7H,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,YAAM,KAAK3vB,UAAL,EAAN;AACA,aAAO,KAAK4zB,OAAL,CAAa,eAAb,EAA8B,EAA9B,CAAP;AACH,KAHiB,CAAlB;AAIH;;AACD4C,EAAAA,YAAY,CAACr3B,QAAD,EAAW;AACnB,WAAOwwB,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClDxwB,MAAAA,QAAQ,GAAG,MAAMA,QAAjB;;AACA,UAAI,OAAQA,QAAR,KAAsB,QAAtB,IAAkCA,QAAQ,GAAG,CAAjD,EAAoD;AAChD,YAAIA,QAAQ,GAAG,CAAf,EAAkB;AACdywB,UAAAA,QAAQ,CAACrtC,kBAAT,CAA4B,kBAA5B,EAAgD,UAAhD,EAA4D4c,QAA5D;AACH;;AACD,YAAI6tB,WAAW,GAAG,MAAM,KAAKqG,uBAAL,CAA6B,MAAM,IAAI,KAAKY,eAA5C,CAAxB;AACAjH,QAAAA,WAAW,IAAI7tB,QAAf;;AACA,YAAI6tB,WAAW,GAAG,CAAlB,EAAqB;AACjBA,UAAAA,WAAW,GAAG,CAAd;AACH;;AACD,eAAO,KAAKoE,SAAL,CAAejyB,QAAf,CAAwB6tB,WAAxB,CAAP;AACH;;AACD,aAAO,KAAKoE,SAAL,CAAejyB,QAAf,CAAwBA,QAAxB,CAAP;AACH,KAdiB,CAAlB;AAeH;;AACDs4B,EAAAA,WAAW,CAACnzD,IAAD,EAAO;AACd,WAAOqrD,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,UAAI;AACA,cAAM/7B,OAAO,GAAG,MAAM,KAAK8jC,YAAL,CAAkBpzD,IAAlB,CAAtB;;AACA,YAAIsvB,OAAO,IAAI,IAAf,EAAqB;AACjB,iBAAO,IAAP;AACH;;AACD,eAAO,IAAIu9B,QAAJ,CAAa,IAAb,EAAmBv9B,OAAnB,EAA4BtvB,IAA5B,CAAP;AACH,OAND,CAOA,OAAOsc,KAAP,EAAc;AACV,YAAIA,KAAK,CAACqC,IAAN,KAAerB,MAAM,CAACuB,MAAP,CAAcquC,cAAjC,EAAiD;AAC7C,iBAAO,IAAP;AACH;;AACD,eAAO,IAAP;AACH;AACJ,KAdiB,CAAlB;AAeH;;AACDkG,EAAAA,YAAY,CAACpzD,IAAD,EAAO;AACf,WAAOqrD,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD;AACA,YAAM5vB,OAAO,GAAG,MAAM,KAAKC,UAAL,EAAtB,CAFkD,CAGlD;;AACA,UAAI,CAACD,OAAO,CAAC8kB,UAAb,EAAyB;AACrB+K,QAAAA,QAAQ,CAACjsC,UAAT,CAAoB,8BAApB,EAAoD/B,MAAM,CAACuB,MAAP,CAAcc,qBAAlE,EAAyF;AAAEC,UAAAA,SAAS,EAAE,KAAb;AAAoB6b,UAAAA,OAAO,EAAEA,OAAO,CAACz7B;AAArC,SAAzF;AACH,OANiD,CAOlD;;;AACA,YAAMowB,WAAW,GAAG;AAChBuL,QAAAA,EAAE,EAAEF,OAAO,CAAC8kB,UADI;AAEhBh9B,QAAAA,IAAI,EAAG,eAAemR,QAAQ,CAAC10B,IAAD,CAAR,CAAemiB,SAAf,CAAyB,CAAzB;AAFN,OAApB;;AAIA,UAAI;AACA,eAAO,KAAK2qC,SAAL,CAAepC,WAAf,CAA2B,MAAM,KAAKrwC,IAAL,CAAU+V,WAAV,CAAjC,CAAP;AACH,OAFD,CAGA,OAAO9T,KAAP,EAAc;AACV,YAAIA,KAAK,CAACqC,IAAN,KAAerB,MAAM,CAACuB,MAAP,CAAcquC,cAAjC,EAAiD;AAC7C,iBAAO,IAAP;AACH;;AACD,cAAM5wC,KAAN;AACH;AACJ,KArBiB,CAAlB;AAsBH;;AACDic,EAAAA,WAAW,CAACv4B,IAAD,EAAO;AACd,WAAOqrD,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClDrrD,MAAAA,IAAI,GAAG,MAAMA,IAAb,CADkD,CAElD;;AACA,UAAI;AACA,eAAOomB,OAAO,CAACD,OAAR,CAAgB,KAAK2mC,SAAL,CAAex9B,OAAf,CAAuBtvB,IAAvB,CAAhB,CAAP;AACH,OAFD,CAGA,OAAOsc,KAAP,EAAc;AACV;AACA,YAAIoF,WAAW,CAAC1hB,IAAD,CAAf,EAAuB;AACnB,gBAAMsc,KAAN;AACH;AACJ;;AACD,UAAI,OAAQtc,IAAR,KAAkB,QAAtB,EAAgC;AAC5BsrD,QAAAA,QAAQ,CAACrtC,kBAAT,CAA4B,kBAA5B,EAAgD,MAAhD,EAAwDje,IAAxD;AACH,OAdiD,CAelD;;;AACA,YAAMqzD,QAAQ,GAAG,MAAM,KAAKF,WAAL,CAAiBnzD,IAAjB,CAAvB;;AACA,UAAI,CAACqzD,QAAL,EAAe;AACX,eAAO,IAAP;AACH;;AACD,aAAO,MAAMA,QAAQ,CAACnjC,UAAT,EAAb;AACH,KArBiB,CAAlB;AAsBH;;AACDojC,EAAAA,aAAa,CAAChkC,OAAD,EAAU;AACnB,WAAO+7B,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD/7B,MAAAA,OAAO,GAAG,MAAMA,OAAhB;AACAA,MAAAA,OAAO,GAAG,KAAKw9B,SAAL,CAAex9B,OAAf,CAAuBA,OAAvB,CAAV;AACA,YAAMikC,WAAW,GAAGjkC,OAAO,CAACnN,SAAR,CAAkB,CAAlB,EAAqBnE,WAArB,KAAqC,eAAzD;AACA,YAAMw1C,eAAe,GAAG,MAAM,KAAKJ,YAAL,CAAkBG,WAAlB,CAA9B;;AACA,UAAI,CAACC,eAAL,EAAsB;AAClB,eAAO,IAAP;AACH,OAPiD,CAQlD;;;AACA,UAAIrvC,KAAK,GAAGtC,QAAQ,CAAC,MAAM,KAAKxH,IAAL,CAAU;AACjCshB,QAAAA,EAAE,EAAE63B,eAD6B;AAEjCjwC,QAAAA,IAAI,EAAG,eAAemR,QAAQ,CAAC6+B,WAAD,CAAR,CAAsBpxC,SAAtB,CAAgC,CAAhC;AAFW,OAAV,CAAP,CAApB,CATkD,CAalD;;AACA,UAAIgC,KAAK,CAAC1hB,MAAN,GAAe,EAAf,IAAqB,CAACiiB,SAAS,CAAC3D,IAAV,CAAeoD,KAAK,CAAC7C,KAAN,CAAY,CAAZ,EAAe,EAAf,CAAf,EAAmC3J,EAAnC,CAAsC,EAAtC,CAA1B,EAAqE;AACjE,eAAO,IAAP;AACH;;AACDwM,MAAAA,KAAK,GAAGA,KAAK,CAAC7C,KAAN,CAAY,EAAZ,CAAR,CAjBkD,CAkBlD;;AACA,UAAI6C,KAAK,CAAC1hB,MAAN,GAAe,EAAnB,EAAuB;AACnB,eAAO,IAAP;AACH,OArBiD,CAsBlD;;;AACA,YAAMA,MAAM,GAAGiiB,SAAS,CAAC3D,IAAV,CAAeoD,KAAK,CAAC7C,KAAN,CAAY,CAAZ,EAAe,EAAf,CAAf,EAAmCxa,QAAnC,EAAf;AACAqd,MAAAA,KAAK,GAAGA,KAAK,CAAC7C,KAAN,CAAY,EAAZ,CAAR,CAxBkD,CAyBlD;;AACA,UAAI7e,MAAM,GAAG0hB,KAAK,CAAC1hB,MAAnB,EAA2B;AACvB,eAAO,IAAP;AACH;;AACD,YAAMzC,IAAI,GAAGoyB,YAAY,CAACjO,KAAK,CAAC7C,KAAN,CAAY,CAAZ,EAAe7e,MAAf,CAAD,CAAzB,CA7BkD,CA8BlD;;AACA,YAAMu6C,IAAI,GAAG,MAAM,KAAKzkB,WAAL,CAAiBv4B,IAAjB,CAAnB;;AACA,UAAIg9C,IAAI,IAAI1tB,OAAZ,EAAqB;AACjB,eAAO,IAAP;AACH;;AACD,aAAOtvB,IAAP;AACH,KApCiB,CAAlB;AAqCH;;AACDsvD,EAAAA,OAAO,CAAC/lC,MAAD,EAAS3K,MAAT,EAAiB;AACpB,WAAO0sC,QAAQ,CAACjsC,UAAT,CAAoBkK,MAAM,GAAG,kBAA7B,EAAiDjM,MAAM,CAACuB,MAAP,CAAc40C,eAA/D,EAAgF;AAAE7zC,MAAAA,SAAS,EAAE2J;AAAb,KAAhF,CAAP;AACH;;AACDmqC,EAAAA,WAAW,CAACtH,KAAD,EAAQ;AACf,SAAK8D,OAAL,GAAgB,KAAKnC,OAAL,CAAaj3B,MAAb,CAAqB53B,CAAD,IAAOA,CAAC,CAACmtD,QAAF,EAA3B,EAAyC5pD,MAAzC,GAAkD,CAAlE;AACH;;AACDkxD,EAAAA,UAAU,CAACvH,KAAD,EAAQ;AACd,SAAK8D,OAAL,GAAgB,KAAKnC,OAAL,CAAaj3B,MAAb,CAAqB53B,CAAD,IAAOA,CAAC,CAACmtD,QAAF,EAA3B,EAAyC5pD,MAAzC,GAAkD,CAAlE;AACH;;AACDmxD,EAAAA,iBAAiB,CAAC/5B,SAAD,EAAYC,QAAZ,EAAsBwsB,IAAtB,EAA4B;AACzC,UAAM8F,KAAK,GAAG,IAAIF,KAAJ,CAAUJ,WAAW,CAACjyB,SAAD,CAArB,EAAkCC,QAAlC,EAA4CwsB,IAA5C,CAAd;;AACA,SAAKyH,OAAL,CAAajxC,IAAb,CAAkBsvC,KAAlB;;AACA,SAAKsH,WAAL,CAAiBtH,KAAjB;;AACA,WAAO,IAAP;AACH;;AACDryB,EAAAA,EAAE,CAACF,SAAD,EAAYC,QAAZ,EAAsB;AACpB,WAAO,KAAK85B,iBAAL,CAAuB/5B,SAAvB,EAAkCC,QAAlC,EAA4C,KAA5C,CAAP;AACH;;AACDwsB,EAAAA,IAAI,CAACzsB,SAAD,EAAYC,QAAZ,EAAsB;AACtB,WAAO,KAAK85B,iBAAL,CAAuB/5B,SAAvB,EAAkCC,QAAlC,EAA4C,IAA5C,CAAP;AACH;;AACDy0B,EAAAA,IAAI,CAAC10B,SAAD,EAAY,GAAG/b,IAAf,EAAqB;AACrB,QAAIiE,MAAM,GAAG,KAAb;AACA,QAAI8xC,OAAO,GAAG,EAAd;AACA,QAAIC,QAAQ,GAAGhI,WAAW,CAACjyB,SAAD,CAA1B;AACA,SAAKk0B,OAAL,GAAe,KAAKA,OAAL,CAAaj3B,MAAb,CAAqBs1B,KAAD,IAAW;AAC1C,UAAIA,KAAK,CAACD,GAAN,KAAc2H,QAAlB,EAA4B;AACxB,eAAO,IAAP;AACH;;AACDxQ,MAAAA,UAAU,CAAC,MAAM;AACb8I,QAAAA,KAAK,CAACtyB,QAAN,CAAe1b,KAAf,CAAqB,IAArB,EAA2BN,IAA3B;AACH,OAFS,EAEP,CAFO,CAAV;AAGAiE,MAAAA,MAAM,GAAG,IAAT;;AACA,UAAIqqC,KAAK,CAAC9F,IAAV,EAAgB;AACZuN,QAAAA,OAAO,CAAC/2C,IAAR,CAAasvC,KAAb;AACA,eAAO,KAAP;AACH;;AACD,aAAO,IAAP;AACH,KAbc,CAAf;AAcAyH,IAAAA,OAAO,CAACl3C,OAAR,CAAiByvC,KAAD,IAAW;AAAE,WAAKuH,UAAL,CAAgBvH,KAAhB;AAAyB,KAAtD;AACA,WAAOrqC,MAAP;AACH;;AACDgyC,EAAAA,aAAa,CAACl6B,SAAD,EAAY;AACrB,QAAI,CAACA,SAAL,EAAgB;AACZ,aAAO,KAAKk0B,OAAL,CAAatrD,MAApB;AACH;;AACD,QAAIqxD,QAAQ,GAAGhI,WAAW,CAACjyB,SAAD,CAA1B;AACA,WAAO,KAAKk0B,OAAL,CAAaj3B,MAAb,CAAqBs1B,KAAD,IAAW;AAClC,aAAQA,KAAK,CAACD,GAAN,KAAc2H,QAAtB;AACH,KAFM,EAEJrxD,MAFH;AAGH;;AACDuxD,EAAAA,SAAS,CAACn6B,SAAD,EAAY;AACjB,QAAIA,SAAS,IAAI,IAAjB,EAAuB;AACnB,aAAO,KAAKk0B,OAAL,CAAatrC,GAAb,CAAkB2pC,KAAD,IAAWA,KAAK,CAACtyB,QAAlC,CAAP;AACH;;AACD,QAAIg6B,QAAQ,GAAGhI,WAAW,CAACjyB,SAAD,CAA1B;AACA,WAAO,KAAKk0B,OAAL,CACFj3B,MADE,CACMs1B,KAAD,IAAYA,KAAK,CAACD,GAAN,KAAc2H,QAD/B,EAEFrxC,GAFE,CAEG2pC,KAAD,IAAWA,KAAK,CAACtyB,QAFnB,CAAP;AAGH;;AACD11B,EAAAA,GAAG,CAACy1B,SAAD,EAAYC,QAAZ,EAAsB;AACrB,QAAIA,QAAQ,IAAI,IAAhB,EAAsB;AAClB,aAAO,KAAKm6B,kBAAL,CAAwBp6B,SAAxB,CAAP;AACH;;AACD,UAAMg6B,OAAO,GAAG,EAAhB;AACA,QAAI78B,KAAK,GAAG,KAAZ;AACA,QAAI88B,QAAQ,GAAGhI,WAAW,CAACjyB,SAAD,CAA1B;AACA,SAAKk0B,OAAL,GAAe,KAAKA,OAAL,CAAaj3B,MAAb,CAAqBs1B,KAAD,IAAW;AAC1C,UAAIA,KAAK,CAACD,GAAN,KAAc2H,QAAd,IAA0B1H,KAAK,CAACtyB,QAAN,IAAkBA,QAAhD,EAA0D;AACtD,eAAO,IAAP;AACH;;AACD,UAAI9C,KAAJ,EAAW;AACP,eAAO,IAAP;AACH;;AACDA,MAAAA,KAAK,GAAG,IAAR;AACA68B,MAAAA,OAAO,CAAC/2C,IAAR,CAAasvC,KAAb;AACA,aAAO,KAAP;AACH,KAVc,CAAf;AAWAyH,IAAAA,OAAO,CAACl3C,OAAR,CAAiByvC,KAAD,IAAW;AAAE,WAAKuH,UAAL,CAAgBvH,KAAhB;AAAyB,KAAtD;AACA,WAAO,IAAP;AACH;;AACD6H,EAAAA,kBAAkB,CAACp6B,SAAD,EAAY;AAC1B,QAAIg6B,OAAO,GAAG,EAAd;;AACA,QAAIh6B,SAAS,IAAI,IAAjB,EAAuB;AACnBg6B,MAAAA,OAAO,GAAG,KAAK9F,OAAf;AACA,WAAKA,OAAL,GAAe,EAAf;AACH,KAHD,MAIK;AACD,YAAM+F,QAAQ,GAAGhI,WAAW,CAACjyB,SAAD,CAA5B;AACA,WAAKk0B,OAAL,GAAe,KAAKA,OAAL,CAAaj3B,MAAb,CAAqBs1B,KAAD,IAAW;AAC1C,YAAIA,KAAK,CAACD,GAAN,KAAc2H,QAAlB,EAA4B;AACxB,iBAAO,IAAP;AACH;;AACDD,QAAAA,OAAO,CAAC/2C,IAAR,CAAasvC,KAAb;AACA,eAAO,KAAP;AACH,OANc,CAAf;AAOH;;AACDyH,IAAAA,OAAO,CAACl3C,OAAR,CAAiByvC,KAAD,IAAW;AAAE,WAAKuH,UAAL,CAAgBvH,KAAhB;AAAyB,KAAtD;AACA,WAAO,IAAP;AACH;;AAvrC+B;;AA2rCpC,IAAI8H,WAAW,GAAIj6C,SAAS,IAAIA,SAAS,CAAC4L,SAAxB,IAAsC,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACjG,WAASC,KAAT,CAAexI,KAAf,EAAsB;AAAE,WAAOA,KAAK,YAAYsI,CAAjB,GAAqBtI,KAArB,GAA6B,IAAIsI,CAAJ,CAAM,UAAUG,OAAV,EAAmB;AAAEA,MAAAA,OAAO,CAACzI,KAAD,CAAP;AAAiB,KAA5C,CAApC;AAAoF;;AAC5G,SAAO,KAAKsI,CAAC,KAAKA,CAAC,GAAGI,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;AACvD,aAASC,SAAT,CAAmB5I,KAAnB,EAA0B;AAAE,UAAI;AAAE6I,QAAAA,IAAI,CAACN,SAAS,CAACxL,IAAV,CAAeiD,KAAf,CAAD,CAAJ;AAA8B,OAApC,CAAqC,OAAOxe,CAAP,EAAU;AAAEmnB,QAAAA,MAAM,CAACnnB,CAAD,CAAN;AAAY;AAAE;;AAC3F,aAASsnB,QAAT,CAAkB9I,KAAlB,EAAyB;AAAE,UAAI;AAAE6I,QAAAA,IAAI,CAACN,SAAS,CAAC,OAAD,CAAT,CAAmBvI,KAAnB,CAAD,CAAJ;AAAkC,OAAxC,CAAyC,OAAOxe,CAAP,EAAU;AAAEmnB,QAAAA,MAAM,CAACnnB,CAAD,CAAN;AAAY;AAAE;;AAC9F,aAASqnB,IAAT,CAAcxE,MAAd,EAAsB;AAAEA,MAAAA,MAAM,CAAC0E,IAAP,GAAcN,OAAO,CAACpE,MAAM,CAACrE,KAAR,CAArB,GAAsCwI,KAAK,CAACnE,MAAM,CAACrE,KAAR,CAAL,CAAoBgJ,IAApB,CAAyBJ,SAAzB,EAAoCE,QAApC,CAAtC;AAAsF;;AAC9GD,IAAAA,IAAI,CAAC,CAACN,SAAS,GAAGA,SAAS,CAAC7H,KAAV,CAAgB0H,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDtL,IAAzD,EAAD,CAAJ;AACH,GALM,CAAP;AAMH,CARD;;AASA,MAAM05C,QAAQ,GAAG,IAAI72C,MAAJ,CAAW0qC,SAAX,CAAjB;AACA,MAAMoM,QAAQ,GAAG,CAAC,MAAD,EAAS,aAAT,CAAjB;;AACA,SAASC,UAAT,CAAoB9qC,MAApB,EAA4BjN,KAA5B,EAAmCsC,MAAnC,EAA2C;AACvC;AACA;AACA,MAAI2K,MAAM,KAAK,MAAX,IAAqBjN,KAAK,CAACqC,IAAN,KAAerB,MAAM,CAACuB,MAAP,CAAc0mC,YAAtD,EAAoE;AAChE,UAAMrmD,CAAC,GAAGod,KAAK,CAACA,KAAhB;;AACA,QAAIpd,CAAC,IAAIA,CAAC,CAACge,OAAF,CAAUgG,KAAV,CAAgB,UAAhB,CAAL,IAAoCxB,WAAW,CAACxiB,CAAC,CAACqkB,IAAH,CAAnD,EAA6D;AACzD,aAAOrkB,CAAC,CAACqkB,IAAT;AACH;;AACD4wC,IAAAA,QAAQ,CAAC90C,UAAT,CAAoB,uCAApB,EAA6D/B,MAAM,CAACuB,MAAP,CAAcquC,cAA3E,EAA2F;AACvF5wC,MAAAA,KADuF;AAChFiH,MAAAA,IAAI,EAAE;AAD0E,KAA3F;AAGH;;AACD,MAAIrG,OAAO,GAAGZ,KAAK,CAACY,OAApB;;AACA,MAAIZ,KAAK,CAACqC,IAAN,KAAerB,MAAM,CAACuB,MAAP,CAAc0mC,YAA7B,IAA6CjpC,KAAK,CAACA,KAAnD,IAA4D,OAAQA,KAAK,CAACA,KAAN,CAAYY,OAApB,KAAiC,QAAjG,EAA2G;AACvGA,IAAAA,OAAO,GAAGZ,KAAK,CAACA,KAAN,CAAYY,OAAtB;AACH,GAFD,MAGK,IAAI,OAAQZ,KAAK,CAACimC,IAAd,KAAwB,QAA5B,EAAsC;AACvCrlC,IAAAA,OAAO,GAAGZ,KAAK,CAACimC,IAAhB;AACH,GAFI,MAGA,IAAI,OAAQjmC,KAAK,CAACg4C,YAAd,KAAgC,QAApC,EAA8C;AAC/Cp3C,IAAAA,OAAO,GAAGZ,KAAK,CAACg4C,YAAhB;AACH;;AACDp3C,EAAAA,OAAO,GAAG,CAACA,OAAO,IAAI,EAAZ,EAAgBc,WAAhB,EAAV;AACA,QAAMoS,WAAW,GAAGxR,MAAM,CAACwR,WAAP,IAAsBxR,MAAM,CAAC8zC,iBAAjD,CAvBuC,CAwBvC;;AACA,MAAIx1C,OAAO,CAACgG,KAAR,CAAc,+CAAd,CAAJ,EAAoE;AAChEixC,IAAAA,QAAQ,CAAC90C,UAAT,CAAoB,mDAApB,EAAyE/B,MAAM,CAACuB,MAAP,CAAc2b,kBAAvF,EAA2G;AACvGle,MAAAA,KADuG;AAChGiN,MAAAA,MADgG;AACxF6G,MAAAA;AADwF,KAA3G;AAGH,GA7BsC,CA8BvC;;;AACA,MAAIlT,OAAO,CAACgG,KAAR,CAAc,eAAd,CAAJ,EAAoC;AAChCixC,IAAAA,QAAQ,CAAC90C,UAAT,CAAoB,6BAApB,EAAmD/B,MAAM,CAACuB,MAAP,CAAc4b,aAAjE,EAAgF;AAC5Ene,MAAAA,KAD4E;AACrEiN,MAAAA,MADqE;AAC7D6G,MAAAA;AAD6D,KAAhF;AAGH,GAnCsC,CAoCvC;;;AACA,MAAIlT,OAAO,CAACgG,KAAR,CAAc,qCAAd,CAAJ,EAA0D;AACtDixC,IAAAA,QAAQ,CAAC90C,UAAT,CAAoB,yBAApB,EAA+C/B,MAAM,CAACuB,MAAP,CAAc6b,uBAA7D,EAAsF;AAClFpe,MAAAA,KADkF;AAC3EiN,MAAAA,MAD2E;AACnE6G,MAAAA;AADmE,KAAtF;AAGH,GAzCsC,CA0CvC;;;AACA,MAAIlT,OAAO,CAACgG,KAAR,CAAc,uBAAd,CAAJ,EAA4C;AACxCixC,IAAAA,QAAQ,CAAC90C,UAAT,CAAoB,+CAApB,EAAqE/B,MAAM,CAACuB,MAAP,CAAcc,qBAAnF,EAA0G;AACtGrD,MAAAA,KADsG;AAC/FiN,MAAAA,MAD+F;AACvF6G,MAAAA;AADuF,KAA1G;AAGH;;AACD,MAAIgkC,QAAQ,CAACrhC,OAAT,CAAiBxJ,MAAjB,KAA4B,CAA5B,IAAiCrM,OAAO,CAACgG,KAAR,CAAc,8EAAd,CAArC,EAAoI;AAChIixC,IAAAA,QAAQ,CAAC90C,UAAT,CAAoB,2EAApB,EAAiG/B,MAAM,CAACuB,MAAP,CAAckd,uBAA/G,EAAwI;AACpIzf,MAAAA,KADoI;AAC7HiN,MAAAA,MAD6H;AACrH6G,MAAAA;AADqH,KAAxI;AAGH;;AACD,QAAM9T,KAAN;AACH;;AACD,SAASooC,KAAT,CAAeT,OAAf,EAAwB;AACpB,SAAO,IAAI79B,OAAJ,CAAY,UAAUD,OAAV,EAAmB;AAClCm9B,IAAAA,UAAU,CAACn9B,OAAD,EAAU89B,OAAV,CAAV;AACH,GAFM,CAAP;AAGH;;AACD,SAASsQ,SAAT,CAAmB/lC,OAAnB,EAA4B;AACxB,MAAIA,OAAO,CAAClS,KAAZ,EAAmB;AACf;AACA,UAAMA,KAAK,GAAG,IAAI5a,KAAJ,CAAU8sB,OAAO,CAAClS,KAAR,CAAcY,OAAxB,CAAd;AACAZ,IAAAA,KAAK,CAACqC,IAAN,GAAa6P,OAAO,CAAClS,KAAR,CAAcqC,IAA3B;AACArC,IAAAA,KAAK,CAACiH,IAAN,GAAaiL,OAAO,CAAClS,KAAR,CAAciH,IAA3B;AACA,UAAMjH,KAAN;AACH;;AACD,SAAOkS,OAAO,CAACzM,MAAf;AACH;;AACD,SAASyyC,YAAT,CAAsB92C,KAAtB,EAA6B;AACzB,MAAIA,KAAJ,EAAW;AACP,WAAOA,KAAK,CAACM,WAAN,EAAP;AACH;;AACD,SAAON,KAAP;AACH;;AACD,MAAM+2C,mBAAmB,GAAG,EAA5B;;AACA,MAAMC,aAAN,SAA4B/5B,MAA5B,CAAmC;AAC/B14B,EAAAA,WAAW,CAAC0iB,gBAAD,EAAmBoW,QAAnB,EAA6B45B,cAA7B,EAA6C;AACpDR,IAAAA,QAAQ,CAAC9zC,QAAT,CAAkBuE,GAAG,CAACtE,MAAtB,EAA8Bo0C,aAA9B;AACA;;AACA,QAAI/vC,gBAAgB,KAAK8vC,mBAAzB,EAA8C;AAC1C,YAAM,IAAI/yD,KAAJ,CAAU,4EAAV,CAAN;AACH;;AACDklB,IAAAA,cAAc,CAAC,IAAD,EAAO,UAAP,EAAmBmU,QAAnB,CAAd;;AACA,QAAI45B,cAAc,IAAI,IAAtB,EAA4B;AACxBA,MAAAA,cAAc,GAAG,CAAjB;AACH;;AACD,QAAI,OAAQA,cAAR,KAA4B,QAAhC,EAA0C;AACtC/tC,MAAAA,cAAc,CAAC,IAAD,EAAO,UAAP,EAAmB,KAAKmU,QAAL,CAAc+xB,SAAd,CAAwBx9B,OAAxB,CAAgCqlC,cAAhC,CAAnB,CAAd;AACA/tC,MAAAA,cAAc,CAAC,IAAD,EAAO,QAAP,EAAiB,IAAjB,CAAd;AACH,KAHD,MAIK,IAAI,OAAQ+tC,cAAR,KAA4B,QAAhC,EAA0C;AAC3C/tC,MAAAA,cAAc,CAAC,IAAD,EAAO,QAAP,EAAiB+tC,cAAjB,CAAd;AACA/tC,MAAAA,cAAc,CAAC,IAAD,EAAO,UAAP,EAAmB,IAAnB,CAAd;AACH,KAHI,MAIA;AACDutC,MAAAA,QAAQ,CAACl2C,kBAAT,CAA4B,0BAA5B,EAAwD,gBAAxD,EAA0E02C,cAA1E;AACH;AACJ;;AACDC,EAAAA,OAAO,CAAC75B,QAAD,EAAW;AACd,WAAOo5B,QAAQ,CAAC90C,UAAT,CAAoB,yCAApB,EAA+D/B,MAAM,CAACuB,MAAP,CAAcc,qBAA7E,EAAoG;AACvGC,MAAAA,SAAS,EAAE;AAD4F,KAApG,CAAP;AAGH;;AACDi1C,EAAAA,gBAAgB,GAAG;AACf,WAAO,IAAIC,sBAAJ,CAA2BL,mBAA3B,EAAgD,KAAK15B,QAArD,EAA+D,KAAKg6B,QAAL,IAAiB,KAAKC,MAArF,CAAP;AACH;;AACD9kC,EAAAA,UAAU,GAAG;AACT,QAAI,KAAK6kC,QAAT,EAAmB;AACf,aAAO3uC,OAAO,CAACD,OAAR,CAAgB,KAAK4uC,QAArB,CAAP;AACH;;AACD,WAAO,KAAKh6B,QAAL,CAAck6B,IAAd,CAAmB,cAAnB,EAAmC,EAAnC,EAAuCvuC,IAAvC,CAA6CwuC,QAAD,IAAc;AAC7D,UAAIA,QAAQ,CAACzyD,MAAT,IAAmB,KAAKuyD,MAA5B,EAAoC;AAChCb,QAAAA,QAAQ,CAAC90C,UAAT,CAAoB,sBAAsB,KAAK21C,MAA/C,EAAuD13C,MAAM,CAACuB,MAAP,CAAcc,qBAArE,EAA4F;AACxFC,UAAAA,SAAS,EAAE;AAD6E,SAA5F;AAGH;;AACD,aAAO,KAAKmb,QAAL,CAAc+xB,SAAd,CAAwBx9B,OAAxB,CAAgC4lC,QAAQ,CAAC,KAAKF,MAAN,CAAxC,CAAP;AACH,KAPM,CAAP;AAQH;;AACDG,EAAAA,wBAAwB,CAAC/kC,WAAD,EAAc;AAClCA,IAAAA,WAAW,GAAG/I,WAAW,CAAC+I,WAAD,CAAzB;AACA,UAAMglC,WAAW,GAAG,KAAKllC,UAAL,GAAkBxJ,IAAlB,CAAwB4I,OAAD,IAAa;AACpD,UAAIA,OAAJ,EAAa;AACTA,QAAAA,OAAO,GAAGA,OAAO,CAACtR,WAAR,EAAV;AACH;;AACD,aAAOsR,OAAP;AACH,KALmB,CAApB,CAFkC,CAQlC;AACA;AACA;;AACA,QAAIc,WAAW,CAAC0L,QAAZ,IAAwB,IAA5B,EAAkC;AAC9B,YAAMu5B,QAAQ,GAAGhuC,WAAW,CAAC+I,WAAD,CAA5B;AACAilC,MAAAA,QAAQ,CAACt0C,IAAT,GAAgBq0C,WAAhB;AACAhlC,MAAAA,WAAW,CAAC0L,QAAZ,GAAuB,KAAKf,QAAL,CAAcE,WAAd,CAA0Bo6B,QAA1B,CAAvB;AACH;;AACD,QAAIjlC,WAAW,CAACuL,EAAZ,IAAkB,IAAtB,EAA4B;AACxBvL,MAAAA,WAAW,CAACuL,EAAZ,GAAiBvV,OAAO,CAACD,OAAR,CAAgBiK,WAAW,CAACuL,EAA5B,EAAgCjV,IAAhC,CAAsCiV,EAAD,IAAQu4B,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AACzG,YAAIv4B,EAAE,IAAI,IAAV,EAAgB;AACZ,iBAAO,IAAP;AACH;;AACD,cAAMrM,OAAO,GAAG,MAAM,KAAKyL,QAAL,CAAcxC,WAAd,CAA0BoD,EAA1B,CAAtB;;AACA,YAAIrM,OAAO,IAAI,IAAf,EAAqB;AACjB6kC,UAAAA,QAAQ,CAACl2C,kBAAT,CAA4B,oCAA5B,EAAkE,OAAlE,EAA2E0d,EAA3E;AACH;;AACD,eAAOrM,OAAP;AACH,OATwE,CAAxD,CAAjB;AAUH;;AACD,WAAOvI,iBAAiB,CAAC;AACrBmU,MAAAA,EAAE,EAAEnU,iBAAiB,CAACqJ,WAAD,CADA;AAErBklC,MAAAA,MAAM,EAAEF;AAFa,KAAD,CAAjB,CAGJ1uC,IAHI,CAGC,CAAC;AAAEwU,MAAAA,EAAF;AAAMo6B,MAAAA;AAAN,KAAD,KAAoB;AACxB,UAAIp6B,EAAE,CAACna,IAAH,IAAW,IAAf,EAAqB;AACjB,YAAIma,EAAE,CAACna,IAAH,CAAQ/C,WAAR,OAA0Bs3C,MAA9B,EAAsC;AAClCnB,UAAAA,QAAQ,CAACl2C,kBAAT,CAA4B,uBAA5B,EAAqD,aAArD,EAAoEmS,WAApE;AACH;AACJ,OAJD,MAKK;AACD8K,QAAAA,EAAE,CAACna,IAAH,GAAUu0C,MAAV;AACH;;AACD,YAAM3C,KAAK,GAAG,KAAK53B,QAAL,CAAc94B,WAAd,CAA0BszD,kBAA1B,CAA6Cr6B,EAA7C,EAAiD;AAAEna,QAAAA,IAAI,EAAE;AAAR,OAAjD,CAAd;AACA,aAAO,KAAKga,QAAL,CAAck6B,IAAd,CAAmB,qBAAnB,EAA0C,CAACtC,KAAD,CAA1C,EAAmDjsC,IAAnD,CAAyDmR,IAAD,IAAU;AACrE,eAAOA,IAAP;AACH,OAFM,EAEHvb,KAAD,IAAW;AACV,eAAO+3C,UAAU,CAAC,iBAAD,EAAoB/3C,KAApB,EAA2Bq2C,KAA3B,CAAjB;AACH,OAJM,CAAP;AAKH,KAlBM,CAAP;AAmBH;;AACDp3B,EAAAA,eAAe,CAACnL,WAAD,EAAc;AACzB,WAAO+jC,QAAQ,CAAC90C,UAAT,CAAoB,qCAApB,EAA2D/B,MAAM,CAACuB,MAAP,CAAcc,qBAAzE,EAAgG;AACnGC,MAAAA,SAAS,EAAE;AADwF,KAAhG,CAAP;AAGH;;AACDwb,EAAAA,eAAe,CAAChL,WAAD,EAAc;AACzB,WAAO8jC,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD;AACA,YAAMxL,WAAW,GAAG,MAAM,KAAK3tB,QAAL,CAAcg0B,uBAAd,CAAsC,MAAM,IAAI,KAAKh0B,QAAL,CAAc40B,eAA9D,CAA1B,CAFkD,CAGlD;;AACA,YAAM93B,IAAI,GAAG,MAAM,KAAKs9B,wBAAL,CAA8B/kC,WAA9B,CAAnB;;AACA,UAAI;AACA;AACA;AACA;AACA,eAAO,MAAM41B,IAAI,CAAC,MAAMkO,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AACnE,gBAAMh5B,EAAE,GAAG,MAAM,KAAKH,QAAL,CAAc02B,cAAd,CAA6B55B,IAA7B,CAAjB;;AACA,cAAIqD,EAAE,KAAK,IAAX,EAAiB;AACb,mBAAOjhB,SAAP;AACH;;AACD,iBAAO,KAAK8gB,QAAL,CAAcg3B,gBAAd,CAA+B72B,EAA/B,EAAmCrD,IAAnC,EAAyC6wB,WAAzC,CAAP;AACH,SANkC,CAAlB,EAMb;AAAErC,UAAAA,QAAQ,EAAE,KAAKtrB;AAAjB,SANa,CAAjB;AAOH,OAXD,CAYA,OAAOze,KAAP,EAAc;AACVA,QAAAA,KAAK,CAAC2sC,eAAN,GAAwBpxB,IAAxB;AACA,cAAMvb,KAAN;AACH;AACJ,KArBiB,CAAlB;AAsBH;;AACDk5C,EAAAA,WAAW,CAACt4C,OAAD,EAAU;AACjB,WAAOg3C,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,YAAM3wC,IAAI,GAAK,OAAQrG,OAAR,KAAqB,QAAtB,GAAkC6U,WAAW,CAAC7U,OAAD,CAA7C,GAAyDA,OAAvE;AACA,YAAMoS,OAAO,GAAG,MAAM,KAAKY,UAAL,EAAtB,CAFkD,CAGlD;;AACA,aAAO,MAAM,KAAK6K,QAAL,CAAck6B,IAAd,CAAmB,UAAnB,EAA+B,CAAC3lC,OAAO,CAACtR,WAAR,EAAD,EAAwBoF,OAAO,CAACG,IAAD,CAA/B,CAA/B,CAAb;AACH,KALiB,CAAlB;AAMH;;AACDkyC,EAAAA,cAAc,CAACt9B,MAAD,EAAS9B,KAAT,EAAgB3Y,KAAhB,EAAuB;AACjC,WAAOw2C,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD;AACA,YAAMwB,SAAS,GAAG,MAAMt/B,gBAAgB,CAACkC,YAAjB,CAA8BH,MAA9B,EAAsC9B,KAAtC,EAA6C3Y,KAA7C,EAAqD1d,IAAD,IAAU;AAClF,eAAO,KAAK+6B,QAAL,CAAcxC,WAAd,CAA0Bv4B,IAA1B,CAAP;AACH,OAFuB,CAAxB;AAGA,YAAMsvB,OAAO,GAAG,MAAM,KAAKY,UAAL,EAAtB;AACA,aAAO,MAAM,KAAK6K,QAAL,CAAck6B,IAAd,CAAmB,sBAAnB,EAA2C,CACpD3lC,OAAO,CAACtR,WAAR,EADoD,EAEpDkB,IAAI,CAACC,SAAL,CAAeiX,gBAAgB,CAACqC,UAAjB,CAA4Bi9B,SAAS,CAACv9B,MAAtC,EAA8C9B,KAA9C,EAAqDq/B,SAAS,CAACh4C,KAA/D,CAAf,CAFoD,CAA3C,CAAb;AAIH,KAViB,CAAlB;AAWH;;AACDi4C,EAAAA,MAAM,CAACvR,QAAD,EAAW;AACb,WAAO8P,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,YAAMn5B,QAAQ,GAAG,KAAKA,QAAtB;AACA,YAAMzL,OAAO,GAAG,MAAM,KAAKY,UAAL,EAAtB;AACA,aAAO6K,QAAQ,CAACk6B,IAAT,CAAc,wBAAd,EAAwC,CAAC3lC,OAAO,CAACtR,WAAR,EAAD,EAAwBomC,QAAxB,EAAkC,IAAlC,CAAxC,CAAP;AACH,KAJiB,CAAlB;AAKH;;AApJ8B;;AAsJnC,MAAM0Q,sBAAN,SAAqCJ,aAArC,CAAmD;AAC/Ct5B,EAAAA,eAAe,CAAChL,WAAD,EAAc;AACzB,WAAO,KAAK+kC,wBAAL,CAA8B/kC,WAA9B,EAA2C1J,IAA3C,CAAiDmR,IAAD,IAAU;AAC7D,aAAO;AACHA,QAAAA,IAAI,EAAEA,IADH;AAEHxH,QAAAA,KAAK,EAAE,IAFJ;AAGHyL,QAAAA,QAAQ,EAAE,IAHP;AAIHzC,QAAAA,QAAQ,EAAE,IAJP;AAKH9V,QAAAA,IAAI,EAAE,IALH;AAMH7F,QAAAA,KAAK,EAAE,IANJ;AAOH8X,QAAAA,OAAO,EAAE,IAPN;AAQHozB,QAAAA,aAAa,EAAE,CARZ;AASH7nC,QAAAA,IAAI,EAAE,IATH;AAUHyxC,QAAAA,IAAI,EAAG5J,aAAD,IAAmB;AAAE,iBAAO,KAAK7tB,QAAL,CAAc+1B,kBAAd,CAAiCj5B,IAAjC,EAAuC+wB,aAAvC,CAAP;AAA+D;AAVvF,OAAP;AAYH,KAbM,CAAP;AAcH;;AAhB8C;;AAkBnD,MAAMgN,wBAAwB,GAAG;AAC7BpgC,EAAAA,OAAO,EAAE,IADoB;AACdjS,EAAAA,IAAI,EAAE,IADQ;AACFuY,EAAAA,QAAQ,EAAE,IADR;AACczC,EAAAA,QAAQ,EAAE,IADxB;AAC8BhJ,EAAAA,KAAK,EAAE,IADrC;AAC2CsL,EAAAA,EAAE,EAAE,IAD/C;AACqDje,EAAAA,KAAK,EAAE,IAD5D;AAE7B9d,EAAAA,IAAI,EAAE,IAFuB;AAEjB29C,EAAAA,UAAU,EAAE,IAFK;AAG7B9jB,EAAAA,YAAY,EAAE,IAHe;AAGTC,EAAAA,oBAAoB,EAAE;AAHb,CAAjC;;AAKA,MAAM2mB,eAAN,SAA8ByN,YAA9B,CAA2C;AACvC7rD,EAAAA,WAAW,CAACm+C,GAAD,EAAM3kB,OAAN,EAAe;AACtB04B,IAAAA,QAAQ,CAAC9zC,QAAT,CAAkBuE,GAAG,CAACtE,MAAtB,EAA8B+/B,eAA9B;AACA,QAAIwV,cAAc,GAAGp6B,OAArB,CAFsB,CAGtB;;AACA,QAAIo6B,cAAc,IAAI,IAAtB,EAA4B;AACxBA,MAAAA,cAAc,GAAG,IAAIzvC,OAAJ,CAAY,CAACD,OAAD,EAAUE,MAAV,KAAqB;AAC9Ci9B,QAAAA,UAAU,CAAC,MAAM;AACb,eAAK6K,aAAL,GAAqBznC,IAArB,CAA2B+U,OAAD,IAAa;AACnCtV,YAAAA,OAAO,CAACsV,OAAD,CAAP;AACH,WAFD,EAEInf,KAAD,IAAW;AACV+J,YAAAA,MAAM,CAAC/J,KAAD,CAAN;AACH,WAJD;AAKH,SANS,EAMP,CANO,CAAV;AAOH,OARgB,CAAjB;AASH;;AACD,UAAMu5C,cAAN,EAfsB,CAgBtB;;AACA,QAAI,CAACzV,GAAL,EAAU;AACNA,MAAAA,GAAG,GAAGv5B,SAAS,CAAC,KAAK5kB,WAAN,EAAmB,YAAnB,CAAT,EAAN;AACH;;AACD,QAAI,OAAQm+C,GAAR,KAAiB,QAArB,EAA+B;AAC3Bx5B,MAAAA,cAAc,CAAC,IAAD,EAAO,YAAP,EAAqBrJ,MAAM,CAACwH,MAAP,CAAc;AAC7Cq7B,QAAAA,GAAG,EAAEA;AADwC,OAAd,CAArB,CAAd;AAGH,KAJD,MAKK;AACDx5B,MAAAA,cAAc,CAAC,IAAD,EAAO,YAAP,EAAqBrJ,MAAM,CAACwH,MAAP,CAAcsC,WAAW,CAAC+4B,GAAD,CAAzB,CAArB,CAAd;AACH;;AACD,SAAK0V,OAAL,GAAe,EAAf;AACH;;AACS,MAANC,MAAM,GAAG;AACT,QAAI,KAAKC,eAAL,IAAwB,IAA5B,EAAkC;AAC9B,WAAKA,eAAL,GAAuB,EAAvB;AACH;;AACD,WAAO,KAAKA,eAAZ;AACH;;AACgB,SAAVC,UAAU,GAAG;AAChB,WAAO,wBAAP;AACH;;AACD9H,EAAAA,aAAa,GAAG;AACZ,QAAI,CAAC,KAAK4H,MAAL,CAAY,eAAZ,CAAL,EAAmC;AAC/B,WAAKA,MAAL,CAAY,eAAZ,IAA+B,KAAKG,sBAAL,EAA/B,CAD+B,CAE/B;;AACA5S,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKyS,MAAL,CAAY,eAAZ,IAA+B,IAA/B;AACH,OAFS,EAEP,CAFO,CAAV;AAGH;;AACD,WAAO,KAAKA,MAAL,CAAY,eAAZ,CAAP;AACH;;AACDG,EAAAA,sBAAsB,GAAG;AACrB,WAAOhC,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD,YAAMxP,KAAK,CAAC,CAAD,CAAX;AACA,UAAIlvB,OAAO,GAAG,IAAd;;AACA,UAAI;AACAA,QAAAA,OAAO,GAAG,MAAM,KAAKy/B,IAAL,CAAU,aAAV,EAAyB,EAAzB,CAAhB;AACH,OAFD,CAGA,OAAO34C,KAAP,EAAc;AACV,YAAI;AACAkZ,UAAAA,OAAO,GAAG,MAAM,KAAKy/B,IAAL,CAAU,aAAV,EAAyB,EAAzB,CAAhB;AACH,SAFD,CAGA,OAAO34C,KAAP,EAAc,CAAG;AACpB;;AACD,UAAIkZ,OAAO,IAAI,IAAf,EAAqB;AACjB,cAAMkG,UAAU,GAAG7U,SAAS,CAAC,KAAK5kB,WAAN,EAAmB,YAAnB,CAA5B;;AACA,YAAI;AACA,iBAAOy5B,UAAU,CAAChX,SAAS,CAAC3D,IAAV,CAAeyU,OAAf,EAAwB1uB,QAAxB,EAAD,CAAjB;AACH,SAFD,CAGA,OAAOwV,KAAP,EAAc;AACV,iBAAO63C,QAAQ,CAAC90C,UAAT,CAAoB,0BAApB,EAAgD/B,MAAM,CAACuB,MAAP,CAAciwC,aAA9D,EAA6E;AAChFt5B,YAAAA,OAAO,EAAEA,OADuE;AAEhF42B,YAAAA,KAAK,EAAE,gBAFyE;AAGhF5G,YAAAA,WAAW,EAAElpC;AAHmE,WAA7E,CAAP;AAKH;AACJ;;AACD,aAAO63C,QAAQ,CAAC90C,UAAT,CAAoB,0BAApB,EAAgD/B,MAAM,CAACuB,MAAP,CAAciwC,aAA9D,EAA6E;AAChF1C,QAAAA,KAAK,EAAE;AADyE,OAA7E,CAAP;AAGH,KA5BiB,CAAlB;AA6BH;;AACD+J,EAAAA,SAAS,CAACxB,cAAD,EAAiB;AACtB,WAAO,IAAID,aAAJ,CAAkBD,mBAAlB,EAAuC,IAAvC,EAA6CE,cAA7C,CAAP;AACH;;AACDyB,EAAAA,kBAAkB,CAACzB,cAAD,EAAiB;AAC/B,WAAO,KAAKwB,SAAL,CAAexB,cAAf,EAA+BE,gBAA/B,EAAP;AACH;;AACDwB,EAAAA,YAAY,GAAG;AACX,WAAO,KAAKpB,IAAL,CAAU,cAAV,EAA0B,EAA1B,EAA8BvuC,IAA9B,CAAoCwuC,QAAD,IAAc;AACpD,aAAOA,QAAQ,CAACzyC,GAAT,CAAc/Y,CAAD,IAAO,KAAKojD,SAAL,CAAex9B,OAAf,CAAuB5lB,CAAvB,CAApB,CAAP;AACH,KAFM,CAAP;AAGH;;AACDurD,EAAAA,IAAI,CAAC1rC,MAAD,EAAS3K,MAAT,EAAiB;AACjB,UAAMyjC,OAAO,GAAG;AACZ94B,MAAAA,MAAM,EAAEA,MADI;AAEZ3K,MAAAA,MAAM,EAAEA,MAFI;AAGZsV,MAAAA,EAAE,EAAG,KAAK4hC,OAAL,EAHO;AAIZQ,MAAAA,OAAO,EAAE;AAJG,KAAhB;AAMA,SAAK/H,IAAL,CAAU,OAAV,EAAmB;AACfgI,MAAAA,MAAM,EAAE,SADO;AAEflU,MAAAA,OAAO,EAAEz6B,QAAQ,CAACy6B,OAAD,CAFF;AAGftnB,MAAAA,QAAQ,EAAE;AAHK,KAAnB,EAPiB,CAYjB;AACA;;AACA,UAAMynB,KAAK,GAAI,CAAC,aAAD,EAAgB,iBAAhB,EAAmCzvB,OAAnC,CAA2CxJ,MAA3C,KAAsD,CAArE;;AACA,QAAIi5B,KAAK,IAAI,KAAKuT,MAAL,CAAYxsC,MAAZ,CAAb,EAAkC;AAC9B,aAAO,KAAKwsC,MAAL,CAAYxsC,MAAZ,CAAP;AACH;;AACD,UAAMxH,MAAM,GAAG4jC,SAAS,CAAC,KAAKjC,UAAN,EAAkBxkC,IAAI,CAACC,SAAL,CAAekjC,OAAf,CAAlB,EAA2CkS,SAA3C,CAAT,CAA+D7tC,IAA/D,CAAqE3E,MAAD,IAAY;AAC3F,WAAKwsC,IAAL,CAAU,OAAV,EAAmB;AACfgI,QAAAA,MAAM,EAAE,UADO;AAEflU,QAAAA,OAAO,EAAEA,OAFM;AAGfO,QAAAA,QAAQ,EAAE7gC,MAHK;AAIfgZ,QAAAA,QAAQ,EAAE;AAJK,OAAnB;AAMA,aAAOhZ,MAAP;AACH,KARc,EAQXzF,KAAD,IAAW;AACV,WAAKiyC,IAAL,CAAU,OAAV,EAAmB;AACfgI,QAAAA,MAAM,EAAE,UADO;AAEfj6C,QAAAA,KAAK,EAAEA,KAFQ;AAGf+lC,QAAAA,OAAO,EAAEA,OAHM;AAIftnB,QAAAA,QAAQ,EAAE;AAJK,OAAnB;AAMA,YAAMze,KAAN;AACH,KAhBc,CAAf,CAlBiB,CAmCjB;;AACA,QAAIkmC,KAAJ,EAAW;AACP,WAAKuT,MAAL,CAAYxsC,MAAZ,IAAsBxH,MAAtB;AACAuhC,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKyS,MAAL,CAAYxsC,MAAZ,IAAsB,IAAtB;AACH,OAFS,EAEP,CAFO,CAAV;AAGH;;AACD,WAAOxH,MAAP;AACH;;AACDy0C,EAAAA,cAAc,CAACjtC,MAAD,EAAS3K,MAAT,EAAiB;AAC3B,YAAQ2K,MAAR;AACI,WAAK,gBAAL;AACI,eAAO,CAAC,iBAAD,EAAoB,EAApB,CAAP;;AACJ,WAAK,aAAL;AACI,eAAO,CAAC,cAAD,EAAiB,EAAjB,CAAP;;AACJ,WAAK,YAAL;AACI,eAAO,CAAC,gBAAD,EAAmB,CAACirC,YAAY,CAAC51C,MAAM,CAAC0Q,OAAR,CAAb,EAA+B1Q,MAAM,CAACic,QAAtC,CAAnB,CAAP;;AACJ,WAAK,qBAAL;AACI,eAAO,CAAC,yBAAD,EAA4B,CAAC25B,YAAY,CAAC51C,MAAM,CAAC0Q,OAAR,CAAb,EAA+B1Q,MAAM,CAACic,QAAtC,CAA5B,CAAP;;AACJ,WAAK,SAAL;AACI,eAAO,CAAC,aAAD,EAAgB,CAAC25B,YAAY,CAAC51C,MAAM,CAAC0Q,OAAR,CAAb,EAA+B1Q,MAAM,CAACic,QAAtC,CAAhB,CAAP;;AACJ,WAAK,cAAL;AACI,eAAO,CAAC,kBAAD,EAAqB,CAAC25B,YAAY,CAAC51C,MAAM,CAAC0Q,OAAR,CAAb,EAA+B1Q,MAAM,CAACyzC,QAAtC,EAAgDzzC,MAAM,CAACic,QAAvD,CAArB,CAAP;;AACJ,WAAK,iBAAL;AACI,eAAO,CAAC,wBAAD,EAA2B,CAACjc,MAAM,CAAC8zC,iBAAR,CAA3B,CAAP;;AACJ,WAAK,UAAL;AACI,YAAI9zC,MAAM,CAACic,QAAX,EAAqB;AACjB,iBAAO,CAAC,sBAAD,EAAyB,CAACjc,MAAM,CAACic,QAAR,EAAkB,CAAC,CAACjc,MAAM,CAACo0C,mBAA3B,CAAzB,CAAP;AACH,SAFD,MAGK,IAAIp0C,MAAM,CAAC6pC,SAAX,EAAsB;AACvB,iBAAO,CAAC,oBAAD,EAAuB,CAAC7pC,MAAM,CAAC6pC,SAAR,EAAmB,CAAC,CAAC7pC,MAAM,CAACo0C,mBAA5B,CAAvB,CAAP;AACH;;AACD,eAAO,IAAP;;AACJ,WAAK,gBAAL;AACI,eAAO,CAAC,0BAAD,EAA6B,CAACp0C,MAAM,CAACqqC,eAAR,CAA7B,CAAP;;AACJ,WAAK,uBAAL;AACI,eAAO,CAAC,2BAAD,EAA8B,CAACrqC,MAAM,CAACqqC,eAAR,CAA9B,CAAP;;AACJ,WAAK,MAAL;AAAa;AACT,gBAAMsM,kBAAkB,GAAG1uC,SAAS,CAAC,KAAK5kB,WAAN,EAAmB,oBAAnB,CAApC;AACA,iBAAO,CAAC,UAAD,EAAa,CAACszD,kBAAkB,CAAC32C,MAAM,CAACwR,WAAR,EAAqB;AAAErP,YAAAA,IAAI,EAAE;AAAR,WAArB,CAAnB,EAAyDnC,MAAM,CAACic,QAAhE,CAAb,CAAP;AACH;;AACD,WAAK,aAAL;AAAoB;AAChB,gBAAM06B,kBAAkB,GAAG1uC,SAAS,CAAC,KAAK5kB,WAAN,EAAmB,oBAAnB,CAApC;AACA,iBAAO,CAAC,iBAAD,EAAoB,CAACszD,kBAAkB,CAAC32C,MAAM,CAACwR,WAAR,EAAqB;AAAErP,YAAAA,IAAI,EAAE;AAAR,WAArB,CAAnB,CAApB,CAAP;AACH;;AACD,WAAK,SAAL;AACI,YAAInC,MAAM,CAACkY,MAAP,IAAiBlY,MAAM,CAACkY,MAAP,CAAcxH,OAAd,IAAyB,IAA9C,EAAoD;AAChD1Q,UAAAA,MAAM,CAACkY,MAAP,CAAcxH,OAAd,GAAwBklC,YAAY,CAAC51C,MAAM,CAACkY,MAAP,CAAcxH,OAAf,CAApC;AACH;;AACD,eAAO,CAAC,aAAD,EAAgB,CAAC1Q,MAAM,CAACkY,MAAR,CAAhB,CAAP;AAvCR;;AAyCA,WAAO,IAAP;AACH;;AACDw4B,EAAAA,OAAO,CAAC/lC,MAAD,EAAS3K,MAAT,EAAiB;AACpB,WAAOs1C,WAAW,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAClD;AACA;AACA,UAAI3qC,MAAM,KAAK,MAAX,IAAqBA,MAAM,KAAK,aAApC,EAAmD;AAC/C,cAAM2R,EAAE,GAAGtc,MAAM,CAACwR,WAAlB;;AACA,YAAI8K,EAAE,IAAIA,EAAE,CAACt7B,IAAH,IAAW,IAAjB,IAAyB8kB,SAAS,CAAC3D,IAAV,CAAema,EAAE,CAACt7B,IAAlB,EAAwB+G,MAAxB,EAA7B,EAA+D;AAC3D;AACA,cAAIu0B,EAAE,CAACzB,YAAH,IAAmB,IAAnB,IAA2ByB,EAAE,CAACxB,oBAAH,IAA2B,IAA1D,EAAgE;AAC5D,kBAAMmC,OAAO,GAAG,MAAM,KAAKzC,UAAL,EAAtB;;AACA,gBAAIyC,OAAO,CAACpC,YAAR,IAAwB,IAAxB,IAAgCoC,OAAO,CAACnC,oBAAR,IAAgC,IAApE,EAA0E;AACtE;AACA9a,cAAAA,MAAM,GAAGyI,WAAW,CAACzI,MAAD,CAApB;AACAA,cAAAA,MAAM,CAACwR,WAAP,GAAqB/I,WAAW,CAAC6T,EAAD,CAAhC;AACA,qBAAOtc,MAAM,CAACwR,WAAP,CAAmBxwB,IAA1B;AACH;AACJ;AACJ;AACJ;;AACD,YAAMke,IAAI,GAAG,KAAK04C,cAAL,CAAoBjtC,MAApB,EAA4B3K,MAA5B,CAAb;;AACA,UAAId,IAAI,IAAI,IAAZ,EAAkB;AACdq2C,QAAAA,QAAQ,CAAC90C,UAAT,CAAoBkK,MAAM,GAAG,kBAA7B,EAAiDjM,MAAM,CAACuB,MAAP,CAAc40C,eAA/D,EAAgF;AAAE7zC,UAAAA,SAAS,EAAE2J;AAAb,SAAhF;AACH;;AACD,UAAI;AACA,eAAO,MAAM,KAAK0rC,IAAL,CAAUn3C,IAAI,CAAC,CAAD,CAAd,EAAmBA,IAAI,CAAC,CAAD,CAAvB,CAAb;AACH,OAFD,CAGA,OAAOxB,KAAP,EAAc;AACV,eAAO+3C,UAAU,CAAC9qC,MAAD,EAASjN,KAAT,EAAgBsC,MAAhB,CAAjB;AACH;AACJ,KA5BiB,CAAlB;AA6BH;;AACD80C,EAAAA,WAAW,CAACtH,KAAD,EAAQ;AACf,QAAIA,KAAK,CAACD,GAAN,KAAc,SAAlB,EAA6B;AACzB,WAAKsK,aAAL;AACH;;AACD,UAAM/C,WAAN,CAAkBtH,KAAlB;AACH;;AACDqK,EAAAA,aAAa,GAAG;AACZ,QAAI,KAAKC,cAAL,IAAuB,IAA3B,EAAiC;AAC7B;AACH;;AACD,UAAM/1D,IAAI,GAAG,IAAb;AACA,UAAMg2D,aAAa,GAAG,KAAK1B,IAAL,CAAU,iCAAV,EAA6C,EAA7C,CAAtB;AACA,SAAKyB,cAAL,GAAsBC,aAAtB;AACAA,IAAAA,aAAa,CAACjwC,IAAd,CAAmB,UAAUkwC,QAAV,EAAoB;AACnC,eAAS5Q,IAAT,GAAgB;AACZrlD,QAAAA,IAAI,CAACs0D,IAAL,CAAU,sBAAV,EAAkC,CAAC2B,QAAD,CAAlC,EAA8ClwC,IAA9C,CAAmD,UAAUmwC,MAAV,EAAkB;AACjE,cAAIl2D,IAAI,CAAC+1D,cAAL,IAAuBC,aAA3B,EAA0C;AACtC,mBAAO,IAAP;AACH;;AACD,cAAIG,GAAG,GAAG1wC,OAAO,CAACD,OAAR,EAAV;AACA0wC,UAAAA,MAAM,CAACl6C,OAAP,CAAe,UAAUkb,IAAV,EAAgB;AAC3B;AACAl3B,YAAAA,IAAI,CAACqtD,QAAL,CAAc,OAAOn2B,IAAI,CAAC7Z,WAAL,EAArB,IAA2C,SAA3C;AACA84C,YAAAA,GAAG,GAAGA,GAAG,CAACpwC,IAAJ,CAAS,YAAY;AACvB,qBAAO/lB,IAAI,CAAC8wD,cAAL,CAAoB55B,IAApB,EAA0BnR,IAA1B,CAA+B,UAAUwU,EAAV,EAAc;AAChDv6B,gBAAAA,IAAI,CAAC4tD,IAAL,CAAU,SAAV,EAAqBrzB,EAArB;AACA,uBAAO,IAAP;AACH,eAHM,CAAP;AAIH,aALK,CAAN;AAMH,WATD;AAUA,iBAAO47B,GAAG,CAACpwC,IAAJ,CAAS,YAAY;AACxB,mBAAOg+B,KAAK,CAAC,IAAD,CAAZ;AACH,WAFM,CAAP;AAGH,SAlBD,EAkBGh+B,IAlBH,CAkBQ,YAAY;AAChB,cAAI/lB,IAAI,CAAC+1D,cAAL,IAAuBC,aAA3B,EAA0C;AACtCh2D,YAAAA,IAAI,CAACs0D,IAAL,CAAU,qBAAV,EAAiC,CAAC2B,QAAD,CAAjC;AACA;AACH;;AACDtT,UAAAA,UAAU,CAAC,YAAY;AAAE0C,YAAAA,IAAI;AAAK,WAAxB,EAA0B,CAA1B,CAAV;AACA,iBAAO,IAAP;AACH,SAzBD,EAyBGxsB,KAzBH,CAyBUld,KAAD,IAAW,CAAG,CAzBvB;AA0BH;;AACD0pC,MAAAA,IAAI;AACJ,aAAO4Q,QAAP;AACH,KA/BD,EA+BGp9B,KA/BH,CA+BUld,KAAD,IAAW,CAAG,CA/BvB;AAgCH;;AACDq3C,EAAAA,UAAU,CAACvH,KAAD,EAAQ;AACd,QAAIA,KAAK,CAACD,GAAN,KAAc,SAAd,IAA2B,KAAK4H,aAAL,CAAmB,SAAnB,MAAkC,CAAjE,EAAoE;AAChE,WAAK2C,cAAL,GAAsB,IAAtB;AACH;;AACD,UAAM/C,UAAN,CAAiBvH,KAAjB;AACH,GAtQsC,CAuQvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACyB,SAAlBmJ,kBAAkB,CAACnlC,WAAD,EAAc2mC,UAAd,EAA0B;AAC/C;AACA,UAAMC,OAAO,GAAG3vC,WAAW,CAACuuC,wBAAD,CAA3B;;AACA,QAAImB,UAAJ,EAAgB;AACZ,WAAK,MAAM93C,GAAX,IAAkB83C,UAAlB,EAA8B;AAC1B,YAAIA,UAAU,CAAC93C,GAAD,CAAd,EAAqB;AACjB+3C,UAAAA,OAAO,CAAC/3C,GAAD,CAAP,GAAe,IAAf;AACH;AACJ;AACJ;;AACDkI,IAAAA,eAAe,CAACiJ,WAAD,EAAc4mC,OAAd,CAAf;AACA,UAAMj1C,MAAM,GAAG,EAAf,CAX+C,CAY/C;;AACA,KAAC,UAAD,EAAa,UAAb,EAAyB,MAAzB,EAAiC,cAAjC,EAAiD,sBAAjD,EAAyE,OAAzE,EAAkF,OAAlF,EAA2FpF,OAA3F,CAAmG,UAAUsC,GAAV,EAAe;AAC9G,UAAImR,WAAW,CAACnR,GAAD,CAAX,IAAoB,IAAxB,EAA8B;AAC1B;AACH;;AACD,YAAMvB,KAAK,GAAGiG,QAAQ,CAACyM,WAAW,CAACnR,GAAD,CAAZ,CAAtB;;AACA,UAAIA,GAAG,KAAK,UAAZ,EAAwB;AACpBA,QAAAA,GAAG,GAAG,KAAN;AACH;;AACD8C,MAAAA,MAAM,CAAC9C,GAAD,CAAN,GAAcvB,KAAd;AACH,KATD;AAUA,KAAC,MAAD,EAAS,IAAT,EAAe,MAAf,EAAuBf,OAAvB,CAA+B,UAAUsC,GAAV,EAAe;AAC1C,UAAImR,WAAW,CAACnR,GAAD,CAAX,IAAoB,IAAxB,EAA8B;AAC1B;AACH;;AACD8C,MAAAA,MAAM,CAAC9C,GAAD,CAAN,GAAcmE,OAAO,CAACgN,WAAW,CAACnR,GAAD,CAAZ,CAArB;AACH,KALD;;AAMA,QAAImR,WAAW,CAACmtB,UAAhB,EAA4B;AACxBx7B,MAAAA,MAAM,CAAC,YAAD,CAAN,GAAuBo7B,aAAa,CAAC/sB,WAAW,CAACmtB,UAAb,CAApC;AACH;;AACD,WAAOx7B,MAAP;AACH;;AAjTsC;;AAqT3C,MAAMk1C,mBAAmB,GAAI,4CAA7B;AACA,MAAMC,eAAe,GAAI,uBAAzB;AACA,MAAMC,YAAY,GAAG,IAAI9W,eAAJ,CAAoB,uEAApB,EAA6F,SAA7F,CAArB;AACA5/C,MAAM,CAAC22D,IAAP,GAAc;AACZC,EAAAA,OAAO,EAAE;AACPF,IAAAA,YAAY,EAAEA,YADP;AAEPG,IAAAA,UAAU,EAAE/zC,IAAI,IAAI;AAClB,aAAOA,IAAP;AACD,KAJM;AAKPg0C,IAAAA,OAAO,EAAE;AACPjoC,MAAAA,OAAO,EAAE;AADF;AALF;AADG,CAAd;AAWA,MAAMkoC,SAAS,GAAGh6D,UAAU,CAAC;AAC3BuqB,EAAAA,IAAI,EAAE;AACJsqC,IAAAA,QAAQ,EAAE,OADN;AAEJoF,IAAAA,GAAG,EAAE,CAFD;AAGJv0D,IAAAA,IAAI,EAAE,CAHF;AAIJw0D,IAAAA,QAAQ,EAAE,OAJN;AAKJC,IAAAA,SAAS,EAAE,OALP;AAMJC,IAAAA,UAAU,EAAE,mBANR;AAOJC,IAAAA,aAAa,EAAE;AAPX,GADqB;AAU3BC,EAAAA,SAAS,EAAE;AACTzF,IAAAA,QAAQ,EAAE,OADD;AAET0F,IAAAA,MAAM,EAAE,EAFC;AAGT50D,IAAAA,KAAK,EAAE,EAHE;AAIT60D,IAAAA,MAAM,EAAE;AAJC,GAVgB;AAgB3BC,EAAAA,UAAU,EAAE;AAhBe,CAAD,CAA5B;AAkBA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,aAAa,EAAE;AACbC,IAAAA,OAAO,EAAE;AACPp4D,MAAAA,IAAI,EAAE;AADC,KADI;AAIbq4D,IAAAA,OAAO,EAAEn6D,qBAJI;AAKb4jB,IAAAA,OAAO,EAAE;AACPw2C,MAAAA,QAAQ,EAAE;AADH;AALI;AADO,CAAxB;AAWA,MAAMC,SAAS,GAAG,IAAIl6D,SAAJ,CAAc;AAC9Bo9B,EAAAA,OAAO,EAAEy7B,eADqB;AAE9BsB,EAAAA,aAAa,EAAE,IAFe;AAG9BC,EAAAA,uBAAuB,EAAE,KAHK;AAI9BP,EAAAA;AAJ8B,CAAd,CAAlB;;AAMA,MAAMQ,OAAO,GAAGn6D,KAAK,IAAI;AACvB,QAAMo6D,OAAO,GAAGnB,SAAS,EAAzB;AACA,QAAM,CAACoB,aAAD,EAAgBC,gBAAhB,IAAoC96D,QAAQ,CAAC;AACjDsS,IAAAA,CAAC,EAAE,CAD8C;AAEjDC,IAAAA,CAAC,EAAE;AAF8C,GAAD,CAAlD;AAIA,QAAM,CAACwoD,aAAD,EAAgBC,gBAAhB,IAAoCh7D,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACi7D,QAAD,EAAWC,WAAX,IAA0Bl7D,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACg9B,QAAD,EAAWm+B,WAAX,IAA0Bn7D,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACo7D,IAAD,EAAOC,OAAP,IAAkBr7D,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACs7D,cAAD,EAAiBC,iBAAjB,IAAsCv7D,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACw7D,aAAD,EAAgBC,gBAAhB,IAAoCz7D,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAM07D,aAAa,GAAG,YAAY;AAChC,QAAI;AACF,UAAIhoD,CAAC,GAAGspB,QAAR;;AAEA,UAAItpB,CAAC,KAAK,IAAV,EAAgB;AACdA,QAAAA,CAAC,GAAG,MAAM8mD,SAAS,CAAC3D,OAAV,EAAV;;AAEA,YAAInjD,CAAC,KAAK,IAAV,EAAgB;AACd,gBAAM,IAAI/P,KAAJ,CAAU,qCAAV,CAAN;AACD;;AAED+P,QAAAA,CAAC,CAACsoB,EAAF,CAAK,iBAAL,EAAwB76B,CAAC,IAAI;AAC3Bgf,UAAAA,OAAO,CAACC,GAAR,CAAYjf,CAAZ;AACAw6D,UAAAA,gBAAgB;AACjB,SAHD;AAIAjoD,QAAAA,CAAC,CAACsoB,EAAF,CAAK,cAAL,EAAqBvE,OAAO,IAAI;AAC9BtX,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAWqX,OAAvB;AACD,SAFD;AAGA0jC,QAAAA,WAAW,CAACznD,CAAD,CAAX;AACD;;AAED,UAAI3C,EAAE,GAAGqqD,IAAT;;AAEA,UAAIrqD,EAAE,KAAK,IAAX,EAAiB;AACfA,QAAAA,EAAE,GAAG,IAAI1Q,IAAJ,CAASqT,CAAT,CAAL;;AAEA,YAAI3C,EAAE,KAAK,IAAX,EAAiB;AACf,gBAAM,IAAIpN,KAAJ,CAAU,wBAAV,CAAN;AACD;;AAED03D,QAAAA,OAAO,CAACtqD,EAAD,CAAP;AACD;;AAED,YAAMomD,QAAQ,GAAG,MAAMzjD,CAAC,CAAC4wC,OAAF,CAAU;AAC/B94B,QAAAA,MAAM,EAAE;AADuB,OAAV,CAAvB;;AAIA,UAAI2rC,QAAQ,CAACzyD,MAAT,GAAkB,CAAtB,EAAyB;AACvB62D,QAAAA,iBAAiB,CAACpE,QAAQ,CAAC,CAAD,CAAT,CAAjB;AACA5R,QAAAA,UAAU,CAAC,YAAY;AACrBqW,UAAAA,aAAa,CAACzE,QAAQ,CAAC,CAAD,CAAT,CAAb;AACD,SAFS,EAEP,IAFO,CAAV;AAGD;AACF,KA1CD,CA0CE,OAAO54C,KAAP,EAAc;AACd4B,MAAAA,OAAO,CAACC,GAAR,CAAY7B,KAAZ;AACAs9C,MAAAA,KAAK,CAAC,6CAAD,CAAL;AACD;AACF,GA/CD;;AAiDA,QAAMF,gBAAgB,GAAG,YAAY;AACnC,UAAMnB,SAAS,CAACsB,mBAAV,EAAN;AACAX,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAI,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,GAJD;;AAMA,QAAMQ,gBAAgB,GAAG,MAAMC,GAAN,IAAa;AACpC,WAAO,IAAI3zC,OAAJ,CAAYD,OAAO,IAAI;AAC5BA,MAAAA,OAAO,CAAC;AACN6zC,QAAAA,IAAI,EAAED,GADA;AAENE,QAAAA,KAAK,EAAE,6DAFD;AAGN7C,QAAAA,IAAI,EAAE;AACJ8C,UAAAA,OAAO,EAAE;AACPH,YAAAA,GAAG,EAAE,2CADE;AAEPz5C,YAAAA,MAAM,EAAE;AAFD;AADL;AAHA,OAAD,CAAP;AAUD,KAXM,CAAP;AAYD,GAbD;;AAeA,QAAM65C,qBAAqB,GAAGC,OAAO,IAAI;AACvC,WAAQ,GAAEA,OAAQ,EAAlB;AACD,GAFD;;AAIA,QAAMT,aAAa,GAAG,MAAMU,aAAN,IAAuB;AAC3C,QAAIvrD,EAAE,GAAG,IAAI1Q,IAAJ,CAAS84D,eAAT,CAAT;;AAEA,QAAI;AACF,UAAIoD,QAAQ,GAAG,IAAIxrD,EAAE,CAACyrD,GAAH,CAAOC,QAAX,CAAoBl6D,KAAK,CAACb,GAA1B,EAA+Bw3D,mBAA/B,CAAf;AACA,UAAIwD,UAAU,GAAG,MAAMH,QAAQ,CAAC3wC,OAAT,CAAiB+wC,aAAjB,CAA+BrB,cAAc,GAAGA,cAAH,GAAoBgB,aAAjE,EAAgFhgD,IAAhF,EAAvB;AACA6D,MAAAA,OAAO,CAACC,GAAR,CAAYs8C,UAAZ;AACA,UAAIE,MAAM,GAAG,EAAb;AACA,UAAIC,WAAW,GAAG,EAAlB;;AAEA,WAAK,IAAI32D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGw2D,UAAU,CAACh4D,MAA/B,EAAuCwB,CAAC,EAAxC,EAA4C;AAC1C,YAAI42D,GAAG,GAAG54C,QAAQ,CAACw4C,UAAU,CAACx2D,CAAD,CAAX,CAAlB;AACA,YAAI62D,aAAa,GAAG,MAAMR,QAAQ,CAAC3wC,OAAT,CAAiBoxC,iBAAjB,CAAmCF,GAAnC,EAAwCxgD,IAAxC,EAA1B;AACA,YAAI2gD,cAAc,GAAG,MAAMV,QAAQ,CAAC3wC,OAAT,CAAiBsxC,QAAjB,CAA0BJ,GAA1B,EAA+BxgD,IAA/B,EAA3B;AACA,YAAI6gD,SAAS,GAAG,MAAMpB,gBAAgB,CAACkB,cAAD,CAAtC;;AAEA,YAAIL,MAAM,CAACG,aAAD,CAAN,KAA0B,IAA9B,EAAoC;AAClC,cAAIK,UAAU,GAAG,MAAMb,QAAQ,CAAC3wC,OAAT,CAAiByxC,iBAAjB,CAAmCn5C,QAAQ,CAAC64C,aAAD,CAA3C,EAA4DzgD,IAA5D,EAAvB;AACAsgD,UAAAA,MAAM,CAACG,aAAD,CAAN,GAAwB;AACtB5mC,YAAAA,EAAE,EAAE4mC,aADkB;AAEtB96D,YAAAA,IAAI,EAAEm7D,UAAU,CAAC,CAAD,CAFM;AAGtBE,YAAAA,WAAW,EAAEF,UAAU,CAAC,CAAD,CAHD;AAItBF,YAAAA,QAAQ,EAAEE,UAAU,CAAC,CAAD,CAJE;AAKtBG,YAAAA,KAAK,EAAEH,UAAU,CAAC,CAAD,CALK;AAMtBI,YAAAA,KAAK,EAAEt5C,QAAQ,CAACk5C,UAAU,CAAC,CAAD,CAAX,CANO;AAOtB7rC,YAAAA,OAAO,EAAE2nC,mBAPa;AAQtBl7C,YAAAA,OAAO,EAAE;AARa,WAAxB;AAUD;;AAED,YAAIy/C,EAAE,GAAG;AACPtnC,UAAAA,EAAE,EAAE2mC,GADG;AAEPI,UAAAA,QAAQ,EAAED,cAFH;AAGPS,UAAAA,GAAG,EAAEd,MAAM,CAACG,aAAD,CAHJ;AAIPY,UAAAA,QAAQ,EAAER,SAAS,CAACjB,KAJb;AAKP0B,UAAAA,WAAW,EAAE;AACX5B,YAAAA,GAAG,EAAEmB,SAAS,CAAC9D,IAAV,CAAe8C,OAAf,CAAuBH,GADjB;AAEXz5C,YAAAA,MAAM,EAAE46C,SAAS,CAAC9D,IAAV,CAAe8C,OAAf,CAAuB55C;AAFpB;AALN,SAAT;AAUAs6C,QAAAA,WAAW,CAAC99C,IAAZ,CAAiB0+C,EAAjB;AACD;;AAEDt9C,MAAAA,OAAO,CAACC,GAAR,CAAYy8C,WAAZ;AACApB,MAAAA,gBAAgB,CAACoB,WAAD,CAAhB;AACD,KA1CD,CA0CE,OAAOt+C,KAAP,EAAc;AACd4B,MAAAA,OAAO,CAACC,GAAR,CAAa,wBAAuB7B,KAAM,EAA1C;AACD;AACF,GAhDD;;AAkDA,SAAOte,aAAa,CAACP,GAAD,EAAM;AACxBqB,IAAAA,SAAS,EAAE65D,OAAO,CAAC5wC;AADK,GAAN,EAEjB/pB,aAAa,CAACN,SAAD,EAAY;AAC1BoB,IAAAA,SAAS,EAAE65D,OAAO,CAACb;AADO,GAAZ,EAEb95D,aAAa,CAACM,QAAD,EAAW;AACzBK,IAAAA,UAAU,EAAEO,CAAC,IAAI;AACf25D,MAAAA,gBAAgB,CAAC;AACfxoD,QAAAA,CAAC,EAAEuoD,aAAa,CAACvoD,CAAd,GAAkBnR,CAAC,CAAC08D,SADR;AAEftrD,QAAAA,CAAC,EAAEsoD,aAAa,CAACtoD,CAAd,GAAkBpR,CAAC,CAAC28D;AAFR,OAAD,CAAhB;;AAKA,UAAI38D,CAAC,CAAC48D,OAAF,GAAY,GAAhB,EAAqB;AACnB,YAAIhD,aAAa,KAAK,MAAtB,EAA8BC,gBAAgB,CAAC,MAAD,CAAhB;AAC/B;;AAED,UAAI75D,CAAC,CAAC48D,OAAF,GAAY,GAAhB,EAAqB;AACnB,YAAIhD,aAAa,KAAK,IAAtB,EAA4BC,gBAAgB,CAAC,IAAD,CAAhB;AAC7B;AACF;AAdwB,GAAX,EAeb/6D,aAAa,CAACJ,SAAD,EAAY;AAC1BiB,IAAAA,KAAK,EAAE;AACLqS,MAAAA,SAAS,EAAG,cAAa0nD,aAAa,CAACvoD,CAAE,kBAAiBuoD,aAAa,CAACtoD,CAAE;AADrE,KADmB;AAI1ByrD,IAAAA,SAAS,EAAE,iBAJe;AAK1BC,IAAAA,MAAM,EAAE,KALkB;AAM1BC,IAAAA,IAAI,EAAEj+D,aAAa,CAACL,UAAD,EAAa;AAC9BmB,MAAAA,SAAS,EAAE65D,OAAO,CAACV;AADW,KAAb,EAEhB,KAFgB,CANO;AAS1BiE,IAAAA,IAAI,EAAElD,QAToB;AAU1BmD,IAAAA,MAAM,EAAE,MAAM;AACZlD,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAZyB;AAa1BmD,IAAAA,OAAO,EAAE,MAAM;AACbnD,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KAfyB;AAgB1BoD,IAAAA,OAAO,EAAE,MAAM,CAAE,CAhBS;AAiB1BC,IAAAA,SAAS,EAAExD;AAjBe,GAAZ,EAkBb96D,aAAa,CAACH,eAAD,EAAkB;AAChCohB,IAAAA,GAAG,EAAE,oBAD2B;AAEhCg9C,IAAAA,IAAI,EAAEj+D,aAAa,CAACC,wBAAD,EAA2B,IAA3B,CAFa;AAGhCs+D,IAAAA,YAAY,EAAE,gBAHkB;AAIhCF,IAAAA,OAAO,EAAE,MAAM;AACb5C,MAAAA,aAAa;AACd;AAN+B,GAAlB,CAlBA,EAyBZF,aAAa,CAAC92C,GAAd,CAAkB,CAAC+5C,YAAD,EAAev4D,CAAf,KAAqBjG,aAAa,CAACH,eAAD,EAAkB;AACxEohB,IAAAA,GAAG,EAAG,aAAYu9C,YAAY,CAACtoC,EAAG,IAAGjwB,CAAE,EADiC;AAExEg4D,IAAAA,IAAI,EAAEj+D,aAAa,CAACG,QAAD,EAAW,IAAX,CAFqD;AAGxEo+D,IAAAA,YAAY,EAAG,GAAEC,YAAY,CAACf,GAAb,CAAiBz7D,IAAK,MAAKw8D,YAAY,CAACtoC,EAAG,GAHY;AAIxEmoC,IAAAA,OAAO,EAAE,MAAM;AACb,UAAII,QAAQ,GAAI,QAAOD,YAAY,CAACtoC,EAAG,IAAGsoC,YAAY,CAACf,GAAb,CAAiBvnC,EAAG,EAA9D;AACA,YAAMwoC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwBH,QAAxB,CAApB;;AAEA,UAAI,CAACC,WAAL,EAAkB;AAChB,cAAMG,MAAM,GAAGF,QAAQ,CAAC3+D,aAAT,CAAuB,QAAvB,CAAf;AACA6+D,QAAAA,MAAM,CAACC,GAAP,GAAa3C,qBAAqB,CAACqC,YAAY,CAACb,WAAb,CAAyB5B,GAA1B,CAAlC;AACA8C,QAAAA,MAAM,CAAC3oC,EAAP,GAAYuoC,QAAZ;;AAEA,YAAID,YAAY,CAACb,WAAb,CAAyBr7C,MAAzB,IAAmC,MAAvC,EAA+C;AAC7Cq8C,UAAAA,QAAQ,CAACpa,IAAT,CAAcwa,WAAd,CAA0BF,MAA1B;;AAEAA,UAAAA,MAAM,CAACG,MAAP,GAAgB,MAAM;AACpB9+C,YAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,WAFD;AAGD;AACF;AACF;AArBuE,GAAlB,CAApD,CAzBY,CAfA,CAFA,CAFI,CAApB;AAmED,CA5MD;;AA8MA,SAASu6C,OAAT","sourcesContent":["import { makeStyles, Box, Container, Typography } from '@material-ui/core';\nimport { SpeedDial, SpeedDialAction } from '@material-ui/lab';\nimport React__default, { useState, createElement } from 'react';\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\nimport WalletConnectProvider from '@walletconnect/web3-provider';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport Web3 from 'web3';\nimport Web3Modal from 'web3modal';\n\nfunction DragMove(props) {\n  const {\n    onPointerDown,\n    onPointerUp,\n    onPointerMove,\n    onDragMove,\n    children,\n    style,\n    className\n  } = props;\n  const [isDragging, setIsDragging] = useState(false);\n\n  const handlePointerDown = e => {\n    setIsDragging(true);\n    onPointerDown(e);\n  };\n\n  const handlePointerUp = e => {\n    setIsDragging(false);\n    onPointerUp(e);\n  };\n\n  const handlePointerMove = e => {\n    if (isDragging) onDragMove(e);\n    onPointerMove(e);\n  };\n\n  return React__default.createElement(\"div\", {\n    onPointerDown: handlePointerDown,\n    onPointerUp: handlePointerUp,\n    onPointerMove: handlePointerMove,\n    style: style,\n    className: className\n  }, children);\n}\nDragMove.defaultProps = {\n  onPointerDown: () => {},\n  onPointerUp: () => {},\n  onPointerMove: () => {}\n};\n\nvar _format = \"hh-sol-artifact-1\";\nvar contractName = \"Byoa\";\nvar sourceName = \"contracts/byoa.sol\";\nvar abi = [\n\t{\n\t\tinputs: [\n\t\t],\n\t\tstateMutability: \"nonpayable\",\n\t\ttype: \"constructor\"\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"owner\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"approved\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"tokenId\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tname: \"Approval\",\n\t\ttype: \"event\"\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"owner\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"operator\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tinternalType: \"bool\",\n\t\t\t\tname: \"approved\",\n\t\t\t\ttype: \"bool\"\n\t\t\t}\n\t\t],\n\t\tname: \"ApprovalForAll\",\n\t\ttype: \"event\"\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"bytes32\",\n\t\t\t\tname: \"role\",\n\t\t\t\ttype: \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"bytes32\",\n\t\t\t\tname: \"previousAdminRole\",\n\t\t\t\ttype: \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"bytes32\",\n\t\t\t\tname: \"newAdminRole\",\n\t\t\t\ttype: \"bytes32\"\n\t\t\t}\n\t\t],\n\t\tname: \"RoleAdminChanged\",\n\t\ttype: \"event\"\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"bytes32\",\n\t\t\t\tname: \"role\",\n\t\t\t\ttype: \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"account\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"sender\",\n\t\t\t\ttype: \"address\"\n\t\t\t}\n\t\t],\n\t\tname: \"RoleGranted\",\n\t\ttype: \"event\"\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"bytes32\",\n\t\t\t\tname: \"role\",\n\t\t\t\ttype: \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"account\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"sender\",\n\t\t\t\ttype: \"address\"\n\t\t\t}\n\t\t],\n\t\tname: \"RoleRevoked\",\n\t\ttype: \"event\"\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"from\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"to\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"tokenId\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tname: \"Transfer\",\n\t\ttype: \"event\"\n\t},\n\t{\n\t\tinputs: [\n\t\t],\n\t\tname: \"DEFAULT_ADMIN_ROLE\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"bytes32\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"bytes32\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t],\n\t\tname: \"DEVELOPER_ROLE\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"bytes32\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"bytes32\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"to\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"tokenId\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tname: \"approve\",\n\t\toutputs: [\n\t\t],\n\t\tstateMutability: \"nonpayable\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"owner\",\n\t\t\t\ttype: \"address\"\n\t\t\t}\n\t\t],\n\t\tname: \"balanceOf\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"string\",\n\t\t\t\tname: \"name\",\n\t\t\t\ttype: \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"string\",\n\t\t\t\tname: \"description\",\n\t\t\t\ttype: \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"price\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"string\",\n\t\t\t\tname: \"_tokenURI\",\n\t\t\t\ttype: \"string\"\n\t\t\t}\n\t\t],\n\t\tname: \"createApp\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"nonpayable\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"appId\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tname: \"getAppDetailsById\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"string\",\n\t\t\t\tname: \"name\",\n\t\t\t\ttype: \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"string\",\n\t\t\t\tname: \"description\",\n\t\t\t\ttype: \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"string\",\n\t\t\t\tname: \"_tokenURI\",\n\t\t\t\ttype: \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"owner\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"price\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"_tokenId\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tname: \"getAppIdByTokenId\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t],\n\t\tname: \"getAppIds\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256[]\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"uint256[]\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"tokenId\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tname: \"getApproved\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"address\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"bytes32\",\n\t\t\t\tname: \"role\",\n\t\t\t\ttype: \"bytes32\"\n\t\t\t}\n\t\t],\n\t\tname: \"getRoleAdmin\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"bytes32\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"bytes32\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"bytes32\",\n\t\t\t\tname: \"role\",\n\t\t\t\ttype: \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"account\",\n\t\t\t\ttype: \"address\"\n\t\t\t}\n\t\t],\n\t\tname: \"grantRole\",\n\t\toutputs: [\n\t\t],\n\t\tstateMutability: \"nonpayable\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"bytes32\",\n\t\t\t\tname: \"role\",\n\t\t\t\ttype: \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"account\",\n\t\t\t\ttype: \"address\"\n\t\t\t}\n\t\t],\n\t\tname: \"hasRole\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"bool\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"bool\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"owner\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"operator\",\n\t\t\t\ttype: \"address\"\n\t\t\t}\n\t\t],\n\t\tname: \"isApprovedForAll\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"bool\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"bool\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"_appId\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tname: \"mint\",\n\t\toutputs: [\n\t\t],\n\t\tstateMutability: \"payable\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t],\n\t\tname: \"name\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"string\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"string\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"tokenId\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tname: \"ownerOf\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"address\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"bytes32\",\n\t\t\t\tname: \"role\",\n\t\t\t\ttype: \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"account\",\n\t\t\t\ttype: \"address\"\n\t\t\t}\n\t\t],\n\t\tname: \"renounceRole\",\n\t\toutputs: [\n\t\t],\n\t\tstateMutability: \"nonpayable\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"bytes32\",\n\t\t\t\tname: \"role\",\n\t\t\t\ttype: \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"account\",\n\t\t\t\ttype: \"address\"\n\t\t\t}\n\t\t],\n\t\tname: \"revokeRole\",\n\t\toutputs: [\n\t\t],\n\t\tstateMutability: \"nonpayable\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"from\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"to\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"tokenId\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tname: \"safeTransferFrom\",\n\t\toutputs: [\n\t\t],\n\t\tstateMutability: \"nonpayable\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"from\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"to\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"tokenId\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"bytes\",\n\t\t\t\tname: \"_data\",\n\t\t\t\ttype: \"bytes\"\n\t\t\t}\n\t\t],\n\t\tname: \"safeTransferFrom\",\n\t\toutputs: [\n\t\t],\n\t\tstateMutability: \"nonpayable\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"operator\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"bool\",\n\t\t\t\tname: \"approved\",\n\t\t\t\ttype: \"bool\"\n\t\t\t}\n\t\t],\n\t\tname: \"setApprovalForAll\",\n\t\toutputs: [\n\t\t],\n\t\tstateMutability: \"nonpayable\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"bytes4\",\n\t\t\t\tname: \"interfaceId\",\n\t\t\t\ttype: \"bytes4\"\n\t\t\t}\n\t\t],\n\t\tname: \"supportsInterface\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"bool\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"bool\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t],\n\t\tname: \"symbol\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"string\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"string\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"index\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tname: \"tokenByIndex\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"owner\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"index\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tname: \"tokenOfOwnerByIndex\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"tokenId\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tname: \"tokenURI\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"string\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"string\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t],\n\t\tname: \"totalSupply\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"from\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"to\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"tokenId\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tname: \"transferFrom\",\n\t\toutputs: [\n\t\t],\n\t\tstateMutability: \"nonpayable\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"appId\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"string\",\n\t\t\t\tname: \"name\",\n\t\t\t\ttype: \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"string\",\n\t\t\t\tname: \"description\",\n\t\t\t\ttype: \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"price\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"string\",\n\t\t\t\tname: \"_tokenURI\",\n\t\t\t\ttype: \"string\"\n\t\t\t}\n\t\t],\n\t\tname: \"updateApp\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"nonpayable\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"_owner\",\n\t\t\t\ttype: \"address\"\n\t\t\t}\n\t\t],\n\t\tname: \"walletOfOwner\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256[]\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"uint256[]\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t],\n\t\tname: \"withdrawAll\",\n\t\toutputs: [\n\t\t],\n\t\tstateMutability: \"payable\",\n\t\ttype: \"function\"\n\t}\n];\nvar bytecode = \"0x6080604052668e1bc9bf040000600d553480156200001c57600080fd5b506040518060400160405280600781526020017f42796f61205631000000000000000000000000000000000000000000000000008152506040518060400160405280600781526020017f42594f415f5631000000000000000000000000000000000000000000000000008152508160009080519060200190620000a192919062000253565b508060019080519060200190620000ba92919062000253565b505050620000d26000801b33620000d860201b60201c565b62000368565b620000ea8282620000ee60201b60201c565b5050565b620001008282620001e060201b60201c565b620001dc576001600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620001816200024b60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b828054620002619062000303565b90600052602060002090601f016020900481019282620002855760008555620002d1565b82601f10620002a057805160ff1916838001178555620002d1565b82800160010185558215620002d1579182015b82811115620002d0578251825591602001919060010190620002b3565b5b509050620002e09190620002e4565b5090565b5b80821115620002ff576000816000905550600101620002e5565b5090565b600060028204905060018216806200031c57607f821691505b6020821081141562000333576200033262000339565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6152f080620003786000396000f3fe6080604052600436106101d85760003560e01c80634b42a0f81161010257806395d89b4111610095578063b88d4fde11610064578063b88d4fde14610718578063c87b56dd14610741578063d547741f1461077e578063e985e9c5146107a7576101d8565b806395d89b411461067d578063a0712d68146106a8578063a217fddf146106c4578063a22cb465146106ef576101d8565b8063853828b6116100d1578063853828b6146105ce5780639103a0e0146105d85780639118f31a1461060357806391d1485414610640576101d8565b80634b42a0f8146104da5780634f6ccce7146105175780636352211e1461055457806370a0823114610591576101d8565b80632f2ff15d1161017a57806342842e0e1161014957806342842e0e146103f6578063438b63001461041f578063458f9cfb1461045c578063471c1ea91461049d576101d8565b80632f2ff15d1461033c5780632f745c591461036557806333f717fe146103a257806336568abe146103cd576101d8565b8063095ea7b3116101b6578063095ea7b31461028257806318160ddd146102ab57806323b872dd146102d6578063248a9ca3146102ff576101d8565b806301ffc9a7146101dd57806306fdde031461021a578063081812fc14610245575b600080fd5b3480156101e957600080fd5b5061020460048036038101906101ff9190613a8e565b6107e4565b6040516102119190614278565b60405180910390f35b34801561022657600080fd5b5061022f6107f6565b60405161023c91906142ae565b60405180910390f35b34801561025157600080fd5b5061026c60048036038101906102679190613ba3565b610888565b60405161027991906141ef565b60405180910390f35b34801561028e57600080fd5b506102a960048036038101906102a491906139e1565b61090d565b005b3480156102b757600080fd5b506102c0610a25565b6040516102cd9190614638565b60405180910390f35b3480156102e257600080fd5b506102fd60048036038101906102f891906138cb565b610a32565b005b34801561030b57600080fd5b5061032660048036038101906103219190613a21565b610a92565b6040516103339190614293565b60405180910390f35b34801561034857600080fd5b50610363600480360381019061035e9190613a4e565b610ab2565b005b34801561037157600080fd5b5061038c600480360381019061038791906139e1565b610adb565b6040516103999190614638565b60405180910390f35b3480156103ae57600080fd5b506103b7610b80565b6040516103c49190614256565b60405180910390f35b3480156103d957600080fd5b506103f460048036038101906103ef9190613a4e565b610c36565b005b34801561040257600080fd5b5061041d600480360381019061041891906138cb565b610cb9565b005b34801561042b57600080fd5b506104466004803603810190610441919061385e565b610cd9565b6040516104539190614256565b60405180910390f35b34801561046857600080fd5b50610483600480360381019061047e9190613ba3565b610de3565b6040516104949594939291906142d0565b60405180910390f35b3480156104a957600080fd5b506104c460048036038101906104bf9190613bd0565b6110b4565b6040516104d19190614638565b60405180910390f35b3480156104e657600080fd5b5061050160048036038101906104fc9190613ae8565b611545565b60405161050e9190614638565b60405180910390f35b34801561052357600080fd5b5061053e60048036038101906105399190613ba3565b6116df565b60405161054b9190614638565b60405180910390f35b34801561056057600080fd5b5061057b60048036038101906105769190613ba3565b611750565b60405161058891906141ef565b60405180910390f35b34801561059d57600080fd5b506105b860048036038101906105b3919061385e565b611802565b6040516105c59190614638565b60405180910390f35b6105d66118ba565b005b3480156105e457600080fd5b506105ed611946565b6040516105fa9190614293565b60405180910390f35b34801561060f57600080fd5b5061062a60048036038101906106259190613ba3565b61196a565b6040516106379190614638565b60405180910390f35b34801561064c57600080fd5b5061066760048036038101906106629190613a4e565b611987565b6040516106749190614278565b60405180910390f35b34801561068957600080fd5b506106926119f2565b60405161069f91906142ae565b60405180910390f35b6106c260048036038101906106bd9190613ba3565b611a84565b005b3480156106d057600080fd5b506106d9611bdc565b6040516106e69190614293565b60405180910390f35b3480156106fb57600080fd5b50610716600480360381019061071191906139a1565b611be3565b005b34801561072457600080fd5b5061073f600480360381019061073a919061391e565b611d64565b005b34801561074d57600080fd5b5061076860048036038101906107639190613ba3565b611dc6565b60405161077591906142ae565b60405180910390f35b34801561078a57600080fd5b506107a560048036038101906107a09190613a4e565b611dd8565b005b3480156107b357600080fd5b506107ce60048036038101906107c9919061388b565b611e01565b6040516107db9190614278565b60405180910390f35b60006107ef82611e95565b9050919050565b60606000805461080590614955565b80601f016020809104026020016040519081016040528092919081815260200182805461083190614955565b801561087e5780601f106108535761010080835404028352916020019161087e565b820191906000526020600020905b81548152906001019060200180831161086157829003601f168201915b5050505050905090565b600061089382611f0f565b6108d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c990614558565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061091882611750565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610989576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610980906145b8565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166109a8611f7b565b73ffffffffffffffffffffffffffffffffffffffff1614806109d757506109d6816109d1611f7b565b611e01565b5b610a16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0d90614458565b60405180910390fd5b610a208383611f83565b505050565b6000600880549050905090565b610a43610a3d611f7b565b8261203c565b610a82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a79906145d8565b60405180910390fd5b610a8d83838361211a565b505050565b6000600a6000838152602001908152602001600020600101549050919050565b610abb82610a92565b610acc81610ac7611f7b565b612376565b610ad68383612413565b505050565b6000610ae683611802565b8210610b27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1e90614358565b60405180910390fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b60606000610b8e600c6124f4565b67ffffffffffffffff811115610ba757610ba6614b1d565b5b604051908082528060200260200182016040528015610bd55781602001602082028036833780820191505090505b5090506000600190505b610be9600c6124f4565b8111610c2e578082600183610bfe9190614837565b81518110610c0f57610c0e614aee565b5b6020026020010181815250508080610c26906149b8565b915050610bdf565b508091505090565b610c3e611f7b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca290614618565b60405180910390fd5b610cb58282612502565b5050565b610cd483838360405180602001604052806000815250611d64565b505050565b60606000610ce683611802565b90506000811415610d4357600067ffffffffffffffff811115610d0c57610d0b614b1d565b5b604051908082528060200260200182016040528015610d3a5781602001602082028036833780820191505090505b50915050610dde565b60008167ffffffffffffffff811115610d5f57610d5e614b1d565b5b604051908082528060200260200182016040528015610d8d5781602001602082028036833780820191505090505b50905060005b82811015610dd757610da58582610adb565b828281518110610db857610db7614aee565b5b6020026020010181815250508080610dcf906149b8565b915050610d93565b5080925050505b919050565b60608060606000806000600e6000888152602001908152602001600020600001541415610e45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3c90614378565b60405180910390fd5b6000600e60008881526020019081526020016000206040518060c001604052908160008201548152602001600182018054610e7f90614955565b80601f0160208091040260200160405190810160405280929190818152602001828054610eab90614955565b8015610ef85780601f10610ecd57610100808354040283529160200191610ef8565b820191906000526020600020905b815481529060010190602001808311610edb57829003601f168201915b50505050508152602001600282018054610f1190614955565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3d90614955565b8015610f8a5780601f10610f5f57610100808354040283529160200191610f8a565b820191906000526020600020905b815481529060010190602001808311610f6d57829003601f168201915b5050505050815260200160038201548152602001600482018054610fad90614955565b80601f0160208091040260200160405190810160405280929190818152602001828054610fd990614955565b80156110265780601f10610ffb57610100808354040283529160200191611026565b820191906000526020600020905b81548152906001019060200180831161100957829003601f168201915b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090508060200151816040015182608001518360a001518460600151955095509550955095505091939590929450565b60006110e07f4504b9dfd7400a1522f49a8b4a100552da9236849581fd59b7363eb48c6a474c33611987565b61111f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111690614398565b60405180910390fd5b6000600e6000888152602001908152602001600020600001541415611179576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117090614378565b60405180910390fd5b6000600e60008881526020019081526020016000206040518060c0016040529081600082015481526020016001820180546111b390614955565b80601f01602080910402602001604051908101604052809291908181526020018280546111df90614955565b801561122c5780601f106112015761010080835404028352916020019161122c565b820191906000526020600020905b81548152906001019060200180831161120f57829003601f168201915b5050505050815260200160028201805461124590614955565b80601f016020809104026020016040519081016040528092919081815260200182805461127190614955565b80156112be5780601f10611293576101008083540402835291602001916112be565b820191906000526020600020905b8154815290600101906020018083116112a157829003601f168201915b50505050508152602001600382015481526020016004820180546112e190614955565b80601f016020809104026020016040519081016040528092919081815260200182805461130d90614955565b801561135a5780601f1061132f5761010080835404028352916020019161135a565b820191906000526020600020905b81548152906001019060200180831161133d57829003601f168201915b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090503373ffffffffffffffffffffffffffffffffffffffff168160a0015173ffffffffffffffffffffffffffffffffffffffff161461142d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142490614518565b60405180910390fd5b6040518060c001604052808881526020018781526020018681526020018581526020018481526020013373ffffffffffffffffffffffffffffffffffffffff16815250600e60008981526020019081526020016000206000820151816000015560208201518160010190805190602001906114a992919061365d565b5060408201518160020190805190602001906114c692919061365d565b506060820151816003015560808201518160040190805190602001906114ed92919061365d565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508691505095945050505050565b60006115717f4504b9dfd7400a1522f49a8b4a100552da9236849581fd59b7363eb48c6a474c33611987565b6115b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a790614398565b60405180910390fd5b6115ba600c6125e4565b60006115c6600c6124f4565b90506040518060c001604052808281526020018781526020018681526020018581526020018481526020013373ffffffffffffffffffffffffffffffffffffffff16815250600e600083815260200190815260200160002060008201518160000155602082015181600101908051906020019061164492919061365d565b50604082015181600201908051906020019061166192919061365d565b5060608201518160030155608082015181600401908051906020019061168892919061365d565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505080915050949350505050565b60006116e9610a25565b821061172a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611721906145f8565b60405180910390fd5b6008828154811061173e5761173d614aee565b5b90600052602060002001549050919050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f090614498565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611873576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161186a90614478565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6118c76000801b33611987565b611906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118fd906144d8565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505061194457600080fd5b565b7f4504b9dfd7400a1522f49a8b4a100552da9236849581fd59b7363eb48c6a474c81565b6000600f6000838152602001908152602001600020549050919050565b6000600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060018054611a0190614955565b80601f0160208091040260200160405190810160405280929190818152602001828054611a2d90614955565b8015611a7a5780601f10611a4f57610100808354040283529160200191611a7a565b820191906000526020600020905b815481529060010190602001808311611a5d57829003601f168201915b5050505050905090565b6000600e6000838152602001908152602001600020600001541415611ade576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ad590614378565b60405180910390fd5b6000611ae8610a25565b90506000600182611af99190614756565b9050611b0533826125fa565b611b0e81611f0f565b611b1757600080fd5b82600f600083815260200190815260200160002081905550611bd781600e60008681526020019081526020016000206004018054611b5490614955565b80601f0160208091040260200160405190810160405280929190818152602001828054611b8090614955565b8015611bcd5780601f10611ba257610100808354040283529160200191611bcd565b820191906000526020600020905b815481529060010190602001808311611bb057829003601f168201915b5050505050612618565b505050565b6000801b81565b611beb611f7b565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611c59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c5090614418565b60405180910390fd5b8060056000611c66611f7b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611d13611f7b565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611d589190614278565b60405180910390a35050565b611d75611d6f611f7b565b8361203c565b611db4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dab906145d8565b60405180910390fd5b611dc08484848461268c565b50505050565b6060611dd1826126e8565b9050919050565b611de182610a92565b611df281611ded611f7b565b612376565b611dfc8383612502565b505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611f085750611f078261283a565b5b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16611ff683611750565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061204782611f0f565b612086576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161207d90614438565b60405180910390fd5b600061209183611750565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061210057508373ffffffffffffffffffffffffffffffffffffffff166120e884610888565b73ffffffffffffffffffffffffffffffffffffffff16145b8061211157506121108185611e01565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661213a82611750565b73ffffffffffffffffffffffffffffffffffffffff1614612190576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161218790614578565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612200576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121f7906143f8565b60405180910390fd5b61220b8383836128b4565b612216600082611f83565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546122669190614837565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546122bd9190614756565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6123808282611987565b61240f576123a58173ffffffffffffffffffffffffffffffffffffffff1660146128c4565b6123b38360001c60206128c4565b6040516020016123c49291906141b5565b6040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161240691906142ae565b60405180910390fd5b5050565b61241d8282611987565b6124f0576001600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612495611f7b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600081600001549050919050565b61250c8282611987565b156125e0576000600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612585611f7b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6001816000016000828254019250508190555050565b612614828260405180602001604052806000815250612b00565b5050565b61262182611f0f565b612660576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612657906144b8565b60405180910390fd5b80600b6000848152602001908152602001600020908051906020019061268792919061365d565b505050565b61269784848461211a565b6126a384848484612b5b565b6126e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126d9906143b8565b60405180910390fd5b50505050565b60606126f382611f0f565b612732576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161272990614538565b60405180910390fd5b6000600b6000848152602001908152602001600020805461275290614955565b80601f016020809104026020016040519081016040528092919081815260200182805461277e90614955565b80156127cb5780601f106127a0576101008083540402835291602001916127cb565b820191906000526020600020905b8154815290600101906020018083116127ae57829003601f168201915b5050505050905060006127dc612cf2565b90506000815114156127f2578192505050612835565b60008251111561282757808260405160200161280f929190614191565b60405160208183030381529060405292505050612835565b61283084612d09565b925050505b919050565b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806128ad57506128ac82612db0565b5b9050919050565b6128bf838383612e92565b505050565b6060600060028360026128d791906147dd565b6128e19190614756565b67ffffffffffffffff8111156128fa576128f9614b1d565b5b6040519080825280601f01601f19166020018201604052801561292c5781602001600182028036833780820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061296457612963614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106129c8576129c7614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002612a0891906147dd565b612a129190614756565b90505b6001811115612ab2577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110612a5457612a53614aee565b5b1a60f81b828281518110612a6b57612a6a614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080612aab9061492b565b9050612a15565b5060008414612af6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612aed90614338565b60405180910390fd5b8091505092915050565b612b0a8383612fa6565b612b176000848484612b5b565b612b56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b4d906143b8565b60405180910390fd5b505050565b6000612b7c8473ffffffffffffffffffffffffffffffffffffffff16613174565b15612ce5578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02612ba5611f7b565b8786866040518563ffffffff1660e01b8152600401612bc7949392919061420a565b602060405180830381600087803b158015612be157600080fd5b505af1925050508015612c1257506040513d601f19601f82011682018060405250810190612c0f9190613abb565b60015b612c95573d8060008114612c42576040519150601f19603f3d011682016040523d82523d6000602084013e612c47565b606091505b50600081511415612c8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c84906143b8565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050612cea565b600190505b949350505050565b606060405180602001604052806000815250905090565b6060612d1482611f0f565b612d53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d4a90614598565b60405180910390fd5b6000612d5d612cf2565b90506000815111612d7d5760405180602001604052806000815250612da8565b80612d8784613187565b604051602001612d98929190614191565b6040516020818303038152906040525b915050919050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612e7b57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80612e8b5750612e8a826132e8565b5b9050919050565b612e9d838383613352565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612ee057612edb81613357565b612f1f565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612f1e57612f1d83826133a0565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612f6257612f5d8161350d565b612fa1565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612fa057612f9f82826135de565b5b5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613016576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161300d906144f8565b60405180910390fd5b61301f81611f0f565b1561305f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613056906143d8565b60405180910390fd5b61306b600083836128b4565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546130bb9190614756565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600080823b905060008111915050919050565b606060008214156131cf576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506132e3565b600082905060005b600082146132015780806131ea906149b8565b915050600a826131fa91906147ac565b91506131d7565b60008167ffffffffffffffff81111561321d5761321c614b1d565b5b6040519080825280601f01601f19166020018201604052801561324f5781602001600182028036833780820191505090505b5090505b600085146132dc576001826132689190614837565b9150600a856132779190614a01565b60306132839190614756565b60f81b81838151811061329957613298614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856132d591906147ac565b9450613253565b8093505050505b919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b505050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505060019003906000526020600020016000909190919091505550565b600060016133ad84611802565b6133b79190614837565b905060006007600084815260200190815260200160002054905081811461349c576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550816007600083815260200190815260200160002081905550505b6007600084815260200190815260200160002060009055600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905550505050565b600060016008805490506135219190614837565b905060006009600084815260200190815260200160002054905060006008838154811061355157613550614aee565b5b90600052602060002001549050806008838154811061357357613572614aee565b5b9060005260206000200181905550816009600083815260200190815260200160002081905550600960008581526020019081526020016000206000905560088054806135c2576135c1614abf565b5b6001900381819060005260206000200160009055905550505050565b60006135e983611802565b905081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806007600084815260200190815260200160002081905550505050565b82805461366990614955565b90600052602060002090601f01602090048101928261368b57600085556136d2565b82601f106136a457805160ff19168380011785556136d2565b828001600101855582156136d2579182015b828111156136d15782518255916020019190600101906136b6565b5b5090506136df91906136e3565b5090565b5b808211156136fc5760008160009055506001016136e4565b5090565b600061371361370e84614678565b614653565b90508281526020810184848401111561372f5761372e614b51565b5b61373a8482856148e9565b509392505050565b6000613755613750846146a9565b614653565b90508281526020810184848401111561377157613770614b51565b5b61377c8482856148e9565b509392505050565b60008135905061379381615247565b92915050565b6000813590506137a88161525e565b92915050565b6000813590506137bd81615275565b92915050565b6000813590506137d28161528c565b92915050565b6000815190506137e78161528c565b92915050565b600082601f83011261380257613801614b4c565b5b8135613812848260208601613700565b91505092915050565b600082601f8301126138305761382f614b4c565b5b8135613840848260208601613742565b91505092915050565b600081359050613858816152a3565b92915050565b60006020828403121561387457613873614b5b565b5b600061388284828501613784565b91505092915050565b600080604083850312156138a2576138a1614b5b565b5b60006138b085828601613784565b92505060206138c185828601613784565b9150509250929050565b6000806000606084860312156138e4576138e3614b5b565b5b60006138f286828701613784565b935050602061390386828701613784565b925050604061391486828701613849565b9150509250925092565b6000806000806080858703121561393857613937614b5b565b5b600061394687828801613784565b945050602061395787828801613784565b935050604061396887828801613849565b925050606085013567ffffffffffffffff81111561398957613988614b56565b5b613995878288016137ed565b91505092959194509250565b600080604083850312156139b8576139b7614b5b565b5b60006139c685828601613784565b92505060206139d785828601613799565b9150509250929050565b600080604083850312156139f8576139f7614b5b565b5b6000613a0685828601613784565b9250506020613a1785828601613849565b9150509250929050565b600060208284031215613a3757613a36614b5b565b5b6000613a45848285016137ae565b91505092915050565b60008060408385031215613a6557613a64614b5b565b5b6000613a73858286016137ae565b9250506020613a8485828601613784565b9150509250929050565b600060208284031215613aa457613aa3614b5b565b5b6000613ab2848285016137c3565b91505092915050565b600060208284031215613ad157613ad0614b5b565b5b6000613adf848285016137d8565b91505092915050565b60008060008060808587031215613b0257613b01614b5b565b5b600085013567ffffffffffffffff811115613b2057613b1f614b56565b5b613b2c8782880161381b565b945050602085013567ffffffffffffffff811115613b4d57613b4c614b56565b5b613b598782880161381b565b9350506040613b6a87828801613849565b925050606085013567ffffffffffffffff811115613b8b57613b8a614b56565b5b613b978782880161381b565b91505092959194509250565b600060208284031215613bb957613bb8614b5b565b5b6000613bc784828501613849565b91505092915050565b600080600080600060a08688031215613bec57613beb614b5b565b5b6000613bfa88828901613849565b955050602086013567ffffffffffffffff811115613c1b57613c1a614b56565b5b613c278882890161381b565b945050604086013567ffffffffffffffff811115613c4857613c47614b56565b5b613c548882890161381b565b9350506060613c6588828901613849565b925050608086013567ffffffffffffffff811115613c8657613c85614b56565b5b613c928882890161381b565b9150509295509295909350565b6000613cab8383614173565b60208301905092915050565b613cc08161486b565b82525050565b6000613cd1826146ea565b613cdb8185614718565b9350613ce6836146da565b8060005b83811015613d17578151613cfe8882613c9f565b9750613d098361470b565b925050600181019050613cea565b5085935050505092915050565b613d2d8161487d565b82525050565b613d3c81614889565b82525050565b6000613d4d826146f5565b613d578185614729565b9350613d678185602086016148f8565b613d7081614b60565b840191505092915050565b6000613d8682614700565b613d90818561473a565b9350613da08185602086016148f8565b613da981614b60565b840191505092915050565b6000613dbf82614700565b613dc9818561474b565b9350613dd98185602086016148f8565b80840191505092915050565b6000613df260208361473a565b9150613dfd82614b71565b602082019050919050565b6000613e15602b8361473a565b9150613e2082614b9a565b604082019050919050565b6000613e3860118361473a565b9150613e4382614be9565b602082019050919050565b6000613e5b60248361473a565b9150613e6682614c12565b604082019050919050565b6000613e7e60328361473a565b9150613e8982614c61565b604082019050919050565b6000613ea1601c8361473a565b9150613eac82614cb0565b602082019050919050565b6000613ec460248361473a565b9150613ecf82614cd9565b604082019050919050565b6000613ee760198361473a565b9150613ef282614d28565b602082019050919050565b6000613f0a602c8361473a565b9150613f1582614d51565b604082019050919050565b6000613f2d60388361473a565b9150613f3882614da0565b604082019050919050565b6000613f50602a8361473a565b9150613f5b82614def565b604082019050919050565b6000613f7360298361473a565b9150613f7e82614e3e565b604082019050919050565b6000613f96602e8361473a565b9150613fa182614e8d565b604082019050919050565b6000613fb9601c8361473a565b9150613fc482614edc565b602082019050919050565b6000613fdc60208361473a565b9150613fe782614f05565b602082019050919050565b6000613fff60218361473a565b915061400a82614f2e565b604082019050919050565b600061402260318361473a565b915061402d82614f7d565b604082019050919050565b6000614045602c8361473a565b915061405082614fcc565b604082019050919050565b600061406860298361473a565b91506140738261501b565b604082019050919050565b600061408b602f8361473a565b91506140968261506a565b604082019050919050565b60006140ae60218361473a565b91506140b9826150b9565b604082019050919050565b60006140d160318361473a565b91506140dc82615108565b604082019050919050565b60006140f4602c8361473a565b91506140ff82615157565b604082019050919050565b600061411760178361474b565b9150614122826151a6565b601782019050919050565b600061413a60118361474b565b9150614145826151cf565b601182019050919050565b600061415d602f8361473a565b9150614168826151f8565b604082019050919050565b61417c816148df565b82525050565b61418b816148df565b82525050565b600061419d8285613db4565b91506141a98284613db4565b91508190509392505050565b60006141c08261410a565b91506141cc8285613db4565b91506141d78261412d565b91506141e38284613db4565b91508190509392505050565b60006020820190506142046000830184613cb7565b92915050565b600060808201905061421f6000830187613cb7565b61422c6020830186613cb7565b6142396040830185614182565b818103606083015261424b8184613d42565b905095945050505050565b600060208201905081810360008301526142708184613cc6565b905092915050565b600060208201905061428d6000830184613d24565b92915050565b60006020820190506142a86000830184613d33565b92915050565b600060208201905081810360008301526142c88184613d7b565b905092915050565b600060a08201905081810360008301526142ea8188613d7b565b905081810360208301526142fe8187613d7b565b905081810360408301526143128186613d7b565b90506143216060830185613cb7565b61432e6080830184614182565b9695505050505050565b6000602082019050818103600083015261435181613de5565b9050919050565b6000602082019050818103600083015261437181613e08565b9050919050565b6000602082019050818103600083015261439181613e2b565b9050919050565b600060208201905081810360008301526143b181613e4e565b9050919050565b600060208201905081810360008301526143d181613e71565b9050919050565b600060208201905081810360008301526143f181613e94565b9050919050565b6000602082019050818103600083015261441181613eb7565b9050919050565b6000602082019050818103600083015261443181613eda565b9050919050565b6000602082019050818103600083015261445181613efd565b9050919050565b6000602082019050818103600083015261447181613f20565b9050919050565b6000602082019050818103600083015261449181613f43565b9050919050565b600060208201905081810360008301526144b181613f66565b9050919050565b600060208201905081810360008301526144d181613f89565b9050919050565b600060208201905081810360008301526144f181613fac565b9050919050565b6000602082019050818103600083015261451181613fcf565b9050919050565b6000602082019050818103600083015261453181613ff2565b9050919050565b6000602082019050818103600083015261455181614015565b9050919050565b6000602082019050818103600083015261457181614038565b9050919050565b600060208201905081810360008301526145918161405b565b9050919050565b600060208201905081810360008301526145b18161407e565b9050919050565b600060208201905081810360008301526145d1816140a1565b9050919050565b600060208201905081810360008301526145f1816140c4565b9050919050565b60006020820190508181036000830152614611816140e7565b9050919050565b6000602082019050818103600083015261463181614150565b9050919050565b600060208201905061464d6000830184614182565b92915050565b600061465d61466e565b90506146698282614987565b919050565b6000604051905090565b600067ffffffffffffffff82111561469357614692614b1d565b5b61469c82614b60565b9050602081019050919050565b600067ffffffffffffffff8211156146c4576146c3614b1d565b5b6146cd82614b60565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000614761826148df565b915061476c836148df565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156147a1576147a0614a32565b5b828201905092915050565b60006147b7826148df565b91506147c2836148df565b9250826147d2576147d1614a61565b5b828204905092915050565b60006147e8826148df565b91506147f3836148df565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561482c5761482b614a32565b5b828202905092915050565b6000614842826148df565b915061484d836148df565b9250828210156148605761485f614a32565b5b828203905092915050565b6000614876826148bf565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156149165780820151818401526020810190506148fb565b83811115614925576000848401525b50505050565b6000614936826148df565b9150600082141561494a57614949614a32565b5b600182039050919050565b6000600282049050600182168061496d57607f821691505b6020821081141561498157614980614a90565b5b50919050565b61499082614b60565b810181811067ffffffffffffffff821117156149af576149ae614b1d565b5b80604052505050565b60006149c3826148df565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156149f6576149f5614a32565b5b600182019050919050565b6000614a0c826148df565b9150614a17836148df565b925082614a2757614a26614a61565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008201527f74206f6620626f756e6473000000000000000000000000000000000000000000602082015250565b7f417070204944206d757374206578697374000000000000000000000000000000600082015250565b7f4d757374206265206120646576656c6f70657220746f2063726561746520616e60008201527f2061707000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b7f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008201527f6578697374656e7420746f6b656e000000000000000000000000000000000000602082015250565b7f4d75737420626520616e2061646d696e20746f20776974686472617700000000600082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f596f75206d75737420626520746865206f776e6572206f66207468697320617060008201527f7000000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524337323155524953746f726167653a2055524920717565727920666f722060008201527f6e6f6e6578697374656e7420746f6b656e000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008201527f73206e6f74206f776e0000000000000000000000000000000000000000000000602082015250565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b7f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008201527f7574206f6620626f756e64730000000000000000000000000000000000000000602082015250565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6152508161486b565b811461525b57600080fd5b50565b6152678161487d565b811461527257600080fd5b50565b61527e81614889565b811461528957600080fd5b50565b61529581614893565b81146152a057600080fd5b50565b6152ac816148df565b81146152b757600080fd5b5056fea26469706673582212206d1e1f96a7981ff2283155936d935258895e739fa6191f3ee5d4c71aebe1597c64736f6c63430008060033\";\nvar deployedBytecode = \"0x6080604052600436106101d85760003560e01c80634b42a0f81161010257806395d89b4111610095578063b88d4fde11610064578063b88d4fde14610718578063c87b56dd14610741578063d547741f1461077e578063e985e9c5146107a7576101d8565b806395d89b411461067d578063a0712d68146106a8578063a217fddf146106c4578063a22cb465146106ef576101d8565b8063853828b6116100d1578063853828b6146105ce5780639103a0e0146105d85780639118f31a1461060357806391d1485414610640576101d8565b80634b42a0f8146104da5780634f6ccce7146105175780636352211e1461055457806370a0823114610591576101d8565b80632f2ff15d1161017a57806342842e0e1161014957806342842e0e146103f6578063438b63001461041f578063458f9cfb1461045c578063471c1ea91461049d576101d8565b80632f2ff15d1461033c5780632f745c591461036557806333f717fe146103a257806336568abe146103cd576101d8565b8063095ea7b3116101b6578063095ea7b31461028257806318160ddd146102ab57806323b872dd146102d6578063248a9ca3146102ff576101d8565b806301ffc9a7146101dd57806306fdde031461021a578063081812fc14610245575b600080fd5b3480156101e957600080fd5b5061020460048036038101906101ff9190613a8e565b6107e4565b6040516102119190614278565b60405180910390f35b34801561022657600080fd5b5061022f6107f6565b60405161023c91906142ae565b60405180910390f35b34801561025157600080fd5b5061026c60048036038101906102679190613ba3565b610888565b60405161027991906141ef565b60405180910390f35b34801561028e57600080fd5b506102a960048036038101906102a491906139e1565b61090d565b005b3480156102b757600080fd5b506102c0610a25565b6040516102cd9190614638565b60405180910390f35b3480156102e257600080fd5b506102fd60048036038101906102f891906138cb565b610a32565b005b34801561030b57600080fd5b5061032660048036038101906103219190613a21565b610a92565b6040516103339190614293565b60405180910390f35b34801561034857600080fd5b50610363600480360381019061035e9190613a4e565b610ab2565b005b34801561037157600080fd5b5061038c600480360381019061038791906139e1565b610adb565b6040516103999190614638565b60405180910390f35b3480156103ae57600080fd5b506103b7610b80565b6040516103c49190614256565b60405180910390f35b3480156103d957600080fd5b506103f460048036038101906103ef9190613a4e565b610c36565b005b34801561040257600080fd5b5061041d600480360381019061041891906138cb565b610cb9565b005b34801561042b57600080fd5b506104466004803603810190610441919061385e565b610cd9565b6040516104539190614256565b60405180910390f35b34801561046857600080fd5b50610483600480360381019061047e9190613ba3565b610de3565b6040516104949594939291906142d0565b60405180910390f35b3480156104a957600080fd5b506104c460048036038101906104bf9190613bd0565b6110b4565b6040516104d19190614638565b60405180910390f35b3480156104e657600080fd5b5061050160048036038101906104fc9190613ae8565b611545565b60405161050e9190614638565b60405180910390f35b34801561052357600080fd5b5061053e60048036038101906105399190613ba3565b6116df565b60405161054b9190614638565b60405180910390f35b34801561056057600080fd5b5061057b60048036038101906105769190613ba3565b611750565b60405161058891906141ef565b60405180910390f35b34801561059d57600080fd5b506105b860048036038101906105b3919061385e565b611802565b6040516105c59190614638565b60405180910390f35b6105d66118ba565b005b3480156105e457600080fd5b506105ed611946565b6040516105fa9190614293565b60405180910390f35b34801561060f57600080fd5b5061062a60048036038101906106259190613ba3565b61196a565b6040516106379190614638565b60405180910390f35b34801561064c57600080fd5b5061066760048036038101906106629190613a4e565b611987565b6040516106749190614278565b60405180910390f35b34801561068957600080fd5b506106926119f2565b60405161069f91906142ae565b60405180910390f35b6106c260048036038101906106bd9190613ba3565b611a84565b005b3480156106d057600080fd5b506106d9611bdc565b6040516106e69190614293565b60405180910390f35b3480156106fb57600080fd5b50610716600480360381019061071191906139a1565b611be3565b005b34801561072457600080fd5b5061073f600480360381019061073a919061391e565b611d64565b005b34801561074d57600080fd5b5061076860048036038101906107639190613ba3565b611dc6565b60405161077591906142ae565b60405180910390f35b34801561078a57600080fd5b506107a560048036038101906107a09190613a4e565b611dd8565b005b3480156107b357600080fd5b506107ce60048036038101906107c9919061388b565b611e01565b6040516107db9190614278565b60405180910390f35b60006107ef82611e95565b9050919050565b60606000805461080590614955565b80601f016020809104026020016040519081016040528092919081815260200182805461083190614955565b801561087e5780601f106108535761010080835404028352916020019161087e565b820191906000526020600020905b81548152906001019060200180831161086157829003601f168201915b5050505050905090565b600061089382611f0f565b6108d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c990614558565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061091882611750565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610989576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610980906145b8565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166109a8611f7b565b73ffffffffffffffffffffffffffffffffffffffff1614806109d757506109d6816109d1611f7b565b611e01565b5b610a16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0d90614458565b60405180910390fd5b610a208383611f83565b505050565b6000600880549050905090565b610a43610a3d611f7b565b8261203c565b610a82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a79906145d8565b60405180910390fd5b610a8d83838361211a565b505050565b6000600a6000838152602001908152602001600020600101549050919050565b610abb82610a92565b610acc81610ac7611f7b565b612376565b610ad68383612413565b505050565b6000610ae683611802565b8210610b27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1e90614358565b60405180910390fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b60606000610b8e600c6124f4565b67ffffffffffffffff811115610ba757610ba6614b1d565b5b604051908082528060200260200182016040528015610bd55781602001602082028036833780820191505090505b5090506000600190505b610be9600c6124f4565b8111610c2e578082600183610bfe9190614837565b81518110610c0f57610c0e614aee565b5b6020026020010181815250508080610c26906149b8565b915050610bdf565b508091505090565b610c3e611f7b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca290614618565b60405180910390fd5b610cb58282612502565b5050565b610cd483838360405180602001604052806000815250611d64565b505050565b60606000610ce683611802565b90506000811415610d4357600067ffffffffffffffff811115610d0c57610d0b614b1d565b5b604051908082528060200260200182016040528015610d3a5781602001602082028036833780820191505090505b50915050610dde565b60008167ffffffffffffffff811115610d5f57610d5e614b1d565b5b604051908082528060200260200182016040528015610d8d5781602001602082028036833780820191505090505b50905060005b82811015610dd757610da58582610adb565b828281518110610db857610db7614aee565b5b6020026020010181815250508080610dcf906149b8565b915050610d93565b5080925050505b919050565b60608060606000806000600e6000888152602001908152602001600020600001541415610e45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3c90614378565b60405180910390fd5b6000600e60008881526020019081526020016000206040518060c001604052908160008201548152602001600182018054610e7f90614955565b80601f0160208091040260200160405190810160405280929190818152602001828054610eab90614955565b8015610ef85780601f10610ecd57610100808354040283529160200191610ef8565b820191906000526020600020905b815481529060010190602001808311610edb57829003601f168201915b50505050508152602001600282018054610f1190614955565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3d90614955565b8015610f8a5780601f10610f5f57610100808354040283529160200191610f8a565b820191906000526020600020905b815481529060010190602001808311610f6d57829003601f168201915b5050505050815260200160038201548152602001600482018054610fad90614955565b80601f0160208091040260200160405190810160405280929190818152602001828054610fd990614955565b80156110265780601f10610ffb57610100808354040283529160200191611026565b820191906000526020600020905b81548152906001019060200180831161100957829003601f168201915b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090508060200151816040015182608001518360a001518460600151955095509550955095505091939590929450565b60006110e07f4504b9dfd7400a1522f49a8b4a100552da9236849581fd59b7363eb48c6a474c33611987565b61111f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111690614398565b60405180910390fd5b6000600e6000888152602001908152602001600020600001541415611179576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117090614378565b60405180910390fd5b6000600e60008881526020019081526020016000206040518060c0016040529081600082015481526020016001820180546111b390614955565b80601f01602080910402602001604051908101604052809291908181526020018280546111df90614955565b801561122c5780601f106112015761010080835404028352916020019161122c565b820191906000526020600020905b81548152906001019060200180831161120f57829003601f168201915b5050505050815260200160028201805461124590614955565b80601f016020809104026020016040519081016040528092919081815260200182805461127190614955565b80156112be5780601f10611293576101008083540402835291602001916112be565b820191906000526020600020905b8154815290600101906020018083116112a157829003601f168201915b50505050508152602001600382015481526020016004820180546112e190614955565b80601f016020809104026020016040519081016040528092919081815260200182805461130d90614955565b801561135a5780601f1061132f5761010080835404028352916020019161135a565b820191906000526020600020905b81548152906001019060200180831161133d57829003601f168201915b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090503373ffffffffffffffffffffffffffffffffffffffff168160a0015173ffffffffffffffffffffffffffffffffffffffff161461142d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142490614518565b60405180910390fd5b6040518060c001604052808881526020018781526020018681526020018581526020018481526020013373ffffffffffffffffffffffffffffffffffffffff16815250600e60008981526020019081526020016000206000820151816000015560208201518160010190805190602001906114a992919061365d565b5060408201518160020190805190602001906114c692919061365d565b506060820151816003015560808201518160040190805190602001906114ed92919061365d565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508691505095945050505050565b60006115717f4504b9dfd7400a1522f49a8b4a100552da9236849581fd59b7363eb48c6a474c33611987565b6115b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a790614398565b60405180910390fd5b6115ba600c6125e4565b60006115c6600c6124f4565b90506040518060c001604052808281526020018781526020018681526020018581526020018481526020013373ffffffffffffffffffffffffffffffffffffffff16815250600e600083815260200190815260200160002060008201518160000155602082015181600101908051906020019061164492919061365d565b50604082015181600201908051906020019061166192919061365d565b5060608201518160030155608082015181600401908051906020019061168892919061365d565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505080915050949350505050565b60006116e9610a25565b821061172a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611721906145f8565b60405180910390fd5b6008828154811061173e5761173d614aee565b5b90600052602060002001549050919050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f090614498565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611873576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161186a90614478565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6118c76000801b33611987565b611906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118fd906144d8565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505061194457600080fd5b565b7f4504b9dfd7400a1522f49a8b4a100552da9236849581fd59b7363eb48c6a474c81565b6000600f6000838152602001908152602001600020549050919050565b6000600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060018054611a0190614955565b80601f0160208091040260200160405190810160405280929190818152602001828054611a2d90614955565b8015611a7a5780601f10611a4f57610100808354040283529160200191611a7a565b820191906000526020600020905b815481529060010190602001808311611a5d57829003601f168201915b5050505050905090565b6000600e6000838152602001908152602001600020600001541415611ade576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ad590614378565b60405180910390fd5b6000611ae8610a25565b90506000600182611af99190614756565b9050611b0533826125fa565b611b0e81611f0f565b611b1757600080fd5b82600f600083815260200190815260200160002081905550611bd781600e60008681526020019081526020016000206004018054611b5490614955565b80601f0160208091040260200160405190810160405280929190818152602001828054611b8090614955565b8015611bcd5780601f10611ba257610100808354040283529160200191611bcd565b820191906000526020600020905b815481529060010190602001808311611bb057829003601f168201915b5050505050612618565b505050565b6000801b81565b611beb611f7b565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611c59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c5090614418565b60405180910390fd5b8060056000611c66611f7b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611d13611f7b565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611d589190614278565b60405180910390a35050565b611d75611d6f611f7b565b8361203c565b611db4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dab906145d8565b60405180910390fd5b611dc08484848461268c565b50505050565b6060611dd1826126e8565b9050919050565b611de182610a92565b611df281611ded611f7b565b612376565b611dfc8383612502565b505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611f085750611f078261283a565b5b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16611ff683611750565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061204782611f0f565b612086576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161207d90614438565b60405180910390fd5b600061209183611750565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061210057508373ffffffffffffffffffffffffffffffffffffffff166120e884610888565b73ffffffffffffffffffffffffffffffffffffffff16145b8061211157506121108185611e01565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661213a82611750565b73ffffffffffffffffffffffffffffffffffffffff1614612190576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161218790614578565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612200576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121f7906143f8565b60405180910390fd5b61220b8383836128b4565b612216600082611f83565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546122669190614837565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546122bd9190614756565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6123808282611987565b61240f576123a58173ffffffffffffffffffffffffffffffffffffffff1660146128c4565b6123b38360001c60206128c4565b6040516020016123c49291906141b5565b6040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161240691906142ae565b60405180910390fd5b5050565b61241d8282611987565b6124f0576001600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612495611f7b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600081600001549050919050565b61250c8282611987565b156125e0576000600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612585611f7b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6001816000016000828254019250508190555050565b612614828260405180602001604052806000815250612b00565b5050565b61262182611f0f565b612660576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612657906144b8565b60405180910390fd5b80600b6000848152602001908152602001600020908051906020019061268792919061365d565b505050565b61269784848461211a565b6126a384848484612b5b565b6126e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126d9906143b8565b60405180910390fd5b50505050565b60606126f382611f0f565b612732576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161272990614538565b60405180910390fd5b6000600b6000848152602001908152602001600020805461275290614955565b80601f016020809104026020016040519081016040528092919081815260200182805461277e90614955565b80156127cb5780601f106127a0576101008083540402835291602001916127cb565b820191906000526020600020905b8154815290600101906020018083116127ae57829003601f168201915b5050505050905060006127dc612cf2565b90506000815114156127f2578192505050612835565b60008251111561282757808260405160200161280f929190614191565b60405160208183030381529060405292505050612835565b61283084612d09565b925050505b919050565b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806128ad57506128ac82612db0565b5b9050919050565b6128bf838383612e92565b505050565b6060600060028360026128d791906147dd565b6128e19190614756565b67ffffffffffffffff8111156128fa576128f9614b1d565b5b6040519080825280601f01601f19166020018201604052801561292c5781602001600182028036833780820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061296457612963614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106129c8576129c7614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002612a0891906147dd565b612a129190614756565b90505b6001811115612ab2577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110612a5457612a53614aee565b5b1a60f81b828281518110612a6b57612a6a614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080612aab9061492b565b9050612a15565b5060008414612af6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612aed90614338565b60405180910390fd5b8091505092915050565b612b0a8383612fa6565b612b176000848484612b5b565b612b56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b4d906143b8565b60405180910390fd5b505050565b6000612b7c8473ffffffffffffffffffffffffffffffffffffffff16613174565b15612ce5578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02612ba5611f7b565b8786866040518563ffffffff1660e01b8152600401612bc7949392919061420a565b602060405180830381600087803b158015612be157600080fd5b505af1925050508015612c1257506040513d601f19601f82011682018060405250810190612c0f9190613abb565b60015b612c95573d8060008114612c42576040519150601f19603f3d011682016040523d82523d6000602084013e612c47565b606091505b50600081511415612c8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c84906143b8565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050612cea565b600190505b949350505050565b606060405180602001604052806000815250905090565b6060612d1482611f0f565b612d53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d4a90614598565b60405180910390fd5b6000612d5d612cf2565b90506000815111612d7d5760405180602001604052806000815250612da8565b80612d8784613187565b604051602001612d98929190614191565b6040516020818303038152906040525b915050919050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612e7b57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80612e8b5750612e8a826132e8565b5b9050919050565b612e9d838383613352565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612ee057612edb81613357565b612f1f565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612f1e57612f1d83826133a0565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612f6257612f5d8161350d565b612fa1565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612fa057612f9f82826135de565b5b5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613016576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161300d906144f8565b60405180910390fd5b61301f81611f0f565b1561305f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613056906143d8565b60405180910390fd5b61306b600083836128b4565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546130bb9190614756565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600080823b905060008111915050919050565b606060008214156131cf576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506132e3565b600082905060005b600082146132015780806131ea906149b8565b915050600a826131fa91906147ac565b91506131d7565b60008167ffffffffffffffff81111561321d5761321c614b1d565b5b6040519080825280601f01601f19166020018201604052801561324f5781602001600182028036833780820191505090505b5090505b600085146132dc576001826132689190614837565b9150600a856132779190614a01565b60306132839190614756565b60f81b81838151811061329957613298614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856132d591906147ac565b9450613253565b8093505050505b919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b505050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505060019003906000526020600020016000909190919091505550565b600060016133ad84611802565b6133b79190614837565b905060006007600084815260200190815260200160002054905081811461349c576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550816007600083815260200190815260200160002081905550505b6007600084815260200190815260200160002060009055600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905550505050565b600060016008805490506135219190614837565b905060006009600084815260200190815260200160002054905060006008838154811061355157613550614aee565b5b90600052602060002001549050806008838154811061357357613572614aee565b5b9060005260206000200181905550816009600083815260200190815260200160002081905550600960008581526020019081526020016000206000905560088054806135c2576135c1614abf565b5b6001900381819060005260206000200160009055905550505050565b60006135e983611802565b905081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806007600084815260200190815260200160002081905550505050565b82805461366990614955565b90600052602060002090601f01602090048101928261368b57600085556136d2565b82601f106136a457805160ff19168380011785556136d2565b828001600101855582156136d2579182015b828111156136d15782518255916020019190600101906136b6565b5b5090506136df91906136e3565b5090565b5b808211156136fc5760008160009055506001016136e4565b5090565b600061371361370e84614678565b614653565b90508281526020810184848401111561372f5761372e614b51565b5b61373a8482856148e9565b509392505050565b6000613755613750846146a9565b614653565b90508281526020810184848401111561377157613770614b51565b5b61377c8482856148e9565b509392505050565b60008135905061379381615247565b92915050565b6000813590506137a88161525e565b92915050565b6000813590506137bd81615275565b92915050565b6000813590506137d28161528c565b92915050565b6000815190506137e78161528c565b92915050565b600082601f83011261380257613801614b4c565b5b8135613812848260208601613700565b91505092915050565b600082601f8301126138305761382f614b4c565b5b8135613840848260208601613742565b91505092915050565b600081359050613858816152a3565b92915050565b60006020828403121561387457613873614b5b565b5b600061388284828501613784565b91505092915050565b600080604083850312156138a2576138a1614b5b565b5b60006138b085828601613784565b92505060206138c185828601613784565b9150509250929050565b6000806000606084860312156138e4576138e3614b5b565b5b60006138f286828701613784565b935050602061390386828701613784565b925050604061391486828701613849565b9150509250925092565b6000806000806080858703121561393857613937614b5b565b5b600061394687828801613784565b945050602061395787828801613784565b935050604061396887828801613849565b925050606085013567ffffffffffffffff81111561398957613988614b56565b5b613995878288016137ed565b91505092959194509250565b600080604083850312156139b8576139b7614b5b565b5b60006139c685828601613784565b92505060206139d785828601613799565b9150509250929050565b600080604083850312156139f8576139f7614b5b565b5b6000613a0685828601613784565b9250506020613a1785828601613849565b9150509250929050565b600060208284031215613a3757613a36614b5b565b5b6000613a45848285016137ae565b91505092915050565b60008060408385031215613a6557613a64614b5b565b5b6000613a73858286016137ae565b9250506020613a8485828601613784565b9150509250929050565b600060208284031215613aa457613aa3614b5b565b5b6000613ab2848285016137c3565b91505092915050565b600060208284031215613ad157613ad0614b5b565b5b6000613adf848285016137d8565b91505092915050565b60008060008060808587031215613b0257613b01614b5b565b5b600085013567ffffffffffffffff811115613b2057613b1f614b56565b5b613b2c8782880161381b565b945050602085013567ffffffffffffffff811115613b4d57613b4c614b56565b5b613b598782880161381b565b9350506040613b6a87828801613849565b925050606085013567ffffffffffffffff811115613b8b57613b8a614b56565b5b613b978782880161381b565b91505092959194509250565b600060208284031215613bb957613bb8614b5b565b5b6000613bc784828501613849565b91505092915050565b600080600080600060a08688031215613bec57613beb614b5b565b5b6000613bfa88828901613849565b955050602086013567ffffffffffffffff811115613c1b57613c1a614b56565b5b613c278882890161381b565b945050604086013567ffffffffffffffff811115613c4857613c47614b56565b5b613c548882890161381b565b9350506060613c6588828901613849565b925050608086013567ffffffffffffffff811115613c8657613c85614b56565b5b613c928882890161381b565b9150509295509295909350565b6000613cab8383614173565b60208301905092915050565b613cc08161486b565b82525050565b6000613cd1826146ea565b613cdb8185614718565b9350613ce6836146da565b8060005b83811015613d17578151613cfe8882613c9f565b9750613d098361470b565b925050600181019050613cea565b5085935050505092915050565b613d2d8161487d565b82525050565b613d3c81614889565b82525050565b6000613d4d826146f5565b613d578185614729565b9350613d678185602086016148f8565b613d7081614b60565b840191505092915050565b6000613d8682614700565b613d90818561473a565b9350613da08185602086016148f8565b613da981614b60565b840191505092915050565b6000613dbf82614700565b613dc9818561474b565b9350613dd98185602086016148f8565b80840191505092915050565b6000613df260208361473a565b9150613dfd82614b71565b602082019050919050565b6000613e15602b8361473a565b9150613e2082614b9a565b604082019050919050565b6000613e3860118361473a565b9150613e4382614be9565b602082019050919050565b6000613e5b60248361473a565b9150613e6682614c12565b604082019050919050565b6000613e7e60328361473a565b9150613e8982614c61565b604082019050919050565b6000613ea1601c8361473a565b9150613eac82614cb0565b602082019050919050565b6000613ec460248361473a565b9150613ecf82614cd9565b604082019050919050565b6000613ee760198361473a565b9150613ef282614d28565b602082019050919050565b6000613f0a602c8361473a565b9150613f1582614d51565b604082019050919050565b6000613f2d60388361473a565b9150613f3882614da0565b604082019050919050565b6000613f50602a8361473a565b9150613f5b82614def565b604082019050919050565b6000613f7360298361473a565b9150613f7e82614e3e565b604082019050919050565b6000613f96602e8361473a565b9150613fa182614e8d565b604082019050919050565b6000613fb9601c8361473a565b9150613fc482614edc565b602082019050919050565b6000613fdc60208361473a565b9150613fe782614f05565b602082019050919050565b6000613fff60218361473a565b915061400a82614f2e565b604082019050919050565b600061402260318361473a565b915061402d82614f7d565b604082019050919050565b6000614045602c8361473a565b915061405082614fcc565b604082019050919050565b600061406860298361473a565b91506140738261501b565b604082019050919050565b600061408b602f8361473a565b91506140968261506a565b604082019050919050565b60006140ae60218361473a565b91506140b9826150b9565b604082019050919050565b60006140d160318361473a565b91506140dc82615108565b604082019050919050565b60006140f4602c8361473a565b91506140ff82615157565b604082019050919050565b600061411760178361474b565b9150614122826151a6565b601782019050919050565b600061413a60118361474b565b9150614145826151cf565b601182019050919050565b600061415d602f8361473a565b9150614168826151f8565b604082019050919050565b61417c816148df565b82525050565b61418b816148df565b82525050565b600061419d8285613db4565b91506141a98284613db4565b91508190509392505050565b60006141c08261410a565b91506141cc8285613db4565b91506141d78261412d565b91506141e38284613db4565b91508190509392505050565b60006020820190506142046000830184613cb7565b92915050565b600060808201905061421f6000830187613cb7565b61422c6020830186613cb7565b6142396040830185614182565b818103606083015261424b8184613d42565b905095945050505050565b600060208201905081810360008301526142708184613cc6565b905092915050565b600060208201905061428d6000830184613d24565b92915050565b60006020820190506142a86000830184613d33565b92915050565b600060208201905081810360008301526142c88184613d7b565b905092915050565b600060a08201905081810360008301526142ea8188613d7b565b905081810360208301526142fe8187613d7b565b905081810360408301526143128186613d7b565b90506143216060830185613cb7565b61432e6080830184614182565b9695505050505050565b6000602082019050818103600083015261435181613de5565b9050919050565b6000602082019050818103600083015261437181613e08565b9050919050565b6000602082019050818103600083015261439181613e2b565b9050919050565b600060208201905081810360008301526143b181613e4e565b9050919050565b600060208201905081810360008301526143d181613e71565b9050919050565b600060208201905081810360008301526143f181613e94565b9050919050565b6000602082019050818103600083015261441181613eb7565b9050919050565b6000602082019050818103600083015261443181613eda565b9050919050565b6000602082019050818103600083015261445181613efd565b9050919050565b6000602082019050818103600083015261447181613f20565b9050919050565b6000602082019050818103600083015261449181613f43565b9050919050565b600060208201905081810360008301526144b181613f66565b9050919050565b600060208201905081810360008301526144d181613f89565b9050919050565b600060208201905081810360008301526144f181613fac565b9050919050565b6000602082019050818103600083015261451181613fcf565b9050919050565b6000602082019050818103600083015261453181613ff2565b9050919050565b6000602082019050818103600083015261455181614015565b9050919050565b6000602082019050818103600083015261457181614038565b9050919050565b600060208201905081810360008301526145918161405b565b9050919050565b600060208201905081810360008301526145b18161407e565b9050919050565b600060208201905081810360008301526145d1816140a1565b9050919050565b600060208201905081810360008301526145f1816140c4565b9050919050565b60006020820190508181036000830152614611816140e7565b9050919050565b6000602082019050818103600083015261463181614150565b9050919050565b600060208201905061464d6000830184614182565b92915050565b600061465d61466e565b90506146698282614987565b919050565b6000604051905090565b600067ffffffffffffffff82111561469357614692614b1d565b5b61469c82614b60565b9050602081019050919050565b600067ffffffffffffffff8211156146c4576146c3614b1d565b5b6146cd82614b60565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000614761826148df565b915061476c836148df565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156147a1576147a0614a32565b5b828201905092915050565b60006147b7826148df565b91506147c2836148df565b9250826147d2576147d1614a61565b5b828204905092915050565b60006147e8826148df565b91506147f3836148df565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561482c5761482b614a32565b5b828202905092915050565b6000614842826148df565b915061484d836148df565b9250828210156148605761485f614a32565b5b828203905092915050565b6000614876826148bf565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156149165780820151818401526020810190506148fb565b83811115614925576000848401525b50505050565b6000614936826148df565b9150600082141561494a57614949614a32565b5b600182039050919050565b6000600282049050600182168061496d57607f821691505b6020821081141561498157614980614a90565b5b50919050565b61499082614b60565b810181811067ffffffffffffffff821117156149af576149ae614b1d565b5b80604052505050565b60006149c3826148df565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156149f6576149f5614a32565b5b600182019050919050565b6000614a0c826148df565b9150614a17836148df565b925082614a2757614a26614a61565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008201527f74206f6620626f756e6473000000000000000000000000000000000000000000602082015250565b7f417070204944206d757374206578697374000000000000000000000000000000600082015250565b7f4d757374206265206120646576656c6f70657220746f2063726561746520616e60008201527f2061707000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b7f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008201527f6578697374656e7420746f6b656e000000000000000000000000000000000000602082015250565b7f4d75737420626520616e2061646d696e20746f20776974686472617700000000600082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f596f75206d75737420626520746865206f776e6572206f66207468697320617060008201527f7000000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524337323155524953746f726167653a2055524920717565727920666f722060008201527f6e6f6e6578697374656e7420746f6b656e000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008201527f73206e6f74206f776e0000000000000000000000000000000000000000000000602082015250565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b7f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008201527f7574206f6620626f756e64730000000000000000000000000000000000000000602082015250565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6152508161486b565b811461525b57600080fd5b50565b6152678161487d565b811461527257600080fd5b50565b61527e81614889565b811461528957600080fd5b50565b61529581614893565b81146152a057600080fd5b50565b6152ac816148df565b81146152b757600080fd5b5056fea26469706673582212206d1e1f96a7981ff2283155936d935258895e739fa6191f3ee5d4c71aebe1597c64736f6c63430008060033\";\nvar linkReferences = {\n};\nvar deployedLinkReferences = {\n};\nvar abi$1 = {\n\t_format: _format,\n\tcontractName: contractName,\n\tsourceName: sourceName,\n\tabi: abi,\n\tbytecode: bytecode,\n\tdeployedBytecode: deployedBytecode,\n\tlinkReferences: linkReferences,\n\tdeployedLinkReferences: deployedLinkReferences\n};\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nfunction getCjsExportFromNamespace (n) {\n\treturn n && n['default'] || n;\n}\n\nvar _nodeResolve_empty = {};\n\nvar _nodeResolve_empty$1 = {\n  __proto__: null,\n  'default': _nodeResolve_empty\n};\n\nvar require$$0 = getCjsExportFromNamespace(_nodeResolve_empty$1);\n\nvar bn = createCommonjsModule(function (module) {\n(function (module, exports) {\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require$$0.Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) ; else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})( module, commonjsGlobal);\n});\n\nconst version = \"logger/5.4.0\";\n//# sourceMappingURL=_version.js.map\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nvar ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficien funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\nclass Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            try {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key]));\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map\n\nconst version$1 = \"bytes/5.4.0\";\n//# sourceMappingURL=_version.js.map\n\nconst logger = new Logger(version$1);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nfunction isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nfunction isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (value.length == null) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (typeof (v) !== \"number\" || v < 0 || v >= 256 || (v % 1)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nfunction concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nfunction stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nfunction zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nfunction isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nfunction hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (typeof (value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) {\n            return (\"0x0\" + value);\n        }\n        return \"0x\" + value;\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nfunction hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nfunction hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nfunction hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nfunction hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nfunction hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nfunction hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nfunction splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0\n    };\n    if (isBytesLike(signature)) {\n        const bytes = arrayify(signature);\n        if (bytes.length !== 65) {\n            logger.throwArgumentError(\"invalid signature string; must be 65 bytes\", \"signature\", signature);\n        }\n        // Get the r, s and v\n        result.r = hexlify(bytes.slice(0, 32));\n        result.s = hexlify(bytes.slice(32, 64));\n        result.v = bytes[64];\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else if (result.recoveryParam !== (1 - (result.v % 2))) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=index.js.map\n\nconst version$2 = \"bignumber/5.4.1\";\n//# sourceMappingURL=_version.js.map\n\nvar BN = bn.BN;\nconst logger$1 = new Logger(version$2);\nconst _constructorGuard = {};\nconst MAX_SAFE = 0x1fffffffffffff;\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\nclass BigNumber {\n    constructor(constructorGuard, hex) {\n        logger$1.checkNew(new.target, BigNumber);\n        if (constructorGuard !== _constructorGuard) {\n            logger$1.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n        this._hex = hex;\n        this._isBigNumber = true;\n        Object.freeze(this);\n    }\n    fromTwos(value) {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n    toTwos(value) {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n    abs() {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n    add(other) {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n    sub(other) {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n    div(other) {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division by zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n    mul(other) {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n    mod(other) {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"cannot modulo negative values\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n    pow(other) {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"cannot raise to negative values\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n    and(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'and' negative values\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n    or(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'or' negative values\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n    xor(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'xor' negative values\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n    mask(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot mask negative values\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n    shl(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot shift negative values\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n    shr(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot shift negative values\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n    eq(other) {\n        return toBN(this).eq(toBN(other));\n    }\n    lt(other) {\n        return toBN(this).lt(toBN(other));\n    }\n    lte(other) {\n        return toBN(this).lte(toBN(other));\n    }\n    gt(other) {\n        return toBN(this).gt(toBN(other));\n    }\n    gte(other) {\n        return toBN(this).gte(toBN(other));\n    }\n    isNegative() {\n        return (this._hex[0] === \"-\");\n    }\n    isZero() {\n        return toBN(this).isZero();\n    }\n    toNumber() {\n        try {\n            return toBN(this).toNumber();\n        }\n        catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n    toBigInt() {\n        try {\n            return BigInt(this.toString());\n        }\n        catch (e) { }\n        return logger$1.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n    toString() {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger$1.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            }\n            else if (arguments[0] === 16) {\n                logger$1.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n            }\n            else {\n                logger$1.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n            }\n        }\n        return toBN(this).toString(10);\n    }\n    toHexString() {\n        return this._hex;\n    }\n    toJSON(key) {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n    static from(value) {\n        if (value instanceof BigNumber) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n            return logger$1.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n        if (typeof (value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n            return BigNumber.from(String(value));\n        }\n        const anyValue = value;\n        if (typeof (anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n        if (anyValue) {\n            // Hexable interface (takes piority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof (hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n            }\n            else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n                if (typeof (hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n        return logger$1.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n    static isBigNumber(value) {\n        return !!(value && value._isBigNumber);\n    }\n}\n// Normalize the hex string\nfunction toHex(value) {\n    // For BN, call on the hex string\n    if (typeof (value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n        // Cannot have mulitple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") {\n            logger$1.throwArgumentError(\"invalid hex\", \"value\", value);\n        }\n        // Call toHex on the positive component\n        value = toHex(value);\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") {\n            return value;\n        }\n        // Negate the value\n        return \"-\" + value;\n    }\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    // Normalize zero\n    if (value === \"0x\") {\n        return \"0x00\";\n    }\n    // Make the string even length\n    if (value.length % 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n    return value;\n}\nfunction toBigNumber(value) {\n    return BigNumber.from(toHex(value));\n}\nfunction toBN(value) {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\nfunction throwFault(fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value != null) {\n        params.value = value;\n    }\n    return logger$1.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n// value should have no prefix\nfunction _base36To16(value) {\n    return (new BN(value, 36)).toString(16);\n}\n//# sourceMappingURL=bignumber.js.map\n\nconst version$3 = \"properties/5.4.0\";\n//# sourceMappingURL=_version.js.map\n\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst logger$2 = new Logger(version$3);\nfunction defineReadOnly(object, name, value) {\n    Object.defineProperty(object, name, {\n        enumerable: true,\n        value: value,\n        writable: false,\n    });\n}\n// Crawl up the constructor chain to find a static method\nfunction getStatic(ctor, key) {\n    for (let i = 0; i < 32; i++) {\n        if (ctor[key]) {\n            return ctor[key];\n        }\n        if (!ctor.prototype || typeof (ctor.prototype) !== \"object\") {\n            break;\n        }\n        ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n    }\n    return null;\n}\nfunction resolveProperties(object) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const promises = Object.keys(object).map((key) => {\n            const value = object[key];\n            return Promise.resolve(value).then((v) => ({ key: key, value: v }));\n        });\n        const results = yield Promise.all(promises);\n        return results.reduce((accum, result) => {\n            accum[(result.key)] = result.value;\n            return accum;\n        }, {});\n    });\n}\nfunction checkProperties(object, properties) {\n    if (!object || typeof (object) !== \"object\") {\n        logger$2.throwArgumentError(\"invalid object\", \"object\", object);\n    }\n    Object.keys(object).forEach((key) => {\n        if (!properties[key]) {\n            logger$2.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n        }\n    });\n}\nfunction shallowCopy(object) {\n    const result = {};\n    for (const key in object) {\n        result[key] = object[key];\n    }\n    return result;\n}\nconst opaque = { bigint: true, boolean: true, \"function\": true, number: true, string: true };\nfunction _isFrozen(object) {\n    // Opaque objects are not mutable, so safe to copy by assignment\n    if (object === undefined || object === null || opaque[typeof (object)]) {\n        return true;\n    }\n    if (Array.isArray(object) || typeof (object) === \"object\") {\n        if (!Object.isFrozen(object)) {\n            return false;\n        }\n        const keys = Object.keys(object);\n        for (let i = 0; i < keys.length; i++) {\n            if (!_isFrozen(object[keys[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return logger$2.throwArgumentError(`Cannot deepCopy ${typeof (object)}`, \"object\", object);\n}\n// Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\nfunction _deepCopy(object) {\n    if (_isFrozen(object)) {\n        return object;\n    }\n    // Arrays are mutable, so we need to create a copy\n    if (Array.isArray(object)) {\n        return Object.freeze(object.map((item) => deepCopy(item)));\n    }\n    if (typeof (object) === \"object\") {\n        const result = {};\n        for (const key in object) {\n            const value = object[key];\n            if (value === undefined) {\n                continue;\n            }\n            defineReadOnly(result, key, deepCopy(value));\n        }\n        return result;\n    }\n    return logger$2.throwArgumentError(`Cannot deepCopy ${typeof (object)}`, \"object\", object);\n}\nfunction deepCopy(object) {\n    return _deepCopy(object);\n}\nclass Description {\n    constructor(info) {\n        for (const key in info) {\n            this[key] = deepCopy(info[key]);\n        }\n    }\n}\n//# sourceMappingURL=index.js.map\n\nvar sha3 = createCommonjsModule(function (module) {\n/**\r\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\r\n *\r\n * @version 0.5.7\r\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\r\n * @copyright Chen, Yi-Cyuan 2015-2016\r\n * @license MIT\r\n */\r\n/*jslint bitwise: true */\r\n(function () {\r\n\r\n  var root = typeof window === 'object' ? window : {};\r\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\r\n  if (NODE_JS) {\r\n    root = commonjsGlobal;\r\n  }\r\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && 'object' === 'object' && module.exports;\r\n  var HEX_CHARS = '0123456789abcdef'.split('');\r\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\r\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\r\n  var PADDING = [6, 1536, 393216, 100663296];\r\n  var SHIFT = [0, 8, 16, 24];\r\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\r\n            0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\r\n            2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\r\n            2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\r\n            2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\r\n  var BITS = [224, 256, 384, 512];\r\n  var SHAKE_BITS = [128, 256];\r\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array'];\r\n\r\n  var createOutputMethod = function (bits, padding, outputType) {\r\n    return function (message) {\r\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\r\n    };\r\n  };\r\n\r\n  var createShakeOutputMethod = function (bits, padding, outputType) {\r\n    return function (message, outputBits) {\r\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\r\n    };\r\n  };\r\n\r\n  var createMethod = function (bits, padding) {\r\n    var method = createOutputMethod(bits, padding, 'hex');\r\n    method.create = function () {\r\n      return new Keccak(bits, padding, bits);\r\n    };\r\n    method.update = function (message) {\r\n      return method.create().update(message);\r\n    };\r\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\r\n      var type = OUTPUT_TYPES[i];\r\n      method[type] = createOutputMethod(bits, padding, type);\r\n    }\r\n    return method;\r\n  };\r\n\r\n  var createShakeMethod = function (bits, padding) {\r\n    var method = createShakeOutputMethod(bits, padding, 'hex');\r\n    method.create = function (outputBits) {\r\n      return new Keccak(bits, padding, outputBits);\r\n    };\r\n    method.update = function (message, outputBits) {\r\n      return method.create(outputBits).update(message);\r\n    };\r\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\r\n      var type = OUTPUT_TYPES[i];\r\n      method[type] = createShakeOutputMethod(bits, padding, type);\r\n    }\r\n    return method;\r\n  };\r\n\r\n  var algorithms = [\r\n    {name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod},\r\n    {name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod},\r\n    {name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod}\r\n  ];\r\n\r\n  var methods = {}, methodNames = [];\r\n\r\n  for (var i = 0; i < algorithms.length; ++i) {\r\n    var algorithm = algorithms[i];\r\n    var bits  = algorithm.bits;\r\n    for (var j = 0; j < bits.length; ++j) {\r\n      var methodName = algorithm.name +'_' + bits[j];\r\n      methodNames.push(methodName);\r\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\r\n    }\r\n  }\r\n\r\n  function Keccak(bits, padding, outputBits) {\r\n    this.blocks = [];\r\n    this.s = [];\r\n    this.padding = padding;\r\n    this.outputBits = outputBits;\r\n    this.reset = true;\r\n    this.block = 0;\r\n    this.start = 0;\r\n    this.blockCount = (1600 - (bits << 1)) >> 5;\r\n    this.byteCount = this.blockCount << 2;\r\n    this.outputBlocks = outputBits >> 5;\r\n    this.extraBytes = (outputBits & 31) >> 3;\r\n\r\n    for (var i = 0; i < 50; ++i) {\r\n      this.s[i] = 0;\r\n    }\r\n  }\r\n\r\n  Keccak.prototype.update = function (message) {\r\n    var notString = typeof message !== 'string';\r\n    if (notString && message.constructor === ArrayBuffer) {\r\n      message = new Uint8Array(message);\r\n    }\r\n    var length = message.length, blocks = this.blocks, byteCount = this.byteCount,\r\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\r\n\r\n    while (index < length) {\r\n      if (this.reset) {\r\n        this.reset = false;\r\n        blocks[0] = this.block;\r\n        for (i = 1; i < blockCount + 1; ++i) {\r\n          blocks[i] = 0;\r\n        }\r\n      }\r\n      if (notString) {\r\n        for (i = this.start; index < length && i < byteCount; ++index) {\r\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\r\n        }\r\n      } else {\r\n        for (i = this.start; index < length && i < byteCount; ++index) {\r\n          code = message.charCodeAt(index);\r\n          if (code < 0x80) {\r\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\r\n          } else if (code < 0x800) {\r\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n          } else if (code < 0xd800 || code >= 0xe000) {\r\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n          } else {\r\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\r\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n          }\r\n        }\r\n      }\r\n      this.lastByteIndex = i;\r\n      if (i >= byteCount) {\r\n        this.start = i - byteCount;\r\n        this.block = blocks[blockCount];\r\n        for (i = 0; i < blockCount; ++i) {\r\n          s[i] ^= blocks[i];\r\n        }\r\n        f(s);\r\n        this.reset = true;\r\n      } else {\r\n        this.start = i;\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  Keccak.prototype.finalize = function () {\r\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\r\n    blocks[i >> 2] |= this.padding[i & 3];\r\n    if (this.lastByteIndex === this.byteCount) {\r\n      blocks[0] = blocks[blockCount];\r\n      for (i = 1; i < blockCount + 1; ++i) {\r\n        blocks[i] = 0;\r\n      }\r\n    }\r\n    blocks[blockCount - 1] |= 0x80000000;\r\n    for (i = 0; i < blockCount; ++i) {\r\n      s[i] ^= blocks[i];\r\n    }\r\n    f(s);\r\n  };\r\n\r\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\r\n    this.finalize();\r\n\r\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\r\n        extraBytes = this.extraBytes, i = 0, j = 0;\r\n    var hex = '', block;\r\n    while (j < outputBlocks) {\r\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\r\n        block = s[i];\r\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\r\n               HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\r\n               HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\r\n               HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\r\n      }\r\n      if (j % blockCount === 0) {\r\n        f(s);\r\n        i = 0;\r\n      }\r\n    }\r\n    if (extraBytes) {\r\n      block = s[i];\r\n      if (extraBytes > 0) {\r\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\r\n      }\r\n      if (extraBytes > 1) {\r\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\r\n      }\r\n      if (extraBytes > 2) {\r\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\r\n      }\r\n    }\r\n    return hex;\r\n  };\r\n\r\n  Keccak.prototype.arrayBuffer = function () {\r\n    this.finalize();\r\n\r\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\r\n        extraBytes = this.extraBytes, i = 0, j = 0;\r\n    var bytes = this.outputBits >> 3;\r\n    var buffer;\r\n    if (extraBytes) {\r\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\r\n    } else {\r\n      buffer = new ArrayBuffer(bytes);\r\n    }\r\n    var array = new Uint32Array(buffer);\r\n    while (j < outputBlocks) {\r\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\r\n        array[j] = s[i];\r\n      }\r\n      if (j % blockCount === 0) {\r\n        f(s);\r\n      }\r\n    }\r\n    if (extraBytes) {\r\n      array[i] = s[i];\r\n      buffer = buffer.slice(0, bytes);\r\n    }\r\n    return buffer;\r\n  };\r\n\r\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\r\n\r\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\r\n    this.finalize();\r\n\r\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\r\n        extraBytes = this.extraBytes, i = 0, j = 0;\r\n    var array = [], offset, block;\r\n    while (j < outputBlocks) {\r\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\r\n        offset = j << 2;\r\n        block = s[i];\r\n        array[offset] = block & 0xFF;\r\n        array[offset + 1] = (block >> 8) & 0xFF;\r\n        array[offset + 2] = (block >> 16) & 0xFF;\r\n        array[offset + 3] = (block >> 24) & 0xFF;\r\n      }\r\n      if (j % blockCount === 0) {\r\n        f(s);\r\n      }\r\n    }\r\n    if (extraBytes) {\r\n      offset = j << 2;\r\n      block = s[i];\r\n      if (extraBytes > 0) {\r\n        array[offset] = block & 0xFF;\r\n      }\r\n      if (extraBytes > 1) {\r\n        array[offset + 1] = (block >> 8) & 0xFF;\r\n      }\r\n      if (extraBytes > 2) {\r\n        array[offset + 2] = (block >> 16) & 0xFF;\r\n      }\r\n    }\r\n    return array;\r\n  };\r\n\r\n  var f = function (s) {\r\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\r\n        b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\r\n        b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\r\n        b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\r\n    for (n = 0; n < 48; n += 2) {\r\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\r\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\r\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\r\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\r\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\r\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\r\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\r\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\r\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\r\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\r\n\r\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\r\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\r\n      s[0] ^= h;\r\n      s[1] ^= l;\r\n      s[10] ^= h;\r\n      s[11] ^= l;\r\n      s[20] ^= h;\r\n      s[21] ^= l;\r\n      s[30] ^= h;\r\n      s[31] ^= l;\r\n      s[40] ^= h;\r\n      s[41] ^= l;\r\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\r\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\r\n      s[2] ^= h;\r\n      s[3] ^= l;\r\n      s[12] ^= h;\r\n      s[13] ^= l;\r\n      s[22] ^= h;\r\n      s[23] ^= l;\r\n      s[32] ^= h;\r\n      s[33] ^= l;\r\n      s[42] ^= h;\r\n      s[43] ^= l;\r\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\r\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\r\n      s[4] ^= h;\r\n      s[5] ^= l;\r\n      s[14] ^= h;\r\n      s[15] ^= l;\r\n      s[24] ^= h;\r\n      s[25] ^= l;\r\n      s[34] ^= h;\r\n      s[35] ^= l;\r\n      s[44] ^= h;\r\n      s[45] ^= l;\r\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\r\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\r\n      s[6] ^= h;\r\n      s[7] ^= l;\r\n      s[16] ^= h;\r\n      s[17] ^= l;\r\n      s[26] ^= h;\r\n      s[27] ^= l;\r\n      s[36] ^= h;\r\n      s[37] ^= l;\r\n      s[46] ^= h;\r\n      s[47] ^= l;\r\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\r\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\r\n      s[8] ^= h;\r\n      s[9] ^= l;\r\n      s[18] ^= h;\r\n      s[19] ^= l;\r\n      s[28] ^= h;\r\n      s[29] ^= l;\r\n      s[38] ^= h;\r\n      s[39] ^= l;\r\n      s[48] ^= h;\r\n      s[49] ^= l;\r\n\r\n      b0 = s[0];\r\n      b1 = s[1];\r\n      b32 = (s[11] << 4) | (s[10] >>> 28);\r\n      b33 = (s[10] << 4) | (s[11] >>> 28);\r\n      b14 = (s[20] << 3) | (s[21] >>> 29);\r\n      b15 = (s[21] << 3) | (s[20] >>> 29);\r\n      b46 = (s[31] << 9) | (s[30] >>> 23);\r\n      b47 = (s[30] << 9) | (s[31] >>> 23);\r\n      b28 = (s[40] << 18) | (s[41] >>> 14);\r\n      b29 = (s[41] << 18) | (s[40] >>> 14);\r\n      b20 = (s[2] << 1) | (s[3] >>> 31);\r\n      b21 = (s[3] << 1) | (s[2] >>> 31);\r\n      b2 = (s[13] << 12) | (s[12] >>> 20);\r\n      b3 = (s[12] << 12) | (s[13] >>> 20);\r\n      b34 = (s[22] << 10) | (s[23] >>> 22);\r\n      b35 = (s[23] << 10) | (s[22] >>> 22);\r\n      b16 = (s[33] << 13) | (s[32] >>> 19);\r\n      b17 = (s[32] << 13) | (s[33] >>> 19);\r\n      b48 = (s[42] << 2) | (s[43] >>> 30);\r\n      b49 = (s[43] << 2) | (s[42] >>> 30);\r\n      b40 = (s[5] << 30) | (s[4] >>> 2);\r\n      b41 = (s[4] << 30) | (s[5] >>> 2);\r\n      b22 = (s[14] << 6) | (s[15] >>> 26);\r\n      b23 = (s[15] << 6) | (s[14] >>> 26);\r\n      b4 = (s[25] << 11) | (s[24] >>> 21);\r\n      b5 = (s[24] << 11) | (s[25] >>> 21);\r\n      b36 = (s[34] << 15) | (s[35] >>> 17);\r\n      b37 = (s[35] << 15) | (s[34] >>> 17);\r\n      b18 = (s[45] << 29) | (s[44] >>> 3);\r\n      b19 = (s[44] << 29) | (s[45] >>> 3);\r\n      b10 = (s[6] << 28) | (s[7] >>> 4);\r\n      b11 = (s[7] << 28) | (s[6] >>> 4);\r\n      b42 = (s[17] << 23) | (s[16] >>> 9);\r\n      b43 = (s[16] << 23) | (s[17] >>> 9);\r\n      b24 = (s[26] << 25) | (s[27] >>> 7);\r\n      b25 = (s[27] << 25) | (s[26] >>> 7);\r\n      b6 = (s[36] << 21) | (s[37] >>> 11);\r\n      b7 = (s[37] << 21) | (s[36] >>> 11);\r\n      b38 = (s[47] << 24) | (s[46] >>> 8);\r\n      b39 = (s[46] << 24) | (s[47] >>> 8);\r\n      b30 = (s[8] << 27) | (s[9] >>> 5);\r\n      b31 = (s[9] << 27) | (s[8] >>> 5);\r\n      b12 = (s[18] << 20) | (s[19] >>> 12);\r\n      b13 = (s[19] << 20) | (s[18] >>> 12);\r\n      b44 = (s[29] << 7) | (s[28] >>> 25);\r\n      b45 = (s[28] << 7) | (s[29] >>> 25);\r\n      b26 = (s[38] << 8) | (s[39] >>> 24);\r\n      b27 = (s[39] << 8) | (s[38] >>> 24);\r\n      b8 = (s[48] << 14) | (s[49] >>> 18);\r\n      b9 = (s[49] << 14) | (s[48] >>> 18);\r\n\r\n      s[0] = b0 ^ (~b2 & b4);\r\n      s[1] = b1 ^ (~b3 & b5);\r\n      s[10] = b10 ^ (~b12 & b14);\r\n      s[11] = b11 ^ (~b13 & b15);\r\n      s[20] = b20 ^ (~b22 & b24);\r\n      s[21] = b21 ^ (~b23 & b25);\r\n      s[30] = b30 ^ (~b32 & b34);\r\n      s[31] = b31 ^ (~b33 & b35);\r\n      s[40] = b40 ^ (~b42 & b44);\r\n      s[41] = b41 ^ (~b43 & b45);\r\n      s[2] = b2 ^ (~b4 & b6);\r\n      s[3] = b3 ^ (~b5 & b7);\r\n      s[12] = b12 ^ (~b14 & b16);\r\n      s[13] = b13 ^ (~b15 & b17);\r\n      s[22] = b22 ^ (~b24 & b26);\r\n      s[23] = b23 ^ (~b25 & b27);\r\n      s[32] = b32 ^ (~b34 & b36);\r\n      s[33] = b33 ^ (~b35 & b37);\r\n      s[42] = b42 ^ (~b44 & b46);\r\n      s[43] = b43 ^ (~b45 & b47);\r\n      s[4] = b4 ^ (~b6 & b8);\r\n      s[5] = b5 ^ (~b7 & b9);\r\n      s[14] = b14 ^ (~b16 & b18);\r\n      s[15] = b15 ^ (~b17 & b19);\r\n      s[24] = b24 ^ (~b26 & b28);\r\n      s[25] = b25 ^ (~b27 & b29);\r\n      s[34] = b34 ^ (~b36 & b38);\r\n      s[35] = b35 ^ (~b37 & b39);\r\n      s[44] = b44 ^ (~b46 & b48);\r\n      s[45] = b45 ^ (~b47 & b49);\r\n      s[6] = b6 ^ (~b8 & b0);\r\n      s[7] = b7 ^ (~b9 & b1);\r\n      s[16] = b16 ^ (~b18 & b10);\r\n      s[17] = b17 ^ (~b19 & b11);\r\n      s[26] = b26 ^ (~b28 & b20);\r\n      s[27] = b27 ^ (~b29 & b21);\r\n      s[36] = b36 ^ (~b38 & b30);\r\n      s[37] = b37 ^ (~b39 & b31);\r\n      s[46] = b46 ^ (~b48 & b40);\r\n      s[47] = b47 ^ (~b49 & b41);\r\n      s[8] = b8 ^ (~b0 & b2);\r\n      s[9] = b9 ^ (~b1 & b3);\r\n      s[18] = b18 ^ (~b10 & b12);\r\n      s[19] = b19 ^ (~b11 & b13);\r\n      s[28] = b28 ^ (~b20 & b22);\r\n      s[29] = b29 ^ (~b21 & b23);\r\n      s[38] = b38 ^ (~b30 & b32);\r\n      s[39] = b39 ^ (~b31 & b33);\r\n      s[48] = b48 ^ (~b40 & b42);\r\n      s[49] = b49 ^ (~b41 & b43);\r\n\r\n      s[0] ^= RC[n];\r\n      s[1] ^= RC[n + 1];\r\n    }\r\n  };\r\n\r\n  if (COMMON_JS) {\r\n    module.exports = methods;\r\n  } else {\r\n    for (var i = 0; i < methodNames.length; ++i) {\r\n      root[methodNames[i]] = methods[methodNames[i]];\r\n    }\r\n  }\r\n})();\n});\n\nfunction keccak256(data) {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n//# sourceMappingURL=index.js.map\n\nconst version$4 = \"rlp/5.4.0\";\n//# sourceMappingURL=_version.js.map\n\nconst logger$3 = new Logger(version$4);\nfunction arrayifyInteger(value) {\n    const result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\nfunction unarrayifyInteger(data, offset, length) {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\nfunction _encode(object) {\n    if (Array.isArray(object)) {\n        let payload = [];\n        object.forEach(function (child) {\n            payload = payload.concat(_encode(child));\n        });\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length);\n            return payload;\n        }\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n        return length.concat(payload);\n    }\n    if (!isBytesLike(object)) {\n        logger$3.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object);\n    }\n    const data = Array.prototype.slice.call(arrayify(object));\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n    }\n    else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n    return length.concat(data);\n}\nfunction encode(object) {\n    return hexlify(_encode(object));\n}\nfunction _decodeChildren(data, offset, childOffset, length) {\n    const result = [];\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n        result.push(decoded.result);\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            logger$3.throwError(\"child data too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n    }\n    return { consumed: (1 + length), result: result };\n}\n// returns { consumed: number, result: Object }\nfunction _decode(data, offset) {\n    if (data.length === 0) {\n        logger$3.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger$3.throwError(\"data short segment too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger$3.throwError(\"data long segment too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n    }\n    else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        if (offset + 1 + length > data.length) {\n            logger$3.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        return _decodeChildren(data, offset, offset + 1, length);\n    }\n    else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger$3.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger$3.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result };\n    }\n    else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        if (offset + 1 + length > data.length) {\n            logger$3.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result };\n    }\n    return { consumed: 1, result: hexlify(data[offset]) };\n}\nfunction decode(data) {\n    const bytes = arrayify(data);\n    const decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        logger$3.throwArgumentError(\"invalid rlp data\", \"data\", data);\n    }\n    return decoded.result;\n}\n//# sourceMappingURL=index.js.map\n\nconst version$5 = \"address/5.4.0\";\n//# sourceMappingURL=_version.js.map\n\nconst logger$4 = new Logger(version$5);\nfunction getChecksumAddress(address) {\n    if (!isHexString(address, 20)) {\n        logger$4.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    address = address.toLowerCase();\n    const chars = address.substring(2).split(\"\");\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n    const hashed = arrayify(keccak256(expanded));\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n    return \"0x\" + chars.join(\"\");\n}\n// Shims for environments that are missing some required constants and functions\nconst MAX_SAFE_INTEGER = 0x1fffffffffffff;\nfunction log10(x) {\n    if (Math.log10) {\n        return Math.log10(x);\n    }\n    return Math.log(x) / Math.LN10;\n}\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n// Create lookup table\nconst ibanLookup = {};\nfor (let i = 0; i < 10; i++) {\n    ibanLookup[String(i)] = String(i);\n}\nfor (let i = 0; i < 26; i++) {\n    ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n}\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\nfunction ibanChecksum(address) {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits) {\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) {\n        checksum = \"0\" + checksum;\n    }\n    return checksum;\n}\nfunction getAddress(address) {\n    let result = null;\n    if (typeof (address) !== \"string\") {\n        logger$4.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") {\n            address = \"0x\" + address;\n        }\n        result = getChecksumAddress(address);\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger$4.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n        // Maybe ICAP? (we only support direct mode)\n    }\n    else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger$4.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n        result = _base36To16(address.substring(4));\n        while (result.length < 40) {\n            result = \"0\" + result;\n        }\n        result = getChecksumAddress(\"0x\" + result);\n    }\n    else {\n        logger$4.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    return result;\n}\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nfunction getContractAddress(transaction) {\n    let from = null;\n    try {\n        from = getAddress(transaction.from);\n    }\n    catch (error) {\n        logger$4.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n    }\n    const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n    return getAddress(hexDataSlice(keccak256(encode([from, nonce])), 12));\n}\n//# sourceMappingURL=index.js.map\n\nconst AddressZero = \"0x0000000000000000000000000000000000000000\";\n//# sourceMappingURL=addresses.js.map\n\nconst Zero = ( /*#__PURE__*/BigNumber.from(0));\n//# sourceMappingURL=bignumbers.js.map\n\nconst HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n//# sourceMappingURL=hashes.js.map\n\nconst version$6 = \"strings/5.4.0\";\n//# sourceMappingURL=_version.js.map\n\nconst logger$5 = new Logger(version$6);\n///////////////////////////////\nvar UnicodeNormalizationForm;\n(function (UnicodeNormalizationForm) {\n    UnicodeNormalizationForm[\"current\"] = \"\";\n    UnicodeNormalizationForm[\"NFC\"] = \"NFC\";\n    UnicodeNormalizationForm[\"NFD\"] = \"NFD\";\n    UnicodeNormalizationForm[\"NFKC\"] = \"NFKC\";\n    UnicodeNormalizationForm[\"NFKD\"] = \"NFKD\";\n})(UnicodeNormalizationForm || (UnicodeNormalizationForm = {}));\nvar Utf8ErrorReason;\n(function (Utf8ErrorReason) {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"UNEXPECTED_CONTINUE\"] = \"unexpected continuation byte\";\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"BAD_PREFIX\"] = \"bad codepoint prefix\";\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"OVERRUN\"] = \"string overrun\";\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    Utf8ErrorReason[\"MISSING_CONTINUE\"] = \"missing continuation byte\";\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    Utf8ErrorReason[\"OUT_OF_RANGE\"] = \"out of UTF-8 range\";\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    Utf8ErrorReason[\"UTF16_SURROGATE\"] = \"UTF-16 surrogate\";\n    // The string is an overlong reperesentation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    Utf8ErrorReason[\"OVERLONG\"] = \"overlong representation\";\n})(Utf8ErrorReason || (Utf8ErrorReason = {}));\nfunction errorFunc(reason, offset, bytes, output, badCodepoint) {\n    return logger$5.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`, \"bytes\", bytes);\n}\nfunction ignoreFunc(reason, offset, bytes, output, badCodepoint) {\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) {\n                break;\n            }\n            i++;\n        }\n        return i;\n    }\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n    // Nothing to skip\n    return 0;\n}\nfunction replaceFunc(reason, offset, bytes, output, badCodepoint) {\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n    // Put the replacement character into the output\n    output.push(0xfffd);\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes);\n}\n// Common error handing strategies\nconst Utf8ErrorFuncs = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes, onError) {\n    if (onError == null) {\n        onError = Utf8ErrorFuncs.error;\n    }\n    bytes = arrayify(bytes);\n    const result = [];\n    let i = 0;\n    // Invalid bytes are ignored\n    while (i < bytes.length) {\n        const c = bytes[i++];\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n            // 1110 xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n            // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n        }\n        else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            }\n            else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            }\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n        // See above loop for invalid contimuation byte\n        if (res === null) {\n            continue;\n        }\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        result.push(res);\n    }\n    return result;\n}\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nfunction toUtf8Bytes(str, form = UnicodeNormalizationForm.current) {\n    if (form != UnicodeNormalizationForm.current) {\n        logger$5.checkNormalize();\n        str = str.normalize(form);\n    }\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n        if (c < 0x80) {\n            result.push(c);\n        }\n        else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n        }\n        else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n        }\n        else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n    return arrayify(result);\n}\nfunction _toUtf8String(codePoints) {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode((((codePoint >> 10) & 0x3ff) + 0xd800), ((codePoint & 0x3ff) + 0xdc00));\n    }).join(\"\");\n}\nfunction toUtf8String(bytes, onError) {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\nfunction toUtf8CodePoints(str, form = UnicodeNormalizationForm.current) {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n//# sourceMappingURL=utf8.js.map\n\nfunction bytes2(data) {\n    if ((data.length % 4) !== 0) {\n        throw new Error(\"bad data\");\n    }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\nfunction createTable(data, func) {\n    if (!func) {\n        func = function (value) { return [parseInt(value, 16)]; };\n    }\n    let lo = 0;\n    let result = {};\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n    return result;\n}\nfunction createRangeTable(data) {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        }\n        else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\nfunction matchMap(value, ranges) {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) {\n                continue;\n            }\n            return range;\n        }\n    }\n    return null;\n}\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\nconst Table_B_2_ranges = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [23], l: 127 },\n    { h: 54, s: 1, e: [48], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [2, 6, 8], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [18, 24, 66], l: 19, d: 2 },\n    { h: 26, s: 32, e: [17], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [38], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [1, 4, 5, 7, 8, 11, 12, 17], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [2, 7, 8, 17], l: 52 },\n    { h: 24, s: -120023, e: [2, 7, 13, 15, 16, 17], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [17], l: 56 },\n    { h: 24, s: -119601, e: [17], l: 58 },\n    { h: 24, s: -119659, e: [17], l: 58 },\n    { h: 24, s: -119717, e: [17], l: 58 },\n    { h: 24, s: -119775, e: [17], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\nfunction flatten(values) {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, []);\n}\nfunction _nameprepTableA1(codepoint) {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\nfunction _nameprepTableB2(codepoint) {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) {\n        return [codepoint + range.s];\n    }\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) {\n        return codes;\n    }\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) {\n        return [codepoint + shift[0]];\n    }\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) {\n        return complex;\n    }\n    return null;\n}\nfunction _nameprepTableC(codepoint) {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\nfunction nameprep(value) {\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {\n        return value.toLowerCase();\n    }\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) {\n            return [];\n        }\n        if (code >= 0xfe00 && code <= 0xfe0f) {\n            return [];\n        }\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) {\n            return codesTableB2;\n        }\n        // No Substitution\n        return [code];\n    }));\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n    // IDNA extras\n    let name = _toUtf8String(codes);\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n    // IDNA: 4.2.4\n    if (name.length > 63) {\n        throw new Error(\"too long\");\n    }\n    return name;\n}\n//# sourceMappingURL=idna.js.map\n\nfunction id(text) {\n    return keccak256(toUtf8Bytes(text));\n}\n//# sourceMappingURL=id.js.map\n\nconst version$7 = \"hash/5.4.0\";\n//# sourceMappingURL=_version.js.map\n\nconst logger$6 = new Logger(version$7);\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\nconst Partition = new RegExp(\"^((.*)\\\\.)?([^.]+)$\");\nfunction namehash(name) {\n    /* istanbul ignore if */\n    if (typeof (name) !== \"string\") {\n        logger$6.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n    let current = name;\n    let result = Zeros;\n    while (current.length) {\n        const partition = current.match(Partition);\n        if (partition == null || partition[2] === \"\") {\n            logger$6.throwArgumentError(\"invalid ENS address; missing component\", \"name\", name);\n        }\n        const label = toUtf8Bytes(nameprep(partition[3]));\n        result = keccak256(concat([result, keccak256(label)]));\n        current = partition[2] || \"\";\n    }\n    return hexlify(result);\n}\n//# sourceMappingURL=namehash.js.map\n\nvar __awaiter$1 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst logger$7 = new Logger(version$7);\nconst padding = new Uint8Array(32);\npadding.fill(0);\nconst NegativeOne = BigNumber.from(-1);\nconst Zero$1 = BigNumber.from(0);\nconst One = BigNumber.from(1);\nconst MaxUint256 = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nfunction hexPadRight(value) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32;\n    if (padOffset) {\n        return hexConcat([bytes, padding.slice(padOffset)]);\n    }\n    return hexlify(bytes);\n}\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero$1.toHexString(), 32);\nconst domainFieldTypes = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\nconst domainFieldNames = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\nfunction checkString(key) {\n    return function (value) {\n        if (typeof (value) !== \"string\") {\n            logger$7.throwArgumentError(`invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);\n        }\n        return value;\n    };\n}\nconst domainChecks = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function (value) {\n        try {\n            return BigNumber.from(value).toString();\n        }\n        catch (error) { }\n        return logger$7.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function (value) {\n        try {\n            return getAddress(value).toLowerCase();\n        }\n        catch (error) { }\n        return logger$7.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function (value) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) {\n                throw new Error(\"bad length\");\n            }\n            return hexlify(bytes);\n        }\n        catch (error) { }\n        return logger$7.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n};\nfunction getBaseEncoder(type) {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger$7.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1) : width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne) : Zero$1;\n            return function (value) {\n                const v = BigNumber.from(value);\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger$7.throwArgumentError(`value out-of-bounds for ${type}`, \"value\", value);\n                }\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger$7.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n            return function (value) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger$7.throwArgumentError(`invalid length for ${type}`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n    switch (type) {\n        case \"address\": return function (value) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function (value) {\n            return ((!value) ? hexFalse : hexTrue);\n        };\n        case \"bytes\": return function (value) {\n            return keccak256(value);\n        };\n        case \"string\": return function (value) {\n            return id(value);\n        };\n    }\n    return null;\n}\nfunction encodeType(name, fields) {\n    return `${name}(${fields.map(({ name, type }) => (type + \" \" + name)).join(\",\")})`;\n}\nclass TypedDataEncoder {\n    constructor(types) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n        defineReadOnly(this, \"_encoderCache\", {});\n        defineReadOnly(this, \"_types\", {});\n        // Link struct types to their direct child structs\n        const links = {};\n        // Link structs to structs which contain them as a child\n        const parents = {};\n        // Link all subtypes within a given struct\n        const subtypes = {};\n        Object.keys(types).forEach((type) => {\n            links[type] = {};\n            parents[type] = [];\n            subtypes[type] = {};\n        });\n        for (const name in types) {\n            const uniqueNames = {};\n            types[name].forEach((field) => {\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger$7.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger$7.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) {\n                    return;\n                }\n                if (!parents[baseType]) {\n                    logger$7.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n        if (primaryTypes.length === 0) {\n            logger$7.throwArgumentError(\"missing primary type\", \"types\", types);\n        }\n        else if (primaryTypes.length > 1) {\n            logger$7.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map((t) => (JSON.stringify(t))).join(\", \")}`, \"types\", types);\n        }\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n        // Check for circular type references\n        function checkCircular(type, found) {\n            if (found[type]) {\n                logger$7.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`, \"types\", types);\n            }\n            found[type] = true;\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) {\n                    return;\n                }\n                // Recursively check children\n                checkCircular(child, found);\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n            delete found[type];\n        }\n        checkCircular(this.primaryType, {});\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n    getEncoder(type) {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n    _getEncoder(type) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return encoder;\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value) => {\n                if (length >= 0 && value.length !== length) {\n                    logger$7.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n                return keccak256(hexConcat(result));\n            };\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) {\n                        return keccak256(result);\n                    }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            };\n        }\n        return logger$7.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n    }\n    encodeType(name) {\n        const result = this._types[name];\n        if (!result) {\n            logger$7.throwArgumentError(`unknown type: ${JSON.stringify(name)}`, \"name\", name);\n        }\n        return result;\n    }\n    encodeData(type, value) {\n        return this.getEncoder(type)(value);\n    }\n    hashStruct(name, value) {\n        return keccak256(this.encodeData(name, value));\n    }\n    encode(value) {\n        return this.encodeData(this.primaryType, value);\n    }\n    hash(value) {\n        return this.hashStruct(this.primaryType, value);\n    }\n    _visit(type, value, callback) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return callback(type, value);\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger$7.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v) => this._visit(subtype, v, callback));\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, {});\n        }\n        return logger$7.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n    }\n    visit(value, callback) {\n        return this._visit(this.primaryType, value, callback);\n    }\n    static from(types) {\n        return new TypedDataEncoder(types);\n    }\n    static getPrimaryType(types) {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n    static hashStruct(name, types, value) {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n    static hashDomain(domain) {\n        const domainFields = [];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger$7.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n    static encode(domain, types, value) {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n    static hash(domain, types, value) {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n    // Replaces all address types with ENS names with their looked up address\n    static resolveNames(domain, types, value, resolveName) {\n        return __awaiter$1(this, void 0, void 0, function* () {\n            // Make a copy to isolate it from the object passed in\n            domain = shallowCopy(domain);\n            // Look up all ENS names\n            const ensCache = {};\n            // Do we need to look up the domain's verifyingContract?\n            if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n                ensCache[domain.verifyingContract] = \"0x\";\n            }\n            // We are going to use the encoder to visit all the base values\n            const encoder = TypedDataEncoder.from(types);\n            // Get a list of all the addresses\n            encoder.visit(value, (type, value) => {\n                if (type === \"address\" && !isHexString(value, 20)) {\n                    ensCache[value] = \"0x\";\n                }\n                return value;\n            });\n            // Lookup each name\n            for (const name in ensCache) {\n                ensCache[name] = yield resolveName(name);\n            }\n            // Replace the domain verifyingContract if needed\n            if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n                domain.verifyingContract = ensCache[domain.verifyingContract];\n            }\n            // Replace all ENS names with their address\n            value = encoder.visit(value, (type, value) => {\n                if (type === \"address\" && ensCache[value]) {\n                    return ensCache[value];\n                }\n                return value;\n            });\n            return { domain, value };\n        });\n    }\n    static getPayload(domain, types, value) {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n        // Derive the EIP712Domain Struct reference type\n        const domainValues = {};\n        const domainTypes = [];\n        domainFieldNames.forEach((name) => {\n            const value = domain[name];\n            if (value == null) {\n                return;\n            }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n        const encoder = TypedDataEncoder.from(types);\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger$7.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        }\n        else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n        // Validate the data structures and types\n        encoder.encode(value);\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type, value) => {\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof (value) !== \"string\") {\n                            logger$7.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n                return logger$7.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n//# sourceMappingURL=typed-data.js.map\n\nconst version$8 = \"abstract-provider/5.4.1\";\n//# sourceMappingURL=_version.js.map\n\nvar __awaiter$2 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst logger$8 = new Logger(version$8);\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\nclass ForkEvent extends Description {\n    static isForkEvent(value) {\n        return !!(value && value._isForkEvent);\n    }\n}\n///////////////////////////////\n// Exported Abstracts\nclass Provider {\n    constructor() {\n        logger$8.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n    getFeeData() {\n        return __awaiter$2(this, void 0, void 0, function* () {\n            const { block, gasPrice } = yield resolveProperties({\n                block: this.getBlock(\"latest\"),\n                gasPrice: this.getGasPrice().catch((error) => {\n                    // @TODO: Why is this now failing on Calaveras?\n                    //console.log(error);\n                    return null;\n                })\n            });\n            let maxFeePerGas = null, maxPriorityFeePerGas = null;\n            if (block && block.baseFeePerGas) {\n                // We may want to compute this more accurately in the future,\n                // using the formula \"check if the base fee is correct\".\n                // See: https://eips.ethereum.org/EIPS/eip-1559\n                maxPriorityFeePerGas = BigNumber.from(\"2500000000\");\n                maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n            }\n            return { maxFeePerGas, maxPriorityFeePerGas, gasPrice };\n        });\n    }\n    // Alias for \"on\"\n    addListener(eventName, listener) {\n        return this.on(eventName, listener);\n    }\n    // Alias for \"off\"\n    removeListener(eventName, listener) {\n        return this.off(eventName, listener);\n    }\n    static isProvider(value) {\n        return !!(value && value._isProvider);\n    }\n}\n//# sourceMappingURL=index.js.map\n\nconst version$9 = \"abstract-signer/5.4.1\";\n//# sourceMappingURL=_version.js.map\n\nvar __awaiter$3 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst logger$9 = new Logger(version$9);\nconst allowedTransactionKeys = [\n    \"accessList\", \"chainId\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"\n];\nconst forwardErrors = [\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n];\nclass Signer {\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        logger$9.checkAbstract(new.target, Signer);\n        defineReadOnly(this, \"_isSigner\", true);\n    }\n    ///////////////////\n    // Sub-classes MAY override these\n    getBalance(blockTag) {\n        return __awaiter$3(this, void 0, void 0, function* () {\n            this._checkProvider(\"getBalance\");\n            return yield this.provider.getBalance(this.getAddress(), blockTag);\n        });\n    }\n    getTransactionCount(blockTag) {\n        return __awaiter$3(this, void 0, void 0, function* () {\n            this._checkProvider(\"getTransactionCount\");\n            return yield this.provider.getTransactionCount(this.getAddress(), blockTag);\n        });\n    }\n    // Populates \"from\" if unspecified, and estimates the gas for the transation\n    estimateGas(transaction) {\n        return __awaiter$3(this, void 0, void 0, function* () {\n            this._checkProvider(\"estimateGas\");\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            return yield this.provider.estimateGas(tx);\n        });\n    }\n    // Populates \"from\" if unspecified, and calls with the transation\n    call(transaction, blockTag) {\n        return __awaiter$3(this, void 0, void 0, function* () {\n            this._checkProvider(\"call\");\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            return yield this.provider.call(tx, blockTag);\n        });\n    }\n    // Populates all fields in a transaction, signs it and sends it to the network\n    sendTransaction(transaction) {\n        return __awaiter$3(this, void 0, void 0, function* () {\n            this._checkProvider(\"sendTransaction\");\n            const tx = yield this.populateTransaction(transaction);\n            const signedTx = yield this.signTransaction(tx);\n            return yield this.provider.sendTransaction(signedTx);\n        });\n    }\n    getChainId() {\n        return __awaiter$3(this, void 0, void 0, function* () {\n            this._checkProvider(\"getChainId\");\n            const network = yield this.provider.getNetwork();\n            return network.chainId;\n        });\n    }\n    getGasPrice() {\n        return __awaiter$3(this, void 0, void 0, function* () {\n            this._checkProvider(\"getGasPrice\");\n            return yield this.provider.getGasPrice();\n        });\n    }\n    getFeeData() {\n        return __awaiter$3(this, void 0, void 0, function* () {\n            this._checkProvider(\"getFeeData\");\n            return yield this.provider.getFeeData();\n        });\n    }\n    resolveName(name) {\n        return __awaiter$3(this, void 0, void 0, function* () {\n            this._checkProvider(\"resolveName\");\n            return yield this.provider.resolveName(name);\n        });\n    }\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction) {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger$9.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n        const tx = shallowCopy(transaction);\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n        }\n        else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                    logger$9.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n        return tx;\n    }\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    //\n    // Notes:\n    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n    populateTransaction(transaction) {\n        return __awaiter$3(this, void 0, void 0, function* () {\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            if (tx.to != null) {\n                tx.to = Promise.resolve(tx.to).then((to) => __awaiter$3(this, void 0, void 0, function* () {\n                    if (to == null) {\n                        return null;\n                    }\n                    const address = yield this.resolveName(to);\n                    if (address == null) {\n                        logger$9.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                    }\n                    return address;\n                }));\n                // Prevent this error from causing an UnhandledPromiseException\n                tx.to.catch((error) => { });\n            }\n            // Do not allow mixing pre-eip-1559 and eip-1559 proerties\n            const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);\n            if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n                logger$9.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n            }\n            else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n                logger$9.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n            }\n            if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {\n                // Fully-formed EIP-1559 transaction (skip getFeeData)\n                tx.type = 2;\n            }\n            else if (tx.type === 0 || tx.type === 1) {\n                // Explicit Legacy or EIP-2930 transaction\n                // Populate missing gasPrice\n                if (tx.gasPrice == null) {\n                    tx.gasPrice = this.getGasPrice();\n                }\n            }\n            else {\n                // We need to get fee data to determine things\n                const feeData = yield this.getFeeData();\n                if (tx.type == null) {\n                    // We need to auto-detect the intended type of this transaction...\n                    if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                        // The network supports EIP-1559!\n                        // Upgrade transaction from null to eip-1559\n                        tx.type = 2;\n                        if (tx.gasPrice != null) {\n                            // Using legacy gasPrice property on an eip-1559 network,\n                            // so use gasPrice as both fee properties\n                            const gasPrice = tx.gasPrice;\n                            delete tx.gasPrice;\n                            tx.maxFeePerGas = gasPrice;\n                            tx.maxPriorityFeePerGas = gasPrice;\n                        }\n                        else {\n                            // Populate missing fee data\n                            if (tx.maxFeePerGas == null) {\n                                tx.maxFeePerGas = feeData.maxFeePerGas;\n                            }\n                            if (tx.maxPriorityFeePerGas == null) {\n                                tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                            }\n                        }\n                    }\n                    else if (feeData.gasPrice != null) {\n                        // Network doesn't support EIP-1559...\n                        // ...but they are trying to use EIP-1559 properties\n                        if (hasEip1559) {\n                            logger$9.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                                operation: \"populateTransaction\"\n                            });\n                        }\n                        // Populate missing fee data\n                        if (tx.gasPrice == null) {\n                            tx.gasPrice = feeData.gasPrice;\n                        }\n                        // Explicitly set untyped transaction to legacy\n                        tx.type = 0;\n                    }\n                    else {\n                        // getFeeData has failed us.\n                        logger$9.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"signer.getFeeData\"\n                        });\n                    }\n                }\n                else if (tx.type === 2) {\n                    // Explicitly using EIP-1559\n                    // Populate missing fee data\n                    if (tx.maxFeePerGas == null) {\n                        tx.maxFeePerGas = feeData.maxFeePerGas;\n                    }\n                    if (tx.maxPriorityFeePerGas == null) {\n                        tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                    }\n                }\n            }\n            if (tx.nonce == null) {\n                tx.nonce = this.getTransactionCount(\"pending\");\n            }\n            if (tx.gasLimit == null) {\n                tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                    if (forwardErrors.indexOf(error.code) >= 0) {\n                        throw error;\n                    }\n                    return logger$9.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                        error: error,\n                        tx: tx\n                    });\n                });\n            }\n            if (tx.chainId == null) {\n                tx.chainId = this.getChainId();\n            }\n            else {\n                tx.chainId = Promise.all([\n                    Promise.resolve(tx.chainId),\n                    this.getChainId()\n                ]).then((results) => {\n                    if (results[1] !== 0 && results[0] !== results[1]) {\n                        logger$9.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                    }\n                    return results[0];\n                });\n            }\n            return yield resolveProperties(tx);\n        });\n    }\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n    _checkProvider(operation) {\n        if (!this.provider) {\n            logger$9.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: (operation || \"_checkProvider\")\n            });\n        }\n    }\n    static isSigner(value) {\n        return !!(value && value._isSigner);\n    }\n}\n//# sourceMappingURL=index.js.map\n\nvar minimalisticAssert = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n\nvar inherits_browser = createCommonjsModule(function (module) {\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n      var TempCtor = function () {};\n      TempCtor.prototype = superCtor.prototype;\n      ctor.prototype = new TempCtor();\n      ctor.prototype.constructor = ctor;\n    }\n  };\n}\n});\n\nvar inherits_1 = inherits_browser;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nvar toArray_1 = toArray;\n\nfunction toHex$1(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nvar toHex_1 = toHex$1;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nvar htonl_1 = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nvar toHex32_1 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nvar zero2_1 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nvar zero8_1 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  minimalisticAssert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nvar join32_1 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nvar split32_1 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nvar rotr32_1 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nvar rotl32_1 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nvar sum32_1 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nvar sum32_3_1 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nvar sum32_4_1 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nvar sum32_5_1 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nvar sum64_1 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nvar sum64_hi_1 = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nvar sum64_lo_1 = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nvar sum64_4_hi_1 = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nvar sum64_4_lo_1 = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nvar sum64_5_hi_1 = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nvar sum64_5_lo_1 = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nvar rotr64_hi_1 = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nvar rotr64_lo_1 = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nvar shr64_hi_1 = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nvar shr64_lo_1 = shr64_lo;\n\nvar utils = {\n\tinherits: inherits_1,\n\ttoArray: toArray_1,\n\ttoHex: toHex_1,\n\thtonl: htonl_1,\n\ttoHex32: toHex32_1,\n\tzero2: zero2_1,\n\tzero8: zero8_1,\n\tjoin32: join32_1,\n\tsplit32: split32_1,\n\trotr32: rotr32_1,\n\trotl32: rotl32_1,\n\tsum32: sum32_1,\n\tsum32_3: sum32_3_1,\n\tsum32_4: sum32_4_1,\n\tsum32_5: sum32_5_1,\n\tsum64: sum64_1,\n\tsum64_hi: sum64_hi_1,\n\tsum64_lo: sum64_lo_1,\n\tsum64_4_hi: sum64_4_hi_1,\n\tsum64_4_lo: sum64_4_lo_1,\n\tsum64_5_hi: sum64_5_hi_1,\n\tsum64_5_lo: sum64_5_lo_1,\n\trotr64_hi: rotr64_hi_1,\n\trotr64_lo: rotr64_lo_1,\n\tshr64_hi: shr64_hi_1,\n\tshr64_lo: shr64_lo_1\n};\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nvar BlockHash_1 = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  minimalisticAssert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n\nvar common = {\n\tBlockHash: BlockHash_1\n};\n\nvar rotr32$1 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nvar ft_1_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nvar ch32_1 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nvar maj32_1 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nvar p32_1 = p32;\n\nfunction s0_256(x) {\n  return rotr32$1(x, 2) ^ rotr32$1(x, 13) ^ rotr32$1(x, 22);\n}\nvar s0_256_1 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32$1(x, 6) ^ rotr32$1(x, 11) ^ rotr32$1(x, 25);\n}\nvar s1_256_1 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32$1(x, 7) ^ rotr32$1(x, 18) ^ (x >>> 3);\n}\nvar g0_256_1 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32$1(x, 17) ^ rotr32$1(x, 19) ^ (x >>> 10);\n}\nvar g1_256_1 = g1_256;\n\nvar common$1 = {\n\tft_1: ft_1_1,\n\tch32: ch32_1,\n\tmaj32: maj32_1,\n\tp32: p32_1,\n\ts0_256: s0_256_1,\n\ts1_256: s1_256_1,\n\tg0_256: g0_256_1,\n\tg1_256: g1_256_1\n};\n\nvar rotl32$1 = utils.rotl32;\nvar sum32$1 = utils.sum32;\nvar sum32_5$1 = utils.sum32_5;\nvar ft_1$1 = common$1.ft_1;\nvar BlockHash$1 = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash$1.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash$1);\nvar _1 = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32$1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5$1(rotl32$1(a, 5), ft_1$1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32$1(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32$1(this.h[0], a);\n  this.h[1] = sum32$1(this.h[1], b);\n  this.h[2] = sum32$1(this.h[2], c);\n  this.h[3] = sum32$1(this.h[3], d);\n  this.h[4] = sum32$1(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nvar sum32$2 = utils.sum32;\nvar sum32_4$1 = utils.sum32_4;\nvar sum32_5$2 = utils.sum32_5;\nvar ch32$1 = common$1.ch32;\nvar maj32$1 = common$1.maj32;\nvar s0_256$1 = common$1.s0_256;\nvar s1_256$1 = common$1.s1_256;\nvar g0_256$1 = common$1.g0_256;\nvar g1_256$1 = common$1.g1_256;\n\nvar BlockHash$2 = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash$2.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash$2);\nvar _256 = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4$1(g1_256$1(W[i - 2]), W[i - 7], g0_256$1(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  minimalisticAssert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5$2(h, s1_256$1(e), ch32$1(e, f, g), this.k[i], W[i]);\n    var T2 = sum32$2(s0_256$1(a), maj32$1(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32$2(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32$2(T1, T2);\n  }\n\n  this.h[0] = sum32$2(this.h[0], a);\n  this.h[1] = sum32$2(this.h[1], b);\n  this.h[2] = sum32$2(this.h[2], c);\n  this.h[3] = sum32$2(this.h[3], d);\n  this.h[4] = sum32$2(this.h[4], e);\n  this.h[5] = sum32$2(this.h[5], f);\n  this.h[6] = sum32$2(this.h[6], g);\n  this.h[7] = sum32$2(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  _256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, _256);\nvar _224 = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\nvar rotr64_hi$1 = utils.rotr64_hi;\nvar rotr64_lo$1 = utils.rotr64_lo;\nvar shr64_hi$1 = utils.shr64_hi;\nvar shr64_lo$1 = utils.shr64_lo;\nvar sum64$1 = utils.sum64;\nvar sum64_hi$1 = utils.sum64_hi;\nvar sum64_lo$1 = utils.sum64_lo;\nvar sum64_4_hi$1 = utils.sum64_4_hi;\nvar sum64_4_lo$1 = utils.sum64_4_lo;\nvar sum64_5_hi$1 = utils.sum64_5_hi;\nvar sum64_5_lo$1 = utils.sum64_5_lo;\n\nvar BlockHash$3 = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash$3.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash$3);\nvar _512 = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi$1(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo$1(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  minimalisticAssert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi$1(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo$1(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi$1(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo$1(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi$1(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo$1(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi$1(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo$1(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64$1(this.h, 0, ah, al);\n  sum64$1(this.h, 2, bh, bl);\n  sum64$1(this.h, 4, ch, cl);\n  sum64$1(this.h, 6, dh, dl);\n  sum64$1(this.h, 8, eh, el);\n  sum64$1(this.h, 10, fh, fl);\n  sum64$1(this.h, 12, gh, gl);\n  sum64$1(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi$1(xh, xl, 28);\n  var c1_hi = rotr64_hi$1(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi$1(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo$1(xh, xl, 28);\n  var c1_lo = rotr64_lo$1(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo$1(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi$1(xh, xl, 14);\n  var c1_hi = rotr64_hi$1(xh, xl, 18);\n  var c2_hi = rotr64_hi$1(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo$1(xh, xl, 14);\n  var c1_lo = rotr64_lo$1(xh, xl, 18);\n  var c2_lo = rotr64_lo$1(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi$1(xh, xl, 1);\n  var c1_hi = rotr64_hi$1(xh, xl, 8);\n  var c2_hi = shr64_hi$1(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo$1(xh, xl, 1);\n  var c1_lo = rotr64_lo$1(xh, xl, 8);\n  var c2_lo = shr64_lo$1(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi$1(xh, xl, 19);\n  var c1_hi = rotr64_hi$1(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi$1(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo$1(xh, xl, 19);\n  var c1_lo = rotr64_lo$1(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo$1(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  _512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, _512);\nvar _384 = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n\nvar sha1 = _1;\nvar sha224 = _224;\nvar sha256 = _256;\nvar sha384 = _384;\nvar sha512 = _512;\n\nvar sha = {\n\tsha1: sha1,\n\tsha224: sha224,\n\tsha256: sha256,\n\tsha384: sha384,\n\tsha512: sha512\n};\n\nvar rotl32$2 = utils.rotl32;\nvar sum32$3 = utils.sum32;\nvar sum32_3$1 = utils.sum32_3;\nvar sum32_4$2 = utils.sum32_4;\nvar BlockHash$4 = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash$4.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash$4);\nvar ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32$3(\n      rotl32$2(\n        sum32_4$2(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32$2(C, 10);\n    C = B;\n    B = T;\n    T = sum32$3(\n      rotl32$2(\n        sum32_4$2(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32$2(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3$1(this.h[1], C, Dh);\n  this.h[1] = sum32_3$1(this.h[2], D, Eh);\n  this.h[2] = sum32_3$1(this.h[3], E, Ah);\n  this.h[3] = sum32_3$1(this.h[4], A, Bh);\n  this.h[4] = sum32_3$1(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n\nvar ripemd = {\n\tripemd160: ripemd160\n};\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nvar hmac = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  minimalisticAssert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n\nvar hash_1 = createCommonjsModule(function (module, exports) {\nvar hash = exports;\n\nhash.utils = utils;\nhash.common = common;\nhash.sha = sha;\nhash.ripemd = ripemd;\nhash.hmac = hmac;\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n});\n\nfunction createCommonjsModule$1(fn, basedir, module) {\n\treturn module = {\n\t\tpath: basedir,\n\t\texports: {},\n\t\trequire: function (path, base) {\n\t\t\treturn commonjsRequire();\n\t\t}\n\t}, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar minimalisticAssert$1 = assert$1;\n\nfunction assert$1(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert$1.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n\nvar utils_1 = createCommonjsModule$1(function (module, exports) {\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n});\n\nvar utils_1$1 = createCommonjsModule$1(function (module, exports) {\n\nvar utils = exports;\n\n\n\n\nutils.assert = minimalisticAssert$1;\nutils.toArray = utils_1.toArray;\nutils.zero2 = utils_1.zero2;\nutils.toHex = utils_1.toHex;\nutils.encode = utils_1.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new bn(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n});\n\n\n\nvar getNAF = utils_1$1.getNAF;\nvar getJSF = utils_1$1.getJSF;\nvar assert$1$1 = utils_1$1.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new bn(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? bn.red(conf.prime) : bn.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new bn(0).toRed(this.red);\n  this.one = new bn(1).toRed(this.red);\n  this.two = new bn(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new bn(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nvar base = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert$1$1(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert$1$1(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils_1$1.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert$1$1(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert$1$1(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils_1$1.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n\nvar inherits_browser$1 = createCommonjsModule$1(function (module) {\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n      var TempCtor = function () {};\n      TempCtor.prototype = superCtor.prototype;\n      ctor.prototype = new TempCtor();\n      ctor.prototype.constructor = ctor;\n    }\n  };\n}\n});\n\n\n\n\n\n\nvar assert$2 = utils_1$1.assert;\n\nfunction ShortCurve(conf) {\n  base.call(this, 'short', conf);\n\n  this.a = new bn(conf.a, 16).toRed(this.red);\n  this.b = new bn(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits_browser$1(ShortCurve, base);\nvar short_1 = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new bn(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new bn(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert$2(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new bn(vec.a, 16),\n        b: new bn(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : bn.mont(num);\n  var tinv = new bn(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new bn(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new bn(1);\n  var y1 = new bn(0);\n  var x2 = new bn(0);\n  var y2 = new bn(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new bn(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits_browser$1(Point, base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new bn(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new bn(0);\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16);\n    this.z = new bn(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits_browser$1(JPoint, base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new bn(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nvar curve_1 = createCommonjsModule$1(function (module, exports) {\n\nvar curve = exports;\n\ncurve.base = base;\ncurve.short = short_1;\ncurve.mont = /*RicMoo:ethers:require(./mont)*/(null);\ncurve.edwards = /*RicMoo:ethers:require(./edwards)*/(null);\n});\n\nvar curves_1 = createCommonjsModule$1(function (module, exports) {\n\nvar curves = exports;\n\n\n\n\n\nvar assert = utils_1$1.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve_1.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve_1.edwards(options);\n  else\n    this.curve = new curve_1.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash_1.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash_1.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash_1.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash_1.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash_1.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash_1.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash_1.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = /*RicMoo:ethers:require(./precomputed/secp256k1)*/(null).crash();\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash_1.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n});\n\n\n\n\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils_1.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils_1.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils_1.toArray(options.pers, options.persEnc || 'hex');\n  minimalisticAssert$1(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nvar hmacDrbg = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash_1.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils_1.toArray(entropy, entropyEnc);\n  add = utils_1.toArray(add, addEnc);\n\n  minimalisticAssert$1(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils_1.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils_1.encode(res, enc);\n};\n\n\n\nvar assert$3 = utils_1$1.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nvar key = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new bn(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert$3(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert$3(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert$3(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n\n\n\n\nvar assert$4 = utils_1$1.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert$4(options.r && options.s, 'Signature without r or s');\n  this.r = new bn(options.r, 16);\n  this.s = new bn(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nvar signature = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils_1$1.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new bn(r);\n  this.s = new bn(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils_1$1.encode(res, enc);\n};\n\n\n\n\n\nvar rand = /*RicMoo:ethers:require(brorand)*/(function() { throw new Error('unsupported'); });\nvar assert$5 = utils_1$1.assert;\n\n\n\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert$5(Object.prototype.hasOwnProperty.call(curves_1, options),\n      'Unknown curve ' + options);\n\n    options = curves_1[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves_1.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nvar ec = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new key(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return key.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return key.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new hmacDrbg({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new bn(2));\n  for (;;) {\n    var priv = new bn(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new bn(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new hmacDrbg({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new bn(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new bn(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature$1, key, enc) {\n  msg = this._truncateToN(new bn(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature$1 = new signature(signature$1, 'hex');\n\n  // Perform primitive values validation\n  var r = signature$1.r;\n  var s = signature$1.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature$1, j, enc) {\n  assert$5((3 & j) === j, 'The recovery param is more than two bits');\n  signature$1 = new signature(signature$1, enc);\n\n  var n = this.n;\n  var e = new bn(msg);\n  var r = signature$1.r;\n  var s = signature$1.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature$1.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature$1, Q, enc) {\n  signature$1 = new signature(signature$1, enc);\n  if (signature$1.recoveryParam !== null)\n    return signature$1.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature$1, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n\nvar elliptic_1 = createCommonjsModule$1(function (module, exports) {\n\nvar elliptic = exports;\n\nelliptic.version = /*RicMoo:ethers*/{ version: \"6.5.4\" }.version;\nelliptic.utils = utils_1$1;\nelliptic.rand = /*RicMoo:ethers:require(brorand)*/(function() { throw new Error('unsupported'); });\nelliptic.curve = curve_1;\nelliptic.curves = curves_1;\n\n// Protocols\nelliptic.ec = ec;\nelliptic.eddsa = /*RicMoo:ethers:require(./elliptic/eddsa)*/(null);\n});\n\nvar EC$1 = elliptic_1.ec;\n//# sourceMappingURL=browser-elliptic.js.map\n\nconst version$a = \"signing-key/5.4.0\";\n//# sourceMappingURL=_version.js.map\n\nconst logger$a = new Logger(version$a);\nlet _curve = null;\nfunction getCurve() {\n    if (!_curve) {\n        _curve = new EC$1(\"secp256k1\");\n    }\n    return _curve;\n}\nclass SigningKey {\n    constructor(privateKey) {\n        defineReadOnly(this, \"curve\", \"secp256k1\");\n        defineReadOnly(this, \"privateKey\", hexlify(privateKey));\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        defineReadOnly(this, \"publicKey\", \"0x\" + keyPair.getPublic(false, \"hex\"));\n        defineReadOnly(this, \"compressedPublicKey\", \"0x\" + keyPair.getPublic(true, \"hex\"));\n        defineReadOnly(this, \"_isSigningKey\", true);\n    }\n    _addPoint(other) {\n        const p0 = getCurve().keyFromPublic(arrayify(this.publicKey));\n        const p1 = getCurve().keyFromPublic(arrayify(other));\n        return \"0x\" + p0.pub.add(p1.pub).encodeCompressed(\"hex\");\n    }\n    signDigest(digest) {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const digestBytes = arrayify(digest);\n        if (digestBytes.length !== 32) {\n            logger$a.throwArgumentError(\"bad digest length\", \"digest\", digest);\n        }\n        const signature = keyPair.sign(digestBytes, { canonical: true });\n        return splitSignature({\n            recoveryParam: signature.recoveryParam,\n            r: hexZeroPad(\"0x\" + signature.r.toString(16), 32),\n            s: hexZeroPad(\"0x\" + signature.s.toString(16), 32),\n        });\n    }\n    computeSharedSecret(otherKey) {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));\n        return hexZeroPad(\"0x\" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);\n    }\n    static isSigningKey(value) {\n        return !!(value && value._isSigningKey);\n    }\n}\nfunction recoverPublicKey(digest, signature) {\n    const sig = splitSignature(signature);\n    const rs = { r: arrayify(sig.r), s: arrayify(sig.s) };\n    return \"0x\" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode(\"hex\", false);\n}\nfunction computePublicKey(key, compressed) {\n    const bytes = arrayify(key);\n    if (bytes.length === 32) {\n        const signingKey = new SigningKey(bytes);\n        if (compressed) {\n            return \"0x\" + getCurve().keyFromPrivate(bytes).getPublic(true, \"hex\");\n        }\n        return signingKey.publicKey;\n    }\n    else if (bytes.length === 33) {\n        if (compressed) {\n            return hexlify(bytes);\n        }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(false, \"hex\");\n    }\n    else if (bytes.length === 65) {\n        if (!compressed) {\n            return hexlify(bytes);\n        }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(true, \"hex\");\n    }\n    return logger$a.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\n//# sourceMappingURL=index.js.map\n\nconst version$b = \"transactions/5.4.0\";\n//# sourceMappingURL=_version.js.map\n\nconst logger$b = new Logger(version$b);\nvar TransactionTypes;\n(function (TransactionTypes) {\n    TransactionTypes[TransactionTypes[\"legacy\"] = 0] = \"legacy\";\n    TransactionTypes[TransactionTypes[\"eip2930\"] = 1] = \"eip2930\";\n    TransactionTypes[TransactionTypes[\"eip1559\"] = 2] = \"eip1559\";\n})(TransactionTypes || (TransactionTypes = {}));\n///////////////////////////////\nfunction handleAddress(value) {\n    if (value === \"0x\") {\n        return null;\n    }\n    return getAddress(value);\n}\nfunction handleNumber(value) {\n    if (value === \"0x\") {\n        return Zero;\n    }\n    return BigNumber.from(value);\n}\nfunction computeAddress(key) {\n    const publicKey = computePublicKey(key);\n    return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));\n}\nfunction recoverAddress(digest, signature) {\n    return computeAddress(recoverPublicKey(arrayify(digest), signature));\n}\nfunction formatNumber(value, name) {\n    const result = stripZeros(BigNumber.from(value).toHexString());\n    if (result.length > 32) {\n        logger$b.throwArgumentError(\"invalid length for \" + name, (\"transaction:\" + name), value);\n    }\n    return result;\n}\nfunction accessSetify(addr, storageKeys) {\n    return {\n        address: getAddress(addr),\n        storageKeys: (storageKeys || []).map((storageKey, index) => {\n            if (hexDataLength(storageKey) !== 32) {\n                logger$b.throwArgumentError(\"invalid access list storageKey\", `accessList[${addr}:${index}]`, storageKey);\n            }\n            return storageKey.toLowerCase();\n        })\n    };\n}\nfunction accessListify(value) {\n    if (Array.isArray(value)) {\n        return value.map((set, index) => {\n            if (Array.isArray(set)) {\n                if (set.length > 2) {\n                    logger$b.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\", `value[${index}]`, set);\n                }\n                return accessSetify(set[0], set[1]);\n            }\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n    const result = Object.keys(value).map((addr) => {\n        const storageKeys = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, {});\n        return accessSetify(addr, Object.keys(storageKeys).sort());\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\nfunction formatAccessList(value) {\n    return accessListify(value).map((set) => [set.address, set.storageKeys]);\n}\nfunction _serializeEip1559(transaction, signature) {\n    // If there is an explicit gasPrice, make sure it matches the\n    // EIP-1559 fees; otherwise they may not understand what they\n    // think they are setting in terms of fee.\n    if (transaction.gasPrice != null) {\n        const gasPrice = BigNumber.from(transaction.gasPrice);\n        const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);\n        if (!gasPrice.eq(maxFeePerGas)) {\n            logger$b.throwArgumentError(\"mismatch EIP-1559 gasPrice != maxFeePerGas\", \"tx\", {\n                gasPrice, maxFeePerGas\n            });\n        }\n    }\n    const fields = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(transaction.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to) : \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n    return hexConcat([\"0x02\", encode(fields)]);\n}\nfunction _serializeEip2930(transaction, signature) {\n    const fields = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.gasPrice || 0, \"gasPrice\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to) : \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n    return hexConcat([\"0x01\", encode(fields)]);\n}\nfunction _parseEipSignature(tx, fields, serialize) {\n    try {\n        const recid = handleNumber(fields[0]).toNumber();\n        if (recid !== 0 && recid !== 1) {\n            throw new Error(\"bad recid\");\n        }\n        tx.v = recid;\n    }\n    catch (error) {\n        logger$b.throwArgumentError(\"invalid v for transaction type: 1\", \"v\", fields[0]);\n    }\n    tx.r = hexZeroPad(fields[1], 32);\n    tx.s = hexZeroPad(fields[2], 32);\n    try {\n        const digest = keccak256(serialize(tx));\n        tx.from = recoverAddress(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });\n    }\n    catch (error) {\n        console.log(error);\n    }\n}\nfunction _parseEip1559(payload) {\n    const transaction = decode(payload.slice(1));\n    if (transaction.length !== 9 && transaction.length !== 12) {\n        logger$b.throwArgumentError(\"invalid component count for transaction type: 2\", \"payload\", hexlify(payload));\n    }\n    const maxPriorityFeePerGas = handleNumber(transaction[2]);\n    const maxFeePerGas = handleNumber(transaction[3]);\n    const tx = {\n        type: 2,\n        chainId: handleNumber(transaction[0]).toNumber(),\n        nonce: handleNumber(transaction[1]).toNumber(),\n        maxPriorityFeePerGas: maxPriorityFeePerGas,\n        maxFeePerGas: maxFeePerGas,\n        gasPrice: null,\n        gasLimit: handleNumber(transaction[4]),\n        to: handleAddress(transaction[5]),\n        value: handleNumber(transaction[6]),\n        data: transaction[7],\n        accessList: accessListify(transaction[8]),\n    };\n    // Unsigned EIP-1559 Transaction\n    if (transaction.length === 9) {\n        return tx;\n    }\n    tx.hash = keccak256(payload);\n    _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);\n    return tx;\n}\nfunction _parseEip2930(payload) {\n    const transaction = decode(payload.slice(1));\n    if (transaction.length !== 8 && transaction.length !== 11) {\n        logger$b.throwArgumentError(\"invalid component count for transaction type: 1\", \"payload\", hexlify(payload));\n    }\n    const tx = {\n        type: 1,\n        chainId: handleNumber(transaction[0]).toNumber(),\n        nonce: handleNumber(transaction[1]).toNumber(),\n        gasPrice: handleNumber(transaction[2]),\n        gasLimit: handleNumber(transaction[3]),\n        to: handleAddress(transaction[4]),\n        value: handleNumber(transaction[5]),\n        data: transaction[6],\n        accessList: accessListify(transaction[7])\n    };\n    // Unsigned EIP-2930 Transaction\n    if (transaction.length === 8) {\n        return tx;\n    }\n    tx.hash = keccak256(payload);\n    _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);\n    return tx;\n}\n// Legacy Transactions and EIP-155\nfunction _parse(rawTransaction) {\n    const transaction = decode(rawTransaction);\n    if (transaction.length !== 9 && transaction.length !== 6) {\n        logger$b.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n    }\n    const tx = {\n        nonce: handleNumber(transaction[0]).toNumber(),\n        gasPrice: handleNumber(transaction[1]),\n        gasLimit: handleNumber(transaction[2]),\n        to: handleAddress(transaction[3]),\n        value: handleNumber(transaction[4]),\n        data: transaction[5],\n        chainId: 0\n    };\n    // Legacy unsigned transaction\n    if (transaction.length === 6) {\n        return tx;\n    }\n    try {\n        tx.v = BigNumber.from(transaction[6]).toNumber();\n    }\n    catch (error) {\n        console.log(error);\n        return tx;\n    }\n    tx.r = hexZeroPad(transaction[7], 32);\n    tx.s = hexZeroPad(transaction[8], 32);\n    if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n        // EIP-155 unsigned transaction\n        tx.chainId = tx.v;\n        tx.v = 0;\n    }\n    else {\n        // Signed Tranasaction\n        tx.chainId = Math.floor((tx.v - 35) / 2);\n        if (tx.chainId < 0) {\n            tx.chainId = 0;\n        }\n        let recoveryParam = tx.v - 27;\n        const raw = transaction.slice(0, 6);\n        if (tx.chainId !== 0) {\n            raw.push(hexlify(tx.chainId));\n            raw.push(\"0x\");\n            raw.push(\"0x\");\n            recoveryParam -= tx.chainId * 2 + 8;\n        }\n        const digest = keccak256(encode(raw));\n        try {\n            tx.from = recoverAddress(digest, { r: hexlify(tx.r), s: hexlify(tx.s), recoveryParam: recoveryParam });\n        }\n        catch (error) {\n            console.log(error);\n        }\n        tx.hash = keccak256(rawTransaction);\n    }\n    tx.type = null;\n    return tx;\n}\nfunction parse(rawTransaction) {\n    const payload = arrayify(rawTransaction);\n    // Legacy and EIP-155 Transactions\n    if (payload[0] > 0x7f) {\n        return _parse(payload);\n    }\n    // Typed Transaction (EIP-2718)\n    switch (payload[0]) {\n        case 1:\n            return _parseEip2930(payload);\n        case 2:\n            return _parseEip1559(payload);\n    }\n    return logger$b.throwError(`unsupported transaction type: ${payload[0]}`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"parseTransaction\",\n        transactionType: payload[0]\n    });\n}\n//# sourceMappingURL=index.js.map\n\n/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\nclass BaseX {\n    constructor(alphabet) {\n        defineReadOnly(this, \"alphabet\", alphabet);\n        defineReadOnly(this, \"base\", alphabet.length);\n        defineReadOnly(this, \"_alphabetMap\", {});\n        defineReadOnly(this, \"_leader\", alphabet.charAt(0));\n        // pre-compute lookup table\n        for (let i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n    encode(value) {\n        let source = arrayify(value);\n        if (source.length === 0) {\n            return \"\";\n        }\n        let digits = [0];\n        for (let i = 0; i < source.length; ++i) {\n            let carry = source[i];\n            for (let j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n        let string = \"\";\n        // deal with leading zeros\n        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n        // convert digits to a string\n        for (let q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n        return string;\n    }\n    decode(value) {\n        if (typeof (value) !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n        let bytes = [];\n        if (value.length === 0) {\n            return new Uint8Array(bytes);\n        }\n        bytes.push(0);\n        for (let i = 0; i < value.length; i++) {\n            let byte = this._alphabetMap[value[i]];\n            if (byte === undefined) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n            }\n            let carry = byte;\n            for (let j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n        // deal with leading zeros\n        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0);\n        }\n        return arrayify(new Uint8Array(bytes.reverse()));\n    }\n}\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n//# sourceMappingURL=index.js.map\n\nconst version$c = \"sha2/5.4.0\";\n//# sourceMappingURL=_version.js.map\n\nconst logger$c = new Logger(version$c);\nfunction sha256$1(data) {\n    return \"0x\" + (hash_1.sha256().update(arrayify(data)).digest(\"hex\"));\n}\n//# sourceMappingURL=sha2.js.map\n\nconst version$d = \"networks/5.4.2\";\n//# sourceMappingURL=_version.js.map\n\nconst logger$d = new Logger(version$d);\nfunction isRenetworkable(value) {\n    return (value && typeof (value.renetwork) === \"function\");\n}\nfunction ethDefaultProvider(network) {\n    const func = function (providers, options) {\n        if (options == null) {\n            options = {};\n        }\n        const providerList = [];\n        if (providers.InfuraProvider) {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            }\n            catch (error) { }\n        }\n        if (providers.EtherscanProvider) {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            }\n            catch (error) { }\n        }\n        if (providers.AlchemyProvider) {\n            try {\n                providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n            }\n            catch (error) { }\n        }\n        if (providers.PocketProvider) {\n            // These networks are currently faulty on Pocket as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once Pocket has upgraded their nodes\n            const skip = [\"goerli\", \"ropsten\", \"rinkeby\"];\n            try {\n                const provider = new providers.PocketProvider(network);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            }\n            catch (error) { }\n        }\n        if (providers.CloudflareProvider) {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            }\n            catch (error) { }\n        }\n        if (providerList.length === 0) {\n            return null;\n        }\n        if (providers.FallbackProvider) {\n            let quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            }\n            else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n        return providerList[0];\n    };\n    func.renetwork = function (network) {\n        return ethDefaultProvider(network);\n    };\n    return func;\n}\nfunction etcDefaultProvider(url, network) {\n    const func = function (providers, options) {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n        return null;\n    };\n    func.renetwork = function (network) {\n        return etcDefaultProvider(url, network);\n    };\n    return func;\n}\nconst homestead = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\nconst ropsten = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\nconst classicMordor = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\nconst networks = {\n    unspecified: { chainId: 0, name: \"unspecified\" },\n    homestead: homestead,\n    mainnet: homestead,\n    morden: { chainId: 2, name: \"morden\" },\n    ropsten: ropsten,\n    testnet: ropsten,\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/etc\", \"classic\")\n    },\n    classicMorden: { chainId: 62, name: \"classicMorden\" },\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n    xdai: { chainId: 100, name: \"xdai\" },\n    matic: { chainId: 137, name: \"matic\" },\n    maticmum: { chainId: 80001, name: \"maticmum\" },\n    bnb: { chainId: 56, name: \"bnb\" },\n    bnbt: { chainId: 97, name: \"bnbt\" },\n};\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nfunction getNetwork(network) {\n    // No network (null)\n    if (network == null) {\n        return null;\n    }\n    if (typeof (network) === \"number\") {\n        for (const name in networks) {\n            const standard = networks[name];\n            if (standard.chainId === network) {\n                return {\n                    name: standard.name,\n                    chainId: standard.chainId,\n                    ensAddress: (standard.ensAddress || null),\n                    _defaultProvider: (standard._defaultProvider || null)\n                };\n            }\n        }\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n    if (typeof (network) === \"string\") {\n        const standard = networks[network];\n        if (standard == null) {\n            return null;\n        }\n        return {\n            name: standard.name,\n            chainId: standard.chainId,\n            ensAddress: standard.ensAddress,\n            _defaultProvider: (standard._defaultProvider || null)\n        };\n    }\n    const standard = networks[network.name];\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof (network.chainId) !== \"number\") {\n            logger$d.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        logger$d.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    let defaultProvider = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        }\n        else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\n//# sourceMappingURL=index.js.map\n\nfunction encode$1(data) {\n    data = arrayify(data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n//# sourceMappingURL=base64.js.map\n\nconst version$e = \"web/5.4.0\";\n//# sourceMappingURL=_version.js.map\n\nvar __awaiter$4 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nfunction getUrl(href, options) {\n    return __awaiter$4(this, void 0, void 0, function* () {\n        if (options == null) {\n            options = {};\n        }\n        const request = {\n            method: (options.method || \"GET\"),\n            headers: (options.headers || {}),\n            body: (options.body || undefined),\n            mode: \"cors\",\n            cache: \"no-cache\",\n            credentials: \"same-origin\",\n            redirect: \"follow\",\n            referrer: \"client\", // no-referrer, *client\n        };\n        const response = yield fetch(href, request);\n        const body = yield response.arrayBuffer();\n        const headers = {};\n        if (response.headers.forEach) {\n            response.headers.forEach((value, key) => {\n                headers[key.toLowerCase()] = value;\n            });\n        }\n        else {\n            ((response.headers).keys)().forEach((key) => {\n                headers[key.toLowerCase()] = response.headers.get(key);\n            });\n        }\n        return {\n            headers: headers,\n            statusCode: response.status,\n            statusMessage: response.statusText,\n            body: arrayify(new Uint8Array(body)),\n        };\n    });\n}\n//# sourceMappingURL=geturl.js.map\n\nvar __awaiter$5 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst logger$e = new Logger(version$e);\nfunction staller(duration) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\nfunction bodyify(value, type) {\n    if (value == null) {\n        return null;\n    }\n    if (typeof (value) === \"string\") {\n        return value;\n    }\n    if (isBytesLike(value)) {\n        if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n            try {\n                return toUtf8String(value);\n            }\n            catch (error) { }\n        }\n        return hexlify(value);\n    }\n    return value;\n}\n// This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\nfunction _fetchData(connection, body, processFunc) {\n    // How many times to retry in the event of a throttle\n    const attemptLimit = (typeof (connection) === \"object\" && connection.throttleLimit != null) ? connection.throttleLimit : 12;\n    logger$e.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0), \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n    const throttleCallback = ((typeof (connection) === \"object\") ? connection.throttleCallback : null);\n    const throttleSlotInterval = ((typeof (connection) === \"object\" && typeof (connection.throttleSlotInterval) === \"number\") ? connection.throttleSlotInterval : 100);\n    logger$e.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0), \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n    const headers = {};\n    let url = null;\n    // @TODO: Allow ConnectionInfo to override some of these values\n    const options = {\n        method: \"GET\",\n    };\n    let allow304 = false;\n    let timeout = 2 * 60 * 1000;\n    if (typeof (connection) === \"string\") {\n        url = connection;\n    }\n    else if (typeof (connection) === \"object\") {\n        if (connection == null || connection.url == null) {\n            logger$e.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n        }\n        url = connection.url;\n        if (typeof (connection.timeout) === \"number\" && connection.timeout > 0) {\n            timeout = connection.timeout;\n        }\n        if (connection.headers) {\n            for (const key in connection.headers) {\n                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };\n                if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n                    allow304 = true;\n                }\n            }\n        }\n        options.allowGzip = !!connection.allowGzip;\n        if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n                logger$e.throwError(\"basic authentication requires a secure https url\", Logger.errors.INVALID_ARGUMENT, { argument: \"url\", url: url, user: connection.user, password: \"[REDACTED]\" });\n            }\n            const authorization = connection.user + \":\" + connection.password;\n            headers[\"authorization\"] = {\n                key: \"Authorization\",\n                value: \"Basic \" + encode$1(toUtf8Bytes(authorization))\n            };\n        }\n    }\n    if (body) {\n        options.method = \"POST\";\n        options.body = body;\n        if (headers[\"content-type\"] == null) {\n            headers[\"content-type\"] = { key: \"Content-Type\", value: \"application/octet-stream\" };\n        }\n        if (headers[\"content-length\"] == null) {\n            headers[\"content-length\"] = { key: \"Content-Length\", value: String(body.length) };\n        }\n    }\n    const flatHeaders = {};\n    Object.keys(headers).forEach((key) => {\n        const header = headers[key];\n        flatHeaders[header.key] = header.value;\n    });\n    options.headers = flatHeaders;\n    const runningTimeout = (function () {\n        let timer = null;\n        const promise = new Promise(function (resolve, reject) {\n            if (timeout) {\n                timer = setTimeout(() => {\n                    if (timer == null) {\n                        return;\n                    }\n                    timer = null;\n                    reject(logger$e.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        timeout: timeout,\n                        url: url\n                    }));\n                }, timeout);\n            }\n        });\n        const cancel = function () {\n            if (timer == null) {\n                return;\n            }\n            clearTimeout(timer);\n            timer = null;\n        };\n        return { promise, cancel };\n    })();\n    const runningFetch = (function () {\n        return __awaiter$5(this, void 0, void 0, function* () {\n            for (let attempt = 0; attempt < attemptLimit; attempt++) {\n                let response = null;\n                try {\n                    response = yield getUrl(url, options);\n                    // Exponential back-off throttling\n                    if (response.statusCode === 429 && attempt < attemptLimit) {\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = yield throttleCallback(attempt, url);\n                        }\n                        if (tryAgain) {\n                            let stall = 0;\n                            const retryAfter = response.headers[\"retry-after\"];\n                            if (typeof (retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                                stall = parseInt(retryAfter) * 1000;\n                            }\n                            else {\n                                stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            }\n                            //console.log(\"Stalling 429\");\n                            yield staller(stall);\n                            continue;\n                        }\n                    }\n                }\n                catch (error) {\n                    response = error.response;\n                    if (response == null) {\n                        runningTimeout.cancel();\n                        logger$e.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n                            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                            requestMethod: options.method,\n                            serverError: error,\n                            url: url\n                        });\n                    }\n                }\n                let body = response.body;\n                if (allow304 && response.statusCode === 304) {\n                    body = null;\n                }\n                else if (response.statusCode < 200 || response.statusCode >= 300) {\n                    runningTimeout.cancel();\n                    logger$e.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n                        status: response.statusCode,\n                        headers: response.headers,\n                        body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"] : null)),\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        url: url\n                    });\n                }\n                if (processFunc) {\n                    try {\n                        const result = yield processFunc(body, response);\n                        runningTimeout.cancel();\n                        return result;\n                    }\n                    catch (error) {\n                        // Allow the processFunc to trigger a throttle\n                        if (error.throttleRetry && attempt < attemptLimit) {\n                            let tryAgain = true;\n                            if (throttleCallback) {\n                                tryAgain = yield throttleCallback(attempt, url);\n                            }\n                            if (tryAgain) {\n                                const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                                //console.log(\"Stalling callback\");\n                                yield staller(timeout);\n                                continue;\n                            }\n                        }\n                        runningTimeout.cancel();\n                        logger$e.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                            body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"] : null)),\n                            error: error,\n                            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                            requestMethod: options.method,\n                            url: url\n                        });\n                    }\n                }\n                runningTimeout.cancel();\n                // If we had a processFunc, it eitehr returned a T or threw above.\n                // The \"body\" is now a Uint8Array.\n                return body;\n            }\n            return logger$e.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n                requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                requestMethod: options.method,\n                url: url\n            });\n        });\n    })();\n    return Promise.race([runningTimeout.promise, runningFetch]);\n}\nfunction fetchJson(connection, json, processFunc) {\n    let processJsonFunc = (value, response) => {\n        let result = null;\n        if (value != null) {\n            try {\n                result = JSON.parse(toUtf8String(value));\n            }\n            catch (error) {\n                logger$e.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n                    body: value,\n                    error: error\n                });\n            }\n        }\n        if (processFunc) {\n            result = processFunc(result, response);\n        }\n        return result;\n    };\n    // If we have json to send, we must\n    // - add content-type of application/json (unless already overridden)\n    // - convert the json to bytes\n    let body = null;\n    if (json != null) {\n        body = toUtf8Bytes(json);\n        // Create a connection with the content-type set for JSON\n        const updated = (typeof (connection) === \"string\") ? ({ url: connection }) : shallowCopy(connection);\n        if (updated.headers) {\n            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === \"content-type\")).length) !== 0;\n            if (!hasContentType) {\n                updated.headers = shallowCopy(updated.headers);\n                updated.headers[\"content-type\"] = \"application/json\";\n            }\n        }\n        else {\n            updated.headers = { \"content-type\": \"application/json\" };\n        }\n        connection = updated;\n    }\n    return _fetchData(connection, body, processJsonFunc);\n}\nfunction poll(func, options) {\n    if (!options) {\n        options = {};\n    }\n    options = shallowCopy(options);\n    if (options.floor == null) {\n        options.floor = 0;\n    }\n    if (options.ceiling == null) {\n        options.ceiling = 10000;\n    }\n    if (options.interval == null) {\n        options.interval = 250;\n    }\n    return new Promise(function (resolve, reject) {\n        let timer = null;\n        let done = false;\n        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n        const cancel = () => {\n            if (done) {\n                return false;\n            }\n            done = true;\n            if (timer) {\n                clearTimeout(timer);\n            }\n            return true;\n        };\n        if (options.timeout) {\n            timer = setTimeout(() => {\n                if (cancel()) {\n                    reject(new Error(\"timeout\"));\n                }\n            }, options.timeout);\n        }\n        const retryLimit = options.retryLimit;\n        let attempt = 0;\n        function check() {\n            return func().then(function (result) {\n                // If we have a result, or are allowed null then we're done\n                if (result !== undefined) {\n                    if (cancel()) {\n                        resolve(result);\n                    }\n                }\n                else if (options.oncePoll) {\n                    options.oncePoll.once(\"poll\", check);\n                }\n                else if (options.onceBlock) {\n                    options.onceBlock.once(\"block\", check);\n                    // Otherwise, exponential back-off (up to 10s) our next request\n                }\n                else if (!done) {\n                    attempt++;\n                    if (attempt > retryLimit) {\n                        if (cancel()) {\n                            reject(new Error(\"retry limit reached\"));\n                        }\n                        return;\n                    }\n                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                    if (timeout < options.floor) {\n                        timeout = options.floor;\n                    }\n                    if (timeout > options.ceiling) {\n                        timeout = options.ceiling;\n                    }\n                    setTimeout(check, timeout);\n                }\n                return null;\n            }, function (error) {\n                if (cancel()) {\n                    reject(error);\n                }\n            });\n        }\n        check();\n    });\n}\n//# sourceMappingURL=index.js.map\n\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {};\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z);\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z;\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25;\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1;\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i);\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5);\n  }\n  chk = polymodStep(chk);\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i);\n    chk = polymodStep(chk) ^ (v & 0x1f);\n  }\n  return chk\n}\n\nfunction encode$2 (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90;\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase();\n\n  // determine chk mod\n  var chk = prefixChk(prefix);\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1';\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i];\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x;\n    result += ALPHABET.charAt(x);\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk);\n  }\n  chk ^= 1;\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f;\n    result += ALPHABET.charAt(v);\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90;\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase();\n  var uppered = str.toUpperCase();\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered;\n\n  var split = str.lastIndexOf('1');\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split);\n  var wordChars = str.slice(split + 1);\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix);\n  if (typeof chk === 'string') return chk\n\n  var words = [];\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i);\n    var v = ALPHABET_MAP[c];\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v;\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v);\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments);\n  if (typeof res === 'object') return res\n}\n\nfunction decode$1 (str) {\n  var res = __decode.apply(null, arguments);\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0;\n  var bits = 0;\n  var maxV = (1 << outBits) - 1;\n\n  var result = [];\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i];\n    bits += inBits;\n\n    while (bits >= outBits) {\n      bits -= outBits;\n      result.push((value >> bits) & maxV);\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV);\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true);\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true);\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false);\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false);\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nvar bech32 = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode$1,\n  encode: encode$2,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n};\n\nconst version$f = \"providers/5.4.4\";\n//# sourceMappingURL=_version.js.map\n\nconst logger$f = new Logger(version$f);\nclass Formatter {\n    constructor() {\n        logger$f.checkNew(new.target, Formatter);\n        this.formats = this.getDefaultFormats();\n    }\n    getDefaultFormats() {\n        const formats = ({});\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const type = this.type.bind(this);\n        const strictData = (v) => { return this.data(v, true); };\n        formats.transaction = {\n            hash: hash,\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n            confirmations: Formatter.allowNull(number, null),\n            from: address,\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n            creates: Formatter.allowNull(address, null),\n            raw: Formatter.allowNull(data),\n        };\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n        formats.block = {\n            hash: hash,\n            parentHash: hash,\n            number: number,\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n            miner: address,\n            extraData: data,\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n        formats.blockWithTransactions = shallowCopy(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n            topics: Formatter.arrayOf(hash),\n            transactionHash: hash,\n            logIndex: number,\n        };\n        return formats;\n    }\n    accessList(accessList) {\n        return accessListify(accessList || []);\n    }\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number) {\n        if (number === \"0x\") {\n            return 0;\n        }\n        return BigNumber.from(number).toNumber();\n    }\n    type(number) {\n        if (number === \"0x\" || number == null) {\n            return 0;\n        }\n        return BigNumber.from(number).toNumber();\n    }\n    // Strict! Used on input.\n    bigNumber(value) {\n        return BigNumber.from(value);\n    }\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value) {\n        if (typeof (value) === \"boolean\") {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") {\n                return true;\n            }\n            if (value === \"false\") {\n                return false;\n            }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n    hex(value, strict) {\n        if (typeof (value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") {\n                value = \"0x\" + value;\n            }\n            if (isHexString(value)) {\n                return value.toLowerCase();\n            }\n        }\n        return logger$f.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n    data(value, strict) {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n    // Requires an address\n    // Strict! Used on input.\n    address(value) {\n        return getAddress(value);\n    }\n    callAddress(value) {\n        if (!isHexString(value, 32)) {\n            return null;\n        }\n        const address = getAddress(hexDataSlice(value, 12));\n        return (address === AddressZero) ? null : address;\n    }\n    contractAddress(value) {\n        return getContractAddress(value);\n    }\n    // Strict! Used on input.\n    blockTag(blockTag) {\n        if (blockTag == null) {\n            return \"latest\";\n        }\n        if (blockTag === \"earliest\") {\n            return \"0x0\";\n        }\n        if (blockTag === \"latest\" || blockTag === \"pending\") {\n            return blockTag;\n        }\n        if (typeof (blockTag) === \"number\" || isHexString(blockTag)) {\n            return hexValue(blockTag);\n        }\n        throw new Error(\"invalid blockTag\");\n    }\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value, strict) {\n        const result = this.hex(value, strict);\n        if (hexDataLength(result) !== 32) {\n            return logger$f.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value) {\n        if (value == null) {\n            return null;\n        }\n        const v = BigNumber.from(value);\n        try {\n            return v.toNumber();\n        }\n        catch (error) { }\n        return null;\n    }\n    uint256(value) {\n        if (!isHexString(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return hexZeroPad(value, 32);\n    }\n    _block(value, format) {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        return Formatter.check(format, value);\n    }\n    block(value) {\n        return this._block(value, this.formats.block);\n    }\n    blockWithTransactions(value) {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n    // Strict! Used on input.\n    transactionRequest(value) {\n        return Formatter.check(this.formats.transactionRequest, value);\n    }\n    transactionResponse(transaction) {\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n        if ((transaction.type === 1 || transaction.type === 2) && transaction.accessList == null) {\n            transaction.accessList = [];\n        }\n        const result = Formatter.check(this.formats.transaction, transaction);\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n            result.chainId = chainId;\n        }\n        else {\n            let chainId = transaction.networkId;\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n            if (typeof (chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) {\n                    chainId = 0;\n                }\n                chainId = parseInt(chainId);\n            }\n            if (typeof (chainId) !== \"number\") {\n                chainId = 0;\n            }\n            result.chainId = chainId;\n        }\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n        return result;\n    }\n    transaction(value) {\n        return parse(value);\n    }\n    receiptLog(value) {\n        return Formatter.check(this.formats.receiptLog, value);\n    }\n    receipt(value) {\n        const result = Formatter.check(this.formats.receipt, value);\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = BigNumber.from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        logger$f.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                }\n                else {\n                    logger$f.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            }\n            else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger$f.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n        return result;\n    }\n    topics(value) {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n        }\n        else if (value != null) {\n            return this.hash(value, true);\n        }\n        return null;\n    }\n    filter(value) {\n        return Formatter.check(this.formats.filter, value);\n    }\n    filterLog(value) {\n        return Formatter.check(this.formats.filterLog, value);\n    }\n    static check(format, object) {\n        const result = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) {\n                    result[key] = value;\n                }\n            }\n            catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n    // if value is null-ish, nullValue is returned\n    static allowNull(format, nullValue) {\n        return (function (value) {\n            if (value == null) {\n                return nullValue;\n            }\n            return format(value);\n        });\n    }\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format, replaceValue) {\n        return (function (value) {\n            if (!value) {\n                return replaceValue;\n            }\n            return format(value);\n        });\n    }\n    // Requires an Array satisfying check\n    static arrayOf(format) {\n        return (function (array) {\n            if (!Array.isArray(array)) {\n                throw new Error(\"not an array\");\n            }\n            const result = [];\n            array.forEach(function (value) {\n                result.push(format(value));\n            });\n            return result;\n        });\n    }\n}\n//# sourceMappingURL=formatter.js.map\n\nvar __awaiter$6 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst logger$g = new Logger(version$f);\n//////////////////////////////\n// Event Serializeing\nfunction checkTopic(topic) {\n    if (topic == null) {\n        return \"null\";\n    }\n    if (hexDataLength(topic) !== 32) {\n        logger$g.throwArgumentError(\"invalid topic\", \"topic\", topic);\n    }\n    return topic.toLowerCase();\n}\nfunction serializeTopics(topics) {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) {\n        topics.pop();\n    }\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            // Only track unique OR-topics\n            const unique = {};\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n            return sorted.join(\"|\");\n        }\n        else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\nfunction deserializeTopics(data) {\n    if (data === \"\") {\n        return [];\n    }\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") {\n            return [];\n        }\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null : topic);\n        });\n        return ((comps.length === 1) ? comps[0] : comps);\n    });\n}\nfunction getEventTag(eventName) {\n    if (typeof (eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n        if (hexDataLength(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n    }\n    else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n    }\n    else if (ForkEvent.isForkEvent(eventName)) {\n        logger$g.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n    }\n    else if (eventName && typeof (eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n    throw new Error(\"invalid event - \" + eventName);\n}\n//////////////////////////////\n// Helper Object\nfunction getTime() {\n    return (new Date()).getTime();\n}\nfunction stall(duration) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n//////////////////////////////\n// Provider Object\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\nconst PollableEvents = [\"block\", \"network\", \"pending\", \"poll\"];\nclass Event {\n    constructor(tag, listener, once) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"listener\", listener);\n        defineReadOnly(this, \"once\", once);\n    }\n    get event() {\n        switch (this.type) {\n            case \"tx\":\n                return this.hash;\n            case \"filter\":\n                return this.filter;\n        }\n        return this.tag;\n    }\n    get type() {\n        return this.tag.split(\":\")[0];\n    }\n    get hash() {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") {\n            return null;\n        }\n        return comps[1];\n    }\n    get filter() {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") {\n            return null;\n        }\n        const address = comps[1];\n        const topics = deserializeTopics(comps[2]);\n        const filter = {};\n        if (topics.length > 0) {\n            filter.topics = topics;\n        }\n        if (address && address !== \"*\") {\n            filter.address = address;\n        }\n        return filter;\n    }\n    pollable() {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos = {\n    \"0\": { symbol: \"btc\", p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\": { symbol: \"ltc\", p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\": { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\": { symbol: \"eth\", ilk: \"eth\" },\n    \"61\": { symbol: \"etc\", ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\nfunction bytes32ify(value) {\n    return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data) {\n    return Base58.encode(concat([data, hexDataSlice(sha256$1(sha256$1(data)), 0, 4)]));\n}\nclass Resolver {\n    constructor(provider, address, name) {\n        defineReadOnly(this, \"provider\", provider);\n        defineReadOnly(this, \"name\", name);\n        defineReadOnly(this, \"address\", provider.formatter.address(address));\n    }\n    _fetchBytes(selector, parameters) {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            // keccak256(\"addr(bytes32,uint256)\")\n            const transaction = {\n                to: this.address,\n                data: hexConcat([selector, namehash(this.name), (parameters || \"0x\")])\n            };\n            try {\n                const result = yield this.provider.call(transaction);\n                if (result === \"0x\") {\n                    return null;\n                }\n                const offset = BigNumber.from(hexDataSlice(result, 0, 32)).toNumber();\n                const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n                return hexDataSlice(result, offset + 32, offset + 32 + length);\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    return null;\n                }\n                return null;\n            }\n        });\n    }\n    _getAddress(coinType, hexBytes) {\n        const coinInfo = coinInfos[String(coinType)];\n        if (coinInfo == null) {\n            logger$g.throwError(`unsupported coin type: ${coinType}`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${coinType})`\n            });\n        }\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n        const bytes = arrayify(hexBytes);\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([[coinInfo.p2pkh], (\"0x\" + p2pkh[2])]));\n                }\n            }\n        }\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([[coinInfo.p2sh], (\"0x\" + p2sh[2])]));\n                }\n            }\n        }\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            }\n            else {\n                version = -1;\n            }\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32.encode(coinInfo.prefix, words);\n            }\n        }\n        return null;\n    }\n    getAddress(coinType) {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            if (coinType == null) {\n                coinType = 60;\n            }\n            // If Ethereum, use the standard `addr(bytes32)`\n            if (coinType === 60) {\n                try {\n                    // keccak256(\"addr(bytes32)\")\n                    const transaction = {\n                        to: this.address,\n                        data: (\"0x3b3b57de\" + namehash(this.name).substring(2))\n                    };\n                    const hexBytes = yield this.provider.call(transaction);\n                    // No address\n                    if (hexBytes === \"0x\" || hexBytes === HashZero) {\n                        return null;\n                    }\n                    return this.provider.formatter.callAddress(hexBytes);\n                }\n                catch (error) {\n                    if (error.code === Logger.errors.CALL_EXCEPTION) {\n                        return null;\n                    }\n                    throw error;\n                }\n            }\n            // keccak256(\"addr(bytes32,uint256\")\n            const hexBytes = yield this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n            // No address\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            // Compute the address\n            const address = this._getAddress(coinType, hexBytes);\n            if (address == null) {\n                logger$g.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: `getAddress(${coinType})`,\n                    coinType: coinType,\n                    data: hexBytes\n                });\n            }\n            return address;\n        });\n    }\n    getContentHash() {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            // keccak256(\"contenthash()\")\n            const hexBytes = yield this._fetchBytes(\"0xbc1c58d1\");\n            // No contenthash\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            // IPFS (CID: 1, Type: DAG-PB)\n            const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n            if (ipfs) {\n                const length = parseInt(ipfs[3], 16);\n                if (ipfs[4].length === length * 2) {\n                    return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n                }\n            }\n            // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n            const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);\n            if (swarm) {\n                if (swarm[1].length === (32 * 2)) {\n                    return \"bzz:/\\/\" + swarm[1];\n                }\n            }\n            return logger$g.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"getContentHash()\",\n                data: hexBytes\n            });\n        });\n    }\n    getText(key) {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            // The key encoded as parameter to fetchBytes\n            let keyBytes = toUtf8Bytes(key);\n            // The nodehash consumes the first slot, so the string pointer targets\n            // offset 64, with the length at offset 64 and data starting at offset 96\n            keyBytes = concat([bytes32ify(64), bytes32ify(keyBytes.length), keyBytes]);\n            // Pad to word-size (32 bytes)\n            if ((keyBytes.length % 32) !== 0) {\n                keyBytes = concat([keyBytes, hexZeroPad(\"0x\", 32 - (key.length % 32))]);\n            }\n            const hexBytes = yield this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            return toUtf8String(hexBytes);\n        });\n    }\n}\nlet defaultFormatter = null;\nlet nextPollId = 1;\nclass BaseProvider extends Provider {\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n    constructor(network) {\n        logger$g.checkNew(new.target, Provider);\n        super();\n        // Events being listened to\n        this._events = [];\n        this._emitted = { block: -2 };\n        this.formatter = new.target.getFormatter();\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        defineReadOnly(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) {\n            network = this.detectNetwork();\n        }\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n        }\n        else {\n            const knownNetwork = getStatic((new.target), \"getNetwork\")(network);\n            if (knownNetwork) {\n                defineReadOnly(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n            }\n            else {\n                logger$g.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n        this._maxInternalBlockNumber = -1024;\n        this._lastBlockNumber = -2;\n        this._pollingInterval = 4000;\n        this._fastQueryDate = 0;\n    }\n    _ready() {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            if (this._network == null) {\n                let network = null;\n                if (this._networkPromise) {\n                    try {\n                        network = yield this._networkPromise;\n                    }\n                    catch (error) { }\n                }\n                // Try the Provider's network detection (this MUST throw if it cannot)\n                if (network == null) {\n                    network = yield this.detectNetwork();\n                }\n                // This should never happen; every Provider sub-class should have\n                // suggested a network by here (or have thrown).\n                if (!network) {\n                    logger$g.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, {});\n                }\n                // Possible this call stacked so do not call defineReadOnly again\n                if (this._network == null) {\n                    if (this.anyNetwork) {\n                        this._network = network;\n                    }\n                    else {\n                        defineReadOnly(this, \"_network\", network);\n                    }\n                    this.emit(\"network\", network, null);\n                }\n            }\n            return this._network;\n        });\n    }\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is refelcted); otherwise this cannot change\n    get ready() {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter() {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n        }\n        return defaultFormatter;\n    }\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network) {\n        return getNetwork((network == null) ? \"homestead\" : network);\n    }\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    _getInternalBlockNumber(maxAge) {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            yield this._ready();\n            // Allowing stale data up to maxAge old\n            if (maxAge > 0) {\n                // While there are pending internal block requests...\n                while (this._internalBlockNumber) {\n                    // ...\"remember\" which fetch we started with\n                    const internalBlockNumber = this._internalBlockNumber;\n                    try {\n                        // Check the result is not too stale\n                        const result = yield internalBlockNumber;\n                        if ((getTime() - result.respTime) <= maxAge) {\n                            return result.blockNumber;\n                        }\n                        // Too old; fetch a new value\n                        break;\n                    }\n                    catch (error) {\n                        // The fetch rejected; if we are the first to get the\n                        // rejection, drop through so we replace it with a new\n                        // fetch; all others blocked will then get that fetch\n                        // which won't match the one they \"remembered\" and loop\n                        if (this._internalBlockNumber === internalBlockNumber) {\n                            break;\n                        }\n                    }\n                }\n            }\n            const reqTime = getTime();\n            const checkInternalBlockNumber = resolveProperties({\n                blockNumber: this.perform(\"getBlockNumber\", {}),\n                networkError: this.getNetwork().then((network) => (null), (error) => (error))\n            }).then(({ blockNumber, networkError }) => {\n                if (networkError) {\n                    // Unremember this bad internal block number\n                    if (this._internalBlockNumber === checkInternalBlockNumber) {\n                        this._internalBlockNumber = null;\n                    }\n                    throw networkError;\n                }\n                const respTime = getTime();\n                blockNumber = BigNumber.from(blockNumber).toNumber();\n                if (blockNumber < this._maxInternalBlockNumber) {\n                    blockNumber = this._maxInternalBlockNumber;\n                }\n                this._maxInternalBlockNumber = blockNumber;\n                this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n                return { blockNumber, reqTime, respTime };\n            });\n            this._internalBlockNumber = checkInternalBlockNumber;\n            // Swallow unhandled exceptions; if needed they are handled else where\n            checkInternalBlockNumber.catch((error) => {\n                // Don't null the dead (rejected) fetch, if it has already been updated\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n            });\n            return (yield checkInternalBlockNumber).blockNumber;\n        });\n    }\n    poll() {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            const pollId = nextPollId++;\n            // Track all running promises, so we can trigger a post-poll once they are complete\n            const runners = [];\n            let blockNumber = null;\n            try {\n                blockNumber = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n            }\n            catch (error) {\n                this.emit(\"error\", error);\n                return;\n            }\n            this._setFastBlockNumber(blockNumber);\n            // Emit a poll event after we have the latest (fast) block number\n            this.emit(\"poll\", pollId, blockNumber);\n            // If the block has not changed, meh.\n            if (blockNumber === this._lastBlockNumber) {\n                this.emit(\"didPoll\", pollId);\n                return;\n            }\n            // First polling cycle, trigger a \"block\" events\n            if (this._emitted.block === -2) {\n                this._emitted.block = blockNumber - 1;\n            }\n            if (Math.abs((this._emitted.block) - blockNumber) > 1000) {\n                logger$g.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${blockNumber})`);\n                this.emit(\"error\", logger$g.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                    blockNumber: blockNumber,\n                    event: \"blockSkew\",\n                    previousBlockNumber: this._emitted.block\n                }));\n                this.emit(\"block\", blockNumber);\n            }\n            else {\n                // Notify all listener for each block that has passed\n                for (let i = this._emitted.block + 1; i <= blockNumber; i++) {\n                    this.emit(\"block\", i);\n                }\n            }\n            // The emitted block was updated, check for obsolete events\n            if (this._emitted.block !== blockNumber) {\n                this._emitted.block = blockNumber;\n                Object.keys(this._emitted).forEach((key) => {\n                    // The block event does not expire\n                    if (key === \"block\") {\n                        return;\n                    }\n                    // The block we were at when we emitted this event\n                    const eventBlockNumber = this._emitted[key];\n                    // We cannot garbage collect pending transactions or blocks here\n                    // They should be garbage collected by the Provider when setting\n                    // \"pending\" events\n                    if (eventBlockNumber === \"pending\") {\n                        return;\n                    }\n                    // Evict any transaction hashes or block hashes over 12 blocks\n                    // old, since they should not return null anyways\n                    if (blockNumber - eventBlockNumber > 12) {\n                        delete this._emitted[key];\n                    }\n                });\n            }\n            // First polling cycle\n            if (this._lastBlockNumber === -2) {\n                this._lastBlockNumber = blockNumber - 1;\n            }\n            // Find all transaction hashes we are waiting on\n            this._events.forEach((event) => {\n                switch (event.type) {\n                    case \"tx\": {\n                        const hash = event.hash;\n                        let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                            if (!receipt || receipt.blockNumber == null) {\n                                return null;\n                            }\n                            this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                            this.emit(hash, receipt);\n                            return null;\n                        }).catch((error) => { this.emit(\"error\", error); });\n                        runners.push(runner);\n                        break;\n                    }\n                    case \"filter\": {\n                        const filter = event.filter;\n                        filter.fromBlock = this._lastBlockNumber + 1;\n                        filter.toBlock = blockNumber;\n                        const runner = this.getLogs(filter).then((logs) => {\n                            if (logs.length === 0) {\n                                return;\n                            }\n                            logs.forEach((log) => {\n                                this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n                                this.emit(filter, log);\n                            });\n                        }).catch((error) => { this.emit(\"error\", error); });\n                        runners.push(runner);\n                        break;\n                    }\n                }\n            });\n            this._lastBlockNumber = blockNumber;\n            // Once all events for this loop have been processed, emit \"didPoll\"\n            Promise.all(runners).then(() => {\n                this.emit(\"didPoll\", pollId);\n            }).catch((error) => { this.emit(\"error\", error); });\n            return;\n        });\n    }\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber) {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) {\n            this.poll();\n        }\n    }\n    get network() {\n        return this._network;\n    }\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    detectNetwork() {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            return logger$g.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"provider.detectNetwork\"\n            });\n        });\n    }\n    getNetwork() {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            const network = yield this._ready();\n            // Make sure we are still connected to the same network; this is\n            // only an external call for backends which can have the underlying\n            // network change spontaneously\n            const currentNetwork = yield this.detectNetwork();\n            if (network.chainId !== currentNetwork.chainId) {\n                // We are allowing network changes, things can get complex fast;\n                // make sure you know what you are doing if you use \"any\"\n                if (this.anyNetwork) {\n                    this._network = currentNetwork;\n                    // Reset all internal block number guards and caches\n                    this._lastBlockNumber = -2;\n                    this._fastBlockNumber = null;\n                    this._fastBlockNumberPromise = null;\n                    this._fastQueryDate = 0;\n                    this._emitted.block = -2;\n                    this._maxInternalBlockNumber = -1024;\n                    this._internalBlockNumber = null;\n                    // The \"network\" event MUST happen before this method resolves\n                    // so any events have a chance to unregister, so we stall an\n                    // additional event loop before returning from /this/ call\n                    this.emit(\"network\", currentNetwork, network);\n                    yield stall(0);\n                    return this._network;\n                }\n                const error = logger$g.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                    event: \"changed\",\n                    network: network,\n                    detectedNetwork: currentNetwork\n                });\n                this.emit(\"error\", error);\n                throw error;\n            }\n            return network;\n        });\n    }\n    get blockNumber() {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber : -1;\n    }\n    get polling() {\n        return (this._poller != null);\n    }\n    set polling(value) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) {\n                            this.poll();\n                        }\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n        }\n        else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n    get pollingInterval() {\n        return this._pollingInterval;\n    }\n    set pollingInterval(value) {\n        if (typeof (value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n        this._pollingInterval = value;\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n    _getFastBlockNumber() {\n        const now = getTime();\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n        return this._fastBlockNumberPromise;\n    }\n    _setFastBlockNumber(blockNumber) {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) {\n            return;\n        }\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n    waitForTransaction(transactionHash, confirmations, timeout) {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            return this._waitForTransaction(transactionHash, (confirmations == null) ? 1 : confirmations, timeout || 0, null);\n        });\n    }\n    _waitForTransaction(transactionHash, confirmations, timeout, replaceable) {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            const receipt = yield this.getTransactionReceipt(transactionHash);\n            // Receipt is already good\n            if ((receipt ? receipt.confirmations : 0) >= confirmations) {\n                return receipt;\n            }\n            // Poll until the receipt is good...\n            return new Promise((resolve, reject) => {\n                const cancelFuncs = [];\n                let done = false;\n                const alreadyDone = function () {\n                    if (done) {\n                        return true;\n                    }\n                    done = true;\n                    cancelFuncs.forEach((func) => { func(); });\n                    return false;\n                };\n                const minedHandler = (receipt) => {\n                    if (receipt.confirmations < confirmations) {\n                        return;\n                    }\n                    if (alreadyDone()) {\n                        return;\n                    }\n                    resolve(receipt);\n                };\n                this.on(transactionHash, minedHandler);\n                cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });\n                if (replaceable) {\n                    let lastBlockNumber = replaceable.startBlock;\n                    let scannedBlock = null;\n                    const replaceHandler = (blockNumber) => __awaiter$6(this, void 0, void 0, function* () {\n                        if (done) {\n                            return;\n                        }\n                        // Wait 1 second; this is only used in the case of a fault, so\n                        // we will trade off a little bit of latency for more consistent\n                        // results and fewer JSON-RPC calls\n                        yield stall(1000);\n                        this.getTransactionCount(replaceable.from).then((nonce) => __awaiter$6(this, void 0, void 0, function* () {\n                            if (done) {\n                                return;\n                            }\n                            if (nonce <= replaceable.nonce) {\n                                lastBlockNumber = blockNumber;\n                            }\n                            else {\n                                // First check if the transaction was mined\n                                {\n                                    const mined = yield this.getTransaction(transactionHash);\n                                    if (mined && mined.blockNumber != null) {\n                                        return;\n                                    }\n                                }\n                                // First time scanning. We start a little earlier for some\n                                // wiggle room here to handle the eventually consistent nature\n                                // of blockchain (e.g. the getTransactionCount was for a\n                                // different block)\n                                if (scannedBlock == null) {\n                                    scannedBlock = lastBlockNumber - 3;\n                                    if (scannedBlock < replaceable.startBlock) {\n                                        scannedBlock = replaceable.startBlock;\n                                    }\n                                }\n                                while (scannedBlock <= blockNumber) {\n                                    if (done) {\n                                        return;\n                                    }\n                                    const block = yield this.getBlockWithTransactions(scannedBlock);\n                                    for (let ti = 0; ti < block.transactions.length; ti++) {\n                                        const tx = block.transactions[ti];\n                                        // Successfully mined!\n                                        if (tx.hash === transactionHash) {\n                                            return;\n                                        }\n                                        // Matches our transaction from and nonce; its a replacement\n                                        if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                                            if (done) {\n                                                return;\n                                            }\n                                            // Get the receipt of the replacement\n                                            const receipt = yield this.waitForTransaction(tx.hash, confirmations);\n                                            // Already resolved or rejected (prolly a timeout)\n                                            if (alreadyDone()) {\n                                                return;\n                                            }\n                                            // The reason we were replaced\n                                            let reason = \"replaced\";\n                                            if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                                reason = \"repriced\";\n                                            }\n                                            else if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                                reason = \"cancelled\";\n                                            }\n                                            // Explain why we were replaced\n                                            reject(logger$g.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                                                cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                                reason,\n                                                replacement: this._wrapTransaction(tx),\n                                                hash: transactionHash,\n                                                receipt\n                                            }));\n                                            return;\n                                        }\n                                    }\n                                    scannedBlock++;\n                                }\n                            }\n                            if (done) {\n                                return;\n                            }\n                            this.once(\"block\", replaceHandler);\n                        }), (error) => {\n                            if (done) {\n                                return;\n                            }\n                            this.once(\"block\", replaceHandler);\n                        });\n                    });\n                    if (done) {\n                        return;\n                    }\n                    this.once(\"block\", replaceHandler);\n                    cancelFuncs.push(() => {\n                        this.removeListener(\"block\", replaceHandler);\n                    });\n                }\n                if (typeof (timeout) === \"number\" && timeout > 0) {\n                    const timer = setTimeout(() => {\n                        if (alreadyDone()) {\n                            return;\n                        }\n                        reject(logger$g.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, { timeout: timeout }));\n                    }, timeout);\n                    if (timer.unref) {\n                        timer.unref();\n                    }\n                    cancelFuncs.push(() => { clearTimeout(timer); });\n                }\n            });\n        });\n    }\n    getBlockNumber() {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            return this._getInternalBlockNumber(0);\n        });\n    }\n    getGasPrice() {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const result = yield this.perform(\"getGasPrice\", {});\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger$g.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getGasPrice\",\n                    result, error\n                });\n            }\n        });\n    }\n    getBalance(addressOrName, blockTag) {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getBalance\", params);\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger$g.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getBalance\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getTransactionCount(addressOrName, blockTag) {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getTransactionCount\", params);\n            try {\n                return BigNumber.from(result).toNumber();\n            }\n            catch (error) {\n                return logger$g.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getTransactionCount\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getCode(addressOrName, blockTag) {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getCode\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger$g.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getCode\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getStorageAt(addressOrName, position, blockTag) {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag),\n                position: Promise.resolve(position).then((p) => hexValue(p))\n            });\n            const result = yield this.perform(\"getStorageAt\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger$g.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getStorageAt\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx, hash, startBlock) {\n        if (hash != null && hexDataLength(hash) !== 32) {\n            throw new Error(\"invalid response - sendTransaction\");\n        }\n        const result = tx;\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger$g.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n        result.wait = (confirms, timeout) => __awaiter$6(this, void 0, void 0, function* () {\n            if (confirms == null) {\n                confirms = 1;\n            }\n            if (timeout == null) {\n                timeout = 0;\n            }\n            // Get the details to detect replacement\n            let replacement = undefined;\n            if (confirms !== 0 && startBlock != null) {\n                replacement = {\n                    data: tx.data,\n                    from: tx.from,\n                    nonce: tx.nonce,\n                    to: tx.to,\n                    value: tx.value,\n                    startBlock\n                };\n            }\n            const receipt = yield this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n            if (receipt == null && confirms === 0) {\n                return null;\n            }\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n            if (receipt.status === 0) {\n                logger$g.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        });\n        return result;\n    }\n    sendTransaction(signedTransaction) {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const hexTx = yield Promise.resolve(signedTransaction).then(t => hexlify(t));\n            const tx = this.formatter.transaction(signedTransaction);\n            if (tx.confirmations == null) {\n                tx.confirmations = 0;\n            }\n            const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            try {\n                const hash = yield this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n                return this._wrapTransaction(tx, hash, blockNumber);\n            }\n            catch (error) {\n                error.transaction = tx;\n                error.transactionHash = tx.hash;\n                throw error;\n            }\n        });\n    }\n    _getTransactionRequest(transaction) {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            const values = yield transaction;\n            const tx = {};\n            [\"from\", \"to\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v) : null));\n            });\n            [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v) : null));\n            });\n            [\"type\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v : null));\n            });\n            if (values.accessList) {\n                tx.accessList = this.formatter.accessList(values.accessList);\n            }\n            [\"data\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v) : null));\n            });\n            return this.formatter.transactionRequest(yield resolveProperties(tx));\n        });\n    }\n    _getFilter(filter) {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            filter = yield filter;\n            const result = {};\n            if (filter.address != null) {\n                result.address = this._getAddress(filter.address);\n            }\n            [\"blockHash\", \"topics\"].forEach((key) => {\n                if (filter[key] == null) {\n                    return;\n                }\n                result[key] = filter[key];\n            });\n            [\"fromBlock\", \"toBlock\"].forEach((key) => {\n                if (filter[key] == null) {\n                    return;\n                }\n                result[key] = this._getBlockTag(filter[key]);\n            });\n            return this.formatter.filter(yield resolveProperties(result));\n        });\n    }\n    call(transaction, blockTag) {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                transaction: this._getTransactionRequest(transaction),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"call\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger$g.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"call\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    estimateGas(transaction) {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                transaction: this._getTransactionRequest(transaction)\n            });\n            const result = yield this.perform(\"estimateGas\", params);\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger$g.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"estimateGas\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    _getAddress(addressOrName) {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            const address = yield this.resolveName(addressOrName);\n            if (address == null) {\n                logger$g.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: `resolveName(${JSON.stringify(addressOrName)})`\n                });\n            }\n            return address;\n        });\n    }\n    _getBlock(blockHashOrBlockTag, includeTransactions) {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            blockHashOrBlockTag = yield blockHashOrBlockTag;\n            // If blockTag is a number (not \"latest\", etc), this is the block number\n            let blockNumber = -128;\n            const params = {\n                includeTransactions: !!includeTransactions\n            };\n            if (isHexString(blockHashOrBlockTag, 32)) {\n                params.blockHash = blockHashOrBlockTag;\n            }\n            else {\n                try {\n                    params.blockTag = this.formatter.blockTag(yield this._getBlockTag(blockHashOrBlockTag));\n                    if (isHexString(params.blockTag)) {\n                        blockNumber = parseInt(params.blockTag.substring(2), 16);\n                    }\n                }\n                catch (error) {\n                    logger$g.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n                }\n            }\n            return poll(() => __awaiter$6(this, void 0, void 0, function* () {\n                const block = yield this.perform(\"getBlock\", params);\n                // Block was not found\n                if (block == null) {\n                    // For blockhashes, if we didn't say it existed, that blockhash may\n                    // not exist. If we did see it though, perhaps from a log, we know\n                    // it exists, and this node is just not caught up yet.\n                    if (params.blockHash != null) {\n                        if (this._emitted[\"b:\" + params.blockHash] == null) {\n                            return null;\n                        }\n                    }\n                    // For block tags, if we are asking for a future block, we return null\n                    if (params.blockTag != null) {\n                        if (blockNumber > this._emitted.block) {\n                            return null;\n                        }\n                    }\n                    // Retry on the next block\n                    return undefined;\n                }\n                // Add transactions\n                if (includeTransactions) {\n                    let blockNumber = null;\n                    for (let i = 0; i < block.transactions.length; i++) {\n                        const tx = block.transactions[i];\n                        if (tx.blockNumber == null) {\n                            tx.confirmations = 0;\n                        }\n                        else if (tx.confirmations == null) {\n                            if (blockNumber == null) {\n                                blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                            }\n                            // Add the confirmations using the fast block number (pessimistic)\n                            let confirmations = (blockNumber - tx.blockNumber) + 1;\n                            if (confirmations <= 0) {\n                                confirmations = 1;\n                            }\n                            tx.confirmations = confirmations;\n                        }\n                    }\n                    const blockWithTxs = this.formatter.blockWithTransactions(block);\n                    blockWithTxs.transactions = blockWithTxs.transactions.map((tx) => this._wrapTransaction(tx));\n                    return blockWithTxs;\n                }\n                return this.formatter.block(block);\n            }), { oncePoll: this });\n        });\n    }\n    getBlock(blockHashOrBlockTag) {\n        return (this._getBlock(blockHashOrBlockTag, false));\n    }\n    getBlockWithTransactions(blockHashOrBlockTag) {\n        return (this._getBlock(blockHashOrBlockTag, true));\n    }\n    getTransaction(transactionHash) {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            transactionHash = yield transactionHash;\n            const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n            return poll(() => __awaiter$6(this, void 0, void 0, function* () {\n                const result = yield this.perform(\"getTransaction\", params);\n                if (result == null) {\n                    if (this._emitted[\"t:\" + transactionHash] == null) {\n                        return null;\n                    }\n                    return undefined;\n                }\n                const tx = this.formatter.transactionResponse(result);\n                if (tx.blockNumber == null) {\n                    tx.confirmations = 0;\n                }\n                else if (tx.confirmations == null) {\n                    const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                    // Add the confirmations using the fast block number (pessimistic)\n                    let confirmations = (blockNumber - tx.blockNumber) + 1;\n                    if (confirmations <= 0) {\n                        confirmations = 1;\n                    }\n                    tx.confirmations = confirmations;\n                }\n                return this._wrapTransaction(tx);\n            }), { oncePoll: this });\n        });\n    }\n    getTransactionReceipt(transactionHash) {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            transactionHash = yield transactionHash;\n            const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n            return poll(() => __awaiter$6(this, void 0, void 0, function* () {\n                const result = yield this.perform(\"getTransactionReceipt\", params);\n                if (result == null) {\n                    if (this._emitted[\"t:\" + transactionHash] == null) {\n                        return null;\n                    }\n                    return undefined;\n                }\n                // \"geth-etc\" returns receipts before they are ready\n                if (result.blockHash == null) {\n                    return undefined;\n                }\n                const receipt = this.formatter.receipt(result);\n                if (receipt.blockNumber == null) {\n                    receipt.confirmations = 0;\n                }\n                else if (receipt.confirmations == null) {\n                    const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                    // Add the confirmations using the fast block number (pessimistic)\n                    let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                    if (confirmations <= 0) {\n                        confirmations = 1;\n                    }\n                    receipt.confirmations = confirmations;\n                }\n                return receipt;\n            }), { oncePoll: this });\n        });\n    }\n    getLogs(filter) {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({ filter: this._getFilter(filter) });\n            const logs = yield this.perform(\"getLogs\", params);\n            logs.forEach((log) => {\n                if (log.removed == null) {\n                    log.removed = false;\n                }\n            });\n            return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n        });\n    }\n    getEtherPrice() {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            return this.perform(\"getEtherPrice\", {});\n        });\n    }\n    _getBlockTag(blockTag) {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            blockTag = yield blockTag;\n            if (typeof (blockTag) === \"number\" && blockTag < 0) {\n                if (blockTag % 1) {\n                    logger$g.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n                }\n                let blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                blockNumber += blockTag;\n                if (blockNumber < 0) {\n                    blockNumber = 0;\n                }\n                return this.formatter.blockTag(blockNumber);\n            }\n            return this.formatter.blockTag(blockTag);\n        });\n    }\n    getResolver(name) {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            try {\n                const address = yield this._getResolver(name);\n                if (address == null) {\n                    return null;\n                }\n                return new Resolver(this, address, name);\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    return null;\n                }\n                return null;\n            }\n        });\n    }\n    _getResolver(name) {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            // Get the resolver from the blockchain\n            const network = yield this.getNetwork();\n            // No ENS...\n            if (!network.ensAddress) {\n                logger$g.throwError(\"network does not support ENS\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"ENS\", network: network.name });\n            }\n            // keccak256(\"resolver(bytes32)\")\n            const transaction = {\n                to: network.ensAddress,\n                data: (\"0x0178b8bf\" + namehash(name).substring(2))\n            };\n            try {\n                return this.formatter.callAddress(yield this.call(transaction));\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    return null;\n                }\n                throw error;\n            }\n        });\n    }\n    resolveName(name) {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            name = yield name;\n            // If it is already an address, nothing to resolve\n            try {\n                return Promise.resolve(this.formatter.address(name));\n            }\n            catch (error) {\n                // If is is a hexstring, the address is bad (See #694)\n                if (isHexString(name)) {\n                    throw error;\n                }\n            }\n            if (typeof (name) !== \"string\") {\n                logger$g.throwArgumentError(\"invalid ENS name\", \"name\", name);\n            }\n            // Get the addr from the resovler\n            const resolver = yield this.getResolver(name);\n            if (!resolver) {\n                return null;\n            }\n            return yield resolver.getAddress();\n        });\n    }\n    lookupAddress(address) {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            address = yield address;\n            address = this.formatter.address(address);\n            const reverseName = address.substring(2).toLowerCase() + \".addr.reverse\";\n            const resolverAddress = yield this._getResolver(reverseName);\n            if (!resolverAddress) {\n                return null;\n            }\n            // keccak(\"name(bytes32)\")\n            let bytes = arrayify(yield this.call({\n                to: resolverAddress,\n                data: (\"0x691f3431\" + namehash(reverseName).substring(2))\n            }));\n            // Strip off the dynamic string pointer (0x20)\n            if (bytes.length < 32 || !BigNumber.from(bytes.slice(0, 32)).eq(32)) {\n                return null;\n            }\n            bytes = bytes.slice(32);\n            // Not a length-prefixed string\n            if (bytes.length < 32) {\n                return null;\n            }\n            // Get the length of the string (from the length-prefix)\n            const length = BigNumber.from(bytes.slice(0, 32)).toNumber();\n            bytes = bytes.slice(32);\n            // Length longer than available data\n            if (length > bytes.length) {\n                return null;\n            }\n            const name = toUtf8String(bytes.slice(0, length));\n            // Make sure the reverse record matches the foward record\n            const addr = yield this.resolveName(name);\n            if (addr != address) {\n                return null;\n            }\n            return name;\n        });\n    }\n    perform(method, params) {\n        return logger$g.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    }\n    _startEvent(event) {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n    _stopEvent(event) {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n    _addEventListener(eventName, listener, once) {\n        const event = new Event(getEventTag(eventName), listener, once);\n        this._events.push(event);\n        this._startEvent(event);\n        return this;\n    }\n    on(eventName, listener) {\n        return this._addEventListener(eventName, listener, false);\n    }\n    once(eventName, listener) {\n        return this._addEventListener(eventName, listener, true);\n    }\n    emit(eventName, ...args) {\n        let result = false;\n        let stopped = [];\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) {\n                return true;\n            }\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n            result = true;\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n            return true;\n        });\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return result;\n    }\n    listenerCount(eventName) {\n        if (!eventName) {\n            return this._events.length;\n        }\n        let eventTag = getEventTag(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n    listeners(eventName) {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n        let eventTag = getEventTag(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n    off(eventName, listener) {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n        const stopped = [];\n        let found = false;\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) {\n                return true;\n            }\n            if (found) {\n                return true;\n            }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return this;\n    }\n    removeAllListeners(eventName) {\n        let stopped = [];\n        if (eventName == null) {\n            stopped = this._events;\n            this._events = [];\n        }\n        else {\n            const eventTag = getEventTag(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) {\n                    return true;\n                }\n                stopped.push(event);\n                return false;\n            });\n        }\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return this;\n    }\n}\n//# sourceMappingURL=base-provider.js.map\n\nvar __awaiter$7 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst logger$h = new Logger(version$f);\nconst errorGas = [\"call\", \"estimateGas\"];\nfunction checkError(method, error, params) {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n        if (e && e.message.match(\"reverted\") && isHexString(e.data)) {\n            return e.data;\n        }\n        logger$h.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n            error, data: \"0x\"\n        });\n    }\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof (error.error.message) === \"string\") {\n        message = error.error.message;\n    }\n    else if (typeof (error.body) === \"string\") {\n        message = error.body;\n    }\n    else if (typeof (error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n    const transaction = params.transaction || params.signedTransaction;\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit/)) {\n        logger$h.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n    // \"nonce too low\"\n    if (message.match(/nonce too low/)) {\n        logger$h.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced/)) {\n        logger$h.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/)) {\n        logger$h.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) {\n        logger$h.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n    throw error;\n}\nfunction timer(timeout) {\n    return new Promise(function (resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\nfunction getResult(payload) {\n    if (payload.error) {\n        // @TODO: not any\n        const error = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n    return payload.result;\n}\nfunction getLowerCase(value) {\n    if (value) {\n        return value.toLowerCase();\n    }\n    return value;\n}\nconst _constructorGuard$1 = {};\nclass JsonRpcSigner extends Signer {\n    constructor(constructorGuard, provider, addressOrIndex) {\n        logger$h.checkNew(new.target, JsonRpcSigner);\n        super();\n        if (constructorGuard !== _constructorGuard$1) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n        defineReadOnly(this, \"provider\", provider);\n        if (addressOrIndex == null) {\n            addressOrIndex = 0;\n        }\n        if (typeof (addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n        }\n        else if (typeof (addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n        }\n        else {\n            logger$h.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n    connect(provider) {\n        return logger$h.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n    connectUnchecked() {\n        return new UncheckedJsonRpcSigner(_constructorGuard$1, this.provider, this._address || this._index);\n    }\n    getAddress() {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger$h.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index]);\n        });\n    }\n    sendUncheckedTransaction(transaction) {\n        transaction = shallowCopy(transaction);\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) {\n                address = address.toLowerCase();\n            }\n            return address;\n        });\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then((to) => __awaiter$7(this, void 0, void 0, function* () {\n                if (to == null) {\n                    return null;\n                }\n                const address = yield this.provider.resolveName(to);\n                if (address == null) {\n                    logger$h.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            }));\n        }\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger$h.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            }\n            else {\n                tx.from = sender;\n            }\n            const hexTx = this.provider.constructor.hexlifyTransaction(tx, { from: true });\n            return this.provider.send(\"eth_sendTransaction\", [hexTx]).then((hash) => {\n                return hash;\n            }, (error) => {\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n    signTransaction(transaction) {\n        return logger$h.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n    sendTransaction(transaction) {\n        return __awaiter$7(this, void 0, void 0, function* () {\n            // This cannot be mined any earlier than any recent block\n            const blockNumber = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n            // Send the transaction\n            const hash = yield this.sendUncheckedTransaction(transaction);\n            try {\n                // Unfortunately, JSON-RPC only provides and opaque transaction hash\n                // for a response, and we need the actual transaction, so we poll\n                // for it; it should show up very quickly\n                return yield poll(() => __awaiter$7(this, void 0, void 0, function* () {\n                    const tx = yield this.provider.getTransaction(hash);\n                    if (tx === null) {\n                        return undefined;\n                    }\n                    return this.provider._wrapTransaction(tx, hash, blockNumber);\n                }), { oncePoll: this.provider });\n            }\n            catch (error) {\n                error.transactionHash = hash;\n                throw error;\n            }\n        });\n    }\n    signMessage(message) {\n        return __awaiter$7(this, void 0, void 0, function* () {\n            const data = ((typeof (message) === \"string\") ? toUtf8Bytes(message) : message);\n            const address = yield this.getAddress();\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return yield this.provider.send(\"eth_sign\", [address.toLowerCase(), hexlify(data)]);\n        });\n    }\n    _signTypedData(domain, types, value) {\n        return __awaiter$7(this, void 0, void 0, function* () {\n            // Populate any ENS names (in-place)\n            const populated = yield TypedDataEncoder.resolveNames(domain, types, value, (name) => {\n                return this.provider.resolveName(name);\n            });\n            const address = yield this.getAddress();\n            return yield this.provider.send(\"eth_signTypedData_v4\", [\n                address.toLowerCase(),\n                JSON.stringify(TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n            ]);\n        });\n    }\n    unlock(password) {\n        return __awaiter$7(this, void 0, void 0, function* () {\n            const provider = this.provider;\n            const address = yield this.getAddress();\n            return provider.send(\"personal_unlockAccount\", [address.toLowerCase(), password, null]);\n        });\n    }\n}\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction) {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return {\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\nconst allowedTransactionKeys$1 = {\n    chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n};\nclass JsonRpcProvider extends BaseProvider {\n    constructor(url, network) {\n        logger$h.checkNew(new.target, JsonRpcProvider);\n        let networkOrReady = network;\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n        super(networkOrReady);\n        // Default URL\n        if (!url) {\n            url = getStatic(this.constructor, \"defaultUrl\")();\n        }\n        if (typeof (url) === \"string\") {\n            defineReadOnly(this, \"connection\", Object.freeze({\n                url: url\n            }));\n        }\n        else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n        this._nextId = 42;\n    }\n    get _cache() {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = {};\n        }\n        return this._eventLoopCache;\n    }\n    static defaultUrl() {\n        return \"http:/\\/localhost:8545\";\n    }\n    detectNetwork() {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n    _uncachedDetectNetwork() {\n        return __awaiter$7(this, void 0, void 0, function* () {\n            yield timer(0);\n            let chainId = null;\n            try {\n                chainId = yield this.send(\"eth_chainId\", []);\n            }\n            catch (error) {\n                try {\n                    chainId = yield this.send(\"net_version\", []);\n                }\n                catch (error) { }\n            }\n            if (chainId != null) {\n                const getNetwork = getStatic(this.constructor, \"getNetwork\");\n                try {\n                    return getNetwork(BigNumber.from(chainId).toNumber());\n                }\n                catch (error) {\n                    return logger$h.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                        chainId: chainId,\n                        event: \"invalidNetwork\",\n                        serverError: error\n                    });\n                }\n            }\n            return logger$h.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                event: \"noNetwork\"\n            });\n        });\n    }\n    getSigner(addressOrIndex) {\n        return new JsonRpcSigner(_constructorGuard$1, this, addressOrIndex);\n    }\n    getUncheckedSigner(addressOrIndex) {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n    listAccounts() {\n        return this.send(\"eth_accounts\", []).then((accounts) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n    send(method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([\"eth_chainId\", \"eth_blockNumber\"].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n            return result;\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n            throw error;\n        });\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n        return result;\n    }\n    prepareRequest(method, params) {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [\"eth_blockNumber\", []];\n            case \"getGasPrice\":\n                return [\"eth_gasPrice\", []];\n            case \"getBalance\":\n                return [\"eth_getBalance\", [getLowerCase(params.address), params.blockTag]];\n            case \"getTransactionCount\":\n                return [\"eth_getTransactionCount\", [getLowerCase(params.address), params.blockTag]];\n            case \"getCode\":\n                return [\"eth_getCode\", [getLowerCase(params.address), params.blockTag]];\n            case \"getStorageAt\":\n                return [\"eth_getStorageAt\", [getLowerCase(params.address), params.position, params.blockTag]];\n            case \"sendTransaction\":\n                return [\"eth_sendRawTransaction\", [params.signedTransaction]];\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [\"eth_getBlockByNumber\", [params.blockTag, !!params.includeTransactions]];\n                }\n                else if (params.blockHash) {\n                    return [\"eth_getBlockByHash\", [params.blockHash, !!params.includeTransactions]];\n                }\n                return null;\n            case \"getTransaction\":\n                return [\"eth_getTransactionByHash\", [params.transactionHash]];\n            case \"getTransactionReceipt\":\n                return [\"eth_getTransactionReceipt\", [params.transactionHash]];\n            case \"call\": {\n                const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_call\", [hexlifyTransaction(params.transaction, { from: true }), params.blockTag]];\n            }\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_estimateGas\", [hexlifyTransaction(params.transaction, { from: true })]];\n            }\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [\"eth_getLogs\", [params.filter]];\n        }\n        return null;\n    }\n    perform(method, params) {\n        return __awaiter$7(this, void 0, void 0, function* () {\n            // Legacy networks do not like the type field being passed along (which\n            // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n            if (method === \"call\" || method === \"estimateGas\") {\n                const tx = params.transaction;\n                if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                    // If there are no EIP-1559 properties, it might be non-EIP-a559\n                    if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                        const feeData = yield this.getFeeData();\n                        if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                            // Network doesn't know about EIP-1559 (and hence type)\n                            params = shallowCopy(params);\n                            params.transaction = shallowCopy(tx);\n                            delete params.transaction.type;\n                        }\n                    }\n                }\n            }\n            const args = this.prepareRequest(method, params);\n            if (args == null) {\n                logger$h.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n            }\n            try {\n                return yield this.send(args[0], args[1]);\n            }\n            catch (error) {\n                return checkError(method, error, params);\n            }\n        });\n    }\n    _startEvent(event) {\n        if (event.tag === \"pending\") {\n            this._startPending();\n        }\n        super._startEvent(event);\n    }\n    _startPending() {\n        if (this._pendingFilter != null) {\n            return;\n        }\n        const self = this;\n        const pendingFilter = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n        pendingFilter.then(function (filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [filterId]).then(function (hashes) {\n                    if (self._pendingFilter != pendingFilter) {\n                        return null;\n                    }\n                    let seq = Promise.resolve();\n                    hashes.forEach(function (hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function () {\n                            return self.getTransaction(hash).then(function (tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n                    return seq.then(function () {\n                        return timer(1000);\n                    });\n                }).then(function () {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [filterId]);\n                        return;\n                    }\n                    setTimeout(function () { poll(); }, 0);\n                    return null;\n                }).catch((error) => { });\n            }\n            poll();\n            return filterId;\n        }).catch((error) => { });\n    }\n    _stopEvent(event) {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction, allowExtra) {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys$1);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) {\n                    allowed[key] = true;\n                }\n            }\n        }\n        checkProperties(transaction, allowed);\n        const result = {};\n        // Some nodes (INFURA ropsten; INFURA mainnet is fine) do not like leading zeros.\n        [\"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            const value = hexValue(transaction[key]);\n            if (key === \"gasLimit\") {\n                key = \"gas\";\n            }\n            result[key] = value;\n        });\n        [\"from\", \"to\", \"data\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            result[key] = hexlify(transaction[key]);\n        });\n        if (transaction.accessList) {\n            result[\"accessList\"] = accessListify(transaction.accessList);\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=json-rpc-provider.js.map\n\nconst byoaContractAddress = `0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512`;\nconst providerNetwork = `http://localhost:8545`;\nconst jrpcProvider = new JsonRpcProvider('https://eth-mainnet.alchemyapi.io/v2/Uo717K-DDAxlSM5gXM-zgv678k0aMZH5', 'mainnet');\nwindow.byoa = {\n  context: {\n    jrpcProvider: jrpcProvider,\n    dataPipeFn: data => {\n      return data;\n    },\n    account: {\n      address: null\n    }\n  }\n};\nconst useStyles = makeStyles({\n  root: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    minWidth: '100vw',\n    minHeight: '100vh',\n    background: 'rgba(50,0,0,0.25)',\n    pointerEvents: 'none'\n  },\n  speedDial: {\n    position: 'fixed',\n    bottom: 20,\n    right: 20,\n    zIndex: 1000000000\n  },\n  byoaButton: {}\n});\nconst providerOptions = {\n  walletconnect: {\n    display: {\n      name: \"Mobile\"\n    },\n    package: WalletConnectProvider,\n    options: {\n      infuraId: \"6430aa46e9354b91bea44e464af71f7a\"\n    }\n  }\n};\nconst web3Modal = new Web3Modal({\n  network: providerNetwork,\n  cacheProvider: true,\n  disableInjectedProvider: false,\n  providerOptions\n});\nconst ByoaSDK = props => {\n  const classes = useStyles();\n  const [translateDial, setTranslateDial] = useState({\n    x: 0,\n    y: 0\n  });\n  const [dialDirection, setDialDirection] = useState(\"up\");\n  const [openDial, setOpenDial] = useState(false);\n  const [provider, setProvider] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const [accountAddress, setAccountAddress] = useState(null);\n  const [installedApps, setInstalledApps] = useState([]);\n\n  const connectWallet = async () => {\n    try {\n      let p = provider;\n\n      if (p === null) {\n        p = await web3Modal.connect();\n\n        if (p === null) {\n          throw new Error('Unable to connect provider to modal');\n        }\n\n        p.on('accountsChanged', e => {\n          console.log(e);\n          disconnectWallet();\n        });\n        p.on(\"chainChanged\", chainId => {\n          console.log(\"chain \" + chainId);\n        });\n        setProvider(p);\n      }\n\n      let w3 = web3;\n\n      if (w3 === null) {\n        w3 = new Web3(p);\n\n        if (w3 === null) {\n          throw new Error('Unable to connect web3');\n        }\n\n        setWeb3(w3);\n      }\n\n      const accounts = await p.request({\n        method: 'eth_accounts'\n      });\n\n      if (accounts.length > 0) {\n        setAccountAddress(accounts[0]);\n        setTimeout(async () => {\n          refreshMyApps(accounts[0]);\n        }, 2000);\n      }\n    } catch (error) {\n      console.log(error);\n      alert('Unable to connect wallet. Please try again.');\n    }\n  };\n\n  const disconnectWallet = async () => {\n    await web3Modal.clearCachedProvider();\n    setProvider(null);\n    setAccountAddress(null);\n  };\n\n  const getTokenMetadata = async uri => {\n    return new Promise(resolve => {\n      resolve({\n        meta: uri,\n        image: \"ipfs://QmYoSTehmdFUnSYCFrYdvSrEtNGy9U5gWEfroCTMGecHKw/0.png\",\n        byoa: {\n          browser: {\n            uri: \"http://localhost:3000/scripts/example1.js\",\n            target: \"host\"\n          }\n        }\n      });\n    });\n  };\n\n  const transformIPFSToPinned = ipfsURI => {\n    return `${ipfsURI}`;\n  };\n\n  const refreshMyApps = async addressHelper => {\n    let w3 = new Web3(providerNetwork);\n\n    try {\n      let contract = new w3.eth.Contract(abi$1.abi, byoaContractAddress);\n      let myTokenIds = await contract.methods.walletOfOwner(accountAddress ? accountAddress : addressHelper).call();\n      console.log(myTokenIds);\n      let appLUT = {};\n      let allInstalls = [];\n\n      for (var i = 0; i < myTokenIds.length; i++) {\n        let tid = parseInt(myTokenIds[i]);\n        let appIdForToken = await contract.methods.getAppIdByTokenId(tid).call();\n        let directTokenURI = await contract.methods.tokenURI(tid).call();\n        let tokenMeta = await getTokenMetadata(directTokenURI);\n\n        if (appLUT[appIdForToken] !== null) {\n          let appDetails = await contract.methods.getAppDetailsById(parseInt(appIdForToken)).call();\n          appLUT[appIdForToken] = {\n            id: appIdForToken,\n            name: appDetails[0],\n            description: appDetails[1],\n            tokenURI: appDetails[2],\n            owner: appDetails[3],\n            price: parseInt(appDetails[4]),\n            address: byoaContractAddress,\n            version: 'beta v0.1'\n          };\n        }\n\n        let ia = {\n          id: tid,\n          tokenURI: directTokenURI,\n          app: appLUT[appIdForToken],\n          imageURI: tokenMeta.image,\n          byoaDetails: {\n            uri: tokenMeta.byoa.browser.uri,\n            target: tokenMeta.byoa.browser.target\n          }\n        };\n        allInstalls.push(ia);\n      }\n\n      console.log(allInstalls);\n      setInstalledApps(allInstalls);\n    } catch (error) {\n      console.log(`Error fetching apps: ${error}`);\n    }\n  };\n\n  return createElement(Box, {\n    className: classes.root\n  }, createElement(Container, {\n    className: classes.speedDial\n  }, createElement(DragMove, {\n    onDragMove: e => {\n      setTranslateDial({\n        x: translateDial.x + e.movementX,\n        y: translateDial.y + e.movementY\n      });\n\n      if (e.clientY < 200) {\n        if (dialDirection !== \"down\") setDialDirection(\"down\");\n      }\n\n      if (e.clientY > 200) {\n        if (dialDirection !== \"up\") setDialDirection(\"up\");\n      }\n    }\n  }, createElement(SpeedDial, {\n    style: {\n      transform: `translateX(${translateDial.x}px) translateY(${translateDial.y}px)`\n    },\n    ariaLabel: \"BYOA Speed Dial\",\n    hidden: false,\n    icon: createElement(Typography, {\n      className: classes.byoaButton\n    }, \"RUN\"),\n    open: openDial,\n    onOpen: () => {\n      setOpenDial(true);\n    },\n    onClose: () => {\n      setOpenDial(false);\n    },\n    onClick: () => {},\n    direction: dialDirection\n  }, createElement(SpeedDialAction, {\n    key: 'sda-connect-wallet',\n    icon: createElement(AccountBalanceWalletIcon, null),\n    tooltipTitle: 'Connect Wallet',\n    onClick: () => {\n      connectWallet();\n    }\n  }), installedApps.map((installedApp, i) => createElement(SpeedDialAction, {\n    key: `sd-action-${installedApp.id}-${i}`,\n    icon: createElement(PetsIcon, null),\n    tooltipTitle: `${installedApp.app.name} (#${installedApp.id})`,\n    onClick: () => {\n      let scriptID = `byoa-${installedApp.id}-${installedApp.app.id}`;\n      const existingApp = document.getElementById(scriptID);\n\n      if (!existingApp) {\n        const script = document.createElement('script');\n        script.src = transformIPFSToPinned(installedApp.byoaDetails.uri);\n        script.id = scriptID;\n\n        if (installedApp.byoaDetails.target == \"host\") {\n          document.body.appendChild(script);\n\n          script.onload = () => {\n            console.log('loaded script');\n          };\n        }\n      }\n    }\n  }))))));\n};\n\nexport { ByoaSDK };\n//# sourceMappingURL=index.modern.js.map\n"]},"metadata":{},"sourceType":"module"}