{"ast":null,"code":"import { makeStyles, Box, Container, Typography } from '@material-ui/core';\nimport { SpeedDial, SpeedDialAction } from '@material-ui/lab';\nimport React__default, { useState, createElement } from 'react';\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\nimport WalletConnectProvider from '@walletconnect/web3-provider';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport Web3 from 'web3';\nimport Web3Modal from 'web3modal';\n\nfunction DragMove(props) {\n  const {\n    onPointerDown,\n    onPointerUp,\n    onPointerMove,\n    onDragMove,\n    children,\n    style,\n    className\n  } = props;\n  const [isDragging, setIsDragging] = useState(false);\n\n  const handlePointerDown = e => {\n    setIsDragging(true);\n    onPointerDown(e);\n  };\n\n  const handlePointerUp = e => {\n    setIsDragging(false);\n    onPointerUp(e);\n  };\n\n  const handlePointerMove = e => {\n    if (isDragging) onDragMove(e);\n    onPointerMove(e);\n  };\n\n  return React__default.createElement(\"div\", {\n    onPointerDown: handlePointerDown,\n    onPointerUp: handlePointerUp,\n    onPointerMove: handlePointerMove,\n    style: style,\n    className: className\n  }, children);\n}\n\nDragMove.defaultProps = {\n  onPointerDown: () => {},\n  onPointerUp: () => {},\n  onPointerMove: () => {}\n};\nvar _format = \"hh-sol-artifact-1\";\nvar contractName = \"Byoa\";\nvar sourceName = \"contracts/byoa.sol\";\nvar abi = [{\n  inputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"constructor\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"address\",\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    internalType: \"address\",\n    name: \"approved\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    internalType: \"uint256\",\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  name: \"Approval\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"address\",\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    internalType: \"address\",\n    name: \"operator\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    internalType: \"bool\",\n    name: \"approved\",\n    type: \"bool\"\n  }],\n  name: \"ApprovalForAll\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"bytes32\",\n    name: \"role\",\n    type: \"bytes32\"\n  }, {\n    indexed: true,\n    internalType: \"bytes32\",\n    name: \"previousAdminRole\",\n    type: \"bytes32\"\n  }, {\n    indexed: true,\n    internalType: \"bytes32\",\n    name: \"newAdminRole\",\n    type: \"bytes32\"\n  }],\n  name: \"RoleAdminChanged\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"bytes32\",\n    name: \"role\",\n    type: \"bytes32\"\n  }, {\n    indexed: true,\n    internalType: \"address\",\n    name: \"account\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    internalType: \"address\",\n    name: \"sender\",\n    type: \"address\"\n  }],\n  name: \"RoleGranted\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"bytes32\",\n    name: \"role\",\n    type: \"bytes32\"\n  }, {\n    indexed: true,\n    internalType: \"address\",\n    name: \"account\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    internalType: \"address\",\n    name: \"sender\",\n    type: \"address\"\n  }],\n  name: \"RoleRevoked\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"address\",\n    name: \"from\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    internalType: \"address\",\n    name: \"to\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    internalType: \"uint256\",\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  name: \"Transfer\",\n  type: \"event\"\n}, {\n  inputs: [],\n  name: \"DEFAULT_ADMIN_ROLE\",\n  outputs: [{\n    internalType: \"bytes32\",\n    name: \"\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"DEVELOPER_ROLE\",\n  outputs: [{\n    internalType: \"bytes32\",\n    name: \"\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"to\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  name: \"approve\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"owner\",\n    type: \"address\"\n  }],\n  name: \"balanceOf\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"string\",\n    name: \"name\",\n    type: \"string\"\n  }, {\n    internalType: \"string\",\n    name: \"description\",\n    type: \"string\"\n  }, {\n    internalType: \"uint256\",\n    name: \"price\",\n    type: \"uint256\"\n  }, {\n    internalType: \"string\",\n    name: \"_tokenURI\",\n    type: \"string\"\n  }],\n  name: \"createApp\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"appId\",\n    type: \"uint256\"\n  }],\n  name: \"getAppDetailsById\",\n  outputs: [{\n    internalType: \"string\",\n    name: \"name\",\n    type: \"string\"\n  }, {\n    internalType: \"string\",\n    name: \"description\",\n    type: \"string\"\n  }, {\n    internalType: \"string\",\n    name: \"_tokenURI\",\n    type: \"string\"\n  }, {\n    internalType: \"address\",\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"price\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"_tokenId\",\n    type: \"uint256\"\n  }],\n  name: \"getAppIdByTokenId\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"getAppIds\",\n  outputs: [{\n    internalType: \"uint256[]\",\n    name: \"\",\n    type: \"uint256[]\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  name: \"getApproved\",\n  outputs: [{\n    internalType: \"address\",\n    name: \"\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bytes32\",\n    name: \"role\",\n    type: \"bytes32\"\n  }],\n  name: \"getRoleAdmin\",\n  outputs: [{\n    internalType: \"bytes32\",\n    name: \"\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bytes32\",\n    name: \"role\",\n    type: \"bytes32\"\n  }, {\n    internalType: \"address\",\n    name: \"account\",\n    type: \"address\"\n  }],\n  name: \"grantRole\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bytes32\",\n    name: \"role\",\n    type: \"bytes32\"\n  }, {\n    internalType: \"address\",\n    name: \"account\",\n    type: \"address\"\n  }],\n  name: \"hasRole\",\n  outputs: [{\n    internalType: \"bool\",\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    internalType: \"address\",\n    name: \"operator\",\n    type: \"address\"\n  }],\n  name: \"isApprovedForAll\",\n  outputs: [{\n    internalType: \"bool\",\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"_appId\",\n    type: \"uint256\"\n  }],\n  name: \"mint\",\n  outputs: [],\n  stateMutability: \"payable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"name\",\n  outputs: [{\n    internalType: \"string\",\n    name: \"\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  name: \"ownerOf\",\n  outputs: [{\n    internalType: \"address\",\n    name: \"\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bytes32\",\n    name: \"role\",\n    type: \"bytes32\"\n  }, {\n    internalType: \"address\",\n    name: \"account\",\n    type: \"address\"\n  }],\n  name: \"renounceRole\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bytes32\",\n    name: \"role\",\n    type: \"bytes32\"\n  }, {\n    internalType: \"address\",\n    name: \"account\",\n    type: \"address\"\n  }],\n  name: \"revokeRole\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"from\",\n    type: \"address\"\n  }, {\n    internalType: \"address\",\n    name: \"to\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  name: \"safeTransferFrom\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"from\",\n    type: \"address\"\n  }, {\n    internalType: \"address\",\n    name: \"to\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"tokenId\",\n    type: \"uint256\"\n  }, {\n    internalType: \"bytes\",\n    name: \"_data\",\n    type: \"bytes\"\n  }],\n  name: \"safeTransferFrom\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"operator\",\n    type: \"address\"\n  }, {\n    internalType: \"bool\",\n    name: \"approved\",\n    type: \"bool\"\n  }],\n  name: \"setApprovalForAll\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bytes4\",\n    name: \"interfaceId\",\n    type: \"bytes4\"\n  }],\n  name: \"supportsInterface\",\n  outputs: [{\n    internalType: \"bool\",\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"symbol\",\n  outputs: [{\n    internalType: \"string\",\n    name: \"\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"index\",\n    type: \"uint256\"\n  }],\n  name: \"tokenByIndex\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"index\",\n    type: \"uint256\"\n  }],\n  name: \"tokenOfOwnerByIndex\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  name: \"tokenURI\",\n  outputs: [{\n    internalType: \"string\",\n    name: \"\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"totalSupply\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"from\",\n    type: \"address\"\n  }, {\n    internalType: \"address\",\n    name: \"to\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  name: \"transferFrom\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"appId\",\n    type: \"uint256\"\n  }, {\n    internalType: \"string\",\n    name: \"name\",\n    type: \"string\"\n  }, {\n    internalType: \"string\",\n    name: \"description\",\n    type: \"string\"\n  }, {\n    internalType: \"uint256\",\n    name: \"price\",\n    type: \"uint256\"\n  }, {\n    internalType: \"string\",\n    name: \"_tokenURI\",\n    type: \"string\"\n  }],\n  name: \"updateApp\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"_owner\",\n    type: \"address\"\n  }],\n  name: \"walletOfOwner\",\n  outputs: [{\n    internalType: \"uint256[]\",\n    name: \"\",\n    type: \"uint256[]\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"withdrawAll\",\n  outputs: [],\n  stateMutability: \"payable\",\n  type: \"function\"\n}];\nvar bytecode = \"0x6080604052668e1bc9bf040000600d553480156200001c57600080fd5b506040518060400160405280600781526020017f42796f61205631000000000000000000000000000000000000000000000000008152506040518060400160405280600781526020017f42594f415f5631000000000000000000000000000000000000000000000000008152508160009080519060200190620000a192919062000253565b508060019080519060200190620000ba92919062000253565b505050620000d26000801b33620000d860201b60201c565b62000368565b620000ea8282620000ee60201b60201c565b5050565b620001008282620001e060201b60201c565b620001dc576001600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620001816200024b60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b828054620002619062000303565b90600052602060002090601f016020900481019282620002855760008555620002d1565b82601f10620002a057805160ff1916838001178555620002d1565b82800160010185558215620002d1579182015b82811115620002d0578251825591602001919060010190620002b3565b5b509050620002e09190620002e4565b5090565b5b80821115620002ff576000816000905550600101620002e5565b5090565b600060028204905060018216806200031c57607f821691505b6020821081141562000333576200033262000339565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6152f080620003786000396000f3fe6080604052600436106101d85760003560e01c80634b42a0f81161010257806395d89b4111610095578063b88d4fde11610064578063b88d4fde14610718578063c87b56dd14610741578063d547741f1461077e578063e985e9c5146107a7576101d8565b806395d89b411461067d578063a0712d68146106a8578063a217fddf146106c4578063a22cb465146106ef576101d8565b8063853828b6116100d1578063853828b6146105ce5780639103a0e0146105d85780639118f31a1461060357806391d1485414610640576101d8565b80634b42a0f8146104da5780634f6ccce7146105175780636352211e1461055457806370a0823114610591576101d8565b80632f2ff15d1161017a57806342842e0e1161014957806342842e0e146103f6578063438b63001461041f578063458f9cfb1461045c578063471c1ea91461049d576101d8565b80632f2ff15d1461033c5780632f745c591461036557806333f717fe146103a257806336568abe146103cd576101d8565b8063095ea7b3116101b6578063095ea7b31461028257806318160ddd146102ab57806323b872dd146102d6578063248a9ca3146102ff576101d8565b806301ffc9a7146101dd57806306fdde031461021a578063081812fc14610245575b600080fd5b3480156101e957600080fd5b5061020460048036038101906101ff9190613a8e565b6107e4565b6040516102119190614278565b60405180910390f35b34801561022657600080fd5b5061022f6107f6565b60405161023c91906142ae565b60405180910390f35b34801561025157600080fd5b5061026c60048036038101906102679190613ba3565b610888565b60405161027991906141ef565b60405180910390f35b34801561028e57600080fd5b506102a960048036038101906102a491906139e1565b61090d565b005b3480156102b757600080fd5b506102c0610a25565b6040516102cd9190614638565b60405180910390f35b3480156102e257600080fd5b506102fd60048036038101906102f891906138cb565b610a32565b005b34801561030b57600080fd5b5061032660048036038101906103219190613a21565b610a92565b6040516103339190614293565b60405180910390f35b34801561034857600080fd5b50610363600480360381019061035e9190613a4e565b610ab2565b005b34801561037157600080fd5b5061038c600480360381019061038791906139e1565b610adb565b6040516103999190614638565b60405180910390f35b3480156103ae57600080fd5b506103b7610b80565b6040516103c49190614256565b60405180910390f35b3480156103d957600080fd5b506103f460048036038101906103ef9190613a4e565b610c36565b005b34801561040257600080fd5b5061041d600480360381019061041891906138cb565b610cb9565b005b34801561042b57600080fd5b506104466004803603810190610441919061385e565b610cd9565b6040516104539190614256565b60405180910390f35b34801561046857600080fd5b50610483600480360381019061047e9190613ba3565b610de3565b6040516104949594939291906142d0565b60405180910390f35b3480156104a957600080fd5b506104c460048036038101906104bf9190613bd0565b6110b4565b6040516104d19190614638565b60405180910390f35b3480156104e657600080fd5b5061050160048036038101906104fc9190613ae8565b611545565b60405161050e9190614638565b60405180910390f35b34801561052357600080fd5b5061053e60048036038101906105399190613ba3565b6116df565b60405161054b9190614638565b60405180910390f35b34801561056057600080fd5b5061057b60048036038101906105769190613ba3565b611750565b60405161058891906141ef565b60405180910390f35b34801561059d57600080fd5b506105b860048036038101906105b3919061385e565b611802565b6040516105c59190614638565b60405180910390f35b6105d66118ba565b005b3480156105e457600080fd5b506105ed611946565b6040516105fa9190614293565b60405180910390f35b34801561060f57600080fd5b5061062a60048036038101906106259190613ba3565b61196a565b6040516106379190614638565b60405180910390f35b34801561064c57600080fd5b5061066760048036038101906106629190613a4e565b611987565b6040516106749190614278565b60405180910390f35b34801561068957600080fd5b506106926119f2565b60405161069f91906142ae565b60405180910390f35b6106c260048036038101906106bd9190613ba3565b611a84565b005b3480156106d057600080fd5b506106d9611bdc565b6040516106e69190614293565b60405180910390f35b3480156106fb57600080fd5b50610716600480360381019061071191906139a1565b611be3565b005b34801561072457600080fd5b5061073f600480360381019061073a919061391e565b611d64565b005b34801561074d57600080fd5b5061076860048036038101906107639190613ba3565b611dc6565b60405161077591906142ae565b60405180910390f35b34801561078a57600080fd5b506107a560048036038101906107a09190613a4e565b611dd8565b005b3480156107b357600080fd5b506107ce60048036038101906107c9919061388b565b611e01565b6040516107db9190614278565b60405180910390f35b60006107ef82611e95565b9050919050565b60606000805461080590614955565b80601f016020809104026020016040519081016040528092919081815260200182805461083190614955565b801561087e5780601f106108535761010080835404028352916020019161087e565b820191906000526020600020905b81548152906001019060200180831161086157829003601f168201915b5050505050905090565b600061089382611f0f565b6108d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c990614558565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061091882611750565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610989576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610980906145b8565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166109a8611f7b565b73ffffffffffffffffffffffffffffffffffffffff1614806109d757506109d6816109d1611f7b565b611e01565b5b610a16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0d90614458565b60405180910390fd5b610a208383611f83565b505050565b6000600880549050905090565b610a43610a3d611f7b565b8261203c565b610a82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a79906145d8565b60405180910390fd5b610a8d83838361211a565b505050565b6000600a6000838152602001908152602001600020600101549050919050565b610abb82610a92565b610acc81610ac7611f7b565b612376565b610ad68383612413565b505050565b6000610ae683611802565b8210610b27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1e90614358565b60405180910390fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b60606000610b8e600c6124f4565b67ffffffffffffffff811115610ba757610ba6614b1d565b5b604051908082528060200260200182016040528015610bd55781602001602082028036833780820191505090505b5090506000600190505b610be9600c6124f4565b8111610c2e578082600183610bfe9190614837565b81518110610c0f57610c0e614aee565b5b6020026020010181815250508080610c26906149b8565b915050610bdf565b508091505090565b610c3e611f7b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca290614618565b60405180910390fd5b610cb58282612502565b5050565b610cd483838360405180602001604052806000815250611d64565b505050565b60606000610ce683611802565b90506000811415610d4357600067ffffffffffffffff811115610d0c57610d0b614b1d565b5b604051908082528060200260200182016040528015610d3a5781602001602082028036833780820191505090505b50915050610dde565b60008167ffffffffffffffff811115610d5f57610d5e614b1d565b5b604051908082528060200260200182016040528015610d8d5781602001602082028036833780820191505090505b50905060005b82811015610dd757610da58582610adb565b828281518110610db857610db7614aee565b5b6020026020010181815250508080610dcf906149b8565b915050610d93565b5080925050505b919050565b60608060606000806000600e6000888152602001908152602001600020600001541415610e45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3c90614378565b60405180910390fd5b6000600e60008881526020019081526020016000206040518060c001604052908160008201548152602001600182018054610e7f90614955565b80601f0160208091040260200160405190810160405280929190818152602001828054610eab90614955565b8015610ef85780601f10610ecd57610100808354040283529160200191610ef8565b820191906000526020600020905b815481529060010190602001808311610edb57829003601f168201915b50505050508152602001600282018054610f1190614955565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3d90614955565b8015610f8a5780601f10610f5f57610100808354040283529160200191610f8a565b820191906000526020600020905b815481529060010190602001808311610f6d57829003601f168201915b5050505050815260200160038201548152602001600482018054610fad90614955565b80601f0160208091040260200160405190810160405280929190818152602001828054610fd990614955565b80156110265780601f10610ffb57610100808354040283529160200191611026565b820191906000526020600020905b81548152906001019060200180831161100957829003601f168201915b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090508060200151816040015182608001518360a001518460600151955095509550955095505091939590929450565b60006110e07f4504b9dfd7400a1522f49a8b4a100552da9236849581fd59b7363eb48c6a474c33611987565b61111f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111690614398565b60405180910390fd5b6000600e6000888152602001908152602001600020600001541415611179576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117090614378565b60405180910390fd5b6000600e60008881526020019081526020016000206040518060c0016040529081600082015481526020016001820180546111b390614955565b80601f01602080910402602001604051908101604052809291908181526020018280546111df90614955565b801561122c5780601f106112015761010080835404028352916020019161122c565b820191906000526020600020905b81548152906001019060200180831161120f57829003601f168201915b5050505050815260200160028201805461124590614955565b80601f016020809104026020016040519081016040528092919081815260200182805461127190614955565b80156112be5780601f10611293576101008083540402835291602001916112be565b820191906000526020600020905b8154815290600101906020018083116112a157829003601f168201915b50505050508152602001600382015481526020016004820180546112e190614955565b80601f016020809104026020016040519081016040528092919081815260200182805461130d90614955565b801561135a5780601f1061132f5761010080835404028352916020019161135a565b820191906000526020600020905b81548152906001019060200180831161133d57829003601f168201915b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090503373ffffffffffffffffffffffffffffffffffffffff168160a0015173ffffffffffffffffffffffffffffffffffffffff161461142d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142490614518565b60405180910390fd5b6040518060c001604052808881526020018781526020018681526020018581526020018481526020013373ffffffffffffffffffffffffffffffffffffffff16815250600e60008981526020019081526020016000206000820151816000015560208201518160010190805190602001906114a992919061365d565b5060408201518160020190805190602001906114c692919061365d565b506060820151816003015560808201518160040190805190602001906114ed92919061365d565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508691505095945050505050565b60006115717f4504b9dfd7400a1522f49a8b4a100552da9236849581fd59b7363eb48c6a474c33611987565b6115b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a790614398565b60405180910390fd5b6115ba600c6125e4565b60006115c6600c6124f4565b90506040518060c001604052808281526020018781526020018681526020018581526020018481526020013373ffffffffffffffffffffffffffffffffffffffff16815250600e600083815260200190815260200160002060008201518160000155602082015181600101908051906020019061164492919061365d565b50604082015181600201908051906020019061166192919061365d565b5060608201518160030155608082015181600401908051906020019061168892919061365d565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505080915050949350505050565b60006116e9610a25565b821061172a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611721906145f8565b60405180910390fd5b6008828154811061173e5761173d614aee565b5b90600052602060002001549050919050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f090614498565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611873576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161186a90614478565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6118c76000801b33611987565b611906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118fd906144d8565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505061194457600080fd5b565b7f4504b9dfd7400a1522f49a8b4a100552da9236849581fd59b7363eb48c6a474c81565b6000600f6000838152602001908152602001600020549050919050565b6000600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060018054611a0190614955565b80601f0160208091040260200160405190810160405280929190818152602001828054611a2d90614955565b8015611a7a5780601f10611a4f57610100808354040283529160200191611a7a565b820191906000526020600020905b815481529060010190602001808311611a5d57829003601f168201915b5050505050905090565b6000600e6000838152602001908152602001600020600001541415611ade576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ad590614378565b60405180910390fd5b6000611ae8610a25565b90506000600182611af99190614756565b9050611b0533826125fa565b611b0e81611f0f565b611b1757600080fd5b82600f600083815260200190815260200160002081905550611bd781600e60008681526020019081526020016000206004018054611b5490614955565b80601f0160208091040260200160405190810160405280929190818152602001828054611b8090614955565b8015611bcd5780601f10611ba257610100808354040283529160200191611bcd565b820191906000526020600020905b815481529060010190602001808311611bb057829003601f168201915b5050505050612618565b505050565b6000801b81565b611beb611f7b565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611c59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c5090614418565b60405180910390fd5b8060056000611c66611f7b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611d13611f7b565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611d589190614278565b60405180910390a35050565b611d75611d6f611f7b565b8361203c565b611db4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dab906145d8565b60405180910390fd5b611dc08484848461268c565b50505050565b6060611dd1826126e8565b9050919050565b611de182610a92565b611df281611ded611f7b565b612376565b611dfc8383612502565b505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611f085750611f078261283a565b5b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16611ff683611750565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061204782611f0f565b612086576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161207d90614438565b60405180910390fd5b600061209183611750565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061210057508373ffffffffffffffffffffffffffffffffffffffff166120e884610888565b73ffffffffffffffffffffffffffffffffffffffff16145b8061211157506121108185611e01565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661213a82611750565b73ffffffffffffffffffffffffffffffffffffffff1614612190576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161218790614578565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612200576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121f7906143f8565b60405180910390fd5b61220b8383836128b4565b612216600082611f83565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546122669190614837565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546122bd9190614756565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6123808282611987565b61240f576123a58173ffffffffffffffffffffffffffffffffffffffff1660146128c4565b6123b38360001c60206128c4565b6040516020016123c49291906141b5565b6040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161240691906142ae565b60405180910390fd5b5050565b61241d8282611987565b6124f0576001600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612495611f7b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600081600001549050919050565b61250c8282611987565b156125e0576000600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612585611f7b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6001816000016000828254019250508190555050565b612614828260405180602001604052806000815250612b00565b5050565b61262182611f0f565b612660576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612657906144b8565b60405180910390fd5b80600b6000848152602001908152602001600020908051906020019061268792919061365d565b505050565b61269784848461211a565b6126a384848484612b5b565b6126e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126d9906143b8565b60405180910390fd5b50505050565b60606126f382611f0f565b612732576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161272990614538565b60405180910390fd5b6000600b6000848152602001908152602001600020805461275290614955565b80601f016020809104026020016040519081016040528092919081815260200182805461277e90614955565b80156127cb5780601f106127a0576101008083540402835291602001916127cb565b820191906000526020600020905b8154815290600101906020018083116127ae57829003601f168201915b5050505050905060006127dc612cf2565b90506000815114156127f2578192505050612835565b60008251111561282757808260405160200161280f929190614191565b60405160208183030381529060405292505050612835565b61283084612d09565b925050505b919050565b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806128ad57506128ac82612db0565b5b9050919050565b6128bf838383612e92565b505050565b6060600060028360026128d791906147dd565b6128e19190614756565b67ffffffffffffffff8111156128fa576128f9614b1d565b5b6040519080825280601f01601f19166020018201604052801561292c5781602001600182028036833780820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061296457612963614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106129c8576129c7614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002612a0891906147dd565b612a129190614756565b90505b6001811115612ab2577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110612a5457612a53614aee565b5b1a60f81b828281518110612a6b57612a6a614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080612aab9061492b565b9050612a15565b5060008414612af6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612aed90614338565b60405180910390fd5b8091505092915050565b612b0a8383612fa6565b612b176000848484612b5b565b612b56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b4d906143b8565b60405180910390fd5b505050565b6000612b7c8473ffffffffffffffffffffffffffffffffffffffff16613174565b15612ce5578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02612ba5611f7b565b8786866040518563ffffffff1660e01b8152600401612bc7949392919061420a565b602060405180830381600087803b158015612be157600080fd5b505af1925050508015612c1257506040513d601f19601f82011682018060405250810190612c0f9190613abb565b60015b612c95573d8060008114612c42576040519150601f19603f3d011682016040523d82523d6000602084013e612c47565b606091505b50600081511415612c8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c84906143b8565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050612cea565b600190505b949350505050565b606060405180602001604052806000815250905090565b6060612d1482611f0f565b612d53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d4a90614598565b60405180910390fd5b6000612d5d612cf2565b90506000815111612d7d5760405180602001604052806000815250612da8565b80612d8784613187565b604051602001612d98929190614191565b6040516020818303038152906040525b915050919050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612e7b57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80612e8b5750612e8a826132e8565b5b9050919050565b612e9d838383613352565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612ee057612edb81613357565b612f1f565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612f1e57612f1d83826133a0565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612f6257612f5d8161350d565b612fa1565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612fa057612f9f82826135de565b5b5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613016576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161300d906144f8565b60405180910390fd5b61301f81611f0f565b1561305f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613056906143d8565b60405180910390fd5b61306b600083836128b4565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546130bb9190614756565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600080823b905060008111915050919050565b606060008214156131cf576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506132e3565b600082905060005b600082146132015780806131ea906149b8565b915050600a826131fa91906147ac565b91506131d7565b60008167ffffffffffffffff81111561321d5761321c614b1d565b5b6040519080825280601f01601f19166020018201604052801561324f5781602001600182028036833780820191505090505b5090505b600085146132dc576001826132689190614837565b9150600a856132779190614a01565b60306132839190614756565b60f81b81838151811061329957613298614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856132d591906147ac565b9450613253565b8093505050505b919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b505050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505060019003906000526020600020016000909190919091505550565b600060016133ad84611802565b6133b79190614837565b905060006007600084815260200190815260200160002054905081811461349c576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550816007600083815260200190815260200160002081905550505b6007600084815260200190815260200160002060009055600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905550505050565b600060016008805490506135219190614837565b905060006009600084815260200190815260200160002054905060006008838154811061355157613550614aee565b5b90600052602060002001549050806008838154811061357357613572614aee565b5b9060005260206000200181905550816009600083815260200190815260200160002081905550600960008581526020019081526020016000206000905560088054806135c2576135c1614abf565b5b6001900381819060005260206000200160009055905550505050565b60006135e983611802565b905081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806007600084815260200190815260200160002081905550505050565b82805461366990614955565b90600052602060002090601f01602090048101928261368b57600085556136d2565b82601f106136a457805160ff19168380011785556136d2565b828001600101855582156136d2579182015b828111156136d15782518255916020019190600101906136b6565b5b5090506136df91906136e3565b5090565b5b808211156136fc5760008160009055506001016136e4565b5090565b600061371361370e84614678565b614653565b90508281526020810184848401111561372f5761372e614b51565b5b61373a8482856148e9565b509392505050565b6000613755613750846146a9565b614653565b90508281526020810184848401111561377157613770614b51565b5b61377c8482856148e9565b509392505050565b60008135905061379381615247565b92915050565b6000813590506137a88161525e565b92915050565b6000813590506137bd81615275565b92915050565b6000813590506137d28161528c565b92915050565b6000815190506137e78161528c565b92915050565b600082601f83011261380257613801614b4c565b5b8135613812848260208601613700565b91505092915050565b600082601f8301126138305761382f614b4c565b5b8135613840848260208601613742565b91505092915050565b600081359050613858816152a3565b92915050565b60006020828403121561387457613873614b5b565b5b600061388284828501613784565b91505092915050565b600080604083850312156138a2576138a1614b5b565b5b60006138b085828601613784565b92505060206138c185828601613784565b9150509250929050565b6000806000606084860312156138e4576138e3614b5b565b5b60006138f286828701613784565b935050602061390386828701613784565b925050604061391486828701613849565b9150509250925092565b6000806000806080858703121561393857613937614b5b565b5b600061394687828801613784565b945050602061395787828801613784565b935050604061396887828801613849565b925050606085013567ffffffffffffffff81111561398957613988614b56565b5b613995878288016137ed565b91505092959194509250565b600080604083850312156139b8576139b7614b5b565b5b60006139c685828601613784565b92505060206139d785828601613799565b9150509250929050565b600080604083850312156139f8576139f7614b5b565b5b6000613a0685828601613784565b9250506020613a1785828601613849565b9150509250929050565b600060208284031215613a3757613a36614b5b565b5b6000613a45848285016137ae565b91505092915050565b60008060408385031215613a6557613a64614b5b565b5b6000613a73858286016137ae565b9250506020613a8485828601613784565b9150509250929050565b600060208284031215613aa457613aa3614b5b565b5b6000613ab2848285016137c3565b91505092915050565b600060208284031215613ad157613ad0614b5b565b5b6000613adf848285016137d8565b91505092915050565b60008060008060808587031215613b0257613b01614b5b565b5b600085013567ffffffffffffffff811115613b2057613b1f614b56565b5b613b2c8782880161381b565b945050602085013567ffffffffffffffff811115613b4d57613b4c614b56565b5b613b598782880161381b565b9350506040613b6a87828801613849565b925050606085013567ffffffffffffffff811115613b8b57613b8a614b56565b5b613b978782880161381b565b91505092959194509250565b600060208284031215613bb957613bb8614b5b565b5b6000613bc784828501613849565b91505092915050565b600080600080600060a08688031215613bec57613beb614b5b565b5b6000613bfa88828901613849565b955050602086013567ffffffffffffffff811115613c1b57613c1a614b56565b5b613c278882890161381b565b945050604086013567ffffffffffffffff811115613c4857613c47614b56565b5b613c548882890161381b565b9350506060613c6588828901613849565b925050608086013567ffffffffffffffff811115613c8657613c85614b56565b5b613c928882890161381b565b9150509295509295909350565b6000613cab8383614173565b60208301905092915050565b613cc08161486b565b82525050565b6000613cd1826146ea565b613cdb8185614718565b9350613ce6836146da565b8060005b83811015613d17578151613cfe8882613c9f565b9750613d098361470b565b925050600181019050613cea565b5085935050505092915050565b613d2d8161487d565b82525050565b613d3c81614889565b82525050565b6000613d4d826146f5565b613d578185614729565b9350613d678185602086016148f8565b613d7081614b60565b840191505092915050565b6000613d8682614700565b613d90818561473a565b9350613da08185602086016148f8565b613da981614b60565b840191505092915050565b6000613dbf82614700565b613dc9818561474b565b9350613dd98185602086016148f8565b80840191505092915050565b6000613df260208361473a565b9150613dfd82614b71565b602082019050919050565b6000613e15602b8361473a565b9150613e2082614b9a565b604082019050919050565b6000613e3860118361473a565b9150613e4382614be9565b602082019050919050565b6000613e5b60248361473a565b9150613e6682614c12565b604082019050919050565b6000613e7e60328361473a565b9150613e8982614c61565b604082019050919050565b6000613ea1601c8361473a565b9150613eac82614cb0565b602082019050919050565b6000613ec460248361473a565b9150613ecf82614cd9565b604082019050919050565b6000613ee760198361473a565b9150613ef282614d28565b602082019050919050565b6000613f0a602c8361473a565b9150613f1582614d51565b604082019050919050565b6000613f2d60388361473a565b9150613f3882614da0565b604082019050919050565b6000613f50602a8361473a565b9150613f5b82614def565b604082019050919050565b6000613f7360298361473a565b9150613f7e82614e3e565b604082019050919050565b6000613f96602e8361473a565b9150613fa182614e8d565b604082019050919050565b6000613fb9601c8361473a565b9150613fc482614edc565b602082019050919050565b6000613fdc60208361473a565b9150613fe782614f05565b602082019050919050565b6000613fff60218361473a565b915061400a82614f2e565b604082019050919050565b600061402260318361473a565b915061402d82614f7d565b604082019050919050565b6000614045602c8361473a565b915061405082614fcc565b604082019050919050565b600061406860298361473a565b91506140738261501b565b604082019050919050565b600061408b602f8361473a565b91506140968261506a565b604082019050919050565b60006140ae60218361473a565b91506140b9826150b9565b604082019050919050565b60006140d160318361473a565b91506140dc82615108565b604082019050919050565b60006140f4602c8361473a565b91506140ff82615157565b604082019050919050565b600061411760178361474b565b9150614122826151a6565b601782019050919050565b600061413a60118361474b565b9150614145826151cf565b601182019050919050565b600061415d602f8361473a565b9150614168826151f8565b604082019050919050565b61417c816148df565b82525050565b61418b816148df565b82525050565b600061419d8285613db4565b91506141a98284613db4565b91508190509392505050565b60006141c08261410a565b91506141cc8285613db4565b91506141d78261412d565b91506141e38284613db4565b91508190509392505050565b60006020820190506142046000830184613cb7565b92915050565b600060808201905061421f6000830187613cb7565b61422c6020830186613cb7565b6142396040830185614182565b818103606083015261424b8184613d42565b905095945050505050565b600060208201905081810360008301526142708184613cc6565b905092915050565b600060208201905061428d6000830184613d24565b92915050565b60006020820190506142a86000830184613d33565b92915050565b600060208201905081810360008301526142c88184613d7b565b905092915050565b600060a08201905081810360008301526142ea8188613d7b565b905081810360208301526142fe8187613d7b565b905081810360408301526143128186613d7b565b90506143216060830185613cb7565b61432e6080830184614182565b9695505050505050565b6000602082019050818103600083015261435181613de5565b9050919050565b6000602082019050818103600083015261437181613e08565b9050919050565b6000602082019050818103600083015261439181613e2b565b9050919050565b600060208201905081810360008301526143b181613e4e565b9050919050565b600060208201905081810360008301526143d181613e71565b9050919050565b600060208201905081810360008301526143f181613e94565b9050919050565b6000602082019050818103600083015261441181613eb7565b9050919050565b6000602082019050818103600083015261443181613eda565b9050919050565b6000602082019050818103600083015261445181613efd565b9050919050565b6000602082019050818103600083015261447181613f20565b9050919050565b6000602082019050818103600083015261449181613f43565b9050919050565b600060208201905081810360008301526144b181613f66565b9050919050565b600060208201905081810360008301526144d181613f89565b9050919050565b600060208201905081810360008301526144f181613fac565b9050919050565b6000602082019050818103600083015261451181613fcf565b9050919050565b6000602082019050818103600083015261453181613ff2565b9050919050565b6000602082019050818103600083015261455181614015565b9050919050565b6000602082019050818103600083015261457181614038565b9050919050565b600060208201905081810360008301526145918161405b565b9050919050565b600060208201905081810360008301526145b18161407e565b9050919050565b600060208201905081810360008301526145d1816140a1565b9050919050565b600060208201905081810360008301526145f1816140c4565b9050919050565b60006020820190508181036000830152614611816140e7565b9050919050565b6000602082019050818103600083015261463181614150565b9050919050565b600060208201905061464d6000830184614182565b92915050565b600061465d61466e565b90506146698282614987565b919050565b6000604051905090565b600067ffffffffffffffff82111561469357614692614b1d565b5b61469c82614b60565b9050602081019050919050565b600067ffffffffffffffff8211156146c4576146c3614b1d565b5b6146cd82614b60565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000614761826148df565b915061476c836148df565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156147a1576147a0614a32565b5b828201905092915050565b60006147b7826148df565b91506147c2836148df565b9250826147d2576147d1614a61565b5b828204905092915050565b60006147e8826148df565b91506147f3836148df565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561482c5761482b614a32565b5b828202905092915050565b6000614842826148df565b915061484d836148df565b9250828210156148605761485f614a32565b5b828203905092915050565b6000614876826148bf565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156149165780820151818401526020810190506148fb565b83811115614925576000848401525b50505050565b6000614936826148df565b9150600082141561494a57614949614a32565b5b600182039050919050565b6000600282049050600182168061496d57607f821691505b6020821081141561498157614980614a90565b5b50919050565b61499082614b60565b810181811067ffffffffffffffff821117156149af576149ae614b1d565b5b80604052505050565b60006149c3826148df565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156149f6576149f5614a32565b5b600182019050919050565b6000614a0c826148df565b9150614a17836148df565b925082614a2757614a26614a61565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008201527f74206f6620626f756e6473000000000000000000000000000000000000000000602082015250565b7f417070204944206d757374206578697374000000000000000000000000000000600082015250565b7f4d757374206265206120646576656c6f70657220746f2063726561746520616e60008201527f2061707000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b7f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008201527f6578697374656e7420746f6b656e000000000000000000000000000000000000602082015250565b7f4d75737420626520616e2061646d696e20746f20776974686472617700000000600082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f596f75206d75737420626520746865206f776e6572206f66207468697320617060008201527f7000000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524337323155524953746f726167653a2055524920717565727920666f722060008201527f6e6f6e6578697374656e7420746f6b656e000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008201527f73206e6f74206f776e0000000000000000000000000000000000000000000000602082015250565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b7f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008201527f7574206f6620626f756e64730000000000000000000000000000000000000000602082015250565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6152508161486b565b811461525b57600080fd5b50565b6152678161487d565b811461527257600080fd5b50565b61527e81614889565b811461528957600080fd5b50565b61529581614893565b81146152a057600080fd5b50565b6152ac816148df565b81146152b757600080fd5b5056fea26469706673582212206d1e1f96a7981ff2283155936d935258895e739fa6191f3ee5d4c71aebe1597c64736f6c63430008060033\";\nvar deployedBytecode = \"0x6080604052600436106101d85760003560e01c80634b42a0f81161010257806395d89b4111610095578063b88d4fde11610064578063b88d4fde14610718578063c87b56dd14610741578063d547741f1461077e578063e985e9c5146107a7576101d8565b806395d89b411461067d578063a0712d68146106a8578063a217fddf146106c4578063a22cb465146106ef576101d8565b8063853828b6116100d1578063853828b6146105ce5780639103a0e0146105d85780639118f31a1461060357806391d1485414610640576101d8565b80634b42a0f8146104da5780634f6ccce7146105175780636352211e1461055457806370a0823114610591576101d8565b80632f2ff15d1161017a57806342842e0e1161014957806342842e0e146103f6578063438b63001461041f578063458f9cfb1461045c578063471c1ea91461049d576101d8565b80632f2ff15d1461033c5780632f745c591461036557806333f717fe146103a257806336568abe146103cd576101d8565b8063095ea7b3116101b6578063095ea7b31461028257806318160ddd146102ab57806323b872dd146102d6578063248a9ca3146102ff576101d8565b806301ffc9a7146101dd57806306fdde031461021a578063081812fc14610245575b600080fd5b3480156101e957600080fd5b5061020460048036038101906101ff9190613a8e565b6107e4565b6040516102119190614278565b60405180910390f35b34801561022657600080fd5b5061022f6107f6565b60405161023c91906142ae565b60405180910390f35b34801561025157600080fd5b5061026c60048036038101906102679190613ba3565b610888565b60405161027991906141ef565b60405180910390f35b34801561028e57600080fd5b506102a960048036038101906102a491906139e1565b61090d565b005b3480156102b757600080fd5b506102c0610a25565b6040516102cd9190614638565b60405180910390f35b3480156102e257600080fd5b506102fd60048036038101906102f891906138cb565b610a32565b005b34801561030b57600080fd5b5061032660048036038101906103219190613a21565b610a92565b6040516103339190614293565b60405180910390f35b34801561034857600080fd5b50610363600480360381019061035e9190613a4e565b610ab2565b005b34801561037157600080fd5b5061038c600480360381019061038791906139e1565b610adb565b6040516103999190614638565b60405180910390f35b3480156103ae57600080fd5b506103b7610b80565b6040516103c49190614256565b60405180910390f35b3480156103d957600080fd5b506103f460048036038101906103ef9190613a4e565b610c36565b005b34801561040257600080fd5b5061041d600480360381019061041891906138cb565b610cb9565b005b34801561042b57600080fd5b506104466004803603810190610441919061385e565b610cd9565b6040516104539190614256565b60405180910390f35b34801561046857600080fd5b50610483600480360381019061047e9190613ba3565b610de3565b6040516104949594939291906142d0565b60405180910390f35b3480156104a957600080fd5b506104c460048036038101906104bf9190613bd0565b6110b4565b6040516104d19190614638565b60405180910390f35b3480156104e657600080fd5b5061050160048036038101906104fc9190613ae8565b611545565b60405161050e9190614638565b60405180910390f35b34801561052357600080fd5b5061053e60048036038101906105399190613ba3565b6116df565b60405161054b9190614638565b60405180910390f35b34801561056057600080fd5b5061057b60048036038101906105769190613ba3565b611750565b60405161058891906141ef565b60405180910390f35b34801561059d57600080fd5b506105b860048036038101906105b3919061385e565b611802565b6040516105c59190614638565b60405180910390f35b6105d66118ba565b005b3480156105e457600080fd5b506105ed611946565b6040516105fa9190614293565b60405180910390f35b34801561060f57600080fd5b5061062a60048036038101906106259190613ba3565b61196a565b6040516106379190614638565b60405180910390f35b34801561064c57600080fd5b5061066760048036038101906106629190613a4e565b611987565b6040516106749190614278565b60405180910390f35b34801561068957600080fd5b506106926119f2565b60405161069f91906142ae565b60405180910390f35b6106c260048036038101906106bd9190613ba3565b611a84565b005b3480156106d057600080fd5b506106d9611bdc565b6040516106e69190614293565b60405180910390f35b3480156106fb57600080fd5b50610716600480360381019061071191906139a1565b611be3565b005b34801561072457600080fd5b5061073f600480360381019061073a919061391e565b611d64565b005b34801561074d57600080fd5b5061076860048036038101906107639190613ba3565b611dc6565b60405161077591906142ae565b60405180910390f35b34801561078a57600080fd5b506107a560048036038101906107a09190613a4e565b611dd8565b005b3480156107b357600080fd5b506107ce60048036038101906107c9919061388b565b611e01565b6040516107db9190614278565b60405180910390f35b60006107ef82611e95565b9050919050565b60606000805461080590614955565b80601f016020809104026020016040519081016040528092919081815260200182805461083190614955565b801561087e5780601f106108535761010080835404028352916020019161087e565b820191906000526020600020905b81548152906001019060200180831161086157829003601f168201915b5050505050905090565b600061089382611f0f565b6108d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c990614558565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061091882611750565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610989576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610980906145b8565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166109a8611f7b565b73ffffffffffffffffffffffffffffffffffffffff1614806109d757506109d6816109d1611f7b565b611e01565b5b610a16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0d90614458565b60405180910390fd5b610a208383611f83565b505050565b6000600880549050905090565b610a43610a3d611f7b565b8261203c565b610a82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a79906145d8565b60405180910390fd5b610a8d83838361211a565b505050565b6000600a6000838152602001908152602001600020600101549050919050565b610abb82610a92565b610acc81610ac7611f7b565b612376565b610ad68383612413565b505050565b6000610ae683611802565b8210610b27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1e90614358565b60405180910390fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b60606000610b8e600c6124f4565b67ffffffffffffffff811115610ba757610ba6614b1d565b5b604051908082528060200260200182016040528015610bd55781602001602082028036833780820191505090505b5090506000600190505b610be9600c6124f4565b8111610c2e578082600183610bfe9190614837565b81518110610c0f57610c0e614aee565b5b6020026020010181815250508080610c26906149b8565b915050610bdf565b508091505090565b610c3e611f7b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca290614618565b60405180910390fd5b610cb58282612502565b5050565b610cd483838360405180602001604052806000815250611d64565b505050565b60606000610ce683611802565b90506000811415610d4357600067ffffffffffffffff811115610d0c57610d0b614b1d565b5b604051908082528060200260200182016040528015610d3a5781602001602082028036833780820191505090505b50915050610dde565b60008167ffffffffffffffff811115610d5f57610d5e614b1d565b5b604051908082528060200260200182016040528015610d8d5781602001602082028036833780820191505090505b50905060005b82811015610dd757610da58582610adb565b828281518110610db857610db7614aee565b5b6020026020010181815250508080610dcf906149b8565b915050610d93565b5080925050505b919050565b60608060606000806000600e6000888152602001908152602001600020600001541415610e45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3c90614378565b60405180910390fd5b6000600e60008881526020019081526020016000206040518060c001604052908160008201548152602001600182018054610e7f90614955565b80601f0160208091040260200160405190810160405280929190818152602001828054610eab90614955565b8015610ef85780601f10610ecd57610100808354040283529160200191610ef8565b820191906000526020600020905b815481529060010190602001808311610edb57829003601f168201915b50505050508152602001600282018054610f1190614955565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3d90614955565b8015610f8a5780601f10610f5f57610100808354040283529160200191610f8a565b820191906000526020600020905b815481529060010190602001808311610f6d57829003601f168201915b5050505050815260200160038201548152602001600482018054610fad90614955565b80601f0160208091040260200160405190810160405280929190818152602001828054610fd990614955565b80156110265780601f10610ffb57610100808354040283529160200191611026565b820191906000526020600020905b81548152906001019060200180831161100957829003601f168201915b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090508060200151816040015182608001518360a001518460600151955095509550955095505091939590929450565b60006110e07f4504b9dfd7400a1522f49a8b4a100552da9236849581fd59b7363eb48c6a474c33611987565b61111f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111690614398565b60405180910390fd5b6000600e6000888152602001908152602001600020600001541415611179576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117090614378565b60405180910390fd5b6000600e60008881526020019081526020016000206040518060c0016040529081600082015481526020016001820180546111b390614955565b80601f01602080910402602001604051908101604052809291908181526020018280546111df90614955565b801561122c5780601f106112015761010080835404028352916020019161122c565b820191906000526020600020905b81548152906001019060200180831161120f57829003601f168201915b5050505050815260200160028201805461124590614955565b80601f016020809104026020016040519081016040528092919081815260200182805461127190614955565b80156112be5780601f10611293576101008083540402835291602001916112be565b820191906000526020600020905b8154815290600101906020018083116112a157829003601f168201915b50505050508152602001600382015481526020016004820180546112e190614955565b80601f016020809104026020016040519081016040528092919081815260200182805461130d90614955565b801561135a5780601f1061132f5761010080835404028352916020019161135a565b820191906000526020600020905b81548152906001019060200180831161133d57829003601f168201915b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090503373ffffffffffffffffffffffffffffffffffffffff168160a0015173ffffffffffffffffffffffffffffffffffffffff161461142d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142490614518565b60405180910390fd5b6040518060c001604052808881526020018781526020018681526020018581526020018481526020013373ffffffffffffffffffffffffffffffffffffffff16815250600e60008981526020019081526020016000206000820151816000015560208201518160010190805190602001906114a992919061365d565b5060408201518160020190805190602001906114c692919061365d565b506060820151816003015560808201518160040190805190602001906114ed92919061365d565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508691505095945050505050565b60006115717f4504b9dfd7400a1522f49a8b4a100552da9236849581fd59b7363eb48c6a474c33611987565b6115b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a790614398565b60405180910390fd5b6115ba600c6125e4565b60006115c6600c6124f4565b90506040518060c001604052808281526020018781526020018681526020018581526020018481526020013373ffffffffffffffffffffffffffffffffffffffff16815250600e600083815260200190815260200160002060008201518160000155602082015181600101908051906020019061164492919061365d565b50604082015181600201908051906020019061166192919061365d565b5060608201518160030155608082015181600401908051906020019061168892919061365d565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505080915050949350505050565b60006116e9610a25565b821061172a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611721906145f8565b60405180910390fd5b6008828154811061173e5761173d614aee565b5b90600052602060002001549050919050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f090614498565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611873576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161186a90614478565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6118c76000801b33611987565b611906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118fd906144d8565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505061194457600080fd5b565b7f4504b9dfd7400a1522f49a8b4a100552da9236849581fd59b7363eb48c6a474c81565b6000600f6000838152602001908152602001600020549050919050565b6000600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060018054611a0190614955565b80601f0160208091040260200160405190810160405280929190818152602001828054611a2d90614955565b8015611a7a5780601f10611a4f57610100808354040283529160200191611a7a565b820191906000526020600020905b815481529060010190602001808311611a5d57829003601f168201915b5050505050905090565b6000600e6000838152602001908152602001600020600001541415611ade576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ad590614378565b60405180910390fd5b6000611ae8610a25565b90506000600182611af99190614756565b9050611b0533826125fa565b611b0e81611f0f565b611b1757600080fd5b82600f600083815260200190815260200160002081905550611bd781600e60008681526020019081526020016000206004018054611b5490614955565b80601f0160208091040260200160405190810160405280929190818152602001828054611b8090614955565b8015611bcd5780601f10611ba257610100808354040283529160200191611bcd565b820191906000526020600020905b815481529060010190602001808311611bb057829003601f168201915b5050505050612618565b505050565b6000801b81565b611beb611f7b565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611c59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c5090614418565b60405180910390fd5b8060056000611c66611f7b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611d13611f7b565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611d589190614278565b60405180910390a35050565b611d75611d6f611f7b565b8361203c565b611db4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dab906145d8565b60405180910390fd5b611dc08484848461268c565b50505050565b6060611dd1826126e8565b9050919050565b611de182610a92565b611df281611ded611f7b565b612376565b611dfc8383612502565b505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611f085750611f078261283a565b5b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16611ff683611750565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061204782611f0f565b612086576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161207d90614438565b60405180910390fd5b600061209183611750565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061210057508373ffffffffffffffffffffffffffffffffffffffff166120e884610888565b73ffffffffffffffffffffffffffffffffffffffff16145b8061211157506121108185611e01565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661213a82611750565b73ffffffffffffffffffffffffffffffffffffffff1614612190576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161218790614578565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612200576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121f7906143f8565b60405180910390fd5b61220b8383836128b4565b612216600082611f83565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546122669190614837565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546122bd9190614756565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6123808282611987565b61240f576123a58173ffffffffffffffffffffffffffffffffffffffff1660146128c4565b6123b38360001c60206128c4565b6040516020016123c49291906141b5565b6040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161240691906142ae565b60405180910390fd5b5050565b61241d8282611987565b6124f0576001600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612495611f7b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600081600001549050919050565b61250c8282611987565b156125e0576000600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612585611f7b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6001816000016000828254019250508190555050565b612614828260405180602001604052806000815250612b00565b5050565b61262182611f0f565b612660576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612657906144b8565b60405180910390fd5b80600b6000848152602001908152602001600020908051906020019061268792919061365d565b505050565b61269784848461211a565b6126a384848484612b5b565b6126e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126d9906143b8565b60405180910390fd5b50505050565b60606126f382611f0f565b612732576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161272990614538565b60405180910390fd5b6000600b6000848152602001908152602001600020805461275290614955565b80601f016020809104026020016040519081016040528092919081815260200182805461277e90614955565b80156127cb5780601f106127a0576101008083540402835291602001916127cb565b820191906000526020600020905b8154815290600101906020018083116127ae57829003601f168201915b5050505050905060006127dc612cf2565b90506000815114156127f2578192505050612835565b60008251111561282757808260405160200161280f929190614191565b60405160208183030381529060405292505050612835565b61283084612d09565b925050505b919050565b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806128ad57506128ac82612db0565b5b9050919050565b6128bf838383612e92565b505050565b6060600060028360026128d791906147dd565b6128e19190614756565b67ffffffffffffffff8111156128fa576128f9614b1d565b5b6040519080825280601f01601f19166020018201604052801561292c5781602001600182028036833780820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061296457612963614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106129c8576129c7614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002612a0891906147dd565b612a129190614756565b90505b6001811115612ab2577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110612a5457612a53614aee565b5b1a60f81b828281518110612a6b57612a6a614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080612aab9061492b565b9050612a15565b5060008414612af6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612aed90614338565b60405180910390fd5b8091505092915050565b612b0a8383612fa6565b612b176000848484612b5b565b612b56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b4d906143b8565b60405180910390fd5b505050565b6000612b7c8473ffffffffffffffffffffffffffffffffffffffff16613174565b15612ce5578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02612ba5611f7b565b8786866040518563ffffffff1660e01b8152600401612bc7949392919061420a565b602060405180830381600087803b158015612be157600080fd5b505af1925050508015612c1257506040513d601f19601f82011682018060405250810190612c0f9190613abb565b60015b612c95573d8060008114612c42576040519150601f19603f3d011682016040523d82523d6000602084013e612c47565b606091505b50600081511415612c8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c84906143b8565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050612cea565b600190505b949350505050565b606060405180602001604052806000815250905090565b6060612d1482611f0f565b612d53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d4a90614598565b60405180910390fd5b6000612d5d612cf2565b90506000815111612d7d5760405180602001604052806000815250612da8565b80612d8784613187565b604051602001612d98929190614191565b6040516020818303038152906040525b915050919050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612e7b57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80612e8b5750612e8a826132e8565b5b9050919050565b612e9d838383613352565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612ee057612edb81613357565b612f1f565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612f1e57612f1d83826133a0565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612f6257612f5d8161350d565b612fa1565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612fa057612f9f82826135de565b5b5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613016576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161300d906144f8565b60405180910390fd5b61301f81611f0f565b1561305f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613056906143d8565b60405180910390fd5b61306b600083836128b4565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546130bb9190614756565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600080823b905060008111915050919050565b606060008214156131cf576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506132e3565b600082905060005b600082146132015780806131ea906149b8565b915050600a826131fa91906147ac565b91506131d7565b60008167ffffffffffffffff81111561321d5761321c614b1d565b5b6040519080825280601f01601f19166020018201604052801561324f5781602001600182028036833780820191505090505b5090505b600085146132dc576001826132689190614837565b9150600a856132779190614a01565b60306132839190614756565b60f81b81838151811061329957613298614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856132d591906147ac565b9450613253565b8093505050505b919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b505050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505060019003906000526020600020016000909190919091505550565b600060016133ad84611802565b6133b79190614837565b905060006007600084815260200190815260200160002054905081811461349c576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550816007600083815260200190815260200160002081905550505b6007600084815260200190815260200160002060009055600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905550505050565b600060016008805490506135219190614837565b905060006009600084815260200190815260200160002054905060006008838154811061355157613550614aee565b5b90600052602060002001549050806008838154811061357357613572614aee565b5b9060005260206000200181905550816009600083815260200190815260200160002081905550600960008581526020019081526020016000206000905560088054806135c2576135c1614abf565b5b6001900381819060005260206000200160009055905550505050565b60006135e983611802565b905081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806007600084815260200190815260200160002081905550505050565b82805461366990614955565b90600052602060002090601f01602090048101928261368b57600085556136d2565b82601f106136a457805160ff19168380011785556136d2565b828001600101855582156136d2579182015b828111156136d15782518255916020019190600101906136b6565b5b5090506136df91906136e3565b5090565b5b808211156136fc5760008160009055506001016136e4565b5090565b600061371361370e84614678565b614653565b90508281526020810184848401111561372f5761372e614b51565b5b61373a8482856148e9565b509392505050565b6000613755613750846146a9565b614653565b90508281526020810184848401111561377157613770614b51565b5b61377c8482856148e9565b509392505050565b60008135905061379381615247565b92915050565b6000813590506137a88161525e565b92915050565b6000813590506137bd81615275565b92915050565b6000813590506137d28161528c565b92915050565b6000815190506137e78161528c565b92915050565b600082601f83011261380257613801614b4c565b5b8135613812848260208601613700565b91505092915050565b600082601f8301126138305761382f614b4c565b5b8135613840848260208601613742565b91505092915050565b600081359050613858816152a3565b92915050565b60006020828403121561387457613873614b5b565b5b600061388284828501613784565b91505092915050565b600080604083850312156138a2576138a1614b5b565b5b60006138b085828601613784565b92505060206138c185828601613784565b9150509250929050565b6000806000606084860312156138e4576138e3614b5b565b5b60006138f286828701613784565b935050602061390386828701613784565b925050604061391486828701613849565b9150509250925092565b6000806000806080858703121561393857613937614b5b565b5b600061394687828801613784565b945050602061395787828801613784565b935050604061396887828801613849565b925050606085013567ffffffffffffffff81111561398957613988614b56565b5b613995878288016137ed565b91505092959194509250565b600080604083850312156139b8576139b7614b5b565b5b60006139c685828601613784565b92505060206139d785828601613799565b9150509250929050565b600080604083850312156139f8576139f7614b5b565b5b6000613a0685828601613784565b9250506020613a1785828601613849565b9150509250929050565b600060208284031215613a3757613a36614b5b565b5b6000613a45848285016137ae565b91505092915050565b60008060408385031215613a6557613a64614b5b565b5b6000613a73858286016137ae565b9250506020613a8485828601613784565b9150509250929050565b600060208284031215613aa457613aa3614b5b565b5b6000613ab2848285016137c3565b91505092915050565b600060208284031215613ad157613ad0614b5b565b5b6000613adf848285016137d8565b91505092915050565b60008060008060808587031215613b0257613b01614b5b565b5b600085013567ffffffffffffffff811115613b2057613b1f614b56565b5b613b2c8782880161381b565b945050602085013567ffffffffffffffff811115613b4d57613b4c614b56565b5b613b598782880161381b565b9350506040613b6a87828801613849565b925050606085013567ffffffffffffffff811115613b8b57613b8a614b56565b5b613b978782880161381b565b91505092959194509250565b600060208284031215613bb957613bb8614b5b565b5b6000613bc784828501613849565b91505092915050565b600080600080600060a08688031215613bec57613beb614b5b565b5b6000613bfa88828901613849565b955050602086013567ffffffffffffffff811115613c1b57613c1a614b56565b5b613c278882890161381b565b945050604086013567ffffffffffffffff811115613c4857613c47614b56565b5b613c548882890161381b565b9350506060613c6588828901613849565b925050608086013567ffffffffffffffff811115613c8657613c85614b56565b5b613c928882890161381b565b9150509295509295909350565b6000613cab8383614173565b60208301905092915050565b613cc08161486b565b82525050565b6000613cd1826146ea565b613cdb8185614718565b9350613ce6836146da565b8060005b83811015613d17578151613cfe8882613c9f565b9750613d098361470b565b925050600181019050613cea565b5085935050505092915050565b613d2d8161487d565b82525050565b613d3c81614889565b82525050565b6000613d4d826146f5565b613d578185614729565b9350613d678185602086016148f8565b613d7081614b60565b840191505092915050565b6000613d8682614700565b613d90818561473a565b9350613da08185602086016148f8565b613da981614b60565b840191505092915050565b6000613dbf82614700565b613dc9818561474b565b9350613dd98185602086016148f8565b80840191505092915050565b6000613df260208361473a565b9150613dfd82614b71565b602082019050919050565b6000613e15602b8361473a565b9150613e2082614b9a565b604082019050919050565b6000613e3860118361473a565b9150613e4382614be9565b602082019050919050565b6000613e5b60248361473a565b9150613e6682614c12565b604082019050919050565b6000613e7e60328361473a565b9150613e8982614c61565b604082019050919050565b6000613ea1601c8361473a565b9150613eac82614cb0565b602082019050919050565b6000613ec460248361473a565b9150613ecf82614cd9565b604082019050919050565b6000613ee760198361473a565b9150613ef282614d28565b602082019050919050565b6000613f0a602c8361473a565b9150613f1582614d51565b604082019050919050565b6000613f2d60388361473a565b9150613f3882614da0565b604082019050919050565b6000613f50602a8361473a565b9150613f5b82614def565b604082019050919050565b6000613f7360298361473a565b9150613f7e82614e3e565b604082019050919050565b6000613f96602e8361473a565b9150613fa182614e8d565b604082019050919050565b6000613fb9601c8361473a565b9150613fc482614edc565b602082019050919050565b6000613fdc60208361473a565b9150613fe782614f05565b602082019050919050565b6000613fff60218361473a565b915061400a82614f2e565b604082019050919050565b600061402260318361473a565b915061402d82614f7d565b604082019050919050565b6000614045602c8361473a565b915061405082614fcc565b604082019050919050565b600061406860298361473a565b91506140738261501b565b604082019050919050565b600061408b602f8361473a565b91506140968261506a565b604082019050919050565b60006140ae60218361473a565b91506140b9826150b9565b604082019050919050565b60006140d160318361473a565b91506140dc82615108565b604082019050919050565b60006140f4602c8361473a565b91506140ff82615157565b604082019050919050565b600061411760178361474b565b9150614122826151a6565b601782019050919050565b600061413a60118361474b565b9150614145826151cf565b601182019050919050565b600061415d602f8361473a565b9150614168826151f8565b604082019050919050565b61417c816148df565b82525050565b61418b816148df565b82525050565b600061419d8285613db4565b91506141a98284613db4565b91508190509392505050565b60006141c08261410a565b91506141cc8285613db4565b91506141d78261412d565b91506141e38284613db4565b91508190509392505050565b60006020820190506142046000830184613cb7565b92915050565b600060808201905061421f6000830187613cb7565b61422c6020830186613cb7565b6142396040830185614182565b818103606083015261424b8184613d42565b905095945050505050565b600060208201905081810360008301526142708184613cc6565b905092915050565b600060208201905061428d6000830184613d24565b92915050565b60006020820190506142a86000830184613d33565b92915050565b600060208201905081810360008301526142c88184613d7b565b905092915050565b600060a08201905081810360008301526142ea8188613d7b565b905081810360208301526142fe8187613d7b565b905081810360408301526143128186613d7b565b90506143216060830185613cb7565b61432e6080830184614182565b9695505050505050565b6000602082019050818103600083015261435181613de5565b9050919050565b6000602082019050818103600083015261437181613e08565b9050919050565b6000602082019050818103600083015261439181613e2b565b9050919050565b600060208201905081810360008301526143b181613e4e565b9050919050565b600060208201905081810360008301526143d181613e71565b9050919050565b600060208201905081810360008301526143f181613e94565b9050919050565b6000602082019050818103600083015261441181613eb7565b9050919050565b6000602082019050818103600083015261443181613eda565b9050919050565b6000602082019050818103600083015261445181613efd565b9050919050565b6000602082019050818103600083015261447181613f20565b9050919050565b6000602082019050818103600083015261449181613f43565b9050919050565b600060208201905081810360008301526144b181613f66565b9050919050565b600060208201905081810360008301526144d181613f89565b9050919050565b600060208201905081810360008301526144f181613fac565b9050919050565b6000602082019050818103600083015261451181613fcf565b9050919050565b6000602082019050818103600083015261453181613ff2565b9050919050565b6000602082019050818103600083015261455181614015565b9050919050565b6000602082019050818103600083015261457181614038565b9050919050565b600060208201905081810360008301526145918161405b565b9050919050565b600060208201905081810360008301526145b18161407e565b9050919050565b600060208201905081810360008301526145d1816140a1565b9050919050565b600060208201905081810360008301526145f1816140c4565b9050919050565b60006020820190508181036000830152614611816140e7565b9050919050565b6000602082019050818103600083015261463181614150565b9050919050565b600060208201905061464d6000830184614182565b92915050565b600061465d61466e565b90506146698282614987565b919050565b6000604051905090565b600067ffffffffffffffff82111561469357614692614b1d565b5b61469c82614b60565b9050602081019050919050565b600067ffffffffffffffff8211156146c4576146c3614b1d565b5b6146cd82614b60565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000614761826148df565b915061476c836148df565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156147a1576147a0614a32565b5b828201905092915050565b60006147b7826148df565b91506147c2836148df565b9250826147d2576147d1614a61565b5b828204905092915050565b60006147e8826148df565b91506147f3836148df565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561482c5761482b614a32565b5b828202905092915050565b6000614842826148df565b915061484d836148df565b9250828210156148605761485f614a32565b5b828203905092915050565b6000614876826148bf565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156149165780820151818401526020810190506148fb565b83811115614925576000848401525b50505050565b6000614936826148df565b9150600082141561494a57614949614a32565b5b600182039050919050565b6000600282049050600182168061496d57607f821691505b6020821081141561498157614980614a90565b5b50919050565b61499082614b60565b810181811067ffffffffffffffff821117156149af576149ae614b1d565b5b80604052505050565b60006149c3826148df565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156149f6576149f5614a32565b5b600182019050919050565b6000614a0c826148df565b9150614a17836148df565b925082614a2757614a26614a61565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008201527f74206f6620626f756e6473000000000000000000000000000000000000000000602082015250565b7f417070204944206d757374206578697374000000000000000000000000000000600082015250565b7f4d757374206265206120646576656c6f70657220746f2063726561746520616e60008201527f2061707000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b7f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008201527f6578697374656e7420746f6b656e000000000000000000000000000000000000602082015250565b7f4d75737420626520616e2061646d696e20746f20776974686472617700000000600082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f596f75206d75737420626520746865206f776e6572206f66207468697320617060008201527f7000000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524337323155524953746f726167653a2055524920717565727920666f722060008201527f6e6f6e6578697374656e7420746f6b656e000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008201527f73206e6f74206f776e0000000000000000000000000000000000000000000000602082015250565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b7f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008201527f7574206f6620626f756e64730000000000000000000000000000000000000000602082015250565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6152508161486b565b811461525b57600080fd5b50565b6152678161487d565b811461527257600080fd5b50565b61527e81614889565b811461528957600080fd5b50565b61529581614893565b81146152a057600080fd5b50565b6152ac816148df565b81146152b757600080fd5b5056fea26469706673582212206d1e1f96a7981ff2283155936d935258895e739fa6191f3ee5d4c71aebe1597c64736f6c63430008060033\";\nvar linkReferences = {};\nvar deployedLinkReferences = {};\nvar abi$1 = {\n  _format: _format,\n  contractName: contractName,\n  sourceName: sourceName,\n  abi: abi,\n  bytecode: bytecode,\n  deployedBytecode: deployedBytecode,\n  linkReferences: linkReferences,\n  deployedLinkReferences: deployedLinkReferences\n};\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nfunction getCjsExportFromNamespace(n) {\n  return n && n['default'] || n;\n}\n\nvar _nodeResolve_empty = {};\nvar _nodeResolve_empty$1 = {\n  __proto__: null,\n  'default': _nodeResolve_empty\n};\nvar require$$0 = getCjsExportFromNamespace(_nodeResolve_empty$1);\nvar bn = createCommonjsModule(function (module) {\n  (function (module, exports) {\n    // Utils\n    function assert(val, msg) {\n      if (!val) throw new Error(msg || 'Assertion failed');\n    } // Could use `inherits` module, but don't want to move from single file\n    // architecture yet.\n\n\n    function inherits(ctor, superCtor) {\n      ctor.super_ = superCtor;\n\n      var TempCtor = function () {};\n\n      TempCtor.prototype = superCtor.prototype;\n      ctor.prototype = new TempCtor();\n      ctor.prototype.constructor = ctor;\n    } // BN\n\n\n    function BN(number, base, endian) {\n      if (BN.isBN(number)) {\n        return number;\n      }\n\n      this.negative = 0;\n      this.words = null;\n      this.length = 0; // Reduction context\n\n      this.red = null;\n\n      if (number !== null) {\n        if (base === 'le' || base === 'be') {\n          endian = base;\n          base = 10;\n        }\n\n        this._init(number || 0, base || 10, endian || 'be');\n      }\n    }\n\n    if (typeof module === 'object') {\n      module.exports = BN;\n    } else {\n      exports.BN = BN;\n    }\n\n    BN.BN = BN;\n    BN.wordSize = 26;\n    var Buffer;\n\n    try {\n      if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n        Buffer = window.Buffer;\n      } else {\n        Buffer = require$$0.Buffer;\n      }\n    } catch (e) {}\n\n    BN.isBN = function isBN(num) {\n      if (num instanceof BN) {\n        return true;\n      }\n\n      return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n    };\n\n    BN.max = function max(left, right) {\n      if (left.cmp(right) > 0) return left;\n      return right;\n    };\n\n    BN.min = function min(left, right) {\n      if (left.cmp(right) < 0) return left;\n      return right;\n    };\n\n    BN.prototype._init = function init(number, base, endian) {\n      if (typeof number === 'number') {\n        return this._initNumber(number, base, endian);\n      }\n\n      if (typeof number === 'object') {\n        return this._initArray(number, base, endian);\n      }\n\n      if (base === 'hex') {\n        base = 16;\n      }\n\n      assert(base === (base | 0) && base >= 2 && base <= 36);\n      number = number.toString().replace(/\\s+/g, '');\n      var start = 0;\n\n      if (number[0] === '-') {\n        start++;\n        this.negative = 1;\n      }\n\n      if (start < number.length) {\n        if (base === 16) {\n          this._parseHex(number, start, endian);\n        } else {\n          this._parseBase(number, base, start);\n\n          if (endian === 'le') {\n            this._initArray(this.toArray(), base, endian);\n          }\n        }\n      }\n    };\n\n    BN.prototype._initNumber = function _initNumber(number, base, endian) {\n      if (number < 0) {\n        this.negative = 1;\n        number = -number;\n      }\n\n      if (number < 0x4000000) {\n        this.words = [number & 0x3ffffff];\n        this.length = 1;\n      } else if (number < 0x10000000000000) {\n        this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n        this.length = 2;\n      } else {\n        assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\n        this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n        this.length = 3;\n      }\n\n      if (endian !== 'le') return; // Reverse the bytes\n\n      this._initArray(this.toArray(), base, endian);\n    };\n\n    BN.prototype._initArray = function _initArray(number, base, endian) {\n      // Perhaps a Uint8Array\n      assert(typeof number.length === 'number');\n\n      if (number.length <= 0) {\n        this.words = [0];\n        this.length = 1;\n        return this;\n      }\n\n      this.length = Math.ceil(number.length / 3);\n      this.words = new Array(this.length);\n\n      for (var i = 0; i < this.length; i++) {\n        this.words[i] = 0;\n      }\n\n      var j, w;\n      var off = 0;\n\n      if (endian === 'be') {\n        for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n          w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n          this.words[j] |= w << off & 0x3ffffff;\n          this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n          off += 24;\n\n          if (off >= 26) {\n            off -= 26;\n            j++;\n          }\n        }\n      } else if (endian === 'le') {\n        for (i = 0, j = 0; i < number.length; i += 3) {\n          w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n          this.words[j] |= w << off & 0x3ffffff;\n          this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n          off += 24;\n\n          if (off >= 26) {\n            off -= 26;\n            j++;\n          }\n        }\n      }\n\n      return this.strip();\n    };\n\n    function parseHex4Bits(string, index) {\n      var c = string.charCodeAt(index); // 'A' - 'F'\n\n      if (c >= 65 && c <= 70) {\n        return c - 55; // 'a' - 'f'\n      } else if (c >= 97 && c <= 102) {\n        return c - 87; // '0' - '9'\n      } else {\n        return c - 48 & 0xf;\n      }\n    }\n\n    function parseHexByte(string, lowerBound, index) {\n      var r = parseHex4Bits(string, index);\n\n      if (index - 1 >= lowerBound) {\n        r |= parseHex4Bits(string, index - 1) << 4;\n      }\n\n      return r;\n    }\n\n    BN.prototype._parseHex = function _parseHex(number, start, endian) {\n      // Create possibly bigger array to ensure that it fits the number\n      this.length = Math.ceil((number.length - start) / 6);\n      this.words = new Array(this.length);\n\n      for (var i = 0; i < this.length; i++) {\n        this.words[i] = 0;\n      } // 24-bits chunks\n\n\n      var off = 0;\n      var j = 0;\n      var w;\n\n      if (endian === 'be') {\n        for (i = number.length - 1; i >= start; i -= 2) {\n          w = parseHexByte(number, start, i) << off;\n          this.words[j] |= w & 0x3ffffff;\n\n          if (off >= 18) {\n            off -= 18;\n            j += 1;\n            this.words[j] |= w >>> 26;\n          } else {\n            off += 8;\n          }\n        }\n      } else {\n        var parseLength = number.length - start;\n\n        for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n          w = parseHexByte(number, start, i) << off;\n          this.words[j] |= w & 0x3ffffff;\n\n          if (off >= 18) {\n            off -= 18;\n            j += 1;\n            this.words[j] |= w >>> 26;\n          } else {\n            off += 8;\n          }\n        }\n      }\n\n      this.strip();\n    };\n\n    function parseBase(str, start, end, mul) {\n      var r = 0;\n      var len = Math.min(str.length, end);\n\n      for (var i = start; i < len; i++) {\n        var c = str.charCodeAt(i) - 48;\n        r *= mul; // 'a'\n\n        if (c >= 49) {\n          r += c - 49 + 0xa; // 'A'\n        } else if (c >= 17) {\n          r += c - 17 + 0xa; // '0' - '9'\n        } else {\n          r += c;\n        }\n      }\n\n      return r;\n    }\n\n    BN.prototype._parseBase = function _parseBase(number, base, start) {\n      // Initialize as zero\n      this.words = [0];\n      this.length = 1; // Find length of limb in base\n\n      for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n        limbLen++;\n      }\n\n      limbLen--;\n      limbPow = limbPow / base | 0;\n      var total = number.length - start;\n      var mod = total % limbLen;\n      var end = Math.min(total, total - mod) + start;\n      var word = 0;\n\n      for (var i = start; i < end; i += limbLen) {\n        word = parseBase(number, i, i + limbLen, base);\n        this.imuln(limbPow);\n\n        if (this.words[0] + word < 0x4000000) {\n          this.words[0] += word;\n        } else {\n          this._iaddn(word);\n        }\n      }\n\n      if (mod !== 0) {\n        var pow = 1;\n        word = parseBase(number, i, number.length, base);\n\n        for (i = 0; i < mod; i++) {\n          pow *= base;\n        }\n\n        this.imuln(pow);\n\n        if (this.words[0] + word < 0x4000000) {\n          this.words[0] += word;\n        } else {\n          this._iaddn(word);\n        }\n      }\n\n      this.strip();\n    };\n\n    BN.prototype.copy = function copy(dest) {\n      dest.words = new Array(this.length);\n\n      for (var i = 0; i < this.length; i++) {\n        dest.words[i] = this.words[i];\n      }\n\n      dest.length = this.length;\n      dest.negative = this.negative;\n      dest.red = this.red;\n    };\n\n    BN.prototype.clone = function clone() {\n      var r = new BN(null);\n      this.copy(r);\n      return r;\n    };\n\n    BN.prototype._expand = function _expand(size) {\n      while (this.length < size) {\n        this.words[this.length++] = 0;\n      }\n\n      return this;\n    }; // Remove leading `0` from `this`\n\n\n    BN.prototype.strip = function strip() {\n      while (this.length > 1 && this.words[this.length - 1] === 0) {\n        this.length--;\n      }\n\n      return this._normSign();\n    };\n\n    BN.prototype._normSign = function _normSign() {\n      // -0 = 0\n      if (this.length === 1 && this.words[0] === 0) {\n        this.negative = 0;\n      }\n\n      return this;\n    };\n\n    BN.prototype.inspect = function inspect() {\n      return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n    };\n    /*\n     var zeros = [];\n    var groupSizes = [];\n    var groupBases = [];\n     var s = '';\n    var i = -1;\n    while (++i < BN.wordSize) {\n      zeros[i] = s;\n      s += '0';\n    }\n    groupSizes[0] = 0;\n    groupSizes[1] = 0;\n    groupBases[0] = 0;\n    groupBases[1] = 0;\n    var base = 2 - 1;\n    while (++base < 36 + 1) {\n      var groupSize = 0;\n      var groupBase = 1;\n      while (groupBase < (1 << BN.wordSize) / base) {\n        groupBase *= base;\n        groupSize += 1;\n      }\n      groupSizes[base] = groupSize;\n      groupBases[base] = groupBase;\n    }\n     */\n\n\n    var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n    var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n    var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n\n    BN.prototype.toString = function toString(base, padding) {\n      base = base || 10;\n      padding = padding | 0 || 1;\n      var out;\n\n      if (base === 16 || base === 'hex') {\n        out = '';\n        var off = 0;\n        var carry = 0;\n\n        for (var i = 0; i < this.length; i++) {\n          var w = this.words[i];\n          var word = ((w << off | carry) & 0xffffff).toString(16);\n          carry = w >>> 24 - off & 0xffffff;\n\n          if (carry !== 0 || i !== this.length - 1) {\n            out = zeros[6 - word.length] + word + out;\n          } else {\n            out = word + out;\n          }\n\n          off += 2;\n\n          if (off >= 26) {\n            off -= 26;\n            i--;\n          }\n        }\n\n        if (carry !== 0) {\n          out = carry.toString(16) + out;\n        }\n\n        while (out.length % padding !== 0) {\n          out = '0' + out;\n        }\n\n        if (this.negative !== 0) {\n          out = '-' + out;\n        }\n\n        return out;\n      }\n\n      if (base === (base | 0) && base >= 2 && base <= 36) {\n        // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n        var groupSize = groupSizes[base]; // var groupBase = Math.pow(base, groupSize);\n\n        var groupBase = groupBases[base];\n        out = '';\n        var c = this.clone();\n        c.negative = 0;\n\n        while (!c.isZero()) {\n          var r = c.modn(groupBase).toString(base);\n          c = c.idivn(groupBase);\n\n          if (!c.isZero()) {\n            out = zeros[groupSize - r.length] + r + out;\n          } else {\n            out = r + out;\n          }\n        }\n\n        if (this.isZero()) {\n          out = '0' + out;\n        }\n\n        while (out.length % padding !== 0) {\n          out = '0' + out;\n        }\n\n        if (this.negative !== 0) {\n          out = '-' + out;\n        }\n\n        return out;\n      }\n\n      assert(false, 'Base should be between 2 and 36');\n    };\n\n    BN.prototype.toNumber = function toNumber() {\n      var ret = this.words[0];\n\n      if (this.length === 2) {\n        ret += this.words[1] * 0x4000000;\n      } else if (this.length === 3 && this.words[2] === 0x01) {\n        // NOTE: at this stage it is known that the top bit is set\n        ret += 0x10000000000000 + this.words[1] * 0x4000000;\n      } else if (this.length > 2) {\n        assert(false, 'Number can only safely store up to 53 bits');\n      }\n\n      return this.negative !== 0 ? -ret : ret;\n    };\n\n    BN.prototype.toJSON = function toJSON() {\n      return this.toString(16);\n    };\n\n    BN.prototype.toBuffer = function toBuffer(endian, length) {\n      assert(typeof Buffer !== 'undefined');\n      return this.toArrayLike(Buffer, endian, length);\n    };\n\n    BN.prototype.toArray = function toArray(endian, length) {\n      return this.toArrayLike(Array, endian, length);\n    };\n\n    BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n      var byteLength = this.byteLength();\n      var reqLength = length || Math.max(1, byteLength);\n      assert(byteLength <= reqLength, 'byte array longer than desired length');\n      assert(reqLength > 0, 'Requested array length <= 0');\n      this.strip();\n      var littleEndian = endian === 'le';\n      var res = new ArrayType(reqLength);\n      var b, i;\n      var q = this.clone();\n\n      if (!littleEndian) {\n        // Assume big-endian\n        for (i = 0; i < reqLength - byteLength; i++) {\n          res[i] = 0;\n        }\n\n        for (i = 0; !q.isZero(); i++) {\n          b = q.andln(0xff);\n          q.iushrn(8);\n          res[reqLength - i - 1] = b;\n        }\n      } else {\n        for (i = 0; !q.isZero(); i++) {\n          b = q.andln(0xff);\n          q.iushrn(8);\n          res[i] = b;\n        }\n\n        for (; i < reqLength; i++) {\n          res[i] = 0;\n        }\n      }\n\n      return res;\n    };\n\n    if (Math.clz32) {\n      BN.prototype._countBits = function _countBits(w) {\n        return 32 - Math.clz32(w);\n      };\n    } else {\n      BN.prototype._countBits = function _countBits(w) {\n        var t = w;\n        var r = 0;\n\n        if (t >= 0x1000) {\n          r += 13;\n          t >>>= 13;\n        }\n\n        if (t >= 0x40) {\n          r += 7;\n          t >>>= 7;\n        }\n\n        if (t >= 0x8) {\n          r += 4;\n          t >>>= 4;\n        }\n\n        if (t >= 0x02) {\n          r += 2;\n          t >>>= 2;\n        }\n\n        return r + t;\n      };\n    }\n\n    BN.prototype._zeroBits = function _zeroBits(w) {\n      // Short-cut\n      if (w === 0) return 26;\n      var t = w;\n      var r = 0;\n\n      if ((t & 0x1fff) === 0) {\n        r += 13;\n        t >>>= 13;\n      }\n\n      if ((t & 0x7f) === 0) {\n        r += 7;\n        t >>>= 7;\n      }\n\n      if ((t & 0xf) === 0) {\n        r += 4;\n        t >>>= 4;\n      }\n\n      if ((t & 0x3) === 0) {\n        r += 2;\n        t >>>= 2;\n      }\n\n      if ((t & 0x1) === 0) {\n        r++;\n      }\n\n      return r;\n    }; // Return number of used bits in a BN\n\n\n    BN.prototype.bitLength = function bitLength() {\n      var w = this.words[this.length - 1];\n\n      var hi = this._countBits(w);\n\n      return (this.length - 1) * 26 + hi;\n    };\n\n    function toBitArray(num) {\n      var w = new Array(num.bitLength());\n\n      for (var bit = 0; bit < w.length; bit++) {\n        var off = bit / 26 | 0;\n        var wbit = bit % 26;\n        w[bit] = (num.words[off] & 1 << wbit) >>> wbit;\n      }\n\n      return w;\n    } // Number of trailing zero bits\n\n\n    BN.prototype.zeroBits = function zeroBits() {\n      if (this.isZero()) return 0;\n      var r = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var b = this._zeroBits(this.words[i]);\n\n        r += b;\n        if (b !== 26) break;\n      }\n\n      return r;\n    };\n\n    BN.prototype.byteLength = function byteLength() {\n      return Math.ceil(this.bitLength() / 8);\n    };\n\n    BN.prototype.toTwos = function toTwos(width) {\n      if (this.negative !== 0) {\n        return this.abs().inotn(width).iaddn(1);\n      }\n\n      return this.clone();\n    };\n\n    BN.prototype.fromTwos = function fromTwos(width) {\n      if (this.testn(width - 1)) {\n        return this.notn(width).iaddn(1).ineg();\n      }\n\n      return this.clone();\n    };\n\n    BN.prototype.isNeg = function isNeg() {\n      return this.negative !== 0;\n    }; // Return negative clone of `this`\n\n\n    BN.prototype.neg = function neg() {\n      return this.clone().ineg();\n    };\n\n    BN.prototype.ineg = function ineg() {\n      if (!this.isZero()) {\n        this.negative ^= 1;\n      }\n\n      return this;\n    }; // Or `num` with `this` in-place\n\n\n    BN.prototype.iuor = function iuor(num) {\n      while (this.length < num.length) {\n        this.words[this.length++] = 0;\n      }\n\n      for (var i = 0; i < num.length; i++) {\n        this.words[i] = this.words[i] | num.words[i];\n      }\n\n      return this.strip();\n    };\n\n    BN.prototype.ior = function ior(num) {\n      assert((this.negative | num.negative) === 0);\n      return this.iuor(num);\n    }; // Or `num` with `this`\n\n\n    BN.prototype.or = function or(num) {\n      if (this.length > num.length) return this.clone().ior(num);\n      return num.clone().ior(this);\n    };\n\n    BN.prototype.uor = function uor(num) {\n      if (this.length > num.length) return this.clone().iuor(num);\n      return num.clone().iuor(this);\n    }; // And `num` with `this` in-place\n\n\n    BN.prototype.iuand = function iuand(num) {\n      // b = min-length(num, this)\n      var b;\n\n      if (this.length > num.length) {\n        b = num;\n      } else {\n        b = this;\n      }\n\n      for (var i = 0; i < b.length; i++) {\n        this.words[i] = this.words[i] & num.words[i];\n      }\n\n      this.length = b.length;\n      return this.strip();\n    };\n\n    BN.prototype.iand = function iand(num) {\n      assert((this.negative | num.negative) === 0);\n      return this.iuand(num);\n    }; // And `num` with `this`\n\n\n    BN.prototype.and = function and(num) {\n      if (this.length > num.length) return this.clone().iand(num);\n      return num.clone().iand(this);\n    };\n\n    BN.prototype.uand = function uand(num) {\n      if (this.length > num.length) return this.clone().iuand(num);\n      return num.clone().iuand(this);\n    }; // Xor `num` with `this` in-place\n\n\n    BN.prototype.iuxor = function iuxor(num) {\n      // a.length > b.length\n      var a;\n      var b;\n\n      if (this.length > num.length) {\n        a = this;\n        b = num;\n      } else {\n        a = num;\n        b = this;\n      }\n\n      for (var i = 0; i < b.length; i++) {\n        this.words[i] = a.words[i] ^ b.words[i];\n      }\n\n      if (this !== a) {\n        for (; i < a.length; i++) {\n          this.words[i] = a.words[i];\n        }\n      }\n\n      this.length = a.length;\n      return this.strip();\n    };\n\n    BN.prototype.ixor = function ixor(num) {\n      assert((this.negative | num.negative) === 0);\n      return this.iuxor(num);\n    }; // Xor `num` with `this`\n\n\n    BN.prototype.xor = function xor(num) {\n      if (this.length > num.length) return this.clone().ixor(num);\n      return num.clone().ixor(this);\n    };\n\n    BN.prototype.uxor = function uxor(num) {\n      if (this.length > num.length) return this.clone().iuxor(num);\n      return num.clone().iuxor(this);\n    }; // Not ``this`` with ``width`` bitwidth\n\n\n    BN.prototype.inotn = function inotn(width) {\n      assert(typeof width === 'number' && width >= 0);\n      var bytesNeeded = Math.ceil(width / 26) | 0;\n      var bitsLeft = width % 26; // Extend the buffer with leading zeroes\n\n      this._expand(bytesNeeded);\n\n      if (bitsLeft > 0) {\n        bytesNeeded--;\n      } // Handle complete words\n\n\n      for (var i = 0; i < bytesNeeded; i++) {\n        this.words[i] = ~this.words[i] & 0x3ffffff;\n      } // Handle the residue\n\n\n      if (bitsLeft > 0) {\n        this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;\n      } // And remove leading zeroes\n\n\n      return this.strip();\n    };\n\n    BN.prototype.notn = function notn(width) {\n      return this.clone().inotn(width);\n    }; // Set `bit` of `this`\n\n\n    BN.prototype.setn = function setn(bit, val) {\n      assert(typeof bit === 'number' && bit >= 0);\n      var off = bit / 26 | 0;\n      var wbit = bit % 26;\n\n      this._expand(off + 1);\n\n      if (val) {\n        this.words[off] = this.words[off] | 1 << wbit;\n      } else {\n        this.words[off] = this.words[off] & ~(1 << wbit);\n      }\n\n      return this.strip();\n    }; // Add `num` to `this` in-place\n\n\n    BN.prototype.iadd = function iadd(num) {\n      var r; // negative + positive\n\n      if (this.negative !== 0 && num.negative === 0) {\n        this.negative = 0;\n        r = this.isub(num);\n        this.negative ^= 1;\n        return this._normSign(); // positive + negative\n      } else if (this.negative === 0 && num.negative !== 0) {\n        num.negative = 0;\n        r = this.isub(num);\n        num.negative = 1;\n        return r._normSign();\n      } // a.length > b.length\n\n\n      var a, b;\n\n      if (this.length > num.length) {\n        a = this;\n        b = num;\n      } else {\n        a = num;\n        b = this;\n      }\n\n      var carry = 0;\n\n      for (var i = 0; i < b.length; i++) {\n        r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n        this.words[i] = r & 0x3ffffff;\n        carry = r >>> 26;\n      }\n\n      for (; carry !== 0 && i < a.length; i++) {\n        r = (a.words[i] | 0) + carry;\n        this.words[i] = r & 0x3ffffff;\n        carry = r >>> 26;\n      }\n\n      this.length = a.length;\n\n      if (carry !== 0) {\n        this.words[this.length] = carry;\n        this.length++; // Copy the rest of the words\n      } else if (a !== this) {\n        for (; i < a.length; i++) {\n          this.words[i] = a.words[i];\n        }\n      }\n\n      return this;\n    }; // Add `num` to `this`\n\n\n    BN.prototype.add = function add(num) {\n      var res;\n\n      if (num.negative !== 0 && this.negative === 0) {\n        num.negative = 0;\n        res = this.sub(num);\n        num.negative ^= 1;\n        return res;\n      } else if (num.negative === 0 && this.negative !== 0) {\n        this.negative = 0;\n        res = num.sub(this);\n        this.negative = 1;\n        return res;\n      }\n\n      if (this.length > num.length) return this.clone().iadd(num);\n      return num.clone().iadd(this);\n    }; // Subtract `num` from `this` in-place\n\n\n    BN.prototype.isub = function isub(num) {\n      // this - (-num) = this + num\n      if (num.negative !== 0) {\n        num.negative = 0;\n        var r = this.iadd(num);\n        num.negative = 1;\n        return r._normSign(); // -this - num = -(this + num)\n      } else if (this.negative !== 0) {\n        this.negative = 0;\n        this.iadd(num);\n        this.negative = 1;\n        return this._normSign();\n      } // At this point both numbers are positive\n\n\n      var cmp = this.cmp(num); // Optimization - zeroify\n\n      if (cmp === 0) {\n        this.negative = 0;\n        this.length = 1;\n        this.words[0] = 0;\n        return this;\n      } // a > b\n\n\n      var a, b;\n\n      if (cmp > 0) {\n        a = this;\n        b = num;\n      } else {\n        a = num;\n        b = this;\n      }\n\n      var carry = 0;\n\n      for (var i = 0; i < b.length; i++) {\n        r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n        carry = r >> 26;\n        this.words[i] = r & 0x3ffffff;\n      }\n\n      for (; carry !== 0 && i < a.length; i++) {\n        r = (a.words[i] | 0) + carry;\n        carry = r >> 26;\n        this.words[i] = r & 0x3ffffff;\n      } // Copy rest of the words\n\n\n      if (carry === 0 && i < a.length && a !== this) {\n        for (; i < a.length; i++) {\n          this.words[i] = a.words[i];\n        }\n      }\n\n      this.length = Math.max(this.length, i);\n\n      if (a !== this) {\n        this.negative = 1;\n      }\n\n      return this.strip();\n    }; // Subtract `num` from `this`\n\n\n    BN.prototype.sub = function sub(num) {\n      return this.clone().isub(num);\n    };\n\n    function smallMulTo(self, num, out) {\n      out.negative = num.negative ^ self.negative;\n      var len = self.length + num.length | 0;\n      out.length = len;\n      len = len - 1 | 0; // Peel one iteration (compiler can't do it, because of code complexity)\n\n      var a = self.words[0] | 0;\n      var b = num.words[0] | 0;\n      var r = a * b;\n      var lo = r & 0x3ffffff;\n      var carry = r / 0x4000000 | 0;\n      out.words[0] = lo;\n\n      for (var k = 1; k < len; k++) {\n        // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n        // note that ncarry could be >= 0x3ffffff\n        var ncarry = carry >>> 26;\n        var rword = carry & 0x3ffffff;\n        var maxJ = Math.min(k, num.length - 1);\n\n        for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n          var i = k - j | 0;\n          a = self.words[i] | 0;\n          b = num.words[j] | 0;\n          r = a * b + rword;\n          ncarry += r / 0x4000000 | 0;\n          rword = r & 0x3ffffff;\n        }\n\n        out.words[k] = rword | 0;\n        carry = ncarry | 0;\n      }\n\n      if (carry !== 0) {\n        out.words[k] = carry | 0;\n      } else {\n        out.length--;\n      }\n\n      return out.strip();\n    } // TODO(indutny): it may be reasonable to omit it for users who don't need\n    // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n    // multiplication (like elliptic secp256k1).\n\n\n    var comb10MulTo = function comb10MulTo(self, num, out) {\n      var a = self.words;\n      var b = num.words;\n      var o = out.words;\n      var c = 0;\n      var lo;\n      var mid;\n      var hi;\n      var a0 = a[0] | 0;\n      var al0 = a0 & 0x1fff;\n      var ah0 = a0 >>> 13;\n      var a1 = a[1] | 0;\n      var al1 = a1 & 0x1fff;\n      var ah1 = a1 >>> 13;\n      var a2 = a[2] | 0;\n      var al2 = a2 & 0x1fff;\n      var ah2 = a2 >>> 13;\n      var a3 = a[3] | 0;\n      var al3 = a3 & 0x1fff;\n      var ah3 = a3 >>> 13;\n      var a4 = a[4] | 0;\n      var al4 = a4 & 0x1fff;\n      var ah4 = a4 >>> 13;\n      var a5 = a[5] | 0;\n      var al5 = a5 & 0x1fff;\n      var ah5 = a5 >>> 13;\n      var a6 = a[6] | 0;\n      var al6 = a6 & 0x1fff;\n      var ah6 = a6 >>> 13;\n      var a7 = a[7] | 0;\n      var al7 = a7 & 0x1fff;\n      var ah7 = a7 >>> 13;\n      var a8 = a[8] | 0;\n      var al8 = a8 & 0x1fff;\n      var ah8 = a8 >>> 13;\n      var a9 = a[9] | 0;\n      var al9 = a9 & 0x1fff;\n      var ah9 = a9 >>> 13;\n      var b0 = b[0] | 0;\n      var bl0 = b0 & 0x1fff;\n      var bh0 = b0 >>> 13;\n      var b1 = b[1] | 0;\n      var bl1 = b1 & 0x1fff;\n      var bh1 = b1 >>> 13;\n      var b2 = b[2] | 0;\n      var bl2 = b2 & 0x1fff;\n      var bh2 = b2 >>> 13;\n      var b3 = b[3] | 0;\n      var bl3 = b3 & 0x1fff;\n      var bh3 = b3 >>> 13;\n      var b4 = b[4] | 0;\n      var bl4 = b4 & 0x1fff;\n      var bh4 = b4 >>> 13;\n      var b5 = b[5] | 0;\n      var bl5 = b5 & 0x1fff;\n      var bh5 = b5 >>> 13;\n      var b6 = b[6] | 0;\n      var bl6 = b6 & 0x1fff;\n      var bh6 = b6 >>> 13;\n      var b7 = b[7] | 0;\n      var bl7 = b7 & 0x1fff;\n      var bh7 = b7 >>> 13;\n      var b8 = b[8] | 0;\n      var bl8 = b8 & 0x1fff;\n      var bh8 = b8 >>> 13;\n      var b9 = b[9] | 0;\n      var bl9 = b9 & 0x1fff;\n      var bh9 = b9 >>> 13;\n      out.negative = self.negative ^ num.negative;\n      out.length = 19;\n      /* k = 0 */\n\n      lo = Math.imul(al0, bl0);\n      mid = Math.imul(al0, bh0);\n      mid = mid + Math.imul(ah0, bl0) | 0;\n      hi = Math.imul(ah0, bh0);\n      var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n      w0 &= 0x3ffffff;\n      /* k = 1 */\n\n      lo = Math.imul(al1, bl0);\n      mid = Math.imul(al1, bh0);\n      mid = mid + Math.imul(ah1, bl0) | 0;\n      hi = Math.imul(ah1, bh0);\n      lo = lo + Math.imul(al0, bl1) | 0;\n      mid = mid + Math.imul(al0, bh1) | 0;\n      mid = mid + Math.imul(ah0, bl1) | 0;\n      hi = hi + Math.imul(ah0, bh1) | 0;\n      var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n      w1 &= 0x3ffffff;\n      /* k = 2 */\n\n      lo = Math.imul(al2, bl0);\n      mid = Math.imul(al2, bh0);\n      mid = mid + Math.imul(ah2, bl0) | 0;\n      hi = Math.imul(ah2, bh0);\n      lo = lo + Math.imul(al1, bl1) | 0;\n      mid = mid + Math.imul(al1, bh1) | 0;\n      mid = mid + Math.imul(ah1, bl1) | 0;\n      hi = hi + Math.imul(ah1, bh1) | 0;\n      lo = lo + Math.imul(al0, bl2) | 0;\n      mid = mid + Math.imul(al0, bh2) | 0;\n      mid = mid + Math.imul(ah0, bl2) | 0;\n      hi = hi + Math.imul(ah0, bh2) | 0;\n      var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n      w2 &= 0x3ffffff;\n      /* k = 3 */\n\n      lo = Math.imul(al3, bl0);\n      mid = Math.imul(al3, bh0);\n      mid = mid + Math.imul(ah3, bl0) | 0;\n      hi = Math.imul(ah3, bh0);\n      lo = lo + Math.imul(al2, bl1) | 0;\n      mid = mid + Math.imul(al2, bh1) | 0;\n      mid = mid + Math.imul(ah2, bl1) | 0;\n      hi = hi + Math.imul(ah2, bh1) | 0;\n      lo = lo + Math.imul(al1, bl2) | 0;\n      mid = mid + Math.imul(al1, bh2) | 0;\n      mid = mid + Math.imul(ah1, bl2) | 0;\n      hi = hi + Math.imul(ah1, bh2) | 0;\n      lo = lo + Math.imul(al0, bl3) | 0;\n      mid = mid + Math.imul(al0, bh3) | 0;\n      mid = mid + Math.imul(ah0, bl3) | 0;\n      hi = hi + Math.imul(ah0, bh3) | 0;\n      var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n      w3 &= 0x3ffffff;\n      /* k = 4 */\n\n      lo = Math.imul(al4, bl0);\n      mid = Math.imul(al4, bh0);\n      mid = mid + Math.imul(ah4, bl0) | 0;\n      hi = Math.imul(ah4, bh0);\n      lo = lo + Math.imul(al3, bl1) | 0;\n      mid = mid + Math.imul(al3, bh1) | 0;\n      mid = mid + Math.imul(ah3, bl1) | 0;\n      hi = hi + Math.imul(ah3, bh1) | 0;\n      lo = lo + Math.imul(al2, bl2) | 0;\n      mid = mid + Math.imul(al2, bh2) | 0;\n      mid = mid + Math.imul(ah2, bl2) | 0;\n      hi = hi + Math.imul(ah2, bh2) | 0;\n      lo = lo + Math.imul(al1, bl3) | 0;\n      mid = mid + Math.imul(al1, bh3) | 0;\n      mid = mid + Math.imul(ah1, bl3) | 0;\n      hi = hi + Math.imul(ah1, bh3) | 0;\n      lo = lo + Math.imul(al0, bl4) | 0;\n      mid = mid + Math.imul(al0, bh4) | 0;\n      mid = mid + Math.imul(ah0, bl4) | 0;\n      hi = hi + Math.imul(ah0, bh4) | 0;\n      var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n      w4 &= 0x3ffffff;\n      /* k = 5 */\n\n      lo = Math.imul(al5, bl0);\n      mid = Math.imul(al5, bh0);\n      mid = mid + Math.imul(ah5, bl0) | 0;\n      hi = Math.imul(ah5, bh0);\n      lo = lo + Math.imul(al4, bl1) | 0;\n      mid = mid + Math.imul(al4, bh1) | 0;\n      mid = mid + Math.imul(ah4, bl1) | 0;\n      hi = hi + Math.imul(ah4, bh1) | 0;\n      lo = lo + Math.imul(al3, bl2) | 0;\n      mid = mid + Math.imul(al3, bh2) | 0;\n      mid = mid + Math.imul(ah3, bl2) | 0;\n      hi = hi + Math.imul(ah3, bh2) | 0;\n      lo = lo + Math.imul(al2, bl3) | 0;\n      mid = mid + Math.imul(al2, bh3) | 0;\n      mid = mid + Math.imul(ah2, bl3) | 0;\n      hi = hi + Math.imul(ah2, bh3) | 0;\n      lo = lo + Math.imul(al1, bl4) | 0;\n      mid = mid + Math.imul(al1, bh4) | 0;\n      mid = mid + Math.imul(ah1, bl4) | 0;\n      hi = hi + Math.imul(ah1, bh4) | 0;\n      lo = lo + Math.imul(al0, bl5) | 0;\n      mid = mid + Math.imul(al0, bh5) | 0;\n      mid = mid + Math.imul(ah0, bl5) | 0;\n      hi = hi + Math.imul(ah0, bh5) | 0;\n      var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n      w5 &= 0x3ffffff;\n      /* k = 6 */\n\n      lo = Math.imul(al6, bl0);\n      mid = Math.imul(al6, bh0);\n      mid = mid + Math.imul(ah6, bl0) | 0;\n      hi = Math.imul(ah6, bh0);\n      lo = lo + Math.imul(al5, bl1) | 0;\n      mid = mid + Math.imul(al5, bh1) | 0;\n      mid = mid + Math.imul(ah5, bl1) | 0;\n      hi = hi + Math.imul(ah5, bh1) | 0;\n      lo = lo + Math.imul(al4, bl2) | 0;\n      mid = mid + Math.imul(al4, bh2) | 0;\n      mid = mid + Math.imul(ah4, bl2) | 0;\n      hi = hi + Math.imul(ah4, bh2) | 0;\n      lo = lo + Math.imul(al3, bl3) | 0;\n      mid = mid + Math.imul(al3, bh3) | 0;\n      mid = mid + Math.imul(ah3, bl3) | 0;\n      hi = hi + Math.imul(ah3, bh3) | 0;\n      lo = lo + Math.imul(al2, bl4) | 0;\n      mid = mid + Math.imul(al2, bh4) | 0;\n      mid = mid + Math.imul(ah2, bl4) | 0;\n      hi = hi + Math.imul(ah2, bh4) | 0;\n      lo = lo + Math.imul(al1, bl5) | 0;\n      mid = mid + Math.imul(al1, bh5) | 0;\n      mid = mid + Math.imul(ah1, bl5) | 0;\n      hi = hi + Math.imul(ah1, bh5) | 0;\n      lo = lo + Math.imul(al0, bl6) | 0;\n      mid = mid + Math.imul(al0, bh6) | 0;\n      mid = mid + Math.imul(ah0, bl6) | 0;\n      hi = hi + Math.imul(ah0, bh6) | 0;\n      var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n      w6 &= 0x3ffffff;\n      /* k = 7 */\n\n      lo = Math.imul(al7, bl0);\n      mid = Math.imul(al7, bh0);\n      mid = mid + Math.imul(ah7, bl0) | 0;\n      hi = Math.imul(ah7, bh0);\n      lo = lo + Math.imul(al6, bl1) | 0;\n      mid = mid + Math.imul(al6, bh1) | 0;\n      mid = mid + Math.imul(ah6, bl1) | 0;\n      hi = hi + Math.imul(ah6, bh1) | 0;\n      lo = lo + Math.imul(al5, bl2) | 0;\n      mid = mid + Math.imul(al5, bh2) | 0;\n      mid = mid + Math.imul(ah5, bl2) | 0;\n      hi = hi + Math.imul(ah5, bh2) | 0;\n      lo = lo + Math.imul(al4, bl3) | 0;\n      mid = mid + Math.imul(al4, bh3) | 0;\n      mid = mid + Math.imul(ah4, bl3) | 0;\n      hi = hi + Math.imul(ah4, bh3) | 0;\n      lo = lo + Math.imul(al3, bl4) | 0;\n      mid = mid + Math.imul(al3, bh4) | 0;\n      mid = mid + Math.imul(ah3, bl4) | 0;\n      hi = hi + Math.imul(ah3, bh4) | 0;\n      lo = lo + Math.imul(al2, bl5) | 0;\n      mid = mid + Math.imul(al2, bh5) | 0;\n      mid = mid + Math.imul(ah2, bl5) | 0;\n      hi = hi + Math.imul(ah2, bh5) | 0;\n      lo = lo + Math.imul(al1, bl6) | 0;\n      mid = mid + Math.imul(al1, bh6) | 0;\n      mid = mid + Math.imul(ah1, bl6) | 0;\n      hi = hi + Math.imul(ah1, bh6) | 0;\n      lo = lo + Math.imul(al0, bl7) | 0;\n      mid = mid + Math.imul(al0, bh7) | 0;\n      mid = mid + Math.imul(ah0, bl7) | 0;\n      hi = hi + Math.imul(ah0, bh7) | 0;\n      var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n      w7 &= 0x3ffffff;\n      /* k = 8 */\n\n      lo = Math.imul(al8, bl0);\n      mid = Math.imul(al8, bh0);\n      mid = mid + Math.imul(ah8, bl0) | 0;\n      hi = Math.imul(ah8, bh0);\n      lo = lo + Math.imul(al7, bl1) | 0;\n      mid = mid + Math.imul(al7, bh1) | 0;\n      mid = mid + Math.imul(ah7, bl1) | 0;\n      hi = hi + Math.imul(ah7, bh1) | 0;\n      lo = lo + Math.imul(al6, bl2) | 0;\n      mid = mid + Math.imul(al6, bh2) | 0;\n      mid = mid + Math.imul(ah6, bl2) | 0;\n      hi = hi + Math.imul(ah6, bh2) | 0;\n      lo = lo + Math.imul(al5, bl3) | 0;\n      mid = mid + Math.imul(al5, bh3) | 0;\n      mid = mid + Math.imul(ah5, bl3) | 0;\n      hi = hi + Math.imul(ah5, bh3) | 0;\n      lo = lo + Math.imul(al4, bl4) | 0;\n      mid = mid + Math.imul(al4, bh4) | 0;\n      mid = mid + Math.imul(ah4, bl4) | 0;\n      hi = hi + Math.imul(ah4, bh4) | 0;\n      lo = lo + Math.imul(al3, bl5) | 0;\n      mid = mid + Math.imul(al3, bh5) | 0;\n      mid = mid + Math.imul(ah3, bl5) | 0;\n      hi = hi + Math.imul(ah3, bh5) | 0;\n      lo = lo + Math.imul(al2, bl6) | 0;\n      mid = mid + Math.imul(al2, bh6) | 0;\n      mid = mid + Math.imul(ah2, bl6) | 0;\n      hi = hi + Math.imul(ah2, bh6) | 0;\n      lo = lo + Math.imul(al1, bl7) | 0;\n      mid = mid + Math.imul(al1, bh7) | 0;\n      mid = mid + Math.imul(ah1, bl7) | 0;\n      hi = hi + Math.imul(ah1, bh7) | 0;\n      lo = lo + Math.imul(al0, bl8) | 0;\n      mid = mid + Math.imul(al0, bh8) | 0;\n      mid = mid + Math.imul(ah0, bl8) | 0;\n      hi = hi + Math.imul(ah0, bh8) | 0;\n      var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n      w8 &= 0x3ffffff;\n      /* k = 9 */\n\n      lo = Math.imul(al9, bl0);\n      mid = Math.imul(al9, bh0);\n      mid = mid + Math.imul(ah9, bl0) | 0;\n      hi = Math.imul(ah9, bh0);\n      lo = lo + Math.imul(al8, bl1) | 0;\n      mid = mid + Math.imul(al8, bh1) | 0;\n      mid = mid + Math.imul(ah8, bl1) | 0;\n      hi = hi + Math.imul(ah8, bh1) | 0;\n      lo = lo + Math.imul(al7, bl2) | 0;\n      mid = mid + Math.imul(al7, bh2) | 0;\n      mid = mid + Math.imul(ah7, bl2) | 0;\n      hi = hi + Math.imul(ah7, bh2) | 0;\n      lo = lo + Math.imul(al6, bl3) | 0;\n      mid = mid + Math.imul(al6, bh3) | 0;\n      mid = mid + Math.imul(ah6, bl3) | 0;\n      hi = hi + Math.imul(ah6, bh3) | 0;\n      lo = lo + Math.imul(al5, bl4) | 0;\n      mid = mid + Math.imul(al5, bh4) | 0;\n      mid = mid + Math.imul(ah5, bl4) | 0;\n      hi = hi + Math.imul(ah5, bh4) | 0;\n      lo = lo + Math.imul(al4, bl5) | 0;\n      mid = mid + Math.imul(al4, bh5) | 0;\n      mid = mid + Math.imul(ah4, bl5) | 0;\n      hi = hi + Math.imul(ah4, bh5) | 0;\n      lo = lo + Math.imul(al3, bl6) | 0;\n      mid = mid + Math.imul(al3, bh6) | 0;\n      mid = mid + Math.imul(ah3, bl6) | 0;\n      hi = hi + Math.imul(ah3, bh6) | 0;\n      lo = lo + Math.imul(al2, bl7) | 0;\n      mid = mid + Math.imul(al2, bh7) | 0;\n      mid = mid + Math.imul(ah2, bl7) | 0;\n      hi = hi + Math.imul(ah2, bh7) | 0;\n      lo = lo + Math.imul(al1, bl8) | 0;\n      mid = mid + Math.imul(al1, bh8) | 0;\n      mid = mid + Math.imul(ah1, bl8) | 0;\n      hi = hi + Math.imul(ah1, bh8) | 0;\n      lo = lo + Math.imul(al0, bl9) | 0;\n      mid = mid + Math.imul(al0, bh9) | 0;\n      mid = mid + Math.imul(ah0, bl9) | 0;\n      hi = hi + Math.imul(ah0, bh9) | 0;\n      var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n      w9 &= 0x3ffffff;\n      /* k = 10 */\n\n      lo = Math.imul(al9, bl1);\n      mid = Math.imul(al9, bh1);\n      mid = mid + Math.imul(ah9, bl1) | 0;\n      hi = Math.imul(ah9, bh1);\n      lo = lo + Math.imul(al8, bl2) | 0;\n      mid = mid + Math.imul(al8, bh2) | 0;\n      mid = mid + Math.imul(ah8, bl2) | 0;\n      hi = hi + Math.imul(ah8, bh2) | 0;\n      lo = lo + Math.imul(al7, bl3) | 0;\n      mid = mid + Math.imul(al7, bh3) | 0;\n      mid = mid + Math.imul(ah7, bl3) | 0;\n      hi = hi + Math.imul(ah7, bh3) | 0;\n      lo = lo + Math.imul(al6, bl4) | 0;\n      mid = mid + Math.imul(al6, bh4) | 0;\n      mid = mid + Math.imul(ah6, bl4) | 0;\n      hi = hi + Math.imul(ah6, bh4) | 0;\n      lo = lo + Math.imul(al5, bl5) | 0;\n      mid = mid + Math.imul(al5, bh5) | 0;\n      mid = mid + Math.imul(ah5, bl5) | 0;\n      hi = hi + Math.imul(ah5, bh5) | 0;\n      lo = lo + Math.imul(al4, bl6) | 0;\n      mid = mid + Math.imul(al4, bh6) | 0;\n      mid = mid + Math.imul(ah4, bl6) | 0;\n      hi = hi + Math.imul(ah4, bh6) | 0;\n      lo = lo + Math.imul(al3, bl7) | 0;\n      mid = mid + Math.imul(al3, bh7) | 0;\n      mid = mid + Math.imul(ah3, bl7) | 0;\n      hi = hi + Math.imul(ah3, bh7) | 0;\n      lo = lo + Math.imul(al2, bl8) | 0;\n      mid = mid + Math.imul(al2, bh8) | 0;\n      mid = mid + Math.imul(ah2, bl8) | 0;\n      hi = hi + Math.imul(ah2, bh8) | 0;\n      lo = lo + Math.imul(al1, bl9) | 0;\n      mid = mid + Math.imul(al1, bh9) | 0;\n      mid = mid + Math.imul(ah1, bl9) | 0;\n      hi = hi + Math.imul(ah1, bh9) | 0;\n      var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n      w10 &= 0x3ffffff;\n      /* k = 11 */\n\n      lo = Math.imul(al9, bl2);\n      mid = Math.imul(al9, bh2);\n      mid = mid + Math.imul(ah9, bl2) | 0;\n      hi = Math.imul(ah9, bh2);\n      lo = lo + Math.imul(al8, bl3) | 0;\n      mid = mid + Math.imul(al8, bh3) | 0;\n      mid = mid + Math.imul(ah8, bl3) | 0;\n      hi = hi + Math.imul(ah8, bh3) | 0;\n      lo = lo + Math.imul(al7, bl4) | 0;\n      mid = mid + Math.imul(al7, bh4) | 0;\n      mid = mid + Math.imul(ah7, bl4) | 0;\n      hi = hi + Math.imul(ah7, bh4) | 0;\n      lo = lo + Math.imul(al6, bl5) | 0;\n      mid = mid + Math.imul(al6, bh5) | 0;\n      mid = mid + Math.imul(ah6, bl5) | 0;\n      hi = hi + Math.imul(ah6, bh5) | 0;\n      lo = lo + Math.imul(al5, bl6) | 0;\n      mid = mid + Math.imul(al5, bh6) | 0;\n      mid = mid + Math.imul(ah5, bl6) | 0;\n      hi = hi + Math.imul(ah5, bh6) | 0;\n      lo = lo + Math.imul(al4, bl7) | 0;\n      mid = mid + Math.imul(al4, bh7) | 0;\n      mid = mid + Math.imul(ah4, bl7) | 0;\n      hi = hi + Math.imul(ah4, bh7) | 0;\n      lo = lo + Math.imul(al3, bl8) | 0;\n      mid = mid + Math.imul(al3, bh8) | 0;\n      mid = mid + Math.imul(ah3, bl8) | 0;\n      hi = hi + Math.imul(ah3, bh8) | 0;\n      lo = lo + Math.imul(al2, bl9) | 0;\n      mid = mid + Math.imul(al2, bh9) | 0;\n      mid = mid + Math.imul(ah2, bl9) | 0;\n      hi = hi + Math.imul(ah2, bh9) | 0;\n      var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n      w11 &= 0x3ffffff;\n      /* k = 12 */\n\n      lo = Math.imul(al9, bl3);\n      mid = Math.imul(al9, bh3);\n      mid = mid + Math.imul(ah9, bl3) | 0;\n      hi = Math.imul(ah9, bh3);\n      lo = lo + Math.imul(al8, bl4) | 0;\n      mid = mid + Math.imul(al8, bh4) | 0;\n      mid = mid + Math.imul(ah8, bl4) | 0;\n      hi = hi + Math.imul(ah8, bh4) | 0;\n      lo = lo + Math.imul(al7, bl5) | 0;\n      mid = mid + Math.imul(al7, bh5) | 0;\n      mid = mid + Math.imul(ah7, bl5) | 0;\n      hi = hi + Math.imul(ah7, bh5) | 0;\n      lo = lo + Math.imul(al6, bl6) | 0;\n      mid = mid + Math.imul(al6, bh6) | 0;\n      mid = mid + Math.imul(ah6, bl6) | 0;\n      hi = hi + Math.imul(ah6, bh6) | 0;\n      lo = lo + Math.imul(al5, bl7) | 0;\n      mid = mid + Math.imul(al5, bh7) | 0;\n      mid = mid + Math.imul(ah5, bl7) | 0;\n      hi = hi + Math.imul(ah5, bh7) | 0;\n      lo = lo + Math.imul(al4, bl8) | 0;\n      mid = mid + Math.imul(al4, bh8) | 0;\n      mid = mid + Math.imul(ah4, bl8) | 0;\n      hi = hi + Math.imul(ah4, bh8) | 0;\n      lo = lo + Math.imul(al3, bl9) | 0;\n      mid = mid + Math.imul(al3, bh9) | 0;\n      mid = mid + Math.imul(ah3, bl9) | 0;\n      hi = hi + Math.imul(ah3, bh9) | 0;\n      var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n      w12 &= 0x3ffffff;\n      /* k = 13 */\n\n      lo = Math.imul(al9, bl4);\n      mid = Math.imul(al9, bh4);\n      mid = mid + Math.imul(ah9, bl4) | 0;\n      hi = Math.imul(ah9, bh4);\n      lo = lo + Math.imul(al8, bl5) | 0;\n      mid = mid + Math.imul(al8, bh5) | 0;\n      mid = mid + Math.imul(ah8, bl5) | 0;\n      hi = hi + Math.imul(ah8, bh5) | 0;\n      lo = lo + Math.imul(al7, bl6) | 0;\n      mid = mid + Math.imul(al7, bh6) | 0;\n      mid = mid + Math.imul(ah7, bl6) | 0;\n      hi = hi + Math.imul(ah7, bh6) | 0;\n      lo = lo + Math.imul(al6, bl7) | 0;\n      mid = mid + Math.imul(al6, bh7) | 0;\n      mid = mid + Math.imul(ah6, bl7) | 0;\n      hi = hi + Math.imul(ah6, bh7) | 0;\n      lo = lo + Math.imul(al5, bl8) | 0;\n      mid = mid + Math.imul(al5, bh8) | 0;\n      mid = mid + Math.imul(ah5, bl8) | 0;\n      hi = hi + Math.imul(ah5, bh8) | 0;\n      lo = lo + Math.imul(al4, bl9) | 0;\n      mid = mid + Math.imul(al4, bh9) | 0;\n      mid = mid + Math.imul(ah4, bl9) | 0;\n      hi = hi + Math.imul(ah4, bh9) | 0;\n      var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n      w13 &= 0x3ffffff;\n      /* k = 14 */\n\n      lo = Math.imul(al9, bl5);\n      mid = Math.imul(al9, bh5);\n      mid = mid + Math.imul(ah9, bl5) | 0;\n      hi = Math.imul(ah9, bh5);\n      lo = lo + Math.imul(al8, bl6) | 0;\n      mid = mid + Math.imul(al8, bh6) | 0;\n      mid = mid + Math.imul(ah8, bl6) | 0;\n      hi = hi + Math.imul(ah8, bh6) | 0;\n      lo = lo + Math.imul(al7, bl7) | 0;\n      mid = mid + Math.imul(al7, bh7) | 0;\n      mid = mid + Math.imul(ah7, bl7) | 0;\n      hi = hi + Math.imul(ah7, bh7) | 0;\n      lo = lo + Math.imul(al6, bl8) | 0;\n      mid = mid + Math.imul(al6, bh8) | 0;\n      mid = mid + Math.imul(ah6, bl8) | 0;\n      hi = hi + Math.imul(ah6, bh8) | 0;\n      lo = lo + Math.imul(al5, bl9) | 0;\n      mid = mid + Math.imul(al5, bh9) | 0;\n      mid = mid + Math.imul(ah5, bl9) | 0;\n      hi = hi + Math.imul(ah5, bh9) | 0;\n      var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n      w14 &= 0x3ffffff;\n      /* k = 15 */\n\n      lo = Math.imul(al9, bl6);\n      mid = Math.imul(al9, bh6);\n      mid = mid + Math.imul(ah9, bl6) | 0;\n      hi = Math.imul(ah9, bh6);\n      lo = lo + Math.imul(al8, bl7) | 0;\n      mid = mid + Math.imul(al8, bh7) | 0;\n      mid = mid + Math.imul(ah8, bl7) | 0;\n      hi = hi + Math.imul(ah8, bh7) | 0;\n      lo = lo + Math.imul(al7, bl8) | 0;\n      mid = mid + Math.imul(al7, bh8) | 0;\n      mid = mid + Math.imul(ah7, bl8) | 0;\n      hi = hi + Math.imul(ah7, bh8) | 0;\n      lo = lo + Math.imul(al6, bl9) | 0;\n      mid = mid + Math.imul(al6, bh9) | 0;\n      mid = mid + Math.imul(ah6, bl9) | 0;\n      hi = hi + Math.imul(ah6, bh9) | 0;\n      var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n      w15 &= 0x3ffffff;\n      /* k = 16 */\n\n      lo = Math.imul(al9, bl7);\n      mid = Math.imul(al9, bh7);\n      mid = mid + Math.imul(ah9, bl7) | 0;\n      hi = Math.imul(ah9, bh7);\n      lo = lo + Math.imul(al8, bl8) | 0;\n      mid = mid + Math.imul(al8, bh8) | 0;\n      mid = mid + Math.imul(ah8, bl8) | 0;\n      hi = hi + Math.imul(ah8, bh8) | 0;\n      lo = lo + Math.imul(al7, bl9) | 0;\n      mid = mid + Math.imul(al7, bh9) | 0;\n      mid = mid + Math.imul(ah7, bl9) | 0;\n      hi = hi + Math.imul(ah7, bh9) | 0;\n      var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n      w16 &= 0x3ffffff;\n      /* k = 17 */\n\n      lo = Math.imul(al9, bl8);\n      mid = Math.imul(al9, bh8);\n      mid = mid + Math.imul(ah9, bl8) | 0;\n      hi = Math.imul(ah9, bh8);\n      lo = lo + Math.imul(al8, bl9) | 0;\n      mid = mid + Math.imul(al8, bh9) | 0;\n      mid = mid + Math.imul(ah8, bl9) | 0;\n      hi = hi + Math.imul(ah8, bh9) | 0;\n      var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n      w17 &= 0x3ffffff;\n      /* k = 18 */\n\n      lo = Math.imul(al9, bl9);\n      mid = Math.imul(al9, bh9);\n      mid = mid + Math.imul(ah9, bl9) | 0;\n      hi = Math.imul(ah9, bh9);\n      var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n      w18 &= 0x3ffffff;\n      o[0] = w0;\n      o[1] = w1;\n      o[2] = w2;\n      o[3] = w3;\n      o[4] = w4;\n      o[5] = w5;\n      o[6] = w6;\n      o[7] = w7;\n      o[8] = w8;\n      o[9] = w9;\n      o[10] = w10;\n      o[11] = w11;\n      o[12] = w12;\n      o[13] = w13;\n      o[14] = w14;\n      o[15] = w15;\n      o[16] = w16;\n      o[17] = w17;\n      o[18] = w18;\n\n      if (c !== 0) {\n        o[19] = c;\n        out.length++;\n      }\n\n      return out;\n    }; // Polyfill comb\n\n\n    if (!Math.imul) {\n      comb10MulTo = smallMulTo;\n    }\n\n    function bigMulTo(self, num, out) {\n      out.negative = num.negative ^ self.negative;\n      out.length = self.length + num.length;\n      var carry = 0;\n      var hncarry = 0;\n\n      for (var k = 0; k < out.length - 1; k++) {\n        // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n        // note that ncarry could be >= 0x3ffffff\n        var ncarry = hncarry;\n        hncarry = 0;\n        var rword = carry & 0x3ffffff;\n        var maxJ = Math.min(k, num.length - 1);\n\n        for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n          var i = k - j;\n          var a = self.words[i] | 0;\n          var b = num.words[j] | 0;\n          var r = a * b;\n          var lo = r & 0x3ffffff;\n          ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n          lo = lo + rword | 0;\n          rword = lo & 0x3ffffff;\n          ncarry = ncarry + (lo >>> 26) | 0;\n          hncarry += ncarry >>> 26;\n          ncarry &= 0x3ffffff;\n        }\n\n        out.words[k] = rword;\n        carry = ncarry;\n        ncarry = hncarry;\n      }\n\n      if (carry !== 0) {\n        out.words[k] = carry;\n      } else {\n        out.length--;\n      }\n\n      return out.strip();\n    }\n\n    function jumboMulTo(self, num, out) {\n      var fftm = new FFTM();\n      return fftm.mulp(self, num, out);\n    }\n\n    BN.prototype.mulTo = function mulTo(num, out) {\n      var res;\n      var len = this.length + num.length;\n\n      if (this.length === 10 && num.length === 10) {\n        res = comb10MulTo(this, num, out);\n      } else if (len < 63) {\n        res = smallMulTo(this, num, out);\n      } else if (len < 1024) {\n        res = bigMulTo(this, num, out);\n      } else {\n        res = jumboMulTo(this, num, out);\n      }\n\n      return res;\n    }; // Cooley-Tukey algorithm for FFT\n    // slightly revisited to rely on looping instead of recursion\n\n\n    function FFTM(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n\n    FFTM.prototype.makeRBT = function makeRBT(N) {\n      var t = new Array(N);\n      var l = BN.prototype._countBits(N) - 1;\n\n      for (var i = 0; i < N; i++) {\n        t[i] = this.revBin(i, l, N);\n      }\n\n      return t;\n    }; // Returns binary-reversed representation of `x`\n\n\n    FFTM.prototype.revBin = function revBin(x, l, N) {\n      if (x === 0 || x === N - 1) return x;\n      var rb = 0;\n\n      for (var i = 0; i < l; i++) {\n        rb |= (x & 1) << l - i - 1;\n        x >>= 1;\n      }\n\n      return rb;\n    }; // Performs \"tweedling\" phase, therefore 'emulating'\n    // behaviour of the recursive algorithm\n\n\n    FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {\n      for (var i = 0; i < N; i++) {\n        rtws[i] = rws[rbt[i]];\n        itws[i] = iws[rbt[i]];\n      }\n    };\n\n    FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {\n      this.permute(rbt, rws, iws, rtws, itws, N);\n\n      for (var s = 1; s < N; s <<= 1) {\n        var l = s << 1;\n        var rtwdf = Math.cos(2 * Math.PI / l);\n        var itwdf = Math.sin(2 * Math.PI / l);\n\n        for (var p = 0; p < N; p += l) {\n          var rtwdf_ = rtwdf;\n          var itwdf_ = itwdf;\n\n          for (var j = 0; j < s; j++) {\n            var re = rtws[p + j];\n            var ie = itws[p + j];\n            var ro = rtws[p + j + s];\n            var io = itws[p + j + s];\n            var rx = rtwdf_ * ro - itwdf_ * io;\n            io = rtwdf_ * io + itwdf_ * ro;\n            ro = rx;\n            rtws[p + j] = re + ro;\n            itws[p + j] = ie + io;\n            rtws[p + j + s] = re - ro;\n            itws[p + j + s] = ie - io;\n            /* jshint maxdepth : false */\n\n            if (j !== l) {\n              rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n              itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n              rtwdf_ = rx;\n            }\n          }\n        }\n      }\n    };\n\n    FFTM.prototype.guessLen13b = function guessLen13b(n, m) {\n      var N = Math.max(m, n) | 1;\n      var odd = N & 1;\n      var i = 0;\n\n      for (N = N / 2 | 0; N; N = N >>> 1) {\n        i++;\n      }\n\n      return 1 << i + 1 + odd;\n    };\n\n    FFTM.prototype.conjugate = function conjugate(rws, iws, N) {\n      if (N <= 1) return;\n\n      for (var i = 0; i < N / 2; i++) {\n        var t = rws[i];\n        rws[i] = rws[N - i - 1];\n        rws[N - i - 1] = t;\n        t = iws[i];\n        iws[i] = -iws[N - i - 1];\n        iws[N - i - 1] = -t;\n      }\n    };\n\n    FFTM.prototype.normalize13b = function normalize13b(ws, N) {\n      var carry = 0;\n\n      for (var i = 0; i < N / 2; i++) {\n        var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;\n        ws[i] = w & 0x3ffffff;\n\n        if (w < 0x4000000) {\n          carry = 0;\n        } else {\n          carry = w / 0x4000000 | 0;\n        }\n      }\n\n      return ws;\n    };\n\n    FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {\n      var carry = 0;\n\n      for (var i = 0; i < len; i++) {\n        carry = carry + (ws[i] | 0);\n        rws[2 * i] = carry & 0x1fff;\n        carry = carry >>> 13;\n        rws[2 * i + 1] = carry & 0x1fff;\n        carry = carry >>> 13;\n      } // Pad with zeroes\n\n\n      for (i = 2 * len; i < N; ++i) {\n        rws[i] = 0;\n      }\n\n      assert(carry === 0);\n      assert((carry & ~0x1fff) === 0);\n    };\n\n    FFTM.prototype.stub = function stub(N) {\n      var ph = new Array(N);\n\n      for (var i = 0; i < N; i++) {\n        ph[i] = 0;\n      }\n\n      return ph;\n    };\n\n    FFTM.prototype.mulp = function mulp(x, y, out) {\n      var N = 2 * this.guessLen13b(x.length, y.length);\n      var rbt = this.makeRBT(N);\n\n      var _ = this.stub(N);\n\n      var rws = new Array(N);\n      var rwst = new Array(N);\n      var iwst = new Array(N);\n      var nrws = new Array(N);\n      var nrwst = new Array(N);\n      var niwst = new Array(N);\n      var rmws = out.words;\n      rmws.length = N;\n      this.convert13b(x.words, x.length, rws, N);\n      this.convert13b(y.words, y.length, nrws, N);\n      this.transform(rws, _, rwst, iwst, N, rbt);\n      this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n      for (var i = 0; i < N; i++) {\n        var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n        iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n        rwst[i] = rx;\n      }\n\n      this.conjugate(rwst, iwst, N);\n      this.transform(rwst, iwst, rmws, _, N, rbt);\n      this.conjugate(rmws, _, N);\n      this.normalize13b(rmws, N);\n      out.negative = x.negative ^ y.negative;\n      out.length = x.length + y.length;\n      return out.strip();\n    }; // Multiply `this` by `num`\n\n\n    BN.prototype.mul = function mul(num) {\n      var out = new BN(null);\n      out.words = new Array(this.length + num.length);\n      return this.mulTo(num, out);\n    }; // Multiply employing FFT\n\n\n    BN.prototype.mulf = function mulf(num) {\n      var out = new BN(null);\n      out.words = new Array(this.length + num.length);\n      return jumboMulTo(this, num, out);\n    }; // In-place Multiplication\n\n\n    BN.prototype.imul = function imul(num) {\n      return this.clone().mulTo(num, this);\n    };\n\n    BN.prototype.imuln = function imuln(num) {\n      assert(typeof num === 'number');\n      assert(num < 0x4000000); // Carry\n\n      var carry = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var w = (this.words[i] | 0) * num;\n        var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n        carry >>= 26;\n        carry += w / 0x4000000 | 0; // NOTE: lo is 27bit maximum\n\n        carry += lo >>> 26;\n        this.words[i] = lo & 0x3ffffff;\n      }\n\n      if (carry !== 0) {\n        this.words[i] = carry;\n        this.length++;\n      }\n\n      return this;\n    };\n\n    BN.prototype.muln = function muln(num) {\n      return this.clone().imuln(num);\n    }; // `this` * `this`\n\n\n    BN.prototype.sqr = function sqr() {\n      return this.mul(this);\n    }; // `this` * `this` in-place\n\n\n    BN.prototype.isqr = function isqr() {\n      return this.imul(this.clone());\n    }; // Math.pow(`this`, `num`)\n\n\n    BN.prototype.pow = function pow(num) {\n      var w = toBitArray(num);\n      if (w.length === 0) return new BN(1); // Skip leading zeroes\n\n      var res = this;\n\n      for (var i = 0; i < w.length; i++, res = res.sqr()) {\n        if (w[i] !== 0) break;\n      }\n\n      if (++i < w.length) {\n        for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n          if (w[i] === 0) continue;\n          res = res.mul(q);\n        }\n      }\n\n      return res;\n    }; // Shift-left in-place\n\n\n    BN.prototype.iushln = function iushln(bits) {\n      assert(typeof bits === 'number' && bits >= 0);\n      var r = bits % 26;\n      var s = (bits - r) / 26;\n      var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n      var i;\n\n      if (r !== 0) {\n        var carry = 0;\n\n        for (i = 0; i < this.length; i++) {\n          var newCarry = this.words[i] & carryMask;\n          var c = (this.words[i] | 0) - newCarry << r;\n          this.words[i] = c | carry;\n          carry = newCarry >>> 26 - r;\n        }\n\n        if (carry) {\n          this.words[i] = carry;\n          this.length++;\n        }\n      }\n\n      if (s !== 0) {\n        for (i = this.length - 1; i >= 0; i--) {\n          this.words[i + s] = this.words[i];\n        }\n\n        for (i = 0; i < s; i++) {\n          this.words[i] = 0;\n        }\n\n        this.length += s;\n      }\n\n      return this.strip();\n    };\n\n    BN.prototype.ishln = function ishln(bits) {\n      // TODO(indutny): implement me\n      assert(this.negative === 0);\n      return this.iushln(bits);\n    }; // Shift-right in-place\n    // NOTE: `hint` is a lowest bit before trailing zeroes\n    // NOTE: if `extended` is present - it will be filled with destroyed bits\n\n\n    BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n      assert(typeof bits === 'number' && bits >= 0);\n      var h;\n\n      if (hint) {\n        h = (hint - hint % 26) / 26;\n      } else {\n        h = 0;\n      }\n\n      var r = bits % 26;\n      var s = Math.min((bits - r) / 26, this.length);\n      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n      var maskedWords = extended;\n      h -= s;\n      h = Math.max(0, h); // Extended mode, copy masked part\n\n      if (maskedWords) {\n        for (var i = 0; i < s; i++) {\n          maskedWords.words[i] = this.words[i];\n        }\n\n        maskedWords.length = s;\n      }\n\n      if (s === 0) ;else if (this.length > s) {\n        this.length -= s;\n\n        for (i = 0; i < this.length; i++) {\n          this.words[i] = this.words[i + s];\n        }\n      } else {\n        this.words[0] = 0;\n        this.length = 1;\n      }\n      var carry = 0;\n\n      for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n        var word = this.words[i] | 0;\n        this.words[i] = carry << 26 - r | word >>> r;\n        carry = word & mask;\n      } // Push carried bits as a mask\n\n\n      if (maskedWords && carry !== 0) {\n        maskedWords.words[maskedWords.length++] = carry;\n      }\n\n      if (this.length === 0) {\n        this.words[0] = 0;\n        this.length = 1;\n      }\n\n      return this.strip();\n    };\n\n    BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n      // TODO(indutny): implement me\n      assert(this.negative === 0);\n      return this.iushrn(bits, hint, extended);\n    }; // Shift-left\n\n\n    BN.prototype.shln = function shln(bits) {\n      return this.clone().ishln(bits);\n    };\n\n    BN.prototype.ushln = function ushln(bits) {\n      return this.clone().iushln(bits);\n    }; // Shift-right\n\n\n    BN.prototype.shrn = function shrn(bits) {\n      return this.clone().ishrn(bits);\n    };\n\n    BN.prototype.ushrn = function ushrn(bits) {\n      return this.clone().iushrn(bits);\n    }; // Test if n bit is set\n\n\n    BN.prototype.testn = function testn(bit) {\n      assert(typeof bit === 'number' && bit >= 0);\n      var r = bit % 26;\n      var s = (bit - r) / 26;\n      var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n      if (this.length <= s) return false; // Check bit and return\n\n      var w = this.words[s];\n      return !!(w & q);\n    }; // Return only lowers bits of number (in-place)\n\n\n    BN.prototype.imaskn = function imaskn(bits) {\n      assert(typeof bits === 'number' && bits >= 0);\n      var r = bits % 26;\n      var s = (bits - r) / 26;\n      assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n      if (this.length <= s) {\n        return this;\n      }\n\n      if (r !== 0) {\n        s++;\n      }\n\n      this.length = Math.min(s, this.length);\n\n      if (r !== 0) {\n        var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n        this.words[this.length - 1] &= mask;\n      }\n\n      return this.strip();\n    }; // Return only lowers bits of number\n\n\n    BN.prototype.maskn = function maskn(bits) {\n      return this.clone().imaskn(bits);\n    }; // Add plain number `num` to `this`\n\n\n    BN.prototype.iaddn = function iaddn(num) {\n      assert(typeof num === 'number');\n      assert(num < 0x4000000);\n      if (num < 0) return this.isubn(-num); // Possible sign change\n\n      if (this.negative !== 0) {\n        if (this.length === 1 && (this.words[0] | 0) < num) {\n          this.words[0] = num - (this.words[0] | 0);\n          this.negative = 0;\n          return this;\n        }\n\n        this.negative = 0;\n        this.isubn(num);\n        this.negative = 1;\n        return this;\n      } // Add without checks\n\n\n      return this._iaddn(num);\n    };\n\n    BN.prototype._iaddn = function _iaddn(num) {\n      this.words[0] += num; // Carry\n\n      for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n        this.words[i] -= 0x4000000;\n\n        if (i === this.length - 1) {\n          this.words[i + 1] = 1;\n        } else {\n          this.words[i + 1]++;\n        }\n      }\n\n      this.length = Math.max(this.length, i + 1);\n      return this;\n    }; // Subtract plain number `num` from `this`\n\n\n    BN.prototype.isubn = function isubn(num) {\n      assert(typeof num === 'number');\n      assert(num < 0x4000000);\n      if (num < 0) return this.iaddn(-num);\n\n      if (this.negative !== 0) {\n        this.negative = 0;\n        this.iaddn(num);\n        this.negative = 1;\n        return this;\n      }\n\n      this.words[0] -= num;\n\n      if (this.length === 1 && this.words[0] < 0) {\n        this.words[0] = -this.words[0];\n        this.negative = 1;\n      } else {\n        // Carry\n        for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n          this.words[i] += 0x4000000;\n          this.words[i + 1] -= 1;\n        }\n      }\n\n      return this.strip();\n    };\n\n    BN.prototype.addn = function addn(num) {\n      return this.clone().iaddn(num);\n    };\n\n    BN.prototype.subn = function subn(num) {\n      return this.clone().isubn(num);\n    };\n\n    BN.prototype.iabs = function iabs() {\n      this.negative = 0;\n      return this;\n    };\n\n    BN.prototype.abs = function abs() {\n      return this.clone().iabs();\n    };\n\n    BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n      var len = num.length + shift;\n      var i;\n\n      this._expand(len);\n\n      var w;\n      var carry = 0;\n\n      for (i = 0; i < num.length; i++) {\n        w = (this.words[i + shift] | 0) + carry;\n        var right = (num.words[i] | 0) * mul;\n        w -= right & 0x3ffffff;\n        carry = (w >> 26) - (right / 0x4000000 | 0);\n        this.words[i + shift] = w & 0x3ffffff;\n      }\n\n      for (; i < this.length - shift; i++) {\n        w = (this.words[i + shift] | 0) + carry;\n        carry = w >> 26;\n        this.words[i + shift] = w & 0x3ffffff;\n      }\n\n      if (carry === 0) return this.strip(); // Subtraction overflow\n\n      assert(carry === -1);\n      carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        w = -(this.words[i] | 0) + carry;\n        carry = w >> 26;\n        this.words[i] = w & 0x3ffffff;\n      }\n\n      this.negative = 1;\n      return this.strip();\n    };\n\n    BN.prototype._wordDiv = function _wordDiv(num, mode) {\n      var shift = this.length - num.length;\n      var a = this.clone();\n      var b = num; // Normalize\n\n      var bhi = b.words[b.length - 1] | 0;\n\n      var bhiBits = this._countBits(bhi);\n\n      shift = 26 - bhiBits;\n\n      if (shift !== 0) {\n        b = b.ushln(shift);\n        a.iushln(shift);\n        bhi = b.words[b.length - 1] | 0;\n      } // Initialize quotient\n\n\n      var m = a.length - b.length;\n      var q;\n\n      if (mode !== 'mod') {\n        q = new BN(null);\n        q.length = m + 1;\n        q.words = new Array(q.length);\n\n        for (var i = 0; i < q.length; i++) {\n          q.words[i] = 0;\n        }\n      }\n\n      var diff = a.clone()._ishlnsubmul(b, 1, m);\n\n      if (diff.negative === 0) {\n        a = diff;\n\n        if (q) {\n          q.words[m] = 1;\n        }\n      }\n\n      for (var j = m - 1; j >= 0; j--) {\n        var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0); // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n        // (0x7ffffff)\n\n        qj = Math.min(qj / bhi | 0, 0x3ffffff);\n\n        a._ishlnsubmul(b, qj, j);\n\n        while (a.negative !== 0) {\n          qj--;\n          a.negative = 0;\n\n          a._ishlnsubmul(b, 1, j);\n\n          if (!a.isZero()) {\n            a.negative ^= 1;\n          }\n        }\n\n        if (q) {\n          q.words[j] = qj;\n        }\n      }\n\n      if (q) {\n        q.strip();\n      }\n\n      a.strip(); // Denormalize\n\n      if (mode !== 'div' && shift !== 0) {\n        a.iushrn(shift);\n      }\n\n      return {\n        div: q || null,\n        mod: a\n      };\n    }; // NOTE: 1) `mode` can be set to `mod` to request mod only,\n    //       to `div` to request div only, or be absent to\n    //       request both div & mod\n    //       2) `positive` is true if unsigned mod is requested\n\n\n    BN.prototype.divmod = function divmod(num, mode, positive) {\n      assert(!num.isZero());\n\n      if (this.isZero()) {\n        return {\n          div: new BN(0),\n          mod: new BN(0)\n        };\n      }\n\n      var div, mod, res;\n\n      if (this.negative !== 0 && num.negative === 0) {\n        res = this.neg().divmod(num, mode);\n\n        if (mode !== 'mod') {\n          div = res.div.neg();\n        }\n\n        if (mode !== 'div') {\n          mod = res.mod.neg();\n\n          if (positive && mod.negative !== 0) {\n            mod.iadd(num);\n          }\n        }\n\n        return {\n          div: div,\n          mod: mod\n        };\n      }\n\n      if (this.negative === 0 && num.negative !== 0) {\n        res = this.divmod(num.neg(), mode);\n\n        if (mode !== 'mod') {\n          div = res.div.neg();\n        }\n\n        return {\n          div: div,\n          mod: res.mod\n        };\n      }\n\n      if ((this.negative & num.negative) !== 0) {\n        res = this.neg().divmod(num.neg(), mode);\n\n        if (mode !== 'div') {\n          mod = res.mod.neg();\n\n          if (positive && mod.negative !== 0) {\n            mod.isub(num);\n          }\n        }\n\n        return {\n          div: res.div,\n          mod: mod\n        };\n      } // Both numbers are positive at this point\n      // Strip both numbers to approximate shift value\n\n\n      if (num.length > this.length || this.cmp(num) < 0) {\n        return {\n          div: new BN(0),\n          mod: this\n        };\n      } // Very short reduction\n\n\n      if (num.length === 1) {\n        if (mode === 'div') {\n          return {\n            div: this.divn(num.words[0]),\n            mod: null\n          };\n        }\n\n        if (mode === 'mod') {\n          return {\n            div: null,\n            mod: new BN(this.modn(num.words[0]))\n          };\n        }\n\n        return {\n          div: this.divn(num.words[0]),\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return this._wordDiv(num, mode);\n    }; // Find `this` / `num`\n\n\n    BN.prototype.div = function div(num) {\n      return this.divmod(num, 'div', false).div;\n    }; // Find `this` % `num`\n\n\n    BN.prototype.mod = function mod(num) {\n      return this.divmod(num, 'mod', false).mod;\n    };\n\n    BN.prototype.umod = function umod(num) {\n      return this.divmod(num, 'mod', true).mod;\n    }; // Find Round(`this` / `num`)\n\n\n    BN.prototype.divRound = function divRound(num) {\n      var dm = this.divmod(num); // Fast case - exact division\n\n      if (dm.mod.isZero()) return dm.div;\n      var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n      var half = num.ushrn(1);\n      var r2 = num.andln(1);\n      var cmp = mod.cmp(half); // Round down\n\n      if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div; // Round up\n\n      return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n    };\n\n    BN.prototype.modn = function modn(num) {\n      assert(num <= 0x3ffffff);\n      var p = (1 << 26) % num;\n      var acc = 0;\n\n      for (var i = this.length - 1; i >= 0; i--) {\n        acc = (p * acc + (this.words[i] | 0)) % num;\n      }\n\n      return acc;\n    }; // In-place division by number\n\n\n    BN.prototype.idivn = function idivn(num) {\n      assert(num <= 0x3ffffff);\n      var carry = 0;\n\n      for (var i = this.length - 1; i >= 0; i--) {\n        var w = (this.words[i] | 0) + carry * 0x4000000;\n        this.words[i] = w / num | 0;\n        carry = w % num;\n      }\n\n      return this.strip();\n    };\n\n    BN.prototype.divn = function divn(num) {\n      return this.clone().idivn(num);\n    };\n\n    BN.prototype.egcd = function egcd(p) {\n      assert(p.negative === 0);\n      assert(!p.isZero());\n      var x = this;\n      var y = p.clone();\n\n      if (x.negative !== 0) {\n        x = x.umod(p);\n      } else {\n        x = x.clone();\n      } // A * x + B * y = x\n\n\n      var A = new BN(1);\n      var B = new BN(0); // C * x + D * y = y\n\n      var C = new BN(0);\n      var D = new BN(1);\n      var g = 0;\n\n      while (x.isEven() && y.isEven()) {\n        x.iushrn(1);\n        y.iushrn(1);\n        ++g;\n      }\n\n      var yp = y.clone();\n      var xp = x.clone();\n\n      while (!x.isZero()) {\n        for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n        if (i > 0) {\n          x.iushrn(i);\n\n          while (i-- > 0) {\n            if (A.isOdd() || B.isOdd()) {\n              A.iadd(yp);\n              B.isub(xp);\n            }\n\n            A.iushrn(1);\n            B.iushrn(1);\n          }\n        }\n\n        for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n        if (j > 0) {\n          y.iushrn(j);\n\n          while (j-- > 0) {\n            if (C.isOdd() || D.isOdd()) {\n              C.iadd(yp);\n              D.isub(xp);\n            }\n\n            C.iushrn(1);\n            D.iushrn(1);\n          }\n        }\n\n        if (x.cmp(y) >= 0) {\n          x.isub(y);\n          A.isub(C);\n          B.isub(D);\n        } else {\n          y.isub(x);\n          C.isub(A);\n          D.isub(B);\n        }\n      }\n\n      return {\n        a: C,\n        b: D,\n        gcd: y.iushln(g)\n      };\n    }; // This is reduced incarnation of the binary EEA\n    // above, designated to invert members of the\n    // _prime_ fields F(p) at a maximal speed\n\n\n    BN.prototype._invmp = function _invmp(p) {\n      assert(p.negative === 0);\n      assert(!p.isZero());\n      var a = this;\n      var b = p.clone();\n\n      if (a.negative !== 0) {\n        a = a.umod(p);\n      } else {\n        a = a.clone();\n      }\n\n      var x1 = new BN(1);\n      var x2 = new BN(0);\n      var delta = b.clone();\n\n      while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n        for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n        if (i > 0) {\n          a.iushrn(i);\n\n          while (i-- > 0) {\n            if (x1.isOdd()) {\n              x1.iadd(delta);\n            }\n\n            x1.iushrn(1);\n          }\n        }\n\n        for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n        if (j > 0) {\n          b.iushrn(j);\n\n          while (j-- > 0) {\n            if (x2.isOdd()) {\n              x2.iadd(delta);\n            }\n\n            x2.iushrn(1);\n          }\n        }\n\n        if (a.cmp(b) >= 0) {\n          a.isub(b);\n          x1.isub(x2);\n        } else {\n          b.isub(a);\n          x2.isub(x1);\n        }\n      }\n\n      var res;\n\n      if (a.cmpn(1) === 0) {\n        res = x1;\n      } else {\n        res = x2;\n      }\n\n      if (res.cmpn(0) < 0) {\n        res.iadd(p);\n      }\n\n      return res;\n    };\n\n    BN.prototype.gcd = function gcd(num) {\n      if (this.isZero()) return num.abs();\n      if (num.isZero()) return this.abs();\n      var a = this.clone();\n      var b = num.clone();\n      a.negative = 0;\n      b.negative = 0; // Remove common factor of two\n\n      for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n        a.iushrn(1);\n        b.iushrn(1);\n      }\n\n      do {\n        while (a.isEven()) {\n          a.iushrn(1);\n        }\n\n        while (b.isEven()) {\n          b.iushrn(1);\n        }\n\n        var r = a.cmp(b);\n\n        if (r < 0) {\n          // Swap `a` and `b` to make `a` always bigger than `b`\n          var t = a;\n          a = b;\n          b = t;\n        } else if (r === 0 || b.cmpn(1) === 0) {\n          break;\n        }\n\n        a.isub(b);\n      } while (true);\n\n      return b.iushln(shift);\n    }; // Invert number in the field F(num)\n\n\n    BN.prototype.invm = function invm(num) {\n      return this.egcd(num).a.umod(num);\n    };\n\n    BN.prototype.isEven = function isEven() {\n      return (this.words[0] & 1) === 0;\n    };\n\n    BN.prototype.isOdd = function isOdd() {\n      return (this.words[0] & 1) === 1;\n    }; // And first word and num\n\n\n    BN.prototype.andln = function andln(num) {\n      return this.words[0] & num;\n    }; // Increment at the bit position in-line\n\n\n    BN.prototype.bincn = function bincn(bit) {\n      assert(typeof bit === 'number');\n      var r = bit % 26;\n      var s = (bit - r) / 26;\n      var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n      if (this.length <= s) {\n        this._expand(s + 1);\n\n        this.words[s] |= q;\n        return this;\n      } // Add bit and propagate, if needed\n\n\n      var carry = q;\n\n      for (var i = s; carry !== 0 && i < this.length; i++) {\n        var w = this.words[i] | 0;\n        w += carry;\n        carry = w >>> 26;\n        w &= 0x3ffffff;\n        this.words[i] = w;\n      }\n\n      if (carry !== 0) {\n        this.words[i] = carry;\n        this.length++;\n      }\n\n      return this;\n    };\n\n    BN.prototype.isZero = function isZero() {\n      return this.length === 1 && this.words[0] === 0;\n    };\n\n    BN.prototype.cmpn = function cmpn(num) {\n      var negative = num < 0;\n      if (this.negative !== 0 && !negative) return -1;\n      if (this.negative === 0 && negative) return 1;\n      this.strip();\n      var res;\n\n      if (this.length > 1) {\n        res = 1;\n      } else {\n        if (negative) {\n          num = -num;\n        }\n\n        assert(num <= 0x3ffffff, 'Number is too big');\n        var w = this.words[0] | 0;\n        res = w === num ? 0 : w < num ? -1 : 1;\n      }\n\n      if (this.negative !== 0) return -res | 0;\n      return res;\n    }; // Compare two numbers and return:\n    // 1 - if `this` > `num`\n    // 0 - if `this` == `num`\n    // -1 - if `this` < `num`\n\n\n    BN.prototype.cmp = function cmp(num) {\n      if (this.negative !== 0 && num.negative === 0) return -1;\n      if (this.negative === 0 && num.negative !== 0) return 1;\n      var res = this.ucmp(num);\n      if (this.negative !== 0) return -res | 0;\n      return res;\n    }; // Unsigned comparison\n\n\n    BN.prototype.ucmp = function ucmp(num) {\n      // At this point both numbers have the same sign\n      if (this.length > num.length) return 1;\n      if (this.length < num.length) return -1;\n      var res = 0;\n\n      for (var i = this.length - 1; i >= 0; i--) {\n        var a = this.words[i] | 0;\n        var b = num.words[i] | 0;\n        if (a === b) continue;\n\n        if (a < b) {\n          res = -1;\n        } else if (a > b) {\n          res = 1;\n        }\n\n        break;\n      }\n\n      return res;\n    };\n\n    BN.prototype.gtn = function gtn(num) {\n      return this.cmpn(num) === 1;\n    };\n\n    BN.prototype.gt = function gt(num) {\n      return this.cmp(num) === 1;\n    };\n\n    BN.prototype.gten = function gten(num) {\n      return this.cmpn(num) >= 0;\n    };\n\n    BN.prototype.gte = function gte(num) {\n      return this.cmp(num) >= 0;\n    };\n\n    BN.prototype.ltn = function ltn(num) {\n      return this.cmpn(num) === -1;\n    };\n\n    BN.prototype.lt = function lt(num) {\n      return this.cmp(num) === -1;\n    };\n\n    BN.prototype.lten = function lten(num) {\n      return this.cmpn(num) <= 0;\n    };\n\n    BN.prototype.lte = function lte(num) {\n      return this.cmp(num) <= 0;\n    };\n\n    BN.prototype.eqn = function eqn(num) {\n      return this.cmpn(num) === 0;\n    };\n\n    BN.prototype.eq = function eq(num) {\n      return this.cmp(num) === 0;\n    }; //\n    // A reduce context, could be using montgomery or something better, depending\n    // on the `m` itself.\n    //\n\n\n    BN.red = function red(num) {\n      return new Red(num);\n    };\n\n    BN.prototype.toRed = function toRed(ctx) {\n      assert(!this.red, 'Already a number in reduction context');\n      assert(this.negative === 0, 'red works only with positives');\n      return ctx.convertTo(this)._forceRed(ctx);\n    };\n\n    BN.prototype.fromRed = function fromRed() {\n      assert(this.red, 'fromRed works only with numbers in reduction context');\n      return this.red.convertFrom(this);\n    };\n\n    BN.prototype._forceRed = function _forceRed(ctx) {\n      this.red = ctx;\n      return this;\n    };\n\n    BN.prototype.forceRed = function forceRed(ctx) {\n      assert(!this.red, 'Already a number in reduction context');\n      return this._forceRed(ctx);\n    };\n\n    BN.prototype.redAdd = function redAdd(num) {\n      assert(this.red, 'redAdd works only with red numbers');\n      return this.red.add(this, num);\n    };\n\n    BN.prototype.redIAdd = function redIAdd(num) {\n      assert(this.red, 'redIAdd works only with red numbers');\n      return this.red.iadd(this, num);\n    };\n\n    BN.prototype.redSub = function redSub(num) {\n      assert(this.red, 'redSub works only with red numbers');\n      return this.red.sub(this, num);\n    };\n\n    BN.prototype.redISub = function redISub(num) {\n      assert(this.red, 'redISub works only with red numbers');\n      return this.red.isub(this, num);\n    };\n\n    BN.prototype.redShl = function redShl(num) {\n      assert(this.red, 'redShl works only with red numbers');\n      return this.red.shl(this, num);\n    };\n\n    BN.prototype.redMul = function redMul(num) {\n      assert(this.red, 'redMul works only with red numbers');\n\n      this.red._verify2(this, num);\n\n      return this.red.mul(this, num);\n    };\n\n    BN.prototype.redIMul = function redIMul(num) {\n      assert(this.red, 'redMul works only with red numbers');\n\n      this.red._verify2(this, num);\n\n      return this.red.imul(this, num);\n    };\n\n    BN.prototype.redSqr = function redSqr() {\n      assert(this.red, 'redSqr works only with red numbers');\n\n      this.red._verify1(this);\n\n      return this.red.sqr(this);\n    };\n\n    BN.prototype.redISqr = function redISqr() {\n      assert(this.red, 'redISqr works only with red numbers');\n\n      this.red._verify1(this);\n\n      return this.red.isqr(this);\n    }; // Square root over p\n\n\n    BN.prototype.redSqrt = function redSqrt() {\n      assert(this.red, 'redSqrt works only with red numbers');\n\n      this.red._verify1(this);\n\n      return this.red.sqrt(this);\n    };\n\n    BN.prototype.redInvm = function redInvm() {\n      assert(this.red, 'redInvm works only with red numbers');\n\n      this.red._verify1(this);\n\n      return this.red.invm(this);\n    }; // Return negative clone of `this` % `red modulo`\n\n\n    BN.prototype.redNeg = function redNeg() {\n      assert(this.red, 'redNeg works only with red numbers');\n\n      this.red._verify1(this);\n\n      return this.red.neg(this);\n    };\n\n    BN.prototype.redPow = function redPow(num) {\n      assert(this.red && !num.red, 'redPow(normalNum)');\n\n      this.red._verify1(this);\n\n      return this.red.pow(this, num);\n    }; // Prime numbers with efficient reduction\n\n\n    var primes = {\n      k256: null,\n      p224: null,\n      p192: null,\n      p25519: null\n    }; // Pseudo-Mersenne prime\n\n    function MPrime(name, p) {\n      // P = 2 ^ N - K\n      this.name = name;\n      this.p = new BN(p, 16);\n      this.n = this.p.bitLength();\n      this.k = new BN(1).iushln(this.n).isub(this.p);\n      this.tmp = this._tmp();\n    }\n\n    MPrime.prototype._tmp = function _tmp() {\n      var tmp = new BN(null);\n      tmp.words = new Array(Math.ceil(this.n / 13));\n      return tmp;\n    };\n\n    MPrime.prototype.ireduce = function ireduce(num) {\n      // Assumes that `num` is less than `P^2`\n      // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n      var r = num;\n      var rlen;\n\n      do {\n        this.split(r, this.tmp);\n        r = this.imulK(r);\n        r = r.iadd(this.tmp);\n        rlen = r.bitLength();\n      } while (rlen > this.n);\n\n      var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\n      if (cmp === 0) {\n        r.words[0] = 0;\n        r.length = 1;\n      } else if (cmp > 0) {\n        r.isub(this.p);\n      } else {\n        if (r.strip !== undefined) {\n          // r is BN v4 instance\n          r.strip();\n        } else {\n          // r is BN v5 instance\n          r._strip();\n        }\n      }\n\n      return r;\n    };\n\n    MPrime.prototype.split = function split(input, out) {\n      input.iushrn(this.n, 0, out);\n    };\n\n    MPrime.prototype.imulK = function imulK(num) {\n      return num.imul(this.k);\n    };\n\n    function K256() {\n      MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n    }\n\n    inherits(K256, MPrime);\n\n    K256.prototype.split = function split(input, output) {\n      // 256 = 9 * 26 + 22\n      var mask = 0x3fffff;\n      var outLen = Math.min(input.length, 9);\n\n      for (var i = 0; i < outLen; i++) {\n        output.words[i] = input.words[i];\n      }\n\n      output.length = outLen;\n\n      if (input.length <= 9) {\n        input.words[0] = 0;\n        input.length = 1;\n        return;\n      } // Shift by 9 limbs\n\n\n      var prev = input.words[9];\n      output.words[output.length++] = prev & mask;\n\n      for (i = 10; i < input.length; i++) {\n        var next = input.words[i] | 0;\n        input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n        prev = next;\n      }\n\n      prev >>>= 22;\n      input.words[i - 10] = prev;\n\n      if (prev === 0 && input.length > 10) {\n        input.length -= 10;\n      } else {\n        input.length -= 9;\n      }\n    };\n\n    K256.prototype.imulK = function imulK(num) {\n      // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n      num.words[num.length] = 0;\n      num.words[num.length + 1] = 0;\n      num.length += 2; // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\n      var lo = 0;\n\n      for (var i = 0; i < num.length; i++) {\n        var w = num.words[i] | 0;\n        lo += w * 0x3d1;\n        num.words[i] = lo & 0x3ffffff;\n        lo = w * 0x40 + (lo / 0x4000000 | 0);\n      } // Fast length reduction\n\n\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n\n        if (num.words[num.length - 1] === 0) {\n          num.length--;\n        }\n      }\n\n      return num;\n    };\n\n    function P224() {\n      MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n    }\n\n    inherits(P224, MPrime);\n\n    function P192() {\n      MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n    }\n\n    inherits(P192, MPrime);\n\n    function P25519() {\n      // 2 ^ 255 - 19\n      MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n    }\n\n    inherits(P25519, MPrime);\n\n    P25519.prototype.imulK = function imulK(num) {\n      // K = 0x13\n      var carry = 0;\n\n      for (var i = 0; i < num.length; i++) {\n        var hi = (num.words[i] | 0) * 0x13 + carry;\n        var lo = hi & 0x3ffffff;\n        hi >>>= 26;\n        num.words[i] = lo;\n        carry = hi;\n      }\n\n      if (carry !== 0) {\n        num.words[num.length++] = carry;\n      }\n\n      return num;\n    }; // Exported mostly for testing purposes, use plain name instead\n\n\n    BN._prime = function prime(name) {\n      // Cached version of prime\n      if (primes[name]) return primes[name];\n      var prime;\n\n      if (name === 'k256') {\n        prime = new K256();\n      } else if (name === 'p224') {\n        prime = new P224();\n      } else if (name === 'p192') {\n        prime = new P192();\n      } else if (name === 'p25519') {\n        prime = new P25519();\n      } else {\n        throw new Error('Unknown prime ' + name);\n      }\n\n      primes[name] = prime;\n      return prime;\n    }; //\n    // Base reduction engine\n    //\n\n\n    function Red(m) {\n      if (typeof m === 'string') {\n        var prime = BN._prime(m);\n\n        this.m = prime.p;\n        this.prime = prime;\n      } else {\n        assert(m.gtn(1), 'modulus must be greater than 1');\n        this.m = m;\n        this.prime = null;\n      }\n    }\n\n    Red.prototype._verify1 = function _verify1(a) {\n      assert(a.negative === 0, 'red works only with positives');\n      assert(a.red, 'red works only with red numbers');\n    };\n\n    Red.prototype._verify2 = function _verify2(a, b) {\n      assert((a.negative | b.negative) === 0, 'red works only with positives');\n      assert(a.red && a.red === b.red, 'red works only with red numbers');\n    };\n\n    Red.prototype.imod = function imod(a) {\n      if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n      return a.umod(this.m)._forceRed(this);\n    };\n\n    Red.prototype.neg = function neg(a) {\n      if (a.isZero()) {\n        return a.clone();\n      }\n\n      return this.m.sub(a)._forceRed(this);\n    };\n\n    Red.prototype.add = function add(a, b) {\n      this._verify2(a, b);\n\n      var res = a.add(b);\n\n      if (res.cmp(this.m) >= 0) {\n        res.isub(this.m);\n      }\n\n      return res._forceRed(this);\n    };\n\n    Red.prototype.iadd = function iadd(a, b) {\n      this._verify2(a, b);\n\n      var res = a.iadd(b);\n\n      if (res.cmp(this.m) >= 0) {\n        res.isub(this.m);\n      }\n\n      return res;\n    };\n\n    Red.prototype.sub = function sub(a, b) {\n      this._verify2(a, b);\n\n      var res = a.sub(b);\n\n      if (res.cmpn(0) < 0) {\n        res.iadd(this.m);\n      }\n\n      return res._forceRed(this);\n    };\n\n    Red.prototype.isub = function isub(a, b) {\n      this._verify2(a, b);\n\n      var res = a.isub(b);\n\n      if (res.cmpn(0) < 0) {\n        res.iadd(this.m);\n      }\n\n      return res;\n    };\n\n    Red.prototype.shl = function shl(a, num) {\n      this._verify1(a);\n\n      return this.imod(a.ushln(num));\n    };\n\n    Red.prototype.imul = function imul(a, b) {\n      this._verify2(a, b);\n\n      return this.imod(a.imul(b));\n    };\n\n    Red.prototype.mul = function mul(a, b) {\n      this._verify2(a, b);\n\n      return this.imod(a.mul(b));\n    };\n\n    Red.prototype.isqr = function isqr(a) {\n      return this.imul(a, a.clone());\n    };\n\n    Red.prototype.sqr = function sqr(a) {\n      return this.mul(a, a);\n    };\n\n    Red.prototype.sqrt = function sqrt(a) {\n      if (a.isZero()) return a.clone();\n      var mod3 = this.m.andln(3);\n      assert(mod3 % 2 === 1); // Fast case\n\n      if (mod3 === 3) {\n        var pow = this.m.add(new BN(1)).iushrn(2);\n        return this.pow(a, pow);\n      } // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n      //\n      // Find Q and S, that Q * 2 ^ S = (P - 1)\n\n\n      var q = this.m.subn(1);\n      var s = 0;\n\n      while (!q.isZero() && q.andln(1) === 0) {\n        s++;\n        q.iushrn(1);\n      }\n\n      assert(!q.isZero());\n      var one = new BN(1).toRed(this);\n      var nOne = one.redNeg(); // Find quadratic non-residue\n      // NOTE: Max is such because of generalized Riemann hypothesis.\n\n      var lpow = this.m.subn(1).iushrn(1);\n      var z = this.m.bitLength();\n      z = new BN(2 * z * z).toRed(this);\n\n      while (this.pow(z, lpow).cmp(nOne) !== 0) {\n        z.redIAdd(nOne);\n      }\n\n      var c = this.pow(z, q);\n      var r = this.pow(a, q.addn(1).iushrn(1));\n      var t = this.pow(a, q);\n      var m = s;\n\n      while (t.cmp(one) !== 0) {\n        var tmp = t;\n\n        for (var i = 0; tmp.cmp(one) !== 0; i++) {\n          tmp = tmp.redSqr();\n        }\n\n        assert(i < m);\n        var b = this.pow(c, new BN(1).iushln(m - i - 1));\n        r = r.redMul(b);\n        c = b.redSqr();\n        t = t.redMul(c);\n        m = i;\n      }\n\n      return r;\n    };\n\n    Red.prototype.invm = function invm(a) {\n      var inv = a._invmp(this.m);\n\n      if (inv.negative !== 0) {\n        inv.negative = 0;\n        return this.imod(inv).redNeg();\n      } else {\n        return this.imod(inv);\n      }\n    };\n\n    Red.prototype.pow = function pow(a, num) {\n      if (num.isZero()) return new BN(1).toRed(this);\n      if (num.cmpn(1) === 0) return a.clone();\n      var windowSize = 4;\n      var wnd = new Array(1 << windowSize);\n      wnd[0] = new BN(1).toRed(this);\n      wnd[1] = a;\n\n      for (var i = 2; i < wnd.length; i++) {\n        wnd[i] = this.mul(wnd[i - 1], a);\n      }\n\n      var res = wnd[0];\n      var current = 0;\n      var currentLen = 0;\n      var start = num.bitLength() % 26;\n\n      if (start === 0) {\n        start = 26;\n      }\n\n      for (i = num.length - 1; i >= 0; i--) {\n        var word = num.words[i];\n\n        for (var j = start - 1; j >= 0; j--) {\n          var bit = word >> j & 1;\n\n          if (res !== wnd[0]) {\n            res = this.sqr(res);\n          }\n\n          if (bit === 0 && current === 0) {\n            currentLen = 0;\n            continue;\n          }\n\n          current <<= 1;\n          current |= bit;\n          currentLen++;\n          if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n          res = this.mul(res, wnd[current]);\n          currentLen = 0;\n          current = 0;\n        }\n\n        start = 26;\n      }\n\n      return res;\n    };\n\n    Red.prototype.convertTo = function convertTo(num) {\n      var r = num.umod(this.m);\n      return r === num ? r.clone() : r;\n    };\n\n    Red.prototype.convertFrom = function convertFrom(num) {\n      var res = num.clone();\n      res.red = null;\n      return res;\n    }; //\n    // Montgomery method engine\n    //\n\n\n    BN.mont = function mont(num) {\n      return new Mont(num);\n    };\n\n    function Mont(m) {\n      Red.call(this, m);\n      this.shift = this.m.bitLength();\n\n      if (this.shift % 26 !== 0) {\n        this.shift += 26 - this.shift % 26;\n      }\n\n      this.r = new BN(1).iushln(this.shift);\n      this.r2 = this.imod(this.r.sqr());\n      this.rinv = this.r._invmp(this.m);\n      this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n      this.minv = this.minv.umod(this.r);\n      this.minv = this.r.sub(this.minv);\n    }\n\n    inherits(Mont, Red);\n\n    Mont.prototype.convertTo = function convertTo(num) {\n      return this.imod(num.ushln(this.shift));\n    };\n\n    Mont.prototype.convertFrom = function convertFrom(num) {\n      var r = this.imod(num.mul(this.rinv));\n      r.red = null;\n      return r;\n    };\n\n    Mont.prototype.imul = function imul(a, b) {\n      if (a.isZero() || b.isZero()) {\n        a.words[0] = 0;\n        a.length = 1;\n        return a;\n      }\n\n      var t = a.imul(b);\n      var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n      var u = t.isub(c).iushrn(this.shift);\n      var res = u;\n\n      if (u.cmp(this.m) >= 0) {\n        res = u.isub(this.m);\n      } else if (u.cmpn(0) < 0) {\n        res = u.iadd(this.m);\n      }\n\n      return res._forceRed(this);\n    };\n\n    Mont.prototype.mul = function mul(a, b) {\n      if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n      var t = a.mul(b);\n      var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n      var u = t.isub(c).iushrn(this.shift);\n      var res = u;\n\n      if (u.cmp(this.m) >= 0) {\n        res = u.isub(this.m);\n      } else if (u.cmpn(0) < 0) {\n        res = u.iadd(this.m);\n      }\n\n      return res._forceRed(this);\n    };\n\n    Mont.prototype.invm = function invm(a) {\n      // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n      var res = this.imod(a._invmp(this.m).mul(this.r2));\n      return res._forceRed(this);\n    };\n  })(module, commonjsGlobal);\n});\nconst version = \"logger/5.4.0\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = {\n  debug: 1,\n  \"default\": 2,\n  info: 2,\n  warning: 3,\n  error: 4,\n  off: 5\n};\nlet _logLevel = LogLevels[\"default\"];\nlet _globalLogger = null;\n\nfunction _checkNormalize() {\n  try {\n    const missing = []; // Make sure all forms of normalization are supported\n\n    [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach(form => {\n      try {\n        if (\"test\".normalize(form) !== \"test\") {\n          throw new Error(\"bad normalize\");\n        }\n\n        ;\n      } catch (error) {\n        missing.push(form);\n      }\n    });\n\n    if (missing.length) {\n      throw new Error(\"missing \" + missing.join(\", \"));\n    }\n\n    if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n      throw new Error(\"broken implementation\");\n    }\n  } catch (error) {\n    return error.message;\n  }\n\n  return null;\n}\n\nconst _normalizeError = _checkNormalize();\n\nvar LogLevel;\n\n(function (LogLevel) {\n  LogLevel[\"DEBUG\"] = \"DEBUG\";\n  LogLevel[\"INFO\"] = \"INFO\";\n  LogLevel[\"WARNING\"] = \"WARNING\";\n  LogLevel[\"ERROR\"] = \"ERROR\";\n  LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\n\nvar ErrorCode;\n\n(function (ErrorCode) {\n  ///////////////////\n  // Generic Errors\n  // Unknown Error\n  ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\"; // Not Implemented\n\n  ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\"; // Unsupported Operation\n  //   - operation\n\n  ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\"; // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n  //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n\n  ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\"; // Some sort of bad response from the server\n\n  ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\"; // Timeout\n\n  ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\"; ///////////////////\n  // Operational  Errors\n  // Buffer Overrun\n\n  ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\"; // Numeric Fault\n  //   - operation: the operation being executed\n  //   - fault: the reason this faulted\n\n  ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\"; ///////////////////\n  // Argument Errors\n  // Missing new operator to an object\n  //  - name: The name of the class\n\n  ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\"; // Invalid argument (e.g. value is incompatible with type) to a function:\n  //   - argument: The argument name that was invalid\n  //   - value: The value of the argument\n\n  ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\"; // Missing argument to a function:\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n\n  ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\"; // Too many arguments\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n\n  ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\"; ///////////////////\n  // Blockchain Errors\n  // Call exception\n  //  - transaction: the transaction\n  //  - address?: the contract address\n  //  - args?: The arguments passed into the function\n  //  - method?: The Solidity method signature\n  //  - errorSignature?: The EIP848 error signature\n  //  - errorArgs?: The EIP848 error parameters\n  //  - reason: The reason (only for EIP848 \"Error(string)\")\n\n  ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\"; // Insufficien funds (< value + gasLimit * gasPrice)\n  //   - transaction: the transaction attempted\n\n  ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\"; // Nonce has already been used\n  //   - transaction: the transaction attempted\n\n  ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\"; // The replacement fee for the transaction is too low\n  //   - transaction: the transaction attempted\n\n  ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\"; // The gas limit could not be estimated\n  //   - transaction: the transaction passed to estimateGas\n\n  ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\"; // The transaction was replaced by one with a higher gas price\n  //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n  //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n  //   - hash: original transaction hash\n  //   - replacement: the full TransactionsResponse for the replacement\n  //   - receipt: the receipt of the replacement\n\n  ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n\nclass Logger {\n  constructor(version) {\n    Object.defineProperty(this, \"version\", {\n      enumerable: true,\n      value: version,\n      writable: false\n    });\n  }\n\n  _log(logLevel, args) {\n    const level = logLevel.toLowerCase();\n\n    if (LogLevels[level] == null) {\n      this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n    }\n\n    if (_logLevel > LogLevels[level]) {\n      return;\n    }\n\n    console.log.apply(console, args);\n  }\n\n  debug(...args) {\n    this._log(Logger.levels.DEBUG, args);\n  }\n\n  info(...args) {\n    this._log(Logger.levels.INFO, args);\n  }\n\n  warn(...args) {\n    this._log(Logger.levels.WARNING, args);\n  }\n\n  makeError(message, code, params) {\n    // Errors are being censored\n    if (_censorErrors) {\n      return this.makeError(\"censored error\", code, {});\n    }\n\n    if (!code) {\n      code = Logger.errors.UNKNOWN_ERROR;\n    }\n\n    if (!params) {\n      params = {};\n    }\n\n    const messageDetails = [];\n    Object.keys(params).forEach(key => {\n      try {\n        messageDetails.push(key + \"=\" + JSON.stringify(params[key]));\n      } catch (error) {\n        messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n      }\n    });\n    messageDetails.push(`code=${code}`);\n    messageDetails.push(`version=${this.version}`);\n    const reason = message;\n\n    if (messageDetails.length) {\n      message += \" (\" + messageDetails.join(\", \") + \")\";\n    } // @TODO: Any??\n\n\n    const error = new Error(message);\n    error.reason = reason;\n    error.code = code;\n    Object.keys(params).forEach(function (key) {\n      error[key] = params[key];\n    });\n    return error;\n  }\n\n  throwError(message, code, params) {\n    throw this.makeError(message, code, params);\n  }\n\n  throwArgumentError(message, name, value) {\n    return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n      argument: name,\n      value: value\n    });\n  }\n\n  assert(condition, message, code, params) {\n    if (!!condition) {\n      return;\n    }\n\n    this.throwError(message, code, params);\n  }\n\n  assertArgument(condition, message, name, value) {\n    if (!!condition) {\n      return;\n    }\n\n    this.throwArgumentError(message, name, value);\n  }\n\n  checkNormalize(message) {\n    if (_normalizeError) {\n      this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"String.prototype.normalize\",\n        form: _normalizeError\n      });\n    }\n  }\n\n  checkSafeUint53(value, message) {\n    if (typeof value !== \"number\") {\n      return;\n    }\n\n    if (message == null) {\n      message = \"value not safe\";\n    }\n\n    if (value < 0 || value >= 0x1fffffffffffff) {\n      this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n        operation: \"checkSafeInteger\",\n        fault: \"out-of-safe-range\",\n        value: value\n      });\n    }\n\n    if (value % 1) {\n      this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n        operation: \"checkSafeInteger\",\n        fault: \"non-integer\",\n        value: value\n      });\n    }\n  }\n\n  checkArgumentCount(count, expectedCount, message) {\n    if (message) {\n      message = \": \" + message;\n    } else {\n      message = \"\";\n    }\n\n    if (count < expectedCount) {\n      this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n        count: count,\n        expectedCount: expectedCount\n      });\n    }\n\n    if (count > expectedCount) {\n      this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n        count: count,\n        expectedCount: expectedCount\n      });\n    }\n  }\n\n  checkNew(target, kind) {\n    if (target === Object || target == null) {\n      this.throwError(\"missing new\", Logger.errors.MISSING_NEW, {\n        name: kind.name\n      });\n    }\n  }\n\n  checkAbstract(target, kind) {\n    if (target === kind) {\n      this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, {\n        name: target.name,\n        operation: \"new\"\n      });\n    } else if (target === Object || target == null) {\n      this.throwError(\"missing new\", Logger.errors.MISSING_NEW, {\n        name: kind.name\n      });\n    }\n  }\n\n  static globalLogger() {\n    if (!_globalLogger) {\n      _globalLogger = new Logger(version);\n    }\n\n    return _globalLogger;\n  }\n\n  static setCensorship(censorship, permanent) {\n    if (!censorship && permanent) {\n      this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setCensorship\"\n      });\n    }\n\n    if (_permanentCensorErrors) {\n      if (!censorship) {\n        return;\n      }\n\n      this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setCensorship\"\n      });\n    }\n\n    _censorErrors = !!censorship;\n    _permanentCensorErrors = !!permanent;\n  }\n\n  static setLogLevel(logLevel) {\n    const level = LogLevels[logLevel.toLowerCase()];\n\n    if (level == null) {\n      Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n      return;\n    }\n\n    _logLevel = level;\n  }\n\n  static from(version) {\n    return new Logger(version);\n  }\n\n}\n\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\nconst version$1 = \"bytes/5.4.0\";\nconst logger = new Logger(version$1); ///////////////////////////////\n\nfunction isHexable(value) {\n  return !!value.toHexString;\n}\n\nfunction addSlice(array) {\n  if (array.slice) {\n    return array;\n  }\n\n  array.slice = function () {\n    const args = Array.prototype.slice.call(arguments);\n    return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n  };\n\n  return array;\n}\n\nfunction isBytesLike(value) {\n  return isHexString(value) && !(value.length % 2) || isBytes(value);\n}\n\nfunction isBytes(value) {\n  if (value == null) {\n    return false;\n  }\n\n  if (value.constructor === Uint8Array) {\n    return true;\n  }\n\n  if (typeof value === \"string\") {\n    return false;\n  }\n\n  if (value.length == null) {\n    return false;\n  }\n\n  for (let i = 0; i < value.length; i++) {\n    const v = value[i];\n\n    if (typeof v !== \"number\" || v < 0 || v >= 256 || v % 1) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction arrayify(value, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (typeof value === \"number\") {\n    logger.checkSafeUint53(value, \"invalid arrayify value\");\n    const result = [];\n\n    while (value) {\n      result.unshift(value & 0xff);\n      value = parseInt(String(value / 256));\n    }\n\n    if (result.length === 0) {\n      result.push(0);\n    }\n\n    return addSlice(new Uint8Array(result));\n  }\n\n  if (options.allowMissingPrefix && typeof value === \"string\" && value.substring(0, 2) !== \"0x\") {\n    value = \"0x\" + value;\n  }\n\n  if (isHexable(value)) {\n    value = value.toHexString();\n  }\n\n  if (isHexString(value)) {\n    let hex = value.substring(2);\n\n    if (hex.length % 2) {\n      if (options.hexPad === \"left\") {\n        hex = \"0x0\" + hex.substring(2);\n      } else if (options.hexPad === \"right\") {\n        hex += \"0\";\n      } else {\n        logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n      }\n    }\n\n    const result = [];\n\n    for (let i = 0; i < hex.length; i += 2) {\n      result.push(parseInt(hex.substring(i, i + 2), 16));\n    }\n\n    return addSlice(new Uint8Array(result));\n  }\n\n  if (isBytes(value)) {\n    return addSlice(new Uint8Array(value));\n  }\n\n  return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\n\nfunction concat(items) {\n  const objects = items.map(item => arrayify(item));\n  const length = objects.reduce((accum, item) => accum + item.length, 0);\n  const result = new Uint8Array(length);\n  objects.reduce((offset, object) => {\n    result.set(object, offset);\n    return offset + object.length;\n  }, 0);\n  return addSlice(result);\n}\n\nfunction stripZeros(value) {\n  let result = arrayify(value);\n\n  if (result.length === 0) {\n    return result;\n  } // Find the first non-zero entry\n\n\n  let start = 0;\n\n  while (start < result.length && result[start] === 0) {\n    start++;\n  } // If we started with zeros, strip them\n\n\n  if (start) {\n    result = result.slice(start);\n  }\n\n  return result;\n}\n\nfunction zeroPad(value, length) {\n  value = arrayify(value);\n\n  if (value.length > length) {\n    logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n  }\n\n  const result = new Uint8Array(length);\n  result.set(value, length - value.length);\n  return addSlice(result);\n}\n\nfunction isHexString(value, length) {\n  if (typeof value !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nconst HexCharacters = \"0123456789abcdef\";\n\nfunction hexlify(value, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (typeof value === \"number\") {\n    logger.checkSafeUint53(value, \"invalid hexlify value\");\n    let hex = \"\";\n\n    while (value) {\n      hex = HexCharacters[value & 0xf] + hex;\n      value = Math.floor(value / 16);\n    }\n\n    if (hex.length) {\n      if (hex.length % 2) {\n        hex = \"0\" + hex;\n      }\n\n      return \"0x\" + hex;\n    }\n\n    return \"0x00\";\n  }\n\n  if (typeof value === \"bigint\") {\n    value = value.toString(16);\n\n    if (value.length % 2) {\n      return \"0x0\" + value;\n    }\n\n    return \"0x\" + value;\n  }\n\n  if (options.allowMissingPrefix && typeof value === \"string\" && value.substring(0, 2) !== \"0x\") {\n    value = \"0x\" + value;\n  }\n\n  if (isHexable(value)) {\n    return value.toHexString();\n  }\n\n  if (isHexString(value)) {\n    if (value.length % 2) {\n      if (options.hexPad === \"left\") {\n        value = \"0x0\" + value.substring(2);\n      } else if (options.hexPad === \"right\") {\n        value += \"0\";\n      } else {\n        logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n      }\n    }\n\n    return value.toLowerCase();\n  }\n\n  if (isBytes(value)) {\n    let result = \"0x\";\n\n    for (let i = 0; i < value.length; i++) {\n      let v = value[i];\n      result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n    }\n\n    return result;\n  }\n\n  return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\n\n\nfunction hexDataLength(data) {\n  if (typeof data !== \"string\") {\n    data = hexlify(data);\n  } else if (!isHexString(data) || data.length % 2) {\n    return null;\n  }\n\n  return (data.length - 2) / 2;\n}\n\nfunction hexDataSlice(data, offset, endOffset) {\n  if (typeof data !== \"string\") {\n    data = hexlify(data);\n  } else if (!isHexString(data) || data.length % 2) {\n    logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n  }\n\n  offset = 2 + 2 * offset;\n\n  if (endOffset != null) {\n    return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n  }\n\n  return \"0x\" + data.substring(offset);\n}\n\nfunction hexConcat(items) {\n  let result = \"0x\";\n  items.forEach(item => {\n    result += hexlify(item).substring(2);\n  });\n  return result;\n}\n\nfunction hexValue(value) {\n  const trimmed = hexStripZeros(hexlify(value, {\n    hexPad: \"left\"\n  }));\n\n  if (trimmed === \"0x\") {\n    return \"0x0\";\n  }\n\n  return trimmed;\n}\n\nfunction hexStripZeros(value) {\n  if (typeof value !== \"string\") {\n    value = hexlify(value);\n  }\n\n  if (!isHexString(value)) {\n    logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n  }\n\n  value = value.substring(2);\n  let offset = 0;\n\n  while (offset < value.length && value[offset] === \"0\") {\n    offset++;\n  }\n\n  return \"0x\" + value.substring(offset);\n}\n\nfunction hexZeroPad(value, length) {\n  if (typeof value !== \"string\") {\n    value = hexlify(value);\n  } else if (!isHexString(value)) {\n    logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n  }\n\n  if (value.length > 2 * length + 2) {\n    logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n  }\n\n  while (value.length < 2 * length + 2) {\n    value = \"0x0\" + value.substring(2);\n  }\n\n  return value;\n}\n\nfunction splitSignature(signature) {\n  const result = {\n    r: \"0x\",\n    s: \"0x\",\n    _vs: \"0x\",\n    recoveryParam: 0,\n    v: 0\n  };\n\n  if (isBytesLike(signature)) {\n    const bytes = arrayify(signature);\n\n    if (bytes.length !== 65) {\n      logger.throwArgumentError(\"invalid signature string; must be 65 bytes\", \"signature\", signature);\n    } // Get the r, s and v\n\n\n    result.r = hexlify(bytes.slice(0, 32));\n    result.s = hexlify(bytes.slice(32, 64));\n    result.v = bytes[64]; // Allow a recid to be used as the v\n\n    if (result.v < 27) {\n      if (result.v === 0 || result.v === 1) {\n        result.v += 27;\n      } else {\n        logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n      }\n    } // Compute recoveryParam from v\n\n\n    result.recoveryParam = 1 - result.v % 2; // Compute _vs from recoveryParam and s\n\n    if (result.recoveryParam) {\n      bytes[32] |= 0x80;\n    }\n\n    result._vs = hexlify(bytes.slice(32, 64));\n  } else {\n    result.r = signature.r;\n    result.s = signature.s;\n    result.v = signature.v;\n    result.recoveryParam = signature.recoveryParam;\n    result._vs = signature._vs; // If the _vs is available, use it to populate missing s, v and recoveryParam\n    // and verify non-missing s, v and recoveryParam\n\n    if (result._vs != null) {\n      const vs = zeroPad(arrayify(result._vs), 32);\n      result._vs = hexlify(vs); // Set or check the recid\n\n      const recoveryParam = vs[0] >= 128 ? 1 : 0;\n\n      if (result.recoveryParam == null) {\n        result.recoveryParam = recoveryParam;\n      } else if (result.recoveryParam !== recoveryParam) {\n        logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n      } // Set or check the s\n\n\n      vs[0] &= 0x7f;\n      const s = hexlify(vs);\n\n      if (result.s == null) {\n        result.s = s;\n      } else if (result.s !== s) {\n        logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n      }\n    } // Use recid and v to populate each other\n\n\n    if (result.recoveryParam == null) {\n      if (result.v == null) {\n        logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n      } else if (result.v === 0 || result.v === 1) {\n        result.recoveryParam = result.v;\n      } else {\n        result.recoveryParam = 1 - result.v % 2;\n      }\n    } else {\n      if (result.v == null) {\n        result.v = 27 + result.recoveryParam;\n      } else if (result.recoveryParam !== 1 - result.v % 2) {\n        logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n      }\n    }\n\n    if (result.r == null || !isHexString(result.r)) {\n      logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n    } else {\n      result.r = hexZeroPad(result.r, 32);\n    }\n\n    if (result.s == null || !isHexString(result.s)) {\n      logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n    } else {\n      result.s = hexZeroPad(result.s, 32);\n    }\n\n    const vs = arrayify(result.s);\n\n    if (vs[0] >= 128) {\n      logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n    }\n\n    if (result.recoveryParam) {\n      vs[0] |= 0x80;\n    }\n\n    const _vs = hexlify(vs);\n\n    if (result._vs) {\n      if (!isHexString(result._vs)) {\n        logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n      }\n\n      result._vs = hexZeroPad(result._vs, 32);\n    } // Set or check the _vs\n\n\n    if (result._vs == null) {\n      result._vs = _vs;\n    } else if (result._vs !== _vs) {\n      logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n    }\n  }\n\n  return result;\n}\n\nfunction joinSignature(signature) {\n  signature = splitSignature(signature);\n  return hexlify(concat([signature.r, signature.s, signature.recoveryParam ? \"0x1c\" : \"0x1b\"]));\n}\n\nconst version$2 = \"bignumber/5.4.1\";\nvar BN = bn.BN;\nconst logger$1 = new Logger(version$2);\nconst _constructorGuard = {};\nconst MAX_SAFE = 0x1fffffffffffff;\n\nfunction isBigNumberish(value) {\n  return value != null && (BigNumber.isBigNumber(value) || typeof value === \"number\" && value % 1 === 0 || typeof value === \"string\" && !!value.match(/^-?[0-9]+$/) || isHexString(value) || typeof value === \"bigint\" || isBytes(value));\n} // Only warn about passing 10 into radix once\n\n\nlet _warnedToStringRadix = false;\n\nclass BigNumber {\n  constructor(constructorGuard, hex) {\n    logger$1.checkNew(new.target, BigNumber);\n\n    if (constructorGuard !== _constructorGuard) {\n      logger$1.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"new (BigNumber)\"\n      });\n    }\n\n    this._hex = hex;\n    this._isBigNumber = true;\n    Object.freeze(this);\n  }\n\n  fromTwos(value) {\n    return toBigNumber(toBN(this).fromTwos(value));\n  }\n\n  toTwos(value) {\n    return toBigNumber(toBN(this).toTwos(value));\n  }\n\n  abs() {\n    if (this._hex[0] === \"-\") {\n      return BigNumber.from(this._hex.substring(1));\n    }\n\n    return this;\n  }\n\n  add(other) {\n    return toBigNumber(toBN(this).add(toBN(other)));\n  }\n\n  sub(other) {\n    return toBigNumber(toBN(this).sub(toBN(other)));\n  }\n\n  div(other) {\n    const o = BigNumber.from(other);\n\n    if (o.isZero()) {\n      throwFault(\"division by zero\", \"div\");\n    }\n\n    return toBigNumber(toBN(this).div(toBN(other)));\n  }\n\n  mul(other) {\n    return toBigNumber(toBN(this).mul(toBN(other)));\n  }\n\n  mod(other) {\n    const value = toBN(other);\n\n    if (value.isNeg()) {\n      throwFault(\"cannot modulo negative values\", \"mod\");\n    }\n\n    return toBigNumber(toBN(this).umod(value));\n  }\n\n  pow(other) {\n    const value = toBN(other);\n\n    if (value.isNeg()) {\n      throwFault(\"cannot raise to negative values\", \"pow\");\n    }\n\n    return toBigNumber(toBN(this).pow(value));\n  }\n\n  and(other) {\n    const value = toBN(other);\n\n    if (this.isNegative() || value.isNeg()) {\n      throwFault(\"cannot 'and' negative values\", \"and\");\n    }\n\n    return toBigNumber(toBN(this).and(value));\n  }\n\n  or(other) {\n    const value = toBN(other);\n\n    if (this.isNegative() || value.isNeg()) {\n      throwFault(\"cannot 'or' negative values\", \"or\");\n    }\n\n    return toBigNumber(toBN(this).or(value));\n  }\n\n  xor(other) {\n    const value = toBN(other);\n\n    if (this.isNegative() || value.isNeg()) {\n      throwFault(\"cannot 'xor' negative values\", \"xor\");\n    }\n\n    return toBigNumber(toBN(this).xor(value));\n  }\n\n  mask(value) {\n    if (this.isNegative() || value < 0) {\n      throwFault(\"cannot mask negative values\", \"mask\");\n    }\n\n    return toBigNumber(toBN(this).maskn(value));\n  }\n\n  shl(value) {\n    if (this.isNegative() || value < 0) {\n      throwFault(\"cannot shift negative values\", \"shl\");\n    }\n\n    return toBigNumber(toBN(this).shln(value));\n  }\n\n  shr(value) {\n    if (this.isNegative() || value < 0) {\n      throwFault(\"cannot shift negative values\", \"shr\");\n    }\n\n    return toBigNumber(toBN(this).shrn(value));\n  }\n\n  eq(other) {\n    return toBN(this).eq(toBN(other));\n  }\n\n  lt(other) {\n    return toBN(this).lt(toBN(other));\n  }\n\n  lte(other) {\n    return toBN(this).lte(toBN(other));\n  }\n\n  gt(other) {\n    return toBN(this).gt(toBN(other));\n  }\n\n  gte(other) {\n    return toBN(this).gte(toBN(other));\n  }\n\n  isNegative() {\n    return this._hex[0] === \"-\";\n  }\n\n  isZero() {\n    return toBN(this).isZero();\n  }\n\n  toNumber() {\n    try {\n      return toBN(this).toNumber();\n    } catch (error) {\n      throwFault(\"overflow\", \"toNumber\", this.toString());\n    }\n\n    return null;\n  }\n\n  toBigInt() {\n    try {\n      return BigInt(this.toString());\n    } catch (e) {}\n\n    return logger$1.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n      value: this.toString()\n    });\n  }\n\n  toString() {\n    // Lots of people expect this, which we do not support, so check (See: #889)\n    if (arguments.length > 0) {\n      if (arguments[0] === 10) {\n        if (!_warnedToStringRadix) {\n          _warnedToStringRadix = true;\n          logger$1.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n        }\n      } else if (arguments[0] === 16) {\n        logger$1.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n      } else {\n        logger$1.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n      }\n    }\n\n    return toBN(this).toString(10);\n  }\n\n  toHexString() {\n    return this._hex;\n  }\n\n  toJSON(key) {\n    return {\n      type: \"BigNumber\",\n      hex: this.toHexString()\n    };\n  }\n\n  static from(value) {\n    if (value instanceof BigNumber) {\n      return value;\n    }\n\n    if (typeof value === \"string\") {\n      if (value.match(/^-?0x[0-9a-f]+$/i)) {\n        return new BigNumber(_constructorGuard, toHex(value));\n      }\n\n      if (value.match(/^-?[0-9]+$/)) {\n        return new BigNumber(_constructorGuard, toHex(new BN(value)));\n      }\n\n      return logger$1.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n    }\n\n    if (typeof value === \"number\") {\n      if (value % 1) {\n        throwFault(\"underflow\", \"BigNumber.from\", value);\n      }\n\n      if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n        throwFault(\"overflow\", \"BigNumber.from\", value);\n      }\n\n      return BigNumber.from(String(value));\n    }\n\n    const anyValue = value;\n\n    if (typeof anyValue === \"bigint\") {\n      return BigNumber.from(anyValue.toString());\n    }\n\n    if (isBytes(anyValue)) {\n      return BigNumber.from(hexlify(anyValue));\n    }\n\n    if (anyValue) {\n      // Hexable interface (takes piority)\n      if (anyValue.toHexString) {\n        const hex = anyValue.toHexString();\n\n        if (typeof hex === \"string\") {\n          return BigNumber.from(hex);\n        }\n      } else {\n        // For now, handle legacy JSON-ified values (goes away in v6)\n        let hex = anyValue._hex; // New-form JSON\n\n        if (hex == null && anyValue.type === \"BigNumber\") {\n          hex = anyValue.hex;\n        }\n\n        if (typeof hex === \"string\") {\n          if (isHexString(hex) || hex[0] === \"-\" && isHexString(hex.substring(1))) {\n            return BigNumber.from(hex);\n          }\n        }\n      }\n    }\n\n    return logger$1.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n  }\n\n  static isBigNumber(value) {\n    return !!(value && value._isBigNumber);\n  }\n\n} // Normalize the hex string\n\n\nfunction toHex(value) {\n  // For BN, call on the hex string\n  if (typeof value !== \"string\") {\n    return toHex(value.toString(16));\n  } // If negative, prepend the negative sign to the normalized positive value\n\n\n  if (value[0] === \"-\") {\n    // Strip off the negative sign\n    value = value.substring(1); // Cannot have mulitple negative signs (e.g. \"--0x04\")\n\n    if (value[0] === \"-\") {\n      logger$1.throwArgumentError(\"invalid hex\", \"value\", value);\n    } // Call toHex on the positive component\n\n\n    value = toHex(value); // Do not allow \"-0x00\"\n\n    if (value === \"0x00\") {\n      return value;\n    } // Negate the value\n\n\n    return \"-\" + value;\n  } // Add a \"0x\" prefix if missing\n\n\n  if (value.substring(0, 2) !== \"0x\") {\n    value = \"0x\" + value;\n  } // Normalize zero\n\n\n  if (value === \"0x\") {\n    return \"0x00\";\n  } // Make the string even length\n\n\n  if (value.length % 2) {\n    value = \"0x0\" + value.substring(2);\n  } // Trim to smallest even-length string\n\n\n  while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n    value = \"0x\" + value.substring(4);\n  }\n\n  return value;\n}\n\nfunction toBigNumber(value) {\n  return BigNumber.from(toHex(value));\n}\n\nfunction toBN(value) {\n  const hex = BigNumber.from(value).toHexString();\n\n  if (hex[0] === \"-\") {\n    return new BN(\"-\" + hex.substring(3), 16);\n  }\n\n  return new BN(hex.substring(2), 16);\n}\n\nfunction throwFault(fault, operation, value) {\n  const params = {\n    fault: fault,\n    operation: operation\n  };\n\n  if (value != null) {\n    params.value = value;\n  }\n\n  return logger$1.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n} // value should have no prefix\n\n\nfunction _base36To16(value) {\n  return new BN(value, 36).toString(16);\n} // value should have no prefix\n\n\nfunction _base16To36(value) {\n  return new BN(value, 16).toString(36);\n}\n\nconst logger$2 = new Logger(version$2);\nconst _constructorGuard$1 = {};\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\n\nfunction throwFault$1(message, fault, operation, value) {\n  const params = {\n    fault: fault,\n    operation: operation\n  };\n\n  if (value !== undefined) {\n    params.value = value;\n  }\n\n  return logger$2.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n} // Constant to pull zeros from for multipliers\n\n\nlet zeros = \"0\";\n\nwhile (zeros.length < 256) {\n  zeros += zeros;\n} // Returns a string \"1\" followed by decimal \"0\"s\n\n\nfunction getMultiplier(decimals) {\n  if (typeof decimals !== \"number\") {\n    try {\n      decimals = BigNumber.from(decimals).toNumber();\n    } catch (e) {}\n  }\n\n  if (typeof decimals === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n    return \"1\" + zeros.substring(0, decimals);\n  }\n\n  return logger$2.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\n\nfunction formatFixed(value, decimals) {\n  if (decimals == null) {\n    decimals = 0;\n  }\n\n  const multiplier = getMultiplier(decimals); // Make sure wei is a big number (convert as necessary)\n\n  value = BigNumber.from(value);\n  const negative = value.lt(Zero);\n\n  if (negative) {\n    value = value.mul(NegativeOne);\n  }\n\n  let fraction = value.mod(multiplier).toString();\n\n  while (fraction.length < multiplier.length - 1) {\n    fraction = \"0\" + fraction;\n  } // Strip training 0\n\n\n  fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n  const whole = value.div(multiplier).toString();\n\n  if (multiplier.length === 1) {\n    value = whole;\n  } else {\n    value = whole + \".\" + fraction;\n  }\n\n  if (negative) {\n    value = \"-\" + value;\n  }\n\n  return value;\n}\n\nfunction parseFixed(value, decimals) {\n  if (decimals == null) {\n    decimals = 0;\n  }\n\n  const multiplier = getMultiplier(decimals);\n\n  if (typeof value !== \"string\" || !value.match(/^-?[0-9.,]+$/)) {\n    logger$2.throwArgumentError(\"invalid decimal value\", \"value\", value);\n  } // Is it negative?\n\n\n  const negative = value.substring(0, 1) === \"-\";\n\n  if (negative) {\n    value = value.substring(1);\n  }\n\n  if (value === \".\") {\n    logger$2.throwArgumentError(\"missing value\", \"value\", value);\n  } // Split it into a whole and fractional part\n\n\n  const comps = value.split(\".\");\n\n  if (comps.length > 2) {\n    logger$2.throwArgumentError(\"too many decimal points\", \"value\", value);\n  }\n\n  let whole = comps[0],\n      fraction = comps[1];\n\n  if (!whole) {\n    whole = \"0\";\n  }\n\n  if (!fraction) {\n    fraction = \"0\";\n  } // Get significant digits to check truncation for underflow\n\n\n  {\n    const sigFraction = fraction.replace(/^([0-9]*?)(0*)$/, (all, sig, zeros) => sig);\n\n    if (sigFraction.length > multiplier.length - 1) {\n      throwFault$1(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n  } // Fully pad the string with zeros to get to wei\n\n  while (fraction.length < multiplier.length - 1) {\n    fraction += \"0\";\n  }\n\n  const wholeValue = BigNumber.from(whole);\n  const fractionValue = BigNumber.from(fraction);\n  let wei = wholeValue.mul(multiplier).add(fractionValue);\n\n  if (negative) {\n    wei = wei.mul(NegativeOne);\n  }\n\n  return wei;\n}\n\nclass FixedFormat {\n  constructor(constructorGuard, signed, width, decimals) {\n    if (constructorGuard !== _constructorGuard$1) {\n      logger$2.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"new FixedFormat\"\n      });\n    }\n\n    this.signed = signed;\n    this.width = width;\n    this.decimals = decimals;\n    this.name = (signed ? \"\" : \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n    this._multiplier = getMultiplier(decimals);\n    Object.freeze(this);\n  }\n\n  static from(value) {\n    if (value instanceof FixedFormat) {\n      return value;\n    }\n\n    if (typeof value === \"number\") {\n      value = `fixed128x${value}`;\n    }\n\n    let signed = true;\n    let width = 128;\n    let decimals = 18;\n\n    if (typeof value === \"string\") {\n      if (value === \"fixed\") ;else if (value === \"ufixed\") {\n        signed = false;\n      } else {\n        const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n\n        if (!match) {\n          logger$2.throwArgumentError(\"invalid fixed format\", \"format\", value);\n        }\n\n        signed = match[1] !== \"u\";\n        width = parseInt(match[2]);\n        decimals = parseInt(match[3]);\n      }\n    } else if (value) {\n      const check = (key, type, defaultValue) => {\n        if (value[key] == null) {\n          return defaultValue;\n        }\n\n        if (typeof value[key] !== type) {\n          logger$2.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type + \")\", \"format.\" + key, value[key]);\n        }\n\n        return value[key];\n      };\n\n      signed = check(\"signed\", \"boolean\", signed);\n      width = check(\"width\", \"number\", width);\n      decimals = check(\"decimals\", \"number\", decimals);\n    }\n\n    if (width % 8) {\n      logger$2.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n    }\n\n    if (decimals > 80) {\n      logger$2.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n    }\n\n    return new FixedFormat(_constructorGuard$1, signed, width, decimals);\n  }\n\n}\n\nclass FixedNumber {\n  constructor(constructorGuard, hex, value, format) {\n    logger$2.checkNew(new.target, FixedNumber);\n\n    if (constructorGuard !== _constructorGuard$1) {\n      logger$2.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"new FixedFormat\"\n      });\n    }\n\n    this.format = format;\n    this._hex = hex;\n    this._value = value;\n    this._isFixedNumber = true;\n    Object.freeze(this);\n  }\n\n  _checkFormat(other) {\n    if (this.format.name !== other.format.name) {\n      logger$2.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n    }\n  }\n\n  addUnsafe(other) {\n    this._checkFormat(other);\n\n    const a = parseFixed(this._value, this.format.decimals);\n    const b = parseFixed(other._value, other.format.decimals);\n    return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n  }\n\n  subUnsafe(other) {\n    this._checkFormat(other);\n\n    const a = parseFixed(this._value, this.format.decimals);\n    const b = parseFixed(other._value, other.format.decimals);\n    return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n  }\n\n  mulUnsafe(other) {\n    this._checkFormat(other);\n\n    const a = parseFixed(this._value, this.format.decimals);\n    const b = parseFixed(other._value, other.format.decimals);\n    return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n  }\n\n  divUnsafe(other) {\n    this._checkFormat(other);\n\n    const a = parseFixed(this._value, this.format.decimals);\n    const b = parseFixed(other._value, other.format.decimals);\n    return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n  }\n\n  floor() {\n    const comps = this.toString().split(\".\");\n\n    if (comps.length === 1) {\n      comps.push(\"0\");\n    }\n\n    let result = FixedNumber.from(comps[0], this.format);\n    const hasFraction = !comps[1].match(/^(0*)$/);\n\n    if (this.isNegative() && hasFraction) {\n      result = result.subUnsafe(ONE.toFormat(result.format));\n    }\n\n    return result;\n  }\n\n  ceiling() {\n    const comps = this.toString().split(\".\");\n\n    if (comps.length === 1) {\n      comps.push(\"0\");\n    }\n\n    let result = FixedNumber.from(comps[0], this.format);\n    const hasFraction = !comps[1].match(/^(0*)$/);\n\n    if (!this.isNegative() && hasFraction) {\n      result = result.addUnsafe(ONE.toFormat(result.format));\n    }\n\n    return result;\n  } // @TODO: Support other rounding algorithms\n\n\n  round(decimals) {\n    if (decimals == null) {\n      decimals = 0;\n    } // If we are already in range, we're done\n\n\n    const comps = this.toString().split(\".\");\n\n    if (comps.length === 1) {\n      comps.push(\"0\");\n    }\n\n    if (decimals < 0 || decimals > 80 || decimals % 1) {\n      logger$2.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n    }\n\n    if (comps[1].length <= decimals) {\n      return this;\n    }\n\n    const factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals), this.format);\n    const bump = BUMP.toFormat(this.format);\n    return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);\n  }\n\n  isZero() {\n    return this._value === \"0.0\" || this._value === \"0\";\n  }\n\n  isNegative() {\n    return this._value[0] === \"-\";\n  }\n\n  toString() {\n    return this._value;\n  }\n\n  toHexString(width) {\n    if (width == null) {\n      return this._hex;\n    }\n\n    if (width % 8) {\n      logger$2.throwArgumentError(\"invalid byte width\", \"width\", width);\n    }\n\n    const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n    return hexZeroPad(hex, width / 8);\n  }\n\n  toUnsafeFloat() {\n    return parseFloat(this.toString());\n  }\n\n  toFormat(format) {\n    return FixedNumber.fromString(this._value, format);\n  }\n\n  static fromValue(value, decimals, format) {\n    // If decimals looks more like a format, and there is no format, shift the parameters\n    if (format == null && decimals != null && !isBigNumberish(decimals)) {\n      format = decimals;\n      decimals = null;\n    }\n\n    if (decimals == null) {\n      decimals = 0;\n    }\n\n    if (format == null) {\n      format = \"fixed\";\n    }\n\n    return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n  }\n\n  static fromString(value, format) {\n    if (format == null) {\n      format = \"fixed\";\n    }\n\n    const fixedFormat = FixedFormat.from(format);\n    const numeric = parseFixed(value, fixedFormat.decimals);\n\n    if (!fixedFormat.signed && numeric.lt(Zero)) {\n      throwFault$1(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n    }\n\n    let hex = null;\n\n    if (fixedFormat.signed) {\n      hex = numeric.toTwos(fixedFormat.width).toHexString();\n    } else {\n      hex = numeric.toHexString();\n      hex = hexZeroPad(hex, fixedFormat.width / 8);\n    }\n\n    const decimal = formatFixed(numeric, fixedFormat.decimals);\n    return new FixedNumber(_constructorGuard$1, hex, decimal, fixedFormat);\n  }\n\n  static fromBytes(value, format) {\n    if (format == null) {\n      format = \"fixed\";\n    }\n\n    const fixedFormat = FixedFormat.from(format);\n\n    if (arrayify(value).length > fixedFormat.width / 8) {\n      throw new Error(\"overflow\");\n    }\n\n    let numeric = BigNumber.from(value);\n\n    if (fixedFormat.signed) {\n      numeric = numeric.fromTwos(fixedFormat.width);\n    }\n\n    const hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();\n    const decimal = formatFixed(numeric, fixedFormat.decimals);\n    return new FixedNumber(_constructorGuard$1, hex, decimal, fixedFormat);\n  }\n\n  static from(value, format) {\n    if (typeof value === \"string\") {\n      return FixedNumber.fromString(value, format);\n    }\n\n    if (isBytes(value)) {\n      return FixedNumber.fromBytes(value, format);\n    }\n\n    try {\n      return FixedNumber.fromValue(value, 0, format);\n    } catch (error) {\n      // Allow NUMERIC_FAULT to bubble up\n      if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n        throw error;\n      }\n    }\n\n    return logger$2.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n  }\n\n  static isFixedNumber(value) {\n    return !!(value && value._isFixedNumber);\n  }\n\n}\n\nconst ONE = FixedNumber.from(1);\nconst BUMP = FixedNumber.from(\"0.5\");\nconst version$3 = \"properties/5.4.0\";\n\nvar __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$3 = new Logger(version$3);\n\nfunction defineReadOnly(object, name, value) {\n  Object.defineProperty(object, name, {\n    enumerable: true,\n    value: value,\n    writable: false\n  });\n} // Crawl up the constructor chain to find a static method\n\n\nfunction getStatic(ctor, key) {\n  for (let i = 0; i < 32; i++) {\n    if (ctor[key]) {\n      return ctor[key];\n    }\n\n    if (!ctor.prototype || typeof ctor.prototype !== \"object\") {\n      break;\n    }\n\n    ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n  }\n\n  return null;\n}\n\nfunction resolveProperties(object) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const promises = Object.keys(object).map(key => {\n      const value = object[key];\n      return Promise.resolve(value).then(v => ({\n        key: key,\n        value: v\n      }));\n    });\n    const results = yield Promise.all(promises);\n    return results.reduce((accum, result) => {\n      accum[result.key] = result.value;\n      return accum;\n    }, {});\n  });\n}\n\nfunction checkProperties(object, properties) {\n  if (!object || typeof object !== \"object\") {\n    logger$3.throwArgumentError(\"invalid object\", \"object\", object);\n  }\n\n  Object.keys(object).forEach(key => {\n    if (!properties[key]) {\n      logger$3.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n    }\n  });\n}\n\nfunction shallowCopy(object) {\n  const result = {};\n\n  for (const key in object) {\n    result[key] = object[key];\n  }\n\n  return result;\n}\n\nconst opaque = {\n  bigint: true,\n  boolean: true,\n  \"function\": true,\n  number: true,\n  string: true\n};\n\nfunction _isFrozen(object) {\n  // Opaque objects are not mutable, so safe to copy by assignment\n  if (object === undefined || object === null || opaque[typeof object]) {\n    return true;\n  }\n\n  if (Array.isArray(object) || typeof object === \"object\") {\n    if (!Object.isFrozen(object)) {\n      return false;\n    }\n\n    const keys = Object.keys(object);\n\n    for (let i = 0; i < keys.length; i++) {\n      if (!_isFrozen(object[keys[i]])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return logger$3.throwArgumentError(`Cannot deepCopy ${typeof object}`, \"object\", object);\n} // Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\n\n\nfunction _deepCopy(object) {\n  if (_isFrozen(object)) {\n    return object;\n  } // Arrays are mutable, so we need to create a copy\n\n\n  if (Array.isArray(object)) {\n    return Object.freeze(object.map(item => deepCopy(item)));\n  }\n\n  if (typeof object === \"object\") {\n    const result = {};\n\n    for (const key in object) {\n      const value = object[key];\n\n      if (value === undefined) {\n        continue;\n      }\n\n      defineReadOnly(result, key, deepCopy(value));\n    }\n\n    return result;\n  }\n\n  return logger$3.throwArgumentError(`Cannot deepCopy ${typeof object}`, \"object\", object);\n}\n\nfunction deepCopy(object) {\n  return _deepCopy(object);\n}\n\nclass Description {\n  constructor(info) {\n    for (const key in info) {\n      this[key] = deepCopy(info[key]);\n    }\n  }\n\n}\n\nconst version$4 = \"abi/5.4.0\";\nconst logger$4 = new Logger(version$4);\nconst _constructorGuard$2 = {};\nlet ModifiersBytes = {\n  calldata: true,\n  memory: true,\n  storage: true\n};\nlet ModifiersNest = {\n  calldata: true,\n  memory: true\n};\n\nfunction checkModifier(type, name) {\n  if (type === \"bytes\" || type === \"string\") {\n    if (ModifiersBytes[name]) {\n      return true;\n    }\n  } else if (type === \"address\") {\n    if (name === \"payable\") {\n      return true;\n    }\n  } else if (type.indexOf(\"[\") >= 0 || type === \"tuple\") {\n    if (ModifiersNest[name]) {\n      return true;\n    }\n  }\n\n  if (ModifiersBytes[name] || name === \"payable\") {\n    logger$4.throwArgumentError(\"invalid modifier\", \"name\", name);\n  }\n\n  return false;\n} // @TODO: Make sure that children of an indexed tuple are marked with a null indexed\n\n\nfunction parseParamType(param, allowIndexed) {\n  let originalParam = param;\n\n  function throwError(i) {\n    logger$4.throwArgumentError(`unexpected character at position ${i}`, \"param\", param);\n  }\n\n  param = param.replace(/\\s/g, \" \");\n\n  function newNode(parent) {\n    let node = {\n      type: \"\",\n      name: \"\",\n      parent: parent,\n      state: {\n        allowType: true\n      }\n    };\n\n    if (allowIndexed) {\n      node.indexed = false;\n    }\n\n    return node;\n  }\n\n  let parent = {\n    type: \"\",\n    name: \"\",\n    state: {\n      allowType: true\n    }\n  };\n  let node = parent;\n\n  for (let i = 0; i < param.length; i++) {\n    let c = param[i];\n\n    switch (c) {\n      case \"(\":\n        if (node.state.allowType && node.type === \"\") {\n          node.type = \"tuple\";\n        } else if (!node.state.allowParams) {\n          throwError(i);\n        }\n\n        node.state.allowType = false;\n        node.type = verifyType(node.type);\n        node.components = [newNode(node)];\n        node = node.components[0];\n        break;\n\n      case \")\":\n        delete node.state;\n\n        if (node.name === \"indexed\") {\n          if (!allowIndexed) {\n            throwError(i);\n          }\n\n          node.indexed = true;\n          node.name = \"\";\n        }\n\n        if (checkModifier(node.type, node.name)) {\n          node.name = \"\";\n        }\n\n        node.type = verifyType(node.type);\n        let child = node;\n        node = node.parent;\n\n        if (!node) {\n          throwError(i);\n        }\n\n        delete child.parent;\n        node.state.allowParams = false;\n        node.state.allowName = true;\n        node.state.allowArray = true;\n        break;\n\n      case \",\":\n        delete node.state;\n\n        if (node.name === \"indexed\") {\n          if (!allowIndexed) {\n            throwError(i);\n          }\n\n          node.indexed = true;\n          node.name = \"\";\n        }\n\n        if (checkModifier(node.type, node.name)) {\n          node.name = \"\";\n        }\n\n        node.type = verifyType(node.type);\n        let sibling = newNode(node.parent); //{ type: \"\", name: \"\", parent: node.parent, state: { allowType: true } };\n\n        node.parent.components.push(sibling);\n        delete node.parent;\n        node = sibling;\n        break;\n      // Hit a space...\n\n      case \" \":\n        // If reading type, the type is done and may read a param or name\n        if (node.state.allowType) {\n          if (node.type !== \"\") {\n            node.type = verifyType(node.type);\n            delete node.state.allowType;\n            node.state.allowName = true;\n            node.state.allowParams = true;\n          }\n        } // If reading name, the name is done\n\n\n        if (node.state.allowName) {\n          if (node.name !== \"\") {\n            if (node.name === \"indexed\") {\n              if (!allowIndexed) {\n                throwError(i);\n              }\n\n              if (node.indexed) {\n                throwError(i);\n              }\n\n              node.indexed = true;\n              node.name = \"\";\n            } else if (checkModifier(node.type, node.name)) {\n              node.name = \"\";\n            } else {\n              node.state.allowName = false;\n            }\n          }\n        }\n\n        break;\n\n      case \"[\":\n        if (!node.state.allowArray) {\n          throwError(i);\n        }\n\n        node.type += c;\n        node.state.allowArray = false;\n        node.state.allowName = false;\n        node.state.readArray = true;\n        break;\n\n      case \"]\":\n        if (!node.state.readArray) {\n          throwError(i);\n        }\n\n        node.type += c;\n        node.state.readArray = false;\n        node.state.allowArray = true;\n        node.state.allowName = true;\n        break;\n\n      default:\n        if (node.state.allowType) {\n          node.type += c;\n          node.state.allowParams = true;\n          node.state.allowArray = true;\n        } else if (node.state.allowName) {\n          node.name += c;\n          delete node.state.allowArray;\n        } else if (node.state.readArray) {\n          node.type += c;\n        } else {\n          throwError(i);\n        }\n\n    }\n  }\n\n  if (node.parent) {\n    logger$4.throwArgumentError(\"unexpected eof\", \"param\", param);\n  }\n\n  delete parent.state;\n\n  if (node.name === \"indexed\") {\n    if (!allowIndexed) {\n      throwError(originalParam.length - 7);\n    }\n\n    if (node.indexed) {\n      throwError(originalParam.length - 7);\n    }\n\n    node.indexed = true;\n    node.name = \"\";\n  } else if (checkModifier(node.type, node.name)) {\n    node.name = \"\";\n  }\n\n  parent.type = verifyType(parent.type);\n  return parent;\n}\n\nfunction populate(object, params) {\n  for (let key in params) {\n    defineReadOnly(object, key, params[key]);\n  }\n}\n\nconst FormatTypes = Object.freeze({\n  // Bare formatting, as is needed for computing a sighash of an event or function\n  sighash: \"sighash\",\n  // Human-Readable with Minimal spacing and without names (compact human-readable)\n  minimal: \"minimal\",\n  // Human-Readble with nice spacing, including all names\n  full: \"full\",\n  // JSON-format a la Solidity\n  json: \"json\"\n});\nconst paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\n\nclass ParamType {\n  constructor(constructorGuard, params) {\n    if (constructorGuard !== _constructorGuard$2) {\n      logger$4.throwError(\"use fromString\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"new ParamType()\"\n      });\n    }\n\n    populate(this, params);\n    let match = this.type.match(paramTypeArray);\n\n    if (match) {\n      populate(this, {\n        arrayLength: parseInt(match[2] || \"-1\"),\n        arrayChildren: ParamType.fromObject({\n          type: match[1],\n          components: this.components\n        }),\n        baseType: \"array\"\n      });\n    } else {\n      populate(this, {\n        arrayLength: null,\n        arrayChildren: null,\n        baseType: this.components != null ? \"tuple\" : this.type\n      });\n    }\n\n    this._isParamType = true;\n    Object.freeze(this);\n  } // Format the parameter fragment\n  //   - sighash: \"(uint256,address)\"\n  //   - minimal: \"tuple(uint256,address) indexed\"\n  //   - full:    \"tuple(uint256 foo, addres bar) indexed baz\"\n\n\n  format(format) {\n    if (!format) {\n      format = FormatTypes.sighash;\n    }\n\n    if (!FormatTypes[format]) {\n      logger$4.throwArgumentError(\"invalid format type\", \"format\", format);\n    }\n\n    if (format === FormatTypes.json) {\n      let result = {\n        type: this.baseType === \"tuple\" ? \"tuple\" : this.type,\n        name: this.name || undefined\n      };\n\n      if (typeof this.indexed === \"boolean\") {\n        result.indexed = this.indexed;\n      }\n\n      if (this.components) {\n        result.components = this.components.map(comp => JSON.parse(comp.format(format)));\n      }\n\n      return JSON.stringify(result);\n    }\n\n    let result = \"\"; // Array\n\n    if (this.baseType === \"array\") {\n      result += this.arrayChildren.format(format);\n      result += \"[\" + (this.arrayLength < 0 ? \"\" : String(this.arrayLength)) + \"]\";\n    } else {\n      if (this.baseType === \"tuple\") {\n        if (format !== FormatTypes.sighash) {\n          result += this.type;\n        }\n\n        result += \"(\" + this.components.map(comp => comp.format(format)).join(format === FormatTypes.full ? \", \" : \",\") + \")\";\n      } else {\n        result += this.type;\n      }\n    }\n\n    if (format !== FormatTypes.sighash) {\n      if (this.indexed === true) {\n        result += \" indexed\";\n      }\n\n      if (format === FormatTypes.full && this.name) {\n        result += \" \" + this.name;\n      }\n    }\n\n    return result;\n  }\n\n  static from(value, allowIndexed) {\n    if (typeof value === \"string\") {\n      return ParamType.fromString(value, allowIndexed);\n    }\n\n    return ParamType.fromObject(value);\n  }\n\n  static fromObject(value) {\n    if (ParamType.isParamType(value)) {\n      return value;\n    }\n\n    return new ParamType(_constructorGuard$2, {\n      name: value.name || null,\n      type: verifyType(value.type),\n      indexed: value.indexed == null ? null : !!value.indexed,\n      components: value.components ? value.components.map(ParamType.fromObject) : null\n    });\n  }\n\n  static fromString(value, allowIndexed) {\n    function ParamTypify(node) {\n      return ParamType.fromObject({\n        name: node.name,\n        type: node.type,\n        indexed: node.indexed,\n        components: node.components\n      });\n    }\n\n    return ParamTypify(parseParamType(value, !!allowIndexed));\n  }\n\n  static isParamType(value) {\n    return !!(value != null && value._isParamType);\n  }\n\n}\n\nfunction parseParams(value, allowIndex) {\n  return splitNesting(value).map(param => ParamType.fromString(param, allowIndex));\n}\n\nclass Fragment {\n  constructor(constructorGuard, params) {\n    if (constructorGuard !== _constructorGuard$2) {\n      logger$4.throwError(\"use a static from method\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"new Fragment()\"\n      });\n    }\n\n    populate(this, params);\n    this._isFragment = true;\n    Object.freeze(this);\n  }\n\n  static from(value) {\n    if (Fragment.isFragment(value)) {\n      return value;\n    }\n\n    if (typeof value === \"string\") {\n      return Fragment.fromString(value);\n    }\n\n    return Fragment.fromObject(value);\n  }\n\n  static fromObject(value) {\n    if (Fragment.isFragment(value)) {\n      return value;\n    }\n\n    switch (value.type) {\n      case \"function\":\n        return FunctionFragment.fromObject(value);\n\n      case \"event\":\n        return EventFragment.fromObject(value);\n\n      case \"constructor\":\n        return ConstructorFragment.fromObject(value);\n\n      case \"error\":\n        return ErrorFragment.fromObject(value);\n\n      case \"fallback\":\n      case \"receive\":\n        // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?\n        return null;\n    }\n\n    return logger$4.throwArgumentError(\"invalid fragment object\", \"value\", value);\n  }\n\n  static fromString(value) {\n    // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n    value = value.replace(/\\s/g, \" \");\n    value = value.replace(/\\(/g, \" (\").replace(/\\)/g, \") \").replace(/\\s+/g, \" \");\n    value = value.trim();\n\n    if (value.split(\" \")[0] === \"event\") {\n      return EventFragment.fromString(value.substring(5).trim());\n    } else if (value.split(\" \")[0] === \"function\") {\n      return FunctionFragment.fromString(value.substring(8).trim());\n    } else if (value.split(\"(\")[0].trim() === \"constructor\") {\n      return ConstructorFragment.fromString(value.trim());\n    } else if (value.split(\" \")[0] === \"error\") {\n      return ErrorFragment.fromString(value.substring(5).trim());\n    }\n\n    return logger$4.throwArgumentError(\"unsupported fragment\", \"value\", value);\n  }\n\n  static isFragment(value) {\n    return !!(value && value._isFragment);\n  }\n\n}\n\nclass EventFragment extends Fragment {\n  format(format) {\n    if (!format) {\n      format = FormatTypes.sighash;\n    }\n\n    if (!FormatTypes[format]) {\n      logger$4.throwArgumentError(\"invalid format type\", \"format\", format);\n    }\n\n    if (format === FormatTypes.json) {\n      return JSON.stringify({\n        type: \"event\",\n        anonymous: this.anonymous,\n        name: this.name,\n        inputs: this.inputs.map(input => JSON.parse(input.format(format)))\n      });\n    }\n\n    let result = \"\";\n\n    if (format !== FormatTypes.sighash) {\n      result += \"event \";\n    }\n\n    result += this.name + \"(\" + this.inputs.map(input => input.format(format)).join(format === FormatTypes.full ? \", \" : \",\") + \") \";\n\n    if (format !== FormatTypes.sighash) {\n      if (this.anonymous) {\n        result += \"anonymous \";\n      }\n    }\n\n    return result.trim();\n  }\n\n  static from(value) {\n    if (typeof value === \"string\") {\n      return EventFragment.fromString(value);\n    }\n\n    return EventFragment.fromObject(value);\n  }\n\n  static fromObject(value) {\n    if (EventFragment.isEventFragment(value)) {\n      return value;\n    }\n\n    if (value.type !== \"event\") {\n      logger$4.throwArgumentError(\"invalid event object\", \"value\", value);\n    }\n\n    const params = {\n      name: verifyIdentifier(value.name),\n      anonymous: value.anonymous,\n      inputs: value.inputs ? value.inputs.map(ParamType.fromObject) : [],\n      type: \"event\"\n    };\n    return new EventFragment(_constructorGuard$2, params);\n  }\n\n  static fromString(value) {\n    let match = value.match(regexParen);\n\n    if (!match) {\n      logger$4.throwArgumentError(\"invalid event string\", \"value\", value);\n    }\n\n    let anonymous = false;\n    match[3].split(\" \").forEach(modifier => {\n      switch (modifier.trim()) {\n        case \"anonymous\":\n          anonymous = true;\n          break;\n\n        case \"\":\n          break;\n\n        default:\n          logger$4.warn(\"unknown modifier: \" + modifier);\n      }\n    });\n    return EventFragment.fromObject({\n      name: match[1].trim(),\n      anonymous: anonymous,\n      inputs: parseParams(match[2], true),\n      type: \"event\"\n    });\n  }\n\n  static isEventFragment(value) {\n    return value && value._isFragment && value.type === \"event\";\n  }\n\n}\n\nfunction parseGas(value, params) {\n  params.gas = null;\n  let comps = value.split(\"@\");\n\n  if (comps.length !== 1) {\n    if (comps.length > 2) {\n      logger$4.throwArgumentError(\"invalid human-readable ABI signature\", \"value\", value);\n    }\n\n    if (!comps[1].match(/^[0-9]+$/)) {\n      logger$4.throwArgumentError(\"invalid human-readable ABI signature gas\", \"value\", value);\n    }\n\n    params.gas = BigNumber.from(comps[1]);\n    return comps[0];\n  }\n\n  return value;\n}\n\nfunction parseModifiers(value, params) {\n  params.constant = false;\n  params.payable = false;\n  params.stateMutability = \"nonpayable\";\n  value.split(\" \").forEach(modifier => {\n    switch (modifier.trim()) {\n      case \"constant\":\n        params.constant = true;\n        break;\n\n      case \"payable\":\n        params.payable = true;\n        params.stateMutability = \"payable\";\n        break;\n\n      case \"nonpayable\":\n        params.payable = false;\n        params.stateMutability = \"nonpayable\";\n        break;\n\n      case \"pure\":\n        params.constant = true;\n        params.stateMutability = \"pure\";\n        break;\n\n      case \"view\":\n        params.constant = true;\n        params.stateMutability = \"view\";\n        break;\n\n      case \"external\":\n      case \"public\":\n      case \"\":\n        break;\n\n      default:\n        console.log(\"unknown modifier: \" + modifier);\n    }\n  });\n}\n\nfunction verifyState(value) {\n  let result = {\n    constant: false,\n    payable: true,\n    stateMutability: \"payable\"\n  };\n\n  if (value.stateMutability != null) {\n    result.stateMutability = value.stateMutability; // Set (and check things are consistent) the constant property\n\n    result.constant = result.stateMutability === \"view\" || result.stateMutability === \"pure\";\n\n    if (value.constant != null) {\n      if (!!value.constant !== result.constant) {\n        logger$4.throwArgumentError(\"cannot have constant function with mutability \" + result.stateMutability, \"value\", value);\n      }\n    } // Set (and check things are consistent) the payable property\n\n\n    result.payable = result.stateMutability === \"payable\";\n\n    if (value.payable != null) {\n      if (!!value.payable !== result.payable) {\n        logger$4.throwArgumentError(\"cannot have payable function with mutability \" + result.stateMutability, \"value\", value);\n      }\n    }\n  } else if (value.payable != null) {\n    result.payable = !!value.payable; // If payable we can assume non-constant; otherwise we can't assume\n\n    if (value.constant == null && !result.payable && value.type !== \"constructor\") {\n      logger$4.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n    }\n\n    result.constant = !!value.constant;\n\n    if (result.constant) {\n      result.stateMutability = \"view\";\n    } else {\n      result.stateMutability = result.payable ? \"payable\" : \"nonpayable\";\n    }\n\n    if (result.payable && result.constant) {\n      logger$4.throwArgumentError(\"cannot have constant payable function\", \"value\", value);\n    }\n  } else if (value.constant != null) {\n    result.constant = !!value.constant;\n    result.payable = !result.constant;\n    result.stateMutability = result.constant ? \"view\" : \"payable\";\n  } else if (value.type !== \"constructor\") {\n    logger$4.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n  }\n\n  return result;\n}\n\nclass ConstructorFragment extends Fragment {\n  format(format) {\n    if (!format) {\n      format = FormatTypes.sighash;\n    }\n\n    if (!FormatTypes[format]) {\n      logger$4.throwArgumentError(\"invalid format type\", \"format\", format);\n    }\n\n    if (format === FormatTypes.json) {\n      return JSON.stringify({\n        type: \"constructor\",\n        stateMutability: this.stateMutability !== \"nonpayable\" ? this.stateMutability : undefined,\n        payable: this.payable,\n        gas: this.gas ? this.gas.toNumber() : undefined,\n        inputs: this.inputs.map(input => JSON.parse(input.format(format)))\n      });\n    }\n\n    if (format === FormatTypes.sighash) {\n      logger$4.throwError(\"cannot format a constructor for sighash\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"format(sighash)\"\n      });\n    }\n\n    let result = \"constructor(\" + this.inputs.map(input => input.format(format)).join(format === FormatTypes.full ? \", \" : \",\") + \") \";\n\n    if (this.stateMutability && this.stateMutability !== \"nonpayable\") {\n      result += this.stateMutability + \" \";\n    }\n\n    return result.trim();\n  }\n\n  static from(value) {\n    if (typeof value === \"string\") {\n      return ConstructorFragment.fromString(value);\n    }\n\n    return ConstructorFragment.fromObject(value);\n  }\n\n  static fromObject(value) {\n    if (ConstructorFragment.isConstructorFragment(value)) {\n      return value;\n    }\n\n    if (value.type !== \"constructor\") {\n      logger$4.throwArgumentError(\"invalid constructor object\", \"value\", value);\n    }\n\n    let state = verifyState(value);\n\n    if (state.constant) {\n      logger$4.throwArgumentError(\"constructor cannot be constant\", \"value\", value);\n    }\n\n    const params = {\n      name: null,\n      type: value.type,\n      inputs: value.inputs ? value.inputs.map(ParamType.fromObject) : [],\n      payable: state.payable,\n      stateMutability: state.stateMutability,\n      gas: value.gas ? BigNumber.from(value.gas) : null\n    };\n    return new ConstructorFragment(_constructorGuard$2, params);\n  }\n\n  static fromString(value) {\n    let params = {\n      type: \"constructor\"\n    };\n    value = parseGas(value, params);\n    let parens = value.match(regexParen);\n\n    if (!parens || parens[1].trim() !== \"constructor\") {\n      logger$4.throwArgumentError(\"invalid constructor string\", \"value\", value);\n    }\n\n    params.inputs = parseParams(parens[2].trim(), false);\n    parseModifiers(parens[3].trim(), params);\n    return ConstructorFragment.fromObject(params);\n  }\n\n  static isConstructorFragment(value) {\n    return value && value._isFragment && value.type === \"constructor\";\n  }\n\n}\n\nclass FunctionFragment extends ConstructorFragment {\n  format(format) {\n    if (!format) {\n      format = FormatTypes.sighash;\n    }\n\n    if (!FormatTypes[format]) {\n      logger$4.throwArgumentError(\"invalid format type\", \"format\", format);\n    }\n\n    if (format === FormatTypes.json) {\n      return JSON.stringify({\n        type: \"function\",\n        name: this.name,\n        constant: this.constant,\n        stateMutability: this.stateMutability !== \"nonpayable\" ? this.stateMutability : undefined,\n        payable: this.payable,\n        gas: this.gas ? this.gas.toNumber() : undefined,\n        inputs: this.inputs.map(input => JSON.parse(input.format(format))),\n        outputs: this.outputs.map(output => JSON.parse(output.format(format)))\n      });\n    }\n\n    let result = \"\";\n\n    if (format !== FormatTypes.sighash) {\n      result += \"function \";\n    }\n\n    result += this.name + \"(\" + this.inputs.map(input => input.format(format)).join(format === FormatTypes.full ? \", \" : \",\") + \") \";\n\n    if (format !== FormatTypes.sighash) {\n      if (this.stateMutability) {\n        if (this.stateMutability !== \"nonpayable\") {\n          result += this.stateMutability + \" \";\n        }\n      } else if (this.constant) {\n        result += \"view \";\n      }\n\n      if (this.outputs && this.outputs.length) {\n        result += \"returns (\" + this.outputs.map(output => output.format(format)).join(\", \") + \") \";\n      }\n\n      if (this.gas != null) {\n        result += \"@\" + this.gas.toString() + \" \";\n      }\n    }\n\n    return result.trim();\n  }\n\n  static from(value) {\n    if (typeof value === \"string\") {\n      return FunctionFragment.fromString(value);\n    }\n\n    return FunctionFragment.fromObject(value);\n  }\n\n  static fromObject(value) {\n    if (FunctionFragment.isFunctionFragment(value)) {\n      return value;\n    }\n\n    if (value.type !== \"function\") {\n      logger$4.throwArgumentError(\"invalid function object\", \"value\", value);\n    }\n\n    let state = verifyState(value);\n    const params = {\n      type: value.type,\n      name: verifyIdentifier(value.name),\n      constant: state.constant,\n      inputs: value.inputs ? value.inputs.map(ParamType.fromObject) : [],\n      outputs: value.outputs ? value.outputs.map(ParamType.fromObject) : [],\n      payable: state.payable,\n      stateMutability: state.stateMutability,\n      gas: value.gas ? BigNumber.from(value.gas) : null\n    };\n    return new FunctionFragment(_constructorGuard$2, params);\n  }\n\n  static fromString(value) {\n    let params = {\n      type: \"function\"\n    };\n    value = parseGas(value, params);\n    let comps = value.split(\" returns \");\n\n    if (comps.length > 2) {\n      logger$4.throwArgumentError(\"invalid function string\", \"value\", value);\n    }\n\n    let parens = comps[0].match(regexParen);\n\n    if (!parens) {\n      logger$4.throwArgumentError(\"invalid function signature\", \"value\", value);\n    }\n\n    params.name = parens[1].trim();\n\n    if (params.name) {\n      verifyIdentifier(params.name);\n    }\n\n    params.inputs = parseParams(parens[2], false);\n    parseModifiers(parens[3].trim(), params); // We have outputs\n\n    if (comps.length > 1) {\n      let returns = comps[1].match(regexParen);\n\n      if (returns[1].trim() != \"\" || returns[3].trim() != \"\") {\n        logger$4.throwArgumentError(\"unexpected tokens\", \"value\", value);\n      }\n\n      params.outputs = parseParams(returns[2], false);\n    } else {\n      params.outputs = [];\n    }\n\n    return FunctionFragment.fromObject(params);\n  }\n\n  static isFunctionFragment(value) {\n    return value && value._isFragment && value.type === \"function\";\n  }\n\n} //export class StructFragment extends Fragment {\n//}\n\n\nfunction checkForbidden(fragment) {\n  const sig = fragment.format();\n\n  if (sig === \"Error(string)\" || sig === \"Panic(uint256)\") {\n    logger$4.throwArgumentError(`cannot specify user defined ${sig} error`, \"fragment\", fragment);\n  }\n\n  return fragment;\n}\n\nclass ErrorFragment extends Fragment {\n  format(format) {\n    if (!format) {\n      format = FormatTypes.sighash;\n    }\n\n    if (!FormatTypes[format]) {\n      logger$4.throwArgumentError(\"invalid format type\", \"format\", format);\n    }\n\n    if (format === FormatTypes.json) {\n      return JSON.stringify({\n        type: \"error\",\n        name: this.name,\n        inputs: this.inputs.map(input => JSON.parse(input.format(format)))\n      });\n    }\n\n    let result = \"\";\n\n    if (format !== FormatTypes.sighash) {\n      result += \"error \";\n    }\n\n    result += this.name + \"(\" + this.inputs.map(input => input.format(format)).join(format === FormatTypes.full ? \", \" : \",\") + \") \";\n    return result.trim();\n  }\n\n  static from(value) {\n    if (typeof value === \"string\") {\n      return ErrorFragment.fromString(value);\n    }\n\n    return ErrorFragment.fromObject(value);\n  }\n\n  static fromObject(value) {\n    if (ErrorFragment.isErrorFragment(value)) {\n      return value;\n    }\n\n    if (value.type !== \"error\") {\n      logger$4.throwArgumentError(\"invalid error object\", \"value\", value);\n    }\n\n    const params = {\n      type: value.type,\n      name: verifyIdentifier(value.name),\n      inputs: value.inputs ? value.inputs.map(ParamType.fromObject) : []\n    };\n    return checkForbidden(new ErrorFragment(_constructorGuard$2, params));\n  }\n\n  static fromString(value) {\n    let params = {\n      type: \"error\"\n    };\n    let parens = value.match(regexParen);\n\n    if (!parens) {\n      logger$4.throwArgumentError(\"invalid error signature\", \"value\", value);\n    }\n\n    params.name = parens[1].trim();\n\n    if (params.name) {\n      verifyIdentifier(params.name);\n    }\n\n    params.inputs = parseParams(parens[2], false);\n    return checkForbidden(ErrorFragment.fromObject(params));\n  }\n\n  static isErrorFragment(value) {\n    return value && value._isFragment && value.type === \"error\";\n  }\n\n}\n\nfunction verifyType(type) {\n  // These need to be transformed to their full description\n  if (type.match(/^uint($|[^1-9])/)) {\n    type = \"uint256\" + type.substring(4);\n  } else if (type.match(/^int($|[^1-9])/)) {\n    type = \"int256\" + type.substring(3);\n  } // @TODO: more verification\n\n\n  return type;\n} // See: https://github.com/ethereum/solidity/blob/1f8f1a3db93a548d0555e3e14cfc55a10e25b60e/docs/grammar/SolidityLexer.g4#L234\n\n\nconst regexIdentifier = new RegExp(\"^[a-zA-Z$_][a-zA-Z0-9$_]*$\");\n\nfunction verifyIdentifier(value) {\n  if (!value || !value.match(regexIdentifier)) {\n    logger$4.throwArgumentError(`invalid identifier \"${value}\"`, \"value\", value);\n  }\n\n  return value;\n}\n\nconst regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\n\nfunction splitNesting(value) {\n  value = value.trim();\n  let result = [];\n  let accum = \"\";\n  let depth = 0;\n\n  for (let offset = 0; offset < value.length; offset++) {\n    let c = value[offset];\n\n    if (c === \",\" && depth === 0) {\n      result.push(accum);\n      accum = \"\";\n    } else {\n      accum += c;\n\n      if (c === \"(\") {\n        depth++;\n      } else if (c === \")\") {\n        depth--;\n\n        if (depth === -1) {\n          logger$4.throwArgumentError(\"unbalanced parenthesis\", \"value\", value);\n        }\n      }\n    }\n  }\n\n  if (accum) {\n    result.push(accum);\n  }\n\n  return result;\n}\n\nconst logger$5 = new Logger(version$4);\n\nfunction checkResultErrors(result) {\n  // Find the first error (if any)\n  const errors = [];\n\n  const checkErrors = function (path, object) {\n    if (!Array.isArray(object)) {\n      return;\n    }\n\n    for (let key in object) {\n      const childPath = path.slice();\n      childPath.push(key);\n\n      try {\n        checkErrors(childPath, object[key]);\n      } catch (error) {\n        errors.push({\n          path: childPath,\n          error: error\n        });\n      }\n    }\n  };\n\n  checkErrors([], result);\n  return errors;\n}\n\nclass Coder {\n  constructor(name, type, localName, dynamic) {\n    // @TODO: defineReadOnly these\n    this.name = name;\n    this.type = type;\n    this.localName = localName;\n    this.dynamic = dynamic;\n  }\n\n  _throwError(message, value) {\n    logger$5.throwArgumentError(message, this.localName, value);\n  }\n\n}\n\nclass Writer {\n  constructor(wordSize) {\n    defineReadOnly(this, \"wordSize\", wordSize || 32);\n    this._data = [];\n    this._dataLength = 0;\n    this._padding = new Uint8Array(wordSize);\n  }\n\n  get data() {\n    return hexConcat(this._data);\n  }\n\n  get length() {\n    return this._dataLength;\n  }\n\n  _writeData(data) {\n    this._data.push(data);\n\n    this._dataLength += data.length;\n    return data.length;\n  }\n\n  appendWriter(writer) {\n    return this._writeData(concat(writer._data));\n  } // Arrayish items; padded on the right to wordSize\n\n\n  writeBytes(value) {\n    let bytes = arrayify(value);\n    const paddingOffset = bytes.length % this.wordSize;\n\n    if (paddingOffset) {\n      bytes = concat([bytes, this._padding.slice(paddingOffset)]);\n    }\n\n    return this._writeData(bytes);\n  }\n\n  _getValue(value) {\n    let bytes = arrayify(BigNumber.from(value));\n\n    if (bytes.length > this.wordSize) {\n      logger$5.throwError(\"value out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n        length: this.wordSize,\n        offset: bytes.length\n      });\n    }\n\n    if (bytes.length % this.wordSize) {\n      bytes = concat([this._padding.slice(bytes.length % this.wordSize), bytes]);\n    }\n\n    return bytes;\n  } // BigNumberish items; padded on the left to wordSize\n\n\n  writeValue(value) {\n    return this._writeData(this._getValue(value));\n  }\n\n  writeUpdatableValue() {\n    const offset = this._data.length;\n\n    this._data.push(this._padding);\n\n    this._dataLength += this.wordSize;\n    return value => {\n      this._data[offset] = this._getValue(value);\n    };\n  }\n\n}\n\nclass Reader {\n  constructor(data, wordSize, coerceFunc, allowLoose) {\n    defineReadOnly(this, \"_data\", arrayify(data));\n    defineReadOnly(this, \"wordSize\", wordSize || 32);\n    defineReadOnly(this, \"_coerceFunc\", coerceFunc);\n    defineReadOnly(this, \"allowLoose\", allowLoose);\n    this._offset = 0;\n  }\n\n  get data() {\n    return hexlify(this._data);\n  }\n\n  get consumed() {\n    return this._offset;\n  } // The default Coerce function\n\n\n  static coerce(name, value) {\n    let match = name.match(\"^u?int([0-9]+)$\");\n\n    if (match && parseInt(match[1]) <= 48) {\n      value = value.toNumber();\n    }\n\n    return value;\n  }\n\n  coerce(name, value) {\n    if (this._coerceFunc) {\n      return this._coerceFunc(name, value);\n    }\n\n    return Reader.coerce(name, value);\n  }\n\n  _peekBytes(offset, length, loose) {\n    let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n\n    if (this._offset + alignedLength > this._data.length) {\n      if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n        alignedLength = length;\n      } else {\n        logger$5.throwError(\"data out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n          length: this._data.length,\n          offset: this._offset + alignedLength\n        });\n      }\n    }\n\n    return this._data.slice(this._offset, this._offset + alignedLength);\n  }\n\n  subReader(offset) {\n    return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n  }\n\n  readBytes(length, loose) {\n    let bytes = this._peekBytes(0, length, !!loose);\n\n    this._offset += bytes.length; // @TODO: Make sure the length..end bytes are all 0?\n\n    return bytes.slice(0, length);\n  }\n\n  readValue() {\n    return BigNumber.from(this.readBytes(this.wordSize));\n  }\n\n}\n\nvar sha3 = createCommonjsModule(function (module) {\n  /**\r\n   * [js-sha3]{@link https://github.com/emn178/js-sha3}\r\n   *\r\n   * @version 0.5.7\r\n   * @author Chen, Yi-Cyuan [emn178@gmail.com]\r\n   * @copyright Chen, Yi-Cyuan 2015-2016\r\n   * @license MIT\r\n   */\n\n  /*jslint bitwise: true */\n  (function () {\n    var root = typeof window === 'object' ? window : {};\n    var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n\n    if (NODE_JS) {\n      root = commonjsGlobal;\n    }\n\n    var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && 'object' === 'object' && module.exports;\n    var HEX_CHARS = '0123456789abcdef'.split('');\n    var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n    var KECCAK_PADDING = [1, 256, 65536, 16777216];\n    var PADDING = [6, 1536, 393216, 100663296];\n    var SHIFT = [0, 8, 16, 24];\n    var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n    var BITS = [224, 256, 384, 512];\n    var SHAKE_BITS = [128, 256];\n    var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array'];\n\n    var createOutputMethod = function (bits, padding, outputType) {\n      return function (message) {\n        return new Keccak(bits, padding, bits).update(message)[outputType]();\n      };\n    };\n\n    var createShakeOutputMethod = function (bits, padding, outputType) {\n      return function (message, outputBits) {\n        return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n      };\n    };\n\n    var createMethod = function (bits, padding) {\n      var method = createOutputMethod(bits, padding, 'hex');\n\n      method.create = function () {\n        return new Keccak(bits, padding, bits);\n      };\n\n      method.update = function (message) {\n        return method.create().update(message);\n      };\n\n      for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n        var type = OUTPUT_TYPES[i];\n        method[type] = createOutputMethod(bits, padding, type);\n      }\n\n      return method;\n    };\n\n    var createShakeMethod = function (bits, padding) {\n      var method = createShakeOutputMethod(bits, padding, 'hex');\n\n      method.create = function (outputBits) {\n        return new Keccak(bits, padding, outputBits);\n      };\n\n      method.update = function (message, outputBits) {\n        return method.create(outputBits).update(message);\n      };\n\n      for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n        var type = OUTPUT_TYPES[i];\n        method[type] = createShakeOutputMethod(bits, padding, type);\n      }\n\n      return method;\n    };\n\n    var algorithms = [{\n      name: 'keccak',\n      padding: KECCAK_PADDING,\n      bits: BITS,\n      createMethod: createMethod\n    }, {\n      name: 'sha3',\n      padding: PADDING,\n      bits: BITS,\n      createMethod: createMethod\n    }, {\n      name: 'shake',\n      padding: SHAKE_PADDING,\n      bits: SHAKE_BITS,\n      createMethod: createShakeMethod\n    }];\n    var methods = {},\n        methodNames = [];\n\n    for (var i = 0; i < algorithms.length; ++i) {\n      var algorithm = algorithms[i];\n      var bits = algorithm.bits;\n\n      for (var j = 0; j < bits.length; ++j) {\n        var methodName = algorithm.name + '_' + bits[j];\n        methodNames.push(methodName);\n        methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      }\n    }\n\n    function Keccak(bits, padding, outputBits) {\n      this.blocks = [];\n      this.s = [];\n      this.padding = padding;\n      this.outputBits = outputBits;\n      this.reset = true;\n      this.block = 0;\n      this.start = 0;\n      this.blockCount = 1600 - (bits << 1) >> 5;\n      this.byteCount = this.blockCount << 2;\n      this.outputBlocks = outputBits >> 5;\n      this.extraBytes = (outputBits & 31) >> 3;\n\n      for (var i = 0; i < 50; ++i) {\n        this.s[i] = 0;\n      }\n    }\n\n    Keccak.prototype.update = function (message) {\n      var notString = typeof message !== 'string';\n\n      if (notString && message.constructor === ArrayBuffer) {\n        message = new Uint8Array(message);\n      }\n\n      var length = message.length,\n          blocks = this.blocks,\n          byteCount = this.byteCount,\n          blockCount = this.blockCount,\n          index = 0,\n          s = this.s,\n          i,\n          code;\n\n      while (index < length) {\n        if (this.reset) {\n          this.reset = false;\n          blocks[0] = this.block;\n\n          for (i = 1; i < blockCount + 1; ++i) {\n            blocks[i] = 0;\n          }\n        }\n\n        if (notString) {\n          for (i = this.start; index < length && i < byteCount; ++index) {\n            blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n          }\n        } else {\n          for (i = this.start; index < length && i < byteCount; ++index) {\n            code = message.charCodeAt(index);\n\n            if (code < 0x80) {\n              blocks[i >> 2] |= code << SHIFT[i++ & 3];\n            } else if (code < 0x800) {\n              blocks[i >> 2] |= (0xc0 | code >> 6) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n            } else if (code < 0xd800 || code >= 0xe000) {\n              blocks[i >> 2] |= (0xe0 | code >> 12) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n            } else {\n              code = 0x10000 + ((code & 0x3ff) << 10 | message.charCodeAt(++index) & 0x3ff);\n              blocks[i >> 2] |= (0xf0 | code >> 18) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code >> 12 & 0x3f) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n            }\n          }\n        }\n\n        this.lastByteIndex = i;\n\n        if (i >= byteCount) {\n          this.start = i - byteCount;\n          this.block = blocks[blockCount];\n\n          for (i = 0; i < blockCount; ++i) {\n            s[i] ^= blocks[i];\n          }\n\n          f(s);\n          this.reset = true;\n        } else {\n          this.start = i;\n        }\n      }\n\n      return this;\n    };\n\n    Keccak.prototype.finalize = function () {\n      var blocks = this.blocks,\n          i = this.lastByteIndex,\n          blockCount = this.blockCount,\n          s = this.s;\n      blocks[i >> 2] |= this.padding[i & 3];\n\n      if (this.lastByteIndex === this.byteCount) {\n        blocks[0] = blocks[blockCount];\n\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n\n      blocks[blockCount - 1] |= 0x80000000;\n\n      for (i = 0; i < blockCount; ++i) {\n        s[i] ^= blocks[i];\n      }\n\n      f(s);\n    };\n\n    Keccak.prototype.toString = Keccak.prototype.hex = function () {\n      this.finalize();\n      var blockCount = this.blockCount,\n          s = this.s,\n          outputBlocks = this.outputBlocks,\n          extraBytes = this.extraBytes,\n          i = 0,\n          j = 0;\n      var hex = '',\n          block;\n\n      while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n          block = s[i];\n          hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F] + HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F] + HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F] + HEX_CHARS[block >> 28 & 0x0F] + HEX_CHARS[block >> 24 & 0x0F];\n        }\n\n        if (j % blockCount === 0) {\n          f(s);\n          i = 0;\n        }\n      }\n\n      if (extraBytes) {\n        block = s[i];\n\n        if (extraBytes > 0) {\n          hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F];\n        }\n\n        if (extraBytes > 1) {\n          hex += HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F];\n        }\n\n        if (extraBytes > 2) {\n          hex += HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F];\n        }\n      }\n\n      return hex;\n    };\n\n    Keccak.prototype.arrayBuffer = function () {\n      this.finalize();\n      var blockCount = this.blockCount,\n          s = this.s,\n          outputBlocks = this.outputBlocks,\n          extraBytes = this.extraBytes,\n          i = 0,\n          j = 0;\n      var bytes = this.outputBits >> 3;\n      var buffer;\n\n      if (extraBytes) {\n        buffer = new ArrayBuffer(outputBlocks + 1 << 2);\n      } else {\n        buffer = new ArrayBuffer(bytes);\n      }\n\n      var array = new Uint32Array(buffer);\n\n      while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n          array[j] = s[i];\n        }\n\n        if (j % blockCount === 0) {\n          f(s);\n        }\n      }\n\n      if (extraBytes) {\n        array[i] = s[i];\n        buffer = buffer.slice(0, bytes);\n      }\n\n      return buffer;\n    };\n\n    Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n    Keccak.prototype.digest = Keccak.prototype.array = function () {\n      this.finalize();\n      var blockCount = this.blockCount,\n          s = this.s,\n          outputBlocks = this.outputBlocks,\n          extraBytes = this.extraBytes,\n          i = 0,\n          j = 0;\n      var array = [],\n          offset,\n          block;\n\n      while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n          offset = j << 2;\n          block = s[i];\n          array[offset] = block & 0xFF;\n          array[offset + 1] = block >> 8 & 0xFF;\n          array[offset + 2] = block >> 16 & 0xFF;\n          array[offset + 3] = block >> 24 & 0xFF;\n        }\n\n        if (j % blockCount === 0) {\n          f(s);\n        }\n      }\n\n      if (extraBytes) {\n        offset = j << 2;\n        block = s[i];\n\n        if (extraBytes > 0) {\n          array[offset] = block & 0xFF;\n        }\n\n        if (extraBytes > 1) {\n          array[offset + 1] = block >> 8 & 0xFF;\n        }\n\n        if (extraBytes > 2) {\n          array[offset + 2] = block >> 16 & 0xFF;\n        }\n      }\n\n      return array;\n    };\n\n    var f = function (s) {\n      var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n\n      for (n = 0; n < 48; n += 2) {\n        c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n        c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n        c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n        c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n        c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n        c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n        c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n        c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n        c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n        c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n        h = c8 ^ (c2 << 1 | c3 >>> 31);\n        l = c9 ^ (c3 << 1 | c2 >>> 31);\n        s[0] ^= h;\n        s[1] ^= l;\n        s[10] ^= h;\n        s[11] ^= l;\n        s[20] ^= h;\n        s[21] ^= l;\n        s[30] ^= h;\n        s[31] ^= l;\n        s[40] ^= h;\n        s[41] ^= l;\n        h = c0 ^ (c4 << 1 | c5 >>> 31);\n        l = c1 ^ (c5 << 1 | c4 >>> 31);\n        s[2] ^= h;\n        s[3] ^= l;\n        s[12] ^= h;\n        s[13] ^= l;\n        s[22] ^= h;\n        s[23] ^= l;\n        s[32] ^= h;\n        s[33] ^= l;\n        s[42] ^= h;\n        s[43] ^= l;\n        h = c2 ^ (c6 << 1 | c7 >>> 31);\n        l = c3 ^ (c7 << 1 | c6 >>> 31);\n        s[4] ^= h;\n        s[5] ^= l;\n        s[14] ^= h;\n        s[15] ^= l;\n        s[24] ^= h;\n        s[25] ^= l;\n        s[34] ^= h;\n        s[35] ^= l;\n        s[44] ^= h;\n        s[45] ^= l;\n        h = c4 ^ (c8 << 1 | c9 >>> 31);\n        l = c5 ^ (c9 << 1 | c8 >>> 31);\n        s[6] ^= h;\n        s[7] ^= l;\n        s[16] ^= h;\n        s[17] ^= l;\n        s[26] ^= h;\n        s[27] ^= l;\n        s[36] ^= h;\n        s[37] ^= l;\n        s[46] ^= h;\n        s[47] ^= l;\n        h = c6 ^ (c0 << 1 | c1 >>> 31);\n        l = c7 ^ (c1 << 1 | c0 >>> 31);\n        s[8] ^= h;\n        s[9] ^= l;\n        s[18] ^= h;\n        s[19] ^= l;\n        s[28] ^= h;\n        s[29] ^= l;\n        s[38] ^= h;\n        s[39] ^= l;\n        s[48] ^= h;\n        s[49] ^= l;\n        b0 = s[0];\n        b1 = s[1];\n        b32 = s[11] << 4 | s[10] >>> 28;\n        b33 = s[10] << 4 | s[11] >>> 28;\n        b14 = s[20] << 3 | s[21] >>> 29;\n        b15 = s[21] << 3 | s[20] >>> 29;\n        b46 = s[31] << 9 | s[30] >>> 23;\n        b47 = s[30] << 9 | s[31] >>> 23;\n        b28 = s[40] << 18 | s[41] >>> 14;\n        b29 = s[41] << 18 | s[40] >>> 14;\n        b20 = s[2] << 1 | s[3] >>> 31;\n        b21 = s[3] << 1 | s[2] >>> 31;\n        b2 = s[13] << 12 | s[12] >>> 20;\n        b3 = s[12] << 12 | s[13] >>> 20;\n        b34 = s[22] << 10 | s[23] >>> 22;\n        b35 = s[23] << 10 | s[22] >>> 22;\n        b16 = s[33] << 13 | s[32] >>> 19;\n        b17 = s[32] << 13 | s[33] >>> 19;\n        b48 = s[42] << 2 | s[43] >>> 30;\n        b49 = s[43] << 2 | s[42] >>> 30;\n        b40 = s[5] << 30 | s[4] >>> 2;\n        b41 = s[4] << 30 | s[5] >>> 2;\n        b22 = s[14] << 6 | s[15] >>> 26;\n        b23 = s[15] << 6 | s[14] >>> 26;\n        b4 = s[25] << 11 | s[24] >>> 21;\n        b5 = s[24] << 11 | s[25] >>> 21;\n        b36 = s[34] << 15 | s[35] >>> 17;\n        b37 = s[35] << 15 | s[34] >>> 17;\n        b18 = s[45] << 29 | s[44] >>> 3;\n        b19 = s[44] << 29 | s[45] >>> 3;\n        b10 = s[6] << 28 | s[7] >>> 4;\n        b11 = s[7] << 28 | s[6] >>> 4;\n        b42 = s[17] << 23 | s[16] >>> 9;\n        b43 = s[16] << 23 | s[17] >>> 9;\n        b24 = s[26] << 25 | s[27] >>> 7;\n        b25 = s[27] << 25 | s[26] >>> 7;\n        b6 = s[36] << 21 | s[37] >>> 11;\n        b7 = s[37] << 21 | s[36] >>> 11;\n        b38 = s[47] << 24 | s[46] >>> 8;\n        b39 = s[46] << 24 | s[47] >>> 8;\n        b30 = s[8] << 27 | s[9] >>> 5;\n        b31 = s[9] << 27 | s[8] >>> 5;\n        b12 = s[18] << 20 | s[19] >>> 12;\n        b13 = s[19] << 20 | s[18] >>> 12;\n        b44 = s[29] << 7 | s[28] >>> 25;\n        b45 = s[28] << 7 | s[29] >>> 25;\n        b26 = s[38] << 8 | s[39] >>> 24;\n        b27 = s[39] << 8 | s[38] >>> 24;\n        b8 = s[48] << 14 | s[49] >>> 18;\n        b9 = s[49] << 14 | s[48] >>> 18;\n        s[0] = b0 ^ ~b2 & b4;\n        s[1] = b1 ^ ~b3 & b5;\n        s[10] = b10 ^ ~b12 & b14;\n        s[11] = b11 ^ ~b13 & b15;\n        s[20] = b20 ^ ~b22 & b24;\n        s[21] = b21 ^ ~b23 & b25;\n        s[30] = b30 ^ ~b32 & b34;\n        s[31] = b31 ^ ~b33 & b35;\n        s[40] = b40 ^ ~b42 & b44;\n        s[41] = b41 ^ ~b43 & b45;\n        s[2] = b2 ^ ~b4 & b6;\n        s[3] = b3 ^ ~b5 & b7;\n        s[12] = b12 ^ ~b14 & b16;\n        s[13] = b13 ^ ~b15 & b17;\n        s[22] = b22 ^ ~b24 & b26;\n        s[23] = b23 ^ ~b25 & b27;\n        s[32] = b32 ^ ~b34 & b36;\n        s[33] = b33 ^ ~b35 & b37;\n        s[42] = b42 ^ ~b44 & b46;\n        s[43] = b43 ^ ~b45 & b47;\n        s[4] = b4 ^ ~b6 & b8;\n        s[5] = b5 ^ ~b7 & b9;\n        s[14] = b14 ^ ~b16 & b18;\n        s[15] = b15 ^ ~b17 & b19;\n        s[24] = b24 ^ ~b26 & b28;\n        s[25] = b25 ^ ~b27 & b29;\n        s[34] = b34 ^ ~b36 & b38;\n        s[35] = b35 ^ ~b37 & b39;\n        s[44] = b44 ^ ~b46 & b48;\n        s[45] = b45 ^ ~b47 & b49;\n        s[6] = b6 ^ ~b8 & b0;\n        s[7] = b7 ^ ~b9 & b1;\n        s[16] = b16 ^ ~b18 & b10;\n        s[17] = b17 ^ ~b19 & b11;\n        s[26] = b26 ^ ~b28 & b20;\n        s[27] = b27 ^ ~b29 & b21;\n        s[36] = b36 ^ ~b38 & b30;\n        s[37] = b37 ^ ~b39 & b31;\n        s[46] = b46 ^ ~b48 & b40;\n        s[47] = b47 ^ ~b49 & b41;\n        s[8] = b8 ^ ~b0 & b2;\n        s[9] = b9 ^ ~b1 & b3;\n        s[18] = b18 ^ ~b10 & b12;\n        s[19] = b19 ^ ~b11 & b13;\n        s[28] = b28 ^ ~b20 & b22;\n        s[29] = b29 ^ ~b21 & b23;\n        s[38] = b38 ^ ~b30 & b32;\n        s[39] = b39 ^ ~b31 & b33;\n        s[48] = b48 ^ ~b40 & b42;\n        s[49] = b49 ^ ~b41 & b43;\n        s[0] ^= RC[n];\n        s[1] ^= RC[n + 1];\n      }\n    };\n\n    if (COMMON_JS) {\n      module.exports = methods;\n    } else {\n      for (var i = 0; i < methodNames.length; ++i) {\n        root[methodNames[i]] = methods[methodNames[i]];\n      }\n    }\n  })();\n});\n\nfunction keccak256(data) {\n  return '0x' + sha3.keccak_256(arrayify(data));\n}\n\nconst version$5 = \"rlp/5.4.0\";\nconst logger$6 = new Logger(version$5);\n\nfunction arrayifyInteger(value) {\n  const result = [];\n\n  while (value) {\n    result.unshift(value & 0xff);\n    value >>= 8;\n  }\n\n  return result;\n}\n\nfunction unarrayifyInteger(data, offset, length) {\n  let result = 0;\n\n  for (let i = 0; i < length; i++) {\n    result = result * 256 + data[offset + i];\n  }\n\n  return result;\n}\n\nfunction _encode(object) {\n  if (Array.isArray(object)) {\n    let payload = [];\n    object.forEach(function (child) {\n      payload = payload.concat(_encode(child));\n    });\n\n    if (payload.length <= 55) {\n      payload.unshift(0xc0 + payload.length);\n      return payload;\n    }\n\n    const length = arrayifyInteger(payload.length);\n    length.unshift(0xf7 + length.length);\n    return length.concat(payload);\n  }\n\n  if (!isBytesLike(object)) {\n    logger$6.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object);\n  }\n\n  const data = Array.prototype.slice.call(arrayify(object));\n\n  if (data.length === 1 && data[0] <= 0x7f) {\n    return data;\n  } else if (data.length <= 55) {\n    data.unshift(0x80 + data.length);\n    return data;\n  }\n\n  const length = arrayifyInteger(data.length);\n  length.unshift(0xb7 + length.length);\n  return length.concat(data);\n}\n\nfunction encode(object) {\n  return hexlify(_encode(object));\n}\n\nfunction _decodeChildren(data, offset, childOffset, length) {\n  const result = [];\n\n  while (childOffset < offset + 1 + length) {\n    const decoded = _decode(data, childOffset);\n\n    result.push(decoded.result);\n    childOffset += decoded.consumed;\n\n    if (childOffset > offset + 1 + length) {\n      logger$6.throwError(\"child data too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n  }\n\n  return {\n    consumed: 1 + length,\n    result: result\n  };\n} // returns { consumed: number, result: Object }\n\n\nfunction _decode(data, offset) {\n  if (data.length === 0) {\n    logger$6.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, {});\n  } // Array with extra length prefix\n\n\n  if (data[offset] >= 0xf8) {\n    const lengthLength = data[offset] - 0xf7;\n\n    if (offset + 1 + lengthLength > data.length) {\n      logger$6.throwError(\"data short segment too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    const length = unarrayifyInteger(data, offset + 1, lengthLength);\n\n    if (offset + 1 + lengthLength + length > data.length) {\n      logger$6.throwError(\"data long segment too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n  } else if (data[offset] >= 0xc0) {\n    const length = data[offset] - 0xc0;\n\n    if (offset + 1 + length > data.length) {\n      logger$6.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    return _decodeChildren(data, offset, offset + 1, length);\n  } else if (data[offset] >= 0xb8) {\n    const lengthLength = data[offset] - 0xb7;\n\n    if (offset + 1 + lengthLength > data.length) {\n      logger$6.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    const length = unarrayifyInteger(data, offset + 1, lengthLength);\n\n    if (offset + 1 + lengthLength + length > data.length) {\n      logger$6.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n    return {\n      consumed: 1 + lengthLength + length,\n      result: result\n    };\n  } else if (data[offset] >= 0x80) {\n    const length = data[offset] - 0x80;\n\n    if (offset + 1 + length > data.length) {\n      logger$6.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n    return {\n      consumed: 1 + length,\n      result: result\n    };\n  }\n\n  return {\n    consumed: 1,\n    result: hexlify(data[offset])\n  };\n}\n\nfunction decode(data) {\n  const bytes = arrayify(data);\n\n  const decoded = _decode(bytes, 0);\n\n  if (decoded.consumed !== bytes.length) {\n    logger$6.throwArgumentError(\"invalid rlp data\", \"data\", data);\n  }\n\n  return decoded.result;\n}\n\nvar index = {\n  __proto__: null,\n  encode: encode,\n  decode: decode\n};\nconst version$6 = \"address/5.4.0\";\nconst logger$7 = new Logger(version$6);\n\nfunction getChecksumAddress(address) {\n  if (!isHexString(address, 20)) {\n    logger$7.throwArgumentError(\"invalid address\", \"address\", address);\n  }\n\n  address = address.toLowerCase();\n  const chars = address.substring(2).split(\"\");\n  const expanded = new Uint8Array(40);\n\n  for (let i = 0; i < 40; i++) {\n    expanded[i] = chars[i].charCodeAt(0);\n  }\n\n  const hashed = arrayify(keccak256(expanded));\n\n  for (let i = 0; i < 40; i += 2) {\n    if (hashed[i >> 1] >> 4 >= 8) {\n      chars[i] = chars[i].toUpperCase();\n    }\n\n    if ((hashed[i >> 1] & 0x0f) >= 8) {\n      chars[i + 1] = chars[i + 1].toUpperCase();\n    }\n  }\n\n  return \"0x\" + chars.join(\"\");\n} // Shims for environments that are missing some required constants and functions\n\n\nconst MAX_SAFE_INTEGER = 0x1fffffffffffff;\n\nfunction log10(x) {\n  if (Math.log10) {\n    return Math.log10(x);\n  }\n\n  return Math.log(x) / Math.LN10;\n} // See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n// Create lookup table\n\n\nconst ibanLookup = {};\n\nfor (let i = 0; i < 10; i++) {\n  ibanLookup[String(i)] = String(i);\n}\n\nfor (let i = 0; i < 26; i++) {\n  ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n} // How many decimal digits can we process? (for 64-bit float, this is 15)\n\n\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\n\nfunction ibanChecksum(address) {\n  address = address.toUpperCase();\n  address = address.substring(4) + address.substring(0, 2) + \"00\";\n  let expanded = address.split(\"\").map(c => {\n    return ibanLookup[c];\n  }).join(\"\"); // Javascript can handle integers safely up to 15 (decimal) digits\n\n  while (expanded.length >= safeDigits) {\n    let block = expanded.substring(0, safeDigits);\n    expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n  }\n\n  let checksum = String(98 - parseInt(expanded, 10) % 97);\n\n  while (checksum.length < 2) {\n    checksum = \"0\" + checksum;\n  }\n\n  return checksum;\n}\n\nfunction getAddress(address) {\n  let result = null;\n\n  if (typeof address !== \"string\") {\n    logger$7.throwArgumentError(\"invalid address\", \"address\", address);\n  }\n\n  if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n    // Missing the 0x prefix\n    if (address.substring(0, 2) !== \"0x\") {\n      address = \"0x\" + address;\n    }\n\n    result = getChecksumAddress(address); // It is a checksummed address with a bad checksum\n\n    if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n      logger$7.throwArgumentError(\"bad address checksum\", \"address\", address);\n    } // Maybe ICAP? (we only support direct mode)\n\n  } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n    // It is an ICAP address with a bad checksum\n    if (address.substring(2, 4) !== ibanChecksum(address)) {\n      logger$7.throwArgumentError(\"bad icap checksum\", \"address\", address);\n    }\n\n    result = _base36To16(address.substring(4));\n\n    while (result.length < 40) {\n      result = \"0\" + result;\n    }\n\n    result = getChecksumAddress(\"0x\" + result);\n  } else {\n    logger$7.throwArgumentError(\"invalid address\", \"address\", address);\n  }\n\n  return result;\n}\n\nfunction isAddress(address) {\n  try {\n    getAddress(address);\n    return true;\n  } catch (error) {}\n\n  return false;\n}\n\nfunction getIcapAddress(address) {\n  let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n\n  while (base36.length < 30) {\n    base36 = \"0\" + base36;\n  }\n\n  return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n} // http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\n\n\nfunction getContractAddress(transaction) {\n  let from = null;\n\n  try {\n    from = getAddress(transaction.from);\n  } catch (error) {\n    logger$7.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n  }\n\n  const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n  return getAddress(hexDataSlice(keccak256(encode([from, nonce])), 12));\n}\n\nfunction getCreate2Address(from, salt, initCodeHash) {\n  if (hexDataLength(salt) !== 32) {\n    logger$7.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n  }\n\n  if (hexDataLength(initCodeHash) !== 32) {\n    logger$7.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n  }\n\n  return getAddress(hexDataSlice(keccak256(concat([\"0xff\", getAddress(from), salt, initCodeHash])), 12));\n}\n\nclass AddressCoder extends Coder {\n  constructor(localName) {\n    super(\"address\", \"address\", localName, false);\n  }\n\n  defaultValue() {\n    return \"0x0000000000000000000000000000000000000000\";\n  }\n\n  encode(writer, value) {\n    try {\n      getAddress(value);\n    } catch (error) {\n      this._throwError(error.message, value);\n    }\n\n    return writer.writeValue(value);\n  }\n\n  decode(reader) {\n    return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\n  }\n\n} // Clones the functionality of an existing Coder, but without a localName\n\n\nclass AnonymousCoder extends Coder {\n  constructor(coder) {\n    super(coder.name, coder.type, undefined, coder.dynamic);\n    this.coder = coder;\n  }\n\n  defaultValue() {\n    return this.coder.defaultValue();\n  }\n\n  encode(writer, value) {\n    return this.coder.encode(writer, value);\n  }\n\n  decode(reader) {\n    return this.coder.decode(reader);\n  }\n\n}\n\nconst logger$8 = new Logger(version$4);\n\nfunction pack(writer, coders, values) {\n  let arrayValues = null;\n\n  if (Array.isArray(values)) {\n    arrayValues = values;\n  } else if (values && typeof values === \"object\") {\n    let unique = {};\n    arrayValues = coders.map(coder => {\n      const name = coder.localName;\n\n      if (!name) {\n        logger$8.throwError(\"cannot encode object for signature with missing names\", Logger.errors.INVALID_ARGUMENT, {\n          argument: \"values\",\n          coder: coder,\n          value: values\n        });\n      }\n\n      if (unique[name]) {\n        logger$8.throwError(\"cannot encode object for signature with duplicate names\", Logger.errors.INVALID_ARGUMENT, {\n          argument: \"values\",\n          coder: coder,\n          value: values\n        });\n      }\n\n      unique[name] = true;\n      return values[name];\n    });\n  } else {\n    logger$8.throwArgumentError(\"invalid tuple value\", \"tuple\", values);\n  }\n\n  if (coders.length !== arrayValues.length) {\n    logger$8.throwArgumentError(\"types/value length mismatch\", \"tuple\", values);\n  }\n\n  let staticWriter = new Writer(writer.wordSize);\n  let dynamicWriter = new Writer(writer.wordSize);\n  let updateFuncs = [];\n  coders.forEach((coder, index) => {\n    let value = arrayValues[index];\n\n    if (coder.dynamic) {\n      // Get current dynamic offset (for the future pointer)\n      let dynamicOffset = dynamicWriter.length; // Encode the dynamic value into the dynamicWriter\n\n      coder.encode(dynamicWriter, value); // Prepare to populate the correct offset once we are done\n\n      let updateFunc = staticWriter.writeUpdatableValue();\n      updateFuncs.push(baseOffset => {\n        updateFunc(baseOffset + dynamicOffset);\n      });\n    } else {\n      coder.encode(staticWriter, value);\n    }\n  }); // Backfill all the dynamic offsets, now that we know the static length\n\n  updateFuncs.forEach(func => {\n    func(staticWriter.length);\n  });\n  let length = writer.appendWriter(staticWriter);\n  length += writer.appendWriter(dynamicWriter);\n  return length;\n}\n\nfunction unpack(reader, coders) {\n  let values = []; // A reader anchored to this base\n\n  let baseReader = reader.subReader(0);\n  coders.forEach(coder => {\n    let value = null;\n\n    if (coder.dynamic) {\n      let offset = reader.readValue();\n      let offsetReader = baseReader.subReader(offset.toNumber());\n\n      try {\n        value = coder.decode(offsetReader);\n      } catch (error) {\n        // Cannot recover from this\n        if (error.code === Logger.errors.BUFFER_OVERRUN) {\n          throw error;\n        }\n\n        value = error;\n        value.baseType = coder.name;\n        value.name = coder.localName;\n        value.type = coder.type;\n      }\n    } else {\n      try {\n        value = coder.decode(reader);\n      } catch (error) {\n        // Cannot recover from this\n        if (error.code === Logger.errors.BUFFER_OVERRUN) {\n          throw error;\n        }\n\n        value = error;\n        value.baseType = coder.name;\n        value.name = coder.localName;\n        value.type = coder.type;\n      }\n    }\n\n    if (value != undefined) {\n      values.push(value);\n    }\n  }); // We only output named properties for uniquely named coders\n\n  const uniqueNames = coders.reduce((accum, coder) => {\n    const name = coder.localName;\n\n    if (name) {\n      if (!accum[name]) {\n        accum[name] = 0;\n      }\n\n      accum[name]++;\n    }\n\n    return accum;\n  }, {}); // Add any named parameters (i.e. tuples)\n\n  coders.forEach((coder, index) => {\n    let name = coder.localName;\n\n    if (!name || uniqueNames[name] !== 1) {\n      return;\n    }\n\n    if (name === \"length\") {\n      name = \"_length\";\n    }\n\n    if (values[name] != null) {\n      return;\n    }\n\n    const value = values[index];\n\n    if (value instanceof Error) {\n      Object.defineProperty(values, name, {\n        get: () => {\n          throw value;\n        }\n      });\n    } else {\n      values[name] = value;\n    }\n  });\n\n  for (let i = 0; i < values.length; i++) {\n    const value = values[i];\n\n    if (value instanceof Error) {\n      Object.defineProperty(values, i, {\n        get: () => {\n          throw value;\n        }\n      });\n    }\n  }\n\n  return Object.freeze(values);\n}\n\nclass ArrayCoder extends Coder {\n  constructor(coder, length, localName) {\n    const type = coder.type + \"[\" + (length >= 0 ? length : \"\") + \"]\";\n    const dynamic = length === -1 || coder.dynamic;\n    super(\"array\", type, localName, dynamic);\n    this.coder = coder;\n    this.length = length;\n  }\n\n  defaultValue() {\n    // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n    const defaultChild = this.coder.defaultValue();\n    const result = [];\n\n    for (let i = 0; i < this.length; i++) {\n      result.push(defaultChild);\n    }\n\n    return result;\n  }\n\n  encode(writer, value) {\n    if (!Array.isArray(value)) {\n      this._throwError(\"expected array value\", value);\n    }\n\n    let count = this.length;\n\n    if (count === -1) {\n      count = value.length;\n      writer.writeValue(value.length);\n    }\n\n    logger$8.checkArgumentCount(value.length, count, \"coder array\" + (this.localName ? \" \" + this.localName : \"\"));\n    let coders = [];\n\n    for (let i = 0; i < value.length; i++) {\n      coders.push(this.coder);\n    }\n\n    return pack(writer, coders, value);\n  }\n\n  decode(reader) {\n    let count = this.length;\n\n    if (count === -1) {\n      count = reader.readValue().toNumber(); // Check that there is *roughly* enough data to ensure\n      // stray random data is not being read as a length. Each\n      // slot requires at least 32 bytes for their value (or 32\n      // bytes as a link to the data). This could use a much\n      // tighter bound, but we are erroring on the side of safety.\n\n      if (count * 32 > reader._data.length) {\n        logger$8.throwError(\"insufficient data length\", Logger.errors.BUFFER_OVERRUN, {\n          length: reader._data.length,\n          count: count\n        });\n      }\n    }\n\n    let coders = [];\n\n    for (let i = 0; i < count; i++) {\n      coders.push(new AnonymousCoder(this.coder));\n    }\n\n    return reader.coerce(this.name, unpack(reader, coders));\n  }\n\n}\n\nclass BooleanCoder extends Coder {\n  constructor(localName) {\n    super(\"bool\", \"bool\", localName, false);\n  }\n\n  defaultValue() {\n    return false;\n  }\n\n  encode(writer, value) {\n    return writer.writeValue(value ? 1 : 0);\n  }\n\n  decode(reader) {\n    return reader.coerce(this.type, !reader.readValue().isZero());\n  }\n\n}\n\nclass DynamicBytesCoder extends Coder {\n  constructor(type, localName) {\n    super(type, type, localName, true);\n  }\n\n  defaultValue() {\n    return \"0x\";\n  }\n\n  encode(writer, value) {\n    value = arrayify(value);\n    let length = writer.writeValue(value.length);\n    length += writer.writeBytes(value);\n    return length;\n  }\n\n  decode(reader) {\n    return reader.readBytes(reader.readValue().toNumber(), true);\n  }\n\n}\n\nclass BytesCoder extends DynamicBytesCoder {\n  constructor(localName) {\n    super(\"bytes\", localName);\n  }\n\n  decode(reader) {\n    return reader.coerce(this.name, hexlify(super.decode(reader)));\n  }\n\n} // @TODO: Merge this with bytes\n\n\nclass FixedBytesCoder extends Coder {\n  constructor(size, localName) {\n    let name = \"bytes\" + String(size);\n    super(name, name, localName, false);\n    this.size = size;\n  }\n\n  defaultValue() {\n    return \"0x0000000000000000000000000000000000000000000000000000000000000000\".substring(0, 2 + this.size * 2);\n  }\n\n  encode(writer, value) {\n    let data = arrayify(value);\n\n    if (data.length !== this.size) {\n      this._throwError(\"incorrect data length\", value);\n    }\n\n    return writer.writeBytes(data);\n  }\n\n  decode(reader) {\n    return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n  }\n\n}\n\nclass NullCoder extends Coder {\n  constructor(localName) {\n    super(\"null\", \"\", localName, false);\n  }\n\n  defaultValue() {\n    return null;\n  }\n\n  encode(writer, value) {\n    if (value != null) {\n      this._throwError(\"not null\", value);\n    }\n\n    return writer.writeBytes([]);\n  }\n\n  decode(reader) {\n    reader.readBytes(0);\n    return reader.coerce(this.name, null);\n  }\n\n}\n\nconst AddressZero = \"0x0000000000000000000000000000000000000000\";\nconst NegativeOne$1 = /*#__PURE__*/BigNumber.from(-1);\nconst Zero$1 = /*#__PURE__*/BigNumber.from(0);\nconst One = /*#__PURE__*/BigNumber.from(1);\nconst Two = /*#__PURE__*/BigNumber.from(2);\nconst WeiPerEther = /*#__PURE__*/BigNumber.from(\"1000000000000000000\");\nconst MaxUint256 = /*#__PURE__*/BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nconst MinInt256 = /*#__PURE__*/BigNumber.from(\"-0x8000000000000000000000000000000000000000000000000000000000000000\");\nconst MaxInt256 = /*#__PURE__*/BigNumber.from(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nconst HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\"; // NFKC (composed)             // (decomposed)\n\nconst EtherSymbol = \"\\u039e\"; // \"\\uD835\\uDF63\";\n\nvar index$1 = {\n  __proto__: null,\n  AddressZero: AddressZero,\n  NegativeOne: NegativeOne$1,\n  Zero: Zero$1,\n  One: One,\n  Two: Two,\n  WeiPerEther: WeiPerEther,\n  MaxUint256: MaxUint256,\n  MinInt256: MinInt256,\n  MaxInt256: MaxInt256,\n  HashZero: HashZero,\n  EtherSymbol: EtherSymbol\n};\n\nclass NumberCoder extends Coder {\n  constructor(size, signed, localName) {\n    const name = (signed ? \"int\" : \"uint\") + size * 8;\n    super(name, name, localName, false);\n    this.size = size;\n    this.signed = signed;\n  }\n\n  defaultValue() {\n    return 0;\n  }\n\n  encode(writer, value) {\n    let v = BigNumber.from(value); // Check bounds are safe for encoding\n\n    let maxUintValue = MaxUint256.mask(writer.wordSize * 8);\n\n    if (this.signed) {\n      let bounds = maxUintValue.mask(this.size * 8 - 1);\n\n      if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne$1))) {\n        this._throwError(\"value out-of-bounds\", value);\n      }\n    } else if (v.lt(Zero$1) || v.gt(maxUintValue.mask(this.size * 8))) {\n      this._throwError(\"value out-of-bounds\", value);\n    }\n\n    v = v.toTwos(this.size * 8).mask(this.size * 8);\n\n    if (this.signed) {\n      v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n    }\n\n    return writer.writeValue(v);\n  }\n\n  decode(reader) {\n    let value = reader.readValue().mask(this.size * 8);\n\n    if (this.signed) {\n      value = value.fromTwos(this.size * 8);\n    }\n\n    return reader.coerce(this.name, value);\n  }\n\n}\n\nconst version$7 = \"strings/5.4.0\";\nconst logger$9 = new Logger(version$7); ///////////////////////////////\n\nvar UnicodeNormalizationForm;\n\n(function (UnicodeNormalizationForm) {\n  UnicodeNormalizationForm[\"current\"] = \"\";\n  UnicodeNormalizationForm[\"NFC\"] = \"NFC\";\n  UnicodeNormalizationForm[\"NFD\"] = \"NFD\";\n  UnicodeNormalizationForm[\"NFKC\"] = \"NFKC\";\n  UnicodeNormalizationForm[\"NFKD\"] = \"NFKD\";\n})(UnicodeNormalizationForm || (UnicodeNormalizationForm = {}));\n\nvar Utf8ErrorReason;\n\n(function (Utf8ErrorReason) {\n  // A continuation byte was present where there was nothing to continue\n  // - offset = the index the codepoint began in\n  Utf8ErrorReason[\"UNEXPECTED_CONTINUE\"] = \"unexpected continuation byte\"; // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n  // - offset = the index the codepoint began in\n\n  Utf8ErrorReason[\"BAD_PREFIX\"] = \"bad codepoint prefix\"; // The string is too short to process the expected codepoint\n  // - offset = the index the codepoint began in\n\n  Utf8ErrorReason[\"OVERRUN\"] = \"string overrun\"; // A missing continuation byte was expected but not found\n  // - offset = the index the continuation byte was expected at\n\n  Utf8ErrorReason[\"MISSING_CONTINUE\"] = \"missing continuation byte\"; // The computed code point is outside the range for UTF-8\n  // - offset       = start of this codepoint\n  // - badCodepoint = the computed codepoint; outside the UTF-8 range\n\n  Utf8ErrorReason[\"OUT_OF_RANGE\"] = \"out of UTF-8 range\"; // UTF-8 strings may not contain UTF-16 surrogate pairs\n  // - offset       = start of this codepoint\n  // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n\n  Utf8ErrorReason[\"UTF16_SURROGATE\"] = \"UTF-16 surrogate\"; // The string is an overlong reperesentation\n  // - offset       = start of this codepoint\n  // - badCodepoint = the computed codepoint; already bounds checked\n\n  Utf8ErrorReason[\"OVERLONG\"] = \"overlong representation\";\n})(Utf8ErrorReason || (Utf8ErrorReason = {}));\n\nfunction errorFunc(reason, offset, bytes, output, badCodepoint) {\n  return logger$9.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason, offset, bytes, output, badCodepoint) {\n  // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n  if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n    let i = 0;\n\n    for (let o = offset + 1; o < bytes.length; o++) {\n      if (bytes[o] >> 6 !== 0x02) {\n        break;\n      }\n\n      i++;\n    }\n\n    return i;\n  } // This byte runs us past the end of the string, so just jump to the end\n  // (but the first byte was read already read and therefore skipped)\n\n\n  if (reason === Utf8ErrorReason.OVERRUN) {\n    return bytes.length - offset - 1;\n  } // Nothing to skip\n\n\n  return 0;\n}\n\nfunction replaceFunc(reason, offset, bytes, output, badCodepoint) {\n  // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n  if (reason === Utf8ErrorReason.OVERLONG) {\n    output.push(badCodepoint);\n    return 0;\n  } // Put the replacement character into the output\n\n\n  output.push(0xfffd); // Otherwise, process as if ignoring errors\n\n  return ignoreFunc(reason, offset, bytes);\n} // Common error handing strategies\n\n\nconst Utf8ErrorFuncs = Object.freeze({\n  error: errorFunc,\n  ignore: ignoreFunc,\n  replace: replaceFunc\n}); // http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\n\nfunction getUtf8CodePoints(bytes, onError) {\n  if (onError == null) {\n    onError = Utf8ErrorFuncs.error;\n  }\n\n  bytes = arrayify(bytes);\n  const result = [];\n  let i = 0; // Invalid bytes are ignored\n\n  while (i < bytes.length) {\n    const c = bytes[i++]; // 0xxx xxxx\n\n    if (c >> 7 === 0) {\n      result.push(c);\n      continue;\n    } // Multibyte; how many bytes left for this character?\n\n\n    let extraLength = null;\n    let overlongMask = null; // 110x xxxx 10xx xxxx\n\n    if ((c & 0xe0) === 0xc0) {\n      extraLength = 1;\n      overlongMask = 0x7f; // 1110 xxxx 10xx xxxx 10xx xxxx\n    } else if ((c & 0xf0) === 0xe0) {\n      extraLength = 2;\n      overlongMask = 0x7ff; // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n    } else if ((c & 0xf8) === 0xf0) {\n      extraLength = 3;\n      overlongMask = 0xffff;\n    } else {\n      if ((c & 0xc0) === 0x80) {\n        i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n      } else {\n        i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n      }\n\n      continue;\n    } // Do we have enough bytes in our data?\n\n\n    if (i - 1 + extraLength >= bytes.length) {\n      i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n      continue;\n    } // Remove the length prefix from the char\n\n\n    let res = c & (1 << 8 - extraLength - 1) - 1;\n\n    for (let j = 0; j < extraLength; j++) {\n      let nextChar = bytes[i]; // Invalid continuation byte\n\n      if ((nextChar & 0xc0) != 0x80) {\n        i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n        res = null;\n        break;\n      }\n\n      res = res << 6 | nextChar & 0x3f;\n      i++;\n    } // See above loop for invalid contimuation byte\n\n\n    if (res === null) {\n      continue;\n    } // Maximum code point\n\n\n    if (res > 0x10ffff) {\n      i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n      continue;\n    } // Reserved for UTF-16 surrogate halves\n\n\n    if (res >= 0xd800 && res <= 0xdfff) {\n      i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n      continue;\n    } // Check for overlong sequences (more bytes than needed)\n\n\n    if (res <= overlongMask) {\n      i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n      continue;\n    }\n\n    result.push(res);\n  }\n\n  return result;\n} // http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n\n\nfunction toUtf8Bytes(str, form = UnicodeNormalizationForm.current) {\n  if (form != UnicodeNormalizationForm.current) {\n    logger$9.checkNormalize();\n    str = str.normalize(form);\n  }\n\n  let result = [];\n\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n\n    if (c < 0x80) {\n      result.push(c);\n    } else if (c < 0x800) {\n      result.push(c >> 6 | 0xc0);\n      result.push(c & 0x3f | 0x80);\n    } else if ((c & 0xfc00) == 0xd800) {\n      i++;\n      const c2 = str.charCodeAt(i);\n\n      if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n        throw new Error(\"invalid utf-8 string\");\n      } // Surrogate Pair\n\n\n      const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n      result.push(pair >> 18 | 0xf0);\n      result.push(pair >> 12 & 0x3f | 0x80);\n      result.push(pair >> 6 & 0x3f | 0x80);\n      result.push(pair & 0x3f | 0x80);\n    } else {\n      result.push(c >> 12 | 0xe0);\n      result.push(c >> 6 & 0x3f | 0x80);\n      result.push(c & 0x3f | 0x80);\n    }\n  }\n\n  return arrayify(result);\n}\n\nfunction escapeChar(value) {\n  const hex = \"0000\" + value.toString(16);\n  return \"\\\\u\" + hex.substring(hex.length - 4);\n}\n\nfunction _toEscapedUtf8String(bytes, onError) {\n  return '\"' + getUtf8CodePoints(bytes, onError).map(codePoint => {\n    if (codePoint < 256) {\n      switch (codePoint) {\n        case 8:\n          return \"\\\\b\";\n\n        case 9:\n          return \"\\\\t\";\n\n        case 10:\n          return \"\\\\n\";\n\n        case 13:\n          return \"\\\\r\";\n\n        case 34:\n          return \"\\\\\\\"\";\n\n        case 92:\n          return \"\\\\\\\\\";\n      }\n\n      if (codePoint >= 32 && codePoint < 127) {\n        return String.fromCharCode(codePoint);\n      }\n    }\n\n    if (codePoint <= 0xffff) {\n      return escapeChar(codePoint);\n    }\n\n    codePoint -= 0x10000;\n    return escapeChar((codePoint >> 10 & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n  }).join(\"\") + '\"';\n}\n\nfunction _toUtf8String(codePoints) {\n  return codePoints.map(codePoint => {\n    if (codePoint <= 0xffff) {\n      return String.fromCharCode(codePoint);\n    }\n\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10 & 0x3ff) + 0xd800, (codePoint & 0x3ff) + 0xdc00);\n  }).join(\"\");\n}\n\nfunction toUtf8String(bytes, onError) {\n  return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\nfunction toUtf8CodePoints(str, form = UnicodeNormalizationForm.current) {\n  return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n\nfunction formatBytes32String(text) {\n  // Get the bytes\n  const bytes = toUtf8Bytes(text); // Check we have room for null-termination\n\n  if (bytes.length > 31) {\n    throw new Error(\"bytes32 string must be less than 32 bytes\");\n  } // Zero-pad (implicitly null-terminates)\n\n\n  return hexlify(concat([bytes, HashZero]).slice(0, 32));\n}\n\nfunction parseBytes32String(bytes) {\n  const data = arrayify(bytes); // Must be 32 bytes with a null-termination\n\n  if (data.length !== 32) {\n    throw new Error(\"invalid bytes32 - not 32 bytes long\");\n  }\n\n  if (data[31] !== 0) {\n    throw new Error(\"invalid bytes32 string - no null terminator\");\n  } // Find the null termination\n\n\n  let length = 31;\n\n  while (data[length - 1] === 0) {\n    length--;\n  } // Determine the string value\n\n\n  return toUtf8String(data.slice(0, length));\n}\n\nfunction bytes2(data) {\n  if (data.length % 4 !== 0) {\n    throw new Error(\"bad data\");\n  }\n\n  let result = [];\n\n  for (let i = 0; i < data.length; i += 4) {\n    result.push(parseInt(data.substring(i, i + 4), 16));\n  }\n\n  return result;\n}\n\nfunction createTable(data, func) {\n  if (!func) {\n    func = function (value) {\n      return [parseInt(value, 16)];\n    };\n  }\n\n  let lo = 0;\n  let result = {};\n  data.split(\",\").forEach(pair => {\n    let comps = pair.split(\":\");\n    lo += parseInt(comps[0], 16);\n    result[lo] = func(comps[1]);\n  });\n  return result;\n}\n\nfunction createRangeTable(data) {\n  let hi = 0;\n  return data.split(\",\").map(v => {\n    let comps = v.split(\"-\");\n\n    if (comps.length === 1) {\n      comps[1] = \"0\";\n    } else if (comps[1] === \"\") {\n      comps[1] = \"1\";\n    }\n\n    let lo = hi + parseInt(comps[0], 16);\n    hi = parseInt(comps[1], 16);\n    return {\n      l: lo,\n      h: hi\n    };\n  });\n}\n\nfunction matchMap(value, ranges) {\n  let lo = 0;\n\n  for (let i = 0; i < ranges.length; i++) {\n    let range = ranges[i];\n    lo += range.l;\n\n    if (value >= lo && value <= lo + range.h && (value - lo) % (range.d || 1) === 0) {\n      if (range.e && range.e.indexOf(value - lo) !== -1) {\n        continue;\n      }\n\n      return range;\n    }\n  }\n\n  return null;\n}\n\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\"); // @TODO: Make this relative...\n\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map(v => parseInt(v, 16));\nconst Table_B_2_ranges = [{\n  h: 25,\n  s: 32,\n  l: 65\n}, {\n  h: 30,\n  s: 32,\n  e: [23],\n  l: 127\n}, {\n  h: 54,\n  s: 1,\n  e: [48],\n  l: 64,\n  d: 2\n}, {\n  h: 14,\n  s: 1,\n  l: 57,\n  d: 2\n}, {\n  h: 44,\n  s: 1,\n  l: 17,\n  d: 2\n}, {\n  h: 10,\n  s: 1,\n  e: [2, 6, 8],\n  l: 61,\n  d: 2\n}, {\n  h: 16,\n  s: 1,\n  l: 68,\n  d: 2\n}, {\n  h: 84,\n  s: 1,\n  e: [18, 24, 66],\n  l: 19,\n  d: 2\n}, {\n  h: 26,\n  s: 32,\n  e: [17],\n  l: 435\n}, {\n  h: 22,\n  s: 1,\n  l: 71,\n  d: 2\n}, {\n  h: 15,\n  s: 80,\n  l: 40\n}, {\n  h: 31,\n  s: 32,\n  l: 16\n}, {\n  h: 32,\n  s: 1,\n  l: 80,\n  d: 2\n}, {\n  h: 52,\n  s: 1,\n  l: 42,\n  d: 2\n}, {\n  h: 12,\n  s: 1,\n  l: 55,\n  d: 2\n}, {\n  h: 40,\n  s: 1,\n  e: [38],\n  l: 15,\n  d: 2\n}, {\n  h: 14,\n  s: 1,\n  l: 48,\n  d: 2\n}, {\n  h: 37,\n  s: 48,\n  l: 49\n}, {\n  h: 148,\n  s: 1,\n  l: 6351,\n  d: 2\n}, {\n  h: 88,\n  s: 1,\n  l: 160,\n  d: 2\n}, {\n  h: 15,\n  s: 16,\n  l: 704\n}, {\n  h: 25,\n  s: 26,\n  l: 854\n}, {\n  h: 25,\n  s: 32,\n  l: 55915\n}, {\n  h: 37,\n  s: 40,\n  l: 1247\n}, {\n  h: 25,\n  s: -119711,\n  l: 53248\n}, {\n  h: 25,\n  s: -119763,\n  l: 52\n}, {\n  h: 25,\n  s: -119815,\n  l: 52\n}, {\n  h: 25,\n  s: -119867,\n  e: [1, 4, 5, 7, 8, 11, 12, 17],\n  l: 52\n}, {\n  h: 25,\n  s: -119919,\n  l: 52\n}, {\n  h: 24,\n  s: -119971,\n  e: [2, 7, 8, 17],\n  l: 52\n}, {\n  h: 24,\n  s: -120023,\n  e: [2, 7, 13, 15, 16, 17],\n  l: 52\n}, {\n  h: 25,\n  s: -120075,\n  l: 52\n}, {\n  h: 25,\n  s: -120127,\n  l: 52\n}, {\n  h: 25,\n  s: -120179,\n  l: 52\n}, {\n  h: 25,\n  s: -120231,\n  l: 52\n}, {\n  h: 25,\n  s: -120283,\n  l: 52\n}, {\n  h: 25,\n  s: -120335,\n  l: 52\n}, {\n  h: 24,\n  s: -119543,\n  e: [17],\n  l: 56\n}, {\n  h: 24,\n  s: -119601,\n  e: [17],\n  l: 58\n}, {\n  h: 24,\n  s: -119659,\n  e: [17],\n  l: 58\n}, {\n  h: 24,\n  s: -119717,\n  e: [17],\n  l: 58\n}, {\n  h: 24,\n  s: -119775,\n  e: [17],\n  l: 58\n}];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\n\nfunction flatten(values) {\n  return values.reduce((accum, value) => {\n    value.forEach(value => {\n      accum.push(value);\n    });\n    return accum;\n  }, []);\n}\n\nfunction _nameprepTableA1(codepoint) {\n  return !!matchMap(codepoint, Table_A_1_ranges);\n}\n\nfunction _nameprepTableB2(codepoint) {\n  let range = matchMap(codepoint, Table_B_2_ranges);\n\n  if (range) {\n    return [codepoint + range.s];\n  }\n\n  let codes = Table_B_2_lut_abs[codepoint];\n\n  if (codes) {\n    return codes;\n  }\n\n  let shift = Table_B_2_lut_rel[codepoint];\n\n  if (shift) {\n    return [codepoint + shift[0]];\n  }\n\n  let complex = Table_B_2_complex[codepoint];\n\n  if (complex) {\n    return complex;\n  }\n\n  return null;\n}\n\nfunction _nameprepTableC(codepoint) {\n  return !!matchMap(codepoint, Table_C_ranges);\n}\n\nfunction nameprep(value) {\n  // This allows platforms with incomplete normalize to bypass\n  // it for very basic names which the built-in toLowerCase\n  // will certainly handle correctly\n  if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {\n    return value.toLowerCase();\n  } // Get the code points (keeping the current normalization)\n\n\n  let codes = toUtf8CodePoints(value);\n  codes = flatten(codes.map(code => {\n    // Substitute Table B.1 (Maps to Nothing)\n    if (Table_B_1_flags.indexOf(code) >= 0) {\n      return [];\n    }\n\n    if (code >= 0xfe00 && code <= 0xfe0f) {\n      return [];\n    } // Substitute Table B.2 (Case Folding)\n\n\n    let codesTableB2 = _nameprepTableB2(code);\n\n    if (codesTableB2) {\n      return codesTableB2;\n    } // No Substitution\n\n\n    return [code];\n  })); // Normalize using form KC\n\n  codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC); // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n\n  codes.forEach(code => {\n    if (_nameprepTableC(code)) {\n      throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n    }\n  }); // Prohibit Unassigned Code Points (Table A.1)\n\n  codes.forEach(code => {\n    if (_nameprepTableA1(code)) {\n      throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n    }\n  }); // IDNA extras\n\n  let name = _toUtf8String(codes); // IDNA: 4.2.3.1\n\n\n  if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n    throw new Error(\"invalid hyphen\");\n  } // IDNA: 4.2.4\n\n\n  if (name.length > 63) {\n    throw new Error(\"too long\");\n  }\n\n  return name;\n}\n\nclass StringCoder extends DynamicBytesCoder {\n  constructor(localName) {\n    super(\"string\", localName);\n  }\n\n  defaultValue() {\n    return \"\";\n  }\n\n  encode(writer, value) {\n    return super.encode(writer, toUtf8Bytes(value));\n  }\n\n  decode(reader) {\n    return toUtf8String(super.decode(reader));\n  }\n\n}\n\nclass TupleCoder extends Coder {\n  constructor(coders, localName) {\n    let dynamic = false;\n    const types = [];\n    coders.forEach(coder => {\n      if (coder.dynamic) {\n        dynamic = true;\n      }\n\n      types.push(coder.type);\n    });\n    const type = \"tuple(\" + types.join(\",\") + \")\";\n    super(\"tuple\", type, localName, dynamic);\n    this.coders = coders;\n  }\n\n  defaultValue() {\n    const values = [];\n    this.coders.forEach(coder => {\n      values.push(coder.defaultValue());\n    }); // We only output named properties for uniquely named coders\n\n    const uniqueNames = this.coders.reduce((accum, coder) => {\n      const name = coder.localName;\n\n      if (name) {\n        if (!accum[name]) {\n          accum[name] = 0;\n        }\n\n        accum[name]++;\n      }\n\n      return accum;\n    }, {}); // Add named values\n\n    this.coders.forEach((coder, index) => {\n      let name = coder.localName;\n\n      if (!name || uniqueNames[name] !== 1) {\n        return;\n      }\n\n      if (name === \"length\") {\n        name = \"_length\";\n      }\n\n      if (values[name] != null) {\n        return;\n      }\n\n      values[name] = values[index];\n    });\n    return Object.freeze(values);\n  }\n\n  encode(writer, value) {\n    return pack(writer, this.coders, value);\n  }\n\n  decode(reader) {\n    return reader.coerce(this.name, unpack(reader, this.coders));\n  }\n\n}\n\nconst logger$a = new Logger(version$4);\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\n\nclass AbiCoder {\n  constructor(coerceFunc) {\n    logger$a.checkNew(new.target, AbiCoder);\n    defineReadOnly(this, \"coerceFunc\", coerceFunc || null);\n  }\n\n  _getCoder(param) {\n    switch (param.baseType) {\n      case \"address\":\n        return new AddressCoder(param.name);\n\n      case \"bool\":\n        return new BooleanCoder(param.name);\n\n      case \"string\":\n        return new StringCoder(param.name);\n\n      case \"bytes\":\n        return new BytesCoder(param.name);\n\n      case \"array\":\n        return new ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n\n      case \"tuple\":\n        return new TupleCoder((param.components || []).map(component => {\n          return this._getCoder(component);\n        }), param.name);\n\n      case \"\":\n        return new NullCoder(param.name);\n    } // u?int[0-9]*\n\n\n    let match = param.type.match(paramTypeNumber);\n\n    if (match) {\n      let size = parseInt(match[2] || \"256\");\n\n      if (size === 0 || size > 256 || size % 8 !== 0) {\n        logger$a.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n      }\n\n      return new NumberCoder(size / 8, match[1] === \"int\", param.name);\n    } // bytes[0-9]+\n\n\n    match = param.type.match(paramTypeBytes);\n\n    if (match) {\n      let size = parseInt(match[1]);\n\n      if (size === 0 || size > 32) {\n        logger$a.throwArgumentError(\"invalid bytes length\", \"param\", param);\n      }\n\n      return new FixedBytesCoder(size, param.name);\n    }\n\n    return logger$a.throwArgumentError(\"invalid type\", \"type\", param.type);\n  }\n\n  _getWordSize() {\n    return 32;\n  }\n\n  _getReader(data, allowLoose) {\n    return new Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n  }\n\n  _getWriter() {\n    return new Writer(this._getWordSize());\n  }\n\n  getDefaultValue(types) {\n    const coders = types.map(type => this._getCoder(ParamType.from(type)));\n    const coder = new TupleCoder(coders, \"_\");\n    return coder.defaultValue();\n  }\n\n  encode(types, values) {\n    if (types.length !== values.length) {\n      logger$a.throwError(\"types/values length mismatch\", Logger.errors.INVALID_ARGUMENT, {\n        count: {\n          types: types.length,\n          values: values.length\n        },\n        value: {\n          types: types,\n          values: values\n        }\n      });\n    }\n\n    const coders = types.map(type => this._getCoder(ParamType.from(type)));\n    const coder = new TupleCoder(coders, \"_\");\n\n    const writer = this._getWriter();\n\n    coder.encode(writer, values);\n    return writer.data;\n  }\n\n  decode(types, data, loose) {\n    const coders = types.map(type => this._getCoder(ParamType.from(type)));\n    const coder = new TupleCoder(coders, \"_\");\n    return coder.decode(this._getReader(arrayify(data), loose));\n  }\n\n}\n\nconst defaultAbiCoder = new AbiCoder();\n\nfunction id(text) {\n  return keccak256(toUtf8Bytes(text));\n}\n\nconst version$8 = \"hash/5.4.0\";\nconst logger$b = new Logger(version$8);\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\nconst Partition = new RegExp(\"^((.*)\\\\.)?([^.]+)$\");\n\nfunction isValidName(name) {\n  try {\n    const comps = name.split(\".\");\n\n    for (let i = 0; i < comps.length; i++) {\n      if (nameprep(comps[i]).length === 0) {\n        throw new Error(\"empty\");\n      }\n    }\n\n    return true;\n  } catch (error) {}\n\n  return false;\n}\n\nfunction namehash(name) {\n  /* istanbul ignore if */\n  if (typeof name !== \"string\") {\n    logger$b.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n  }\n\n  let current = name;\n  let result = Zeros;\n\n  while (current.length) {\n    const partition = current.match(Partition);\n\n    if (partition == null || partition[2] === \"\") {\n      logger$b.throwArgumentError(\"invalid ENS address; missing component\", \"name\", name);\n    }\n\n    const label = toUtf8Bytes(nameprep(partition[3]));\n    result = keccak256(concat([result, keccak256(label)]));\n    current = partition[2] || \"\";\n  }\n\n  return hexlify(result);\n}\n\nconst messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\n\nfunction hashMessage(message) {\n  if (typeof message === \"string\") {\n    message = toUtf8Bytes(message);\n  }\n\n  return keccak256(concat([toUtf8Bytes(messagePrefix), toUtf8Bytes(String(message.length)), message]));\n}\n\nvar __awaiter$1 = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$c = new Logger(version$8);\nconst padding = new Uint8Array(32);\npadding.fill(0);\nconst NegativeOne$2 = BigNumber.from(-1);\nconst Zero$2 = BigNumber.from(0);\nconst One$1 = BigNumber.from(1);\nconst MaxUint256$1 = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\nfunction hexPadRight(value) {\n  const bytes = arrayify(value);\n  const padOffset = bytes.length % 32;\n\n  if (padOffset) {\n    return hexConcat([bytes, padding.slice(padOffset)]);\n  }\n\n  return hexlify(bytes);\n}\n\nconst hexTrue = hexZeroPad(One$1.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero$2.toHexString(), 32);\nconst domainFieldTypes = {\n  name: \"string\",\n  version: \"string\",\n  chainId: \"uint256\",\n  verifyingContract: \"address\",\n  salt: \"bytes32\"\n};\nconst domainFieldNames = [\"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"];\n\nfunction checkString(key) {\n  return function (value) {\n    if (typeof value !== \"string\") {\n      logger$c.throwArgumentError(`invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);\n    }\n\n    return value;\n  };\n}\n\nconst domainChecks = {\n  name: checkString(\"name\"),\n  version: checkString(\"version\"),\n  chainId: function (value) {\n    try {\n      return BigNumber.from(value).toString();\n    } catch (error) {}\n\n    return logger$c.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n  },\n  verifyingContract: function (value) {\n    try {\n      return getAddress(value).toLowerCase();\n    } catch (error) {}\n\n    return logger$c.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n  },\n  salt: function (value) {\n    try {\n      const bytes = arrayify(value);\n\n      if (bytes.length !== 32) {\n        throw new Error(\"bad length\");\n      }\n\n      return hexlify(bytes);\n    } catch (error) {}\n\n    return logger$c.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n  }\n};\n\nfunction getBaseEncoder(type) {\n  // intXX and uintXX\n  {\n    const match = type.match(/^(u?)int(\\d*)$/);\n\n    if (match) {\n      const signed = match[1] === \"\";\n      const width = parseInt(match[2] || \"256\");\n\n      if (width % 8 !== 0 || width > 256 || match[2] && match[2] !== String(width)) {\n        logger$c.throwArgumentError(\"invalid numeric width\", \"type\", type);\n      }\n\n      const boundsUpper = MaxUint256$1.mask(signed ? width - 1 : width);\n      const boundsLower = signed ? boundsUpper.add(One$1).mul(NegativeOne$2) : Zero$2;\n      return function (value) {\n        const v = BigNumber.from(value);\n\n        if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n          logger$c.throwArgumentError(`value out-of-bounds for ${type}`, \"value\", value);\n        }\n\n        return hexZeroPad(v.toTwos(256).toHexString(), 32);\n      };\n    }\n  } // bytesXX\n\n  {\n    const match = type.match(/^bytes(\\d+)$/);\n\n    if (match) {\n      const width = parseInt(match[1]);\n\n      if (width === 0 || width > 32 || match[1] !== String(width)) {\n        logger$c.throwArgumentError(\"invalid bytes width\", \"type\", type);\n      }\n\n      return function (value) {\n        const bytes = arrayify(value);\n\n        if (bytes.length !== width) {\n          logger$c.throwArgumentError(`invalid length for ${type}`, \"value\", value);\n        }\n\n        return hexPadRight(value);\n      };\n    }\n  }\n\n  switch (type) {\n    case \"address\":\n      return function (value) {\n        return hexZeroPad(getAddress(value), 32);\n      };\n\n    case \"bool\":\n      return function (value) {\n        return !value ? hexFalse : hexTrue;\n      };\n\n    case \"bytes\":\n      return function (value) {\n        return keccak256(value);\n      };\n\n    case \"string\":\n      return function (value) {\n        return id(value);\n      };\n  }\n\n  return null;\n}\n\nfunction encodeType(name, fields) {\n  return `${name}(${fields.map(({\n    name,\n    type\n  }) => type + \" \" + name).join(\",\")})`;\n}\n\nclass TypedDataEncoder {\n  constructor(types) {\n    defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n    defineReadOnly(this, \"_encoderCache\", {});\n    defineReadOnly(this, \"_types\", {}); // Link struct types to their direct child structs\n\n    const links = {}; // Link structs to structs which contain them as a child\n\n    const parents = {}; // Link all subtypes within a given struct\n\n    const subtypes = {};\n    Object.keys(types).forEach(type => {\n      links[type] = {};\n      parents[type] = [];\n      subtypes[type] = {};\n    });\n\n    for (const name in types) {\n      const uniqueNames = {};\n      types[name].forEach(field => {\n        // Check each field has a unique name\n        if (uniqueNames[field.name]) {\n          logger$c.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, \"types\", types);\n        }\n\n        uniqueNames[field.name] = true; // Get the base type (drop any array specifiers)\n\n        const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n\n        if (baseType === name) {\n          logger$c.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`, \"types\", types);\n        } // Is this a base encoding type?\n\n\n        const encoder = getBaseEncoder(baseType);\n\n        if (encoder) {\n          return;\n        }\n\n        if (!parents[baseType]) {\n          logger$c.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`, \"types\", types);\n        } // Add linkage\n\n\n        parents[baseType].push(name);\n        links[name][baseType] = true;\n      });\n    } // Deduce the primary type\n\n\n    const primaryTypes = Object.keys(parents).filter(n => parents[n].length === 0);\n\n    if (primaryTypes.length === 0) {\n      logger$c.throwArgumentError(\"missing primary type\", \"types\", types);\n    } else if (primaryTypes.length > 1) {\n      logger$c.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map(t => JSON.stringify(t)).join(\", \")}`, \"types\", types);\n    }\n\n    defineReadOnly(this, \"primaryType\", primaryTypes[0]); // Check for circular type references\n\n    function checkCircular(type, found) {\n      if (found[type]) {\n        logger$c.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`, \"types\", types);\n      }\n\n      found[type] = true;\n      Object.keys(links[type]).forEach(child => {\n        if (!parents[child]) {\n          return;\n        } // Recursively check children\n\n\n        checkCircular(child, found); // Mark all ancestors as having this decendant\n\n        Object.keys(found).forEach(subtype => {\n          subtypes[subtype][child] = true;\n        });\n      });\n      delete found[type];\n    }\n\n    checkCircular(this.primaryType, {}); // Compute each fully describe type\n\n    for (const name in subtypes) {\n      const st = Object.keys(subtypes[name]);\n      st.sort();\n      this._types[name] = encodeType(name, types[name]) + st.map(t => encodeType(t, types[t])).join(\"\");\n    }\n  }\n\n  getEncoder(type) {\n    let encoder = this._encoderCache[type];\n\n    if (!encoder) {\n      encoder = this._encoderCache[type] = this._getEncoder(type);\n    }\n\n    return encoder;\n  }\n\n  _getEncoder(type) {\n    // Basic encoder type (address, bool, uint256, etc)\n    {\n      const encoder = getBaseEncoder(type);\n\n      if (encoder) {\n        return encoder;\n      }\n    } // Array\n\n    const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n\n    if (match) {\n      const subtype = match[1];\n      const subEncoder = this.getEncoder(subtype);\n      const length = parseInt(match[3]);\n      return value => {\n        if (length >= 0 && value.length !== length) {\n          logger$c.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n        }\n\n        let result = value.map(subEncoder);\n\n        if (this._types[subtype]) {\n          result = result.map(keccak256);\n        }\n\n        return keccak256(hexConcat(result));\n      };\n    } // Struct\n\n\n    const fields = this.types[type];\n\n    if (fields) {\n      const encodedType = id(this._types[type]);\n      return value => {\n        const values = fields.map(({\n          name,\n          type\n        }) => {\n          const result = this.getEncoder(type)(value[name]);\n\n          if (this._types[type]) {\n            return keccak256(result);\n          }\n\n          return result;\n        });\n        values.unshift(encodedType);\n        return hexConcat(values);\n      };\n    }\n\n    return logger$c.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n  }\n\n  encodeType(name) {\n    const result = this._types[name];\n\n    if (!result) {\n      logger$c.throwArgumentError(`unknown type: ${JSON.stringify(name)}`, \"name\", name);\n    }\n\n    return result;\n  }\n\n  encodeData(type, value) {\n    return this.getEncoder(type)(value);\n  }\n\n  hashStruct(name, value) {\n    return keccak256(this.encodeData(name, value));\n  }\n\n  encode(value) {\n    return this.encodeData(this.primaryType, value);\n  }\n\n  hash(value) {\n    return this.hashStruct(this.primaryType, value);\n  }\n\n  _visit(type, value, callback) {\n    // Basic encoder type (address, bool, uint256, etc)\n    {\n      const encoder = getBaseEncoder(type);\n\n      if (encoder) {\n        return callback(type, value);\n      }\n    } // Array\n\n    const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n\n    if (match) {\n      const subtype = match[1];\n      const length = parseInt(match[3]);\n\n      if (length >= 0 && value.length !== length) {\n        logger$c.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n      }\n\n      return value.map(v => this._visit(subtype, v, callback));\n    } // Struct\n\n\n    const fields = this.types[type];\n\n    if (fields) {\n      return fields.reduce((accum, {\n        name,\n        type\n      }) => {\n        accum[name] = this._visit(type, value[name], callback);\n        return accum;\n      }, {});\n    }\n\n    return logger$c.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n  }\n\n  visit(value, callback) {\n    return this._visit(this.primaryType, value, callback);\n  }\n\n  static from(types) {\n    return new TypedDataEncoder(types);\n  }\n\n  static getPrimaryType(types) {\n    return TypedDataEncoder.from(types).primaryType;\n  }\n\n  static hashStruct(name, types, value) {\n    return TypedDataEncoder.from(types).hashStruct(name, value);\n  }\n\n  static hashDomain(domain) {\n    const domainFields = [];\n\n    for (const name in domain) {\n      const type = domainFieldTypes[name];\n\n      if (!type) {\n        logger$c.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`, \"domain\", domain);\n      }\n\n      domainFields.push({\n        name,\n        type\n      });\n    }\n\n    domainFields.sort((a, b) => {\n      return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n    });\n    return TypedDataEncoder.hashStruct(\"EIP712Domain\", {\n      EIP712Domain: domainFields\n    }, domain);\n  }\n\n  static encode(domain, types, value) {\n    return hexConcat([\"0x1901\", TypedDataEncoder.hashDomain(domain), TypedDataEncoder.from(types).hash(value)]);\n  }\n\n  static hash(domain, types, value) {\n    return keccak256(TypedDataEncoder.encode(domain, types, value));\n  } // Replaces all address types with ENS names with their looked up address\n\n\n  static resolveNames(domain, types, value, resolveName) {\n    return __awaiter$1(this, void 0, void 0, function* () {\n      // Make a copy to isolate it from the object passed in\n      domain = shallowCopy(domain); // Look up all ENS names\n\n      const ensCache = {}; // Do we need to look up the domain's verifyingContract?\n\n      if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n        ensCache[domain.verifyingContract] = \"0x\";\n      } // We are going to use the encoder to visit all the base values\n\n\n      const encoder = TypedDataEncoder.from(types); // Get a list of all the addresses\n\n      encoder.visit(value, (type, value) => {\n        if (type === \"address\" && !isHexString(value, 20)) {\n          ensCache[value] = \"0x\";\n        }\n\n        return value;\n      }); // Lookup each name\n\n      for (const name in ensCache) {\n        ensCache[name] = yield resolveName(name);\n      } // Replace the domain verifyingContract if needed\n\n\n      if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n        domain.verifyingContract = ensCache[domain.verifyingContract];\n      } // Replace all ENS names with their address\n\n\n      value = encoder.visit(value, (type, value) => {\n        if (type === \"address\" && ensCache[value]) {\n          return ensCache[value];\n        }\n\n        return value;\n      });\n      return {\n        domain,\n        value\n      };\n    });\n  }\n\n  static getPayload(domain, types, value) {\n    // Validate the domain fields\n    TypedDataEncoder.hashDomain(domain); // Derive the EIP712Domain Struct reference type\n\n    const domainValues = {};\n    const domainTypes = [];\n    domainFieldNames.forEach(name => {\n      const value = domain[name];\n\n      if (value == null) {\n        return;\n      }\n\n      domainValues[name] = domainChecks[name](value);\n      domainTypes.push({\n        name,\n        type: domainFieldTypes[name]\n      });\n    });\n    const encoder = TypedDataEncoder.from(types);\n    const typesWithDomain = shallowCopy(types);\n\n    if (typesWithDomain.EIP712Domain) {\n      logger$c.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n    } else {\n      typesWithDomain.EIP712Domain = domainTypes;\n    } // Validate the data structures and types\n\n\n    encoder.encode(value);\n    return {\n      types: typesWithDomain,\n      domain: domainValues,\n      primaryType: encoder.primaryType,\n      message: encoder.visit(value, (type, value) => {\n        // bytes\n        if (type.match(/^bytes(\\d*)/)) {\n          return hexlify(arrayify(value));\n        } // uint or int\n\n\n        if (type.match(/^u?int/)) {\n          return BigNumber.from(value).toString();\n        }\n\n        switch (type) {\n          case \"address\":\n            return value.toLowerCase();\n\n          case \"bool\":\n            return !!value;\n\n          case \"string\":\n            if (typeof value !== \"string\") {\n              logger$c.throwArgumentError(`invalid string`, \"value\", value);\n            }\n\n            return value;\n        }\n\n        return logger$c.throwArgumentError(\"unsupported type\", \"type\", type);\n      })\n    };\n  }\n\n}\n\nconst logger$d = new Logger(version$4);\n\nclass LogDescription extends Description {}\n\nclass TransactionDescription extends Description {}\n\nclass ErrorDescription extends Description {}\n\nclass Indexed extends Description {\n  static isIndexed(value) {\n    return !!(value && value._isIndexed);\n  }\n\n}\n\nconst BuiltinErrors = {\n  \"0x08c379a0\": {\n    signature: \"Error(string)\",\n    name: \"Error\",\n    inputs: [\"string\"],\n    reason: true\n  },\n  \"0x4e487b71\": {\n    signature: \"Panic(uint256)\",\n    name: \"Panic\",\n    inputs: [\"uint256\"]\n  }\n};\n\nfunction wrapAccessError(property, error) {\n  const wrap = new Error(`deferred error during ABI decoding triggered accessing ${property}`);\n  wrap.error = error;\n  return wrap;\n}\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\n\n\nclass Interface {\n  constructor(fragments) {\n    logger$d.checkNew(new.target, Interface);\n    let abi = [];\n\n    if (typeof fragments === \"string\") {\n      abi = JSON.parse(fragments);\n    } else {\n      abi = fragments;\n    }\n\n    defineReadOnly(this, \"fragments\", abi.map(fragment => {\n      return Fragment.from(fragment);\n    }).filter(fragment => fragment != null));\n    defineReadOnly(this, \"_abiCoder\", getStatic(new.target, \"getAbiCoder\")());\n    defineReadOnly(this, \"functions\", {});\n    defineReadOnly(this, \"errors\", {});\n    defineReadOnly(this, \"events\", {});\n    defineReadOnly(this, \"structs\", {}); // Add all fragments by their signature\n\n    this.fragments.forEach(fragment => {\n      let bucket = null;\n\n      switch (fragment.type) {\n        case \"constructor\":\n          if (this.deploy) {\n            logger$d.warn(\"duplicate definition - constructor\");\n            return;\n          } //checkNames(fragment, \"input\", fragment.inputs);\n\n\n          defineReadOnly(this, \"deploy\", fragment);\n          return;\n\n        case \"function\":\n          //checkNames(fragment, \"input\", fragment.inputs);\n          //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n          bucket = this.functions;\n          break;\n\n        case \"event\":\n          //checkNames(fragment, \"input\", fragment.inputs);\n          bucket = this.events;\n          break;\n\n        case \"error\":\n          bucket = this.errors;\n          break;\n\n        default:\n          return;\n      }\n\n      let signature = fragment.format();\n\n      if (bucket[signature]) {\n        logger$d.warn(\"duplicate definition - \" + signature);\n        return;\n      }\n\n      bucket[signature] = fragment;\n    }); // If we do not have a constructor add a default\n\n    if (!this.deploy) {\n      defineReadOnly(this, \"deploy\", ConstructorFragment.from({\n        payable: false,\n        type: \"constructor\"\n      }));\n    }\n\n    defineReadOnly(this, \"_isInterface\", true);\n  }\n\n  format(format) {\n    if (!format) {\n      format = FormatTypes.full;\n    }\n\n    if (format === FormatTypes.sighash) {\n      logger$d.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n    }\n\n    const abi = this.fragments.map(fragment => fragment.format(format)); // We need to re-bundle the JSON fragments a bit\n\n    if (format === FormatTypes.json) {\n      return JSON.stringify(abi.map(j => JSON.parse(j)));\n    }\n\n    return abi;\n  } // Sub-classes can override these to handle other blockchains\n\n\n  static getAbiCoder() {\n    return defaultAbiCoder;\n  }\n\n  static getAddress(address) {\n    return getAddress(address);\n  }\n\n  static getSighash(fragment) {\n    return hexDataSlice(id(fragment.format()), 0, 4);\n  }\n\n  static getEventTopic(eventFragment) {\n    return id(eventFragment.format());\n  } // Find a function definition by any means necessary (unless it is ambiguous)\n\n\n  getFunction(nameOrSignatureOrSighash) {\n    if (isHexString(nameOrSignatureOrSighash)) {\n      for (const name in this.functions) {\n        if (nameOrSignatureOrSighash === this.getSighash(name)) {\n          return this.functions[name];\n        }\n      }\n\n      logger$d.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n    } // It is a bare name, look up the function (will return null if ambiguous)\n\n\n    if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n      const name = nameOrSignatureOrSighash.trim();\n      const matching = Object.keys(this.functions).filter(f => f.split(\"(\"\n      /* fix:) */\n      )[0] === name);\n\n      if (matching.length === 0) {\n        logger$d.throwArgumentError(\"no matching function\", \"name\", name);\n      } else if (matching.length > 1) {\n        logger$d.throwArgumentError(\"multiple matching functions\", \"name\", name);\n      }\n\n      return this.functions[matching[0]];\n    } // Normlize the signature and lookup the function\n\n\n    const result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n\n    if (!result) {\n      logger$d.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n    }\n\n    return result;\n  } // Find an event definition by any means necessary (unless it is ambiguous)\n\n\n  getEvent(nameOrSignatureOrTopic) {\n    if (isHexString(nameOrSignatureOrTopic)) {\n      const topichash = nameOrSignatureOrTopic.toLowerCase();\n\n      for (const name in this.events) {\n        if (topichash === this.getEventTopic(name)) {\n          return this.events[name];\n        }\n      }\n\n      logger$d.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n    } // It is a bare name, look up the function (will return null if ambiguous)\n\n\n    if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n      const name = nameOrSignatureOrTopic.trim();\n      const matching = Object.keys(this.events).filter(f => f.split(\"(\"\n      /* fix:) */\n      )[0] === name);\n\n      if (matching.length === 0) {\n        logger$d.throwArgumentError(\"no matching event\", \"name\", name);\n      } else if (matching.length > 1) {\n        logger$d.throwArgumentError(\"multiple matching events\", \"name\", name);\n      }\n\n      return this.events[matching[0]];\n    } // Normlize the signature and lookup the function\n\n\n    const result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];\n\n    if (!result) {\n      logger$d.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n    }\n\n    return result;\n  } // Find a function definition by any means necessary (unless it is ambiguous)\n\n\n  getError(nameOrSignatureOrSighash) {\n    if (isHexString(nameOrSignatureOrSighash)) {\n      const getSighash = getStatic(this.constructor, \"getSighash\");\n\n      for (const name in this.errors) {\n        const error = this.errors[name];\n\n        if (nameOrSignatureOrSighash === getSighash(error)) {\n          return this.errors[name];\n        }\n      }\n\n      logger$d.throwArgumentError(\"no matching error\", \"sighash\", nameOrSignatureOrSighash);\n    } // It is a bare name, look up the function (will return null if ambiguous)\n\n\n    if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n      const name = nameOrSignatureOrSighash.trim();\n      const matching = Object.keys(this.errors).filter(f => f.split(\"(\"\n      /* fix:) */\n      )[0] === name);\n\n      if (matching.length === 0) {\n        logger$d.throwArgumentError(\"no matching error\", \"name\", name);\n      } else if (matching.length > 1) {\n        logger$d.throwArgumentError(\"multiple matching errors\", \"name\", name);\n      }\n\n      return this.errors[matching[0]];\n    } // Normlize the signature and lookup the function\n\n\n    const result = this.errors[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n\n    if (!result) {\n      logger$d.throwArgumentError(\"no matching error\", \"signature\", nameOrSignatureOrSighash);\n    }\n\n    return result;\n  } // Get the sighash (the bytes4 selector) used by Solidity to identify a function\n\n\n  getSighash(fragment) {\n    if (typeof fragment === \"string\") {\n      try {\n        fragment = this.getFunction(fragment);\n      } catch (error) {\n        try {\n          fragment = this.getError(fragment);\n        } catch (_) {\n          throw error;\n        }\n      }\n    }\n\n    return getStatic(this.constructor, \"getSighash\")(fragment);\n  } // Get the topic (the bytes32 hash) used by Solidity to identify an event\n\n\n  getEventTopic(eventFragment) {\n    if (typeof eventFragment === \"string\") {\n      eventFragment = this.getEvent(eventFragment);\n    }\n\n    return getStatic(this.constructor, \"getEventTopic\")(eventFragment);\n  }\n\n  _decodeParams(params, data) {\n    return this._abiCoder.decode(params, data);\n  }\n\n  _encodeParams(params, values) {\n    return this._abiCoder.encode(params, values);\n  }\n\n  encodeDeploy(values) {\n    return this._encodeParams(this.deploy.inputs, values || []);\n  }\n\n  decodeErrorResult(fragment, data) {\n    if (typeof fragment === \"string\") {\n      fragment = this.getError(fragment);\n    }\n\n    const bytes = arrayify(data);\n\n    if (hexlify(bytes.slice(0, 4)) !== this.getSighash(fragment)) {\n      logger$d.throwArgumentError(`data signature does not match error ${fragment.name}.`, \"data\", hexlify(bytes));\n    }\n\n    return this._decodeParams(fragment.inputs, bytes.slice(4));\n  }\n\n  encodeErrorResult(fragment, values) {\n    if (typeof fragment === \"string\") {\n      fragment = this.getError(fragment);\n    }\n\n    return hexlify(concat([this.getSighash(fragment), this._encodeParams(fragment.inputs, values || [])]));\n  } // Decode the data for a function call (e.g. tx.data)\n\n\n  decodeFunctionData(functionFragment, data) {\n    if (typeof functionFragment === \"string\") {\n      functionFragment = this.getFunction(functionFragment);\n    }\n\n    const bytes = arrayify(data);\n\n    if (hexlify(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n      logger$d.throwArgumentError(`data signature does not match function ${functionFragment.name}.`, \"data\", hexlify(bytes));\n    }\n\n    return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n  } // Encode the data for a function call (e.g. tx.data)\n\n\n  encodeFunctionData(functionFragment, values) {\n    if (typeof functionFragment === \"string\") {\n      functionFragment = this.getFunction(functionFragment);\n    }\n\n    return hexlify(concat([this.getSighash(functionFragment), this._encodeParams(functionFragment.inputs, values || [])]));\n  } // Decode the result from a function call (e.g. from eth_call)\n\n\n  decodeFunctionResult(functionFragment, data) {\n    if (typeof functionFragment === \"string\") {\n      functionFragment = this.getFunction(functionFragment);\n    }\n\n    let bytes = arrayify(data);\n    let reason = null;\n    let errorArgs = null;\n    let errorName = null;\n    let errorSignature = null;\n\n    switch (bytes.length % this._abiCoder._getWordSize()) {\n      case 0:\n        try {\n          return this._abiCoder.decode(functionFragment.outputs, bytes);\n        } catch (error) {}\n\n        break;\n\n      case 4:\n        {\n          const selector = hexlify(bytes.slice(0, 4));\n          const builtin = BuiltinErrors[selector];\n\n          if (builtin) {\n            errorArgs = this._abiCoder.decode(builtin.inputs, bytes.slice(4));\n            errorName = builtin.name;\n            errorSignature = builtin.signature;\n\n            if (builtin.reason) {\n              reason = errorArgs[0];\n            }\n          } else {\n            try {\n              const error = this.getError(selector);\n              errorArgs = this._abiCoder.decode(error.inputs, bytes.slice(4));\n              errorName = error.name;\n              errorSignature = error.format();\n            } catch (error) {\n              console.log(error);\n            }\n          }\n\n          break;\n        }\n    }\n\n    return logger$d.throwError(\"call revert exception\", Logger.errors.CALL_EXCEPTION, {\n      method: functionFragment.format(),\n      errorArgs,\n      errorName,\n      errorSignature,\n      reason\n    });\n  } // Encode the result for a function call (e.g. for eth_call)\n\n\n  encodeFunctionResult(functionFragment, values) {\n    if (typeof functionFragment === \"string\") {\n      functionFragment = this.getFunction(functionFragment);\n    }\n\n    return hexlify(this._abiCoder.encode(functionFragment.outputs, values || []));\n  } // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n\n\n  encodeFilterTopics(eventFragment, values) {\n    if (typeof eventFragment === \"string\") {\n      eventFragment = this.getEvent(eventFragment);\n    }\n\n    if (values.length > eventFragment.inputs.length) {\n      logger$d.throwError(\"too many arguments for \" + eventFragment.format(), Logger.errors.UNEXPECTED_ARGUMENT, {\n        argument: \"values\",\n        value: values\n      });\n    }\n\n    let topics = [];\n\n    if (!eventFragment.anonymous) {\n      topics.push(this.getEventTopic(eventFragment));\n    }\n\n    const encodeTopic = (param, value) => {\n      if (param.type === \"string\") {\n        return id(value);\n      } else if (param.type === \"bytes\") {\n        return keccak256(hexlify(value));\n      } // Check addresses are valid\n\n\n      if (param.type === \"address\") {\n        this._abiCoder.encode([\"address\"], [value]);\n      }\n\n      return hexZeroPad(hexlify(value), 32);\n    };\n\n    values.forEach((value, index) => {\n      let param = eventFragment.inputs[index];\n\n      if (!param.indexed) {\n        if (value != null) {\n          logger$d.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", \"contract.\" + param.name, value);\n        }\n\n        return;\n      }\n\n      if (value == null) {\n        topics.push(null);\n      } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n        logger$d.throwArgumentError(\"filtering with tuples or arrays not supported\", \"contract.\" + param.name, value);\n      } else if (Array.isArray(value)) {\n        topics.push(value.map(value => encodeTopic(param, value)));\n      } else {\n        topics.push(encodeTopic(param, value));\n      }\n    }); // Trim off trailing nulls\n\n    while (topics.length && topics[topics.length - 1] === null) {\n      topics.pop();\n    }\n\n    return topics;\n  }\n\n  encodeEventLog(eventFragment, values) {\n    if (typeof eventFragment === \"string\") {\n      eventFragment = this.getEvent(eventFragment);\n    }\n\n    const topics = [];\n    const dataTypes = [];\n    const dataValues = [];\n\n    if (!eventFragment.anonymous) {\n      topics.push(this.getEventTopic(eventFragment));\n    }\n\n    if (values.length !== eventFragment.inputs.length) {\n      logger$d.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n    }\n\n    eventFragment.inputs.forEach((param, index) => {\n      const value = values[index];\n\n      if (param.indexed) {\n        if (param.type === \"string\") {\n          topics.push(id(value));\n        } else if (param.type === \"bytes\") {\n          topics.push(keccak256(value));\n        } else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n          // @TOOD\n          throw new Error(\"not implemented\");\n        } else {\n          topics.push(this._abiCoder.encode([param.type], [value]));\n        }\n      } else {\n        dataTypes.push(param);\n        dataValues.push(value);\n      }\n    });\n    return {\n      data: this._abiCoder.encode(dataTypes, dataValues),\n      topics: topics\n    };\n  } // Decode a filter for the event and the search criteria\n\n\n  decodeEventLog(eventFragment, data, topics) {\n    if (typeof eventFragment === \"string\") {\n      eventFragment = this.getEvent(eventFragment);\n    }\n\n    if (topics != null && !eventFragment.anonymous) {\n      let topicHash = this.getEventTopic(eventFragment);\n\n      if (!isHexString(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n        logger$d.throwError(\"fragment/topic mismatch\", Logger.errors.INVALID_ARGUMENT, {\n          argument: \"topics[0]\",\n          expected: topicHash,\n          value: topics[0]\n        });\n      }\n\n      topics = topics.slice(1);\n    }\n\n    let indexed = [];\n    let nonIndexed = [];\n    let dynamic = [];\n    eventFragment.inputs.forEach((param, index) => {\n      if (param.indexed) {\n        if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n          indexed.push(ParamType.fromObject({\n            type: \"bytes32\",\n            name: param.name\n          }));\n          dynamic.push(true);\n        } else {\n          indexed.push(param);\n          dynamic.push(false);\n        }\n      } else {\n        nonIndexed.push(param);\n        dynamic.push(false);\n      }\n    });\n    let resultIndexed = topics != null ? this._abiCoder.decode(indexed, concat(topics)) : null;\n\n    let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n\n    let result = [];\n    let nonIndexedIndex = 0,\n        indexedIndex = 0;\n    eventFragment.inputs.forEach((param, index) => {\n      if (param.indexed) {\n        if (resultIndexed == null) {\n          result[index] = new Indexed({\n            _isIndexed: true,\n            hash: null\n          });\n        } else if (dynamic[index]) {\n          result[index] = new Indexed({\n            _isIndexed: true,\n            hash: resultIndexed[indexedIndex++]\n          });\n        } else {\n          try {\n            result[index] = resultIndexed[indexedIndex++];\n          } catch (error) {\n            result[index] = error;\n          }\n        }\n      } else {\n        try {\n          result[index] = resultNonIndexed[nonIndexedIndex++];\n        } catch (error) {\n          result[index] = error;\n        }\n      } // Add the keyword argument if named and safe\n\n\n      if (param.name && result[param.name] == null) {\n        const value = result[index]; // Make error named values throw on access\n\n        if (value instanceof Error) {\n          Object.defineProperty(result, param.name, {\n            get: () => {\n              throw wrapAccessError(`property ${JSON.stringify(param.name)}`, value);\n            }\n          });\n        } else {\n          result[param.name] = value;\n        }\n      }\n    }); // Make all error indexed values throw on access\n\n    for (let i = 0; i < result.length; i++) {\n      const value = result[i];\n\n      if (value instanceof Error) {\n        Object.defineProperty(result, i, {\n          get: () => {\n            throw wrapAccessError(`index ${i}`, value);\n          }\n        });\n      }\n    }\n\n    return Object.freeze(result);\n  } // Given a transaction, find the matching function fragment (if any) and\n  // determine all its properties and call parameters\n\n\n  parseTransaction(tx) {\n    let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase());\n\n    if (!fragment) {\n      return null;\n    }\n\n    return new TransactionDescription({\n      args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n      functionFragment: fragment,\n      name: fragment.name,\n      signature: fragment.format(),\n      sighash: this.getSighash(fragment),\n      value: BigNumber.from(tx.value || \"0\")\n    });\n  } // @TODO\n  //parseCallResult(data: BytesLike): ??\n  // Given an event log, find the matching event fragment (if any) and\n  // determine all its properties and values\n\n\n  parseLog(log) {\n    let fragment = this.getEvent(log.topics[0]);\n\n    if (!fragment || fragment.anonymous) {\n      return null;\n    } // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n    //        Probably not, because just because it is the only event in the ABI does\n    //        not mean we have the full ABI; maybe jsut a fragment?\n\n\n    return new LogDescription({\n      eventFragment: fragment,\n      name: fragment.name,\n      signature: fragment.format(),\n      topic: this.getEventTopic(fragment),\n      args: this.decodeEventLog(fragment, log.data, log.topics)\n    });\n  }\n\n  parseError(data) {\n    const hexData = hexlify(data);\n    let fragment = this.getError(hexData.substring(0, 10).toLowerCase());\n\n    if (!fragment) {\n      return null;\n    }\n\n    return new ErrorDescription({\n      args: this._abiCoder.decode(fragment.inputs, \"0x\" + hexData.substring(10)),\n      errorFragment: fragment,\n      name: fragment.name,\n      signature: fragment.format(),\n      sighash: this.getSighash(fragment)\n    });\n  }\n  /*\n  static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {\n      if (Interface.isInterface(value)) {\n          return value;\n      }\n      if (typeof(value) === \"string\") {\n          return new Interface(JSON.parse(value));\n      }\n      return new Interface(value);\n  }\n  */\n\n\n  static isInterface(value) {\n    return !!(value && value._isInterface);\n  }\n\n}\n\nconst version$9 = \"abstract-provider/5.4.1\";\n\nvar __awaiter$2 = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$e = new Logger(version$9); //export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\n\nclass ForkEvent extends Description {\n  static isForkEvent(value) {\n    return !!(value && value._isForkEvent);\n  }\n\n} ///////////////////////////////\n// Exported Abstracts\n\n\nclass Provider {\n  constructor() {\n    logger$e.checkAbstract(new.target, Provider);\n    defineReadOnly(this, \"_isProvider\", true);\n  }\n\n  getFeeData() {\n    return __awaiter$2(this, void 0, void 0, function* () {\n      const {\n        block,\n        gasPrice\n      } = yield resolveProperties({\n        block: this.getBlock(\"latest\"),\n        gasPrice: this.getGasPrice().catch(error => {\n          // @TODO: Why is this now failing on Calaveras?\n          //console.log(error);\n          return null;\n        })\n      });\n      let maxFeePerGas = null,\n          maxPriorityFeePerGas = null;\n\n      if (block && block.baseFeePerGas) {\n        // We may want to compute this more accurately in the future,\n        // using the formula \"check if the base fee is correct\".\n        // See: https://eips.ethereum.org/EIPS/eip-1559\n        maxPriorityFeePerGas = BigNumber.from(\"2500000000\");\n        maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n      }\n\n      return {\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        gasPrice\n      };\n    });\n  } // Alias for \"on\"\n\n\n  addListener(eventName, listener) {\n    return this.on(eventName, listener);\n  } // Alias for \"off\"\n\n\n  removeListener(eventName, listener) {\n    return this.off(eventName, listener);\n  }\n\n  static isProvider(value) {\n    return !!(value && value._isProvider);\n  }\n\n}\n\nconst version$a = \"abstract-signer/5.4.1\";\n\nvar __awaiter$3 = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$f = new Logger(version$a);\nconst allowedTransactionKeys = [\"accessList\", \"chainId\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"];\nconst forwardErrors = [Logger.errors.INSUFFICIENT_FUNDS, Logger.errors.NONCE_EXPIRED, Logger.errors.REPLACEMENT_UNDERPRICED];\n\nclass Signer {\n  ///////////////////\n  // Sub-classes MUST call super\n  constructor() {\n    logger$f.checkAbstract(new.target, Signer);\n    defineReadOnly(this, \"_isSigner\", true);\n  } ///////////////////\n  // Sub-classes MAY override these\n\n\n  getBalance(blockTag) {\n    return __awaiter$3(this, void 0, void 0, function* () {\n      this._checkProvider(\"getBalance\");\n\n      return yield this.provider.getBalance(this.getAddress(), blockTag);\n    });\n  }\n\n  getTransactionCount(blockTag) {\n    return __awaiter$3(this, void 0, void 0, function* () {\n      this._checkProvider(\"getTransactionCount\");\n\n      return yield this.provider.getTransactionCount(this.getAddress(), blockTag);\n    });\n  } // Populates \"from\" if unspecified, and estimates the gas for the transation\n\n\n  estimateGas(transaction) {\n    return __awaiter$3(this, void 0, void 0, function* () {\n      this._checkProvider(\"estimateGas\");\n\n      const tx = yield resolveProperties(this.checkTransaction(transaction));\n      return yield this.provider.estimateGas(tx);\n    });\n  } // Populates \"from\" if unspecified, and calls with the transation\n\n\n  call(transaction, blockTag) {\n    return __awaiter$3(this, void 0, void 0, function* () {\n      this._checkProvider(\"call\");\n\n      const tx = yield resolveProperties(this.checkTransaction(transaction));\n      return yield this.provider.call(tx, blockTag);\n    });\n  } // Populates all fields in a transaction, signs it and sends it to the network\n\n\n  sendTransaction(transaction) {\n    return __awaiter$3(this, void 0, void 0, function* () {\n      this._checkProvider(\"sendTransaction\");\n\n      const tx = yield this.populateTransaction(transaction);\n      const signedTx = yield this.signTransaction(tx);\n      return yield this.provider.sendTransaction(signedTx);\n    });\n  }\n\n  getChainId() {\n    return __awaiter$3(this, void 0, void 0, function* () {\n      this._checkProvider(\"getChainId\");\n\n      const network = yield this.provider.getNetwork();\n      return network.chainId;\n    });\n  }\n\n  getGasPrice() {\n    return __awaiter$3(this, void 0, void 0, function* () {\n      this._checkProvider(\"getGasPrice\");\n\n      return yield this.provider.getGasPrice();\n    });\n  }\n\n  getFeeData() {\n    return __awaiter$3(this, void 0, void 0, function* () {\n      this._checkProvider(\"getFeeData\");\n\n      return yield this.provider.getFeeData();\n    });\n  }\n\n  resolveName(name) {\n    return __awaiter$3(this, void 0, void 0, function* () {\n      this._checkProvider(\"resolveName\");\n\n      return yield this.provider.resolveName(name);\n    });\n  } // Checks a transaction does not contain invalid keys and if\n  // no \"from\" is provided, populates it.\n  // - does NOT require a provider\n  // - adds \"from\" is not present\n  // - returns a COPY (safe to mutate the result)\n  // By default called from: (overriding these prevents it)\n  //   - call\n  //   - estimateGas\n  //   - populateTransaction (and therefor sendTransaction)\n\n\n  checkTransaction(transaction) {\n    for (const key in transaction) {\n      if (allowedTransactionKeys.indexOf(key) === -1) {\n        logger$f.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n      }\n    }\n\n    const tx = shallowCopy(transaction);\n\n    if (tx.from == null) {\n      tx.from = this.getAddress();\n    } else {\n      // Make sure any provided address matches this signer\n      tx.from = Promise.all([Promise.resolve(tx.from), this.getAddress()]).then(result => {\n        if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n          logger$f.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n        }\n\n        return result[0];\n      });\n    }\n\n    return tx;\n  } // Populates ALL keys for a transaction and checks that \"from\" matches\n  // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n  // By default called from: (overriding these prevents it)\n  //   - sendTransaction\n  //\n  // Notes:\n  //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n\n\n  populateTransaction(transaction) {\n    return __awaiter$3(this, void 0, void 0, function* () {\n      const tx = yield resolveProperties(this.checkTransaction(transaction));\n\n      if (tx.to != null) {\n        tx.to = Promise.resolve(tx.to).then(to => __awaiter$3(this, void 0, void 0, function* () {\n          if (to == null) {\n            return null;\n          }\n\n          const address = yield this.resolveName(to);\n\n          if (address == null) {\n            logger$f.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n          }\n\n          return address;\n        })); // Prevent this error from causing an UnhandledPromiseException\n\n        tx.to.catch(error => {});\n      } // Do not allow mixing pre-eip-1559 and eip-1559 proerties\n\n\n      const hasEip1559 = tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null;\n\n      if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n        logger$f.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n      } else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n        logger$f.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n      }\n\n      if ((tx.type === 2 || tx.type == null) && tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null) {\n        // Fully-formed EIP-1559 transaction (skip getFeeData)\n        tx.type = 2;\n      } else if (tx.type === 0 || tx.type === 1) {\n        // Explicit Legacy or EIP-2930 transaction\n        // Populate missing gasPrice\n        if (tx.gasPrice == null) {\n          tx.gasPrice = this.getGasPrice();\n        }\n      } else {\n        // We need to get fee data to determine things\n        const feeData = yield this.getFeeData();\n\n        if (tx.type == null) {\n          // We need to auto-detect the intended type of this transaction...\n          if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n            // The network supports EIP-1559!\n            // Upgrade transaction from null to eip-1559\n            tx.type = 2;\n\n            if (tx.gasPrice != null) {\n              // Using legacy gasPrice property on an eip-1559 network,\n              // so use gasPrice as both fee properties\n              const gasPrice = tx.gasPrice;\n              delete tx.gasPrice;\n              tx.maxFeePerGas = gasPrice;\n              tx.maxPriorityFeePerGas = gasPrice;\n            } else {\n              // Populate missing fee data\n              if (tx.maxFeePerGas == null) {\n                tx.maxFeePerGas = feeData.maxFeePerGas;\n              }\n\n              if (tx.maxPriorityFeePerGas == null) {\n                tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n              }\n            }\n          } else if (feeData.gasPrice != null) {\n            // Network doesn't support EIP-1559...\n            // ...but they are trying to use EIP-1559 properties\n            if (hasEip1559) {\n              logger$f.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"populateTransaction\"\n              });\n            } // Populate missing fee data\n\n\n            if (tx.gasPrice == null) {\n              tx.gasPrice = feeData.gasPrice;\n            } // Explicitly set untyped transaction to legacy\n\n\n            tx.type = 0;\n          } else {\n            // getFeeData has failed us.\n            logger$f.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n              operation: \"signer.getFeeData\"\n            });\n          }\n        } else if (tx.type === 2) {\n          // Explicitly using EIP-1559\n          // Populate missing fee data\n          if (tx.maxFeePerGas == null) {\n            tx.maxFeePerGas = feeData.maxFeePerGas;\n          }\n\n          if (tx.maxPriorityFeePerGas == null) {\n            tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n          }\n        }\n      }\n\n      if (tx.nonce == null) {\n        tx.nonce = this.getTransactionCount(\"pending\");\n      }\n\n      if (tx.gasLimit == null) {\n        tx.gasLimit = this.estimateGas(tx).catch(error => {\n          if (forwardErrors.indexOf(error.code) >= 0) {\n            throw error;\n          }\n\n          return logger$f.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error: error,\n            tx: tx\n          });\n        });\n      }\n\n      if (tx.chainId == null) {\n        tx.chainId = this.getChainId();\n      } else {\n        tx.chainId = Promise.all([Promise.resolve(tx.chainId), this.getChainId()]).then(results => {\n          if (results[1] !== 0 && results[0] !== results[1]) {\n            logger$f.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n          }\n\n          return results[0];\n        });\n      }\n\n      return yield resolveProperties(tx);\n    });\n  } ///////////////////\n  // Sub-classes SHOULD leave these alone\n\n\n  _checkProvider(operation) {\n    if (!this.provider) {\n      logger$f.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: operation || \"_checkProvider\"\n      });\n    }\n  }\n\n  static isSigner(value) {\n    return !!(value && value._isSigner);\n  }\n\n}\n\nclass VoidSigner extends Signer {\n  constructor(address, provider) {\n    logger$f.checkNew(new.target, VoidSigner);\n    super();\n    defineReadOnly(this, \"address\", address);\n    defineReadOnly(this, \"provider\", provider || null);\n  }\n\n  getAddress() {\n    return Promise.resolve(this.address);\n  }\n\n  _fail(message, operation) {\n    return Promise.resolve().then(() => {\n      logger$f.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: operation\n      });\n    });\n  }\n\n  signMessage(message) {\n    return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n  }\n\n  signTransaction(transaction) {\n    return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n  }\n\n  _signTypedData(domain, types, value) {\n    return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n  }\n\n  connect(provider) {\n    return new VoidSigner(this.address, provider);\n  }\n\n}\n\nvar minimalisticAssert = assert;\n\nfunction assert(val, msg) {\n  if (!val) throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r) throw new Error(msg || 'Assertion failed: ' + l + ' != ' + r);\n};\n\nvar inherits_browser = createCommonjsModule(function (module) {\n  if (typeof Object.create === 'function') {\n    // implementation from standard node.js 'util' module\n    module.exports = function inherits(ctor, superCtor) {\n      if (superCtor) {\n        ctor.super_ = superCtor;\n        ctor.prototype = Object.create(superCtor.prototype, {\n          constructor: {\n            value: ctor,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n      }\n    };\n  } else {\n    // old school shim for old browsers\n    module.exports = function inherits(ctor, superCtor) {\n      if (superCtor) {\n        ctor.super_ = superCtor;\n\n        var TempCtor = function () {};\n\n        TempCtor.prototype = superCtor.prototype;\n        ctor.prototype = new TempCtor();\n        ctor.prototype.constructor = ctor;\n      }\n    };\n  }\n});\nvar inherits_1 = inherits_browser;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg)) return msg.slice();\n  if (!msg) return [];\n  var res = [];\n\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = c >> 6 | 192;\n          res[p++] = c & 63 | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = c >> 18 | 240;\n          res[p++] = c >> 12 & 63 | 128;\n          res[p++] = c >> 6 & 63 | 128;\n          res[p++] = c & 63 | 128;\n        } else {\n          res[p++] = c >> 12 | 224;\n          res[p++] = c >> 6 & 63 | 128;\n          res[p++] = c & 63 | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0) msg = '0' + msg;\n\n      for (i = 0; i < msg.length; i += 2) res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++) res[i] = msg[i] | 0;\n  }\n\n  return res;\n}\n\nvar toArray_1 = toArray;\n\nfunction toHex$1(msg) {\n  var res = '';\n\n  for (var i = 0; i < msg.length; i++) res += zero2(msg[i].toString(16));\n\n  return res;\n}\n\nvar toHex_1 = toHex$1;\n\nfunction htonl(w) {\n  var res = w >>> 24 | w >>> 8 & 0xff00 | w << 8 & 0xff0000 | (w & 0xff) << 24;\n  return res >>> 0;\n}\n\nvar htonl_1 = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little') w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n\n  return res;\n}\n\nvar toHex32_1 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1) return '0' + word;else return word;\n}\n\nvar zero2_1 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7) return '0' + word;else if (word.length === 6) return '00' + word;else if (word.length === 5) return '000' + word;else if (word.length === 4) return '0000' + word;else if (word.length === 3) return '00000' + word;else if (word.length === 2) return '000000' + word;else if (word.length === 1) return '0000000' + word;else return word;\n}\n\nvar zero8_1 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  minimalisticAssert(len % 4 === 0);\n  var res = new Array(len / 4);\n\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big') w = msg[k] << 24 | msg[k + 1] << 16 | msg[k + 2] << 8 | msg[k + 3];else w = msg[k + 3] << 24 | msg[k + 2] << 16 | msg[k + 1] << 8 | msg[k];\n    res[i] = w >>> 0;\n  }\n\n  return res;\n}\n\nvar join32_1 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = m >>> 16 & 0xff;\n      res[k + 2] = m >>> 8 & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = m >>> 16 & 0xff;\n      res[k + 1] = m >>> 8 & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n\n  return res;\n}\n\nvar split32_1 = split32;\n\nfunction rotr32(w, b) {\n  return w >>> b | w << 32 - b;\n}\n\nvar rotr32_1 = rotr32;\n\nfunction rotl32(w, b) {\n  return w << b | w >>> 32 - b;\n}\n\nvar rotl32_1 = rotl32;\n\nfunction sum32(a, b) {\n  return a + b >>> 0;\n}\n\nvar sum32_1 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return a + b + c >>> 0;\n}\n\nvar sum32_3_1 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return a + b + c + d >>> 0;\n}\n\nvar sum32_4_1 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return a + b + c + d + e >>> 0;\n}\n\nvar sum32_5_1 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n  var lo = al + bl >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\n\nvar sum64_1 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = al + bl >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\n\nvar sum64_hi_1 = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\n\nvar sum64_lo_1 = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = lo + bl >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = lo + cl >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = lo + dl >>> 0;\n  carry += lo < dl ? 1 : 0;\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\n\nvar sum64_4_hi_1 = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\n\nvar sum64_4_lo_1 = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = lo + bl >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = lo + cl >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = lo + dl >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = lo + el >>> 0;\n  carry += lo < el ? 1 : 0;\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\n\nvar sum64_5_hi_1 = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n  return lo >>> 0;\n}\n\nvar sum64_5_lo_1 = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = al << 32 - num | ah >>> num;\n  return r >>> 0;\n}\n\nvar rotr64_hi_1 = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = ah << 32 - num | al >>> num;\n  return r >>> 0;\n}\n\nvar rotr64_lo_1 = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\n\nvar shr64_hi_1 = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = ah << 32 - num | al >>> num;\n  return r >>> 0;\n}\n\nvar shr64_lo_1 = shr64_lo;\nvar utils = {\n  inherits: inherits_1,\n  toArray: toArray_1,\n  toHex: toHex_1,\n  htonl: htonl_1,\n  toHex32: toHex32_1,\n  zero2: zero2_1,\n  zero8: zero8_1,\n  join32: join32_1,\n  split32: split32_1,\n  rotr32: rotr32_1,\n  rotl32: rotl32_1,\n  sum32: sum32_1,\n  sum32_3: sum32_3_1,\n  sum32_4: sum32_4_1,\n  sum32_5: sum32_5_1,\n  sum64: sum64_1,\n  sum64_hi: sum64_hi_1,\n  sum64_lo: sum64_lo_1,\n  sum64_4_hi: sum64_4_hi_1,\n  sum64_4_lo: sum64_4_lo_1,\n  sum64_5_hi: sum64_5_hi_1,\n  sum64_5_lo: sum64_5_lo_1,\n  rotr64_hi: rotr64_hi_1,\n  rotr64_lo: rotr64_lo_1,\n  shr64_hi: shr64_hi_1,\n  shr64_lo: shr64_lo_1\n};\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\n\nvar BlockHash_1 = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending) this.pending = msg;else this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length; // Enough data, try updating\n\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending; // Process pending data in blocks\n\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0) this.pending = null;\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n\n    for (var i = 0; i < msg.length; i += this._delta32) this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  minimalisticAssert(this.pending === null);\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - (len + this.padLength) % bytes;\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n\n  for (var i = 1; i < k; i++) res[i] = 0; // Append length\n\n\n  len <<= 3;\n\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++) res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = len >>> 24 & 0xff;\n    res[i++] = len >>> 16 & 0xff;\n    res[i++] = len >>> 8 & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = len >>> 8 & 0xff;\n    res[i++] = len >>> 16 & 0xff;\n    res[i++] = len >>> 24 & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++) res[i++] = 0;\n  }\n\n  return res;\n};\n\nvar common = {\n  BlockHash: BlockHash_1\n};\nvar rotr32$1 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0) return ch32(x, y, z);\n  if (s === 1 || s === 3) return p32(x, y, z);\n  if (s === 2) return maj32(x, y, z);\n}\n\nvar ft_1_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return x & y ^ ~x & z;\n}\n\nvar ch32_1 = ch32;\n\nfunction maj32(x, y, z) {\n  return x & y ^ x & z ^ y & z;\n}\n\nvar maj32_1 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\n\nvar p32_1 = p32;\n\nfunction s0_256(x) {\n  return rotr32$1(x, 2) ^ rotr32$1(x, 13) ^ rotr32$1(x, 22);\n}\n\nvar s0_256_1 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32$1(x, 6) ^ rotr32$1(x, 11) ^ rotr32$1(x, 25);\n}\n\nvar s1_256_1 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32$1(x, 7) ^ rotr32$1(x, 18) ^ x >>> 3;\n}\n\nvar g0_256_1 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32$1(x, 17) ^ rotr32$1(x, 19) ^ x >>> 10;\n}\n\nvar g1_256_1 = g1_256;\nvar common$1 = {\n  ft_1: ft_1_1,\n  ch32: ch32_1,\n  maj32: maj32_1,\n  p32: p32_1,\n  s0_256: s0_256_1,\n  s1_256: s1_256_1,\n  g0_256: g0_256_1,\n  g1_256: g1_256_1\n};\nvar rotl32$1 = utils.rotl32;\nvar sum32$1 = utils.sum32;\nvar sum32_5$1 = utils.sum32_5;\nvar ft_1$1 = common$1.ft_1;\nvar BlockHash$1 = common.BlockHash;\nvar sha1_K = [0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xCA62C1D6];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1)) return new SHA1();\n  BlockHash$1.call(this);\n  this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash$1);\nvar _1 = SHA1;\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++) W[i] = msg[start + i];\n\n  for (; i < W.length; i++) W[i] = rotl32$1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5$1(rotl32$1(a, 5), ft_1$1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32$1(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32$1(this.h[0], a);\n  this.h[1] = sum32$1(this.h[1], b);\n  this.h[2] = sum32$1(this.h[2], c);\n  this.h[3] = sum32$1(this.h[3], d);\n  this.h[4] = sum32$1(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h, 'big');else return utils.split32(this.h, 'big');\n};\n\nvar sum32$2 = utils.sum32;\nvar sum32_4$1 = utils.sum32_4;\nvar sum32_5$2 = utils.sum32_5;\nvar ch32$1 = common$1.ch32;\nvar maj32$1 = common$1.maj32;\nvar s0_256$1 = common$1.s0_256;\nvar s1_256$1 = common$1.s1_256;\nvar g0_256$1 = common$1.g0_256;\nvar g1_256$1 = common$1.g1_256;\nvar BlockHash$2 = common.BlockHash;\nvar sha256_K = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256)) return new SHA256();\n  BlockHash$2.call(this);\n  this.h = [0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\n\nutils.inherits(SHA256, BlockHash$2);\nvar _256 = SHA256;\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++) W[i] = msg[start + i];\n\n  for (; i < W.length; i++) W[i] = sum32_4$1(g1_256$1(W[i - 2]), W[i - 7], g0_256$1(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n  minimalisticAssert(this.k.length === W.length);\n\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5$2(h, s1_256$1(e), ch32$1(e, f, g), this.k[i], W[i]);\n    var T2 = sum32$2(s0_256$1(a), maj32$1(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32$2(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32$2(T1, T2);\n  }\n\n  this.h[0] = sum32$2(this.h[0], a);\n  this.h[1] = sum32$2(this.h[1], b);\n  this.h[2] = sum32$2(this.h[2], c);\n  this.h[3] = sum32$2(this.h[3], d);\n  this.h[4] = sum32$2(this.h[4], e);\n  this.h[5] = sum32$2(this.h[5], f);\n  this.h[6] = sum32$2(this.h[6], g);\n  this.h[7] = sum32$2(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h, 'big');else return utils.split32(this.h, 'big');\n};\n\nfunction SHA224() {\n  if (!(this instanceof SHA224)) return new SHA224();\n\n  _256.call(this);\n\n  this.h = [0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4];\n}\n\nutils.inherits(SHA224, _256);\nvar _224 = SHA224;\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex') return utils.toHex32(this.h.slice(0, 7), 'big');else return utils.split32(this.h.slice(0, 7), 'big');\n};\n\nvar rotr64_hi$1 = utils.rotr64_hi;\nvar rotr64_lo$1 = utils.rotr64_lo;\nvar shr64_hi$1 = utils.shr64_hi;\nvar shr64_lo$1 = utils.shr64_lo;\nvar sum64$1 = utils.sum64;\nvar sum64_hi$1 = utils.sum64_hi;\nvar sum64_lo$1 = utils.sum64_lo;\nvar sum64_4_hi$1 = utils.sum64_4_hi;\nvar sum64_4_lo$1 = utils.sum64_4_lo;\nvar sum64_5_hi$1 = utils.sum64_5_hi;\nvar sum64_5_lo$1 = utils.sum64_5_lo;\nvar BlockHash$3 = common.BlockHash;\nvar sha512_K = [0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc, 0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118, 0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2, 0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694, 0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3, 0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65, 0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5, 0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4, 0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725, 0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70, 0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df, 0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b, 0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30, 0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8, 0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8, 0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3, 0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec, 0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b, 0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178, 0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b, 0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c, 0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512)) return new SHA512();\n  BlockHash$3.call(this);\n  this.h = [0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1, 0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\n\nutils.inherits(SHA512, BlockHash$3);\nvar _512 = SHA512;\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W; // 32 x 32bit words\n\n  for (var i = 0; i < 32; i++) W[i] = msg[start + i];\n\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]); // i - 2\n\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14]; // i - 7\n\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]); // i - 15\n\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32]; // i - 16\n\n    var c3_lo = W[i - 31];\n    W[i] = sum64_4_hi$1(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo$1(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n  minimalisticAssert(this.k.length === W.length);\n\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n    var T1_hi = sum64_5_hi$1(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo$1(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n    var T2_hi = sum64_hi$1(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo$1(c0_hi, c0_lo, c1_hi, c1_lo);\n    hh = gh;\n    hl = gl;\n    gh = fh;\n    gl = fl;\n    fh = eh;\n    fl = el;\n    eh = sum64_hi$1(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo$1(dl, dl, T1_hi, T1_lo);\n    dh = ch;\n    dl = cl;\n    ch = bh;\n    cl = bl;\n    bh = ah;\n    bl = al;\n    ah = sum64_hi$1(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo$1(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64$1(this.h, 0, ah, al);\n  sum64$1(this.h, 2, bh, bl);\n  sum64$1(this.h, 4, ch, cl);\n  sum64$1(this.h, 6, dh, dl);\n  sum64$1(this.h, 8, eh, el);\n  sum64$1(this.h, 10, fh, fl);\n  sum64$1(this.h, 12, gh, gl);\n  sum64$1(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h, 'big');else return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = xh & yh ^ ~xh & zh;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = xl & yl ^ ~xl & zl;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = xh & yh ^ xh & zh ^ yh & zh;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = xl & yl ^ xl & zl ^ yl & zl;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi$1(xh, xl, 28);\n  var c1_hi = rotr64_hi$1(xl, xh, 2); // 34\n\n  var c2_hi = rotr64_hi$1(xl, xh, 7); // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo$1(xh, xl, 28);\n  var c1_lo = rotr64_lo$1(xl, xh, 2); // 34\n\n  var c2_lo = rotr64_lo$1(xl, xh, 7); // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi$1(xh, xl, 14);\n  var c1_hi = rotr64_hi$1(xh, xl, 18);\n  var c2_hi = rotr64_hi$1(xl, xh, 9); // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo$1(xh, xl, 14);\n  var c1_lo = rotr64_lo$1(xh, xl, 18);\n  var c2_lo = rotr64_lo$1(xl, xh, 9); // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi$1(xh, xl, 1);\n  var c1_hi = rotr64_hi$1(xh, xl, 8);\n  var c2_hi = shr64_hi$1(xh, xl, 7);\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo$1(xh, xl, 1);\n  var c1_lo = rotr64_lo$1(xh, xl, 8);\n  var c2_lo = shr64_lo$1(xh, xl, 7);\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi$1(xh, xl, 19);\n  var c1_hi = rotr64_hi$1(xl, xh, 29); // 61\n\n  var c2_hi = shr64_hi$1(xh, xl, 6);\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo$1(xh, xl, 19);\n  var c1_lo = rotr64_lo$1(xl, xh, 29); // 61\n\n  var c2_lo = shr64_lo$1(xh, xl, 6);\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction SHA384() {\n  if (!(this instanceof SHA384)) return new SHA384();\n\n  _512.call(this);\n\n  this.h = [0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939, 0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4];\n}\n\nutils.inherits(SHA384, _512);\nvar _384 = SHA384;\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h.slice(0, 12), 'big');else return utils.split32(this.h.slice(0, 12), 'big');\n};\n\nvar sha1 = _1;\nvar sha224 = _224;\nvar sha256 = _256;\nvar sha384 = _384;\nvar sha512 = _512;\nvar sha = {\n  sha1: sha1,\n  sha224: sha224,\n  sha256: sha256,\n  sha384: sha384,\n  sha512: sha512\n};\nvar rotl32$2 = utils.rotl32;\nvar sum32$3 = utils.sum32;\nvar sum32_3$1 = utils.sum32_3;\nvar sum32_4$2 = utils.sum32_4;\nvar BlockHash$4 = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160)) return new RIPEMD160();\n  BlockHash$4.call(this);\n  this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n  this.endian = 'little';\n}\n\nutils.inherits(RIPEMD160, BlockHash$4);\nvar ripemd160 = RIPEMD160;\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n\n  for (var j = 0; j < 80; j++) {\n    var T = sum32$3(rotl32$2(sum32_4$2(A, f(j, B, C, D), msg[r[j] + start], K(j)), s[j]), E);\n    A = E;\n    E = D;\n    D = rotl32$2(C, 10);\n    C = B;\n    B = T;\n    T = sum32$3(rotl32$2(sum32_4$2(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)), sh[j]), Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32$2(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n\n  T = sum32_3$1(this.h[1], C, Dh);\n  this.h[1] = sum32_3$1(this.h[2], D, Eh);\n  this.h[2] = sum32_3$1(this.h[3], E, Ah);\n  this.h[3] = sum32_3$1(this.h[4], A, Bh);\n  this.h[4] = sum32_3$1(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h, 'little');else return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15) return x ^ y ^ z;else if (j <= 31) return x & y | ~x & z;else if (j <= 47) return (x | ~y) ^ z;else if (j <= 63) return x & z | y & ~z;else return x ^ (y | ~z);\n}\n\nfunction K(j) {\n  if (j <= 15) return 0x00000000;else if (j <= 31) return 0x5a827999;else if (j <= 47) return 0x6ed9eba1;else if (j <= 63) return 0x8f1bbcdc;else return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15) return 0x50a28be6;else if (j <= 31) return 0x5c4dd124;else if (j <= 47) return 0x6d703ef3;else if (j <= 63) return 0x7a6d76e9;else return 0x00000000;\n}\n\nvar r = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13];\nvar rh = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11];\nvar s = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6];\nvar sh = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];\nvar ripemd = {\n  ripemd160: ripemd160\n};\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac)) return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\n\nvar hmac = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize) key = new this.Hash().update(key).digest();\n  minimalisticAssert(key.length <= this.blockSize); // Add padding to key\n\n  for (var i = key.length; i < this.blockSize; i++) key.push(0);\n\n  for (i = 0; i < key.length; i++) key[i] ^= 0x36;\n\n  this.inner = new this.Hash().update(key); // 0x36 ^ 0x5c = 0x6a\n\n  for (i = 0; i < key.length; i++) key[i] ^= 0x6a;\n\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n\nvar hash_1 = createCommonjsModule(function (module, exports) {\n  var hash = exports;\n  hash.utils = utils;\n  hash.common = common;\n  hash.sha = sha;\n  hash.ripemd = ripemd;\n  hash.hmac = hmac; // Proxy hash functions to the main object\n\n  hash.sha1 = hash.sha.sha1;\n  hash.sha256 = hash.sha.sha256;\n  hash.sha224 = hash.sha.sha224;\n  hash.sha384 = hash.sha.sha384;\n  hash.sha512 = hash.sha.sha512;\n  hash.ripemd160 = hash.ripemd.ripemd160;\n});\n\nfunction createCommonjsModule$1(fn, basedir, module) {\n  return module = {\n    path: basedir,\n    exports: {},\n    require: function (path, base) {\n      return commonjsRequire();\n    }\n  }, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire() {\n  throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar minimalisticAssert$1 = assert$1;\n\nfunction assert$1(val, msg) {\n  if (!val) throw new Error(msg || 'Assertion failed');\n}\n\nassert$1.equal = function assertEqual(l, r, msg) {\n  if (l != r) throw new Error(msg || 'Assertion failed: ' + l + ' != ' + r);\n};\n\nvar utils_1 = createCommonjsModule$1(function (module, exports) {\n  var utils = exports;\n\n  function toArray(msg, enc) {\n    if (Array.isArray(msg)) return msg.slice();\n    if (!msg) return [];\n    var res = [];\n\n    if (typeof msg !== 'string') {\n      for (var i = 0; i < msg.length; i++) res[i] = msg[i] | 0;\n\n      return res;\n    }\n\n    if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0) msg = '0' + msg;\n\n      for (var i = 0; i < msg.length; i += 2) res.push(parseInt(msg[i] + msg[i + 1], 16));\n    } else {\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        var hi = c >> 8;\n        var lo = c & 0xff;\n        if (hi) res.push(hi, lo);else res.push(lo);\n      }\n    }\n\n    return res;\n  }\n\n  utils.toArray = toArray;\n\n  function zero2(word) {\n    if (word.length === 1) return '0' + word;else return word;\n  }\n\n  utils.zero2 = zero2;\n\n  function toHex(msg) {\n    var res = '';\n\n    for (var i = 0; i < msg.length; i++) res += zero2(msg[i].toString(16));\n\n    return res;\n  }\n\n  utils.toHex = toHex;\n\n  utils.encode = function encode(arr, enc) {\n    if (enc === 'hex') return toHex(arr);else return arr;\n  };\n});\nvar utils_1$1 = createCommonjsModule$1(function (module, exports) {\n  var utils = exports;\n  utils.assert = minimalisticAssert$1;\n  utils.toArray = utils_1.toArray;\n  utils.zero2 = utils_1.zero2;\n  utils.toHex = utils_1.toHex;\n  utils.encode = utils_1.encode; // Represent num in a w-NAF form\n\n  function getNAF(num, w, bits) {\n    var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n    naf.fill(0);\n    var ws = 1 << w + 1;\n    var k = num.clone();\n\n    for (var i = 0; i < naf.length; i++) {\n      var z;\n      var mod = k.andln(ws - 1);\n\n      if (k.isOdd()) {\n        if (mod > (ws >> 1) - 1) z = (ws >> 1) - mod;else z = mod;\n        k.isubn(z);\n      } else {\n        z = 0;\n      }\n\n      naf[i] = z;\n      k.iushrn(1);\n    }\n\n    return naf;\n  }\n\n  utils.getNAF = getNAF; // Represent k1, k2 in a Joint Sparse Form\n\n  function getJSF(k1, k2) {\n    var jsf = [[], []];\n    k1 = k1.clone();\n    k2 = k2.clone();\n    var d1 = 0;\n    var d2 = 0;\n    var m8;\n\n    while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n      // First phase\n      var m14 = k1.andln(3) + d1 & 3;\n      var m24 = k2.andln(3) + d2 & 3;\n      if (m14 === 3) m14 = -1;\n      if (m24 === 3) m24 = -1;\n      var u1;\n\n      if ((m14 & 1) === 0) {\n        u1 = 0;\n      } else {\n        m8 = k1.andln(7) + d1 & 7;\n        if ((m8 === 3 || m8 === 5) && m24 === 2) u1 = -m14;else u1 = m14;\n      }\n\n      jsf[0].push(u1);\n      var u2;\n\n      if ((m24 & 1) === 0) {\n        u2 = 0;\n      } else {\n        m8 = k2.andln(7) + d2 & 7;\n        if ((m8 === 3 || m8 === 5) && m14 === 2) u2 = -m24;else u2 = m24;\n      }\n\n      jsf[1].push(u2); // Second phase\n\n      if (2 * d1 === u1 + 1) d1 = 1 - d1;\n      if (2 * d2 === u2 + 1) d2 = 1 - d2;\n      k1.iushrn(1);\n      k2.iushrn(1);\n    }\n\n    return jsf;\n  }\n\n  utils.getJSF = getJSF;\n\n  function cachedProperty(obj, name, computer) {\n    var key = '_' + name;\n\n    obj.prototype[name] = function cachedProperty() {\n      return this[key] !== undefined ? this[key] : this[key] = computer.call(this);\n    };\n  }\n\n  utils.cachedProperty = cachedProperty;\n\n  function parseBytes(bytes) {\n    return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') : bytes;\n  }\n\n  utils.parseBytes = parseBytes;\n\n  function intFromLE(bytes) {\n    return new bn(bytes, 'hex', 'le');\n  }\n\n  utils.intFromLE = intFromLE;\n});\nvar getNAF = utils_1$1.getNAF;\nvar getJSF = utils_1$1.getJSF;\nvar assert$1$1 = utils_1$1.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new bn(conf.p, 16); // Use Montgomery, when there is no fast reduction for the prime\n\n  this.red = conf.prime ? bn.red(conf.prime) : bn.mont(this.p); // Useful for many curves\n\n  this.zero = new bn(0).toRed(this.red);\n  this.one = new bn(1).toRed(this.red);\n  this.two = new bn(2).toRed(this.red); // Curve configuration, optional\n\n  this.n = conf.n && new bn(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed); // Temporary arrays\n\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n  this._bitLength = this.n ? this.n.bitLength() : 0; // Generalized Greg Maxwell's trick\n\n  var adjustCount = this.n && this.p.div(this.n);\n\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\n\nvar base = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert$1$1(p.precomputed);\n\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3; // Translate into more windowed form\n\n  var repr = [];\n  var j;\n  var nafW;\n\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n\n    for (var l = j + doubles.step - 1; l >= j; l--) nafW = (nafW << 1) + naf[l];\n\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i) b = b.mixedAdd(doubles.points[j]);else if (nafW === -i) b = b.mixedAdd(doubles.points[j].neg());\n    }\n\n    a = a.add(b);\n  }\n\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4; // Precompute window\n\n  var nafPoints = p._getNAFPoints(w);\n\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points; // Get NAF form\n\n  var naf = getNAF(k, w, this._bitLength); // Add `this`*(N+1) for every w-NAF index\n\n  var acc = this.jpoint(null, null, null);\n\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--) l++;\n\n    if (i >= 0) l++;\n    acc = acc.dblp(l);\n    if (i < 0) break;\n    var z = naf[i];\n    assert$1$1(z !== 0);\n\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0) acc = acc.mixedAdd(wnd[z - 1 >> 1]);else acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0) acc = acc.add(wnd[z - 1 >> 1]);else acc = acc.add(wnd[-z - 1 >> 1].neg());\n    }\n  }\n\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3; // Fill all arrays\n\n  var max = 0;\n  var i;\n  var j;\n  var p;\n\n  for (i = 0; i < len; i++) {\n    p = points[i];\n\n    var nafPoints = p._getNAFPoints(defW);\n\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  } // Comb small window NAFs\n\n\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [points[a],\n    /* 1 */\n    null,\n    /* 3 */\n    null,\n    /* 5 */\n    points[b]\n    /* 7 */\n    ]; // Try to avoid Projective points, if possible\n\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [-3,\n    /* -1 -1 */\n    -1,\n    /* -1 0 */\n    -5,\n    /* -1 1 */\n    -7,\n    /* 0 -1 */\n    0,\n    /* 0 0 */\n    7,\n    /* 0 1 */\n    5,\n    /* 1 -1 */\n    1,\n    /* 1 0 */\n    3\n    /* 1 1 */\n    ];\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0) zero = false;\n      }\n\n      if (!zero) break;\n      k++;\n      i--;\n    }\n\n    if (i >= 0) k++;\n    acc = acc.dblp(k);\n    if (i < 0) break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      if (z === 0) continue;else if (z > 0) p = wnd[j][z - 1 >> 1];else if (z < 0) p = wnd[j][-z - 1 >> 1].neg();\n      if (p.type === 'affine') acc = acc.mixedAdd(p);else acc = acc.add(p);\n    }\n  } // Zeroify references\n\n\n  for (i = 0; i < len; i++) wnd[i] = null;\n\n  if (jacobianResult) return acc;else return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\n\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq() {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils_1$1.toArray(bytes, enc);\n  var len = this.p.byteLength(); // uncompressed, hybrid-odd, hybrid-even\n\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) && bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06) assert$1$1(bytes[bytes.length - 1] % 2 === 0);else if (bytes[0] === 0x07) assert$1$1(bytes[bytes.length - 1] % 2 === 1);\n    var res = this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) && bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n  if (compact) return [this.getY().isEven() ? 0x02 : 0x03].concat(x);\n  return [0x04].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils_1$1.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed) return this;\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed) return false;\n  var doubles = this.precomputed.doubles;\n  if (!doubles) return false;\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;\n  var doubles = [this];\n  var acc = this;\n\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++) acc = acc.dbl();\n\n    doubles.push(acc);\n  }\n\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;\n  var res = [this];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n\n  for (var i = 1; i < max; i++) res[i] = res[i - 1].add(dbl);\n\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n\n  for (var i = 0; i < k; i++) r = r.dbl();\n\n  return r;\n};\n\nvar inherits_browser$1 = createCommonjsModule$1(function (module) {\n  if (typeof Object.create === 'function') {\n    // implementation from standard node.js 'util' module\n    module.exports = function inherits(ctor, superCtor) {\n      if (superCtor) {\n        ctor.super_ = superCtor;\n        ctor.prototype = Object.create(superCtor.prototype, {\n          constructor: {\n            value: ctor,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n      }\n    };\n  } else {\n    // old school shim for old browsers\n    module.exports = function inherits(ctor, superCtor) {\n      if (superCtor) {\n        ctor.super_ = superCtor;\n\n        var TempCtor = function () {};\n\n        TempCtor.prototype = superCtor.prototype;\n        ctor.prototype = new TempCtor();\n        ctor.prototype.constructor = ctor;\n      }\n    };\n  }\n});\nvar assert$2 = utils_1$1.assert;\n\nfunction ShortCurve(conf) {\n  base.call(this, 'short', conf);\n  this.a = new bn(conf.a, 16).toRed(this.red);\n  this.b = new bn(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0; // If the curve is endomorphic, precalculate beta and lambda\n\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\n\ninherits_browser$1(ShortCurve, base);\nvar short_1 = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1) return; // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n\n  var beta;\n  var lambda;\n\n  if (conf.beta) {\n    beta = new bn(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p); // Choose the smallest beta\n\n\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n\n  if (conf.lambda) {\n    lambda = new bn(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert$2(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  } // Get basis vectors, used for balanced length-two representation\n\n\n  var basis;\n\n  if (conf.basis) {\n    basis = conf.basis.map(function (vec) {\n      return {\n        a: new bn(vec.a, 16),\n        b: new bn(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : bn.mont(num);\n  var tinv = new bn(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n  var s = new bn(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [l1, l2];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2)); // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new bn(1);\n  var y1 = new bn(0);\n  var x2 = new bn(0);\n  var y2 = new bn(1); // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n\n  var a0;\n  var b0; // First vector\n\n  var a1;\n  var b1; // Second vector\n\n  var a2;\n  var b2;\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n\n    prevR = r;\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n\n  a2 = r.neg();\n  b2 = x;\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  } // Normalize signs\n\n\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [{\n    a: a1,\n    b: b1\n  }, {\n    a: a2,\n    b: b2\n  }];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b); // Calculate answer\n\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return {\n    k1: k1,\n    k2: k2\n  };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new bn(x, 16);\n  if (!x.red) x = x.toRed(this.red);\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0) throw new Error('invalid point'); // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd) y = y.redNeg();\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf) return true;\n  var x = point.x;\n  var y = point.y;\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n\n    var p = points[i];\n\n    var beta = p._getBeta();\n\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult); // Clean-up references to points and coefficients\n\n\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  base.BasePoint.call(this, curve, 'affine');\n\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16); // Force redgomery representation when loading from JSON\n\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n\n    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\n\ninherits_browser$1(Point, base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo) return;\n  var pre = this.precomputed;\n  if (pre && pre.beta) return pre.beta;\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n\n  if (pre) {\n    var curve = this.curve;\n\n    var endoMul = function (p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed) return [this.x, this.y];\n  return [this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  }];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string') obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2]) return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [res].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [res].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf) return p; // P + O = P\n\n  if (p.inf) return this; // P + P = 2P\n\n  if (this.eq(p)) return this.dbl(); // P + (-P) = O\n\n  if (this.neg().eq(p)) return this.curve.point(null, null); // P + Q = O\n\n  if (this.x.cmp(p.x) === 0) return this.curve.point(null, null);\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0) c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf) return this; // 2P = O\n\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0) return this.curve.point(null, null);\n  var a = this.curve.a;\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new bn(k, 16);\n  if (this.isInfinity()) return this;else if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);else if (this.curve.endo) return this.curve._endoWnafMulAdd([this], [k]);else return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [this, p2];\n  var coeffs = [k1, k2];\n  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs);else return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [this, p2];\n  var coeffs = [k1, k2];\n  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs, true);else return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf) return this;\n  var res = this.curve.point(this.x, this.y.redNeg());\n\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n\n    var negate = function (p) {\n      return p.neg();\n    };\n\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf) return this.curve.jpoint(null, null, null);\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  base.BasePoint.call(this, curve, 'jacobian');\n\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new bn(0);\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16);\n    this.z = new bn(z, 16);\n  }\n\n  if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n  this.zOne = this.z === this.curve.one;\n}\n\ninherits_browser$1(JPoint, base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity()) return this.curve.point(null, null);\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity()) return p; // P + O = P\n\n  if (p.isInfinity()) return this; // 12M + 4S + 7A\n\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity()) return p.toJ(); // P + O = P\n\n  if (p.isInfinity()) return this; // 8M + 3S + 7A\n\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0) return this;\n  if (this.isInfinity()) return this;\n  if (!pow) return this.dbl();\n  var i;\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n\n    for (i = 0; i < pow; i++) r = r.dbl();\n\n    return r;\n  } // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n\n\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr(); // Reuse results\n\n  var jyd = jy.redAdd(jy);\n\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow) jz4 = jz4.redMul(jyd4);\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity()) return this;\n  if (this.curve.zeroA) return this._zeroDbl();else if (this.curve.threeA) return this._threeDbl();else return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz; // Z = 1\n\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n    // XX = X1^2\n    var xx = this.x.redSqr(); // YY = Y1^2\n\n    var yy = this.y.redSqr(); // YYYY = YY^2\n\n    var yyyy = yy.redSqr(); // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s); // M = 3 * XX + a; a = 0\n\n    var m = xx.redAdd(xx).redIAdd(xx); // T = M ^ 2 - 2*S\n\n    var t = m.redSqr().redISub(s).redISub(s); // 8 * YYYY\n\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8); // X3 = T\n\n    nx = t; // Y3 = M * (S - T) - 8 * YYYY\n\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8); // Z3 = 2*Y1\n\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n    // A = X1^2\n    var a = this.x.redSqr(); // B = Y1^2\n\n    var b = this.y.redSqr(); // C = B^2\n\n    var c = b.redSqr(); // D = 2 * ((X1 + B)^2 - A - C)\n\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d); // E = 3 * A\n\n    var e = a.redAdd(a).redIAdd(a); // F = E^2\n\n    var f = e.redSqr(); // 8 * C\n\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8); // X3 = F - 2 * D\n\n    nx = f.redISub(d).redISub(d); // Y3 = E * (D - X3) - 8 * C\n\n    ny = e.redMul(d.redISub(nx)).redISub(c8); // Z3 = 2 * Y1 * Z1\n\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz; // Z = 1\n\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n    // XX = X1^2\n    var xx = this.x.redSqr(); // YY = Y1^2\n\n    var yy = this.y.redSqr(); // YYYY = YY^2\n\n    var yyyy = yy.redSqr(); // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s); // M = 3 * XX + a\n\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a); // T = M^2 - 2 * S\n\n    var t = m.redSqr().redISub(s).redISub(s); // X3 = T\n\n    nx = t; // Y3 = M * (S - T) - 8 * YYYY\n\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8); // Z3 = 2 * Y1\n\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n    // delta = Z1^2\n    var delta = this.z.redSqr(); // gamma = Y1^2\n\n    var gamma = this.y.redSqr(); // beta = X1 * gamma\n\n    var beta = this.x.redMul(gamma); // alpha = 3 * (X1 - delta) * (X1 + delta)\n\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha); // X3 = alpha^2 - 8 * beta\n\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8); // Z3 = (Y1 + Z1)^2 - gamma - delta\n\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta); // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a; // 4M + 6S + 10A\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA) return this.dbl().add(this); // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n  // XX = X1^2\n\n  var xx = this.x.redSqr(); // YY = Y1^2\n\n  var yy = this.y.redSqr(); // ZZ = Z1^2\n\n  var zz = this.z.redSqr(); // YYYY = YY^2\n\n  var yyyy = yy.redSqr(); // M = 3 * XX + a * ZZ2; a = 0\n\n  var m = xx.redAdd(xx).redIAdd(xx); // MM = M^2\n\n  var mm = m.redSqr(); // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm); // EE = E^2\n\n  var ee = e.redSqr(); // T = 16*YYYY\n\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t); // U = (M + E)^2 - MM - EE - T\n\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t); // X3 = 4 * (X1 * EE - 4 * YY * U)\n\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx); // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny); // Z3 = (Z1 + E)^2 - ZZ - EE\n\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new bn(k, kbase);\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine') return this.eq(p.toJ());\n  if (this === p) return true; // x1 * z2^2 == x2 * z1^2\n\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0) return false; // y1 * z2^3 == y2 * z1^3\n\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0) return true;\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0) return false;\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0) return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) + ' y: ' + this.y.toString(16, 2) + ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nvar curve_1 = createCommonjsModule$1(function (module, exports) {\n  var curve = exports;\n  curve.base = base;\n  curve.short = short_1;\n  curve.mont = null;\n  curve.edwards = null;\n});\nvar curves_1 = createCommonjsModule$1(function (module, exports) {\n  var curves = exports;\n  var assert = utils_1$1.assert;\n\n  function PresetCurve(options) {\n    if (options.type === 'short') this.curve = new curve_1.short(options);else if (options.type === 'edwards') this.curve = new curve_1.edwards(options);else this.curve = new curve_1.mont(options);\n    this.g = this.curve.g;\n    this.n = this.curve.n;\n    this.hash = options.hash;\n    assert(this.g.validate(), 'Invalid curve');\n    assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n  }\n\n  curves.PresetCurve = PresetCurve;\n\n  function defineCurve(name, options) {\n    Object.defineProperty(curves, name, {\n      configurable: true,\n      enumerable: true,\n      get: function () {\n        var curve = new PresetCurve(options);\n        Object.defineProperty(curves, name, {\n          configurable: true,\n          enumerable: true,\n          value: curve\n        });\n        return curve;\n      }\n    });\n  }\n\n  defineCurve('p192', {\n    type: 'short',\n    prime: 'p192',\n    p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n    a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n    b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n    n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n    hash: hash_1.sha256,\n    gRed: false,\n    g: ['188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012', '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811']\n  });\n  defineCurve('p224', {\n    type: 'short',\n    prime: 'p224',\n    p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n    a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n    b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n    n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n    hash: hash_1.sha256,\n    gRed: false,\n    g: ['b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21', 'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34']\n  });\n  defineCurve('p256', {\n    type: 'short',\n    prime: null,\n    p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n    a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n    b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n    n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n    hash: hash_1.sha256,\n    gRed: false,\n    g: ['6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296', '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5']\n  });\n  defineCurve('p384', {\n    type: 'short',\n    prime: null,\n    p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 ffffffff',\n    a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 fffffffc',\n    b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' + '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n    n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' + 'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n    hash: hash_1.sha384,\n    gRed: false,\n    g: ['aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' + '5502f25d bf55296c 3a545e38 72760ab7', '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' + '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f']\n  });\n  defineCurve('p521', {\n    type: 'short',\n    prime: null,\n    p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff',\n    a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff fffffffc',\n    b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' + '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' + '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n    n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' + 'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n    hash: hash_1.sha512,\n    gRed: false,\n    g: ['000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' + '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' + 'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66', '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' + '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' + '3fad0761 353c7086 a272c240 88be9476 9fd16650']\n  });\n  defineCurve('curve25519', {\n    type: 'mont',\n    prime: 'p25519',\n    p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n    a: '76d06',\n    b: '1',\n    n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n    hash: hash_1.sha256,\n    gRed: false,\n    g: ['9']\n  });\n  defineCurve('ed25519', {\n    type: 'edwards',\n    prime: 'p25519',\n    p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n    a: '-1',\n    c: '1',\n    // -121665 * (121666^(-1)) (mod P)\n    d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n    n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n    hash: hash_1.sha256,\n    gRed: false,\n    g: ['216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a', // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658']\n  });\n  var pre;\n\n  try {\n    pre =\n    /*RicMoo:ethers:require(./precomputed/secp256k1)*/\n    null.crash();\n  } catch (e) {\n    pre = undefined;\n  }\n\n  defineCurve('secp256k1', {\n    type: 'short',\n    prime: 'k256',\n    p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n    a: '0',\n    b: '7',\n    n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n    h: '1',\n    hash: hash_1.sha256,\n    // Precomputed endomorphism\n    beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n    lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n    basis: [{\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3'\n    }, {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15'\n    }],\n    gRed: false,\n    g: ['79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798', '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8', pre]\n  });\n});\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG)) return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n  var entropy = utils_1.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils_1.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils_1.toArray(options.pers, options.persEnc || 'hex');\n  minimalisticAssert$1(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._init(entropy, nonce, pers);\n}\n\nvar hmacDrbg = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000; // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash_1.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac().update(this.V).update([0x00]);\n\n  if (seed) kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed) return;\n  this.K = this._hmac().update(this.V).update([0x01]).update(seed).digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils_1.toArray(entropy, entropyEnc);\n  add = utils_1.toArray(add, addEnc);\n  minimalisticAssert$1(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval) throw new Error('Reseed is required'); // Optional encoding\n\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  } // Optional additional data\n\n\n  if (add) {\n    add = utils_1.toArray(add, addEnc || 'hex');\n\n    this._update(add);\n  }\n\n  var temp = [];\n\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n\n  this._update(add);\n\n  this._reseed++;\n  return utils_1.encode(res, enc);\n};\n\nvar assert$3 = utils_1$1.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null; // KeyPair(ec, { priv: ..., pub: ... })\n\n  if (options.priv) this._importPrivate(options.priv, options.privEnc);\n  if (options.pub) this._importPublic(options.pub, options.pubEnc);\n}\n\nvar key = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair) return pub;\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair) return priv;\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n  if (pub.isInfinity()) return {\n    result: false,\n    reason: 'Invalid public key'\n  };\n  if (!pub.validate()) return {\n    result: false,\n    reason: 'Public key is not a point'\n  };\n  if (!pub.mul(this.ec.curve.n).isInfinity()) return {\n    result: false,\n    reason: 'Public key * N != O'\n  };\n  return {\n    result: true,\n    reason: null\n  };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub) this.pub = this.ec.g.mul(this.priv);\n  if (!enc) return this.pub;\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex') return this.priv.toString(16, 2);else return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new bn(key, enc || 16); // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert$3(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' || this.ec.curve.type === 'edwards') {\n      assert$3(key.x && key.y, 'Need both x and y coordinate');\n    }\n\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n\n  this.pub = this.ec.curve.decodePoint(key, enc);\n}; // ECDH\n\n\nKeyPair.prototype.derive = function derive(pub) {\n  if (!pub.validate()) {\n    assert$3(pub.validate(), 'public point not validated');\n  }\n\n  return pub.mul(this.priv).getX();\n}; // ECDSA\n\n\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) + ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n\nvar assert$4 = utils_1$1.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature) return options;\n  if (this._importDER(options, enc)) return;\n  assert$4(options.r && options.s, 'Signature without r or s');\n  this.r = new bn(options.r, 16);\n  this.s = new bn(options.s, 16);\n  if (options.recoveryParam === undefined) this.recoveryParam = null;else this.recoveryParam = options.recoveryParam;\n}\n\nvar signature = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n\n  var octetLen = initial & 0xf; // Indefinite length or overflow\n\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  } // Leading zeroes\n\n\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n\n  if (i === 0) {\n    return buf;\n  }\n\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils_1$1.toArray(data, enc);\n  var p = new Position();\n\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n\n  var len = getLength(data, p);\n\n  if (len === false) {\n    return false;\n  }\n\n  if (len + p.place !== data.length) {\n    return false;\n  }\n\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n\n  var rlen = getLength(data, p);\n\n  if (rlen === false) {\n    return false;\n  }\n\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n\n  var slen = getLength(data, p);\n\n  if (slen === false) {\n    return false;\n  }\n\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n\n  var s = data.slice(p.place, slen + p.place);\n\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new bn(r);\n  this.s = new bn(s);\n  this.recoveryParam = null;\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n\n  while (--octets) {\n    arr.push(len >>> (octets << 3) & 0xff);\n  }\n\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray(); // Pad values\n\n  if (r[0] & 0x80) r = [0].concat(r); // Pad values\n\n  if (s[0] & 0x80) s = [0].concat(s);\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n\n  var arr = [0x02];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [0x30];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils_1$1.encode(res, enc);\n};\n\nvar rand = function () {\n  throw new Error('unsupported');\n};\n\nvar assert$5 = utils_1$1.assert;\n\nfunction EC(options) {\n  if (!(this instanceof EC)) return new EC(options); // Shortcut `elliptic.ec(curve-name)`\n\n  if (typeof options === 'string') {\n    assert$5(Object.prototype.hasOwnProperty.call(curves_1, options), 'Unknown curve ' + options);\n    options = curves_1[options];\n  } // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n\n\n  if (options instanceof curves_1.PresetCurve) options = {\n    curve: options\n  };\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g; // Point on curve\n\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1); // Hash for function for DRBG\n\n  this.hash = options.hash || options.curve.hash;\n}\n\nvar ec = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new key(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return key.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return key.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options) options = {}; // Instantiate Hmac_DRBG\n\n  var drbg = new hmacDrbg({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray()\n  });\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new bn(2));\n\n  for (;;) {\n    var priv = new bn(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0) continue;\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0) msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0) return msg.sub(this.n);else return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n\n  if (!options) options = {};\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new bn(msg, 16)); // Zero-extend key to provide enough entropy\n\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes); // Zero-extend nonce to have the same byte size as N\n\n  var nonce = msg.toArray('be', bytes); // Instantiate Hmac_DRBG\n\n  var drbg = new hmacDrbg({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8'\n  }); // Number of bytes to generate\n\n  var ns1 = this.n.sub(new bn(1));\n\n  for (var iter = 0;; iter++) {\n    var k = options.k ? options.k(iter) : new bn(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0) continue;\n    var kp = this.g.mul(k);\n    if (kp.isInfinity()) continue;\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0) continue;\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0) continue;\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0); // Use complement of `s`, if it is > `n / 2`\n\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new signature({\n      r: r,\n      s: s,\n      recoveryParam: recoveryParam\n    });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature$1, key, enc) {\n  msg = this._truncateToN(new bn(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature$1 = new signature(signature$1, 'hex'); // Perform primitive values validation\n\n  var r = signature$1.r;\n  var s = signature$1.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return false; // Validate signature\n\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity()) return false;\n    return p.getX().umod(this.n).cmp(r) === 0;\n  } // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity()) return false; // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function (msg, signature$1, j, enc) {\n  assert$5((3 & j) === j, 'The recovery param is more than two bits');\n  signature$1 = new signature(signature$1, enc);\n  var n = this.n;\n  var e = new bn(msg);\n  var r = signature$1.r;\n  var s = signature$1.s; // A set LSB signifies that the y-coordinate is odd\n\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey) throw new Error('Unable to find sencond key candinate'); // 1.1. Let x = r + jn.\n\n  if (isSecondKey) r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);else r = this.curve.pointFromX(r, isYOdd);\n  var rInv = signature$1.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n); // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function (e, signature$1, Q, enc) {\n  signature$1 = new signature(signature$1, enc);\n  if (signature$1.recoveryParam !== null) return signature$1.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n\n    try {\n      Qprime = this.recoverPubKey(e, signature$1, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q)) return i;\n  }\n\n  throw new Error('Unable to find valid recovery factor');\n};\n\nvar elliptic_1 = createCommonjsModule$1(function (module, exports) {\n  var elliptic = exports;\n  elliptic.version =\n  /*RicMoo:ethers*/\n  {\n    version: \"6.5.4\"\n  }.version;\n  elliptic.utils = utils_1$1;\n\n  elliptic.rand = function () {\n    throw new Error('unsupported');\n  };\n\n  elliptic.curve = curve_1;\n  elliptic.curves = curves_1; // Protocols\n\n  elliptic.ec = ec;\n  elliptic.eddsa = null;\n});\nvar EC$1 = elliptic_1.ec;\nconst version$b = \"signing-key/5.4.0\";\nconst logger$g = new Logger(version$b);\nlet _curve = null;\n\nfunction getCurve() {\n  if (!_curve) {\n    _curve = new EC$1(\"secp256k1\");\n  }\n\n  return _curve;\n}\n\nclass SigningKey {\n  constructor(privateKey) {\n    defineReadOnly(this, \"curve\", \"secp256k1\");\n    defineReadOnly(this, \"privateKey\", hexlify(privateKey));\n    const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n    defineReadOnly(this, \"publicKey\", \"0x\" + keyPair.getPublic(false, \"hex\"));\n    defineReadOnly(this, \"compressedPublicKey\", \"0x\" + keyPair.getPublic(true, \"hex\"));\n    defineReadOnly(this, \"_isSigningKey\", true);\n  }\n\n  _addPoint(other) {\n    const p0 = getCurve().keyFromPublic(arrayify(this.publicKey));\n    const p1 = getCurve().keyFromPublic(arrayify(other));\n    return \"0x\" + p0.pub.add(p1.pub).encodeCompressed(\"hex\");\n  }\n\n  signDigest(digest) {\n    const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n    const digestBytes = arrayify(digest);\n\n    if (digestBytes.length !== 32) {\n      logger$g.throwArgumentError(\"bad digest length\", \"digest\", digest);\n    }\n\n    const signature = keyPair.sign(digestBytes, {\n      canonical: true\n    });\n    return splitSignature({\n      recoveryParam: signature.recoveryParam,\n      r: hexZeroPad(\"0x\" + signature.r.toString(16), 32),\n      s: hexZeroPad(\"0x\" + signature.s.toString(16), 32)\n    });\n  }\n\n  computeSharedSecret(otherKey) {\n    const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n    const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));\n    return hexZeroPad(\"0x\" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);\n  }\n\n  static isSigningKey(value) {\n    return !!(value && value._isSigningKey);\n  }\n\n}\n\nfunction recoverPublicKey(digest, signature) {\n  const sig = splitSignature(signature);\n  const rs = {\n    r: arrayify(sig.r),\n    s: arrayify(sig.s)\n  };\n  return \"0x\" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode(\"hex\", false);\n}\n\nfunction computePublicKey(key, compressed) {\n  const bytes = arrayify(key);\n\n  if (bytes.length === 32) {\n    const signingKey = new SigningKey(bytes);\n\n    if (compressed) {\n      return \"0x\" + getCurve().keyFromPrivate(bytes).getPublic(true, \"hex\");\n    }\n\n    return signingKey.publicKey;\n  } else if (bytes.length === 33) {\n    if (compressed) {\n      return hexlify(bytes);\n    }\n\n    return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(false, \"hex\");\n  } else if (bytes.length === 65) {\n    if (!compressed) {\n      return hexlify(bytes);\n    }\n\n    return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(true, \"hex\");\n  }\n\n  return logger$g.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\n\nconst version$c = \"transactions/5.4.0\";\nconst logger$h = new Logger(version$c);\nvar TransactionTypes;\n\n(function (TransactionTypes) {\n  TransactionTypes[TransactionTypes[\"legacy\"] = 0] = \"legacy\";\n  TransactionTypes[TransactionTypes[\"eip2930\"] = 1] = \"eip2930\";\n  TransactionTypes[TransactionTypes[\"eip1559\"] = 2] = \"eip1559\";\n})(TransactionTypes || (TransactionTypes = {})); ///////////////////////////////\n\n\nfunction handleAddress(value) {\n  if (value === \"0x\") {\n    return null;\n  }\n\n  return getAddress(value);\n}\n\nfunction handleNumber(value) {\n  if (value === \"0x\") {\n    return Zero$1;\n  }\n\n  return BigNumber.from(value);\n} // Legacy Transaction Fields\n\n\nconst transactionFields = [{\n  name: \"nonce\",\n  maxLength: 32,\n  numeric: true\n}, {\n  name: \"gasPrice\",\n  maxLength: 32,\n  numeric: true\n}, {\n  name: \"gasLimit\",\n  maxLength: 32,\n  numeric: true\n}, {\n  name: \"to\",\n  length: 20\n}, {\n  name: \"value\",\n  maxLength: 32,\n  numeric: true\n}, {\n  name: \"data\"\n}];\nconst allowedTransactionKeys$1 = {\n  chainId: true,\n  data: true,\n  gasLimit: true,\n  gasPrice: true,\n  nonce: true,\n  to: true,\n  type: true,\n  value: true\n};\n\nfunction computeAddress(key) {\n  const publicKey = computePublicKey(key);\n  return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));\n}\n\nfunction recoverAddress(digest, signature) {\n  return computeAddress(recoverPublicKey(arrayify(digest), signature));\n}\n\nfunction formatNumber(value, name) {\n  const result = stripZeros(BigNumber.from(value).toHexString());\n\n  if (result.length > 32) {\n    logger$h.throwArgumentError(\"invalid length for \" + name, \"transaction:\" + name, value);\n  }\n\n  return result;\n}\n\nfunction accessSetify(addr, storageKeys) {\n  return {\n    address: getAddress(addr),\n    storageKeys: (storageKeys || []).map((storageKey, index) => {\n      if (hexDataLength(storageKey) !== 32) {\n        logger$h.throwArgumentError(\"invalid access list storageKey\", `accessList[${addr}:${index}]`, storageKey);\n      }\n\n      return storageKey.toLowerCase();\n    })\n  };\n}\n\nfunction accessListify(value) {\n  if (Array.isArray(value)) {\n    return value.map((set, index) => {\n      if (Array.isArray(set)) {\n        if (set.length > 2) {\n          logger$h.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\", `value[${index}]`, set);\n        }\n\n        return accessSetify(set[0], set[1]);\n      }\n\n      return accessSetify(set.address, set.storageKeys);\n    });\n  }\n\n  const result = Object.keys(value).map(addr => {\n    const storageKeys = value[addr].reduce((accum, storageKey) => {\n      accum[storageKey] = true;\n      return accum;\n    }, {});\n    return accessSetify(addr, Object.keys(storageKeys).sort());\n  });\n  result.sort((a, b) => a.address.localeCompare(b.address));\n  return result;\n}\n\nfunction formatAccessList(value) {\n  return accessListify(value).map(set => [set.address, set.storageKeys]);\n}\n\nfunction _serializeEip1559(transaction, signature) {\n  // If there is an explicit gasPrice, make sure it matches the\n  // EIP-1559 fees; otherwise they may not understand what they\n  // think they are setting in terms of fee.\n  if (transaction.gasPrice != null) {\n    const gasPrice = BigNumber.from(transaction.gasPrice);\n    const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);\n\n    if (!gasPrice.eq(maxFeePerGas)) {\n      logger$h.throwArgumentError(\"mismatch EIP-1559 gasPrice != maxFeePerGas\", \"tx\", {\n        gasPrice,\n        maxFeePerGas\n      });\n    }\n  }\n\n  const fields = [formatNumber(transaction.chainId || 0, \"chainId\"), formatNumber(transaction.nonce || 0, \"nonce\"), formatNumber(transaction.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"), formatNumber(transaction.maxFeePerGas || 0, \"maxFeePerGas\"), formatNumber(transaction.gasLimit || 0, \"gasLimit\"), transaction.to != null ? getAddress(transaction.to) : \"0x\", formatNumber(transaction.value || 0, \"value\"), transaction.data || \"0x\", formatAccessList(transaction.accessList || [])];\n\n  if (signature) {\n    const sig = splitSignature(signature);\n    fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n    fields.push(stripZeros(sig.r));\n    fields.push(stripZeros(sig.s));\n  }\n\n  return hexConcat([\"0x02\", encode(fields)]);\n}\n\nfunction _serializeEip2930(transaction, signature) {\n  const fields = [formatNumber(transaction.chainId || 0, \"chainId\"), formatNumber(transaction.nonce || 0, \"nonce\"), formatNumber(transaction.gasPrice || 0, \"gasPrice\"), formatNumber(transaction.gasLimit || 0, \"gasLimit\"), transaction.to != null ? getAddress(transaction.to) : \"0x\", formatNumber(transaction.value || 0, \"value\"), transaction.data || \"0x\", formatAccessList(transaction.accessList || [])];\n\n  if (signature) {\n    const sig = splitSignature(signature);\n    fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n    fields.push(stripZeros(sig.r));\n    fields.push(stripZeros(sig.s));\n  }\n\n  return hexConcat([\"0x01\", encode(fields)]);\n} // Legacy Transactions and EIP-155\n\n\nfunction _serialize(transaction, signature) {\n  checkProperties(transaction, allowedTransactionKeys$1);\n  const raw = [];\n  transactionFields.forEach(function (fieldInfo) {\n    let value = transaction[fieldInfo.name] || [];\n    const options = {};\n\n    if (fieldInfo.numeric) {\n      options.hexPad = \"left\";\n    }\n\n    value = arrayify(hexlify(value, options)); // Fixed-width field\n\n    if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n      logger$h.throwArgumentError(\"invalid length for \" + fieldInfo.name, \"transaction:\" + fieldInfo.name, value);\n    } // Variable-width (with a maximum)\n\n\n    if (fieldInfo.maxLength) {\n      value = stripZeros(value);\n\n      if (value.length > fieldInfo.maxLength) {\n        logger$h.throwArgumentError(\"invalid length for \" + fieldInfo.name, \"transaction:\" + fieldInfo.name, value);\n      }\n    }\n\n    raw.push(hexlify(value));\n  });\n  let chainId = 0;\n\n  if (transaction.chainId != null) {\n    // A chainId was provided; if non-zero we'll use EIP-155\n    chainId = transaction.chainId;\n\n    if (typeof chainId !== \"number\") {\n      logger$h.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n    }\n  } else if (signature && !isBytesLike(signature) && signature.v > 28) {\n    // No chainId provided, but the signature is signing with EIP-155; derive chainId\n    chainId = Math.floor((signature.v - 35) / 2);\n  } // We have an EIP-155 transaction (chainId was specified and non-zero)\n\n\n  if (chainId !== 0) {\n    raw.push(hexlify(chainId)); // @TODO: hexValue?\n\n    raw.push(\"0x\");\n    raw.push(\"0x\");\n  } // Requesting an unsigned transation\n\n\n  if (!signature) {\n    return encode(raw);\n  } // The splitSignature will ensure the transaction has a recoveryParam in the\n  // case that the signTransaction function only adds a v.\n\n\n  const sig = splitSignature(signature); // We pushed a chainId and null r, s on for hashing only; remove those\n\n  let v = 27 + sig.recoveryParam;\n\n  if (chainId !== 0) {\n    raw.pop();\n    raw.pop();\n    raw.pop();\n    v += chainId * 2 + 8; // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\n\n    if (sig.v > 28 && sig.v !== v) {\n      logger$h.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n  } else if (sig.v !== v) {\n    logger$h.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n  }\n\n  raw.push(hexlify(v));\n  raw.push(stripZeros(arrayify(sig.r)));\n  raw.push(stripZeros(arrayify(sig.s)));\n  return encode(raw);\n}\n\nfunction serialize(transaction, signature) {\n  // Legacy and EIP-155 Transactions\n  if (transaction.type == null || transaction.type === 0) {\n    if (transaction.accessList != null) {\n      logger$h.throwArgumentError(\"untyped transactions do not support accessList; include type: 1\", \"transaction\", transaction);\n    }\n\n    return _serialize(transaction, signature);\n  } // Typed Transactions (EIP-2718)\n\n\n  switch (transaction.type) {\n    case 1:\n      return _serializeEip2930(transaction, signature);\n\n    case 2:\n      return _serializeEip1559(transaction, signature);\n  }\n\n  return logger$h.throwError(`unsupported transaction type: ${transaction.type}`, Logger.errors.UNSUPPORTED_OPERATION, {\n    operation: \"serializeTransaction\",\n    transactionType: transaction.type\n  });\n}\n\nfunction _parseEipSignature(tx, fields, serialize) {\n  try {\n    const recid = handleNumber(fields[0]).toNumber();\n\n    if (recid !== 0 && recid !== 1) {\n      throw new Error(\"bad recid\");\n    }\n\n    tx.v = recid;\n  } catch (error) {\n    logger$h.throwArgumentError(\"invalid v for transaction type: 1\", \"v\", fields[0]);\n  }\n\n  tx.r = hexZeroPad(fields[1], 32);\n  tx.s = hexZeroPad(fields[2], 32);\n\n  try {\n    const digest = keccak256(serialize(tx));\n    tx.from = recoverAddress(digest, {\n      r: tx.r,\n      s: tx.s,\n      recoveryParam: tx.v\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction _parseEip1559(payload) {\n  const transaction = decode(payload.slice(1));\n\n  if (transaction.length !== 9 && transaction.length !== 12) {\n    logger$h.throwArgumentError(\"invalid component count for transaction type: 2\", \"payload\", hexlify(payload));\n  }\n\n  const maxPriorityFeePerGas = handleNumber(transaction[2]);\n  const maxFeePerGas = handleNumber(transaction[3]);\n  const tx = {\n    type: 2,\n    chainId: handleNumber(transaction[0]).toNumber(),\n    nonce: handleNumber(transaction[1]).toNumber(),\n    maxPriorityFeePerGas: maxPriorityFeePerGas,\n    maxFeePerGas: maxFeePerGas,\n    gasPrice: null,\n    gasLimit: handleNumber(transaction[4]),\n    to: handleAddress(transaction[5]),\n    value: handleNumber(transaction[6]),\n    data: transaction[7],\n    accessList: accessListify(transaction[8])\n  }; // Unsigned EIP-1559 Transaction\n\n  if (transaction.length === 9) {\n    return tx;\n  }\n\n  tx.hash = keccak256(payload);\n\n  _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);\n\n  return tx;\n}\n\nfunction _parseEip2930(payload) {\n  const transaction = decode(payload.slice(1));\n\n  if (transaction.length !== 8 && transaction.length !== 11) {\n    logger$h.throwArgumentError(\"invalid component count for transaction type: 1\", \"payload\", hexlify(payload));\n  }\n\n  const tx = {\n    type: 1,\n    chainId: handleNumber(transaction[0]).toNumber(),\n    nonce: handleNumber(transaction[1]).toNumber(),\n    gasPrice: handleNumber(transaction[2]),\n    gasLimit: handleNumber(transaction[3]),\n    to: handleAddress(transaction[4]),\n    value: handleNumber(transaction[5]),\n    data: transaction[6],\n    accessList: accessListify(transaction[7])\n  }; // Unsigned EIP-2930 Transaction\n\n  if (transaction.length === 8) {\n    return tx;\n  }\n\n  tx.hash = keccak256(payload);\n\n  _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);\n\n  return tx;\n} // Legacy Transactions and EIP-155\n\n\nfunction _parse(rawTransaction) {\n  const transaction = decode(rawTransaction);\n\n  if (transaction.length !== 9 && transaction.length !== 6) {\n    logger$h.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n  }\n\n  const tx = {\n    nonce: handleNumber(transaction[0]).toNumber(),\n    gasPrice: handleNumber(transaction[1]),\n    gasLimit: handleNumber(transaction[2]),\n    to: handleAddress(transaction[3]),\n    value: handleNumber(transaction[4]),\n    data: transaction[5],\n    chainId: 0\n  }; // Legacy unsigned transaction\n\n  if (transaction.length === 6) {\n    return tx;\n  }\n\n  try {\n    tx.v = BigNumber.from(transaction[6]).toNumber();\n  } catch (error) {\n    console.log(error);\n    return tx;\n  }\n\n  tx.r = hexZeroPad(transaction[7], 32);\n  tx.s = hexZeroPad(transaction[8], 32);\n\n  if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n    // EIP-155 unsigned transaction\n    tx.chainId = tx.v;\n    tx.v = 0;\n  } else {\n    // Signed Tranasaction\n    tx.chainId = Math.floor((tx.v - 35) / 2);\n\n    if (tx.chainId < 0) {\n      tx.chainId = 0;\n    }\n\n    let recoveryParam = tx.v - 27;\n    const raw = transaction.slice(0, 6);\n\n    if (tx.chainId !== 0) {\n      raw.push(hexlify(tx.chainId));\n      raw.push(\"0x\");\n      raw.push(\"0x\");\n      recoveryParam -= tx.chainId * 2 + 8;\n    }\n\n    const digest = keccak256(encode(raw));\n\n    try {\n      tx.from = recoverAddress(digest, {\n        r: hexlify(tx.r),\n        s: hexlify(tx.s),\n        recoveryParam: recoveryParam\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    tx.hash = keccak256(rawTransaction);\n  }\n\n  tx.type = null;\n  return tx;\n}\n\nfunction parse(rawTransaction) {\n  const payload = arrayify(rawTransaction); // Legacy and EIP-155 Transactions\n\n  if (payload[0] > 0x7f) {\n    return _parse(payload);\n  } // Typed Transaction (EIP-2718)\n\n\n  switch (payload[0]) {\n    case 1:\n      return _parseEip2930(payload);\n\n    case 2:\n      return _parseEip1559(payload);\n  }\n\n  return logger$h.throwError(`unsupported transaction type: ${payload[0]}`, Logger.errors.UNSUPPORTED_OPERATION, {\n    operation: \"parseTransaction\",\n    transactionType: payload[0]\n  });\n}\n\nconst version$d = \"contracts/5.4.1\";\n\nvar __awaiter$4 = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$i = new Logger(version$d); ///////////////////////////////\n\nconst allowedTransactionKeys$2 = {\n  chainId: true,\n  data: true,\n  from: true,\n  gasLimit: true,\n  gasPrice: true,\n  nonce: true,\n  to: true,\n  value: true,\n  type: true,\n  accessList: true,\n  maxFeePerGas: true,\n  maxPriorityFeePerGas: true\n};\n\nfunction resolveName(resolver, nameOrPromise) {\n  return __awaiter$4(this, void 0, void 0, function* () {\n    const name = yield nameOrPromise; // If it is already an address, just use it (after adding checksum)\n\n    try {\n      return getAddress(name);\n    } catch (error) {}\n\n    if (!resolver) {\n      logger$i.throwError(\"a provider or signer is needed to resolve ENS names\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"resolveName\"\n      });\n    }\n\n    const address = yield resolver.resolveName(name);\n\n    if (address == null) {\n      logger$i.throwArgumentError(\"resolver or addr is not configured for ENS name\", \"name\", name);\n    }\n\n    return address;\n  });\n} // Recursively replaces ENS names with promises to resolve the name and resolves all properties\n\n\nfunction resolveAddresses(resolver, value, paramType) {\n  return __awaiter$4(this, void 0, void 0, function* () {\n    if (Array.isArray(paramType)) {\n      return yield Promise.all(paramType.map((paramType, index) => {\n        return resolveAddresses(resolver, Array.isArray(value) ? value[index] : value[paramType.name], paramType);\n      }));\n    }\n\n    if (paramType.type === \"address\") {\n      return yield resolveName(resolver, value);\n    }\n\n    if (paramType.type === \"tuple\") {\n      return yield resolveAddresses(resolver, value, paramType.components);\n    }\n\n    if (paramType.baseType === \"array\") {\n      if (!Array.isArray(value)) {\n        return Promise.reject(new Error(\"invalid value for array\"));\n      }\n\n      return yield Promise.all(value.map(v => resolveAddresses(resolver, v, paramType.arrayChildren)));\n    }\n\n    return value;\n  });\n}\n\nfunction populateTransaction(contract, fragment, args) {\n  return __awaiter$4(this, void 0, void 0, function* () {\n    // If an extra argument is given, it is overrides\n    let overrides = {};\n\n    if (args.length === fragment.inputs.length + 1 && typeof args[args.length - 1] === \"object\") {\n      overrides = shallowCopy(args.pop());\n    } // Make sure the parameter count matches\n\n\n    logger$i.checkArgumentCount(args.length, fragment.inputs.length, \"passed to contract\"); // Populate \"from\" override (allow promises)\n\n    if (contract.signer) {\n      if (overrides.from) {\n        // Contracts with a Signer are from the Signer's frame-of-reference;\n        // but we allow overriding \"from\" if it matches the signer\n        overrides.from = resolveProperties({\n          override: resolveName(contract.signer, overrides.from),\n          signer: contract.signer.getAddress()\n        }).then(check => __awaiter$4(this, void 0, void 0, function* () {\n          if (getAddress(check.signer) !== check.override) {\n            logger$i.throwError(\"Contract with a Signer cannot override from\", Logger.errors.UNSUPPORTED_OPERATION, {\n              operation: \"overrides.from\"\n            });\n          }\n\n          return check.override;\n        }));\n      } else {\n        overrides.from = contract.signer.getAddress();\n      }\n    } else if (overrides.from) {\n      overrides.from = resolveName(contract.provider, overrides.from); //} else {\n      // Contracts without a signer can override \"from\", and if\n      // unspecified the zero address is used\n      //overrides.from = AddressZero;\n    } // Wait for all dependencies to be resolved (prefer the signer over the provider)\n\n\n    const resolved = yield resolveProperties({\n      args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),\n      address: contract.resolvedAddress,\n      overrides: resolveProperties(overrides) || {}\n    }); // The ABI coded transaction\n\n    const data = contract.interface.encodeFunctionData(fragment, resolved.args);\n    const tx = {\n      data: data,\n      to: resolved.address\n    }; // Resolved Overrides\n\n    const ro = resolved.overrides; // Populate simple overrides\n\n    if (ro.nonce != null) {\n      tx.nonce = BigNumber.from(ro.nonce).toNumber();\n    }\n\n    if (ro.gasLimit != null) {\n      tx.gasLimit = BigNumber.from(ro.gasLimit);\n    }\n\n    if (ro.gasPrice != null) {\n      tx.gasPrice = BigNumber.from(ro.gasPrice);\n    }\n\n    if (ro.maxFeePerGas != null) {\n      tx.maxFeePerGas = BigNumber.from(ro.maxFeePerGas);\n    }\n\n    if (ro.maxPriorityFeePerGas != null) {\n      tx.maxPriorityFeePerGas = BigNumber.from(ro.maxPriorityFeePerGas);\n    }\n\n    if (ro.from != null) {\n      tx.from = ro.from;\n    }\n\n    if (ro.type != null) {\n      tx.type = ro.type;\n    }\n\n    if (ro.accessList != null) {\n      tx.accessList = accessListify(ro.accessList);\n    } // If there was no \"gasLimit\" override, but the ABI specifies a default, use it\n\n\n    if (tx.gasLimit == null && fragment.gas != null) {\n      // Conmpute the intrinisic gas cost for this transaction\n      // @TODO: This is based on the yellow paper as of Petersburg; this is something\n      // we may wish to parameterize in v6 as part of the Network object. Since this\n      // is always a non-nil to address, we can ignore G_create, but may wish to add\n      // similar logic to the ContractFactory.\n      let intrinsic = 21000;\n      const bytes = arrayify(data);\n\n      for (let i = 0; i < bytes.length; i++) {\n        intrinsic += 4;\n\n        if (bytes[i]) {\n          intrinsic += 64;\n        }\n      }\n\n      tx.gasLimit = BigNumber.from(fragment.gas).add(intrinsic);\n    } // Populate \"value\" override\n\n\n    if (ro.value) {\n      const roValue = BigNumber.from(ro.value);\n\n      if (!roValue.isZero() && !fragment.payable) {\n        logger$i.throwError(\"non-payable method cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"overrides.value\",\n          value: overrides.value\n        });\n      }\n\n      tx.value = roValue;\n    } // Remvoe the overrides\n\n\n    delete overrides.nonce;\n    delete overrides.gasLimit;\n    delete overrides.gasPrice;\n    delete overrides.from;\n    delete overrides.value;\n    delete overrides.type;\n    delete overrides.accessList;\n    delete overrides.maxFeePerGas;\n    delete overrides.maxPriorityFeePerGas; // Make sure there are no stray overrides, which may indicate a\n    // typo or using an unsupported key.\n\n    const leftovers = Object.keys(overrides).filter(key => overrides[key] != null);\n\n    if (leftovers.length) {\n      logger$i.throwError(`cannot override ${leftovers.map(l => JSON.stringify(l)).join(\",\")}`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"overrides\",\n        overrides: leftovers\n      });\n    }\n\n    return tx;\n  });\n}\n\nfunction buildPopulate(contract, fragment) {\n  return function (...args) {\n    return populateTransaction(contract, fragment, args);\n  };\n}\n\nfunction buildEstimate(contract, fragment) {\n  const signerOrProvider = contract.signer || contract.provider;\n  return function (...args) {\n    return __awaiter$4(this, void 0, void 0, function* () {\n      if (!signerOrProvider) {\n        logger$i.throwError(\"estimate require a provider or signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"estimateGas\"\n        });\n      }\n\n      const tx = yield populateTransaction(contract, fragment, args);\n      return yield signerOrProvider.estimateGas(tx);\n    });\n  };\n}\n\nfunction buildCall(contract, fragment, collapseSimple) {\n  const signerOrProvider = contract.signer || contract.provider;\n  return function (...args) {\n    return __awaiter$4(this, void 0, void 0, function* () {\n      // Extract the \"blockTag\" override if present\n      let blockTag = undefined;\n\n      if (args.length === fragment.inputs.length + 1 && typeof args[args.length - 1] === \"object\") {\n        const overrides = shallowCopy(args.pop());\n\n        if (overrides.blockTag != null) {\n          blockTag = yield overrides.blockTag;\n        }\n\n        delete overrides.blockTag;\n        args.push(overrides);\n      } // If the contract was just deployed, wait until it is mined\n\n\n      if (contract.deployTransaction != null) {\n        yield contract._deployed(blockTag);\n      } // Call a node and get the result\n\n\n      const tx = yield populateTransaction(contract, fragment, args);\n      const result = yield signerOrProvider.call(tx, blockTag);\n\n      try {\n        let value = contract.interface.decodeFunctionResult(fragment, result);\n\n        if (collapseSimple && fragment.outputs.length === 1) {\n          value = value[0];\n        }\n\n        return value;\n      } catch (error) {\n        if (error.code === Logger.errors.CALL_EXCEPTION) {\n          error.address = contract.address;\n          error.args = args;\n          error.transaction = tx;\n        }\n\n        throw error;\n      }\n    });\n  };\n}\n\nfunction buildSend(contract, fragment) {\n  return function (...args) {\n    return __awaiter$4(this, void 0, void 0, function* () {\n      if (!contract.signer) {\n        logger$i.throwError(\"sending a transaction requires a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"sendTransaction\"\n        });\n      } // If the contract was just deployed, wait until it is minded\n\n\n      if (contract.deployTransaction != null) {\n        yield contract._deployed();\n      }\n\n      const txRequest = yield populateTransaction(contract, fragment, args);\n      const tx = yield contract.signer.sendTransaction(txRequest); // Tweak the tw.wait so the receipt has extra properties\n\n      const wait = tx.wait.bind(tx);\n\n      tx.wait = confirmations => {\n        return wait(confirmations).then(receipt => {\n          receipt.events = receipt.logs.map(log => {\n            let event = deepCopy(log);\n            let parsed = null;\n\n            try {\n              parsed = contract.interface.parseLog(log);\n            } catch (e) {} // Successfully parsed the event log; include it\n\n\n            if (parsed) {\n              event.args = parsed.args;\n\n              event.decode = (data, topics) => {\n                return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);\n              };\n\n              event.event = parsed.name;\n              event.eventSignature = parsed.signature;\n            } // Useful operations\n\n\n            event.removeListener = () => {\n              return contract.provider;\n            };\n\n            event.getBlock = () => {\n              return contract.provider.getBlock(receipt.blockHash);\n            };\n\n            event.getTransaction = () => {\n              return contract.provider.getTransaction(receipt.transactionHash);\n            };\n\n            event.getTransactionReceipt = () => {\n              return Promise.resolve(receipt);\n            };\n\n            return event;\n          });\n          return receipt;\n        });\n      };\n\n      return tx;\n    });\n  };\n}\n\nfunction buildDefault(contract, fragment, collapseSimple) {\n  if (fragment.constant) {\n    return buildCall(contract, fragment, collapseSimple);\n  }\n\n  return buildSend(contract, fragment);\n}\n\nfunction getEventTag(filter) {\n  if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n    return \"*\";\n  }\n\n  return (filter.address || \"*\") + \"@\" + (filter.topics ? filter.topics.map(topic => {\n    if (Array.isArray(topic)) {\n      return topic.join(\"|\");\n    }\n\n    return topic;\n  }).join(\":\") : \"\");\n}\n\nclass RunningEvent {\n  constructor(tag, filter) {\n    defineReadOnly(this, \"tag\", tag);\n    defineReadOnly(this, \"filter\", filter);\n    this._listeners = [];\n  }\n\n  addListener(listener, once) {\n    this._listeners.push({\n      listener: listener,\n      once: once\n    });\n  }\n\n  removeListener(listener) {\n    let done = false;\n    this._listeners = this._listeners.filter(item => {\n      if (done || item.listener !== listener) {\n        return true;\n      }\n\n      done = true;\n      return false;\n    });\n  }\n\n  removeAllListeners() {\n    this._listeners = [];\n  }\n\n  listeners() {\n    return this._listeners.map(i => i.listener);\n  }\n\n  listenerCount() {\n    return this._listeners.length;\n  }\n\n  run(args) {\n    const listenerCount = this.listenerCount();\n    this._listeners = this._listeners.filter(item => {\n      const argsCopy = args.slice(); // Call the callback in the next event loop\n\n      setTimeout(() => {\n        item.listener.apply(this, argsCopy);\n      }, 0); // Reschedule it if it not \"once\"\n\n      return !item.once;\n    });\n    return listenerCount;\n  }\n\n  prepareEvent(event) {} // Returns the array that will be applied to an emit\n\n\n  getEmit(event) {\n    return [event];\n  }\n\n}\n\nclass ErrorRunningEvent extends RunningEvent {\n  constructor() {\n    super(\"error\", null);\n  }\n\n} // @TODO Fragment should inherit Wildcard? and just override getEmit?\n//       or have a common abstract super class, with enough constructor\n//       options to configure both.\n// A Fragment Event will populate all the properties that Wildcard\n// will, and additioanlly dereference the arguments when emitting\n\n\nclass FragmentRunningEvent extends RunningEvent {\n  constructor(address, contractInterface, fragment, topics) {\n    const filter = {\n      address: address\n    };\n    let topic = contractInterface.getEventTopic(fragment);\n\n    if (topics) {\n      if (topic !== topics[0]) {\n        logger$i.throwArgumentError(\"topic mismatch\", \"topics\", topics);\n      }\n\n      filter.topics = topics.slice();\n    } else {\n      filter.topics = [topic];\n    }\n\n    super(getEventTag(filter), filter);\n    defineReadOnly(this, \"address\", address);\n    defineReadOnly(this, \"interface\", contractInterface);\n    defineReadOnly(this, \"fragment\", fragment);\n  }\n\n  prepareEvent(event) {\n    super.prepareEvent(event);\n    event.event = this.fragment.name;\n    event.eventSignature = this.fragment.format();\n\n    event.decode = (data, topics) => {\n      return this.interface.decodeEventLog(this.fragment, data, topics);\n    };\n\n    try {\n      event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);\n    } catch (error) {\n      event.args = null;\n      event.decodeError = error;\n    }\n  }\n\n  getEmit(event) {\n    const errors = checkResultErrors(event.args);\n\n    if (errors.length) {\n      throw errors[0].error;\n    }\n\n    const args = (event.args || []).slice();\n    args.push(event);\n    return args;\n  }\n\n} // A Wildard Event will attempt to populate:\n//  - event            The name of the event name\n//  - eventSignature   The full signature of the event\n//  - decode           A function to decode data and topics\n//  - args             The decoded data and topics\n\n\nclass WildcardRunningEvent extends RunningEvent {\n  constructor(address, contractInterface) {\n    super(\"*\", {\n      address: address\n    });\n    defineReadOnly(this, \"address\", address);\n    defineReadOnly(this, \"interface\", contractInterface);\n  }\n\n  prepareEvent(event) {\n    super.prepareEvent(event);\n\n    try {\n      const parsed = this.interface.parseLog(event);\n      event.event = parsed.name;\n      event.eventSignature = parsed.signature;\n\n      event.decode = (data, topics) => {\n        return this.interface.decodeEventLog(parsed.eventFragment, data, topics);\n      };\n\n      event.args = parsed.args;\n    } catch (error) {// No matching event\n    }\n  }\n\n}\n\nclass BaseContract {\n  constructor(addressOrName, contractInterface, signerOrProvider) {\n    logger$i.checkNew(new.target, Contract); // @TODO: Maybe still check the addressOrName looks like a valid address or name?\n    //address = getAddress(address);\n\n    defineReadOnly(this, \"interface\", getStatic(new.target, \"getInterface\")(contractInterface));\n\n    if (signerOrProvider == null) {\n      defineReadOnly(this, \"provider\", null);\n      defineReadOnly(this, \"signer\", null);\n    } else if (Signer.isSigner(signerOrProvider)) {\n      defineReadOnly(this, \"provider\", signerOrProvider.provider || null);\n      defineReadOnly(this, \"signer\", signerOrProvider);\n    } else if (Provider.isProvider(signerOrProvider)) {\n      defineReadOnly(this, \"provider\", signerOrProvider);\n      defineReadOnly(this, \"signer\", null);\n    } else {\n      logger$i.throwArgumentError(\"invalid signer or provider\", \"signerOrProvider\", signerOrProvider);\n    }\n\n    defineReadOnly(this, \"callStatic\", {});\n    defineReadOnly(this, \"estimateGas\", {});\n    defineReadOnly(this, \"functions\", {});\n    defineReadOnly(this, \"populateTransaction\", {});\n    defineReadOnly(this, \"filters\", {});\n    {\n      const uniqueFilters = {};\n      Object.keys(this.interface.events).forEach(eventSignature => {\n        const event = this.interface.events[eventSignature];\n        defineReadOnly(this.filters, eventSignature, (...args) => {\n          return {\n            address: this.address,\n            topics: this.interface.encodeFilterTopics(event, args)\n          };\n        });\n\n        if (!uniqueFilters[event.name]) {\n          uniqueFilters[event.name] = [];\n        }\n\n        uniqueFilters[event.name].push(eventSignature);\n      });\n      Object.keys(uniqueFilters).forEach(name => {\n        const filters = uniqueFilters[name];\n\n        if (filters.length === 1) {\n          defineReadOnly(this.filters, name, this.filters[filters[0]]);\n        } else {\n          logger$i.warn(`Duplicate definition of ${name} (${filters.join(\", \")})`);\n        }\n      });\n    }\n    defineReadOnly(this, \"_runningEvents\", {});\n    defineReadOnly(this, \"_wrappedEmits\", {});\n\n    if (addressOrName == null) {\n      logger$i.throwArgumentError(\"invalid contract address or ENS name\", \"addressOrName\", addressOrName);\n    }\n\n    defineReadOnly(this, \"address\", addressOrName);\n\n    if (this.provider) {\n      defineReadOnly(this, \"resolvedAddress\", resolveName(this.provider, addressOrName));\n    } else {\n      try {\n        defineReadOnly(this, \"resolvedAddress\", Promise.resolve(getAddress(addressOrName)));\n      } catch (error) {\n        // Without a provider, we cannot use ENS names\n        logger$i.throwError(\"provider is required to use ENS name as contract address\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"new Contract\"\n        });\n      }\n    }\n\n    const uniqueNames = {};\n    const uniqueSignatures = {};\n    Object.keys(this.interface.functions).forEach(signature => {\n      const fragment = this.interface.functions[signature]; // Check that the signature is unique; if not the ABI generation has\n      // not been cleaned or may be incorrectly generated\n\n      if (uniqueSignatures[signature]) {\n        logger$i.warn(`Duplicate ABI entry for ${JSON.stringify(signature)}`);\n        return;\n      }\n\n      uniqueSignatures[signature] = true; // Track unique names; we only expose bare named functions if they\n      // are ambiguous\n\n      {\n        const name = fragment.name;\n\n        if (!uniqueNames[name]) {\n          uniqueNames[name] = [];\n        }\n\n        uniqueNames[name].push(signature);\n      }\n\n      if (this[signature] == null) {\n        defineReadOnly(this, signature, buildDefault(this, fragment, true));\n      } // We do not collapse simple calls on this bucket, which allows\n      // frameworks to safely use this without introspection as well as\n      // allows decoding error recovery.\n\n\n      if (this.functions[signature] == null) {\n        defineReadOnly(this.functions, signature, buildDefault(this, fragment, false));\n      }\n\n      if (this.callStatic[signature] == null) {\n        defineReadOnly(this.callStatic, signature, buildCall(this, fragment, true));\n      }\n\n      if (this.populateTransaction[signature] == null) {\n        defineReadOnly(this.populateTransaction, signature, buildPopulate(this, fragment));\n      }\n\n      if (this.estimateGas[signature] == null) {\n        defineReadOnly(this.estimateGas, signature, buildEstimate(this, fragment));\n      }\n    });\n    Object.keys(uniqueNames).forEach(name => {\n      // Ambiguous names to not get attached as bare names\n      const signatures = uniqueNames[name];\n\n      if (signatures.length > 1) {\n        return;\n      }\n\n      const signature = signatures[0]; // If overwriting a member property that is null, swallow the error\n\n      try {\n        if (this[name] == null) {\n          defineReadOnly(this, name, this[signature]);\n        }\n      } catch (e) {}\n\n      if (this.functions[name] == null) {\n        defineReadOnly(this.functions, name, this.functions[signature]);\n      }\n\n      if (this.callStatic[name] == null) {\n        defineReadOnly(this.callStatic, name, this.callStatic[signature]);\n      }\n\n      if (this.populateTransaction[name] == null) {\n        defineReadOnly(this.populateTransaction, name, this.populateTransaction[signature]);\n      }\n\n      if (this.estimateGas[name] == null) {\n        defineReadOnly(this.estimateGas, name, this.estimateGas[signature]);\n      }\n    });\n  }\n\n  static getContractAddress(transaction) {\n    return getContractAddress(transaction);\n  }\n\n  static getInterface(contractInterface) {\n    if (Interface.isInterface(contractInterface)) {\n      return contractInterface;\n    }\n\n    return new Interface(contractInterface);\n  } // @TODO: Allow timeout?\n\n\n  deployed() {\n    return this._deployed();\n  }\n\n  _deployed(blockTag) {\n    if (!this._deployedPromise) {\n      // If we were just deployed, we know the transaction we should occur in\n      if (this.deployTransaction) {\n        this._deployedPromise = this.deployTransaction.wait().then(() => {\n          return this;\n        });\n      } else {\n        // @TODO: Once we allow a timeout to be passed in, we will wait\n        // up to that many blocks for getCode\n        // Otherwise, poll for our code to be deployed\n        this._deployedPromise = this.provider.getCode(this.address, blockTag).then(code => {\n          if (code === \"0x\") {\n            logger$i.throwError(\"contract not deployed\", Logger.errors.UNSUPPORTED_OPERATION, {\n              contractAddress: this.address,\n              operation: \"getDeployed\"\n            });\n          }\n\n          return this;\n        });\n      }\n    }\n\n    return this._deployedPromise;\n  } // @TODO:\n  // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>\n  // @TODO:\n  // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>\n\n\n  fallback(overrides) {\n    if (!this.signer) {\n      logger$i.throwError(\"sending a transactions require a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"sendTransaction(fallback)\"\n      });\n    }\n\n    const tx = shallowCopy(overrides || {});\n    [\"from\", \"to\"].forEach(function (key) {\n      if (tx[key] == null) {\n        return;\n      }\n\n      logger$i.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: key\n      });\n    });\n    tx.to = this.resolvedAddress;\n    return this.deployed().then(() => {\n      return this.signer.sendTransaction(tx);\n    });\n  } // Reconnect to a different signer or provider\n\n\n  connect(signerOrProvider) {\n    if (typeof signerOrProvider === \"string\") {\n      signerOrProvider = new VoidSigner(signerOrProvider, this.provider);\n    }\n\n    const contract = new this.constructor(this.address, this.interface, signerOrProvider);\n\n    if (this.deployTransaction) {\n      defineReadOnly(contract, \"deployTransaction\", this.deployTransaction);\n    }\n\n    return contract;\n  } // Re-attach to a different on-chain instance of this contract\n\n\n  attach(addressOrName) {\n    return new this.constructor(addressOrName, this.interface, this.signer || this.provider);\n  }\n\n  static isIndexed(value) {\n    return Indexed.isIndexed(value);\n  }\n\n  _normalizeRunningEvent(runningEvent) {\n    // Already have an instance of this event running; we can re-use it\n    if (this._runningEvents[runningEvent.tag]) {\n      return this._runningEvents[runningEvent.tag];\n    }\n\n    return runningEvent;\n  }\n\n  _getRunningEvent(eventName) {\n    if (typeof eventName === \"string\") {\n      // Listen for \"error\" events (if your contract has an error event, include\n      // the full signature to bypass this special event keyword)\n      if (eventName === \"error\") {\n        return this._normalizeRunningEvent(new ErrorRunningEvent());\n      } // Listen for any event that is registered\n\n\n      if (eventName === \"event\") {\n        return this._normalizeRunningEvent(new RunningEvent(\"event\", null));\n      } // Listen for any event\n\n\n      if (eventName === \"*\") {\n        return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n      } // Get the event Fragment (throws if ambiguous/unknown event)\n\n\n      const fragment = this.interface.getEvent(eventName);\n      return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));\n    } // We have topics to filter by...\n\n\n    if (eventName.topics && eventName.topics.length > 0) {\n      // Is it a known topichash? (throws if no matching topichash)\n      try {\n        const topic = eventName.topics[0];\n\n        if (typeof topic !== \"string\") {\n          throw new Error(\"invalid topic\"); // @TODO: May happen for anonymous events\n        }\n\n        const fragment = this.interface.getEvent(topic);\n        return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));\n      } catch (error) {} // Filter by the unknown topichash\n\n\n      const filter = {\n        address: this.address,\n        topics: eventName.topics\n      };\n      return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));\n    }\n\n    return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n  }\n\n  _checkRunningEvents(runningEvent) {\n    if (runningEvent.listenerCount() === 0) {\n      delete this._runningEvents[runningEvent.tag]; // If we have a poller for this, remove it\n\n      const emit = this._wrappedEmits[runningEvent.tag];\n\n      if (emit && runningEvent.filter) {\n        this.provider.off(runningEvent.filter, emit);\n        delete this._wrappedEmits[runningEvent.tag];\n      }\n    }\n  } // Subclasses can override this to gracefully recover\n  // from parse errors if they wish\n\n\n  _wrapEvent(runningEvent, log, listener) {\n    const event = deepCopy(log);\n\n    event.removeListener = () => {\n      if (!listener) {\n        return;\n      }\n\n      runningEvent.removeListener(listener);\n\n      this._checkRunningEvents(runningEvent);\n    };\n\n    event.getBlock = () => {\n      return this.provider.getBlock(log.blockHash);\n    };\n\n    event.getTransaction = () => {\n      return this.provider.getTransaction(log.transactionHash);\n    };\n\n    event.getTransactionReceipt = () => {\n      return this.provider.getTransactionReceipt(log.transactionHash);\n    }; // This may throw if the topics and data mismatch the signature\n\n\n    runningEvent.prepareEvent(event);\n    return event;\n  }\n\n  _addEventListener(runningEvent, listener, once) {\n    if (!this.provider) {\n      logger$i.throwError(\"events require a provider or a signer with a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"once\"\n      });\n    }\n\n    runningEvent.addListener(listener, once); // Track this running event and its listeners (may already be there; but no hard in updating)\n\n    this._runningEvents[runningEvent.tag] = runningEvent; // If we are not polling the provider, start polling\n\n    if (!this._wrappedEmits[runningEvent.tag]) {\n      const wrappedEmit = log => {\n        let event = this._wrapEvent(runningEvent, log, listener); // Try to emit the result for the parameterized event...\n\n\n        if (event.decodeError == null) {\n          try {\n            const args = runningEvent.getEmit(event);\n            this.emit(runningEvent.filter, ...args);\n          } catch (error) {\n            event.decodeError = error.error;\n          }\n        } // Always emit \"event\" for fragment-base events\n\n\n        if (runningEvent.filter != null) {\n          this.emit(\"event\", event);\n        } // Emit \"error\" if there was an error\n\n\n        if (event.decodeError != null) {\n          this.emit(\"error\", event.decodeError, event);\n        }\n      };\n\n      this._wrappedEmits[runningEvent.tag] = wrappedEmit; // Special events, like \"error\" do not have a filter\n\n      if (runningEvent.filter != null) {\n        this.provider.on(runningEvent.filter, wrappedEmit);\n      }\n    }\n  }\n\n  queryFilter(event, fromBlockOrBlockhash, toBlock) {\n    const runningEvent = this._getRunningEvent(event);\n\n    const filter = shallowCopy(runningEvent.filter);\n\n    if (typeof fromBlockOrBlockhash === \"string\" && isHexString(fromBlockOrBlockhash, 32)) {\n      if (toBlock != null) {\n        logger$i.throwArgumentError(\"cannot specify toBlock with blockhash\", \"toBlock\", toBlock);\n      }\n\n      filter.blockHash = fromBlockOrBlockhash;\n    } else {\n      filter.fromBlock = fromBlockOrBlockhash != null ? fromBlockOrBlockhash : 0;\n      filter.toBlock = toBlock != null ? toBlock : \"latest\";\n    }\n\n    return this.provider.getLogs(filter).then(logs => {\n      return logs.map(log => this._wrapEvent(runningEvent, log, null));\n    });\n  }\n\n  on(event, listener) {\n    this._addEventListener(this._getRunningEvent(event), listener, false);\n\n    return this;\n  }\n\n  once(event, listener) {\n    this._addEventListener(this._getRunningEvent(event), listener, true);\n\n    return this;\n  }\n\n  emit(eventName, ...args) {\n    if (!this.provider) {\n      return false;\n    }\n\n    const runningEvent = this._getRunningEvent(eventName);\n\n    const result = runningEvent.run(args) > 0; // May have drained all the \"once\" events; check for living events\n\n    this._checkRunningEvents(runningEvent);\n\n    return result;\n  }\n\n  listenerCount(eventName) {\n    if (!this.provider) {\n      return 0;\n    }\n\n    if (eventName == null) {\n      return Object.keys(this._runningEvents).reduce((accum, key) => {\n        return accum + this._runningEvents[key].listenerCount();\n      }, 0);\n    }\n\n    return this._getRunningEvent(eventName).listenerCount();\n  }\n\n  listeners(eventName) {\n    if (!this.provider) {\n      return [];\n    }\n\n    if (eventName == null) {\n      const result = [];\n\n      for (let tag in this._runningEvents) {\n        this._runningEvents[tag].listeners().forEach(listener => {\n          result.push(listener);\n        });\n      }\n\n      return result;\n    }\n\n    return this._getRunningEvent(eventName).listeners();\n  }\n\n  removeAllListeners(eventName) {\n    if (!this.provider) {\n      return this;\n    }\n\n    if (eventName == null) {\n      for (const tag in this._runningEvents) {\n        const runningEvent = this._runningEvents[tag];\n        runningEvent.removeAllListeners();\n\n        this._checkRunningEvents(runningEvent);\n      }\n\n      return this;\n    } // Delete any listeners\n\n\n    const runningEvent = this._getRunningEvent(eventName);\n\n    runningEvent.removeAllListeners();\n\n    this._checkRunningEvents(runningEvent);\n\n    return this;\n  }\n\n  off(eventName, listener) {\n    if (!this.provider) {\n      return this;\n    }\n\n    const runningEvent = this._getRunningEvent(eventName);\n\n    runningEvent.removeListener(listener);\n\n    this._checkRunningEvents(runningEvent);\n\n    return this;\n  }\n\n  removeListener(eventName, listener) {\n    return this.off(eventName, listener);\n  }\n\n}\n\nclass Contract extends BaseContract {}\n\nclass ContractFactory {\n  constructor(contractInterface, bytecode, signer) {\n    let bytecodeHex = null;\n\n    if (typeof bytecode === \"string\") {\n      bytecodeHex = bytecode;\n    } else if (isBytes(bytecode)) {\n      bytecodeHex = hexlify(bytecode);\n    } else if (bytecode && typeof bytecode.object === \"string\") {\n      // Allow the bytecode object from the Solidity compiler\n      bytecodeHex = bytecode.object;\n    } else {\n      // Crash in the next verification step\n      bytecodeHex = \"!\";\n    } // Make sure it is 0x prefixed\n\n\n    if (bytecodeHex.substring(0, 2) !== \"0x\") {\n      bytecodeHex = \"0x\" + bytecodeHex;\n    } // Make sure the final result is valid bytecode\n\n\n    if (!isHexString(bytecodeHex) || bytecodeHex.length % 2) {\n      logger$i.throwArgumentError(\"invalid bytecode\", \"bytecode\", bytecode);\n    } // If we have a signer, make sure it is valid\n\n\n    if (signer && !Signer.isSigner(signer)) {\n      logger$i.throwArgumentError(\"invalid signer\", \"signer\", signer);\n    }\n\n    defineReadOnly(this, \"bytecode\", bytecodeHex);\n    defineReadOnly(this, \"interface\", getStatic(new.target, \"getInterface\")(contractInterface));\n    defineReadOnly(this, \"signer\", signer || null);\n  } // @TODO: Future; rename to populteTransaction?\n\n\n  getDeployTransaction(...args) {\n    let tx = {}; // If we have 1 additional argument, we allow transaction overrides\n\n    if (args.length === this.interface.deploy.inputs.length + 1 && typeof args[args.length - 1] === \"object\") {\n      tx = shallowCopy(args.pop());\n\n      for (const key in tx) {\n        if (!allowedTransactionKeys$2[key]) {\n          throw new Error(\"unknown transaction override \" + key);\n        }\n      }\n    } // Do not allow these to be overridden in a deployment transaction\n\n\n    [\"data\", \"from\", \"to\"].forEach(key => {\n      if (tx[key] == null) {\n        return;\n      }\n\n      logger$i.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: key\n      });\n    });\n\n    if (tx.value) {\n      const value = BigNumber.from(tx.value);\n\n      if (!value.isZero() && !this.interface.deploy.payable) {\n        logger$i.throwError(\"non-payable constructor cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"overrides.value\",\n          value: tx.value\n        });\n      }\n    } // Make sure the call matches the constructor signature\n\n\n    logger$i.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\"); // Set the data to the bytecode + the encoded constructor arguments\n\n    tx.data = hexlify(concat([this.bytecode, this.interface.encodeDeploy(args)]));\n    return tx;\n  }\n\n  deploy(...args) {\n    return __awaiter$4(this, void 0, void 0, function* () {\n      let overrides = {}; // If 1 extra parameter was passed in, it contains overrides\n\n      if (args.length === this.interface.deploy.inputs.length + 1) {\n        overrides = args.pop();\n      } // Make sure the call matches the constructor signature\n\n\n      logger$i.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\"); // Resolve ENS names and promises in the arguments\n\n      const params = yield resolveAddresses(this.signer, args, this.interface.deploy.inputs);\n      params.push(overrides); // Get the deployment transaction (with optional overrides)\n\n      const unsignedTx = this.getDeployTransaction(...params); // Send the deployment transaction\n\n      const tx = yield this.signer.sendTransaction(unsignedTx);\n      const address = getStatic(this.constructor, \"getContractAddress\")(tx);\n      const contract = getStatic(this.constructor, \"getContract\")(address, this.interface, this.signer);\n      defineReadOnly(contract, \"deployTransaction\", tx);\n      return contract;\n    });\n  }\n\n  attach(address) {\n    return this.constructor.getContract(address, this.interface, this.signer);\n  }\n\n  connect(signer) {\n    return new this.constructor(this.interface, this.bytecode, signer);\n  }\n\n  static fromSolidity(compilerOutput, signer) {\n    if (compilerOutput == null) {\n      logger$i.throwError(\"missing compiler output\", Logger.errors.MISSING_ARGUMENT, {\n        argument: \"compilerOutput\"\n      });\n    }\n\n    if (typeof compilerOutput === \"string\") {\n      compilerOutput = JSON.parse(compilerOutput);\n    }\n\n    const abi = compilerOutput.abi;\n    let bytecode = null;\n\n    if (compilerOutput.bytecode) {\n      bytecode = compilerOutput.bytecode;\n    } else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n      bytecode = compilerOutput.evm.bytecode;\n    }\n\n    return new this(abi, bytecode, signer);\n  }\n\n  static getInterface(contractInterface) {\n    return Contract.getInterface(contractInterface);\n  }\n\n  static getContractAddress(tx) {\n    return getContractAddress(tx);\n  }\n\n  static getContract(address, contractInterface, signer) {\n    return new Contract(address, contractInterface, signer);\n  }\n\n}\n/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\n\n\nclass BaseX {\n  constructor(alphabet) {\n    defineReadOnly(this, \"alphabet\", alphabet);\n    defineReadOnly(this, \"base\", alphabet.length);\n    defineReadOnly(this, \"_alphabetMap\", {});\n    defineReadOnly(this, \"_leader\", alphabet.charAt(0)); // pre-compute lookup table\n\n    for (let i = 0; i < alphabet.length; i++) {\n      this._alphabetMap[alphabet.charAt(i)] = i;\n    }\n  }\n\n  encode(value) {\n    let source = arrayify(value);\n\n    if (source.length === 0) {\n      return \"\";\n    }\n\n    let digits = [0];\n\n    for (let i = 0; i < source.length; ++i) {\n      let carry = source[i];\n\n      for (let j = 0; j < digits.length; ++j) {\n        carry += digits[j] << 8;\n        digits[j] = carry % this.base;\n        carry = carry / this.base | 0;\n      }\n\n      while (carry > 0) {\n        digits.push(carry % this.base);\n        carry = carry / this.base | 0;\n      }\n    }\n\n    let string = \"\"; // deal with leading zeros\n\n    for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n      string += this._leader;\n    } // convert digits to a string\n\n\n    for (let q = digits.length - 1; q >= 0; --q) {\n      string += this.alphabet[digits[q]];\n    }\n\n    return string;\n  }\n\n  decode(value) {\n    if (typeof value !== \"string\") {\n      throw new TypeError(\"Expected String\");\n    }\n\n    let bytes = [];\n\n    if (value.length === 0) {\n      return new Uint8Array(bytes);\n    }\n\n    bytes.push(0);\n\n    for (let i = 0; i < value.length; i++) {\n      let byte = this._alphabetMap[value[i]];\n\n      if (byte === undefined) {\n        throw new Error(\"Non-base\" + this.base + \" character\");\n      }\n\n      let carry = byte;\n\n      for (let j = 0; j < bytes.length; ++j) {\n        carry += bytes[j] * this.base;\n        bytes[j] = carry & 0xff;\n        carry >>= 8;\n      }\n\n      while (carry > 0) {\n        bytes.push(carry & 0xff);\n        carry >>= 8;\n      }\n    } // deal with leading zeros\n\n\n    for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n      bytes.push(0);\n    }\n\n    return arrayify(new Uint8Array(bytes.reverse()));\n  }\n\n}\n\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\"); //console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n\nvar SupportedAlgorithm;\n\n(function (SupportedAlgorithm) {\n  SupportedAlgorithm[\"sha256\"] = \"sha256\";\n  SupportedAlgorithm[\"sha512\"] = \"sha512\";\n})(SupportedAlgorithm || (SupportedAlgorithm = {}));\n\nconst version$e = \"sha2/5.4.0\";\nconst logger$j = new Logger(version$e);\n\nfunction ripemd160$1(data) {\n  return \"0x\" + hash_1.ripemd160().update(arrayify(data)).digest(\"hex\");\n}\n\nfunction sha256$1(data) {\n  return \"0x\" + hash_1.sha256().update(arrayify(data)).digest(\"hex\");\n}\n\nfunction sha512$1(data) {\n  return \"0x\" + hash_1.sha512().update(arrayify(data)).digest(\"hex\");\n}\n\nfunction computeHmac(algorithm, key, data) {\n  if (!SupportedAlgorithm[algorithm]) {\n    logger$j.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n      operation: \"hmac\",\n      algorithm: algorithm\n    });\n  }\n\n  return \"0x\" + hash_1.hmac(hash_1[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n\nfunction pbkdf2(password, salt, iterations, keylen, hashAlgorithm) {\n  password = arrayify(password);\n  salt = arrayify(salt);\n  let hLen;\n  let l = 1;\n  const DK = new Uint8Array(keylen);\n  const block1 = new Uint8Array(salt.length + 4);\n  block1.set(salt); //salt.copy(block1, 0, 0, salt.length)\n\n  let r;\n  let T;\n\n  for (let i = 1; i <= l; i++) {\n    //block1.writeUInt32BE(i, salt.length)\n    block1[salt.length] = i >> 24 & 0xff;\n    block1[salt.length + 1] = i >> 16 & 0xff;\n    block1[salt.length + 2] = i >> 8 & 0xff;\n    block1[salt.length + 3] = i & 0xff; //let U = createHmac(password).update(block1).digest();\n\n    let U = arrayify(computeHmac(hashAlgorithm, password, block1));\n\n    if (!hLen) {\n      hLen = U.length;\n      T = new Uint8Array(hLen);\n      l = Math.ceil(keylen / hLen);\n      r = keylen - (l - 1) * hLen;\n    } //U.copy(T, 0, 0, hLen)\n\n\n    T.set(U);\n\n    for (let j = 1; j < iterations; j++) {\n      //U = createHmac(password).update(U).digest();\n      U = arrayify(computeHmac(hashAlgorithm, password, U));\n\n      for (let k = 0; k < hLen; k++) T[k] ^= U[k];\n    }\n\n    const destPos = (i - 1) * hLen;\n    const len = i === l ? r : hLen; //T.copy(DK, destPos, 0, len)\n\n    DK.set(arrayify(T).slice(0, len), destPos);\n  }\n\n  return hexlify(DK);\n}\n\nconst version$f = \"wordlists/5.4.0\";\nconst logger$k = new Logger(version$f);\n\nclass Wordlist {\n  constructor(locale) {\n    logger$k.checkAbstract(new.target, Wordlist);\n    defineReadOnly(this, \"locale\", locale);\n  } // Subclasses may override this\n\n\n  split(mnemonic) {\n    return mnemonic.toLowerCase().split(/ +/g);\n  } // Subclasses may override this\n\n\n  join(words) {\n    return words.join(\" \");\n  }\n\n  static check(wordlist) {\n    const words = [];\n\n    for (let i = 0; i < 2048; i++) {\n      const word = wordlist.getWord(i);\n      /* istanbul ignore if */\n\n      if (i !== wordlist.getWordIndex(word)) {\n        return \"0x\";\n      }\n\n      words.push(word);\n    }\n\n    return id(words.join(\"\\n\") + \"\\n\");\n  }\n\n  static register(lang, name) {}\n\n}\n\nconst words = \"AbdikaceAbecedaAdresaAgreseAkceAktovkaAlejAlkoholAmputaceAnanasAndulkaAnekdotaAnketaAntikaAnulovatArchaAroganceAsfaltAsistentAspiraceAstmaAstronomAtlasAtletikaAtolAutobusAzylBabkaBachorBacilBaculkaBadatelBagetaBagrBahnoBakterieBaladaBaletkaBalkonBalonekBalvanBalzaBambusBankomatBarbarBaretBarmanBarokoBarvaBaterkaBatohBavlnaBazalkaBazilikaBazukaBednaBeranBesedaBestieBetonBezinkaBezmocBeztakBicyklBidloBiftekBikinyBilanceBiografBiologBitvaBizonBlahobytBlatouchBlechaBleduleBleskBlikatBliznaBlokovatBlouditBludBobekBobrBodlinaBodnoutBohatostBojkotBojovatBokorysBolestBorecBoroviceBotaBoubelBouchatBoudaBouleBouratBoxerBradavkaBramboraBrankaBratrBreptaBriketaBrkoBrlohBronzBroskevBrunetkaBrusinkaBrzdaBrzyBublinaBubnovatBuchtaBuditelBudkaBudovaBufetBujarostBukviceBuldokBulvaBundaBunkrBurzaButikBuvolBuzolaBydletBylinaBytovkaBzukotCapartCarevnaCedrCeduleCejchCejnCelaCelerCelkemCelniceCeninaCennostCenovkaCentrumCenzorCestopisCetkaChalupaChapadloCharitaChataChechtatChemieChichotChirurgChladChlebaChlubitChmelChmuraChobotChocholChodbaCholeraChomoutChopitChorobaChovChrapotChrlitChrtChrupChtivostChudinaChutnatChvatChvilkaChvostChybaChystatChytitCibuleCigaretaCihelnaCihlaCinkotCirkusCisternaCitaceCitrusCizinecCizostClonaCokolivCouvatCtitelCtnostCudnostCuketaCukrCupotCvaknoutCvalCvikCvrkotCyklistaDalekoDarebaDatelDatumDceraDebataDechovkaDecibelDeficitDeflaceDeklDekretDemokratDepreseDerbyDeskaDetektivDikobrazDiktovatDiodaDiplomDiskDisplejDivadloDivochDlahaDlouhoDluhopisDnesDobroDobytekDocentDochutitDodnesDohledDohodaDohraDojemDojniceDokladDokolaDoktorDokumentDolarDolevaDolinaDomaDominantDomluvitDomovDonutitDopadDopisDoplnitDoposudDoprovodDopustitDorazitDorostDortDosahDoslovDostatekDosudDosytaDotazDotekDotknoutDoufatDoutnatDovozceDozaduDoznatDozorceDrahotaDrakDramatikDravecDrazeDrdolDrobnostDrogerieDrozdDrsnostDrtitDrzostDubenDuchovnoDudekDuhaDuhovkaDusitDusnoDutostDvojiceDvorecDynamitEkologEkonomieElektronElipsaEmailEmiseEmoceEmpatieEpizodaEpochaEpopejEposEsejEsenceEskortaEskymoEtiketaEuforieEvoluceExekuceExkurzeExpediceExplozeExportExtraktFackaFajfkaFakultaFanatikFantazieFarmacieFavoritFazoleFederaceFejetonFenkaFialkaFigurantFilozofFiltrFinanceFintaFixaceFjordFlanelFlirtFlotilaFondFosforFotbalFotkaFotonFrakceFreskaFrontaFukarFunkceFyzikaGalejeGarantGenetikaGeologGilotinaGlazuraGlejtGolemGolfistaGotikaGrafGramofonGranuleGrepGrilGrogGroteskaGumaHadiceHadrHalaHalenkaHanbaHanopisHarfaHarpunaHavranHebkostHejkalHejnoHejtmanHektarHelmaHematomHerecHernaHesloHezkyHistorikHladovkaHlasivkyHlavaHledatHlenHlodavecHlohHloupostHltatHlubinaHluchotaHmatHmotaHmyzHnisHnojivoHnoutHoblinaHobojHochHodinyHodlatHodnotaHodovatHojnostHokejHolinkaHolkaHolubHomoleHonitbaHonoraceHoralHordaHorizontHorkoHorlivecHormonHorninaHoroskopHorstvoHospodaHostinaHotovostHoubaHoufHoupatHouskaHovorHradbaHraniceHravostHrazdaHrbolekHrdinaHrdloHrdostHrnekHrobkaHromadaHrotHroudaHrozenHrstkaHrubostHryzatHubenostHubnoutHudbaHukotHumrHusitaHustotaHvozdHybnostHydrantHygienaHymnaHysterikIdylkaIhnedIkonaIluzeImunitaInfekceInflaceInkasoInovaceInspekceInternetInvalidaInvestorInzerceIronieJablkoJachtaJahodaJakmileJakostJalovecJantarJarmarkJaroJasanJasnoJatkaJavorJazykJedinecJedleJednatelJehlanJekotJelenJelitoJemnostJenomJepiceJeseterJevitJezdecJezeroJinakJindyJinochJiskraJistotaJitrniceJizvaJmenovatJogurtJurtaKabaretKabelKabinetKachnaKadetKadidloKahanKajakKajutaKakaoKaktusKalamitaKalhotyKalibrKalnostKameraKamkolivKamnaKanibalKanoeKantorKapalinaKapelaKapitolaKapkaKapleKapotaKaprKapustaKapybaraKaramelKarotkaKartonKasaKatalogKatedraKauceKauzaKavalecKazajkaKazetaKazivostKdekolivKdesiKedlubenKempKeramikaKinoKlacekKladivoKlamKlapotKlasikaKlaunKlecKlenbaKlepatKlesnoutKlidKlimaKlisnaKloboukKlokanKlopaKloubKlubovnaKlusatKluzkostKmenKmitatKmotrKnihaKnotKoaliceKoberecKobkaKoblihaKobylaKocourKohoutKojenecKokosKoktejlKolapsKoledaKolizeKoloKomandoKometaKomikKomnataKomoraKompasKomunitaKonatKonceptKondiceKonecKonfeseKongresKoninaKonkursKontaktKonzervaKopanecKopieKopnoutKoprovkaKorbelKorektorKormidloKoroptevKorpusKorunaKorytoKorzetKosatecKostkaKotelKotletaKotoulKoukatKoupelnaKousekKouzloKovbojKozaKozorohKrabiceKrachKrajinaKralovatKrasopisKravataKreditKrejcarKresbaKrevetaKriketKritikKrizeKrkavecKrmelecKrmivoKrocanKrokKronikaKropitKroupaKrovkaKrtekKruhadloKrupiceKrutostKrvinkaKrychleKryptaKrystalKrytKudlankaKufrKujnostKuklaKulajdaKulichKulkaKulometKulturaKunaKupodivuKurtKurzorKutilKvalitaKvasinkaKvestorKynologKyselinaKytaraKyticeKytkaKytovecKyvadloLabradorLachtanLadnostLaikLakomecLamelaLampaLanovkaLasiceLasoLasturaLatinkaLavinaLebkaLeckdyLedenLedniceLedovkaLedvinaLegendaLegieLegraceLehceLehkostLehnoutLektvarLenochodLentilkaLepenkaLepidloLetadloLetecLetmoLetokruhLevhartLevitaceLevobokLibraLichotkaLidojedLidskostLihovinaLijavecLilekLimetkaLinieLinkaLinoleumListopadLitinaLitovatLobistaLodivodLogikaLogopedLokalitaLoketLomcovatLopataLopuchLordLososLotrLoudalLouhLoukaLouskatLovecLstivostLucernaLuciferLumpLuskLustraceLviceLyraLyrikaLysinaMadamMadloMagistrMahagonMajetekMajitelMajoritaMakakMakoviceMakrelaMalbaMalinaMalovatMalviceMaminkaMandleMankoMarnostMasakrMaskotMasopustMaticeMatrikaMaturitaMazanecMazivoMazlitMazurkaMdlobaMechanikMeditaceMedovinaMelasaMelounMentolkaMetlaMetodaMetrMezeraMigraceMihnoutMihuleMikinaMikrofonMilenecMilimetrMilostMimikaMincovnaMinibarMinometMinulostMiskaMistrMixovatMladostMlhaMlhovinaMlokMlsatMluvitMnichMnohemMobilMocnostModelkaModlitbaMohylaMokroMolekulaMomentkaMonarchaMonoklMonstrumMontovatMonzunMosazMoskytMostMotivaceMotorkaMotykaMouchaMoudrostMozaikaMozekMozolMramorMravenecMrkevMrtvolaMrzetMrzutostMstitelMudrcMuflonMulatMumieMuniceMusetMutaceMuzeumMuzikantMyslivecMzdaNabouratNachytatNadaceNadbytekNadhozNadobroNadpisNahlasNahnatNahodileNahraditNaivitaNajednouNajistoNajmoutNaklonitNakonecNakrmitNalevoNamazatNamluvitNanometrNaokoNaopakNaostroNapadatNapevnoNaplnitNapnoutNaposledNaprostoNaroditNarubyNarychloNasaditNasekatNaslepoNastatNatolikNavenekNavrchNavzdoryNazvatNebeNechatNeckyNedalekoNedbatNeduhNegaceNehetNehodaNejenNejprveNeklidNelibostNemilostNemocNeochotaNeonkaNepokojNerostNervNesmyslNesouladNetvorNeuronNevinaNezvykleNicotaNijakNikamNikdyNiklNikterakNitroNoclehNohaviceNominaceNoraNorekNositelNosnostNouzeNovinyNovotaNozdraNudaNudleNugetNutitNutnostNutrieNymfaObalObarvitObavaObdivObecObehnatObejmoutObezitaObhajobaObilniceObjasnitObjektObklopitOblastOblekOblibaOblohaObludaObnosObohatitObojekOboutObrazecObrnaObrubaObrysObsahObsluhaObstaratObuvObvazObvinitObvodObvykleObyvatelObzorOcasOcelOcenitOchladitOchotaOchranaOcitnoutOdbojOdbytOdchodOdcizitOdebratOdeslatOdevzdatOdezvaOdhadceOdhoditOdjetOdjinudOdkazOdkoupitOdlivOdlukaOdmlkaOdolnostOdpadOdpisOdploutOdporOdpustitOdpykatOdrazkaOdsouditOdstupOdsunOdtokOdtudOdvahaOdvetaOdvolatOdvracetOdznakOfinaOfsajdOhlasOhniskoOhradaOhrozitOhryzekOkapOkeniceOklikaOknoOkouzlitOkovyOkrasaOkresOkrsekOkruhOkupantOkurkaOkusitOlejninaOlizovatOmakOmeletaOmezitOmladinaOmlouvatOmluvaOmylOnehdyOpakovatOpasekOperaceOpiceOpilostOpisovatOporaOpoziceOpravduOprotiOrbitalOrchestrOrgieOrliceOrlojOrtelOsadaOschnoutOsikaOsivoOslavaOslepitOslnitOslovitOsnovaOsobaOsolitOspalecOstenOstrahaOstudaOstychOsvojitOteplitOtiskOtopOtrhatOtrlostOtrokOtrubyOtvorOvanoutOvarOvesOvlivnitOvoceOxidOzdobaPachatelPacientPadouchPahorekPaktPalandaPalecPalivoPalubaPamfletPamlsekPanenkaPanikaPannaPanovatPanstvoPantoflePaprikaParketaParodiePartaParukaParybaPasekaPasivitaPastelkaPatentPatronaPavoukPaznehtPazourekPeckaPedagogPejsekPekloPelotonPenaltaPendrekPenzePeriskopPeroPestrostPetardaPeticePetrolejPevninaPexesoPianistaPihaPijavicePiklePiknikPilinaPilnostPilulkaPinzetaPipetaPisatelPistolePitevnaPivnicePivovarPlacentaPlakatPlamenPlanetaPlastikaPlatitPlavidloPlazPlechPlemenoPlentaPlesPletivoPlevelPlivatPlnitPlnoPlochaPlodinaPlombaPloutPlukPlynPobavitPobytPochodPocitPoctivecPodatPodcenitPodepsatPodhledPodivitPodkladPodmanitPodnikPodobaPodporaPodrazPodstataPodvodPodzimPoeziePohankaPohnutkaPohovorPohromaPohybPointaPojistkaPojmoutPokazitPoklesPokojPokrokPokutaPokynPolednePolibekPolknoutPolohaPolynomPomaluPominoutPomlkaPomocPomstaPomysletPonechatPonorkaPonurostPopadatPopelPopisekPoplachPoprositPopsatPopudPoradcePorcePorodPoruchaPoryvPosaditPosedPosilaPoskokPoslanecPosouditPospoluPostavaPosudekPosypPotahPotkanPotleskPotomekPotravaPotupaPotvoraPoukazPoutoPouzdroPovahaPovidlaPovlakPovozPovrchPovstatPovykPovzdechPozdravPozemekPoznatekPozorPozvatPracovatPrahoryPraktikaPralesPraotecPraporekPrasePravdaPrincipPrknoProbuditProcentoProdejProfeseProhraProjektProlomitPromilePronikatPropadProrokProsbaProtonProutekProvazPrskavkaPrstenPrudkostPrutPrvekPrvohoryPsanecPsovodPstruhPtactvoPubertaPuchPudlPukavecPuklinaPukrlePultPumpaPuncPupenPusaPusinkaPustinaPutovatPutykaPyramidaPyskPytelRacekRachotRadiaceRadniceRadonRaftRagbyRaketaRakovinaRamenoRampouchRandeRarachRaritaRasovnaRastrRatolestRazanceRazidloReagovatReakceReceptRedaktorReferentReflexRejnokReklamaRekordRekrutRektorReputaceRevizeRevmaRevolverRezervaRiskovatRizikoRobotikaRodokmenRohovkaRokleRokokoRomanetoRopovodRopuchaRorejsRosolRostlinaRotmistrRotopedRotundaRoubenkaRouchoRoupRouraRovinaRovniceRozborRozchodRozdatRozeznatRozhodceRozinkaRozjezdRozkazRozlohaRozmarRozpadRozruchRozsahRoztokRozumRozvodRubrikaRuchadloRukaviceRukopisRybaRybolovRychlostRydloRypadloRytinaRyzostSadistaSahatSakoSamecSamizdatSamotaSanitkaSardinkaSasankaSatelitSazbaSazeniceSborSchovatSebrankaSeceseSedadloSedimentSedloSehnatSejmoutSekeraSektaSekundaSekvojeSemenoSenoServisSesaditSeshoraSeskokSeslatSestraSesuvSesypatSetbaSetinaSetkatSetnoutSetrvatSeverSeznamShodaShrnoutSifonSilniceSirkaSirotekSirupSituaceSkafandrSkaliskoSkanzenSkautSkeptikSkicaSkladbaSkleniceSkloSkluzSkobaSkokanSkoroSkriptaSkrzSkupinaSkvostSkvrnaSlabikaSladidloSlaninaSlastSlavnostSledovatSlepecSlevaSlezinaSlibSlinaSlizniceSlonSloupekSlovoSluchSluhaSlunceSlupkaSlzaSmaragdSmetanaSmilstvoSmlouvaSmogSmradSmrkSmrtkaSmutekSmyslSnadSnahaSnobSobotaSochaSodovkaSokolSopkaSotvaSoubojSoucitSoudceSouhlasSouladSoumrakSoupravaSousedSoutokSouvisetSpalovnaSpasitelSpisSplavSpodekSpojenecSpoluSponzorSpornostSpoustaSprchaSpustitSrandaSrazSrdceSrnaSrnecSrovnatSrpenSrstSrubStaniceStarostaStatikaStavbaStehnoStezkaStodolaStolekStopaStornoStoupatStrachStresStrhnoutStromStrunaStudnaStupniceStvolStykSubjektSubtropySucharSudostSuknoSundatSunoutSurikataSurovinaSvahSvalstvoSvetrSvatbaSvazekSvisleSvitekSvobodaSvodidloSvorkaSvrabSykavkaSykotSynekSynovecSypatSypkostSyrovostSyselSytostTabletkaTabuleTahounTajemnoTajfunTajgaTajitTajnostTaktikaTamhleTamponTancovatTanecTankerTapetaTaveninaTazatelTechnikaTehdyTekutinaTelefonTemnotaTendenceTenistaTenorTeplotaTepnaTeprveTerapieTermoskaTextilTichoTiskopisTitulekTkadlecTkaninaTlapkaTleskatTlukotTlupaTmelToaletaTopinkaTopolTorzoTouhaToulecTradiceTraktorTrampTrasaTraverzaTrefitTrestTrezorTrhavinaTrhlinaTrochuTrojiceTroskaTroubaTrpceTrpitelTrpkostTrubecTruchlitTruhliceTrusTrvatTudyTuhnoutTuhostTundraTuristaTurnajTuzemskoTvarohTvorbaTvrdostTvrzTygrTykevUbohostUbozeUbratUbrousekUbrusUbytovnaUchoUctivostUdivitUhraditUjednatUjistitUjmoutUkazatelUklidnitUklonitUkotvitUkrojitUliceUlitaUlovitUmyvadloUnavitUniformaUniknoutUpadnoutUplatnitUplynoutUpoutatUpravitUranUrazitUsednoutUsilovatUsmrtitUsnadnitUsnoutUsouditUstlatUstrnoutUtahovatUtkatUtlumitUtonoutUtopenecUtrousitUvalitUvolnitUvozovkaUzdravitUzelUzeninaUzlinaUznatVagonValchaValounVanaVandalVanilkaVaranVarhanyVarovatVcelkuVchodVdovaVedroVegetaceVejceVelbloudVeletrhVelitelVelmocVelrybaVenkovVerandaVerzeVeselkaVeskrzeVesniceVespoduVestaVeterinaVeverkaVibraceVichrVideohraVidinaVidleVilaViniceVisetVitalitaVizeVizitkaVjezdVkladVkusVlajkaVlakVlasecVlevoVlhkostVlivVlnovkaVloupatVnucovatVnukVodaVodivostVodoznakVodstvoVojenskyVojnaVojskoVolantVolbaVolitVolnoVoskovkaVozidloVozovnaVpravoVrabecVracetVrahVrataVrbaVrcholekVrhatVrstvaVrtuleVsaditVstoupitVstupVtipVybavitVybratVychovatVydatVydraVyfotitVyhledatVyhnoutVyhoditVyhraditVyhubitVyjasnitVyjetVyjmoutVyklopitVykonatVylekatVymazatVymezitVymizetVymysletVynechatVynikatVynutitVypadatVyplatitVypravitVypustitVyrazitVyrovnatVyrvatVyslovitVysokoVystavitVysunoutVysypatVytasitVytesatVytratitVyvinoutVyvolatVyvrhelVyzdobitVyznatVzaduVzbuditVzchopitVzdorVzduchVzdychatVzestupVzhledemVzkazVzlykatVznikVzorekVzpouraVztahVztekXylofonZabratZabydletZachovatZadarmoZadusitZafoukatZahltitZahoditZahradaZahynoutZajatecZajetZajistitZaklepatZakoupitZalepitZamezitZamotatZamysletZanechatZanikatZaplatitZapojitZapsatZarazitZastavitZasunoutZatajitZatemnitZatknoutZaujmoutZavalitZaveletZavinitZavolatZavrtatZazvonitZbavitZbrusuZbudovatZbytekZdalekaZdarmaZdatnostZdivoZdobitZdrojZdvihZdymadloZeleninaZemanZeminaZeptatZezaduZezdolaZhatitZhltnoutZhlubokaZhotovitZhrubaZimaZimniceZjemnitZklamatZkoumatZkratkaZkumavkaZlatoZlehkaZlobaZlomZlostZlozvykZmapovatZmarZmatekZmijeZmizetZmocnitZmodratZmrzlinaZmutovatZnakZnalostZnamenatZnovuZobrazitZotavitZoubekZoufaleZploditZpomalitZpravaZprostitZprudkaZprvuZradaZranitZrcadloZrnitostZrnoZrovnaZrychlitZrzavostZtichaZtratitZubovinaZubrZvednoutZvenkuZveselaZvonZvratZvukovodZvyk\";\nlet wordlist = null;\n\nfunction loadWords(lang) {\n  if (wordlist != null) {\n    return;\n  }\n\n  wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \"); // Verify the computed list matches the official list\n\n  /* istanbul ignore if */\n\n  if (Wordlist.check(lang) !== \"0x25f44555f4af25b51a711136e1c7d6e50ce9f8917d39d6b1f076b2bb4d2fac1a\") {\n    wordlist = null;\n    throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n  }\n}\n\nclass LangCz extends Wordlist {\n  constructor() {\n    super(\"cz\");\n  }\n\n  getWord(index) {\n    loadWords(this);\n    return wordlist[index];\n  }\n\n  getWordIndex(word) {\n    loadWords(this);\n    return wordlist.indexOf(word);\n  }\n\n}\n\nconst langCz = new LangCz();\nWordlist.register(langCz);\nconst words$1 = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\nlet wordlist$1 = null;\n\nfunction loadWords$1(lang) {\n  if (wordlist$1 != null) {\n    return;\n  }\n\n  wordlist$1 = words$1.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \"); // Verify the computed list matches the official list\n\n  /* istanbul ignore if */\n\n  if (Wordlist.check(lang) !== \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\") {\n    wordlist$1 = null;\n    throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n  }\n}\n\nclass LangEn extends Wordlist {\n  constructor() {\n    super(\"en\");\n  }\n\n  getWord(index) {\n    loadWords$1(this);\n    return wordlist$1[index];\n  }\n\n  getWordIndex(word) {\n    loadWords$1(this);\n    return wordlist$1.indexOf(word);\n  }\n\n}\n\nconst langEn = new LangEn();\nWordlist.register(langEn);\nconst words$2 = \"A/bacoAbdomenAbejaAbiertoAbogadoAbonoAbortoAbrazoAbrirAbueloAbusoAcabarAcademiaAccesoAccio/nAceiteAcelgaAcentoAceptarA/cidoAclararAcne/AcogerAcosoActivoActoActrizActuarAcudirAcuerdoAcusarAdictoAdmitirAdoptarAdornoAduanaAdultoAe/reoAfectarAficio/nAfinarAfirmarA/gilAgitarAgoni/aAgostoAgotarAgregarAgrioAguaAgudoA/guilaAgujaAhogoAhorroAireAislarAjedrezAjenoAjusteAlacra/nAlambreAlarmaAlbaA/lbumAlcaldeAldeaAlegreAlejarAlertaAletaAlfilerAlgaAlgodo/nAliadoAlientoAlivioAlmaAlmejaAlmi/barAltarAltezaAltivoAltoAlturaAlumnoAlzarAmableAmanteAmapolaAmargoAmasarA/mbarA/mbitoAmenoAmigoAmistadAmorAmparoAmplioAnchoAncianoAnclaAndarAnde/nAnemiaA/nguloAnilloA/nimoAni/sAnotarAntenaAntiguoAntojoAnualAnularAnuncioA~adirA~ejoA~oApagarAparatoApetitoApioAplicarApodoAporteApoyoAprenderAprobarApuestaApuroAradoAra~aArarA/rbitroA/rbolArbustoArchivoArcoArderArdillaArduoA/reaA/ridoAriesArmoni/aArne/sAromaArpaArpo/nArregloArrozArrugaArteArtistaAsaAsadoAsaltoAscensoAsegurarAseoAsesorAsientoAsiloAsistirAsnoAsombroA/speroAstillaAstroAstutoAsumirAsuntoAtajoAtaqueAtarAtentoAteoA/ticoAtletaA/tomoAtraerAtrozAtu/nAudazAudioAugeAulaAumentoAusenteAutorAvalAvanceAvaroAveAvellanaAvenaAvestruzAvio/nAvisoAyerAyudaAyunoAzafra/nAzarAzoteAzu/carAzufreAzulBabaBaborBacheBahi/aBaileBajarBalanzaBalco/nBaldeBambu/BancoBandaBa~oBarbaBarcoBarnizBarroBa/sculaBasto/nBasuraBatallaBateri/aBatirBatutaBau/lBazarBebe/BebidaBelloBesarBesoBestiaBichoBienBingoBlancoBloqueBlusaBoaBobinaBoboBocaBocinaBodaBodegaBoinaBolaBoleroBolsaBombaBondadBonitoBonoBonsa/iBordeBorrarBosqueBoteBoti/nBo/vedaBozalBravoBrazoBrechaBreveBrilloBrincoBrisaBrocaBromaBronceBroteBrujaBruscoBrutoBuceoBucleBuenoBueyBufandaBufo/nBu/hoBuitreBultoBurbujaBurlaBurroBuscarButacaBuzo/nCaballoCabezaCabinaCabraCacaoCada/verCadenaCaerCafe/Cai/daCaima/nCajaCajo/nCalCalamarCalcioCaldoCalidadCalleCalmaCalorCalvoCamaCambioCamelloCaminoCampoCa/ncerCandilCanelaCanguroCanicaCantoCa~aCa~o/nCaobaCaosCapazCapita/nCapoteCaptarCapuchaCaraCarbo/nCa/rcelCaretaCargaCari~oCarneCarpetaCarroCartaCasaCascoCaseroCaspaCastorCatorceCatreCaudalCausaCazoCebollaCederCedroCeldaCe/lebreCelosoCe/lulaCementoCenizaCentroCercaCerdoCerezaCeroCerrarCertezaCe/spedCetroChacalChalecoChampu/ChanclaChapaCharlaChicoChisteChivoChoqueChozaChuletaChuparCiclo/nCiegoCieloCienCiertoCifraCigarroCimaCincoCineCintaCipre/sCircoCiruelaCisneCitaCiudadClamorClanClaroClaseClaveClienteClimaCli/nicaCobreCoccio/nCochinoCocinaCocoCo/digoCodoCofreCogerCoheteCoji/nCojoColaColchaColegioColgarColinaCollarColmoColumnaCombateComerComidaCo/modoCompraCondeConejoCongaConocerConsejoContarCopaCopiaCorazo/nCorbataCorchoCordo/nCoronaCorrerCoserCosmosCostaCra/neoCra/terCrearCrecerCrei/doCremaCri/aCrimenCriptaCrisisCromoCro/nicaCroquetaCrudoCruzCuadroCuartoCuatroCuboCubrirCucharaCuelloCuentoCuerdaCuestaCuevaCuidarCulebraCulpaCultoCumbreCumplirCunaCunetaCuotaCupo/nCu/pulaCurarCuriosoCursoCurvaCutisDamaDanzaDarDardoDa/tilDeberDe/bilDe/cadaDecirDedoDefensaDefinirDejarDelfi/nDelgadoDelitoDemoraDensoDentalDeporteDerechoDerrotaDesayunoDeseoDesfileDesnudoDestinoDesvi/oDetalleDetenerDeudaDi/aDiabloDiademaDiamanteDianaDiarioDibujoDictarDienteDietaDiezDifi/cilDignoDilemaDiluirDineroDirectoDirigirDiscoDise~oDisfrazDivaDivinoDobleDoceDolorDomingoDonDonarDoradoDormirDorsoDosDosisDrago/nDrogaDuchaDudaDueloDue~oDulceDu/oDuqueDurarDurezaDuroE/banoEbrioEcharEcoEcuadorEdadEdicio/nEdificioEditorEducarEfectoEficazEjeEjemploElefanteElegirElementoElevarElipseE/liteElixirElogioEludirEmbudoEmitirEmocio/nEmpateEmpe~oEmpleoEmpresaEnanoEncargoEnchufeEnci/aEnemigoEneroEnfadoEnfermoEnga~oEnigmaEnlaceEnormeEnredoEnsayoEnse~arEnteroEntrarEnvaseEnvi/oE/pocaEquipoErizoEscalaEscenaEscolarEscribirEscudoEsenciaEsferaEsfuerzoEspadaEspejoEspi/aEsposaEspumaEsqui/EstarEsteEstiloEstufaEtapaEternoE/ticaEtniaEvadirEvaluarEventoEvitarExactoExamenExcesoExcusaExentoExigirExilioExistirE/xitoExpertoExplicarExponerExtremoFa/bricaFa/bulaFachadaFa/cilFactorFaenaFajaFaldaFalloFalsoFaltarFamaFamiliaFamosoFarao/nFarmaciaFarolFarsaFaseFatigaFaunaFavorFaxFebreroFechaFelizFeoFeriaFerozFe/rtilFervorFesti/nFiableFianzaFiarFibraFiccio/nFichaFideoFiebreFielFieraFiestaFiguraFijarFijoFilaFileteFilialFiltroFinFincaFingirFinitoFirmaFlacoFlautaFlechaFlorFlotaFluirFlujoFlu/orFobiaFocaFogataFogo/nFolioFolletoFondoFormaForroFortunaForzarFosaFotoFracasoFra/gilFranjaFraseFraudeFrei/rFrenoFresaFri/oFritoFrutaFuegoFuenteFuerzaFugaFumarFuncio/nFundaFurgo/nFuriaFusilFu/tbolFuturoGacelaGafasGaitaGajoGalaGaleri/aGalloGambaGanarGanchoGangaGansoGarajeGarzaGasolinaGastarGatoGavila/nGemeloGemirGenGe/neroGenioGenteGeranioGerenteGermenGestoGiganteGimnasioGirarGiroGlaciarGloboGloriaGolGolfoGolosoGolpeGomaGordoGorilaGorraGotaGoteoGozarGradaGra/ficoGranoGrasaGratisGraveGrietaGrilloGripeGrisGritoGrosorGru/aGruesoGrumoGrupoGuanteGuapoGuardiaGuerraGui/aGui~oGuionGuisoGuitarraGusanoGustarHaberHa/bilHablarHacerHachaHadaHallarHamacaHarinaHazHaza~aHebillaHebraHechoHeladoHelioHembraHerirHermanoHe/roeHervirHieloHierroHi/gadoHigieneHijoHimnoHistoriaHocicoHogarHogueraHojaHombreHongoHonorHonraHoraHormigaHornoHostilHoyoHuecoHuelgaHuertaHuesoHuevoHuidaHuirHumanoHu/medoHumildeHumoHundirHuraca/nHurtoIconoIdealIdiomaI/doloIglesiaIglu/IgualIlegalIlusio/nImagenIma/nImitarImparImperioImponerImpulsoIncapazI/ndiceInerteInfielInformeIngenioInicioInmensoInmuneInnatoInsectoInstanteIntere/sI/ntimoIntuirInu/tilInviernoIraIrisIroni/aIslaIsloteJabali/Jabo/nJamo/nJarabeJardi/nJarraJaulaJazmi/nJefeJeringaJineteJornadaJorobaJovenJoyaJuergaJuevesJuezJugadorJugoJugueteJuicioJuncoJunglaJunioJuntarJu/piterJurarJustoJuvenilJuzgarKiloKoalaLabioLacioLacraLadoLadro/nLagartoLa/grimaLagunaLaicoLamerLa/minaLa/mparaLanaLanchaLangostaLanzaLa/pizLargoLarvaLa/stimaLataLa/texLatirLaurelLavarLazoLealLeccio/nLecheLectorLeerLegio/nLegumbreLejanoLenguaLentoLe~aLeo/nLeopardoLesio/nLetalLetraLeveLeyendaLibertadLibroLicorLi/derLidiarLienzoLigaLigeroLimaLi/miteLimo/nLimpioLinceLindoLi/neaLingoteLinoLinternaLi/quidoLisoListaLiteraLitioLitroLlagaLlamaLlantoLlaveLlegarLlenarLlevarLlorarLloverLluviaLoboLocio/nLocoLocuraLo/gicaLogroLombrizLomoLonjaLoteLuchaLucirLugarLujoLunaLunesLupaLustroLutoLuzMacetaMachoMaderaMadreMaduroMaestroMafiaMagiaMagoMai/zMaldadMaletaMallaMaloMama/MamboMamutMancoMandoManejarMangaManiqui/ManjarManoMansoMantaMa~anaMapaMa/quinaMarMarcoMareaMarfilMargenMaridoMa/rmolMarro/nMartesMarzoMasaMa/scaraMasivoMatarMateriaMatizMatrizMa/ximoMayorMazorcaMechaMedallaMedioMe/dulaMejillaMejorMelenaMelo/nMemoriaMenorMensajeMenteMenu/MercadoMerengueMe/ritoMesMeso/nMetaMeterMe/todoMetroMezclaMiedoMielMiembroMigaMilMilagroMilitarMillo/nMimoMinaMineroMi/nimoMinutoMiopeMirarMisaMiseriaMisilMismoMitadMitoMochilaMocio/nModaModeloMohoMojarMoldeMolerMolinoMomentoMomiaMonarcaMonedaMonjaMontoMo~oMoradaMorderMorenoMorirMorroMorsaMortalMoscaMostrarMotivoMoverMo/vilMozoMuchoMudarMuebleMuelaMuerteMuestraMugreMujerMulaMuletaMultaMundoMu~ecaMuralMuroMu/sculoMuseoMusgoMu/sicaMusloNa/carNacio/nNadarNaipeNaranjaNarizNarrarNasalNatalNativoNaturalNa/useaNavalNaveNavidadNecioNe/ctarNegarNegocioNegroNeo/nNervioNetoNeutroNevarNeveraNichoNidoNieblaNietoNi~ezNi~oNi/tidoNivelNoblezaNocheNo/minaNoriaNormaNorteNotaNoticiaNovatoNovelaNovioNubeNucaNu/cleoNudilloNudoNueraNueveNuezNuloNu/meroNutriaOasisObesoObispoObjetoObraObreroObservarObtenerObvioOcaOcasoOce/anoOchentaOchoOcioOcreOctavoOctubreOcultoOcuparOcurrirOdiarOdioOdiseaOesteOfensaOfertaOficioOfrecerOgroOi/doOi/rOjoOlaOleadaOlfatoOlivoOllaOlmoOlorOlvidoOmbligoOndaOnzaOpacoOpcio/nO/peraOpinarOponerOptarO/pticaOpuestoOracio/nOradorOralO/rbitaOrcaOrdenOrejaO/rganoOrgi/aOrgulloOrienteOrigenOrillaOroOrquestaOrugaOsadi/aOscuroOseznoOsoOstraOto~oOtroOvejaO/vuloO/xidoOxi/genoOyenteOzonoPactoPadrePaellaPa/ginaPagoPai/sPa/jaroPalabraPalcoPaletaPa/lidoPalmaPalomaPalparPanPanalPa/nicoPanteraPa~ueloPapa/PapelPapillaPaquetePararParcelaParedParirParoPa/rpadoParquePa/rrafoPartePasarPaseoPasio/nPasoPastaPataPatioPatriaPausaPautaPavoPayasoPeato/nPecadoPeceraPechoPedalPedirPegarPeinePelarPelda~oPeleaPeligroPellejoPeloPelucaPenaPensarPe~o/nPeo/nPeorPepinoPeque~oPeraPerchaPerderPerezaPerfilPericoPerlaPermisoPerroPersonaPesaPescaPe/simoPesta~aPe/taloPetro/leoPezPezu~aPicarPicho/nPiePiedraPiernaPiezaPijamaPilarPilotoPimientaPinoPintorPinzaPi~aPiojoPipaPirataPisarPiscinaPisoPistaPito/nPizcaPlacaPlanPlataPlayaPlazaPleitoPlenoPlomoPlumaPluralPobrePocoPoderPodioPoemaPoesi/aPoetaPolenPolici/aPolloPolvoPomadaPomeloPomoPompaPonerPorcio/nPortalPosadaPoseerPosiblePostePotenciaPotroPozoPradoPrecozPreguntaPremioPrensaPresoPrevioPrimoPri/ncipePrisio/nPrivarProaProbarProcesoProductoProezaProfesorProgramaProlePromesaProntoPropioPro/ximoPruebaPu/blicoPucheroPudorPuebloPuertaPuestoPulgaPulirPulmo/nPulpoPulsoPumaPuntoPu~alPu~oPupaPupilaPure/QuedarQuejaQuemarQuererQuesoQuietoQui/micaQuinceQuitarRa/banoRabiaRaboRacio/nRadicalRai/zRamaRampaRanchoRangoRapazRa/pidoRaptoRasgoRaspaRatoRayoRazaRazo/nReaccio/nRealidadReba~oReboteRecaerRecetaRechazoRecogerRecreoRectoRecursoRedRedondoReducirReflejoReformaRefra/nRefugioRegaloRegirReglaRegresoRehe/nReinoRei/rRejaRelatoRelevoRelieveRellenoRelojRemarRemedioRemoRencorRendirRentaRepartoRepetirReposoReptilResRescateResinaRespetoRestoResumenRetiroRetornoRetratoReunirReve/sRevistaReyRezarRicoRiegoRiendaRiesgoRifaRi/gidoRigorRinco/nRi~o/nRi/oRiquezaRisaRitmoRitoRizoRobleRoceRociarRodarRodeoRodillaRoerRojizoRojoRomeroRomperRonRoncoRondaRopaRoperoRosaRoscaRostroRotarRubi/RuborRudoRuedaRugirRuidoRuinaRuletaRuloRumboRumorRupturaRutaRutinaSa/badoSaberSabioSableSacarSagazSagradoSalaSaldoSaleroSalirSalmo/nSalo/nSalsaSaltoSaludSalvarSambaSancio/nSandi/aSanearSangreSanidadSanoSantoSapoSaqueSardinaSarte/nSastreSata/nSaunaSaxofo/nSeccio/nSecoSecretoSectaSedSeguirSeisSelloSelvaSemanaSemillaSendaSensorSe~alSe~orSepararSepiaSequi/aSerSerieSermo/nServirSesentaSesio/nSetaSetentaSeveroSexoSextoSidraSiestaSieteSigloSignoSi/labaSilbarSilencioSillaSi/mboloSimioSirenaSistemaSitioSituarSobreSocioSodioSolSolapaSoldadoSoledadSo/lidoSoltarSolucio/nSombraSondeoSonidoSonoroSonrisaSopaSoplarSoporteSordoSorpresaSorteoSoste/nSo/tanoSuaveSubirSucesoSudorSuegraSueloSue~oSuerteSufrirSujetoSulta/nSumarSuperarSuplirSuponerSupremoSurSurcoSure~oSurgirSustoSutilTabacoTabiqueTablaTabu/TacoTactoTajoTalarTalcoTalentoTallaTalo/nTama~oTamborTangoTanqueTapaTapeteTapiaTapo/nTaquillaTardeTareaTarifaTarjetaTarotTarroTartaTatuajeTauroTazaTazo/nTeatroTechoTeclaTe/cnicaTejadoTejerTejidoTelaTele/fonoTemaTemorTemploTenazTenderTenerTenisTensoTeori/aTerapiaTercoTe/rminoTernuraTerrorTesisTesoroTestigoTeteraTextoTezTibioTiburo/nTiempoTiendaTierraTiesoTigreTijeraTildeTimbreTi/midoTimoTintaTi/oTi/picoTipoTiraTiro/nTita/nTi/tereTi/tuloTizaToallaTobilloTocarTocinoTodoTogaToldoTomarTonoTontoToparTopeToqueTo/raxToreroTormentaTorneoToroTorpedoTorreTorsoTortugaTosToscoToserTo/xicoTrabajoTractorTraerTra/ficoTragoTrajeTramoTranceTratoTraumaTrazarTre/bolTreguaTreintaTrenTreparTresTribuTrigoTripaTristeTriunfoTrofeoTrompaTroncoTropaTroteTrozoTrucoTruenoTrufaTuberi/aTuboTuertoTumbaTumorTu/nelTu/nicaTurbinaTurismoTurnoTutorUbicarU/lceraUmbralUnidadUnirUniversoUnoUntarU~aUrbanoUrbeUrgenteUrnaUsarUsuarioU/tilUtopi/aUvaVacaVaci/oVacunaVagarVagoVainaVajillaValeVa/lidoValleValorVa/lvulaVampiroVaraVariarVaro/nVasoVecinoVectorVehi/culoVeinteVejezVelaVeleroVelozVenaVencerVendaVenenoVengarVenirVentaVenusVerVeranoVerboVerdeVeredaVerjaVersoVerterVi/aViajeVibrarVicioVi/ctimaVidaVi/deoVidrioViejoViernesVigorVilVillaVinagreVinoVi~edoVioli/nViralVirgoVirtudVisorVi/speraVistaVitaminaViudoVivazViveroVivirVivoVolca/nVolumenVolverVorazVotarVotoVozVueloVulgarYacerYateYeguaYemaYernoYesoYodoYogaYogurZafiroZanjaZapatoZarzaZonaZorroZumoZurdo\";\nconst lookup = {};\nlet wordlist$2 = null;\n\nfunction dropDiacritic(word) {\n  logger$k.checkNormalize();\n  return toUtf8String(Array.prototype.filter.call(toUtf8Bytes(word.normalize(\"NFD\").toLowerCase()), c => {\n    return c >= 65 && c <= 90 || c >= 97 && c <= 123;\n  }));\n}\n\nfunction expand(word) {\n  const output = [];\n  Array.prototype.forEach.call(toUtf8Bytes(word), c => {\n    // Acute accent\n    if (c === 47) {\n      output.push(204);\n      output.push(129); // n-tilde\n    } else if (c === 126) {\n      output.push(110);\n      output.push(204);\n      output.push(131);\n    } else {\n      output.push(c);\n    }\n  });\n  return toUtf8String(output);\n}\n\nfunction loadWords$2(lang) {\n  if (wordlist$2 != null) {\n    return;\n  }\n\n  wordlist$2 = words$2.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \").map(w => expand(w));\n  wordlist$2.forEach((word, index) => {\n    lookup[dropDiacritic(word)] = index;\n  }); // Verify the computed list matches the official list\n\n  /* istanbul ignore if */\n\n  if (Wordlist.check(lang) !== \"0xf74fb7092aeacdfbf8959557de22098da512207fb9f109cb526994938cf40300\") {\n    wordlist$2 = null;\n    throw new Error(\"BIP39 Wordlist for es (Spanish) FAILED\");\n  }\n}\n\nclass LangEs extends Wordlist {\n  constructor() {\n    super(\"es\");\n  }\n\n  getWord(index) {\n    loadWords$2(this);\n    return wordlist$2[index];\n  }\n\n  getWordIndex(word) {\n    loadWords$2(this);\n    return lookup[dropDiacritic(word)];\n  }\n\n}\n\nconst langEs = new LangEs();\nWordlist.register(langEs);\nconst words$3 = \"AbaisserAbandonAbdiquerAbeilleAbolirAborderAboutirAboyerAbrasifAbreuverAbriterAbrogerAbruptAbsenceAbsoluAbsurdeAbusifAbyssalAcade/mieAcajouAcarienAccablerAccepterAcclamerAccoladeAccrocheAccuserAcerbeAchatAcheterAcidulerAcierAcompteAcque/rirAcronymeActeurActifActuelAdepteAde/quatAdhe/sifAdjectifAdjugerAdmettreAdmirerAdopterAdorerAdoucirAdresseAdroitAdulteAdverbeAe/rerAe/ronefAffaireAffecterAfficheAffreuxAffublerAgacerAgencerAgileAgiterAgraferAgre/ableAgrumeAiderAiguilleAilierAimableAisanceAjouterAjusterAlarmerAlchimieAlerteAlge-breAlgueAlie/nerAlimentAlle/gerAlliageAllouerAllumerAlourdirAlpagaAltesseAlve/oleAmateurAmbiguAmbreAme/nagerAmertumeAmidonAmiralAmorcerAmourAmovibleAmphibieAmpleurAmusantAnalyseAnaphoreAnarchieAnatomieAncienAne/antirAngleAngoisseAnguleuxAnimalAnnexerAnnonceAnnuelAnodinAnomalieAnonymeAnormalAntenneAntidoteAnxieuxApaiserApe/ritifAplanirApologieAppareilAppelerApporterAppuyerAquariumAqueducArbitreArbusteArdeurArdoiseArgentArlequinArmatureArmementArmoireArmureArpenterArracherArriverArroserArsenicArte/rielArticleAspectAsphalteAspirerAssautAsservirAssietteAssocierAssurerAsticotAstreAstuceAtelierAtomeAtriumAtroceAttaqueAttentifAttirerAttraperAubaineAubergeAudaceAudibleAugurerAuroreAutomneAutrucheAvalerAvancerAvariceAvenirAverseAveugleAviateurAvideAvionAviserAvoineAvouerAvrilAxialAxiomeBadgeBafouerBagageBaguetteBaignadeBalancerBalconBaleineBalisageBambinBancaireBandageBanlieueBannie-reBanquierBarbierBarilBaronBarqueBarrageBassinBastionBatailleBateauBatterieBaudrierBavarderBeletteBe/lierBeloteBe/ne/ficeBerceauBergerBerlineBermudaBesaceBesogneBe/tailBeurreBiberonBicycleBiduleBijouBilanBilingueBillardBinaireBiologieBiopsieBiotypeBiscuitBisonBistouriBitumeBizarreBlafardBlagueBlanchirBlessantBlinderBlondBloquerBlousonBobardBobineBoireBoiserBolideBonbonBondirBonheurBonifierBonusBordureBorneBotteBoucleBoueuxBougieBoulonBouquinBourseBoussoleBoutiqueBoxeurBrancheBrasierBraveBrebisBre-cheBreuvageBricolerBrigadeBrillantBriocheBriqueBrochureBroderBronzerBrousseBroyeurBrumeBrusqueBrutalBruyantBuffleBuissonBulletinBureauBurinBustierButinerButoirBuvableBuvetteCabanonCabineCachetteCadeauCadreCafe/ineCaillouCaissonCalculerCalepinCalibreCalmerCalomnieCalvaireCamaradeCame/raCamionCampagneCanalCanetonCanonCantineCanularCapableCaporalCapriceCapsuleCapterCapucheCarabineCarboneCaresserCaribouCarnageCarotteCarreauCartonCascadeCasierCasqueCassureCauserCautionCavalierCaverneCaviarCe/dilleCeintureCe/lesteCelluleCendrierCensurerCentralCercleCe/re/bralCeriseCernerCerveauCesserChagrinChaiseChaleurChambreChanceChapitreCharbonChasseurChatonChaussonChavirerChemiseChenilleChe/quierChercherChevalChienChiffreChignonChime-reChiotChlorureChocolatChoisirChoseChouetteChromeChuteCigareCigogneCimenterCine/maCintrerCirculerCirerCirqueCiterneCitoyenCitronCivilClaironClameurClaquerClasseClavierClientClignerClimatClivageClocheClonageCloporteCobaltCobraCocasseCocotierCoderCodifierCoffreCognerCohe/sionCoifferCoincerCole-reColibriCollineColmaterColonelCombatCome/dieCommandeCompactConcertConduireConfierCongelerConnoterConsonneContactConvexeCopainCopieCorailCorbeauCordageCornicheCorpusCorrectCorte-geCosmiqueCostumeCotonCoudeCoupureCourageCouteauCouvrirCoyoteCrabeCrainteCravateCrayonCre/atureCre/diterCre/meuxCreuserCrevetteCriblerCrierCristalCrite-reCroireCroquerCrotaleCrucialCruelCrypterCubiqueCueillirCuille-reCuisineCuivreCulminerCultiverCumulerCupideCuratifCurseurCyanureCycleCylindreCyniqueDaignerDamierDangerDanseurDauphinDe/battreDe/biterDe/borderDe/briderDe/butantDe/calerDe/cembreDe/chirerDe/ciderDe/clarerDe/corerDe/crireDe/cuplerDe/daleDe/ductifDe/esseDe/fensifDe/filerDe/frayerDe/gagerDe/givrerDe/glutirDe/graferDe/jeunerDe/liceDe/logerDemanderDemeurerDe/molirDe/nicherDe/nouerDentelleDe/nuderDe/partDe/penserDe/phaserDe/placerDe/poserDe/rangerDe/roberDe/sastreDescenteDe/sertDe/signerDe/sobe/irDessinerDestrierDe/tacherDe/testerDe/tourerDe/tresseDevancerDevenirDevinerDevoirDiableDialogueDiamantDicterDiffe/rerDige/rerDigitalDigneDiluerDimancheDiminuerDioxydeDirectifDirigerDiscuterDisposerDissiperDistanceDivertirDiviserDocileDocteurDogmeDoigtDomaineDomicileDompterDonateurDonjonDonnerDopamineDortoirDorureDosageDoseurDossierDotationDouanierDoubleDouceurDouterDoyenDragonDraperDresserDribblerDroitureDuperieDuplexeDurableDurcirDynastieE/blouirE/carterE/charpeE/chelleE/clairerE/clipseE/cloreE/cluseE/coleE/conomieE/corceE/couterE/craserE/cre/merE/crivainE/crouE/cumeE/cureuilE/difierE/duquerEffacerEffectifEffigieEffortEffrayerEffusionE/galiserE/garerE/jecterE/laborerE/largirE/lectronE/le/gantE/le/phantE/le-veE/ligibleE/litismeE/logeE/luciderE/luderEmballerEmbellirEmbryonE/meraudeE/missionEmmenerE/motionE/mouvoirEmpereurEmployerEmporterEmpriseE/mulsionEncadrerEnche-reEnclaveEncocheEndiguerEndosserEndroitEnduireE/nergieEnfanceEnfermerEnfouirEngagerEnginEngloberE/nigmeEnjamberEnjeuEnleverEnnemiEnnuyeuxEnrichirEnrobageEnseigneEntasserEntendreEntierEntourerEntraverE/nume/rerEnvahirEnviableEnvoyerEnzymeE/olienE/paissirE/pargneE/patantE/pauleE/picerieE/pide/mieE/pierE/pilogueE/pineE/pisodeE/pitapheE/poqueE/preuveE/prouverE/puisantE/querreE/quipeE/rigerE/rosionErreurE/ruptionEscalierEspadonEspe-ceEspie-gleEspoirEspritEsquiverEssayerEssenceEssieuEssorerEstimeEstomacEstradeE/tage-reE/talerE/tancheE/tatiqueE/teindreE/tendoirE/ternelE/thanolE/thiqueEthnieE/tirerE/tofferE/toileE/tonnantE/tourdirE/trangeE/troitE/tudeEuphorieE/valuerE/vasionE/ventailE/videnceE/viterE/volutifE/voquerExactExage/rerExaucerExcellerExcitantExclusifExcuseExe/cuterExempleExercerExhalerExhorterExigenceExilerExisterExotiqueExpe/dierExplorerExposerExprimerExquisExtensifExtraireExulterFableFabuleuxFacetteFacileFactureFaiblirFalaiseFameuxFamilleFarceurFarfeluFarineFaroucheFascinerFatalFatigueFauconFautifFaveurFavoriFe/brileFe/conderFe/de/rerFe/linFemmeFe/murFendoirFe/odalFermerFe/roceFerveurFestivalFeuilleFeutreFe/vrierFiascoFicelerFictifFide-leFigureFilatureFiletageFilie-reFilleulFilmerFilouFiltrerFinancerFinirFioleFirmeFissureFixerFlairerFlammeFlasqueFlatteurFle/auFle-cheFleurFlexionFloconFloreFluctuerFluideFluvialFolieFonderieFongibleFontaineForcerForgeronFormulerFortuneFossileFoudreFouge-reFouillerFoulureFourmiFragileFraiseFranchirFrapperFrayeurFre/gateFreinerFrelonFre/mirFre/ne/sieFre-reFriableFrictionFrissonFrivoleFroidFromageFrontalFrotterFruitFugitifFuiteFureurFurieuxFurtifFusionFuturGagnerGalaxieGalerieGambaderGarantirGardienGarnirGarrigueGazelleGazonGe/antGe/latineGe/luleGendarmeGe/ne/ralGe/nieGenouGentilGe/ologieGe/ome-treGe/raniumGermeGestuelGeyserGibierGiclerGirafeGivreGlaceGlaiveGlisserGlobeGloireGlorieuxGolfeurGommeGonflerGorgeGorilleGoudronGouffreGoulotGoupilleGourmandGoutteGraduelGraffitiGraineGrandGrappinGratuitGravirGrenatGriffureGrillerGrimperGrognerGronderGrotteGroupeGrugerGrutierGruye-reGue/pardGuerrierGuideGuimauveGuitareGustatifGymnasteGyrostatHabitudeHachoirHalteHameauHangarHannetonHaricotHarmonieHarponHasardHe/liumHe/matomeHerbeHe/rissonHermineHe/ronHe/siterHeureuxHibernerHibouHilarantHistoireHiverHomardHommageHomoge-neHonneurHonorerHonteuxHordeHorizonHorlogeHormoneHorribleHouleuxHousseHublotHuileuxHumainHumbleHumideHumourHurlerHydromelHygie-neHymneHypnoseIdylleIgnorerIguaneIlliciteIllusionImageImbiberImiterImmenseImmobileImmuableImpactImpe/rialImplorerImposerImprimerImputerIncarnerIncendieIncidentInclinerIncoloreIndexerIndiceInductifIne/ditIneptieInexactInfiniInfligerInformerInfusionInge/rerInhalerInhiberInjecterInjureInnocentInoculerInonderInscrireInsecteInsigneInsoliteInspirerInstinctInsulterIntactIntenseIntimeIntrigueIntuitifInutileInvasionInventerInviterInvoquerIroniqueIrradierIrre/elIrriterIsolerIvoireIvresseJaguarJaillirJambeJanvierJardinJaugerJauneJavelotJetableJetonJeudiJeunesseJoindreJoncherJonglerJoueurJouissifJournalJovialJoyauJoyeuxJubilerJugementJuniorJuponJuristeJusticeJuteuxJuve/nileKayakKimonoKiosqueLabelLabialLabourerLace/rerLactoseLaguneLaineLaisserLaitierLambeauLamelleLampeLanceurLangageLanterneLapinLargeurLarmeLaurierLavaboLavoirLectureLe/galLe/gerLe/gumeLessiveLettreLevierLexiqueLe/zardLiasseLibe/rerLibreLicenceLicorneLie-geLie-vreLigatureLigoterLigueLimerLimiteLimonadeLimpideLine/aireLingotLionceauLiquideLisie-reListerLithiumLitigeLittoralLivreurLogiqueLointainLoisirLombricLoterieLouerLourdLoutreLouveLoyalLubieLucideLucratifLueurLugubreLuisantLumie-reLunaireLundiLuronLutterLuxueuxMachineMagasinMagentaMagiqueMaigreMaillonMaintienMairieMaisonMajorerMalaxerMale/ficeMalheurMaliceMalletteMammouthMandaterManiableManquantManteauManuelMarathonMarbreMarchandMardiMaritimeMarqueurMarronMartelerMascotteMassifMate/rielMatie-reMatraqueMaudireMaussadeMauveMaximalMe/chantMe/connuMe/dailleMe/decinMe/diterMe/duseMeilleurMe/langeMe/lodieMembreMe/moireMenacerMenerMenhirMensongeMentorMercrediMe/riteMerleMessagerMesureMe/talMe/te/oreMe/thodeMe/tierMeubleMiaulerMicrobeMietteMignonMigrerMilieuMillionMimiqueMinceMine/ralMinimalMinorerMinuteMiracleMiroiterMissileMixteMobileModerneMoelleuxMondialMoniteurMonnaieMonotoneMonstreMontagneMonumentMoqueurMorceauMorsureMortierMoteurMotifMoucheMoufleMoulinMoussonMoutonMouvantMultipleMunitionMurailleMure-neMurmureMuscleMuse/umMusicienMutationMuterMutuelMyriadeMyrtilleMyste-reMythiqueNageurNappeNarquoisNarrerNatationNationNatureNaufrageNautiqueNavireNe/buleuxNectarNe/fasteNe/gationNe/gligerNe/gocierNeigeNerveuxNettoyerNeuroneNeutronNeveuNicheNickelNitrateNiveauNobleNocifNocturneNoirceurNoisetteNomadeNombreuxNommerNormatifNotableNotifierNotoireNourrirNouveauNovateurNovembreNoviceNuageNuancerNuireNuisibleNume/roNuptialNuqueNutritifObe/irObjectifObligerObscurObserverObstacleObtenirObturerOccasionOccuperOce/anOctobreOctroyerOctuplerOculaireOdeurOdorantOffenserOfficierOffrirOgiveOiseauOisillonOlfactifOlivierOmbrageOmettreOnctueuxOndulerOne/reuxOniriqueOpaleOpaqueOpe/rerOpinionOpportunOpprimerOpterOptiqueOrageuxOrangeOrbiteOrdonnerOreilleOrganeOrgueilOrificeOrnementOrqueOrtieOscillerOsmoseOssatureOtarieOuraganOursonOutilOutragerOuvrageOvationOxydeOxyge-neOzonePaisiblePalacePalmare-sPalourdePalperPanachePandaPangolinPaniquerPanneauPanoramaPantalonPapayePapierPapoterPapyrusParadoxeParcelleParesseParfumerParlerParoleParrainParsemerPartagerParureParvenirPassionPaste-quePaternelPatiencePatronPavillonPavoiserPayerPaysagePeignePeintrePelagePe/licanPellePelousePeluchePendulePe/ne/trerPe/niblePensifPe/nuriePe/pitePe/plumPerdrixPerforerPe/riodePermuterPerplexePersilPertePeserPe/talePetitPe/trirPeuplePharaonPhobiePhoquePhotonPhrasePhysiquePianoPicturalPie-cePierrePieuvrePilotePinceauPipettePiquerPiroguePiscinePistonPivoterPixelPizzaPlacardPlafondPlaisirPlanerPlaquePlastronPlateauPleurerPlexusPliagePlombPlongerPluiePlumagePochettePoe/siePoe-tePointePoirierPoissonPoivrePolairePolicierPollenPolygonePommadePompierPonctuelPonde/rerPoneyPortiquePositionPosse/derPosturePotagerPoteauPotionPoucePoulainPoumonPourprePoussinPouvoirPrairiePratiquePre/cieuxPre/direPre/fixePre/ludePre/nomPre/sencePre/textePre/voirPrimitifPrincePrisonPriverProble-meProce/derProdigeProfondProgre-sProieProjeterProloguePromenerPropreProspe-reProte/gerProuesseProverbePrudencePruneauPsychosePublicPuceronPuiserPulpePulsarPunaisePunitifPupitrePurifierPuzzlePyramideQuasarQuerelleQuestionQuie/tudeQuitterQuotientRacineRaconterRadieuxRagondinRaideurRaisinRalentirRallongeRamasserRapideRasageRatisserRavagerRavinRayonnerRe/actifRe/agirRe/aliserRe/animerRecevoirRe/citerRe/clamerRe/colterRecruterReculerRecyclerRe/digerRedouterRefaireRe/flexeRe/formerRefrainRefugeRe/galienRe/gionRe/glageRe/gulierRe/ite/rerRejeterRejouerRelatifReleverReliefRemarqueReme-deRemiseRemonterRemplirRemuerRenardRenfortReniflerRenoncerRentrerRenvoiReplierReporterRepriseReptileRequinRe/serveRe/sineuxRe/soudreRespectResterRe/sultatRe/tablirRetenirRe/ticuleRetomberRetracerRe/unionRe/ussirRevancheRevivreRe/volteRe/vulsifRichesseRideauRieurRigideRigolerRincerRiposterRisibleRisqueRituelRivalRivie-reRocheuxRomanceRompreRonceRondinRoseauRosierRotatifRotorRotuleRougeRouilleRouleauRoutineRoyaumeRubanRubisRucheRuelleRugueuxRuinerRuisseauRuserRustiqueRythmeSablerSaboterSabreSacocheSafariSagesseSaisirSaladeSaliveSalonSaluerSamediSanctionSanglierSarcasmeSardineSaturerSaugrenuSaumonSauterSauvageSavantSavonnerScalpelScandaleSce/le/ratSce/narioSceptreSche/maScienceScinderScoreScrutinSculpterSe/anceSe/cableSe/cherSecouerSe/cre/terSe/datifSe/duireSeigneurSe/jourSe/lectifSemaineSemblerSemenceSe/minalSe/nateurSensibleSentenceSe/parerSe/quenceSereinSergentSe/rieuxSerrureSe/rumServiceSe/sameSe/virSevrageSextupleSide/ralSie-cleSie/gerSifflerSigleSignalSilenceSiliciumSimpleSince-reSinistreSiphonSiropSismiqueSituerSkierSocialSocleSodiumSoigneuxSoldatSoleilSolitudeSolubleSombreSommeilSomnolerSondeSongeurSonnetteSonoreSorcierSortirSosieSottiseSoucieuxSoudureSouffleSouleverSoupapeSourceSoutirerSouvenirSpacieuxSpatialSpe/cialSphe-reSpiralStableStationSternumStimulusStipulerStrictStudieuxStupeurStylisteSublimeSubstratSubtilSubvenirSucce-sSucreSuffixeSugge/rerSuiveurSulfateSuperbeSupplierSurfaceSuricateSurmenerSurpriseSursautSurvieSuspectSyllabeSymboleSyme/trieSynapseSyntaxeSyste-meTabacTablierTactileTaillerTalentTalismanTalonnerTambourTamiserTangibleTapisTaquinerTarderTarifTartineTasseTatamiTatouageTaupeTaureauTaxerTe/moinTemporelTenailleTendreTeneurTenirTensionTerminerTerneTerribleTe/tineTexteThe-meThe/orieThe/rapieThoraxTibiaTie-deTimideTirelireTiroirTissuTitaneTitreTituberTobogganTole/rantTomateToniqueTonneauToponymeTorcheTordreTornadeTorpilleTorrentTorseTortueTotemToucherTournageTousserToxineTractionTraficTragiqueTrahirTrainTrancherTravailTre-fleTremperTre/sorTreuilTriageTribunalTricoterTrilogieTriompheTriplerTriturerTrivialTromboneTroncTropicalTroupeauTuileTulipeTumulteTunnelTurbineTuteurTutoyerTuyauTympanTyphonTypiqueTyranUbuesqueUltimeUltrasonUnanimeUnifierUnionUniqueUnitaireUniversUraniumUrbainUrticantUsageUsineUsuelUsureUtileUtopieVacarmeVaccinVagabondVagueVaillantVaincreVaisseauValableValiseVallonValveVampireVanilleVapeurVarierVaseuxVassalVasteVecteurVedetteVe/ge/talVe/hiculeVeinardVe/loceVendrediVe/ne/rerVengerVenimeuxVentouseVerdureVe/rinVernirVerrouVerserVertuVestonVe/te/ranVe/tusteVexantVexerViaducViandeVictoireVidangeVide/oVignetteVigueurVilainVillageVinaigreViolonVipe-reVirementVirtuoseVirusVisageViseurVisionVisqueuxVisuelVitalVitesseViticoleVitrineVivaceVivipareVocationVoguerVoileVoisinVoitureVolailleVolcanVoltigerVolumeVoraceVortexVoterVouloirVoyageVoyelleWagonXe/nonYachtZe-breZe/nithZesteZoologie\";\nlet wordlist$3 = null;\nconst lookup$1 = {};\n\nfunction dropDiacritic$1(word) {\n  logger$k.checkNormalize();\n  return toUtf8String(Array.prototype.filter.call(toUtf8Bytes(word.normalize(\"NFD\").toLowerCase()), c => {\n    return c >= 65 && c <= 90 || c >= 97 && c <= 123;\n  }));\n}\n\nfunction expand$1(word) {\n  const output = [];\n  Array.prototype.forEach.call(toUtf8Bytes(word), c => {\n    // Acute accent\n    if (c === 47) {\n      output.push(204);\n      output.push(129); // Grave accent\n    } else if (c === 45) {\n      output.push(204);\n      output.push(128);\n    } else {\n      output.push(c);\n    }\n  });\n  return toUtf8String(output);\n}\n\nfunction loadWords$3(lang) {\n  if (wordlist$3 != null) {\n    return;\n  }\n\n  wordlist$3 = words$3.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \").map(w => expand$1(w));\n  wordlist$3.forEach((word, index) => {\n    lookup$1[dropDiacritic$1(word)] = index;\n  }); // Verify the computed list matches the official list\n\n  /* istanbul ignore if */\n\n  if (Wordlist.check(lang) !== \"0x51deb7ae009149dc61a6bd18a918eb7ac78d2775726c68e598b92d002519b045\") {\n    wordlist$3 = null;\n    throw new Error(\"BIP39 Wordlist for fr (French) FAILED\");\n  }\n}\n\nclass LangFr extends Wordlist {\n  constructor() {\n    super(\"fr\");\n  }\n\n  getWord(index) {\n    loadWords$3(this);\n    return wordlist$3[index];\n  }\n\n  getWordIndex(word) {\n    loadWords$3(this);\n    return lookup$1[dropDiacritic$1(word)];\n  }\n\n}\n\nconst langFr = new LangFr();\nWordlist.register(langFr);\nconst data = [// 4-kana words\n\"AQRASRAGBAGUAIRAHBAghAURAdBAdcAnoAMEAFBAFCBKFBQRBSFBCXBCDBCHBGFBEQBpBBpQBIkBHNBeOBgFBVCBhBBhNBmOBmRBiHBiFBUFBZDBvFBsXBkFBlcBjYBwDBMBBTBBTRBWBBWXXaQXaRXQWXSRXCFXYBXpHXOQXHRXhRXuRXmXXbRXlXXwDXTRXrCXWQXWGaBWaKcaYgasFadQalmaMBacAKaRKKBKKXKKjKQRKDRKCYKCRKIDKeVKHcKlXKjHKrYNAHNBWNaRNKcNIBNIONmXNsXNdXNnBNMBNRBNrXNWDNWMNFOQABQAHQBrQXBQXFQaRQKXQKDQKOQKFQNBQNDQQgQCXQCDQGBQGDQGdQYXQpBQpQQpHQLXQHuQgBQhBQhCQuFQmXQiDQUFQZDQsFQdRQkHQbRQlOQlmQPDQjDQwXQMBQMDQcFQTBQTHQrDDXQDNFDGBDGQDGRDpFDhFDmXDZXDbRDMYDRdDTRDrXSAhSBCSBrSGQSEQSHBSVRShYShkSyQSuFSiBSdcSoESocSlmSMBSFBSFKSFNSFdSFcCByCaRCKcCSBCSRCCrCGbCEHCYXCpBCpQCIBCIHCeNCgBCgFCVECVcCmkCmwCZXCZFCdRClOClmClFCjDCjdCnXCwBCwXCcRCFQCFjGXhGNhGDEGDMGCDGCHGIFGgBGVXGVEGVRGmXGsXGdYGoSGbRGnXGwXGwDGWRGFNGFLGFOGFdGFkEABEBDEBFEXOEaBEKSENBENDEYXEIgEIkEgBEgQEgHEhFEudEuFEiBEiHEiFEZDEvBEsXEsFEdXEdREkFEbBEbRElFEPCEfkEFNYAEYAhYBNYQdYDXYSRYCEYYoYgQYgRYuRYmCYZTYdBYbEYlXYjQYRbYWRpKXpQopQnpSFpCXpIBpISphNpdBpdRpbRpcZpFBpFNpFDpFopFrLADLBuLXQLXcLaFLCXLEhLpBLpFLHXLeVLhILdHLdRLoDLbRLrXIABIBQIBCIBsIBoIBMIBRIXaIaRIKYIKRINBINuICDIGBIIDIIkIgRIxFIyQIiHIdRIbYIbRIlHIwRIMYIcRIRVITRIFBIFNIFQOABOAFOBQOaFONBONMOQFOSFOCDOGBOEQOpBOLXOIBOIFOgQOgFOyQOycOmXOsXOdIOkHOMEOMkOWWHBNHXNHXWHNXHDuHDRHSuHSRHHoHhkHmRHdRHkQHlcHlRHwBHWcgAEgAggAkgBNgBQgBEgXOgYcgLXgHjgyQgiBgsFgdagMYgWSgFQgFEVBTVXEVKBVKNVKDVKYVKRVNBVNYVDBVDxVSBVSRVCjVGNVLXVIFVhBVhcVsXVdRVbRVlRhBYhKYhDYhGShxWhmNhdahdkhbRhjohMXhTRxAXxXSxKBxNBxEQxeNxeQxhXxsFxdbxlHxjcxFBxFNxFQxFOxFoyNYyYoybcyMYuBQuBRuBruDMuCouHBudQukkuoBulVuMXuFEmCYmCRmpRmeDmiMmjdmTFmFQiADiBOiaRiKRiNBiNRiSFiGkiGFiERipRiLFiIFihYibHijBijEiMXiWBiFBiFCUBQUXFUaRUNDUNcUNRUNFUDBUSHUCDUGBUGFUEqULNULoUIRUeEUeYUgBUhFUuRUiFUsXUdFUkHUbBUjSUjYUwXUMDUcHURdUTBUrBUrXUrQZAFZXZZaRZKFZNBZQFZCXZGBZYdZpBZLDZIFZHXZHNZeQZVRZVFZmXZiBZvFZdFZkFZbHZbFZwXZcCZcRZRBvBQvBGvBLvBWvCovMYsAFsBDsaRsKFsNFsDrsSHsSFsCXsCRsEBsEHsEfspBsLBsLDsIgsIRseGsbRsFBsFQsFSdNBdSRdCVdGHdYDdHcdVbdySduDdsXdlRdwXdWYdWcdWRkBMkXOkaRkNIkNFkSFkCFkYBkpRkeNkgBkhVkmXksFklVkMBkWDkFNoBNoaQoaFoNBoNXoNaoNEoSRoEroYXoYCoYbopRopFomXojkowXorFbBEbEIbdBbjYlaRlDElMXlFDjKjjSRjGBjYBjYkjpRjLXjIBjOFjeVjbRjwBnXQnSHnpFnLXnINnMBnTRwXBwXNwXYwNFwQFwSBwGFwLXwLDweNwgBwuHwjDwnXMBXMpFMIBMeNMTHcaQcNBcDHcSFcCXcpBcLXcLDcgFcuFcnXcwXccDcTQcrFTQErXNrCHrpFrgFrbFrTHrFcWNYWNbWEHWMXWTR\", // 5-kana words\n\"ABGHABIJAEAVAYJQALZJAIaRAHNXAHdcAHbRAZJMAZJRAZTRAdVJAklmAbcNAjdRAMnRAMWYAWpRAWgRAFgBAFhBAFdcBNJBBNJDBQKBBQhcBQlmBDEJBYJkBYJTBpNBBpJFBIJBBIJDBIcABOKXBOEJBOVJBOiJBOZJBepBBeLXBeIFBegBBgGJBVJXBuocBiJRBUJQBlXVBlITBwNFBMYVBcqXBTlmBWNFBWiJBWnRBFGHBFwXXKGJXNJBXNZJXDTTXSHSXSVRXSlHXCJDXGQJXEhXXYQJXYbRXOfXXeNcXVJFXhQJXhEJXdTRXjdXXMhBXcQTXRGBXTEBXTnQXFCXXFOFXFgFaBaFaBNJaBCJaBpBaBwXaNJKaNJDaQIBaDpRaEPDaHMFamDJalEJaMZJaFaFaFNBaFQJaFLDaFVHKBCYKBEBKBHDKXaFKXGdKXEJKXpHKXIBKXZDKXwXKKwLKNacKNYJKNJoKNWcKDGdKDTRKChXKGaRKGhBKGbRKEBTKEaRKEPTKLMDKLWRKOHDKVJcKdBcKlIBKlOPKFSBKFEPKFpFNBNJNJBQNBGHNBEPNBHXNBgFNBVXNBZDNBsXNBwXNNaRNNJDNNJENNJkNDCJNDVDNGJRNJiDNZJNNsCJNJFNNFSBNFCXNFEPNFLXNFIFQJBFQCaRQJEQQLJDQLJFQIaRQOqXQHaFQHHQQVJXQVJDQhNJQmEIQZJFQsJXQJrFQWbRDJABDBYJDXNFDXCXDXLXDXZDDXsJDQqXDSJFDJCXDEPkDEqXDYmQDpSJDOCkDOGQDHEIDVJDDuDuDWEBDJFgSBNDSBSFSBGHSBIBSBTQSKVYSJQNSJQiSJCXSEqXSJYVSIiJSOMYSHAHSHaQSeCFSepQSegBSHdHSHrFShSJSJuHSJUFSkNRSrSrSWEBSFaHSJFQSFCXSFGDSFYXSFODSFgBSFVXSFhBSFxFSFkFSFbBSFMFCADdCJXBCXaFCXKFCXNFCXCXCXGBCXEJCXYBCXLDCXIBCXOPCXHXCXgBCXhBCXiBCXlDCXcHCJNBCJNFCDCJCDGBCDVXCDhBCDiDCDJdCCmNCpJFCIaRCOqXCHCHCHZJCViJCuCuCmddCJiFCdNBCdHhClEJCnUJCreSCWlgCWTRCFBFCFNBCFYBCFVFCFhFCFdSCFTBCFWDGBNBGBQFGJBCGBEqGBpBGBgQGNBEGNJYGNkOGNJRGDUFGJpQGHaBGJeNGJeEGVBlGVKjGiJDGvJHGsVJGkEBGMIJGWjNGFBFGFCXGFGBGFYXGFpBGFMFEASJEAWpEJNFECJVEIXSEIQJEOqXEOcFEeNcEHEJEHlFEJgFEhlmEmDJEmZJEiMBEUqXEoSREPBFEPXFEPKFEPSFEPEFEPpFEPLXEPIBEJPdEPcFEPTBEJnXEqlHEMpREFCXEFODEFcFYASJYJAFYBaBYBVXYXpFYDhBYCJBYJGFYYbRYeNcYJeVYiIJYZJcYvJgYvJRYJsXYsJFYMYMYreVpBNHpBEJpBwXpQxFpYEJpeNDpJeDpeSFpeCHpHUJpHbBpHcHpmUJpiiJpUJrpsJuplITpFaBpFQqpFGBpFEfpFYBpFpBpFLJpFIDpFgBpFVXpFyQpFuFpFlFpFjDpFnXpFwXpJFMpFTBLXCJLXEFLXhFLXUJLXbFLalmLNJBLSJQLCLCLGJBLLDJLHaFLeNFLeSHLeCXLepFLhaRLZsJLsJDLsJrLocaLlLlLMdbLFNBLFSBLFEHLFkFIBBFIBXFIBaQIBKXIBSFIBpHIBLXIBgBIBhBIBuHIBmXIBiFIBZXIBvFIBbFIBjQIBwXIBWFIKTRIQUJIDGFICjQIYSRIINXIJeCIVaRImEkIZJFIvJRIsJXIdCJIJoRIbBQIjYBIcqXITFVIreVIFKFIFSFIFCJIFGFIFLDIFIBIJFOIFgBIFVXIJFhIFxFIFmXIFdHIFbBIJFrIJFWOBGBOQfXOOKjOUqXOfXBOqXEOcqXORVJOFIBOFlDHBIOHXiFHNTRHCJXHIaRHHJDHHEJHVbRHZJYHbIBHRsJHRkDHWlmgBKFgBSBgBCDgBGHgBpBgBIBgBVJgBuBgBvFgKDTgQVXgDUJgGSJgOqXgmUMgZIJgTUJgWIEgFBFgFNBgFDJgFSFgFGBgFYXgJFOgFgQgFVXgFhBgFbHgJFWVJABVQKcVDgFVOfXVeDFVhaRVmGdViJYVMaRVFNHhBNDhBCXhBEqhBpFhBLXhNJBhSJRheVXhhKEhxlmhZIJhdBQhkIJhbMNhMUJhMZJxNJgxQUJxDEkxDdFxSJRxplmxeSBxeCXxeGFxeYXxepQxegBxWVcxFEQxFLXxFIBxFgBxFxDxFZtxFdcxFbBxFwXyDJXyDlcuASJuDJpuDIBuCpJuGSJuIJFueEFuZIJusJXudWEuoIBuWGJuFBcuFKEuFNFuFQFuFDJuFGJuFVJuFUtuFdHuFTBmBYJmNJYmQhkmLJDmLJomIdXmiJYmvJRmsJRmklmmMBymMuCmclmmcnQiJABiJBNiJBDiBSFiBCJiBEFiBYBiBpFiBLXiBTHiJNciDEfiCZJiECJiJEqiOkHiHKFieNDiHJQieQcieDHieSFieCXieGFieEFieIHiegFihUJixNoioNXiFaBiFKFiFNDiFEPiFYXitFOitFHiFgBiFVEiFmXiFitiFbBiFMFiFrFUCXQUIoQUIJcUHQJUeCEUHwXUUJDUUqXUdWcUcqXUrnQUFNDUFSHUFCFUFEfUFLXUtFOZBXOZXSBZXpFZXVXZEQJZEJkZpDJZOqXZeNHZeCDZUqXZFBQZFEHZFLXvBAFvBKFvBCXvBEPvBpHvBIDvBgFvBuHvQNJvFNFvFGBvFIBvJFcsXCDsXLXsXsXsXlFsXcHsQqXsJQFsEqXseIFsFEHsFjDdBxOdNpRdNJRdEJbdpJRdhZJdnSJdrjNdFNJdFQHdFhNkNJDkYaRkHNRkHSRkVbRkuMRkjSJkcqDoSJFoEiJoYZJoOfXohEBoMGQocqXbBAFbBXFbBaFbBNDbBGBbBLXbBTBbBWDbGJYbIJHbFQqbFpQlDgQlOrFlVJRjGEBjZJRnXvJnXbBnEfHnOPDngJRnxfXnUJWwXEJwNpJwDpBwEfXwrEBMDCJMDGHMDIJMLJDcQGDcQpHcqXccqNFcqCXcFCJRBSBRBGBRBEJRBpQTBNFTBQJTBpBTBVXTFABTFSBTFCFTFGBTFMDrXCJrXLDrDNJrEfHrFQJrFitWNjdWNTR\", // 6-kana words\n\"AKLJMANOPFASNJIAEJWXAYJNRAIIbRAIcdaAeEfDAgidRAdjNYAMYEJAMIbRAFNJBAFpJFBBIJYBDZJFBSiJhBGdEBBEJfXBEJqXBEJWRBpaUJBLXrXBIYJMBOcfXBeEfFBestXBjNJRBcDJOBFEqXXNvJRXDMBhXCJNYXOAWpXONJWXHDEBXeIaRXhYJDXZJSJXMDJOXcASJXFVJXaBQqXaBZJFasXdQaFSJQaFEfXaFpJHaFOqXKBNSRKXvJBKQJhXKEJQJKEJGFKINJBKIJjNKgJNSKVElmKVhEBKiJGFKlBgJKjnUJKwsJYKMFIJKFNJDKFIJFKFOfXNJBSFNJBCXNBpJFNJBvQNJBMBNJLJXNJOqXNJeCXNJeGFNdsJCNbTKFNwXUJQNFEPQDiJcQDMSJQSFpBQGMQJQJeOcQyCJEQUJEBQJFBrQFEJqDXDJFDJXpBDJXIMDGiJhDIJGRDJeYcDHrDJDVXgFDkAWpDkIgRDjDEqDMvJRDJFNFDJFIBSKclmSJQOFSJQVHSJQjDSJGJBSJGJFSECJoSHEJqSJHTBSJVJDSViJYSZJNBSJsJDSFSJFSFEfXSJFLXCBUJVCJXSBCJXpBCXVJXCJXsXCJXdFCJNJHCLIJgCHiJFCVNJMChCJhCUHEJCsJTRCJdYcCoQJCCFEfXCFIJgCFUJxCFstFGJBaQGJBIDGQJqXGYJNRGJHKFGeQqDGHEJFGJeLXGHIiJGHdBlGUJEBGkIJTGFQPDGJFEqEAGegEJIJBEJVJXEhQJTEiJNcEJZJFEJoEqEjDEqEPDsXEPGJBEPOqXEPeQFEfDiDEJfEFEfepQEfMiJEqXNBEqDIDEqeSFEqVJXEMvJRYXNJDYXEJHYKVJcYYJEBYJeEcYJUqXYFpJFYFstXpAZJMpBSJFpNBNFpeQPDpHLJDpHIJFpHgJFpeitFpHZJFpJFADpFSJFpJFCJpFOqXpFitBpJFZJLXIJFLIJgRLVNJWLVHJMLwNpJLFGJBLFLJDLFOqXLJFUJIBDJXIBGJBIJBYQIJBIBIBOqXIBcqDIEGJFILNJTIIJEBIOiJhIJeNBIJeIBIhiJIIWoTRIJFAHIJFpBIJFuHIFUtFIJFTHOSBYJOEcqXOHEJqOvBpFOkVJrObBVJOncqDOcNJkHhNJRHuHJuHdMhBgBUqXgBsJXgONJBgHNJDgHHJQgJeitgHsJXgJyNagyDJBgZJDrgsVJQgkEJNgkjSJgJFAHgFCJDgFZtMVJXNFVXQfXVJXDJVXoQJVQVJQVDEfXVDvJHVEqNFVeQfXVHpJFVHxfXVVJSRVVmaRVlIJOhCXVJhHjYkhxCJVhWVUJhWiJcxBNJIxeEqDxfXBFxcFEPxFSJFxFYJXyBDQJydaUJyFOPDuYCJYuLvJRuHLJXuZJLDuFOPDuFZJHuFcqXmKHJdmCQJcmOsVJiJAGFitLCFieOfXiestXiZJMEikNJQirXzFiFQqXiFIJFiFZJFiFvtFUHpJFUteIcUteOcUVCJkUhdHcUbEJEUJqXQUMNJhURjYkUFitFZDGJHZJIxDZJVJXZJFDJZJFpQvBNJBvBSJFvJxBrseQqDsVFVJdFLJDkEJNBkmNJYkFLJDoQJOPoGsJRoEAHBoEJfFbBQqDbBZJHbFVJXlFIJBjYIrXjeitcjjCEBjWMNBwXQfXwXOaFwDsJXwCJTRwrCZJMDNJQcDDJFcqDOPRYiJFTBsJXTQIJBTFEfXTFLJDrXEJFrEJXMrFZJFWEJdEWYTlm\", // 7-kana words\n\"ABCDEFACNJTRAMBDJdAcNJVXBLNJEBXSIdWRXErNJkXYDJMBXZJCJaXMNJaYKKVJKcKDEJqXKDcNJhKVJrNYKbgJVXKFVJSBNBYBwDNJeQfXNJeEqXNhGJWENJFiJRQlIJbEQJfXxDQqXcfXQFNDEJQFwXUJDYcnUJDJIBgQDIUJTRDJFEqDSJQSJFSJQIJFSOPeZtSJFZJHCJXQfXCTDEqFGJBSJFGJBOfXGJBcqXGJHNJDGJRLiJEJfXEqEJFEJPEFpBEJYJBZJFYBwXUJYiJMEBYJZJyTYTONJXpQMFXFpeGIDdpJFstXpJFcPDLBVSJRLHQJqXLJFZJFIJBNJDIJBUqXIBkFDJIJEJPTIYJGWRIJeQPDIJeEfHIJFsJXOqGDSFHXEJqXgJCsJCgGQJqXgdQYJEgFMFNBgJFcqDVJwXUJVJFZJchIgJCCxOEJqXxOwXUJyDJBVRuscisciJBiJBieUtqXiJFDJkiFsJXQUGEZJcUJFsJXZtXIrXZDZJDrZJFNJDZJFstXvJFQqXvJFCJEsJXQJqkhkNGBbDJdTRbYJMEBlDwXUJMEFiJFcfXNJDRcNJWMTBLJXC\", // 8-kana words\n\"BraFUtHBFSJFdbNBLJXVJQoYJNEBSJBEJfHSJHwXUJCJdAZJMGjaFVJXEJPNJBlEJfFiJFpFbFEJqIJBVJCrIBdHiJhOPFChvJVJZJNJWxGFNIFLueIBQJqUHEJfUFstOZJDrlXEASJRlXVJXSFwVJNJWD\", // 9-kana words\n\"QJEJNNJDQJEJIBSFQJEJxegBQJEJfHEPSJBmXEJFSJCDEJqXLXNJFQqXIcQsFNJFIFEJqXUJgFsJXIJBUJEJfHNFvJxEqXNJnXUJFQqD\", // 10-kana words\n\"IJBEJqXZJ\"]; // Maps each character into its kana value (the index)\n\nconst mapping = \"~~AzB~X~a~KN~Q~D~S~C~G~E~Y~p~L~I~O~eH~g~V~hxyumi~~U~~Z~~v~~s~~dkoblPjfnqwMcRTr~W~~~F~~~~~Jt\";\nlet wordlist$4 = null;\n\nfunction hex(word) {\n  return hexlify(toUtf8Bytes(word));\n}\n\nconst KiYoKu = \"0xe3818de38284e3818f\";\nconst KyoKu = \"0xe3818de38283e3818f\";\n\nfunction loadWords$4(lang) {\n  if (wordlist$4 !== null) {\n    return;\n  }\n\n  wordlist$4 = []; // Transforms for normalizing (sort is a not quite UTF-8)\n\n  const transform = {}; // Delete the diacritic marks\n\n  transform[toUtf8String([227, 130, 154])] = false;\n  transform[toUtf8String([227, 130, 153])] = false; // Some simple transforms that sort out most of the order\n\n  transform[toUtf8String([227, 130, 133])] = toUtf8String([227, 130, 134]);\n  transform[toUtf8String([227, 129, 163])] = toUtf8String([227, 129, 164]);\n  transform[toUtf8String([227, 130, 131])] = toUtf8String([227, 130, 132]);\n  transform[toUtf8String([227, 130, 135])] = toUtf8String([227, 130, 136]); // Normalize words using the transform\n\n  function normalize(word) {\n    let result = \"\";\n\n    for (let i = 0; i < word.length; i++) {\n      let kana = word[i];\n      const target = transform[kana];\n\n      if (target === false) {\n        continue;\n      }\n\n      if (target) {\n        kana = target;\n      }\n\n      result += kana;\n    }\n\n    return result;\n  } // Sort how the Japanese list is sorted\n\n\n  function sortJapanese(a, b) {\n    a = normalize(a);\n    b = normalize(b);\n\n    if (a < b) {\n      return -1;\n    }\n\n    if (a > b) {\n      return 1;\n    }\n\n    return 0;\n  } // Load all the words\n\n\n  for (let length = 3; length <= 9; length++) {\n    const d = data[length - 3];\n\n    for (let offset = 0; offset < d.length; offset += length) {\n      const word = [];\n\n      for (let i = 0; i < length; i++) {\n        const k = mapping.indexOf(d[offset + i]);\n        word.push(227);\n        word.push(k & 0x40 ? 130 : 129);\n        word.push((k & 0x3f) + 128);\n      }\n\n      wordlist$4.push(toUtf8String(word));\n    }\n  }\n\n  wordlist$4.sort(sortJapanese); // For some reason kyoku and kiyoku are flipped in node (!!).\n  // The order SHOULD be:\n  //   - kyoku\n  //   - kiyoku\n  // This should ignore \"if\", but that doesn't work here??\n\n  /* istanbul ignore next */\n\n  if (hex(wordlist$4[442]) === KiYoKu && hex(wordlist$4[443]) === KyoKu) {\n    const tmp = wordlist$4[442];\n    wordlist$4[442] = wordlist$4[443];\n    wordlist$4[443] = tmp;\n  } // Verify the computed list matches the official list\n\n  /* istanbul ignore if */\n\n\n  if (Wordlist.check(lang) !== \"0xcb36b09e6baa935787fd762ce65e80b0c6a8dabdfbc3a7f86ac0e2c4fd111600\") {\n    wordlist$4 = null;\n    throw new Error(\"BIP39 Wordlist for ja (Japanese) FAILED\");\n  }\n}\n\nclass LangJa extends Wordlist {\n  constructor() {\n    super(\"ja\");\n  }\n\n  getWord(index) {\n    loadWords$4(this);\n    return wordlist$4[index];\n  }\n\n  getWordIndex(word) {\n    loadWords$4(this);\n    return wordlist$4.indexOf(word);\n  }\n\n  split(mnemonic) {\n    logger$k.checkNormalize();\n    return mnemonic.split(/(?:\\u3000| )+/g);\n  }\n\n  join(words) {\n    return words.join(\"\\u3000\");\n  }\n\n}\n\nconst langJa = new LangJa();\nWordlist.register(langJa);\nconst data$1 = [\"OYAa\", \"ATAZoATBl3ATCTrATCl8ATDloATGg3ATHT8ATJT8ATJl3ATLlvATLn4ATMT8ATMX8ATMboATMgoAToLbAToMTATrHgATvHnAT3AnAT3JbAT3MTAT8DbAT8JTAT8LmAT8MYAT8MbAT#LnAUHT8AUHZvAUJXrAUJX8AULnrAXJnvAXLUoAXLgvAXMn6AXRg3AXrMbAX3JTAX3QbAYLn3AZLgvAZrSUAZvAcAZ8AaAZ8AbAZ8AnAZ8HnAZ8LgAZ8MYAZ8MgAZ8OnAaAboAaDTrAaFTrAaJTrAaJboAaLVoAaMXvAaOl8AaSeoAbAUoAbAg8AbAl4AbGnrAbMT8AbMXrAbMn4AbQb8AbSV8AbvRlAb8AUAb8AnAb8HgAb8JTAb8NTAb8RbAcGboAcLnvAcMT8AcMX8AcSToAcrAaAcrFnAc8AbAc8MgAfGgrAfHboAfJnvAfLV8AfLkoAfMT8AfMnoAfQb8AfScrAfSgrAgAZ8AgFl3AgGX8AgHZvAgHgrAgJXoAgJX8AgJboAgLZoAgLn4AgOX8AgoATAgoAnAgoCUAgoJgAgoLXAgoMYAgoSeAgrDUAgrJTAhrFnAhrLjAhrQgAjAgoAjJnrAkMX8AkOnoAlCTvAlCV8AlClvAlFg4AlFl6AlFn3AloSnAlrAXAlrAfAlrFUAlrFbAlrGgAlrOXAlvKnAlvMTAl3AbAl3MnAnATrAnAcrAnCZ3AnCl8AnDg8AnFboAnFl3AnHX4AnHbrAnHgrAnIl3AnJgvAnLXoAnLX4AnLbrAnLgrAnLhrAnMXoAnMgrAnOn3AnSbrAnSeoAnvLnAn3OnCTGgvCTSlvCTvAUCTvKnCTvNTCT3CZCT3GUCT3MTCT8HnCUCZrCULf8CULnvCU3HnCU3JUCY6NUCbDb8CbFZoCbLnrCboOTCboScCbrFnCbvLnCb8AgCb8HgCb$LnCkLfoClBn3CloDUDTHT8DTLl3DTSU8DTrAaDTrLXDTrLjDTrOYDTrOgDTvFXDTvFnDT3HUDT3LfDUCT9DUDT4DUFVoDUFV8DUFkoDUGgrDUJnrDULl8DUMT8DUMXrDUMX4DUMg8DUOUoDUOgvDUOg8DUSToDUSZ8DbDXoDbDgoDbGT8DbJn3DbLg3DbLn4DbMXrDbMg8DbOToDboJXGTClvGTDT8GTFZrGTLVoGTLlvGTLl3GTMg8GTOTvGTSlrGToCUGTrDgGTrJYGTrScGTtLnGTvAnGTvQgGUCZrGUDTvGUFZoGUHXrGULnvGUMT8GUoMgGXoLnGXrMXGXrMnGXvFnGYLnvGZOnvGZvOnGZ8LaGZ8LmGbAl3GbDYvGbDlrGbHX3GbJl4GbLV8GbLn3GbMn4GboJTGboRfGbvFUGb3GUGb4JnGgDX3GgFl$GgJlrGgLX6GgLZoGgLf8GgOXoGgrAgGgrJXGgrMYGgrScGgvATGgvOYGnAgoGnJgvGnLZoGnLg3GnLnrGnQn8GnSbrGnrMgHTClvHTDToHTFT3HTQT8HToJTHToJgHTrDUHTrMnHTvFYHTvRfHT8MnHT8SUHUAZ8HUBb4HUDTvHUoMYHXFl6HXJX6HXQlrHXrAUHXrMnHXrSbHXvFYHXvKXHX3LjHX3MeHYvQlHZrScHZvDbHbAcrHbFT3HbFl3HbJT8HbLTrHbMT8HbMXrHbMbrHbQb8HbSX3HboDbHboJTHbrFUHbrHgHbrJTHb8JTHb8MnHb8QgHgAlrHgDT3HgGgrHgHgrHgJTrHgJT8HgLX@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!Ln$CTGXMnCToLZ4CTrHT8CT3JTrCT3RZrCT#GTvCU6GgvCU8Db8CU8GZrCU8HT8CboLl3CbrGgrCbrMU8Cb8DT3Cb8GnrCb8LX4Cb8MT8Cb8ObrCgrGgvCgrKX4Cl8FZoDTrAbvDTrDboDTrGT6DTrJgrDTrMX3DTrRZrDTrRg8DTvAVvDTvFZoDT3DT8DT3Ln3DT4HZrDT4MT8DT8AlrDT8MT8DUAkGbDUDbJnDYLnQlDbDUOYDbMTAnDbMXSnDboAT3DboFn4DboLnvDj6JTrGTCgFTGTGgFnGTJTMnGTLnPlGToJT8GTrCT3GTrLVoGTrLnvGTrMX3GTrMboGTvKl3GZClFnGZrDT3GZ8DTrGZ8FZ8GZ8MXvGZ8On8GZ8ST3GbCnQXGbMbFnGboFboGboJg3GboMXoGb3JTvGb3JboGb3Mn6Gb3Qb8GgDXLjGgMnAUGgrDloGgrHX4GgrSToGgvAXrGgvAZvGgvFbrGgvLl3GgvMnvGnDnLXGnrATrGnrMboGnuLl3HTATMnHTAgCnHTCTCTHTrGTvHTrHTvHTrJX8HTrLl8HTrMT8HTrMgoHTrOTrHTuOn3HTvAZrHTvDTvHTvGboHTvJU8HTvLl3HTvMXrHTvQb4HT4GT6HT4JT8HT4Jb#HT8Al3HT8GZrHT8GgrHT8HX4HT8Jb8HT8JnoHT8LTrHT8LgvHT8SToHT8SV8HUoJUoHUoJX8HUoLnrHXrLZoHXvAl3HX3LnrHX4FkvHX4LhrHX4MXoHX4OnoHZrAZ8HZrDb8HZrGZ8HZrJnrHZvGZ8HZvLnvHZ8JnvHZ8LhrHbCXJlHbMTAnHboJl4HbpLl3HbrJX8HbrLnrHbrMnvHbvRYrHgoSTrHgrFV8HgrGZ8HgrJXoHgrRnvHgvBb!HgvGTrHgvHX4HgvHn!HgvLTrHgvSU8HnDnLbHnFbJbHnvDn8Hn6GgvHn!BTvJTCTLnJTQgFnJTrAnvJTrLX4JTrOUoJTvFn3JTvLnrJTvNToJT3AgoJT3Jn4JT3LhvJT3ObrJT8AcrJT8Al3JT8JT8JT8JnoJT8LX4JT8LnrJT8MX3JT8Rg3JT8Sc8JUoBTvJU8AToJU8GZ8JU8GgvJU8JTrJU8JXrJU8JnrJU8LnvJU8ScvJXHnJlJXrGgvJXrJU8JXrLhrJXrMT8JXrMXrJXrQUoJXvCTvJXvGZ8JXvGgrJXvQT8JX8Ab8JX8DT8JX8GZ8JX8HZvJX8LnrJX8MT8JX8MXoJX8MnvJX8ST3JYGnCTJbAkGbJbCTAnJbLTAcJboDT3JboLb6JbrAnvJbrCn3JbrDl8JbrGboJbrIZoJbrJnvJbrMnvJbrQb4Jb8RZrJeAbAnJgJnFbJgScAnJgrATrJgvHZ8JgvMn4JlJlFbJlLiQXJlLjOnJlRbOlJlvNXoJlvRl3Jl4AcrJl8AUoJl8MnrJnFnMlJnHgGbJnoDT8JnoFV8JnoGgvJnoIT8JnoQToJnoRg3JnrCZ3JnrGgrJnrHTvJnrLf8JnrOX8JnvAT3JnvFZoJnvGT8JnvJl4JnvMT8JnvMX8JnvOXrJnvPX6JnvSX3JnvSZrJn3MT8Jn3MX8Jn3RTrLTATKnLTJnLTLTMXKnLTRTQlLToGb8LTrAZ8LTrCZ8LTrDb8LTrHT8LT3PX6LT4FZoLT$CTvLT$GgrLUvHX3LVoATrLVoAgoLVoJboLVoMX3LVoRg3LV8CZ3LV8FZoLV8GTvLXrDXoLXrFbrLXvAgvLXvFlrLXvLl3LXvRn6LX4Mb8LX8GT8LYCXMnLYrMnrLZoSTvLZrAZvLZrAloLZrFToLZrJXvLZrJboLZrJl4LZrLnrLZrMT8LZrOgvLZrRnvLZrST4LZvMX8LZvSlvLZ8AgoLZ8CT3LZ8JT8LZ8LV8LZ8LZoLZ8Lg8LZ8SV8LZ8SbrLZ$HT8LZ$Mn4La6CTvLbFbMnLbRYFTLbSnFZLboJT8LbrAT9LbrGb3LbrQb8LcrJX8LcrMXrLerHTvLerJbrLerNboLgrDb8LgrGZ8LgrHTrLgrMXrLgrSU8LgvJTrLgvLl3Lg6Ll3LhrLnrLhrMT8LhvAl4LiLnQXLkoAgrLkoJT8LkoJn4LlrSU8Ll3FZoLl3HTrLl3JX8Ll3JnoLl3LToLmLeFbLnDUFbLnLVAnLnrATrLnrAZoLnrAb8LnrAlrLnrGgvLnrJU8LnrLZrLnrLhrLnrMb8LnrOXrLnrSZ8LnvAb4LnvDTrLnvDl8LnvHTrLnvHbrLnvJT8LnvJU8LnvJbrLnvLhvLnvMX8LnvMb8LnvNnoLnvSU8Ln3Al3Ln4FZoLn4GT6Ln4JgvLn4LhrLn4MT8Ln4SToMToCZrMToJX8MToLX4MToLf8MToRg3MTrEloMTvGb6MT3BTrMT3Lb6MT8AcrMT8AgrMT8GZrMT8JnoMT8LnrMT8MX3MUOUAnMXAbFnMXoAloMXoJX8MXoLf8MXoLl8MXrAb8MXrDTvMXrGT8MXrGgrMXrHTrMXrLf8MXrMU8MXrOXvMXrQb8MXvGT8MXvHTrMXvLVoMX3AX3MX3Jn3MX3LhrMX3MX3MX4AlrMX4OboMX8GTvMX8GZrMX8GgrMX8JT8MX8JX8MX8LhrMX8MT8MYDUFbMYMgDbMbGnFfMbvLX4MbvLl3Mb8Mb8Mb8ST4MgGXCnMg8ATrMg8AgoMg8CZrMg8DTrMg8DboMg8HTrMg8JgrMg8LT8MloJXoMl8AhrMl8JT8MnLgAUMnoJXrMnoLX4MnoLhrMnoMT8MnrAl4MnrDb8MnrOTvMnrOgvMnrQb8MnrSU8MnvGgrMnvHZ8Mn3MToMn4DTrMn4LTrMn4Mg8NnBXAnOTFTFnOToAToOTrGgvOTrJX8OT3JXoOT6MTrOT8GgrOT8HTpOT8MToOUoHT8OUoJT8OUoLn3OXrAgoOXrDg8OXrMT8OXvSToOX6CTvOX8CZrOX8OgrOb6HgvOb8AToOb8MT8OcvLZ8OgvAlrOgvHTvOgvJTrOgvJnrOgvLZrOgvLn4OgvMT8OgvRTrOg8AZoOg8DbvOnrOXoOnvJn4OnvLhvOnvRTrOn3GgoOn3JnvOn6JbvOn8OTrPTGYFTPbBnFnPbGnDnPgDYQTPlrAnvPlrETvPlrLnvPlrMXvPlvFX4QTMTAnQTrJU8QYCnJlQYJlQlQbGTQbQb8JnrQb8LZoQb8LnvQb8MT8Qb8Ml8Qb8ST4QloAl4QloHZvQloJX8QloMn8QnJZOlRTrAZvRTrDTrRTvJn4RTvLhvRT4Jb8RZrAZrRZ8AkrRZ8JU8RZ8LV8RZ8LnvRbJlQXRg3GboRg3MnvRg8AZ8Rg8JboRg8Jl4RnLTCbRnvFl3RnvQb8SToAl4SToCZrSToFZoSToHXrSToJU8SToJgvSToJl4SToLhrSToMX3STrAlvSTrCT9STrCgrSTrGgrSTrHXrSTrHboSTrJnoSTrNboSTvLnrST4AZoST8Ab8ST8JT8SUoJn3SU6HZ#SU6JTvSU8Db8SU8HboSU8LgrSV8JT8SZrAcrSZrAl3SZrJT8SZrJnvSZrMT8SZvLUoSZ4FZoSZ8JnoSZ8RZrScoLnrScoMT8ScoMX8ScrAT4ScrAZ8ScrLZ8ScrLkvScvDb8ScvLf8ScvNToSgrFZrShvKnrSloHUoSloLnrSlrMXoSl8HgrSmrJUoSn3BX6\", \"ATFlOn3ATLgrDYAT4MTAnAT8LTMnAYJnRTrAbGgJnrAbLV8LnAbvNTAnAeFbLg3AgOYMXoAlQbFboAnDboAfAnJgoJTBToDgAnBUJbAl3BboDUAnCTDlvLnCTFTrSnCYoQTLnDTwAbAnDUDTrSnDUHgHgrDX8LXFnDbJXAcrETvLTLnGTFTQbrGTMnGToGT3DUFbGUJlPX3GbQg8LnGboJbFnGb3GgAYGgAg8ScGgMbAXrGgvAbAnGnJTLnvGnvATFgHTDT6ATHTrDlJnHYLnMn8HZrSbJTHZ8LTFnHbFTJUoHgSeMT8HgrLjAnHgvAbAnHlFUrDlHnDgvAnHnHTFT3HnQTGnrJTAaMXvJTGbCn3JTOgrAnJXvAXMnJbMg8SnJbMnRg3Jb8LTMnJnAl3OnJnGYrQlJnJlQY3LTDlCn3LTJjLg3LTLgvFXLTMg3GTLV8HUOgLXFZLg3LXNXrMnLX8QXFnLX9AlMYLYLXPXrLZAbJU8LZDUJU8LZMXrSnLZ$AgFnLaPXrDULbFYrMnLbMn8LXLboJgJgLeFbLg3LgLZrSnLgOYAgoLhrRnJlLkCTrSnLkOnLhrLnFX%AYLnFZoJXLnHTvJbLnLloAbMTATLf8MTHgJn3MTMXrAXMT3MTFnMUITvFnMXFX%AYMXMXvFbMXrFTDbMYAcMX3MbLf8SnMb8JbFnMgMXrMTMgvAXFnMgvGgCmMnAloSnMnFnJTrOXvMXSnOX8HTMnObJT8ScObLZFl3ObMXCZoPTLgrQXPUFnoQXPU3RXJlPX3RkQXPbrJXQlPlrJbFnQUAhrDbQXGnCXvQYLnHlvQbLfLnvRTOgvJbRXJYrQlRYLnrQlRbLnrQlRlFT8JlRlFnrQXSTClCn3STHTrAnSTLZQlrSTMnGTrSToHgGbSTrGTDnSTvGXCnST3HgFbSU3HXAXSbAnJn3SbFT8LnScLfLnv\", \"AT3JgJX8AT8FZoSnAT8JgFV8AT8LhrDbAZ8JT8DbAb8GgLhrAb8SkLnvAe8MT8SnAlMYJXLVAl3GYDTvAl3LfLnvBUDTvLl3CTOn3HTrCT3DUGgrCU8MT8AbCbFTrJUoCgrDb8MTDTLV8JX8DTLnLXQlDT8LZrSnDUQb8FZ8DUST4JnvDb8ScOUoDj6GbJl4GTLfCYMlGToAXvFnGboAXvLnGgAcrJn3GgvFnSToGnLf8JnvGn#HTDToHTLnFXJlHTvATFToHTvHTDToHTvMTAgoHT3STClvHT4AlFl6HT8HTDToHUoDgJTrHUoScMX3HbRZrMXoHboJg8LTHgDb8JTrHgMToLf8HgvLnLnoHnHn3HT4Hn6MgvAnJTJU8ScvJT3AaQT8JT8HTrAnJXrRg8AnJbAloMXoJbrATFToJbvMnoSnJgDb6GgvJgDb8MXoJgSX3JU8JguATFToJlPYLnQlJlQkDnLbJlQlFYJlJl8Lf8OTJnCTFnLbJnLTHXMnJnLXGXCnJnoFfRg3JnrMYRg3Jn3HgFl3KT8Dg8LnLTRlFnPTLTvPbLbvLVoSbrCZLXMY6HT3LXNU7DlrLXNXDTATLX8DX8LnLZDb8JU8LZMnoLhrLZSToJU8LZrLaLnrLZvJn3SnLZ8LhrSnLaJnoMT8LbFlrHTvLbrFTLnrLbvATLlvLb6OTFn3LcLnJZOlLeAT6Mn4LeJT3ObrLg6LXFlrLhrJg8LnLhvDlPX4LhvLfLnvLj6JTFT3LnFbrMXoLnQluCTvLnrQXCY6LnvLfLnvLnvMgLnvLnvSeLf8MTMbrJn3MT3JgST3MT8AnATrMT8LULnrMUMToCZrMUScvLf8MXoDT8SnMX6ATFToMX8AXMT8MX8FkMT8MX8HTrDUMX8ScoSnMYJT6CTvMgAcrMXoMg8SToAfMlvAXLg3MnFl3AnvOT3AnFl3OUoATHT8OU3RnLXrOXrOXrSnObPbvFn6Og8HgrSnOg8OX8DbPTvAgoJgPU3RYLnrPXrDnJZrPb8CTGgvPlrLTDlvPlvFUJnoQUvFXrQlQeMnoAl3QlrQlrSnRTFTrJUoSTDlLiLXSTFg6HT3STJgoMn4STrFTJTrSTrLZFl3ST4FnMXoSUrDlHUoScvHTvSnSfLkvMXo\", \"AUoAcrMXoAZ8HboAg8AbOg6ATFgAg8AloMXoAl3AT8JTrAl8MX8MXoCT3SToJU8Cl8Db8MXoDT8HgrATrDboOT8MXoGTOTrATMnGT8LhrAZ8GnvFnGnQXHToGgvAcrHTvAXvLl3HbrAZoMXoHgBlFXLg3HgMnFXrSnHgrSb8JUoHn6HT8LgvITvATrJUoJUoLZrRnvJU8HT8Jb8JXvFX8QT8JXvLToJTrJYrQnGnQXJgrJnoATrJnoJU8ScvJnvMnvMXoLTCTLgrJXLTJlRTvQlLbRnJlQYvLbrMb8LnvLbvFn3RnoLdCVSTGZrLeSTvGXCnLg3MnoLn3MToLlrETvMT8SToAl3MbrDU6GTvMb8LX4LhrPlrLXGXCnSToLf8Rg3STrDb8LTrSTvLTHXMnSb3RYLnMnSgOg6ATFg\", \"HUDlGnrQXrJTrHgLnrAcJYMb8DULc8LTvFgGnCk3Mg8JbAnLX4QYvFYHnMXrRUoJnGnvFnRlvFTJlQnoSTrBXHXrLYSUJgLfoMT8Se8DTrHbDb\", \"AbDl8SToJU8An3RbAb8ST8DUSTrGnrAgoLbFU6Db8LTrMg8AaHT8Jb8ObDl8SToJU8Pb3RlvFYoJl\"];\nconst codes = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*\";\n\nfunction getHangul(code) {\n  if (code >= 40) {\n    code = code + 168 - 40;\n  } else if (code >= 19) {\n    code = code + 97 - 19;\n  }\n\n  return toUtf8String([225, (code >> 6) + 132, (code & 0x3f) + 128]);\n}\n\nlet wordlist$5 = null;\n\nfunction loadWords$5(lang) {\n  if (wordlist$5 != null) {\n    return;\n  }\n\n  wordlist$5 = [];\n  data$1.forEach((data, length) => {\n    length += 4;\n\n    for (let i = 0; i < data.length; i += length) {\n      let word = \"\";\n\n      for (let j = 0; j < length; j++) {\n        word += getHangul(codes.indexOf(data[i + j]));\n      }\n\n      wordlist$5.push(word);\n    }\n  });\n  wordlist$5.sort(); // Verify the computed list matches the official list\n\n  /* istanbul ignore if */\n\n  if (Wordlist.check(lang) !== \"0xf9eddeace9c5d3da9c93cf7d3cd38f6a13ed3affb933259ae865714e8a3ae71a\") {\n    wordlist$5 = null;\n    throw new Error(\"BIP39 Wordlist for ko (Korean) FAILED\");\n  }\n}\n\nclass LangKo extends Wordlist {\n  constructor() {\n    super(\"ko\");\n  }\n\n  getWord(index) {\n    loadWords$5(this);\n    return wordlist$5[index];\n  }\n\n  getWordIndex(word) {\n    loadWords$5(this);\n    return wordlist$5.indexOf(word);\n  }\n\n}\n\nconst langKo = new LangKo();\nWordlist.register(langKo);\nconst words$4 = \"AbacoAbbaglioAbbinatoAbeteAbissoAbolireAbrasivoAbrogatoAccadereAccennoAccusatoAcetoneAchilleAcidoAcquaAcreAcrilicoAcrobataAcutoAdagioAddebitoAddomeAdeguatoAderireAdipeAdottareAdulareAffabileAffettoAffissoAffrantoAforismaAfosoAfricanoAgaveAgenteAgevoleAggancioAgireAgitareAgonismoAgricoloAgrumetoAguzzoAlabardaAlatoAlbatroAlberatoAlboAlbumeAlceAlcolicoAlettoneAlfaAlgebraAlianteAlibiAlimentoAllagatoAllegroAllievoAllodolaAllusivoAlmenoAlogenoAlpacaAlpestreAltalenaAlternoAlticcioAltroveAlunnoAlveoloAlzareAmalgamaAmanitaAmarenaAmbitoAmbratoAmebaAmericaAmetistaAmicoAmmassoAmmendaAmmirareAmmonitoAmoreAmpioAmpliareAmuletoAnacardoAnagrafeAnalistaAnarchiaAnatraAncaAncellaAncoraAndareAndreaAnelloAngeloAngolareAngustoAnimaAnnegareAnnidatoAnnoAnnuncioAnonimoAnticipoAnziApaticoAperturaApodeApparireAppetitoAppoggioApprodoAppuntoAprileArabicaArachideAragostaAraldicaArancioAraturaArazzoArbitroArchivioArditoArenileArgentoArgineArgutoAriaArmoniaArneseArredatoArringaArrostoArsenicoArsoArteficeArzilloAsciuttoAscoltoAsepsiAsetticoAsfaltoAsinoAsolaAspiratoAsproAssaggioAsseAssolutoAssurdoAstaAstenutoAsticeAstrattoAtavicoAteismoAtomicoAtonoAttesaAttivareAttornoAttritoAttualeAusilioAustriaAutistaAutonomoAutunnoAvanzatoAvereAvvenireAvvisoAvvolgereAzioneAzotoAzzimoAzzurroBabeleBaccanoBacinoBacoBadessaBadilataBagnatoBaitaBalconeBaldoBalenaBallataBalzanoBambinoBandireBaraondaBarbaroBarcaBaritonoBarlumeBaroccoBasilicoBassoBatostaBattutoBauleBavaBavosaBeccoBeffaBelgioBelvaBendaBenevoleBenignoBenzinaBereBerlinaBetaBibitaBiciBidoneBifidoBigaBilanciaBimboBinocoloBiologoBipedeBipolareBirbanteBirraBiscottoBisestoBisnonnoBisonteBisturiBizzarroBlandoBlattaBollitoBonificoBordoBoscoBotanicoBottinoBozzoloBraccioBradipoBramaBrancaBravuraBretellaBrevettoBrezzaBrigliaBrillanteBrindareBroccoloBrodoBronzinaBrulloBrunoBubboneBucaBudinoBuffoneBuioBulboBuonoBurloneBurrascaBussolaBustaCadettoCaducoCalamaroCalcoloCalesseCalibroCalmoCaloriaCambusaCamerataCamiciaCamminoCamolaCampaleCanapaCandelaCaneCaninoCanottoCantinaCapaceCapelloCapitoloCapogiroCapperoCapraCapsulaCarapaceCarcassaCardoCarismaCarovanaCarrettoCartolinaCasaccioCascataCasermaCasoCassoneCastelloCasualeCatastaCatenaCatrameCautoCavilloCedibileCedrataCefaloCelebreCellulareCenaCenoneCentesimoCeramicaCercareCertoCerumeCervelloCesoiaCespoCetoChelaChiaroChiccaChiedereChimeraChinaChirurgoChitarraCiaoCiclismoCifrareCignoCilindroCiottoloCircaCirrosiCitricoCittadinoCiuffoCivettaCivileClassicoClinicaCloroCoccoCodardoCodiceCoerenteCognomeCollareColmatoColoreColposoColtivatoColzaComaCometaCommandoComodoComputerComuneConcisoCondurreConfermaCongelareConiugeConnessoConoscereConsumoContinuoConvegnoCopertoCopioneCoppiaCopricapoCorazzaCordataCoricatoCorniceCorollaCorpoCorredoCorsiaCorteseCosmicoCostanteCotturaCovatoCratereCravattaCreatoCredereCremosoCrescitaCretaCricetoCrinaleCrisiCriticoCroceCronacaCrostataCrucialeCruscaCucireCuculoCuginoCullatoCupolaCuratoreCursoreCurvoCuscinoCustodeDadoDainoDalmataDamerinoDanielaDannosoDanzareDatatoDavantiDavveroDebuttoDecennioDecisoDeclinoDecolloDecretoDedicatoDefinitoDeformeDegnoDelegareDelfinoDelirioDeltaDemenzaDenotatoDentroDepositoDerapataDerivareDerogaDescrittoDesertoDesiderioDesumereDetersivoDevotoDiametroDicembreDiedroDifesoDiffusoDigerireDigitaleDiluvioDinamicoDinnanziDipintoDiplomaDipoloDiradareDireDirottoDirupoDisagioDiscretoDisfareDisgeloDispostoDistanzaDisumanoDitoDivanoDiveltoDividereDivoratoDobloneDocenteDoganaleDogmaDolceDomatoDomenicaDominareDondoloDonoDormireDoteDottoreDovutoDozzinaDragoDruidoDubbioDubitareDucaleDunaDuomoDupliceDuraturoEbanoEccessoEccoEclissiEconomiaEderaEdicolaEdileEditoriaEducareEgemoniaEgliEgoismoEgregioElaboratoElargireEleganteElencatoElettoElevareElficoElicaElmoElsaElusoEmanatoEmblemaEmessoEmiroEmotivoEmozioneEmpiricoEmuloEndemicoEnduroEnergiaEnfasiEnotecaEntrareEnzimaEpatiteEpilogoEpisodioEpocaleEppureEquatoreErarioErbaErbosoEredeEremitaErigereErmeticoEroeErosivoErranteEsagonoEsameEsanimeEsaudireEscaEsempioEsercitoEsibitoEsigenteEsistereEsitoEsofagoEsortatoEsosoEspansoEspressoEssenzaEssoEstesoEstimareEstoniaEstrosoEsultareEtilicoEtnicoEtruscoEttoEuclideoEuropaEvasoEvidenzaEvitatoEvolutoEvvivaFabbricaFaccendaFachiroFalcoFamigliaFanaleFanfaraFangoFantasmaFareFarfallaFarinosoFarmacoFasciaFastosoFasulloFaticareFatoFavolosoFebbreFecolaFedeFegatoFelpaFeltroFemminaFendereFenomenoFermentoFerroFertileFessuraFestivoFettaFeudoFiabaFiduciaFifaFiguratoFiloFinanzaFinestraFinireFioreFiscaleFisicoFiumeFlaconeFlamencoFleboFlemmaFloridoFluenteFluoroFobicoFocacciaFocosoFoderatoFoglioFolataFolcloreFolgoreFondenteFoneticoFoniaFontanaForbitoForchettaForestaFormicaFornaioForoFortezzaForzareFosfatoFossoFracassoFranaFrassinoFratelloFreccettaFrenataFrescoFrigoFrollinoFrondeFrugaleFruttaFucilataFucsiaFuggenteFulmineFulvoFumanteFumettoFumosoFuneFunzioneFuocoFurboFurgoneFuroreFusoFutileGabbianoGaffeGalateoGallinaGaloppoGamberoGammaGaranziaGarboGarofanoGarzoneGasdottoGasolioGastricoGattoGaudioGazeboGazzellaGecoGelatinaGelsoGemelloGemmatoGeneGenitoreGennaioGenotipoGergoGhepardoGhiaccioGhisaGialloGildaGineproGiocareGioielloGiornoGioveGiratoGironeGittataGiudizioGiuratoGiustoGlobuloGlutineGnomoGobbaGolfGomitoGommoneGonfioGonnaGovernoGracileGradoGraficoGrammoGrandeGrattareGravosoGraziaGrecaGreggeGrifoneGrigioGrinzaGrottaGruppoGuadagnoGuaioGuantoGuardareGufoGuidareIbernatoIconaIdenticoIdillioIdoloIdraIdricoIdrogenoIgieneIgnaroIgnoratoIlareIllesoIllogicoIlludereImballoImbevutoImboccoImbutoImmaneImmersoImmolatoImpaccoImpetoImpiegoImportoImprontaInalareInarcareInattivoIncantoIncendioInchinoIncisivoInclusoIncontroIncrocioIncuboIndagineIndiaIndoleIneditoInfattiInfilareInflittoIngaggioIngegnoIngleseIngordoIngrossoInnescoInodoreInoltrareInondatoInsanoInsettoInsiemeInsonniaInsulinaIntasatoInteroIntonacoIntuitoInumidireInvalidoInveceInvitoIperboleIpnoticoIpotesiIppicaIrideIrlandaIronicoIrrigatoIrrorareIsolatoIsotopoIstericoIstitutoIstriceItaliaIterareLabbroLabirintoLaccaLaceratoLacrimaLacunaLaddoveLagoLampoLancettaLanternaLardosoLargaLaringeLastraLatenzaLatinoLattugaLavagnaLavoroLegaleLeggeroLemboLentezzaLenzaLeoneLepreLesivoLessatoLestoLetteraleLevaLevigatoLiberoLidoLievitoLillaLimaturaLimitareLimpidoLineareLinguaLiquidoLiraLiricaLiscaLiteLitigioLivreaLocandaLodeLogicaLombareLondraLongevoLoquaceLorenzoLotoLotteriaLuceLucidatoLumacaLuminosoLungoLupoLuppoloLusingaLussoLuttoMacabroMacchinaMaceroMacinatoMadamaMagicoMagliaMagneteMagroMaiolicaMalafedeMalgradoMalintesoMalsanoMaltoMalumoreManaManciaMandorlaMangiareManifestoMannaroManovraMansardaMantideManubrioMappaMaratonaMarcireMarettaMarmoMarsupioMascheraMassaiaMastinoMaterassoMatricolaMattoneMaturoMazurcaMeandroMeccanicoMecenateMedesimoMeditareMegaMelassaMelisMelodiaMeningeMenoMensolaMercurioMerendaMerloMeschinoMeseMessereMestoloMetalloMetodoMettereMiagolareMicaMicelioMicheleMicroboMidolloMieleMiglioreMilanoMiliteMimosaMineraleMiniMinoreMirinoMirtilloMiscelaMissivaMistoMisurareMitezzaMitigareMitraMittenteMnemonicoModelloModificaModuloMoganoMogioMoleMolossoMonasteroMoncoMondinaMonetarioMonileMonotonoMonsoneMontatoMonvisoMoraMordereMorsicatoMostroMotivatoMotosegaMottoMovenzaMovimentoMozzoMuccaMucosaMuffaMughettoMugnaioMulattoMulinelloMultiploMummiaMuntoMuovereMuraleMusaMuscoloMusicaMutevoleMutoNababboNaftaNanometroNarcisoNariceNarratoNascereNastrareNaturaleNauticaNaviglioNebulosaNecrosiNegativoNegozioNemmenoNeofitaNerettoNervoNessunoNettunoNeutraleNeveNevroticoNicchiaNinfaNitidoNobileNocivoNodoNomeNominaNordicoNormaleNorvegeseNostranoNotareNotiziaNotturnoNovellaNucleoNullaNumeroNuovoNutrireNuvolaNuzialeOasiObbedireObbligoObeliscoOblioOboloObsoletoOccasioneOcchioOccidenteOccorrereOccultareOcraOculatoOdiernoOdorareOffertaOffrireOffuscatoOggettoOggiOgnunoOlandeseOlfattoOliatoOlivaOlogrammaOltreOmaggioOmbelicoOmbraOmegaOmissioneOndosoOnereOniceOnnivoroOnorevoleOntaOperatoOpinioneOppostoOracoloOrafoOrdineOrecchinoOreficeOrfanoOrganicoOrigineOrizzonteOrmaOrmeggioOrnativoOrologioOrrendoOrribileOrtensiaOrticaOrzataOrzoOsareOscurareOsmosiOspedaleOspiteOssaOssidareOstacoloOsteOtiteOtreOttagonoOttimoOttobreOvaleOvestOvinoOviparoOvocitoOvunqueOvviareOzioPacchettoPacePacificoPadellaPadronePaesePagaPaginaPalazzinaPalesarePallidoPaloPaludePandoroPannelloPaoloPaonazzoPapricaParabolaParcellaParerePargoloPariParlatoParolaPartireParvenzaParzialePassivoPasticcaPataccaPatologiaPattumePavonePeccatoPedalarePedonalePeggioPelosoPenarePendicePenisolaPennutoPenombraPensarePentolaPepePepitaPerbenePercorsoPerdonatoPerforarePergamenaPeriodoPermessoPernoPerplessoPersuasoPertugioPervasoPesatorePesistaPesoPestiferoPetaloPettinePetulantePezzoPiacerePiantaPiattinoPiccinoPicozzaPiegaPietraPifferoPigiamaPigolioPigroPilaPiliferoPillolaPilotaPimpantePinetaPinnaPinoloPioggiaPiomboPiramidePireticoPiritePirolisiPitonePizzicoPlaceboPlanarePlasmaPlatanoPlenarioPochezzaPoderosoPodismoPoesiaPoggiarePolentaPoligonoPollicePolmonitePolpettaPolsoPoltronaPolverePomicePomodoroPontePopolosoPorfidoPorosoPorporaPorrePortataPosaPositivoPossessoPostulatoPotassioPoterePranzoPrassiPraticaPreclusoPredicaPrefissoPregiatoPrelievoPremerePrenotarePreparatoPresenzaPretestoPrevalsoPrimaPrincipePrivatoProblemaProcuraProdurreProfumoProgettoProlungaPromessaPronomePropostaProrogaProtesoProvaPrudentePrugnaPruritoPsichePubblicoPudicaPugilatoPugnoPulcePulitoPulsantePuntarePupazzoPupillaPuroQuadroQualcosaQuasiQuerelaQuotaRaccoltoRaddoppioRadicaleRadunatoRafficaRagazzoRagioneRagnoRamarroRamingoRamoRandagioRantolareRapatoRapinaRappresoRasaturaRaschiatoRasenteRassegnaRastrelloRataRavvedutoRealeRecepireRecintoReclutaReconditoRecuperoRedditoRedimereRegalatoRegistroRegolaRegressoRelazioneRemareRemotoRennaReplicaReprimereReputareResaResidenteResponsoRestauroReteRetinaRetoricaRettificaRevocatoRiassuntoRibadireRibelleRibrezzoRicaricaRiccoRicevereRiciclatoRicordoRicredutoRidicoloRidurreRifasareRiflessoRiformaRifugioRigareRigettatoRighelloRilassatoRilevatoRimanereRimbalzoRimedioRimorchioRinascitaRincaroRinforzoRinnovoRinomatoRinsavitoRintoccoRinunciaRinvenireRiparatoRipetutoRipienoRiportareRipresaRipulireRisataRischioRiservaRisibileRisoRispettoRistoroRisultatoRisvoltoRitardoRitegnoRitmicoRitrovoRiunioneRivaRiversoRivincitaRivoltoRizomaRobaRoboticoRobustoRocciaRocoRodaggioRodereRoditoreRogitoRollioRomanticoRompereRonzioRosolareRospoRotanteRotondoRotulaRovescioRubizzoRubricaRugaRullinoRumineRumorosoRuoloRupeRussareRusticoSabatoSabbiareSabotatoSagomaSalassoSaldaturaSalgemmaSalivareSalmoneSaloneSaltareSalutoSalvoSapereSapidoSaporitoSaracenoSarcasmoSartoSassosoSatelliteSatiraSatolloSaturnoSavanaSavioSaziatoSbadiglioSbalzoSbancatoSbarraSbattereSbavareSbendareSbirciareSbloccatoSbocciatoSbrinareSbruffoneSbuffareScabrosoScadenzaScalaScambiareScandaloScapolaScarsoScatenareScavatoSceltoScenicoScettroSchedaSchienaSciarpaScienzaScindereScippoSciroppoScivoloSclerareScodellaScolpitoScompartoSconfortoScoprireScortaScossoneScozzeseScribaScrollareScrutinioScuderiaScultoreScuolaScuroScusareSdebitareSdoganareSeccaturaSecondoSedanoSeggiolaSegnalatoSegregatoSeguitoSelciatoSelettivoSellaSelvaggioSemaforoSembrareSemeSeminatoSempreSensoSentireSepoltoSequenzaSerataSerbatoSerenoSerioSerpenteSerraglioServireSestinaSetolaSettimanaSfaceloSfaldareSfamatoSfarzosoSfaticatoSferaSfidaSfilatoSfingeSfocatoSfoderareSfogoSfoltireSforzatoSfrattoSfruttatoSfuggitoSfumareSfusoSgabelloSgarbatoSgonfiareSgorbioSgrassatoSguardoSibiloSiccomeSierraSiglaSignoreSilenzioSillabaSimboloSimpaticoSimulatoSinfoniaSingoloSinistroSinoSintesiSinusoideSiparioSismaSistoleSituatoSlittaSlogaturaSlovenoSmarritoSmemoratoSmentitoSmeraldoSmilzoSmontareSmottatoSmussatoSnellireSnervatoSnodoSobbalzoSobrioSoccorsoSocialeSodaleSoffittoSognoSoldatoSolenneSolidoSollazzoSoloSolubileSolventeSomaticoSommaSondaSonettoSonniferoSopireSoppesoSopraSorgereSorpassoSorrisoSorsoSorteggioSorvolatoSospiroSostaSottileSpadaSpallaSpargereSpatolaSpaventoSpazzolaSpecieSpedireSpegnereSpelaturaSperanzaSpessoreSpettraleSpezzatoSpiaSpigolosoSpillatoSpinosoSpiraleSplendidoSportivoSposoSprangaSprecareSpronatoSpruzzoSpuntinoSquilloSradicareSrotolatoStabileStaccoStaffaStagnareStampatoStantioStarnutoStaseraStatutoSteloSteppaSterzoStilettoStimaStirpeStivaleStizzosoStonatoStoricoStrappoStregatoStriduloStrozzareStruttoStuccareStufoStupendoSubentroSuccosoSudoreSuggeritoSugoSultanoSuonareSuperboSupportoSurgelatoSurrogatoSussurroSuturaSvagareSvedeseSveglioSvelareSvenutoSveziaSviluppoSvistaSvizzeraSvoltaSvuotareTabaccoTabulatoTacciareTaciturnoTaleTalismanoTamponeTanninoTaraTardivoTargatoTariffaTarpareTartarugaTastoTatticoTavernaTavolataTazzaTecaTecnicoTelefonoTemerarioTempoTemutoTendoneTeneroTensioneTentacoloTeoremaTermeTerrazzoTerzettoTesiTesseratoTestatoTetroTettoiaTifareTigellaTimbroTintoTipicoTipografoTiraggioTiroTitanioTitoloTitubanteTizioTizzoneToccareTollerareToltoTombolaTomoTonfoTonsillaTopazioTopologiaToppaTorbaTornareTorroneTortoraToscanoTossireTostaturaTotanoTraboccoTracheaTrafilaTragediaTralcioTramontoTransitoTrapanoTrarreTraslocoTrattatoTraveTrecciaTremolioTrespoloTributoTrichecoTrifoglioTrilloTrinceaTrioTristezzaTrituratoTrivellaTrombaTronoTroppoTrottolaTrovareTruccatoTubaturaTuffatoTulipanoTumultoTunisiaTurbareTurchinoTutaTutelaUbicatoUccelloUccisoreUdireUditivoUffaUfficioUgualeUlisseUltimatoUmanoUmileUmorismoUncinettoUngereUnghereseUnicornoUnificatoUnisonoUnitarioUnteUovoUpupaUraganoUrgenzaUrloUsanzaUsatoUscitoUsignoloUsuraioUtensileUtilizzoUtopiaVacanteVaccinatoVagabondoVagliatoValangaValgoValicoVallettaValorosoValutareValvolaVampataVangareVanitosoVanoVantaggioVanveraVaporeVaranoVarcatoVarianteVascaVedettaVedovaVedutoVegetaleVeicoloVelcroVelinaVellutoVeloceVenatoVendemmiaVentoVeraceVerbaleVergognaVerificaVeroVerrucaVerticaleVescicaVessilloVestaleVeteranoVetrinaVetustoViandanteVibranteVicendaVichingoVicinanzaVidimareVigiliaVignetoVigoreVileVillanoViminiVincitoreViolaViperaVirgolaVirologoVirulentoViscosoVisioneVispoVissutoVisuraVitaVitelloVittimaVivandaVividoViziareVoceVogaVolatileVolereVolpeVoragineVulcanoZampognaZannaZappatoZatteraZavorraZefiroZelanteZeloZenzeroZerbinoZibettoZincoZirconeZittoZollaZoticoZuccheroZufoloZuluZuppa\";\nlet wordlist$6 = null;\n\nfunction loadWords$6(lang) {\n  if (wordlist$6 != null) {\n    return;\n  }\n\n  wordlist$6 = words$4.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \"); // Verify the computed list matches the official list\n\n  /* istanbul ignore if */\n\n  if (Wordlist.check(lang) !== \"0x5c1362d88fd4cf614a96f3234941d29f7d37c08c5292fde03bf62c2db6ff7620\") {\n    wordlist$6 = null;\n    throw new Error(\"BIP39 Wordlist for it (Italian) FAILED\");\n  }\n}\n\nclass LangIt extends Wordlist {\n  constructor() {\n    super(\"it\");\n  }\n\n  getWord(index) {\n    loadWords$6(this);\n    return wordlist$6[index];\n  }\n\n  getWordIndex(word) {\n    loadWords$6(this);\n    return wordlist$6.indexOf(word);\n  }\n\n}\n\nconst langIt = new LangIt();\nWordlist.register(langIt);\nconst data$2 = \"}aE#4A=Yv&co#4N#6G=cJ&SM#66|/Z#4t&kn~46#4K~4q%b9=IR#7l,mB#7W_X2*dl}Uo~7s}Uf&Iw#9c&cw~6O&H6&wx&IG%v5=IQ~8a&Pv#47$PR&50%Ko&QM&3l#5f,D9#4L|/H&tQ;v0~6n]nN<di,AM=W5%QO&ka&ua,hM^tm=zV=JA=wR&+X]7P&NB#4J#5L|/b[dA}tJ<Do&6m&u2[U1&Kb.HM&mC=w0&MW<rY,Hq#6M}QG,13&wP}Jp]Ow%ue&Kg<HP<D9~4k~9T&I2_c6$9T#9/[C5~7O~4a=cs&O7=KK=An&l9$6U$8A&uD&QI|/Y&bg}Ux&F2#6b}E2&JN&kW&kp=U/&bb=Xl<Cj}k+~5J#6L&5z&9i}b4&Fo,ho(X0_g3~4O$Fz&QE<HN=Ww]6/%GF-Vw=tj&/D&PN#9g=YO}cL&Of&PI~5I&Ip=vU=IW#9G;0o-wU}ss&QR<BT&R9=tk$PY_dh&Pq-yh]7T,nj.Xu=EP&76=cI&Fs*Xg}z7$Gb&+I=DF,AF=cA}rL#7j=Dz&3y<Aa$52=PQ}b0(iY$Fa}oL&xV#6U=ec=WZ,xh%RY<dp#9N&Fl&44=WH*A7=sh&TB&8P=07;u+&PK}uh}J5#72)V/=xC,AB$k0&f6;1E|+5=1B,3v]6n&wR%b+&xx]7f=Ol}fl;+D^wG]7E;nB;uh^Ir&l5=JL,nS=cf=g5;u6|/Q$Gc=MH%Hg#5d%M6^86=U+$Gz,l/,ir^5y&Ba&/F-IY&FI&be%IZ#77&PW_Nu$kE(Yf&NX]7Z,Jy&FJ(Xo&Nz#/d=y7&MX<Ag}Z+;nE]Dt(iG#4D=13&Pj~4c%v8&Zo%OL&/X#4W<HR&ie~6J_1O(Y2=y5=Ad*cv_eB#6k&PX:BU#7A;uk&Ft&Fx_dD=U2;vB=U5=4F}+O&GN.HH:9s=b0%NV(jO&IH=JT}Z9=VZ<Af,Kx^4m&uJ%c6,6r;9m#+L}cf%Kh&F3~4H=vP}bu,Hz|++,1w]nv}k6;uu$jw*Kl*WX&uM[x7&Fr[m7$NO&QN]hu=JN}nR^8g#/h(ps|KC;vd}xz=V0}p6&FD$G1#7K<bG_4p~8g&cf;u4=tl}+k%5/}fz;uw<cA=u1}gU}VM=LJ=eX&+L&Pr#4U}p2:nC,2K]7H:jF&9x}uX#9O=MB<fz~8X~5m&4D&kN&u5%E/(h7(ZF&VG<de(qM|/e-Wt=3x(a+,/R]f/&ND$Ro&nU}0g=KA%kH&NK$Ke<dS}cB&IX~5g$TN]6m=Uv,Is&Py=Ef%Kz#+/%bi&+A<F4$OG&4C&FL#9V<Zk=2I_eE&6c]nw&kq$HG}y+&A8$P3}OH=XP]70%IS(AJ_gH%GZ&tY&AZ=vb~6y&/r=VI=Wv<Zi=fl=xf&eL}c8}OL=MJ=g8$F7=YT}9u=0+^xC}JH&nL^N0~4T]K2,Cy%OC#6s;vG(AC^xe^cG&MF}Br#9P;wD-7h$O/&xA}Fn^PC]6i]7G&8V$Qs;vl(TB~73~4l<mW&6V=2y&uY&+3)aP}XF;LP&kx$wU=t7;uy<FN&lz)7E=Oo*Y+;wI}9q}le;J6&Ri&4t&Qr#8B=cb&vG=J5|Ql(h5<Yy~4+}QD,Lx=wn%K/&RK=dO&Pw,Q9=co%4u;9u}g0@6a^4I%b0=zo|/c&tX=dQ=OS#+b=yz_AB&wB&Pm=W9$HP_gR=62=AO=ti=hI,oA&jr&dH=tm&b6$P2(x8=zi;nG~7F;05]0n[Ix&3m}rg=Xp=cd&uz]7t;97=cN;vV<jf&FF&F1=6Q&Ik*Kk&P4,2z=fQ]7D&3u,H0=d/}Uw<ZN<7R}Kv;0f$H7,MD]7n$F0#88~9Z%da=by;+T#/u=VF&fO&kr^kf<AB]sU,I5$Ng&Pz;0i&QD&vM=Yl:BM;nJ_xJ]U7&Kf&30,3f|Z9*dC)je_jA&Q4&Kp$NH(Yz#6S&Id%Ib=KX,AD=KV%dP}tW&Pk^+E_Ni=cq,3R}VZ(Si=b+}rv;0j}rZ]uA,/w(Sx&Jv$w9&4d&wE,NJ$Gy=J/]Ls#7k<ZQ<Y/&uj]Ov$PM;v3,2F&+u:up=On&3e,Jv;90=J+&Qm]6q}bK#+d~8Y(h2]hA;99&AS=I/}qB&dQ}yJ-VM}Vl&ui,iB&G3|Dc]7d=eQ%dX%JC_1L~4d^NP;vJ&/1)ZI#7N]9X[bQ&PL=0L(UZ,Lm&kc&IR}n7(iR<AQ<dg=33=vN}ft}au]7I,Ba=x9=dR~6R&Tq=Xi,3d$Nr&Bc}DI&ku&vf]Dn,/F&iD,Ll&Nw=0y&I7=Ls=/A&tU=Qe}Ua&uk&+F=g4=gh=Vj#+1&Qn}Uy*44#5F,Pc&Rz*Xn=oh=5W;0n_Nf(iE<Y7=vr=Zu]oz#5Z%mI=kN=Bv_Jp(T2;vt_Ml<FS&uI=L/&6P]64$M7}86<bo%QX(SI%IY&VK=Al&Ux;vv;ut*E/%uh<ZE|O3,M2(yc]yu=Wk&tp:Ex}hr,Cl&WE)+Z=8U}I2_4Q,hA_si=iw=OM=tM=yZ%Ia=U7;wT}b+;uo=Za}yS!5x}HD}fb#5O_dA;Nv%uB(yB;01(Sf}Fk;v7}Pt#8v<mZ#7L,/r&Pl~4w&f5=Ph$Fw_LF&8m,bL=yJ&BH}p/*Jn}tU~5Q;wB(h6]Df]8p^+B;E4&Wc=d+;Ea&bw$8C&FN,DM=Yf}mP~5w=fT#6V=mC=Fi=AV}jB&AN}lW}aH#/D)dZ;hl;vE}/7,CJ;31&w8,hj%u9_Js=jJ&4M~8k=TN&eC}nL&uc-wi&lX}dj=Mv=e2#6u=cr$uq$6G]8W}Jb:nm=Yg<b3(UA;vX&6n&xF=KT,jC,De&R8&oY=Zv&oB]7/=Z2&Oa}bf,hh(4h^tZ&72&Nx;D2&xL~5h~40)ZG)h+=OJ&RA]Bv$yB=Oq=df,AQ%Jn}OJ;11,3z&Tl&tj;v+^Hv,Dh(id=s+]7N&N3)9Q~8f,S4=uW=w4&uX,LX&3d]CJ&yp&8x<b2_do&lP=y/<cy_dG=Oi=7R(VH(lt_1T,Iq_AA;12^6T%k6#8K[B1{oO<AU[Bt;1b$9S&Ps<8T=St{bY,jB(Zp&63&Uv$9V,PM]6v&Af}zW[bW_oq}sm}nB&Kq&gC&ff_eq_2m&5F&TI}rf}Gf;Zr_z9;ER&jk}iz_sn<BN~+n&vo=Vi%97|ZR=Wc,WE&6t]6z%85(ly#84=KY)6m_5/=aX,N3}Tm&he&6K]tR_B2-I3;u/&hU&lH<AP=iB&IA=XL;/5&Nh=wv<BH#79=vS=zl<AA=0X_RG}Bw&9p$NW,AX&kP_Lp&/Z(Tc]Mu}hs#6I}5B&cI<bq&H9#6m=K9}vH(Y1(Y0#4B&w6,/9&gG<bE,/O=zb}I4_l8<B/;wL%Qo<HO[Mq=XX}0v&BP&F4(mG}0i}nm,EC=9u{I3,xG&/9=JY*DK&hR)BX=EI=cx=b/{6k}yX%A+&wa}Xb=la;wi^lL;0t}jo&Qb=xg=XB}iO<qo{bR=NV&8f=a0&Jy;0v=uK)HK;vN#6h&jB(h/%ud&NI%wY.X7=Pt}Cu-uL&Gs_hl%mH,tm]78=Lb^Q0#7Y=1u<Bt&+Q=Co_RH,w3;1e}ux<aU;ui}U3&Q5%bt]63&UQ|0l&uL}O7&3o,AV&dm|Nj(Xt*5+(Uu&Hh(p7(UF=VR=Bp^Jl&Hd[ix)9/=Iq]C8<67]66}mB%6f}bb}JI]8T$HA}db=YM&pa=2J}tS&Y0=PS&y4=cX$6E,hX,XP&nR;04,FQ&l0&Vm_Dv#5Y~8Z=Bi%MA]6x=JO:+p,Az&9q,Hj~6/}SD=K1:EJ}nA;Qo#/E]9R,Ie&6X%W3]61&v4=xX_MC=0q;06(Xq=fs}IG}Dv=0l}o7$iZ;9v&LH&DP-7a&OY,SZ,Kz,Cv&dh=fx|Nh,F/~7q=XF&w+;9n&Gw;0h}Z7<7O&JK(S7&LS<AD<ac=wo<Dt&zw%4B=4v#8P;9o~6p*vV=Tm,Or&I6=1q}nY=P0=gq&Bl&Uu,Ch%yb}UY=zh}dh}rl(T4_xk(YA#8R*xH,IN}Jn]7V}C4&Ty}j3]7p=cL=3h&wW%Qv<Z3=f0&RI&+S(ic_zq}oN&/Y=z1;Td=LW=0e=OI(Vc,+b^ju(UL;0r:Za%8v=Rp=zw&58&73&wK}qX]6y&8E)a2}WR=wP^ur&nQ<cH}Re=Aq&wk}Q0&+q=PP,Gc|/d^k5,Fw]8Y}Pg]p3=ju=ed}r5_yf&Cs]7z$/G<Cm&Jp&54_1G_gP_Ll}JZ;0u]k8_7k(Sg]65{9i=LN&Sx&WK,iW&fD&Lk{9a}Em-9c#8N&io=sy]8d&nT&IK(lx#7/$lW(Td<s8~49,3o<7Y=MW(T+_Jr&Wd,iL}Ct=xh&5V;v4&8n%Kx=iF&l2_0B{B+,If(J0,Lv;u8=Kx-vB=HC&vS=Z6&fU&vE^xK;3D=4h=MR#45:Jw;0d}iw=LU}I5=I0]gB*im,K9}GU,1k_4U&Tt=Vs(iX&lU(TF#7y,ZO}oA&m5#5P}PN}Uz=hM<B1&FB<aG,e6~7T<tP(UQ_ZT=wu&F8)aQ]iN,1r_Lo&/g:CD}84{J1_Ki&Na&3n$jz&FE=dc;uv;va}in}ll=fv(h1&3h}fp=Cy}BM(+E~8m}lo%v7=hC(T6$cj=BQ=Bw(DR,2j=Ks,NS|F+;00=fU=70}Mb(YU;+G&m7&hr=Sk%Co]t+(X5_Jw}0r}gC(AS-IP&QK<Z2#8Q$WC]WX}T2&pG_Ka,HC=R4&/N;Z+;ch(C7,D4$3p_Mk&B2$8D=n9%Ky#5z(CT&QJ#7B]DC]gW}nf~5M;Iw#80}Tc_1F#4Z-aC}Hl=ph=fz,/3=aW}JM}nn;DG;vm}wn,4P}T3;wx&RG$u+}zK=0b;+J_Ek{re<aZ=AS}yY#5D]7q,Cp}xN=VP*2C}GZ}aG~+m_Cs=OY#6r]6g<GS}LC(UB=3A=Bo}Jy<c4}Is;1P<AG}Op<Z1}ld}nS=1Z,yM&95&98=CJ(4t:2L$Hk=Zo}Vc;+I}np&N1}9y=iv}CO*7p=jL)px]tb^zh&GS&Vl%v/;vR=14=zJ&49|/f]hF}WG;03=8P}o/&Gg&rp;DB,Kv}Ji&Pb;aA^ll(4j%yt}+K$Ht#4y&hY]7Y<F1,eN}bG(Uh%6Z]t5%G7;+F_RE;it}tL=LS&Da=Xx(S+(4f=8G=yI}cJ}WP=37=jS}pX}hd)fp<A8=Jt~+o$HJ=M6}iX=g9}CS=dv=Cj(mP%Kd,xq|+9&LD(4/=Xm&QP=Lc}LX&fL;+K=Op(lu=Qs.qC:+e&L+=Jj#8w;SL]7S(b+#4I=c1&nG_Lf&uH;+R)ZV<bV%B/,TE&0H&Jq&Ah%OF&Ss(p2,Wv&I3=Wl}Vq;1L&lJ#9b_1H=8r=b8=JH(SZ=hD=J2#7U,/U#/X~6P,FU<eL=jx,mG=hG=CE&PU=Se(qX&LY=X6=y4&tk&QQ&tf=4g&xI}W+&mZ=Dc#7w}Lg;DA;wQ_Kb(cJ=hR%yX&Yb,hw{bX_4X;EP;1W_2M}Uc=b5(YF,CM&Tp^OJ{DD]6s=vF=Yo~8q}XH}Fu%P5(SJ=Qt;MO]s8<F3&B3&8T(Ul-BS*dw&dR<87}/8]62$PZ]Lx<Au}9Q]7c=ja=KR,Go,Us&v6(qk}pG&G2=ev^GM%w4&H4]7F&dv]J6}Ew:9w=sj-ZL}Ym$+h(Ut(Um~4n=Xs(U7%eE=Qc_JR<CA#6t<Fv|/I,IS,EG<F2(Xy$/n<Fa(h9}+9_2o&N4#7X<Zq|+f_Dp=dt&na,Ca=NJ)jY=8C=YG=s6&Q+<DO}D3=xB&R1(lw;Qn<bF(Cu|/B}HV=SS&n7,10&u0]Dm%A6^4Q=WR(TD=Xo<GH,Rj(l8)bP&n/=LM&CF,F5&ml=PJ;0k=LG=tq,Rh,D6@4i=1p&+9=YC%er_Mh;nI;0q=Fw]80=xq=FM$Gv;v6&nc;wK%H2&Kj;vs,AA=YP,66}bI(qR~5U=6q~4b$Ni=K5.X3$So&Iu(p+]8G=Cf=RY(TS_O3(iH&57=fE=Dg_Do#9z#7H;FK{qd_2k%JR}en&gh_z8;Rx}9p<cN_Ne,DO;LN_7o~/p=NF=5Y}gN<ce<C1,QE]Wv=3u<BC}GK]yq}DY&u/_hj=II(pz&rC,jV&+Z}ut=NQ;Cg-SR_ZS,+o=u/;Oy_RK_QF(Fx&xP}Wr&TA,Uh&g1=yr{ax[VF$Pg(YB;Ox=Vy;+W(Sp}XV%dd&33(l/]l4#4Y}OE=6c=bw(A7&9t%wd&N/&mo,JH&Qe)fm=Ao}fu=tH\";\nconst deltaData = \"FAZDC6BALcLZCA+GBARCW8wNCcDDZ8LVFBOqqDUiou+M42TFAyERXFb7EjhP+vmBFpFrUpfDV2F7eB+eCltCHJFWLFCED+pWTojEIHFXc3aFn4F68zqjEuKidS1QBVPDEhE7NA4mhMF7oThD49ot3FgtzHFCK0acW1x8DH1EmLoIlrWFBLE+y5+NA3Cx65wJHTaEZVaK1mWAmPGxgYCdxwOjTDIt/faOEhTl1vqNsKtJCOhJWuio2g07KLZEQsFBUpNtwEByBgxFslFheFbiEPvi61msDvApxCzB6rBCzox7joYA5UdDc+Cb4FSgIabpXFAj3bjkmFAxCZE+mD/SFf/0ELecYCt3nLoxC6WEZf2tKDB4oZvrEmqFkKk7BwILA7gtYBpsTq//D4jD0F0wEB9pyQ1BD5Ba0oYHDI+sbDFhvrHXdDHfgFEIJLi5r8qercNFBgFLC4bo5ERJtamWBDFy73KCEb6M8VpmEt330ygCTK58EIIFkYgF84gtGA9Uyh3m68iVrFbWFbcbqiCYHZ9J1jeRPbL8yswhMiDbhEhdNoSwFbZrLT740ABEqgCkO8J1BLd1VhKKR4sD1yUo0z+FF59Mvg71CFbyEhbHSFBKEIKyoQNgQppq9T0KAqePu0ZFGrXOHdKJqkoTFhYvpDNyuuznrN84thJbsCoO6Cu6Xlvntvy0QYuAExQEYtTUBf3CoCqwgGFZ4u1HJFzDVwEy3cjcpV4QvsPaBC3rCGyCF23o4K3pp2gberGgFEJEHo4nHICtyKH2ZqyxhN05KBBJIQlKh/Oujv/DH32VrlqFdIFC7Fz9Ct4kaqFME0UETLprnN9kfy+kFmtQBB0+5CFu0N9Ij8l/VvJDh2oq3hT6EzjTHKFN7ZjZwoTsAZ4Exsko6Fpa6WC+sduz8jyrLpegTv2h1EBeYpLpm2czQW0KoCcS0bCVXCmuWJDBjN1nQNLdF58SFJ0h7i3pC3oEOKy/FjBklL70XvBEEIWp2yZ04xObzAWDDJG7f+DbqBEA7LyiR95j7MDVdDViz2RE5vWlBMv5e4+VfhP3aXNPhvLSynb9O2x4uFBV+3jqu6d5pCG28/sETByvmu/+IJ0L3wb4rj9DNOLBF6XPIODr4L19U9RRofAG6Nxydi8Bki8BhGJbBAJKzbJxkZSlF9Q2Cu8oKqggB9hBArwLLqEBWEtFowy8XK8bEyw9snT+BeyFk1ZCSrdmgfEwFePTgCjELBEnIbjaDDPJm36rG9pztcEzT8dGk23SBhXBB1H4z+OWze0ooFzz8pDBYFvp9j9tvFByf9y4EFdVnz026CGR5qMr7fxMHN8UUdlyJAzlTBDRC28k+L4FB8078ljyD91tUj1ocnTs8vdEf7znbzm+GIjEZnoZE5rnLL700Xc7yHfz05nWxy03vBB9YGHYOWxgMQGBCR24CVYNE1hpfKxN0zKnfJDmmMgMmBWqNbjfSyFCBWSCGCgR8yFXiHyEj+VtD1FB3FpC1zI0kFbzifiKTLm9yq5zFmur+q8FHqjoOBWsBPiDbnCC2ErunV6cJ6TygXFYHYp7MKN9RUlSIS8/xBAGYLzeqUnBF4QbsTuUkUqGs6CaiDWKWjQK9EJkjpkTmNCPYXL\"; // @TODO: Load lazily\n\nconst wordlist$7 = {\n  zh_cn: null,\n  zh_tw: null\n};\nconst Checks = {\n  zh_cn: \"0x17bcc4d8547e5a7135e365d1ab443aaae95e76d8230c2782c67305d4f21497a1\",\n  zh_tw: \"0x51e720e90c7b87bec1d70eb6e74a21a449bd3ec9c020b01d3a40ed991b60ce5d\"\n};\nconst codes$1 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nconst style = \"~!@#$%^&*_-=[]{}|;:,.()<>?\";\n\nfunction loadWords$7(lang) {\n  if (wordlist$7[lang.locale] !== null) {\n    return;\n  }\n\n  wordlist$7[lang.locale] = [];\n  let deltaOffset = 0;\n\n  for (let i = 0; i < 2048; i++) {\n    const s = style.indexOf(data$2[i * 3]);\n    const bytes = [228 + (s >> 2), 128 + codes$1.indexOf(data$2[i * 3 + 1]), 128 + codes$1.indexOf(data$2[i * 3 + 2])];\n\n    if (lang.locale === \"zh_tw\") {\n      const common = s % 4;\n\n      for (let i = common; i < 3; i++) {\n        bytes[i] = codes$1.indexOf(deltaData[deltaOffset++]) + (i == 0 ? 228 : 128);\n      }\n    }\n\n    wordlist$7[lang.locale].push(toUtf8String(bytes));\n  } // Verify the computed list matches the official list\n\n  /* istanbul ignore if */\n\n\n  if (Wordlist.check(lang) !== Checks[lang.locale]) {\n    wordlist$7[lang.locale] = null;\n    throw new Error(\"BIP39 Wordlist for \" + lang.locale + \" (Chinese) FAILED\");\n  }\n}\n\nclass LangZh extends Wordlist {\n  constructor(country) {\n    super(\"zh_\" + country);\n  }\n\n  getWord(index) {\n    loadWords$7(this);\n    return wordlist$7[this.locale][index];\n  }\n\n  getWordIndex(word) {\n    loadWords$7(this);\n    return wordlist$7[this.locale].indexOf(word);\n  }\n\n  split(mnemonic) {\n    mnemonic = mnemonic.replace(/(?:\\u3000| )+/g, \"\");\n    return mnemonic.split(\"\");\n  }\n\n}\n\nconst langZhCn = new LangZh(\"cn\");\nWordlist.register(langZhCn);\nWordlist.register(langZhCn, \"zh\");\nconst langZhTw = new LangZh(\"tw\");\nWordlist.register(langZhTw);\nconst wordlists = {\n  cz: langCz,\n  en: langEn,\n  es: langEs,\n  fr: langFr,\n  it: langIt,\n  ja: langJa,\n  ko: langKo,\n  zh: langZhCn,\n  zh_cn: langZhCn,\n  zh_tw: langZhTw\n};\nconst version$g = \"hdnode/5.4.0\";\nconst logger$l = new Logger(version$g);\nconst N = BigNumber.from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\"); // \"Bitcoin seed\"\n\nconst MasterSecret = toUtf8Bytes(\"Bitcoin seed\");\nconst HardenedBit = 0x80000000; // Returns a byte with the MSB bits set\n\nfunction getUpperMask(bits) {\n  return (1 << bits) - 1 << 8 - bits;\n} // Returns a byte with the LSB bits set\n\n\nfunction getLowerMask(bits) {\n  return (1 << bits) - 1;\n}\n\nfunction bytes32(value) {\n  return hexZeroPad(hexlify(value), 32);\n}\n\nfunction base58check(data) {\n  return Base58.encode(concat([data, hexDataSlice(sha256$1(sha256$1(data)), 0, 4)]));\n}\n\nfunction getWordlist(wordlist) {\n  if (wordlist == null) {\n    return wordlists[\"en\"];\n  }\n\n  if (typeof wordlist === \"string\") {\n    const words = wordlists[wordlist];\n\n    if (words == null) {\n      logger$l.throwArgumentError(\"unknown locale\", \"wordlist\", wordlist);\n    }\n\n    return words;\n  }\n\n  return wordlist;\n}\n\nconst _constructorGuard$3 = {};\nconst defaultPath = \"m/44'/60'/0'/0/0\";\n\nclass HDNode {\n  /**\n   *  This constructor should not be called directly.\n   *\n   *  Please use:\n   *   - fromMnemonic\n   *   - fromSeed\n   */\n  constructor(constructorGuard, privateKey, publicKey, parentFingerprint, chainCode, index, depth, mnemonicOrPath) {\n    logger$l.checkNew(new.target, HDNode);\n    /* istanbul ignore if */\n\n    if (constructorGuard !== _constructorGuard$3) {\n      throw new Error(\"HDNode constructor cannot be called directly\");\n    }\n\n    if (privateKey) {\n      const signingKey = new SigningKey(privateKey);\n      defineReadOnly(this, \"privateKey\", signingKey.privateKey);\n      defineReadOnly(this, \"publicKey\", signingKey.compressedPublicKey);\n    } else {\n      defineReadOnly(this, \"privateKey\", null);\n      defineReadOnly(this, \"publicKey\", hexlify(publicKey));\n    }\n\n    defineReadOnly(this, \"parentFingerprint\", parentFingerprint);\n    defineReadOnly(this, \"fingerprint\", hexDataSlice(ripemd160$1(sha256$1(this.publicKey)), 0, 4));\n    defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n    defineReadOnly(this, \"chainCode\", chainCode);\n    defineReadOnly(this, \"index\", index);\n    defineReadOnly(this, \"depth\", depth);\n\n    if (mnemonicOrPath == null) {\n      // From a source that does not preserve the path (e.g. extended keys)\n      defineReadOnly(this, \"mnemonic\", null);\n      defineReadOnly(this, \"path\", null);\n    } else if (typeof mnemonicOrPath === \"string\") {\n      // From a source that does not preserve the mnemonic (e.g. neutered)\n      defineReadOnly(this, \"mnemonic\", null);\n      defineReadOnly(this, \"path\", mnemonicOrPath);\n    } else {\n      // From a fully qualified source\n      defineReadOnly(this, \"mnemonic\", mnemonicOrPath);\n      defineReadOnly(this, \"path\", mnemonicOrPath.path);\n    }\n  }\n\n  get extendedKey() {\n    // We only support the mainnet values for now, but if anyone needs\n    // testnet values, let me know. I believe current senitment is that\n    // we should always use mainnet, and use BIP-44 to derive the network\n    //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n    //   - Testnet: public=0x043587CF, private=0x04358394\n    if (this.depth >= 256) {\n      throw new Error(\"Depth too large!\");\n    }\n\n    return base58check(concat([this.privateKey != null ? \"0x0488ADE4\" : \"0x0488B21E\", hexlify(this.depth), this.parentFingerprint, hexZeroPad(hexlify(this.index), 4), this.chainCode, this.privateKey != null ? concat([\"0x00\", this.privateKey]) : this.publicKey]));\n  }\n\n  neuter() {\n    return new HDNode(_constructorGuard$3, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);\n  }\n\n  _derive(index) {\n    if (index > 0xffffffff) {\n      throw new Error(\"invalid index - \" + String(index));\n    } // Base path\n\n\n    let path = this.path;\n\n    if (path) {\n      path += \"/\" + (index & ~HardenedBit);\n    }\n\n    const data = new Uint8Array(37);\n\n    if (index & HardenedBit) {\n      if (!this.privateKey) {\n        throw new Error(\"cannot derive child of neutered node\");\n      } // Data = 0x00 || ser_256(k_par)\n\n\n      data.set(arrayify(this.privateKey), 1); // Hardened path\n\n      if (path) {\n        path += \"'\";\n      }\n    } else {\n      // Data = ser_p(point(k_par))\n      data.set(arrayify(this.publicKey));\n    } // Data += ser_32(i)\n\n\n    for (let i = 24; i >= 0; i -= 8) {\n      data[33 + (i >> 3)] = index >> 24 - i & 0xff;\n    }\n\n    const I = arrayify(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));\n    const IL = I.slice(0, 32);\n    const IR = I.slice(32); // The private key\n\n    let ki = null; // The public key\n\n    let Ki = null;\n\n    if (this.privateKey) {\n      ki = bytes32(BigNumber.from(IL).add(this.privateKey).mod(N));\n    } else {\n      const ek = new SigningKey(hexlify(IL));\n      Ki = ek._addPoint(this.publicKey);\n    }\n\n    let mnemonicOrPath = path;\n    const srcMnemonic = this.mnemonic;\n\n    if (srcMnemonic) {\n      mnemonicOrPath = Object.freeze({\n        phrase: srcMnemonic.phrase,\n        path: path,\n        locale: srcMnemonic.locale || \"en\"\n      });\n    }\n\n    return new HDNode(_constructorGuard$3, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);\n  }\n\n  derivePath(path) {\n    const components = path.split(\"/\");\n\n    if (components.length === 0 || components[0] === \"m\" && this.depth !== 0) {\n      throw new Error(\"invalid path - \" + path);\n    }\n\n    if (components[0] === \"m\") {\n      components.shift();\n    }\n\n    let result = this;\n\n    for (let i = 0; i < components.length; i++) {\n      const component = components[i];\n\n      if (component.match(/^[0-9]+'$/)) {\n        const index = parseInt(component.substring(0, component.length - 1));\n\n        if (index >= HardenedBit) {\n          throw new Error(\"invalid path index - \" + component);\n        }\n\n        result = result._derive(HardenedBit + index);\n      } else if (component.match(/^[0-9]+$/)) {\n        const index = parseInt(component);\n\n        if (index >= HardenedBit) {\n          throw new Error(\"invalid path index - \" + component);\n        }\n\n        result = result._derive(index);\n      } else {\n        throw new Error(\"invalid path component - \" + component);\n      }\n    }\n\n    return result;\n  }\n\n  static _fromSeed(seed, mnemonic) {\n    const seedArray = arrayify(seed);\n\n    if (seedArray.length < 16 || seedArray.length > 64) {\n      throw new Error(\"invalid seed\");\n    }\n\n    const I = arrayify(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));\n    return new HDNode(_constructorGuard$3, bytes32(I.slice(0, 32)), null, \"0x00000000\", bytes32(I.slice(32)), 0, 0, mnemonic);\n  }\n\n  static fromMnemonic(mnemonic, password, wordlist) {\n    // If a locale name was passed in, find the associated wordlist\n    wordlist = getWordlist(wordlist); // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)\n\n    mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);\n    return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {\n      phrase: mnemonic,\n      path: \"m\",\n      locale: wordlist.locale\n    });\n  }\n\n  static fromSeed(seed) {\n    return HDNode._fromSeed(seed, null);\n  }\n\n  static fromExtendedKey(extendedKey) {\n    const bytes = Base58.decode(extendedKey);\n\n    if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {\n      logger$l.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n    }\n\n    const depth = bytes[4];\n    const parentFingerprint = hexlify(bytes.slice(5, 9));\n    const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n    const chainCode = hexlify(bytes.slice(13, 45));\n    const key = bytes.slice(45, 78);\n\n    switch (hexlify(bytes.slice(0, 4))) {\n      // Public Key\n      case \"0x0488b21e\":\n      case \"0x043587cf\":\n        return new HDNode(_constructorGuard$3, null, hexlify(key), parentFingerprint, chainCode, index, depth, null);\n      // Private Key\n\n      case \"0x0488ade4\":\n      case \"0x04358394 \":\n        if (key[0] !== 0) {\n          break;\n        }\n\n        return new HDNode(_constructorGuard$3, hexlify(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);\n    }\n\n    return logger$l.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n  }\n\n}\n\nfunction mnemonicToSeed(mnemonic, password) {\n  if (!password) {\n    password = \"\";\n  }\n\n  const salt = toUtf8Bytes(\"mnemonic\" + password, UnicodeNormalizationForm.NFKD);\n  return pbkdf2(toUtf8Bytes(mnemonic, UnicodeNormalizationForm.NFKD), salt, 2048, 64, \"sha512\");\n}\n\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n  wordlist = getWordlist(wordlist);\n  logger$l.checkNormalize();\n  const words = wordlist.split(mnemonic);\n\n  if (words.length % 3 !== 0) {\n    throw new Error(\"invalid mnemonic\");\n  }\n\n  const entropy = arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));\n  let offset = 0;\n\n  for (let i = 0; i < words.length; i++) {\n    let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n\n    if (index === -1) {\n      throw new Error(\"invalid mnemonic\");\n    }\n\n    for (let bit = 0; bit < 11; bit++) {\n      if (index & 1 << 10 - bit) {\n        entropy[offset >> 3] |= 1 << 7 - offset % 8;\n      }\n\n      offset++;\n    }\n  }\n\n  const entropyBits = 32 * words.length / 3;\n  const checksumBits = words.length / 3;\n  const checksumMask = getUpperMask(checksumBits);\n  const checksum = arrayify(sha256$1(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n\n  if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n    throw new Error(\"invalid checksum\");\n  }\n\n  return hexlify(entropy.slice(0, entropyBits / 8));\n}\n\nfunction entropyToMnemonic(entropy, wordlist) {\n  wordlist = getWordlist(wordlist);\n  entropy = arrayify(entropy);\n\n  if (entropy.length % 4 !== 0 || entropy.length < 16 || entropy.length > 32) {\n    throw new Error(\"invalid entropy\");\n  }\n\n  const indices = [0];\n  let remainingBits = 11;\n\n  for (let i = 0; i < entropy.length; i++) {\n    // Consume the whole byte (with still more to go)\n    if (remainingBits > 8) {\n      indices[indices.length - 1] <<= 8;\n      indices[indices.length - 1] |= entropy[i];\n      remainingBits -= 8; // This byte will complete an 11-bit index\n    } else {\n      indices[indices.length - 1] <<= remainingBits;\n      indices[indices.length - 1] |= entropy[i] >> 8 - remainingBits; // Start the next word\n\n      indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n      remainingBits += 3;\n    }\n  } // Compute the checksum bits\n\n\n  const checksumBits = entropy.length / 4;\n  const checksum = arrayify(sha256$1(entropy))[0] & getUpperMask(checksumBits); // Shift the checksum into the word indices\n\n  indices[indices.length - 1] <<= checksumBits;\n  indices[indices.length - 1] |= checksum >> 8 - checksumBits;\n  return wordlist.join(indices.map(index => wordlist.getWord(index)));\n}\n\nfunction isValidMnemonic(mnemonic, wordlist) {\n  try {\n    mnemonicToEntropy(mnemonic, wordlist);\n    return true;\n  } catch (error) {}\n\n  return false;\n}\n\nfunction getAccountPath(index) {\n  if (typeof index !== \"number\" || index < 0 || index >= HardenedBit || index % 1) {\n    logger$l.throwArgumentError(\"invalid account index\", \"index\", index);\n  }\n\n  return `m/44'/60'/${index}'/0/0`;\n}\n\nconst version$h = \"random/5.4.0\";\nconst logger$m = new Logger(version$h);\nlet anyGlobal = null;\n\ntry {\n  anyGlobal = window;\n\n  if (anyGlobal == null) {\n    throw new Error(\"try next\");\n  }\n} catch (error) {\n  try {\n    anyGlobal = global;\n\n    if (anyGlobal == null) {\n      throw new Error(\"try next\");\n    }\n  } catch (error) {\n    anyGlobal = {};\n  }\n}\n\nlet crypto = anyGlobal.crypto || anyGlobal.msCrypto;\n\nif (!crypto || !crypto.getRandomValues) {\n  logger$m.warn(\"WARNING: Missing strong random number source\");\n  crypto = {\n    getRandomValues: function (buffer) {\n      return logger$m.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"crypto.getRandomValues\"\n      });\n    }\n  };\n}\n\nfunction randomBytes(length) {\n  if (length <= 0 || length > 1024 || length % 1) {\n    logger$m.throwArgumentError(\"invalid length\", \"length\", length);\n  }\n\n  const result = new Uint8Array(length);\n  crypto.getRandomValues(result);\n  return arrayify(result);\n}\n\nfunction shuffled(array) {\n  array = array.slice();\n\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const tmp = array[i];\n    array[i] = array[j];\n    array[j] = tmp;\n  }\n\n  return array;\n}\n\nvar aesJs = createCommonjsModule(function (module, exports) {\n  (function (root) {\n    function checkInt(value) {\n      return parseInt(value) === value;\n    }\n\n    function checkInts(arrayish) {\n      if (!checkInt(arrayish.length)) {\n        return false;\n      }\n\n      for (var i = 0; i < arrayish.length; i++) {\n        if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    function coerceArray(arg, copy) {\n      // ArrayBuffer view\n      if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {\n        if (copy) {\n          if (arg.slice) {\n            arg = arg.slice();\n          } else {\n            arg = Array.prototype.slice.call(arg);\n          }\n        }\n\n        return arg;\n      } // It's an array; check it is a valid representation of a byte\n\n\n      if (Array.isArray(arg)) {\n        if (!checkInts(arg)) {\n          throw new Error('Array contains invalid value: ' + arg);\n        }\n\n        return new Uint8Array(arg);\n      } // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n\n\n      if (checkInt(arg.length) && checkInts(arg)) {\n        return new Uint8Array(arg);\n      }\n\n      throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n      return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n      if (sourceStart != null || sourceEnd != null) {\n        if (sourceArray.slice) {\n          sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n        } else {\n          sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n        }\n      }\n\n      targetArray.set(sourceArray, targetStart);\n    }\n\n    var convertUtf8 = function () {\n      function toBytes(text) {\n        var result = [],\n            i = 0;\n        text = encodeURI(text);\n\n        while (i < text.length) {\n          var c = text.charCodeAt(i++); // if it is a % sign, encode the following 2 bytes as a hex value\n\n          if (c === 37) {\n            result.push(parseInt(text.substr(i, 2), 16));\n            i += 2; // otherwise, just the actual byte\n          } else {\n            result.push(c);\n          }\n        }\n\n        return coerceArray(result);\n      }\n\n      function fromBytes(bytes) {\n        var result = [],\n            i = 0;\n\n        while (i < bytes.length) {\n          var c = bytes[i];\n\n          if (c < 128) {\n            result.push(String.fromCharCode(c));\n            i++;\n          } else if (c > 191 && c < 224) {\n            result.push(String.fromCharCode((c & 0x1f) << 6 | bytes[i + 1] & 0x3f));\n            i += 2;\n          } else {\n            result.push(String.fromCharCode((c & 0x0f) << 12 | (bytes[i + 1] & 0x3f) << 6 | bytes[i + 2] & 0x3f));\n            i += 3;\n          }\n        }\n\n        return result.join('');\n      }\n\n      return {\n        toBytes: toBytes,\n        fromBytes: fromBytes\n      };\n    }();\n\n    var convertHex = function () {\n      function toBytes(text) {\n        var result = [];\n\n        for (var i = 0; i < text.length; i += 2) {\n          result.push(parseInt(text.substr(i, 2), 16));\n        }\n\n        return result;\n      } // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n\n\n      var Hex = '0123456789abcdef';\n\n      function fromBytes(bytes) {\n        var result = [];\n\n        for (var i = 0; i < bytes.length; i++) {\n          var v = bytes[i];\n          result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n        }\n\n        return result.join('');\n      }\n\n      return {\n        toBytes: toBytes,\n        fromBytes: fromBytes\n      };\n    }(); // Number of rounds by keysize\n\n\n    var numberOfRounds = {\n      16: 10,\n      24: 12,\n      32: 14\n    }; // Round constant words\n\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91]; // S-box and Inverse S-box (S is for Substitution)\n\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si = [0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]; // Transformations for encryption\n\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c]; // Transformations for decryption\n\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0]; // Transformations for decryption key expansion\n\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n      var result = [];\n\n      for (var i = 0; i < bytes.length; i += 4) {\n        result.push(bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]);\n      }\n\n      return result;\n    }\n\n    var AES = function (key) {\n      if (!(this instanceof AES)) {\n        throw Error('AES must be instanitated with `new`');\n      }\n\n      Object.defineProperty(this, 'key', {\n        value: coerceArray(key, true)\n      });\n\n      this._prepare();\n    };\n\n    AES.prototype._prepare = function () {\n      var rounds = numberOfRounds[this.key.length];\n\n      if (rounds == null) {\n        throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n      } // encryption round keys\n\n\n      this._Ke = []; // decryption round keys\n\n      this._Kd = [];\n\n      for (var i = 0; i <= rounds; i++) {\n        this._Ke.push([0, 0, 0, 0]);\n\n        this._Kd.push([0, 0, 0, 0]);\n      }\n\n      var roundKeyCount = (rounds + 1) * 4;\n      var KC = this.key.length / 4; // convert the key into ints\n\n      var tk = convertToInt32(this.key); // copy values into round key arrays\n\n      var index;\n\n      for (var i = 0; i < KC; i++) {\n        index = i >> 2;\n        this._Ke[index][i % 4] = tk[i];\n        this._Kd[rounds - index][i % 4] = tk[i];\n      } // key expansion (fips-197 section 5.2)\n\n\n      var rconpointer = 0;\n      var t = KC,\n          tt;\n\n      while (t < roundKeyCount) {\n        tt = tk[KC - 1];\n        tk[0] ^= S[tt >> 16 & 0xFF] << 24 ^ S[tt >> 8 & 0xFF] << 16 ^ S[tt & 0xFF] << 8 ^ S[tt >> 24 & 0xFF] ^ rcon[rconpointer] << 24;\n        rconpointer += 1; // key expansion (for non-256 bit)\n\n        if (KC != 8) {\n          for (var i = 1; i < KC; i++) {\n            tk[i] ^= tk[i - 1];\n          } // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n\n        } else {\n          for (var i = 1; i < KC / 2; i++) {\n            tk[i] ^= tk[i - 1];\n          }\n\n          tt = tk[KC / 2 - 1];\n          tk[KC / 2] ^= S[tt & 0xFF] ^ S[tt >> 8 & 0xFF] << 8 ^ S[tt >> 16 & 0xFF] << 16 ^ S[tt >> 24 & 0xFF] << 24;\n\n          for (var i = KC / 2 + 1; i < KC; i++) {\n            tk[i] ^= tk[i - 1];\n          }\n        } // copy values into round key arrays\n\n\n        var i = 0,\n            r,\n            c;\n\n        while (i < KC && t < roundKeyCount) {\n          r = t >> 2;\n          c = t % 4;\n          this._Ke[r][c] = tk[i];\n          this._Kd[rounds - r][c] = tk[i++];\n          t++;\n        }\n      } // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n\n\n      for (var r = 1; r < rounds; r++) {\n        for (var c = 0; c < 4; c++) {\n          tt = this._Kd[r][c];\n          this._Kd[r][c] = U1[tt >> 24 & 0xFF] ^ U2[tt >> 16 & 0xFF] ^ U3[tt >> 8 & 0xFF] ^ U4[tt & 0xFF];\n        }\n      }\n    };\n\n    AES.prototype.encrypt = function (plaintext) {\n      if (plaintext.length != 16) {\n        throw new Error('invalid plaintext size (must be 16 bytes)');\n      }\n\n      var rounds = this._Ke.length - 1;\n      var a = [0, 0, 0, 0]; // convert plaintext to (ints ^ key)\n\n      var t = convertToInt32(plaintext);\n\n      for (var i = 0; i < 4; i++) {\n        t[i] ^= this._Ke[0][i];\n      } // apply round transforms\n\n\n      for (var r = 1; r < rounds; r++) {\n        for (var i = 0; i < 4; i++) {\n          a[i] = T1[t[i] >> 24 & 0xff] ^ T2[t[(i + 1) % 4] >> 16 & 0xff] ^ T3[t[(i + 2) % 4] >> 8 & 0xff] ^ T4[t[(i + 3) % 4] & 0xff] ^ this._Ke[r][i];\n        }\n\n        t = a.slice();\n      } // the last round is special\n\n\n      var result = createArray(16),\n          tt;\n\n      for (var i = 0; i < 4; i++) {\n        tt = this._Ke[rounds][i];\n        result[4 * i] = (S[t[i] >> 24 & 0xff] ^ tt >> 24) & 0xff;\n        result[4 * i + 1] = (S[t[(i + 1) % 4] >> 16 & 0xff] ^ tt >> 16) & 0xff;\n        result[4 * i + 2] = (S[t[(i + 2) % 4] >> 8 & 0xff] ^ tt >> 8) & 0xff;\n        result[4 * i + 3] = (S[t[(i + 3) % 4] & 0xff] ^ tt) & 0xff;\n      }\n\n      return result;\n    };\n\n    AES.prototype.decrypt = function (ciphertext) {\n      if (ciphertext.length != 16) {\n        throw new Error('invalid ciphertext size (must be 16 bytes)');\n      }\n\n      var rounds = this._Kd.length - 1;\n      var a = [0, 0, 0, 0]; // convert plaintext to (ints ^ key)\n\n      var t = convertToInt32(ciphertext);\n\n      for (var i = 0; i < 4; i++) {\n        t[i] ^= this._Kd[0][i];\n      } // apply round transforms\n\n\n      for (var r = 1; r < rounds; r++) {\n        for (var i = 0; i < 4; i++) {\n          a[i] = T5[t[i] >> 24 & 0xff] ^ T6[t[(i + 3) % 4] >> 16 & 0xff] ^ T7[t[(i + 2) % 4] >> 8 & 0xff] ^ T8[t[(i + 1) % 4] & 0xff] ^ this._Kd[r][i];\n        }\n\n        t = a.slice();\n      } // the last round is special\n\n\n      var result = createArray(16),\n          tt;\n\n      for (var i = 0; i < 4; i++) {\n        tt = this._Kd[rounds][i];\n        result[4 * i] = (Si[t[i] >> 24 & 0xff] ^ tt >> 24) & 0xff;\n        result[4 * i + 1] = (Si[t[(i + 3) % 4] >> 16 & 0xff] ^ tt >> 16) & 0xff;\n        result[4 * i + 2] = (Si[t[(i + 2) % 4] >> 8 & 0xff] ^ tt >> 8) & 0xff;\n        result[4 * i + 3] = (Si[t[(i + 1) % 4] & 0xff] ^ tt) & 0xff;\n      }\n\n      return result;\n    };\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n\n\n    var ModeOfOperationECB = function (key) {\n      if (!(this instanceof ModeOfOperationECB)) {\n        throw Error('AES must be instanitated with `new`');\n      }\n\n      this.description = \"Electronic Code Block\";\n      this.name = \"ecb\";\n      this._aes = new AES(key);\n    };\n\n    ModeOfOperationECB.prototype.encrypt = function (plaintext) {\n      plaintext = coerceArray(plaintext);\n\n      if (plaintext.length % 16 !== 0) {\n        throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n      }\n\n      var ciphertext = createArray(plaintext.length);\n      var block = createArray(16);\n\n      for (var i = 0; i < plaintext.length; i += 16) {\n        copyArray(plaintext, block, 0, i, i + 16);\n        block = this._aes.encrypt(block);\n        copyArray(block, ciphertext, i);\n      }\n\n      return ciphertext;\n    };\n\n    ModeOfOperationECB.prototype.decrypt = function (ciphertext) {\n      ciphertext = coerceArray(ciphertext);\n\n      if (ciphertext.length % 16 !== 0) {\n        throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n      }\n\n      var plaintext = createArray(ciphertext.length);\n      var block = createArray(16);\n\n      for (var i = 0; i < ciphertext.length; i += 16) {\n        copyArray(ciphertext, block, 0, i, i + 16);\n        block = this._aes.decrypt(block);\n        copyArray(block, plaintext, i);\n      }\n\n      return plaintext;\n    };\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n\n\n    var ModeOfOperationCBC = function (key, iv) {\n      if (!(this instanceof ModeOfOperationCBC)) {\n        throw Error('AES must be instanitated with `new`');\n      }\n\n      this.description = \"Cipher Block Chaining\";\n      this.name = \"cbc\";\n\n      if (!iv) {\n        iv = createArray(16);\n      } else if (iv.length != 16) {\n        throw new Error('invalid initialation vector size (must be 16 bytes)');\n      }\n\n      this._lastCipherblock = coerceArray(iv, true);\n      this._aes = new AES(key);\n    };\n\n    ModeOfOperationCBC.prototype.encrypt = function (plaintext) {\n      plaintext = coerceArray(plaintext);\n\n      if (plaintext.length % 16 !== 0) {\n        throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n      }\n\n      var ciphertext = createArray(plaintext.length);\n      var block = createArray(16);\n\n      for (var i = 0; i < plaintext.length; i += 16) {\n        copyArray(plaintext, block, 0, i, i + 16);\n\n        for (var j = 0; j < 16; j++) {\n          block[j] ^= this._lastCipherblock[j];\n        }\n\n        this._lastCipherblock = this._aes.encrypt(block);\n        copyArray(this._lastCipherblock, ciphertext, i);\n      }\n\n      return ciphertext;\n    };\n\n    ModeOfOperationCBC.prototype.decrypt = function (ciphertext) {\n      ciphertext = coerceArray(ciphertext);\n\n      if (ciphertext.length % 16 !== 0) {\n        throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n      }\n\n      var plaintext = createArray(ciphertext.length);\n      var block = createArray(16);\n\n      for (var i = 0; i < ciphertext.length; i += 16) {\n        copyArray(ciphertext, block, 0, i, i + 16);\n        block = this._aes.decrypt(block);\n\n        for (var j = 0; j < 16; j++) {\n          plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n        }\n\n        copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n      }\n\n      return plaintext;\n    };\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n\n\n    var ModeOfOperationCFB = function (key, iv, segmentSize) {\n      if (!(this instanceof ModeOfOperationCFB)) {\n        throw Error('AES must be instanitated with `new`');\n      }\n\n      this.description = \"Cipher Feedback\";\n      this.name = \"cfb\";\n\n      if (!iv) {\n        iv = createArray(16);\n      } else if (iv.length != 16) {\n        throw new Error('invalid initialation vector size (must be 16 size)');\n      }\n\n      if (!segmentSize) {\n        segmentSize = 1;\n      }\n\n      this.segmentSize = segmentSize;\n      this._shiftRegister = coerceArray(iv, true);\n      this._aes = new AES(key);\n    };\n\n    ModeOfOperationCFB.prototype.encrypt = function (plaintext) {\n      if (plaintext.length % this.segmentSize != 0) {\n        throw new Error('invalid plaintext size (must be segmentSize bytes)');\n      }\n\n      var encrypted = coerceArray(plaintext, true);\n      var xorSegment;\n\n      for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n        xorSegment = this._aes.encrypt(this._shiftRegister);\n\n        for (var j = 0; j < this.segmentSize; j++) {\n          encrypted[i + j] ^= xorSegment[j];\n        } // Shift the register\n\n\n        copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n        copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n      }\n\n      return encrypted;\n    };\n\n    ModeOfOperationCFB.prototype.decrypt = function (ciphertext) {\n      if (ciphertext.length % this.segmentSize != 0) {\n        throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n      }\n\n      var plaintext = coerceArray(ciphertext, true);\n      var xorSegment;\n\n      for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n        xorSegment = this._aes.encrypt(this._shiftRegister);\n\n        for (var j = 0; j < this.segmentSize; j++) {\n          plaintext[i + j] ^= xorSegment[j];\n        } // Shift the register\n\n\n        copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n        copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n      }\n\n      return plaintext;\n    };\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n\n\n    var ModeOfOperationOFB = function (key, iv) {\n      if (!(this instanceof ModeOfOperationOFB)) {\n        throw Error('AES must be instanitated with `new`');\n      }\n\n      this.description = \"Output Feedback\";\n      this.name = \"ofb\";\n\n      if (!iv) {\n        iv = createArray(16);\n      } else if (iv.length != 16) {\n        throw new Error('invalid initialation vector size (must be 16 bytes)');\n      }\n\n      this._lastPrecipher = coerceArray(iv, true);\n      this._lastPrecipherIndex = 16;\n      this._aes = new AES(key);\n    };\n\n    ModeOfOperationOFB.prototype.encrypt = function (plaintext) {\n      var encrypted = coerceArray(plaintext, true);\n\n      for (var i = 0; i < encrypted.length; i++) {\n        if (this._lastPrecipherIndex === 16) {\n          this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n          this._lastPrecipherIndex = 0;\n        }\n\n        encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n      }\n\n      return encrypted;\n    }; // Decryption is symetric\n\n\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n\n    var Counter = function (initialValue) {\n      if (!(this instanceof Counter)) {\n        throw Error('Counter must be instanitated with `new`');\n      } // We allow 0, but anything false-ish uses the default 1\n\n\n      if (initialValue !== 0 && !initialValue) {\n        initialValue = 1;\n      }\n\n      if (typeof initialValue === 'number') {\n        this._counter = createArray(16);\n        this.setValue(initialValue);\n      } else {\n        this.setBytes(initialValue);\n      }\n    };\n\n    Counter.prototype.setValue = function (value) {\n      if (typeof value !== 'number' || parseInt(value) != value) {\n        throw new Error('invalid counter value (must be an integer)');\n      }\n\n      for (var index = 15; index >= 0; --index) {\n        this._counter[index] = value % 256;\n        value = value >> 8;\n      }\n    };\n\n    Counter.prototype.setBytes = function (bytes) {\n      bytes = coerceArray(bytes, true);\n\n      if (bytes.length != 16) {\n        throw new Error('invalid counter bytes size (must be 16 bytes)');\n      }\n\n      this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function () {\n      for (var i = 15; i >= 0; i--) {\n        if (this._counter[i] === 255) {\n          this._counter[i] = 0;\n        } else {\n          this._counter[i]++;\n          break;\n        }\n      }\n    };\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n\n\n    var ModeOfOperationCTR = function (key, counter) {\n      if (!(this instanceof ModeOfOperationCTR)) {\n        throw Error('AES must be instanitated with `new`');\n      }\n\n      this.description = \"Counter\";\n      this.name = \"ctr\";\n\n      if (!(counter instanceof Counter)) {\n        counter = new Counter(counter);\n      }\n\n      this._counter = counter;\n      this._remainingCounter = null;\n      this._remainingCounterIndex = 16;\n      this._aes = new AES(key);\n    };\n\n    ModeOfOperationCTR.prototype.encrypt = function (plaintext) {\n      var encrypted = coerceArray(plaintext, true);\n\n      for (var i = 0; i < encrypted.length; i++) {\n        if (this._remainingCounterIndex === 16) {\n          this._remainingCounter = this._aes.encrypt(this._counter._counter);\n          this._remainingCounterIndex = 0;\n\n          this._counter.increment();\n        }\n\n        encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n      }\n\n      return encrypted;\n    }; // Decryption is symetric\n\n\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt; ///////////////////////\n    // Padding\n    // See:https://tools.ietf.org/html/rfc2315\n\n    function pkcs7pad(data) {\n      data = coerceArray(data, true);\n      var padder = 16 - data.length % 16;\n      var result = createArray(data.length + padder);\n      copyArray(data, result);\n\n      for (var i = data.length; i < result.length; i++) {\n        result[i] = padder;\n      }\n\n      return result;\n    }\n\n    function pkcs7strip(data) {\n      data = coerceArray(data, true);\n\n      if (data.length < 16) {\n        throw new Error('PKCS#7 invalid length');\n      }\n\n      var padder = data[data.length - 1];\n\n      if (padder > 16) {\n        throw new Error('PKCS#7 padding byte out of range');\n      }\n\n      var length = data.length - padder;\n\n      for (var i = 0; i < padder; i++) {\n        if (data[length + i] !== padder) {\n          throw new Error('PKCS#7 invalid padding byte');\n        }\n      }\n\n      var result = createArray(length);\n      copyArray(data, result, 0, 0, length);\n      return result;\n    } ///////////////////////\n    // Exporting\n    // The block cipher\n\n\n    var aesjs = {\n      AES: AES,\n      Counter: Counter,\n      ModeOfOperation: {\n        ecb: ModeOfOperationECB,\n        cbc: ModeOfOperationCBC,\n        cfb: ModeOfOperationCFB,\n        ofb: ModeOfOperationOFB,\n        ctr: ModeOfOperationCTR\n      },\n      utils: {\n        hex: convertHex,\n        utf8: convertUtf8\n      },\n      padding: {\n        pkcs7: {\n          pad: pkcs7pad,\n          strip: pkcs7strip\n        }\n      },\n      _arrayTest: {\n        coerceArray: coerceArray,\n        createArray: createArray,\n        copyArray: copyArray\n      }\n    }; // node.js\n\n    {\n      module.exports = aesjs; // RequireJS/AMD\n      // http://www.requirejs.org/docs/api.html\n      // https://github.com/amdjs/amdjs-api/wiki/AMD\n    }\n  })();\n});\nconst version$i = \"json-wallets/5.4.0\";\n\nfunction looseArrayify(hexString) {\n  if (typeof hexString === 'string' && hexString.substring(0, 2) !== '0x') {\n    hexString = '0x' + hexString;\n  }\n\n  return arrayify(hexString);\n}\n\nfunction zpad(value, length) {\n  value = String(value);\n\n  while (value.length < length) {\n    value = '0' + value;\n  }\n\n  return value;\n}\n\nfunction getPassword(password) {\n  if (typeof password === 'string') {\n    return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n  }\n\n  return arrayify(password);\n}\n\nfunction searchPath(object, path) {\n  let currentChild = object;\n  const comps = path.toLowerCase().split('/');\n\n  for (let i = 0; i < comps.length; i++) {\n    // Search for a child object with a case-insensitive matching key\n    let matchingChild = null;\n\n    for (const key in currentChild) {\n      if (key.toLowerCase() === comps[i]) {\n        matchingChild = currentChild[key];\n        break;\n      }\n    } // Didn't find one. :'(\n\n\n    if (matchingChild === null) {\n      return null;\n    } // Now check this child...\n\n\n    currentChild = matchingChild;\n  }\n\n  return currentChild;\n} // See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\n\n\nfunction uuidV4(randomBytes) {\n  const bytes = arrayify(randomBytes); // Section: 4.1.3:\n  // - time_hi_and_version[12:16] = 0b0100\n\n  bytes[6] = bytes[6] & 0x0f | 0x40; // Section 4.4\n  // - clock_seq_hi_and_reserved[6] = 0b0\n  // - clock_seq_hi_and_reserved[7] = 0b1\n\n  bytes[8] = bytes[8] & 0x3f | 0x80;\n  const value = hexlify(bytes);\n  return [value.substring(2, 10), value.substring(10, 14), value.substring(14, 18), value.substring(18, 22), value.substring(22, 34)].join(\"-\");\n}\n\nconst logger$n = new Logger(version$i);\n\nclass CrowdsaleAccount extends Description {\n  isCrowdsaleAccount(value) {\n    return !!(value && value._isCrowdsaleAccount);\n  }\n\n} // See: https://github.com/ethereum/pyethsaletool\n\n\nfunction decrypt(json, password) {\n  const data = JSON.parse(json);\n  password = getPassword(password); // Ethereum Address\n\n  const ethaddr = getAddress(searchPath(data, \"ethaddr\")); // Encrypted Seed\n\n  const encseed = looseArrayify(searchPath(data, \"encseed\"));\n\n  if (!encseed || encseed.length % 16 !== 0) {\n    logger$n.throwArgumentError(\"invalid encseed\", \"json\", json);\n  }\n\n  const key = arrayify(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n  const iv = encseed.slice(0, 16);\n  const encryptedSeed = encseed.slice(16); // Decrypt the seed\n\n  const aesCbc = new aesJs.ModeOfOperation.cbc(key, iv);\n  const seed = aesJs.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed))); // This wallet format is weird... Convert the binary encoded hex to a string.\n\n  let seedHex = \"\";\n\n  for (let i = 0; i < seed.length; i++) {\n    seedHex += String.fromCharCode(seed[i]);\n  }\n\n  const seedHexBytes = toUtf8Bytes(seedHex);\n  const privateKey = keccak256(seedHexBytes);\n  return new CrowdsaleAccount({\n    _isCrowdsaleAccount: true,\n    address: ethaddr,\n    privateKey: privateKey\n  });\n}\n\nfunction isCrowdsaleWallet(json) {\n  let data = null;\n\n  try {\n    data = JSON.parse(json);\n  } catch (error) {\n    return false;\n  }\n\n  return data.encseed && data.ethaddr;\n}\n\nfunction isKeystoreWallet(json) {\n  let data = null;\n\n  try {\n    data = JSON.parse(json);\n  } catch (error) {\n    return false;\n  }\n\n  if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n    return false;\n  } // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n\n\n  return true;\n} //export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\n\n\nfunction getJsonWalletAddress(json) {\n  if (isCrowdsaleWallet(json)) {\n    try {\n      return getAddress(JSON.parse(json).ethaddr);\n    } catch (error) {\n      return null;\n    }\n  }\n\n  if (isKeystoreWallet(json)) {\n    try {\n      return getAddress(JSON.parse(json).address);\n    } catch (error) {\n      return null;\n    }\n  }\n\n  return null;\n}\n\nvar scrypt = createCommonjsModule(function (module, exports) {\n  (function (root) {\n    const MAX_VALUE = 0x7fffffff; // The SHA256 and PBKDF2 implementation are from scrypt-async-js:\n    // See: https://github.com/dchest/scrypt-async-js\n\n    function SHA256(m) {\n      const K = new Uint32Array([0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2]);\n      let h0 = 0x6a09e667,\n          h1 = 0xbb67ae85,\n          h2 = 0x3c6ef372,\n          h3 = 0xa54ff53a;\n      let h4 = 0x510e527f,\n          h5 = 0x9b05688c,\n          h6 = 0x1f83d9ab,\n          h7 = 0x5be0cd19;\n      const w = new Uint32Array(64);\n\n      function blocks(p) {\n        let off = 0,\n            len = p.length;\n\n        while (len >= 64) {\n          let a = h0,\n              b = h1,\n              c = h2,\n              d = h3,\n              e = h4,\n              f = h5,\n              g = h6,\n              h = h7,\n              u,\n              i,\n              j,\n              t1,\n              t2;\n\n          for (i = 0; i < 16; i++) {\n            j = off + i * 4;\n            w[i] = (p[j] & 0xff) << 24 | (p[j + 1] & 0xff) << 16 | (p[j + 2] & 0xff) << 8 | p[j + 3] & 0xff;\n          }\n\n          for (i = 16; i < 64; i++) {\n            u = w[i - 2];\n            t1 = (u >>> 17 | u << 32 - 17) ^ (u >>> 19 | u << 32 - 19) ^ u >>> 10;\n            u = w[i - 15];\n            t2 = (u >>> 7 | u << 32 - 7) ^ (u >>> 18 | u << 32 - 18) ^ u >>> 3;\n            w[i] = (t1 + w[i - 7] | 0) + (t2 + w[i - 16] | 0) | 0;\n          }\n\n          for (i = 0; i < 64; i++) {\n            t1 = (((e >>> 6 | e << 32 - 6) ^ (e >>> 11 | e << 32 - 11) ^ (e >>> 25 | e << 32 - 25)) + (e & f ^ ~e & g) | 0) + (h + (K[i] + w[i] | 0) | 0) | 0;\n            t2 = ((a >>> 2 | a << 32 - 2) ^ (a >>> 13 | a << 32 - 13) ^ (a >>> 22 | a << 32 - 22)) + (a & b ^ a & c ^ b & c) | 0;\n            h = g;\n            g = f;\n            f = e;\n            e = d + t1 | 0;\n            d = c;\n            c = b;\n            b = a;\n            a = t1 + t2 | 0;\n          }\n\n          h0 = h0 + a | 0;\n          h1 = h1 + b | 0;\n          h2 = h2 + c | 0;\n          h3 = h3 + d | 0;\n          h4 = h4 + e | 0;\n          h5 = h5 + f | 0;\n          h6 = h6 + g | 0;\n          h7 = h7 + h | 0;\n          off += 64;\n          len -= 64;\n        }\n      }\n\n      blocks(m);\n      let i,\n          bytesLeft = m.length % 64,\n          bitLenHi = m.length / 0x20000000 | 0,\n          bitLenLo = m.length << 3,\n          numZeros = bytesLeft < 56 ? 56 : 120,\n          p = m.slice(m.length - bytesLeft, m.length);\n      p.push(0x80);\n\n      for (i = bytesLeft + 1; i < numZeros; i++) {\n        p.push(0);\n      }\n\n      p.push(bitLenHi >>> 24 & 0xff);\n      p.push(bitLenHi >>> 16 & 0xff);\n      p.push(bitLenHi >>> 8 & 0xff);\n      p.push(bitLenHi >>> 0 & 0xff);\n      p.push(bitLenLo >>> 24 & 0xff);\n      p.push(bitLenLo >>> 16 & 0xff);\n      p.push(bitLenLo >>> 8 & 0xff);\n      p.push(bitLenLo >>> 0 & 0xff);\n      blocks(p);\n      return [h0 >>> 24 & 0xff, h0 >>> 16 & 0xff, h0 >>> 8 & 0xff, h0 >>> 0 & 0xff, h1 >>> 24 & 0xff, h1 >>> 16 & 0xff, h1 >>> 8 & 0xff, h1 >>> 0 & 0xff, h2 >>> 24 & 0xff, h2 >>> 16 & 0xff, h2 >>> 8 & 0xff, h2 >>> 0 & 0xff, h3 >>> 24 & 0xff, h3 >>> 16 & 0xff, h3 >>> 8 & 0xff, h3 >>> 0 & 0xff, h4 >>> 24 & 0xff, h4 >>> 16 & 0xff, h4 >>> 8 & 0xff, h4 >>> 0 & 0xff, h5 >>> 24 & 0xff, h5 >>> 16 & 0xff, h5 >>> 8 & 0xff, h5 >>> 0 & 0xff, h6 >>> 24 & 0xff, h6 >>> 16 & 0xff, h6 >>> 8 & 0xff, h6 >>> 0 & 0xff, h7 >>> 24 & 0xff, h7 >>> 16 & 0xff, h7 >>> 8 & 0xff, h7 >>> 0 & 0xff];\n    }\n\n    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {\n      // compress password if it's longer than hash block length\n      password = password.length <= 64 ? password : SHA256(password);\n      const innerLen = 64 + salt.length + 4;\n      const inner = new Array(innerLen);\n      const outerKey = new Array(64);\n      let i;\n      let dk = []; // inner = (password ^ ipad) || salt || counter\n\n      for (i = 0; i < 64; i++) {\n        inner[i] = 0x36;\n      }\n\n      for (i = 0; i < password.length; i++) {\n        inner[i] ^= password[i];\n      }\n\n      for (i = 0; i < salt.length; i++) {\n        inner[64 + i] = salt[i];\n      }\n\n      for (i = innerLen - 4; i < innerLen; i++) {\n        inner[i] = 0;\n      } // outerKey = password ^ opad\n\n\n      for (i = 0; i < 64; i++) outerKey[i] = 0x5c;\n\n      for (i = 0; i < password.length; i++) outerKey[i] ^= password[i]; // increments counter inside inner\n\n\n      function incrementCounter() {\n        for (let i = innerLen - 1; i >= innerLen - 4; i--) {\n          inner[i]++;\n          if (inner[i] <= 0xff) return;\n          inner[i] = 0;\n        }\n      } // output blocks = SHA256(outerKey || SHA256(inner)) ...\n\n\n      while (dkLen >= 32) {\n        incrementCounter();\n        dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));\n        dkLen -= 32;\n      }\n\n      if (dkLen > 0) {\n        incrementCounter();\n        dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));\n      }\n\n      return dk;\n    } // The following is an adaptation of scryptsy\n    // See: https://www.npmjs.com/package/scryptsy\n\n\n    function blockmix_salsa8(BY, Yi, r, x, _X) {\n      let i;\n      arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);\n\n      for (i = 0; i < 2 * r; i++) {\n        blockxor(BY, i * 16, _X, 16);\n        salsa20_8(_X, x);\n        arraycopy(_X, 0, BY, Yi + i * 16, 16);\n      }\n\n      for (i = 0; i < r; i++) {\n        arraycopy(BY, Yi + i * 2 * 16, BY, i * 16, 16);\n      }\n\n      for (i = 0; i < r; i++) {\n        arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);\n      }\n    }\n\n    function R(a, b) {\n      return a << b | a >>> 32 - b;\n    }\n\n    function salsa20_8(B, x) {\n      arraycopy(B, 0, x, 0, 16);\n\n      for (let i = 8; i > 0; i -= 2) {\n        x[4] ^= R(x[0] + x[12], 7);\n        x[8] ^= R(x[4] + x[0], 9);\n        x[12] ^= R(x[8] + x[4], 13);\n        x[0] ^= R(x[12] + x[8], 18);\n        x[9] ^= R(x[5] + x[1], 7);\n        x[13] ^= R(x[9] + x[5], 9);\n        x[1] ^= R(x[13] + x[9], 13);\n        x[5] ^= R(x[1] + x[13], 18);\n        x[14] ^= R(x[10] + x[6], 7);\n        x[2] ^= R(x[14] + x[10], 9);\n        x[6] ^= R(x[2] + x[14], 13);\n        x[10] ^= R(x[6] + x[2], 18);\n        x[3] ^= R(x[15] + x[11], 7);\n        x[7] ^= R(x[3] + x[15], 9);\n        x[11] ^= R(x[7] + x[3], 13);\n        x[15] ^= R(x[11] + x[7], 18);\n        x[1] ^= R(x[0] + x[3], 7);\n        x[2] ^= R(x[1] + x[0], 9);\n        x[3] ^= R(x[2] + x[1], 13);\n        x[0] ^= R(x[3] + x[2], 18);\n        x[6] ^= R(x[5] + x[4], 7);\n        x[7] ^= R(x[6] + x[5], 9);\n        x[4] ^= R(x[7] + x[6], 13);\n        x[5] ^= R(x[4] + x[7], 18);\n        x[11] ^= R(x[10] + x[9], 7);\n        x[8] ^= R(x[11] + x[10], 9);\n        x[9] ^= R(x[8] + x[11], 13);\n        x[10] ^= R(x[9] + x[8], 18);\n        x[12] ^= R(x[15] + x[14], 7);\n        x[13] ^= R(x[12] + x[15], 9);\n        x[14] ^= R(x[13] + x[12], 13);\n        x[15] ^= R(x[14] + x[13], 18);\n      }\n\n      for (let i = 0; i < 16; ++i) {\n        B[i] += x[i];\n      }\n    } // naive approach... going back to loop unrolling may yield additional performance\n\n\n    function blockxor(S, Si, D, len) {\n      for (let i = 0; i < len; i++) {\n        D[i] ^= S[Si + i];\n      }\n    }\n\n    function arraycopy(src, srcPos, dest, destPos, length) {\n      while (length--) {\n        dest[destPos++] = src[srcPos++];\n      }\n    }\n\n    function checkBufferish(o) {\n      if (!o || typeof o.length !== 'number') {\n        return false;\n      }\n\n      for (let i = 0; i < o.length; i++) {\n        const v = o[i];\n\n        if (typeof v !== 'number' || v % 1 || v < 0 || v >= 256) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    function ensureInteger(value, name) {\n      if (typeof value !== \"number\" || value % 1) {\n        throw new Error('invalid ' + name);\n      }\n\n      return value;\n    } // N = Cpu cost, r = Memory cost, p = parallelization cost\n    // callback(error, progress, key)\n\n\n    function _scrypt(password, salt, N, r, p, dkLen, callback) {\n      N = ensureInteger(N, 'N');\n      r = ensureInteger(r, 'r');\n      p = ensureInteger(p, 'p');\n      dkLen = ensureInteger(dkLen, 'dkLen');\n\n      if (N === 0 || (N & N - 1) !== 0) {\n        throw new Error('N must be power of 2');\n      }\n\n      if (N > MAX_VALUE / 128 / r) {\n        throw new Error('N too large');\n      }\n\n      if (r > MAX_VALUE / 128 / p) {\n        throw new Error('r too large');\n      }\n\n      if (!checkBufferish(password)) {\n        throw new Error('password must be an array or buffer');\n      }\n\n      password = Array.prototype.slice.call(password);\n\n      if (!checkBufferish(salt)) {\n        throw new Error('salt must be an array or buffer');\n      }\n\n      salt = Array.prototype.slice.call(salt);\n      let b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);\n      const B = new Uint32Array(p * 32 * r);\n\n      for (let i = 0; i < B.length; i++) {\n        const j = i * 4;\n        B[i] = (b[j + 3] & 0xff) << 24 | (b[j + 2] & 0xff) << 16 | (b[j + 1] & 0xff) << 8 | (b[j + 0] & 0xff) << 0;\n      }\n\n      const XY = new Uint32Array(64 * r);\n      const V = new Uint32Array(32 * r * N);\n      const Yi = 32 * r; // scratch space\n\n      const x = new Uint32Array(16); // salsa20_8\n\n      const _X = new Uint32Array(16); // blockmix_salsa8\n\n\n      const totalOps = p * N * 2;\n      let currentOp = 0;\n      let lastPercent10 = null; // Set this to true to abandon the scrypt on the next step\n\n      let stop = false; // State information\n\n      let state = 0;\n      let i0 = 0,\n          i1;\n      let Bi; // How many blockmix_salsa8 can we do per step?\n\n      const limit = callback ? parseInt(1000 / r) : 0xffffffff; // Trick from scrypt-async; if there is a setImmediate shim in place, use it\n\n      const nextTick = typeof setImmediate !== 'undefined' ? setImmediate : setTimeout; // This is really all I changed; making scryptsy a state machine so we occasionally\n      // stop and give other evnts on the evnt loop a chance to run. ~RicMoo\n\n      const incrementalSMix = function () {\n        if (stop) {\n          return callback(new Error('cancelled'), currentOp / totalOps);\n        }\n\n        let steps;\n\n        switch (state) {\n          case 0:\n            // for (var i = 0; i < p; i++)...\n            Bi = i0 * 32 * r;\n            arraycopy(B, Bi, XY, 0, Yi); // ROMix - 1\n\n            state = 1; // Move to ROMix 2\n\n            i1 = 0;\n          // Fall through\n\n          case 1:\n            // Run up to 1000 steps of the first inner smix loop\n            steps = N - i1;\n\n            if (steps > limit) {\n              steps = limit;\n            }\n\n            for (let i = 0; i < steps; i++) {\n              // ROMix - 2\n              arraycopy(XY, 0, V, (i1 + i) * Yi, Yi); // ROMix - 3\n\n              blockmix_salsa8(XY, Yi, r, x, _X); // ROMix - 4\n            } // for (var i = 0; i < N; i++)\n\n\n            i1 += steps;\n            currentOp += steps;\n\n            if (callback) {\n              // Call the callback with the progress (optionally stopping us)\n              const percent10 = parseInt(1000 * currentOp / totalOps);\n\n              if (percent10 !== lastPercent10) {\n                stop = callback(null, currentOp / totalOps);\n\n                if (stop) {\n                  break;\n                }\n\n                lastPercent10 = percent10;\n              }\n            }\n\n            if (i1 < N) {\n              break;\n            }\n\n            i1 = 0; // Move to ROMix 6\n\n            state = 2;\n          // Fall through\n\n          case 2:\n            // Run up to 1000 steps of the second inner smix loop\n            steps = N - i1;\n\n            if (steps > limit) {\n              steps = limit;\n            }\n\n            for (let i = 0; i < steps; i++) {\n              // ROMix - 6\n              const offset = (2 * r - 1) * 16; // ROMix - 7\n\n              const j = XY[offset] & N - 1;\n              blockxor(V, j * Yi, XY, Yi); // ROMix - 8 (inner)\n\n              blockmix_salsa8(XY, Yi, r, x, _X); // ROMix - 9 (outer)\n            } // for (var i = 0; i < N; i++)...\n\n\n            i1 += steps;\n            currentOp += steps; // Call the callback with the progress (optionally stopping us)\n\n            if (callback) {\n              const percent10 = parseInt(1000 * currentOp / totalOps);\n\n              if (percent10 !== lastPercent10) {\n                stop = callback(null, currentOp / totalOps);\n\n                if (stop) {\n                  break;\n                }\n\n                lastPercent10 = percent10;\n              }\n            }\n\n            if (i1 < N) {\n              break;\n            }\n\n            arraycopy(XY, 0, B, Bi, Yi); // ROMix - 10\n            // for (var i = 0; i < p; i++)...\n\n            i0++;\n\n            if (i0 < p) {\n              state = 0;\n              break;\n            }\n\n            b = [];\n\n            for (let i = 0; i < B.length; i++) {\n              b.push(B[i] >> 0 & 0xff);\n              b.push(B[i] >> 8 & 0xff);\n              b.push(B[i] >> 16 & 0xff);\n              b.push(B[i] >> 24 & 0xff);\n            }\n\n            const derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen); // Send the result to the callback\n\n            if (callback) {\n              callback(null, 1.0, derivedKey);\n            } // Done; don't break (which would reschedule)\n\n\n            return derivedKey;\n        } // Schedule the next steps\n\n\n        if (callback) {\n          nextTick(incrementalSMix);\n        }\n      }; // Run the smix state machine until completion\n\n\n      if (!callback) {\n        while (true) {\n          const derivedKey = incrementalSMix();\n\n          if (derivedKey != undefined) {\n            return derivedKey;\n          }\n        }\n      } // Bootstrap the async incremental smix\n\n\n      incrementalSMix();\n    }\n\n    const lib = {\n      scrypt: function (password, salt, N, r, p, dkLen, progressCallback) {\n        return new Promise(function (resolve, reject) {\n          let lastProgress = 0;\n\n          if (progressCallback) {\n            progressCallback(0);\n          }\n\n          _scrypt(password, salt, N, r, p, dkLen, function (error, progress, key) {\n            if (error) {\n              reject(error);\n            } else if (key) {\n              if (progressCallback && lastProgress !== 1) {\n                progressCallback(1);\n              }\n\n              resolve(new Uint8Array(key));\n            } else if (progressCallback && progress !== lastProgress) {\n              lastProgress = progress;\n              return progressCallback(progress);\n            }\n          });\n        });\n      },\n      syncScrypt: function (password, salt, N, r, p, dkLen) {\n        return new Uint8Array(_scrypt(password, salt, N, r, p, dkLen));\n      }\n    }; // node.js\n\n    {\n      module.exports = lib; // RequireJS/AMD\n      // http://www.requirejs.org/docs/api.html\n      // https://github.com/amdjs/amdjs-api/wiki/AMD\n    }\n  })();\n});\n\nvar __awaiter$5 = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$o = new Logger(version$i); // Exported Types\n\nfunction hasMnemonic(value) {\n  return value != null && value.mnemonic && value.mnemonic.phrase;\n}\n\nclass KeystoreAccount extends Description {\n  isKeystoreAccount(value) {\n    return !!(value && value._isKeystoreAccount);\n  }\n\n}\n\nfunction _decrypt(data, key, ciphertext) {\n  const cipher = searchPath(data, \"crypto/cipher\");\n\n  if (cipher === \"aes-128-ctr\") {\n    const iv = looseArrayify(searchPath(data, \"crypto/cipherparams/iv\"));\n    const counter = new aesJs.Counter(iv);\n    const aesCtr = new aesJs.ModeOfOperation.ctr(key, counter);\n    return arrayify(aesCtr.decrypt(ciphertext));\n  }\n\n  return null;\n}\n\nfunction _getAccount(data, key) {\n  const ciphertext = looseArrayify(searchPath(data, \"crypto/ciphertext\"));\n  const computedMAC = hexlify(keccak256(concat([key.slice(16, 32), ciphertext]))).substring(2);\n\n  if (computedMAC !== searchPath(data, \"crypto/mac\").toLowerCase()) {\n    throw new Error(\"invalid password\");\n  }\n\n  const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n\n  if (!privateKey) {\n    logger$o.throwError(\"unsupported cipher\", Logger.errors.UNSUPPORTED_OPERATION, {\n      operation: \"decrypt\"\n    });\n  }\n\n  const mnemonicKey = key.slice(32, 64);\n  const address = computeAddress(privateKey);\n\n  if (data.address) {\n    let check = data.address.toLowerCase();\n\n    if (check.substring(0, 2) !== \"0x\") {\n      check = \"0x\" + check;\n    }\n\n    if (getAddress(check) !== address) {\n      throw new Error(\"address mismatch\");\n    }\n  }\n\n  const account = {\n    _isKeystoreAccount: true,\n    address: address,\n    privateKey: hexlify(privateKey)\n  }; // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n\n  if (searchPath(data, \"x-ethers/version\") === \"0.1\") {\n    const mnemonicCiphertext = looseArrayify(searchPath(data, \"x-ethers/mnemonicCiphertext\"));\n    const mnemonicIv = looseArrayify(searchPath(data, \"x-ethers/mnemonicCounter\"));\n    const mnemonicCounter = new aesJs.Counter(mnemonicIv);\n    const mnemonicAesCtr = new aesJs.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n    const path = searchPath(data, \"x-ethers/path\") || defaultPath;\n    const locale = searchPath(data, \"x-ethers/locale\") || \"en\";\n    const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n\n    try {\n      const mnemonic = entropyToMnemonic(entropy, locale);\n      const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n\n      if (node.privateKey != account.privateKey) {\n        throw new Error(\"mnemonic mismatch\");\n      }\n\n      account.mnemonic = node.mnemonic;\n    } catch (error) {\n      // If we don't have the locale wordlist installed to\n      // read this mnemonic, just bail and don't set the\n      // mnemonic\n      if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n        throw error;\n      }\n    }\n  }\n\n  return new KeystoreAccount(account);\n}\n\nfunction pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc) {\n  return arrayify(pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));\n}\n\nfunction pbkdf2$1(passwordBytes, salt, count, dkLen, prfFunc) {\n  return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n}\n\nfunction _computeKdfKey(data, password, pbkdf2Func, scryptFunc, progressCallback) {\n  const passwordBytes = getPassword(password);\n  const kdf = searchPath(data, \"crypto/kdf\");\n\n  if (kdf && typeof kdf === \"string\") {\n    const throwError = function (name, value) {\n      return logger$o.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n    };\n\n    if (kdf.toLowerCase() === \"scrypt\") {\n      const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n      const N = parseInt(searchPath(data, \"crypto/kdfparams/n\"));\n      const r = parseInt(searchPath(data, \"crypto/kdfparams/r\"));\n      const p = parseInt(searchPath(data, \"crypto/kdfparams/p\")); // Check for all required parameters\n\n      if (!N || !r || !p) {\n        throwError(\"kdf\", kdf);\n      } // Make sure N is a power of 2\n\n\n      if ((N & N - 1) !== 0) {\n        throwError(\"N\", N);\n      }\n\n      const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n\n      if (dkLen !== 32) {\n        throwError(\"dklen\", dkLen);\n      }\n\n      return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n    } else if (kdf.toLowerCase() === \"pbkdf2\") {\n      const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n      let prfFunc = null;\n      const prf = searchPath(data, \"crypto/kdfparams/prf\");\n\n      if (prf === \"hmac-sha256\") {\n        prfFunc = \"sha256\";\n      } else if (prf === \"hmac-sha512\") {\n        prfFunc = \"sha512\";\n      } else {\n        throwError(\"prf\", prf);\n      }\n\n      const count = parseInt(searchPath(data, \"crypto/kdfparams/c\"));\n      const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n\n      if (dkLen !== 32) {\n        throwError(\"dklen\", dkLen);\n      }\n\n      return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n    }\n  }\n\n  return logger$o.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\n\nfunction decryptSync(json, password) {\n  const data = JSON.parse(json);\n\n  const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt);\n\n  return _getAccount(data, key);\n}\n\nfunction decrypt$1(json, password, progressCallback) {\n  return __awaiter$5(this, void 0, void 0, function* () {\n    const data = JSON.parse(json);\n    const key = yield _computeKdfKey(data, password, pbkdf2$1, scrypt.scrypt, progressCallback);\n    return _getAccount(data, key);\n  });\n}\n\nfunction encrypt(account, password, options, progressCallback) {\n  try {\n    // Check the address matches the private key\n    if (getAddress(account.address) !== computeAddress(account.privateKey)) {\n      throw new Error(\"address/privateKey mismatch\");\n    } // Check the mnemonic (if any) matches the private key\n\n\n    if (hasMnemonic(account)) {\n      const mnemonic = account.mnemonic;\n      const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n\n      if (node.privateKey != account.privateKey) {\n        throw new Error(\"mnemonic mismatch\");\n      }\n    }\n  } catch (e) {\n    return Promise.reject(e);\n  } // The options are optional, so adjust the call as needed\n\n\n  if (typeof options === \"function\" && !progressCallback) {\n    progressCallback = options;\n    options = {};\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  const privateKey = arrayify(account.privateKey);\n  const passwordBytes = getPassword(password);\n  let entropy = null;\n  let path = null;\n  let locale = null;\n\n  if (hasMnemonic(account)) {\n    const srcMnemonic = account.mnemonic;\n    entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n    path = srcMnemonic.path || defaultPath;\n    locale = srcMnemonic.locale || \"en\";\n  }\n\n  let client = options.client;\n\n  if (!client) {\n    client = \"ethers.js\";\n  } // Check/generate the salt\n\n\n  let salt = null;\n\n  if (options.salt) {\n    salt = arrayify(options.salt);\n  } else {\n    salt = randomBytes(32);\n  } // Override initialization vector\n\n\n  let iv = null;\n\n  if (options.iv) {\n    iv = arrayify(options.iv);\n\n    if (iv.length !== 16) {\n      throw new Error(\"invalid iv\");\n    }\n  } else {\n    iv = randomBytes(16);\n  } // Override the uuid\n\n\n  let uuidRandom = null;\n\n  if (options.uuid) {\n    uuidRandom = arrayify(options.uuid);\n\n    if (uuidRandom.length !== 16) {\n      throw new Error(\"invalid uuid\");\n    }\n  } else {\n    uuidRandom = randomBytes(16);\n  } // Override the scrypt password-based key derivation function parameters\n\n\n  let N = 1 << 17,\n      r = 8,\n      p = 1;\n\n  if (options.scrypt) {\n    if (options.scrypt.N) {\n      N = options.scrypt.N;\n    }\n\n    if (options.scrypt.r) {\n      r = options.scrypt.r;\n    }\n\n    if (options.scrypt.p) {\n      p = options.scrypt.p;\n    }\n  } // We take 64 bytes:\n  //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n  //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n\n\n  return scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then(key => {\n    key = arrayify(key); // This will be used to encrypt the wallet (as per Web3 secret storage)\n\n    const derivedKey = key.slice(0, 16);\n    const macPrefix = key.slice(16, 32); // This will be used to encrypt the mnemonic phrase (if any)\n\n    const mnemonicKey = key.slice(32, 64); // Encrypt the private key\n\n    const counter = new aesJs.Counter(iv);\n    const aesCtr = new aesJs.ModeOfOperation.ctr(derivedKey, counter);\n    const ciphertext = arrayify(aesCtr.encrypt(privateKey)); // Compute the message authentication code, used to check the password\n\n    const mac = keccak256(concat([macPrefix, ciphertext])); // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n\n    const data = {\n      address: account.address.substring(2).toLowerCase(),\n      id: uuidV4(uuidRandom),\n      version: 3,\n      Crypto: {\n        cipher: \"aes-128-ctr\",\n        cipherparams: {\n          iv: hexlify(iv).substring(2)\n        },\n        ciphertext: hexlify(ciphertext).substring(2),\n        kdf: \"scrypt\",\n        kdfparams: {\n          salt: hexlify(salt).substring(2),\n          n: N,\n          dklen: 32,\n          p: p,\n          r: r\n        },\n        mac: mac.substring(2)\n      }\n    }; // If we have a mnemonic, encrypt it into the JSON wallet\n\n    if (entropy) {\n      const mnemonicIv = randomBytes(16);\n      const mnemonicCounter = new aesJs.Counter(mnemonicIv);\n      const mnemonicAesCtr = new aesJs.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n      const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));\n      const now = new Date();\n      const timestamp = now.getUTCFullYear() + \"-\" + zpad(now.getUTCMonth() + 1, 2) + \"-\" + zpad(now.getUTCDate(), 2) + \"T\" + zpad(now.getUTCHours(), 2) + \"-\" + zpad(now.getUTCMinutes(), 2) + \"-\" + zpad(now.getUTCSeconds(), 2) + \".0Z\";\n      data[\"x-ethers\"] = {\n        client: client,\n        gethFilename: \"UTC--\" + timestamp + \"--\" + data.address,\n        mnemonicCounter: hexlify(mnemonicIv).substring(2),\n        mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n        path: path,\n        locale: locale,\n        version: \"0.1\"\n      };\n    }\n\n    return JSON.stringify(data);\n  });\n}\n\nfunction decryptJsonWallet(json, password, progressCallback) {\n  if (isCrowdsaleWallet(json)) {\n    if (progressCallback) {\n      progressCallback(0);\n    }\n\n    const account = decrypt(json, password);\n\n    if (progressCallback) {\n      progressCallback(1);\n    }\n\n    return Promise.resolve(account);\n  }\n\n  if (isKeystoreWallet(json)) {\n    return decrypt$1(json, password, progressCallback);\n  }\n\n  return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\n\nfunction decryptJsonWalletSync(json, password) {\n  if (isCrowdsaleWallet(json)) {\n    return decrypt(json, password);\n  }\n\n  if (isKeystoreWallet(json)) {\n    return decryptSync(json, password);\n  }\n\n  throw new Error(\"invalid JSON wallet\");\n}\n\nconst version$j = \"wallet/5.4.0\";\n\nvar __awaiter$6 = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$p = new Logger(version$j);\n\nfunction isAccount(value) {\n  return value != null && isHexString(value.privateKey, 32) && value.address != null;\n}\n\nfunction hasMnemonic$1(value) {\n  const mnemonic = value.mnemonic;\n  return mnemonic && mnemonic.phrase;\n}\n\nclass Wallet extends Signer {\n  constructor(privateKey, provider) {\n    logger$p.checkNew(new.target, Wallet);\n    super();\n\n    if (isAccount(privateKey)) {\n      const signingKey = new SigningKey(privateKey.privateKey);\n      defineReadOnly(this, \"_signingKey\", () => signingKey);\n      defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n\n      if (this.address !== getAddress(privateKey.address)) {\n        logger$p.throwArgumentError(\"privateKey/address mismatch\", \"privateKey\", \"[REDACTED]\");\n      }\n\n      if (hasMnemonic$1(privateKey)) {\n        const srcMnemonic = privateKey.mnemonic;\n        defineReadOnly(this, \"_mnemonic\", () => ({\n          phrase: srcMnemonic.phrase,\n          path: srcMnemonic.path || defaultPath,\n          locale: srcMnemonic.locale || \"en\"\n        }));\n        const mnemonic = this.mnemonic;\n        const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);\n\n        if (computeAddress(node.privateKey) !== this.address) {\n          logger$p.throwArgumentError(\"mnemonic/address mismatch\", \"privateKey\", \"[REDACTED]\");\n        }\n      } else {\n        defineReadOnly(this, \"_mnemonic\", () => null);\n      }\n    } else {\n      if (SigningKey.isSigningKey(privateKey)) {\n        /* istanbul ignore if */\n        if (privateKey.curve !== \"secp256k1\") {\n          logger$p.throwArgumentError(\"unsupported curve; must be secp256k1\", \"privateKey\", \"[REDACTED]\");\n        }\n\n        defineReadOnly(this, \"_signingKey\", () => privateKey);\n      } else {\n        // A lot of common tools do not prefix private keys with a 0x (see: #1166)\n        if (typeof privateKey === \"string\") {\n          if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n            privateKey = \"0x\" + privateKey;\n          }\n        }\n\n        const signingKey = new SigningKey(privateKey);\n        defineReadOnly(this, \"_signingKey\", () => signingKey);\n      }\n\n      defineReadOnly(this, \"_mnemonic\", () => null);\n      defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n    }\n    /* istanbul ignore if */\n\n\n    if (provider && !Provider.isProvider(provider)) {\n      logger$p.throwArgumentError(\"invalid provider\", \"provider\", provider);\n    }\n\n    defineReadOnly(this, \"provider\", provider || null);\n  }\n\n  get mnemonic() {\n    return this._mnemonic();\n  }\n\n  get privateKey() {\n    return this._signingKey().privateKey;\n  }\n\n  get publicKey() {\n    return this._signingKey().publicKey;\n  }\n\n  getAddress() {\n    return Promise.resolve(this.address);\n  }\n\n  connect(provider) {\n    return new Wallet(this, provider);\n  }\n\n  signTransaction(transaction) {\n    return resolveProperties(transaction).then(tx => {\n      if (tx.from != null) {\n        if (getAddress(tx.from) !== this.address) {\n          logger$p.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n        }\n\n        delete tx.from;\n      }\n\n      const signature = this._signingKey().signDigest(keccak256(serialize(tx)));\n\n      return serialize(tx, signature);\n    });\n  }\n\n  signMessage(message) {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      return joinSignature(this._signingKey().signDigest(hashMessage(message)));\n    });\n  }\n\n  _signTypedData(domain, types, value) {\n    return __awaiter$6(this, void 0, void 0, function* () {\n      // Populate any ENS names\n      const populated = yield TypedDataEncoder.resolveNames(domain, types, value, name => {\n        if (this.provider == null) {\n          logger$p.throwError(\"cannot resolve ENS names without a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resolveName\",\n            value: name\n          });\n        }\n\n        return this.provider.resolveName(name);\n      });\n      return joinSignature(this._signingKey().signDigest(TypedDataEncoder.hash(populated.domain, types, populated.value)));\n    });\n  }\n\n  encrypt(password, options, progressCallback) {\n    if (typeof options === \"function\" && !progressCallback) {\n      progressCallback = options;\n      options = {};\n    }\n\n    if (progressCallback && typeof progressCallback !== \"function\") {\n      throw new Error(\"invalid callback\");\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    return encrypt(this, password, options, progressCallback);\n  }\n  /**\n   *  Static methods to create Wallet instances.\n   */\n\n\n  static createRandom(options) {\n    let entropy = randomBytes(16);\n\n    if (!options) {\n      options = {};\n    }\n\n    if (options.extraEntropy) {\n      entropy = arrayify(hexDataSlice(keccak256(concat([entropy, options.extraEntropy])), 0, 16));\n    }\n\n    const mnemonic = entropyToMnemonic(entropy, options.locale);\n    return Wallet.fromMnemonic(mnemonic, options.path, options.locale);\n  }\n\n  static fromEncryptedJson(json, password, progressCallback) {\n    return decryptJsonWallet(json, password, progressCallback).then(account => {\n      return new Wallet(account);\n    });\n  }\n\n  static fromEncryptedJsonSync(json, password) {\n    return new Wallet(decryptJsonWalletSync(json, password));\n  }\n\n  static fromMnemonic(mnemonic, path, wordlist) {\n    if (!path) {\n      path = defaultPath;\n    }\n\n    return new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));\n  }\n\n}\n\nfunction verifyMessage(message, signature) {\n  return recoverAddress(hashMessage(message), signature);\n}\n\nfunction verifyTypedData(domain, types, value, signature) {\n  return recoverAddress(TypedDataEncoder.hash(domain, types, value), signature);\n}\n\nconst version$k = \"networks/5.4.2\";\nconst logger$q = new Logger(version$k);\n\nfunction isRenetworkable(value) {\n  return value && typeof value.renetwork === \"function\";\n}\n\nfunction ethDefaultProvider(network) {\n  const func = function (providers, options) {\n    if (options == null) {\n      options = {};\n    }\n\n    const providerList = [];\n\n    if (providers.InfuraProvider) {\n      try {\n        providerList.push(new providers.InfuraProvider(network, options.infura));\n      } catch (error) {}\n    }\n\n    if (providers.EtherscanProvider) {\n      try {\n        providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n      } catch (error) {}\n    }\n\n    if (providers.AlchemyProvider) {\n      try {\n        providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n      } catch (error) {}\n    }\n\n    if (providers.PocketProvider) {\n      // These networks are currently faulty on Pocket as their\n      // network does not handle the Berlin hardfork, which is\n      // live on these ones.\n      // @TODO: This goes away once Pocket has upgraded their nodes\n      const skip = [\"goerli\", \"ropsten\", \"rinkeby\"];\n\n      try {\n        const provider = new providers.PocketProvider(network);\n\n        if (provider.network && skip.indexOf(provider.network.name) === -1) {\n          providerList.push(provider);\n        }\n      } catch (error) {}\n    }\n\n    if (providers.CloudflareProvider) {\n      try {\n        providerList.push(new providers.CloudflareProvider(network));\n      } catch (error) {}\n    }\n\n    if (providerList.length === 0) {\n      return null;\n    }\n\n    if (providers.FallbackProvider) {\n      let quorum = 1;\n\n      if (options.quorum != null) {\n        quorum = options.quorum;\n      } else if (network === \"homestead\") {\n        quorum = 2;\n      }\n\n      return new providers.FallbackProvider(providerList, quorum);\n    }\n\n    return providerList[0];\n  };\n\n  func.renetwork = function (network) {\n    return ethDefaultProvider(network);\n  };\n\n  return func;\n}\n\nfunction etcDefaultProvider(url, network) {\n  const func = function (providers, options) {\n    if (providers.JsonRpcProvider) {\n      return new providers.JsonRpcProvider(url, network);\n    }\n\n    return null;\n  };\n\n  func.renetwork = function (network) {\n    return etcDefaultProvider(url, network);\n  };\n\n  return func;\n}\n\nconst homestead = {\n  chainId: 1,\n  ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n  name: \"homestead\",\n  _defaultProvider: ethDefaultProvider(\"homestead\")\n};\nconst ropsten = {\n  chainId: 3,\n  ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n  name: \"ropsten\",\n  _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\nconst classicMordor = {\n  chainId: 63,\n  name: \"classicMordor\",\n  _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\nconst networks = {\n  unspecified: {\n    chainId: 0,\n    name: \"unspecified\"\n  },\n  homestead: homestead,\n  mainnet: homestead,\n  morden: {\n    chainId: 2,\n    name: \"morden\"\n  },\n  ropsten: ropsten,\n  testnet: ropsten,\n  rinkeby: {\n    chainId: 4,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"rinkeby\",\n    _defaultProvider: ethDefaultProvider(\"rinkeby\")\n  },\n  kovan: {\n    chainId: 42,\n    name: \"kovan\",\n    _defaultProvider: ethDefaultProvider(\"kovan\")\n  },\n  goerli: {\n    chainId: 5,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"goerli\",\n    _defaultProvider: ethDefaultProvider(\"goerli\")\n  },\n  // ETC (See: #351)\n  classic: {\n    chainId: 61,\n    name: \"classic\",\n    _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/etc\", \"classic\")\n  },\n  classicMorden: {\n    chainId: 62,\n    name: \"classicMorden\"\n  },\n  classicMordor: classicMordor,\n  classicTestnet: classicMordor,\n  classicKotti: {\n    chainId: 6,\n    name: \"classicKotti\",\n    _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/kotti\", \"classicKotti\")\n  },\n  xdai: {\n    chainId: 100,\n    name: \"xdai\"\n  },\n  matic: {\n    chainId: 137,\n    name: \"matic\"\n  },\n  maticmum: {\n    chainId: 80001,\n    name: \"maticmum\"\n  },\n  bnb: {\n    chainId: 56,\n    name: \"bnb\"\n  },\n  bnbt: {\n    chainId: 97,\n    name: \"bnbt\"\n  }\n};\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\n\nfunction getNetwork(network) {\n  // No network (null)\n  if (network == null) {\n    return null;\n  }\n\n  if (typeof network === \"number\") {\n    for (const name in networks) {\n      const standard = networks[name];\n\n      if (standard.chainId === network) {\n        return {\n          name: standard.name,\n          chainId: standard.chainId,\n          ensAddress: standard.ensAddress || null,\n          _defaultProvider: standard._defaultProvider || null\n        };\n      }\n    }\n\n    return {\n      chainId: network,\n      name: \"unknown\"\n    };\n  }\n\n  if (typeof network === \"string\") {\n    const standard = networks[network];\n\n    if (standard == null) {\n      return null;\n    }\n\n    return {\n      name: standard.name,\n      chainId: standard.chainId,\n      ensAddress: standard.ensAddress,\n      _defaultProvider: standard._defaultProvider || null\n    };\n  }\n\n  const standard = networks[network.name]; // Not a standard network; check that it is a valid network in general\n\n  if (!standard) {\n    if (typeof network.chainId !== \"number\") {\n      logger$q.throwArgumentError(\"invalid network chainId\", \"network\", network);\n    }\n\n    return network;\n  } // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n\n\n  if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n    logger$q.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n  } // @TODO: In the next major version add an attach function to a defaultProvider\n  // class and move the _defaultProvider internal to this file (extend Network)\n\n\n  let defaultProvider = network._defaultProvider || null;\n\n  if (defaultProvider == null && standard._defaultProvider) {\n    if (isRenetworkable(standard._defaultProvider)) {\n      defaultProvider = standard._defaultProvider.renetwork(network);\n    } else {\n      defaultProvider = standard._defaultProvider;\n    }\n  } // Standard Network (allow overriding the ENS address)\n\n\n  return {\n    name: network.name,\n    chainId: standard.chainId,\n    ensAddress: network.ensAddress || standard.ensAddress || null,\n    _defaultProvider: defaultProvider\n  };\n}\n\nfunction decode$1(textData) {\n  textData = atob(textData);\n  const data = [];\n\n  for (let i = 0; i < textData.length; i++) {\n    data.push(textData.charCodeAt(i));\n  }\n\n  return arrayify(data);\n}\n\nfunction encode$1(data) {\n  data = arrayify(data);\n  let textData = \"\";\n\n  for (let i = 0; i < data.length; i++) {\n    textData += String.fromCharCode(data[i]);\n  }\n\n  return btoa(textData);\n}\n\nvar index$2 = {\n  __proto__: null,\n  decode: decode$1,\n  encode: encode$1\n};\nconst version$l = \"web/5.4.0\";\n\nvar __awaiter$7 = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nfunction getUrl(href, options) {\n  return __awaiter$7(this, void 0, void 0, function* () {\n    if (options == null) {\n      options = {};\n    }\n\n    const request = {\n      method: options.method || \"GET\",\n      headers: options.headers || {},\n      body: options.body || undefined,\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      redirect: \"follow\",\n      referrer: \"client\" // no-referrer, *client\n\n    };\n    const response = yield fetch(href, request);\n    const body = yield response.arrayBuffer();\n    const headers = {};\n\n    if (response.headers.forEach) {\n      response.headers.forEach((value, key) => {\n        headers[key.toLowerCase()] = value;\n      });\n    } else {\n      response.headers.keys().forEach(key => {\n        headers[key.toLowerCase()] = response.headers.get(key);\n      });\n    }\n\n    return {\n      headers: headers,\n      statusCode: response.status,\n      statusMessage: response.statusText,\n      body: arrayify(new Uint8Array(body))\n    };\n  });\n}\n\nvar __awaiter$8 = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$r = new Logger(version$l);\n\nfunction staller(duration) {\n  return new Promise(resolve => {\n    setTimeout(resolve, duration);\n  });\n}\n\nfunction bodyify(value, type) {\n  if (value == null) {\n    return null;\n  }\n\n  if (typeof value === \"string\") {\n    return value;\n  }\n\n  if (isBytesLike(value)) {\n    if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n      try {\n        return toUtf8String(value);\n      } catch (error) {}\n    }\n\n    return hexlify(value);\n  }\n\n  return value;\n} // This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\n\n\nfunction _fetchData(connection, body, processFunc) {\n  // How many times to retry in the event of a throttle\n  const attemptLimit = typeof connection === \"object\" && connection.throttleLimit != null ? connection.throttleLimit : 12;\n  logger$r.assertArgument(attemptLimit > 0 && attemptLimit % 1 === 0, \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n  const throttleCallback = typeof connection === \"object\" ? connection.throttleCallback : null;\n  const throttleSlotInterval = typeof connection === \"object\" && typeof connection.throttleSlotInterval === \"number\" ? connection.throttleSlotInterval : 100;\n  logger$r.assertArgument(throttleSlotInterval > 0 && throttleSlotInterval % 1 === 0, \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n  const headers = {};\n  let url = null; // @TODO: Allow ConnectionInfo to override some of these values\n\n  const options = {\n    method: \"GET\"\n  };\n  let allow304 = false;\n  let timeout = 2 * 60 * 1000;\n\n  if (typeof connection === \"string\") {\n    url = connection;\n  } else if (typeof connection === \"object\") {\n    if (connection == null || connection.url == null) {\n      logger$r.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n    }\n\n    url = connection.url;\n\n    if (typeof connection.timeout === \"number\" && connection.timeout > 0) {\n      timeout = connection.timeout;\n    }\n\n    if (connection.headers) {\n      for (const key in connection.headers) {\n        headers[key.toLowerCase()] = {\n          key: key,\n          value: String(connection.headers[key])\n        };\n\n        if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n          allow304 = true;\n        }\n      }\n    }\n\n    options.allowGzip = !!connection.allowGzip;\n\n    if (connection.user != null && connection.password != null) {\n      if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n        logger$r.throwError(\"basic authentication requires a secure https url\", Logger.errors.INVALID_ARGUMENT, {\n          argument: \"url\",\n          url: url,\n          user: connection.user,\n          password: \"[REDACTED]\"\n        });\n      }\n\n      const authorization = connection.user + \":\" + connection.password;\n      headers[\"authorization\"] = {\n        key: \"Authorization\",\n        value: \"Basic \" + encode$1(toUtf8Bytes(authorization))\n      };\n    }\n  }\n\n  if (body) {\n    options.method = \"POST\";\n    options.body = body;\n\n    if (headers[\"content-type\"] == null) {\n      headers[\"content-type\"] = {\n        key: \"Content-Type\",\n        value: \"application/octet-stream\"\n      };\n    }\n\n    if (headers[\"content-length\"] == null) {\n      headers[\"content-length\"] = {\n        key: \"Content-Length\",\n        value: String(body.length)\n      };\n    }\n  }\n\n  const flatHeaders = {};\n  Object.keys(headers).forEach(key => {\n    const header = headers[key];\n    flatHeaders[header.key] = header.value;\n  });\n  options.headers = flatHeaders;\n\n  const runningTimeout = function () {\n    let timer = null;\n    const promise = new Promise(function (resolve, reject) {\n      if (timeout) {\n        timer = setTimeout(() => {\n          if (timer == null) {\n            return;\n          }\n\n          timer = null;\n          reject(logger$r.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n            requestMethod: options.method,\n            timeout: timeout,\n            url: url\n          }));\n        }, timeout);\n      }\n    });\n\n    const cancel = function () {\n      if (timer == null) {\n        return;\n      }\n\n      clearTimeout(timer);\n      timer = null;\n    };\n\n    return {\n      promise,\n      cancel\n    };\n  }();\n\n  const runningFetch = function () {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      for (let attempt = 0; attempt < attemptLimit; attempt++) {\n        let response = null;\n\n        try {\n          response = yield getUrl(url, options); // Exponential back-off throttling\n\n          if (response.statusCode === 429 && attempt < attemptLimit) {\n            let tryAgain = true;\n\n            if (throttleCallback) {\n              tryAgain = yield throttleCallback(attempt, url);\n            }\n\n            if (tryAgain) {\n              let stall = 0;\n              const retryAfter = response.headers[\"retry-after\"];\n\n              if (typeof retryAfter === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                stall = parseInt(retryAfter) * 1000;\n              } else {\n                stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n              } //console.log(\"Stalling 429\");\n\n\n              yield staller(stall);\n              continue;\n            }\n          }\n        } catch (error) {\n          response = error.response;\n\n          if (response == null) {\n            runningTimeout.cancel();\n            logger$r.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n              requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n              requestMethod: options.method,\n              serverError: error,\n              url: url\n            });\n          }\n        }\n\n        let body = response.body;\n\n        if (allow304 && response.statusCode === 304) {\n          body = null;\n        } else if (response.statusCode < 200 || response.statusCode >= 300) {\n          runningTimeout.cancel();\n          logger$r.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n            status: response.statusCode,\n            headers: response.headers,\n            body: bodyify(body, response.headers ? response.headers[\"content-type\"] : null),\n            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n            requestMethod: options.method,\n            url: url\n          });\n        }\n\n        if (processFunc) {\n          try {\n            const result = yield processFunc(body, response);\n            runningTimeout.cancel();\n            return result;\n          } catch (error) {\n            // Allow the processFunc to trigger a throttle\n            if (error.throttleRetry && attempt < attemptLimit) {\n              let tryAgain = true;\n\n              if (throttleCallback) {\n                tryAgain = yield throttleCallback(attempt, url);\n              }\n\n              if (tryAgain) {\n                const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt))); //console.log(\"Stalling callback\");\n\n                yield staller(timeout);\n                continue;\n              }\n            }\n\n            runningTimeout.cancel();\n            logger$r.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n              body: bodyify(body, response.headers ? response.headers[\"content-type\"] : null),\n              error: error,\n              requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n              requestMethod: options.method,\n              url: url\n            });\n          }\n        }\n\n        runningTimeout.cancel(); // If we had a processFunc, it eitehr returned a T or threw above.\n        // The \"body\" is now a Uint8Array.\n\n        return body;\n      }\n\n      return logger$r.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n        requestMethod: options.method,\n        url: url\n      });\n    });\n  }();\n\n  return Promise.race([runningTimeout.promise, runningFetch]);\n}\n\nfunction fetchJson(connection, json, processFunc) {\n  let processJsonFunc = (value, response) => {\n    let result = null;\n\n    if (value != null) {\n      try {\n        result = JSON.parse(toUtf8String(value));\n      } catch (error) {\n        logger$r.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n          body: value,\n          error: error\n        });\n      }\n    }\n\n    if (processFunc) {\n      result = processFunc(result, response);\n    }\n\n    return result;\n  }; // If we have json to send, we must\n  // - add content-type of application/json (unless already overridden)\n  // - convert the json to bytes\n\n\n  let body = null;\n\n  if (json != null) {\n    body = toUtf8Bytes(json); // Create a connection with the content-type set for JSON\n\n    const updated = typeof connection === \"string\" ? {\n      url: connection\n    } : shallowCopy(connection);\n\n    if (updated.headers) {\n      const hasContentType = Object.keys(updated.headers).filter(k => k.toLowerCase() === \"content-type\").length !== 0;\n\n      if (!hasContentType) {\n        updated.headers = shallowCopy(updated.headers);\n        updated.headers[\"content-type\"] = \"application/json\";\n      }\n    } else {\n      updated.headers = {\n        \"content-type\": \"application/json\"\n      };\n    }\n\n    connection = updated;\n  }\n\n  return _fetchData(connection, body, processJsonFunc);\n}\n\nfunction poll(func, options) {\n  if (!options) {\n    options = {};\n  }\n\n  options = shallowCopy(options);\n\n  if (options.floor == null) {\n    options.floor = 0;\n  }\n\n  if (options.ceiling == null) {\n    options.ceiling = 10000;\n  }\n\n  if (options.interval == null) {\n    options.interval = 250;\n  }\n\n  return new Promise(function (resolve, reject) {\n    let timer = null;\n    let done = false; // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n\n    const cancel = () => {\n      if (done) {\n        return false;\n      }\n\n      done = true;\n\n      if (timer) {\n        clearTimeout(timer);\n      }\n\n      return true;\n    };\n\n    if (options.timeout) {\n      timer = setTimeout(() => {\n        if (cancel()) {\n          reject(new Error(\"timeout\"));\n        }\n      }, options.timeout);\n    }\n\n    const retryLimit = options.retryLimit;\n    let attempt = 0;\n\n    function check() {\n      return func().then(function (result) {\n        // If we have a result, or are allowed null then we're done\n        if (result !== undefined) {\n          if (cancel()) {\n            resolve(result);\n          }\n        } else if (options.oncePoll) {\n          options.oncePoll.once(\"poll\", check);\n        } else if (options.onceBlock) {\n          options.onceBlock.once(\"block\", check); // Otherwise, exponential back-off (up to 10s) our next request\n        } else if (!done) {\n          attempt++;\n\n          if (attempt > retryLimit) {\n            if (cancel()) {\n              reject(new Error(\"retry limit reached\"));\n            }\n\n            return;\n          }\n\n          let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n\n          if (timeout < options.floor) {\n            timeout = options.floor;\n          }\n\n          if (timeout > options.ceiling) {\n            timeout = options.ceiling;\n          }\n\n          setTimeout(check, timeout);\n        }\n\n        return null;\n      }, function (error) {\n        if (cancel()) {\n          reject(error);\n        }\n      });\n    }\n\n    check();\n  });\n}\n\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'; // pre-compute lookup table\n\nvar ALPHABET_MAP = {};\n\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z);\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous');\n  ALPHABET_MAP[x] = z;\n}\n\nfunction polymodStep(pre) {\n  var b = pre >> 25;\n  return (pre & 0x1FFFFFF) << 5 ^ -(b >> 0 & 1) & 0x3b6a57b2 ^ -(b >> 1 & 1) & 0x26508e6d ^ -(b >> 2 & 1) & 0x1ea119fa ^ -(b >> 3 & 1) & 0x3d4233dd ^ -(b >> 4 & 1) & 0x2a1462b3;\n}\n\nfunction prefixChk(prefix) {\n  var chk = 1;\n\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i);\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')';\n    chk = polymodStep(chk) ^ c >> 5;\n  }\n\n  chk = polymodStep(chk);\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i);\n    chk = polymodStep(chk) ^ v & 0x1f;\n  }\n\n  return chk;\n}\n\nfunction encode$2(prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90;\n  if (prefix.length + 7 + words.length > LIMIT) throw new TypeError('Exceeds length limit');\n  prefix = prefix.toLowerCase(); // determine chk mod\n\n  var chk = prefixChk(prefix);\n  if (typeof chk === 'string') throw new Error(chk);\n  var result = prefix + '1';\n\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i];\n    if (x >> 5 !== 0) throw new Error('Non 5-bit word');\n    chk = polymodStep(chk) ^ x;\n    result += ALPHABET.charAt(x);\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk);\n  }\n\n  chk ^= 1;\n\n  for (i = 0; i < 6; ++i) {\n    var v = chk >> (5 - i) * 5 & 0x1f;\n    result += ALPHABET.charAt(v);\n  }\n\n  return result;\n}\n\nfunction __decode(str, LIMIT) {\n  LIMIT = LIMIT || 90;\n  if (str.length < 8) return str + ' too short';\n  if (str.length > LIMIT) return 'Exceeds length limit'; // don't allow mixed case\n\n  var lowered = str.toLowerCase();\n  var uppered = str.toUpperCase();\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str;\n  str = lowered;\n  var split = str.lastIndexOf('1');\n  if (split === -1) return 'No separator character for ' + str;\n  if (split === 0) return 'Missing prefix for ' + str;\n  var prefix = str.slice(0, split);\n  var wordChars = str.slice(split + 1);\n  if (wordChars.length < 6) return 'Data too short';\n  var chk = prefixChk(prefix);\n  if (typeof chk === 'string') return chk;\n  var words = [];\n\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i);\n    var v = ALPHABET_MAP[c];\n    if (v === undefined) return 'Unknown character ' + c;\n    chk = polymodStep(chk) ^ v; // not in the checksum?\n\n    if (i + 6 >= wordChars.length) continue;\n    words.push(v);\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str;\n  return {\n    prefix: prefix,\n    words: words\n  };\n}\n\nfunction decodeUnsafe() {\n  var res = __decode.apply(null, arguments);\n\n  if (typeof res === 'object') return res;\n}\n\nfunction decode$2(str) {\n  var res = __decode.apply(null, arguments);\n\n  if (typeof res === 'object') return res;\n  throw new Error(res);\n}\n\nfunction convert(data, inBits, outBits, pad) {\n  var value = 0;\n  var bits = 0;\n  var maxV = (1 << outBits) - 1;\n  var result = [];\n\n  for (var i = 0; i < data.length; ++i) {\n    value = value << inBits | data[i];\n    bits += inBits;\n\n    while (bits >= outBits) {\n      bits -= outBits;\n      result.push(value >> bits & maxV);\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push(value << outBits - bits & maxV);\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding';\n    if (value << outBits - bits & maxV) return 'Non-zero padding';\n  }\n\n  return result;\n}\n\nfunction toWordsUnsafe(bytes) {\n  var res = convert(bytes, 8, 5, true);\n  if (Array.isArray(res)) return res;\n}\n\nfunction toWords(bytes) {\n  var res = convert(bytes, 8, 5, true);\n  if (Array.isArray(res)) return res;\n  throw new Error(res);\n}\n\nfunction fromWordsUnsafe(words) {\n  var res = convert(words, 5, 8, false);\n  if (Array.isArray(res)) return res;\n}\n\nfunction fromWords(words) {\n  var res = convert(words, 5, 8, false);\n  if (Array.isArray(res)) return res;\n  throw new Error(res);\n}\n\nvar bech32 = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode$2,\n  encode: encode$2,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n};\nconst version$m = \"providers/5.4.4\";\nconst logger$s = new Logger(version$m);\n\nclass Formatter {\n  constructor() {\n    logger$s.checkNew(new.target, Formatter);\n    this.formats = this.getDefaultFormats();\n  }\n\n  getDefaultFormats() {\n    const formats = {};\n    const address = this.address.bind(this);\n    const bigNumber = this.bigNumber.bind(this);\n    const blockTag = this.blockTag.bind(this);\n    const data = this.data.bind(this);\n    const hash = this.hash.bind(this);\n    const hex = this.hex.bind(this);\n    const number = this.number.bind(this);\n    const type = this.type.bind(this);\n\n    const strictData = v => {\n      return this.data(v, true);\n    };\n\n    formats.transaction = {\n      hash: hash,\n      type: type,\n      accessList: Formatter.allowNull(this.accessList.bind(this), null),\n      blockHash: Formatter.allowNull(hash, null),\n      blockNumber: Formatter.allowNull(number, null),\n      transactionIndex: Formatter.allowNull(number, null),\n      confirmations: Formatter.allowNull(number, null),\n      from: address,\n      // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n      // must be set\n      gasPrice: Formatter.allowNull(bigNumber),\n      maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n      maxFeePerGas: Formatter.allowNull(bigNumber),\n      gasLimit: bigNumber,\n      to: Formatter.allowNull(address, null),\n      value: bigNumber,\n      nonce: number,\n      data: data,\n      r: Formatter.allowNull(this.uint256),\n      s: Formatter.allowNull(this.uint256),\n      v: Formatter.allowNull(number),\n      creates: Formatter.allowNull(address, null),\n      raw: Formatter.allowNull(data)\n    };\n    formats.transactionRequest = {\n      from: Formatter.allowNull(address),\n      nonce: Formatter.allowNull(number),\n      gasLimit: Formatter.allowNull(bigNumber),\n      gasPrice: Formatter.allowNull(bigNumber),\n      maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n      maxFeePerGas: Formatter.allowNull(bigNumber),\n      to: Formatter.allowNull(address),\n      value: Formatter.allowNull(bigNumber),\n      data: Formatter.allowNull(strictData),\n      type: Formatter.allowNull(number),\n      accessList: Formatter.allowNull(this.accessList.bind(this), null)\n    };\n    formats.receiptLog = {\n      transactionIndex: number,\n      blockNumber: number,\n      transactionHash: hash,\n      address: address,\n      topics: Formatter.arrayOf(hash),\n      data: data,\n      logIndex: number,\n      blockHash: hash\n    };\n    formats.receipt = {\n      to: Formatter.allowNull(this.address, null),\n      from: Formatter.allowNull(this.address, null),\n      contractAddress: Formatter.allowNull(address, null),\n      transactionIndex: number,\n      // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n      root: Formatter.allowNull(hex),\n      gasUsed: bigNumber,\n      logsBloom: Formatter.allowNull(data),\n      blockHash: hash,\n      transactionHash: hash,\n      logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n      blockNumber: number,\n      confirmations: Formatter.allowNull(number, null),\n      cumulativeGasUsed: bigNumber,\n      effectiveGasPrice: Formatter.allowNull(bigNumber),\n      status: Formatter.allowNull(number),\n      type: type\n    };\n    formats.block = {\n      hash: hash,\n      parentHash: hash,\n      number: number,\n      timestamp: number,\n      nonce: Formatter.allowNull(hex),\n      difficulty: this.difficulty.bind(this),\n      gasLimit: bigNumber,\n      gasUsed: bigNumber,\n      miner: address,\n      extraData: data,\n      transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n      baseFeePerGas: Formatter.allowNull(bigNumber)\n    };\n    formats.blockWithTransactions = shallowCopy(formats.block);\n    formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n    formats.filter = {\n      fromBlock: Formatter.allowNull(blockTag, undefined),\n      toBlock: Formatter.allowNull(blockTag, undefined),\n      blockHash: Formatter.allowNull(hash, undefined),\n      address: Formatter.allowNull(address, undefined),\n      topics: Formatter.allowNull(this.topics.bind(this), undefined)\n    };\n    formats.filterLog = {\n      blockNumber: Formatter.allowNull(number),\n      blockHash: Formatter.allowNull(hash),\n      transactionIndex: number,\n      removed: Formatter.allowNull(this.boolean.bind(this)),\n      address: address,\n      data: Formatter.allowFalsish(data, \"0x\"),\n      topics: Formatter.arrayOf(hash),\n      transactionHash: hash,\n      logIndex: number\n    };\n    return formats;\n  }\n\n  accessList(accessList) {\n    return accessListify(accessList || []);\n  } // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n  // Strict! Used on input.\n\n\n  number(number) {\n    if (number === \"0x\") {\n      return 0;\n    }\n\n    return BigNumber.from(number).toNumber();\n  }\n\n  type(number) {\n    if (number === \"0x\" || number == null) {\n      return 0;\n    }\n\n    return BigNumber.from(number).toNumber();\n  } // Strict! Used on input.\n\n\n  bigNumber(value) {\n    return BigNumber.from(value);\n  } // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n\n\n  boolean(value) {\n    if (typeof value === \"boolean\") {\n      return value;\n    }\n\n    if (typeof value === \"string\") {\n      value = value.toLowerCase();\n\n      if (value === \"true\") {\n        return true;\n      }\n\n      if (value === \"false\") {\n        return false;\n      }\n    }\n\n    throw new Error(\"invalid boolean - \" + value);\n  }\n\n  hex(value, strict) {\n    if (typeof value === \"string\") {\n      if (!strict && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n      }\n\n      if (isHexString(value)) {\n        return value.toLowerCase();\n      }\n    }\n\n    return logger$s.throwArgumentError(\"invalid hash\", \"value\", value);\n  }\n\n  data(value, strict) {\n    const result = this.hex(value, strict);\n\n    if (result.length % 2 !== 0) {\n      throw new Error(\"invalid data; odd-length - \" + value);\n    }\n\n    return result;\n  } // Requires an address\n  // Strict! Used on input.\n\n\n  address(value) {\n    return getAddress(value);\n  }\n\n  callAddress(value) {\n    if (!isHexString(value, 32)) {\n      return null;\n    }\n\n    const address = getAddress(hexDataSlice(value, 12));\n    return address === AddressZero ? null : address;\n  }\n\n  contractAddress(value) {\n    return getContractAddress(value);\n  } // Strict! Used on input.\n\n\n  blockTag(blockTag) {\n    if (blockTag == null) {\n      return \"latest\";\n    }\n\n    if (blockTag === \"earliest\") {\n      return \"0x0\";\n    }\n\n    if (blockTag === \"latest\" || blockTag === \"pending\") {\n      return blockTag;\n    }\n\n    if (typeof blockTag === \"number\" || isHexString(blockTag)) {\n      return hexValue(blockTag);\n    }\n\n    throw new Error(\"invalid blockTag\");\n  } // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n\n\n  hash(value, strict) {\n    const result = this.hex(value, strict);\n\n    if (hexDataLength(result) !== 32) {\n      return logger$s.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n\n    return result;\n  } // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n\n\n  difficulty(value) {\n    if (value == null) {\n      return null;\n    }\n\n    const v = BigNumber.from(value);\n\n    try {\n      return v.toNumber();\n    } catch (error) {}\n\n    return null;\n  }\n\n  uint256(value) {\n    if (!isHexString(value)) {\n      throw new Error(\"invalid uint256\");\n    }\n\n    return hexZeroPad(value, 32);\n  }\n\n  _block(value, format) {\n    if (value.author != null && value.miner == null) {\n      value.miner = value.author;\n    }\n\n    return Formatter.check(format, value);\n  }\n\n  block(value) {\n    return this._block(value, this.formats.block);\n  }\n\n  blockWithTransactions(value) {\n    return this._block(value, this.formats.blockWithTransactions);\n  } // Strict! Used on input.\n\n\n  transactionRequest(value) {\n    return Formatter.check(this.formats.transactionRequest, value);\n  }\n\n  transactionResponse(transaction) {\n    // Rename gas to gasLimit\n    if (transaction.gas != null && transaction.gasLimit == null) {\n      transaction.gasLimit = transaction.gas;\n    } // Some clients (TestRPC) do strange things like return 0x0 for the\n    // 0 address; correct this to be a real address\n\n\n    if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n      transaction.to = \"0x0000000000000000000000000000000000000000\";\n    } // Rename input to data\n\n\n    if (transaction.input != null && transaction.data == null) {\n      transaction.data = transaction.input;\n    } // If to and creates are empty, populate the creates from the transaction\n\n\n    if (transaction.to == null && transaction.creates == null) {\n      transaction.creates = this.contractAddress(transaction);\n    }\n\n    if ((transaction.type === 1 || transaction.type === 2) && transaction.accessList == null) {\n      transaction.accessList = [];\n    }\n\n    const result = Formatter.check(this.formats.transaction, transaction);\n\n    if (transaction.chainId != null) {\n      let chainId = transaction.chainId;\n\n      if (isHexString(chainId)) {\n        chainId = BigNumber.from(chainId).toNumber();\n      }\n\n      result.chainId = chainId;\n    } else {\n      let chainId = transaction.networkId; // geth-etc returns chainId\n\n      if (chainId == null && result.v == null) {\n        chainId = transaction.chainId;\n      }\n\n      if (isHexString(chainId)) {\n        chainId = BigNumber.from(chainId).toNumber();\n      }\n\n      if (typeof chainId !== \"number\" && result.v != null) {\n        chainId = (result.v - 35) / 2;\n\n        if (chainId < 0) {\n          chainId = 0;\n        }\n\n        chainId = parseInt(chainId);\n      }\n\n      if (typeof chainId !== \"number\") {\n        chainId = 0;\n      }\n\n      result.chainId = chainId;\n    } // 0x0000... should actually be null\n\n\n    if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n      result.blockHash = null;\n    }\n\n    return result;\n  }\n\n  transaction(value) {\n    return parse(value);\n  }\n\n  receiptLog(value) {\n    return Formatter.check(this.formats.receiptLog, value);\n  }\n\n  receipt(value) {\n    const result = Formatter.check(this.formats.receipt, value); // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n\n    if (result.root != null) {\n      if (result.root.length <= 4) {\n        // Could be 0x00, 0x0, 0x01 or 0x1\n        const value = BigNumber.from(result.root).toNumber();\n\n        if (value === 0 || value === 1) {\n          // Make sure if both are specified, they match\n          if (result.status != null && result.status !== value) {\n            logger$s.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", {\n              root: result.root,\n              status: result.status\n            });\n          }\n\n          result.status = value;\n          delete result.root;\n        } else {\n          logger$s.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n        }\n      } else if (result.root.length !== 66) {\n        // Must be a valid bytes32\n        logger$s.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n      }\n    }\n\n    if (result.status != null) {\n      result.byzantium = true;\n    }\n\n    return result;\n  }\n\n  topics(value) {\n    if (Array.isArray(value)) {\n      return value.map(v => this.topics(v));\n    } else if (value != null) {\n      return this.hash(value, true);\n    }\n\n    return null;\n  }\n\n  filter(value) {\n    return Formatter.check(this.formats.filter, value);\n  }\n\n  filterLog(value) {\n    return Formatter.check(this.formats.filterLog, value);\n  }\n\n  static check(format, object) {\n    const result = {};\n\n    for (const key in format) {\n      try {\n        const value = format[key](object[key]);\n\n        if (value !== undefined) {\n          result[key] = value;\n        }\n      } catch (error) {\n        error.checkKey = key;\n        error.checkValue = object[key];\n        throw error;\n      }\n    }\n\n    return result;\n  } // if value is null-ish, nullValue is returned\n\n\n  static allowNull(format, nullValue) {\n    return function (value) {\n      if (value == null) {\n        return nullValue;\n      }\n\n      return format(value);\n    };\n  } // If value is false-ish, replaceValue is returned\n\n\n  static allowFalsish(format, replaceValue) {\n    return function (value) {\n      if (!value) {\n        return replaceValue;\n      }\n\n      return format(value);\n    };\n  } // Requires an Array satisfying check\n\n\n  static arrayOf(format) {\n    return function (array) {\n      if (!Array.isArray(array)) {\n        throw new Error(\"not an array\");\n      }\n\n      const result = [];\n      array.forEach(function (value) {\n        result.push(format(value));\n      });\n      return result;\n    };\n  }\n\n}\n\nfunction isCommunityResourcable(value) {\n  return value && typeof value.isCommunityResource === \"function\";\n}\n\nfunction isCommunityResource(value) {\n  return isCommunityResourcable(value) && value.isCommunityResource();\n} // Show the throttle message only once\n\n\nlet throttleMessage = false;\n\nfunction showThrottleMessage() {\n  if (throttleMessage) {\n    return;\n  }\n\n  throttleMessage = true;\n  console.log(\"========= NOTICE =========\");\n  console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n  console.log(\"\");\n  console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n  console.log(\"community resource for low-traffic projects and early prototyping.\");\n  console.log(\"\");\n  console.log(\"While your application will continue to function, we highly recommended\");\n  console.log(\"signing up for your own API keys to improve performance, increase your\");\n  console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n  console.log(\"\");\n  console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n  console.log(\"==========================\");\n}\n\nvar __awaiter$9 = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$t = new Logger(version$m); //////////////////////////////\n// Event Serializeing\n\nfunction checkTopic(topic) {\n  if (topic == null) {\n    return \"null\";\n  }\n\n  if (hexDataLength(topic) !== 32) {\n    logger$t.throwArgumentError(\"invalid topic\", \"topic\", topic);\n  }\n\n  return topic.toLowerCase();\n}\n\nfunction serializeTopics(topics) {\n  // Remove trailing null AND-topics; they are redundant\n  topics = topics.slice();\n\n  while (topics.length > 0 && topics[topics.length - 1] == null) {\n    topics.pop();\n  }\n\n  return topics.map(topic => {\n    if (Array.isArray(topic)) {\n      // Only track unique OR-topics\n      const unique = {};\n      topic.forEach(topic => {\n        unique[checkTopic(topic)] = true;\n      }); // The order of OR-topics does not matter\n\n      const sorted = Object.keys(unique);\n      sorted.sort();\n      return sorted.join(\"|\");\n    } else {\n      return checkTopic(topic);\n    }\n  }).join(\"&\");\n}\n\nfunction deserializeTopics(data) {\n  if (data === \"\") {\n    return [];\n  }\n\n  return data.split(/&/g).map(topic => {\n    if (topic === \"\") {\n      return [];\n    }\n\n    const comps = topic.split(\"|\").map(topic => {\n      return topic === \"null\" ? null : topic;\n    });\n    return comps.length === 1 ? comps[0] : comps;\n  });\n}\n\nfunction getEventTag$1(eventName) {\n  if (typeof eventName === \"string\") {\n    eventName = eventName.toLowerCase();\n\n    if (hexDataLength(eventName) === 32) {\n      return \"tx:\" + eventName;\n    }\n\n    if (eventName.indexOf(\":\") === -1) {\n      return eventName;\n    }\n  } else if (Array.isArray(eventName)) {\n    return \"filter:*:\" + serializeTopics(eventName);\n  } else if (ForkEvent.isForkEvent(eventName)) {\n    logger$t.warn(\"not implemented\");\n    throw new Error(\"not implemented\");\n  } else if (eventName && typeof eventName === \"object\") {\n    return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n  }\n\n  throw new Error(\"invalid event - \" + eventName);\n} //////////////////////////////\n// Helper Object\n\n\nfunction getTime() {\n  return new Date().getTime();\n}\n\nfunction stall(duration) {\n  return new Promise(resolve => {\n    setTimeout(resolve, duration);\n  });\n} //////////////////////////////\n// Provider Object\n\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\n\n\nconst PollableEvents = [\"block\", \"network\", \"pending\", \"poll\"];\n\nclass Event {\n  constructor(tag, listener, once) {\n    defineReadOnly(this, \"tag\", tag);\n    defineReadOnly(this, \"listener\", listener);\n    defineReadOnly(this, \"once\", once);\n  }\n\n  get event() {\n    switch (this.type) {\n      case \"tx\":\n        return this.hash;\n\n      case \"filter\":\n        return this.filter;\n    }\n\n    return this.tag;\n  }\n\n  get type() {\n    return this.tag.split(\":\")[0];\n  }\n\n  get hash() {\n    const comps = this.tag.split(\":\");\n\n    if (comps[0] !== \"tx\") {\n      return null;\n    }\n\n    return comps[1];\n  }\n\n  get filter() {\n    const comps = this.tag.split(\":\");\n\n    if (comps[0] !== \"filter\") {\n      return null;\n    }\n\n    const address = comps[1];\n    const topics = deserializeTopics(comps[2]);\n    const filter = {};\n\n    if (topics.length > 0) {\n      filter.topics = topics;\n    }\n\n    if (address && address !== \"*\") {\n      filter.address = address;\n    }\n\n    return filter;\n  }\n\n  pollable() {\n    return this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0;\n  }\n\n} // https://github.com/satoshilabs/slips/blob/master/slip-0044.md\n\n\nconst coinInfos = {\n  \"0\": {\n    symbol: \"btc\",\n    p2pkh: 0x00,\n    p2sh: 0x05,\n    prefix: \"bc\"\n  },\n  \"2\": {\n    symbol: \"ltc\",\n    p2pkh: 0x30,\n    p2sh: 0x32,\n    prefix: \"ltc\"\n  },\n  \"3\": {\n    symbol: \"doge\",\n    p2pkh: 0x1e,\n    p2sh: 0x16\n  },\n  \"60\": {\n    symbol: \"eth\",\n    ilk: \"eth\"\n  },\n  \"61\": {\n    symbol: \"etc\",\n    ilk: \"eth\"\n  },\n  \"700\": {\n    symbol: \"xdai\",\n    ilk: \"eth\"\n  }\n};\n\nfunction bytes32ify(value) {\n  return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n} // Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\n\n\nfunction base58Encode(data) {\n  return Base58.encode(concat([data, hexDataSlice(sha256$1(sha256$1(data)), 0, 4)]));\n}\n\nclass Resolver {\n  constructor(provider, address, name) {\n    defineReadOnly(this, \"provider\", provider);\n    defineReadOnly(this, \"name\", name);\n    defineReadOnly(this, \"address\", provider.formatter.address(address));\n  }\n\n  _fetchBytes(selector, parameters) {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      // keccak256(\"addr(bytes32,uint256)\")\n      const transaction = {\n        to: this.address,\n        data: hexConcat([selector, namehash(this.name), parameters || \"0x\"])\n      };\n\n      try {\n        const result = yield this.provider.call(transaction);\n\n        if (result === \"0x\") {\n          return null;\n        }\n\n        const offset = BigNumber.from(hexDataSlice(result, 0, 32)).toNumber();\n        const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n        return hexDataSlice(result, offset + 32, offset + 32 + length);\n      } catch (error) {\n        if (error.code === Logger.errors.CALL_EXCEPTION) {\n          return null;\n        }\n\n        return null;\n      }\n    });\n  }\n\n  _getAddress(coinType, hexBytes) {\n    const coinInfo = coinInfos[String(coinType)];\n\n    if (coinInfo == null) {\n      logger$t.throwError(`unsupported coin type: ${coinType}`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: `getAddress(${coinType})`\n      });\n    }\n\n    if (coinInfo.ilk === \"eth\") {\n      return this.provider.formatter.address(hexBytes);\n    }\n\n    const bytes = arrayify(hexBytes); // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n\n    if (coinInfo.p2pkh != null) {\n      const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n\n      if (p2pkh) {\n        const length = parseInt(p2pkh[1], 16);\n\n        if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n          return base58Encode(concat([[coinInfo.p2pkh], \"0x\" + p2pkh[2]]));\n        }\n      }\n    } // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n\n\n    if (coinInfo.p2sh != null) {\n      const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n\n      if (p2sh) {\n        const length = parseInt(p2sh[1], 16);\n\n        if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n          return base58Encode(concat([[coinInfo.p2sh], \"0x\" + p2sh[2]]));\n        }\n      }\n    } // Bech32\n\n\n    if (coinInfo.prefix != null) {\n      const length = bytes[1]; // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n\n      let version = bytes[0];\n\n      if (version === 0x00) {\n        if (length !== 20 && length !== 32) {\n          version = -1;\n        }\n      } else {\n        version = -1;\n      }\n\n      if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n        const words = bech32.toWords(bytes.slice(2));\n        words.unshift(version);\n        return bech32.encode(coinInfo.prefix, words);\n      }\n    }\n\n    return null;\n  }\n\n  getAddress(coinType) {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      if (coinType == null) {\n        coinType = 60;\n      } // If Ethereum, use the standard `addr(bytes32)`\n\n\n      if (coinType === 60) {\n        try {\n          // keccak256(\"addr(bytes32)\")\n          const transaction = {\n            to: this.address,\n            data: \"0x3b3b57de\" + namehash(this.name).substring(2)\n          };\n          const hexBytes = yield this.provider.call(transaction); // No address\n\n          if (hexBytes === \"0x\" || hexBytes === HashZero) {\n            return null;\n          }\n\n          return this.provider.formatter.callAddress(hexBytes);\n        } catch (error) {\n          if (error.code === Logger.errors.CALL_EXCEPTION) {\n            return null;\n          }\n\n          throw error;\n        }\n      } // keccak256(\"addr(bytes32,uint256\")\n\n\n      const hexBytes = yield this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType)); // No address\n\n      if (hexBytes == null || hexBytes === \"0x\") {\n        return null;\n      } // Compute the address\n\n\n      const address = this._getAddress(coinType, hexBytes);\n\n      if (address == null) {\n        logger$t.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: `getAddress(${coinType})`,\n          coinType: coinType,\n          data: hexBytes\n        });\n      }\n\n      return address;\n    });\n  }\n\n  getContentHash() {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      // keccak256(\"contenthash()\")\n      const hexBytes = yield this._fetchBytes(\"0xbc1c58d1\"); // No contenthash\n\n      if (hexBytes == null || hexBytes === \"0x\") {\n        return null;\n      } // IPFS (CID: 1, Type: DAG-PB)\n\n\n      const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n\n      if (ipfs) {\n        const length = parseInt(ipfs[3], 16);\n\n        if (ipfs[4].length === length * 2) {\n          return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n        }\n      } // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n\n\n      const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);\n\n      if (swarm) {\n        if (swarm[1].length === 32 * 2) {\n          return \"bzz:/\\/\" + swarm[1];\n        }\n      }\n\n      return logger$t.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"getContentHash()\",\n        data: hexBytes\n      });\n    });\n  }\n\n  getText(key) {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      // The key encoded as parameter to fetchBytes\n      let keyBytes = toUtf8Bytes(key); // The nodehash consumes the first slot, so the string pointer targets\n      // offset 64, with the length at offset 64 and data starting at offset 96\n\n      keyBytes = concat([bytes32ify(64), bytes32ify(keyBytes.length), keyBytes]); // Pad to word-size (32 bytes)\n\n      if (keyBytes.length % 32 !== 0) {\n        keyBytes = concat([keyBytes, hexZeroPad(\"0x\", 32 - key.length % 32)]);\n      }\n\n      const hexBytes = yield this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n\n      if (hexBytes == null || hexBytes === \"0x\") {\n        return null;\n      }\n\n      return toUtf8String(hexBytes);\n    });\n  }\n\n}\n\nlet defaultFormatter = null;\nlet nextPollId = 1;\n\nclass BaseProvider extends Provider {\n  /**\n   *  ready\n   *\n   *  A Promise<Network> that resolves only once the provider is ready.\n   *\n   *  Sub-classes that call the super with a network without a chainId\n   *  MUST set this. Standard named networks have a known chainId.\n   *\n   */\n  constructor(network) {\n    logger$t.checkNew(new.target, Provider);\n    super(); // Events being listened to\n\n    this._events = [];\n    this._emitted = {\n      block: -2\n    };\n    this.formatter = new.target.getFormatter(); // If network is any, this Provider allows the underlying\n    // network to change dynamically, and we auto-detect the\n    // current network\n\n    defineReadOnly(this, \"anyNetwork\", network === \"any\");\n\n    if (this.anyNetwork) {\n      network = this.detectNetwork();\n    }\n\n    if (network instanceof Promise) {\n      this._networkPromise = network; // Squash any \"unhandled promise\" errors; that do not need to be handled\n\n      network.catch(error => {}); // Trigger initial network setting (async)\n\n      this._ready().catch(error => {});\n    } else {\n      const knownNetwork = getStatic(new.target, \"getNetwork\")(network);\n\n      if (knownNetwork) {\n        defineReadOnly(this, \"_network\", knownNetwork);\n        this.emit(\"network\", knownNetwork, null);\n      } else {\n        logger$t.throwArgumentError(\"invalid network\", \"network\", network);\n      }\n    }\n\n    this._maxInternalBlockNumber = -1024;\n    this._lastBlockNumber = -2;\n    this._pollingInterval = 4000;\n    this._fastQueryDate = 0;\n  }\n\n  _ready() {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      if (this._network == null) {\n        let network = null;\n\n        if (this._networkPromise) {\n          try {\n            network = yield this._networkPromise;\n          } catch (error) {}\n        } // Try the Provider's network detection (this MUST throw if it cannot)\n\n\n        if (network == null) {\n          network = yield this.detectNetwork();\n        } // This should never happen; every Provider sub-class should have\n        // suggested a network by here (or have thrown).\n\n\n        if (!network) {\n          logger$t.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, {});\n        } // Possible this call stacked so do not call defineReadOnly again\n\n\n        if (this._network == null) {\n          if (this.anyNetwork) {\n            this._network = network;\n          } else {\n            defineReadOnly(this, \"_network\", network);\n          }\n\n          this.emit(\"network\", network, null);\n        }\n      }\n\n      return this._network;\n    });\n  } // This will always return the most recently established network.\n  // For \"any\", this can change (a \"network\" event is emitted before\n  // any change is refelcted); otherwise this cannot change\n\n\n  get ready() {\n    return poll(() => {\n      return this._ready().then(network => {\n        return network;\n      }, error => {\n        // If the network isn't running yet, we will wait\n        if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n          return undefined;\n        }\n\n        throw error;\n      });\n    });\n  } // @TODO: Remove this and just create a singleton formatter\n\n\n  static getFormatter() {\n    if (defaultFormatter == null) {\n      defaultFormatter = new Formatter();\n    }\n\n    return defaultFormatter;\n  } // @TODO: Remove this and just use getNetwork\n\n\n  static getNetwork(network) {\n    return getNetwork(network == null ? \"homestead\" : network);\n  } // Fetches the blockNumber, but will reuse any result that is less\n  // than maxAge old or has been requested since the last request\n\n\n  _getInternalBlockNumber(maxAge) {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      yield this._ready(); // Allowing stale data up to maxAge old\n\n      if (maxAge > 0) {\n        // While there are pending internal block requests...\n        while (this._internalBlockNumber) {\n          // ...\"remember\" which fetch we started with\n          const internalBlockNumber = this._internalBlockNumber;\n\n          try {\n            // Check the result is not too stale\n            const result = yield internalBlockNumber;\n\n            if (getTime() - result.respTime <= maxAge) {\n              return result.blockNumber;\n            } // Too old; fetch a new value\n\n\n            break;\n          } catch (error) {\n            // The fetch rejected; if we are the first to get the\n            // rejection, drop through so we replace it with a new\n            // fetch; all others blocked will then get that fetch\n            // which won't match the one they \"remembered\" and loop\n            if (this._internalBlockNumber === internalBlockNumber) {\n              break;\n            }\n          }\n        }\n      }\n\n      const reqTime = getTime();\n      const checkInternalBlockNumber = resolveProperties({\n        blockNumber: this.perform(\"getBlockNumber\", {}),\n        networkError: this.getNetwork().then(network => null, error => error)\n      }).then(({\n        blockNumber,\n        networkError\n      }) => {\n        if (networkError) {\n          // Unremember this bad internal block number\n          if (this._internalBlockNumber === checkInternalBlockNumber) {\n            this._internalBlockNumber = null;\n          }\n\n          throw networkError;\n        }\n\n        const respTime = getTime();\n        blockNumber = BigNumber.from(blockNumber).toNumber();\n\n        if (blockNumber < this._maxInternalBlockNumber) {\n          blockNumber = this._maxInternalBlockNumber;\n        }\n\n        this._maxInternalBlockNumber = blockNumber;\n\n        this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n\n\n        return {\n          blockNumber,\n          reqTime,\n          respTime\n        };\n      });\n      this._internalBlockNumber = checkInternalBlockNumber; // Swallow unhandled exceptions; if needed they are handled else where\n\n      checkInternalBlockNumber.catch(error => {\n        // Don't null the dead (rejected) fetch, if it has already been updated\n        if (this._internalBlockNumber === checkInternalBlockNumber) {\n          this._internalBlockNumber = null;\n        }\n      });\n      return (yield checkInternalBlockNumber).blockNumber;\n    });\n  }\n\n  poll() {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      const pollId = nextPollId++; // Track all running promises, so we can trigger a post-poll once they are complete\n\n      const runners = [];\n      let blockNumber = null;\n\n      try {\n        blockNumber = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n      } catch (error) {\n        this.emit(\"error\", error);\n        return;\n      }\n\n      this._setFastBlockNumber(blockNumber); // Emit a poll event after we have the latest (fast) block number\n\n\n      this.emit(\"poll\", pollId, blockNumber); // If the block has not changed, meh.\n\n      if (blockNumber === this._lastBlockNumber) {\n        this.emit(\"didPoll\", pollId);\n        return;\n      } // First polling cycle, trigger a \"block\" events\n\n\n      if (this._emitted.block === -2) {\n        this._emitted.block = blockNumber - 1;\n      }\n\n      if (Math.abs(this._emitted.block - blockNumber) > 1000) {\n        logger$t.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${blockNumber})`);\n        this.emit(\"error\", logger$t.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n          blockNumber: blockNumber,\n          event: \"blockSkew\",\n          previousBlockNumber: this._emitted.block\n        }));\n        this.emit(\"block\", blockNumber);\n      } else {\n        // Notify all listener for each block that has passed\n        for (let i = this._emitted.block + 1; i <= blockNumber; i++) {\n          this.emit(\"block\", i);\n        }\n      } // The emitted block was updated, check for obsolete events\n\n\n      if (this._emitted.block !== blockNumber) {\n        this._emitted.block = blockNumber;\n        Object.keys(this._emitted).forEach(key => {\n          // The block event does not expire\n          if (key === \"block\") {\n            return;\n          } // The block we were at when we emitted this event\n\n\n          const eventBlockNumber = this._emitted[key]; // We cannot garbage collect pending transactions or blocks here\n          // They should be garbage collected by the Provider when setting\n          // \"pending\" events\n\n          if (eventBlockNumber === \"pending\") {\n            return;\n          } // Evict any transaction hashes or block hashes over 12 blocks\n          // old, since they should not return null anyways\n\n\n          if (blockNumber - eventBlockNumber > 12) {\n            delete this._emitted[key];\n          }\n        });\n      } // First polling cycle\n\n\n      if (this._lastBlockNumber === -2) {\n        this._lastBlockNumber = blockNumber - 1;\n      } // Find all transaction hashes we are waiting on\n\n\n      this._events.forEach(event => {\n        switch (event.type) {\n          case \"tx\":\n            {\n              const hash = event.hash;\n              let runner = this.getTransactionReceipt(hash).then(receipt => {\n                if (!receipt || receipt.blockNumber == null) {\n                  return null;\n                }\n\n                this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                this.emit(hash, receipt);\n                return null;\n              }).catch(error => {\n                this.emit(\"error\", error);\n              });\n              runners.push(runner);\n              break;\n            }\n\n          case \"filter\":\n            {\n              const filter = event.filter;\n              filter.fromBlock = this._lastBlockNumber + 1;\n              filter.toBlock = blockNumber;\n              const runner = this.getLogs(filter).then(logs => {\n                if (logs.length === 0) {\n                  return;\n                }\n\n                logs.forEach(log => {\n                  this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                  this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n                  this.emit(filter, log);\n                });\n              }).catch(error => {\n                this.emit(\"error\", error);\n              });\n              runners.push(runner);\n              break;\n            }\n        }\n      });\n\n      this._lastBlockNumber = blockNumber; // Once all events for this loop have been processed, emit \"didPoll\"\n\n      Promise.all(runners).then(() => {\n        this.emit(\"didPoll\", pollId);\n      }).catch(error => {\n        this.emit(\"error\", error);\n      });\n      return;\n    });\n  } // Deprecated; do not use this\n\n\n  resetEventsBlock(blockNumber) {\n    this._lastBlockNumber = blockNumber - 1;\n\n    if (this.polling) {\n      this.poll();\n    }\n  }\n\n  get network() {\n    return this._network;\n  } // This method should query the network if the underlying network\n  // can change, such as when connected to a JSON-RPC backend\n\n\n  detectNetwork() {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      return logger$t.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"provider.detectNetwork\"\n      });\n    });\n  }\n\n  getNetwork() {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      const network = yield this._ready(); // Make sure we are still connected to the same network; this is\n      // only an external call for backends which can have the underlying\n      // network change spontaneously\n\n      const currentNetwork = yield this.detectNetwork();\n\n      if (network.chainId !== currentNetwork.chainId) {\n        // We are allowing network changes, things can get complex fast;\n        // make sure you know what you are doing if you use \"any\"\n        if (this.anyNetwork) {\n          this._network = currentNetwork; // Reset all internal block number guards and caches\n\n          this._lastBlockNumber = -2;\n          this._fastBlockNumber = null;\n          this._fastBlockNumberPromise = null;\n          this._fastQueryDate = 0;\n          this._emitted.block = -2;\n          this._maxInternalBlockNumber = -1024;\n          this._internalBlockNumber = null; // The \"network\" event MUST happen before this method resolves\n          // so any events have a chance to unregister, so we stall an\n          // additional event loop before returning from /this/ call\n\n          this.emit(\"network\", currentNetwork, network);\n          yield stall(0);\n          return this._network;\n        }\n\n        const error = logger$t.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n          event: \"changed\",\n          network: network,\n          detectedNetwork: currentNetwork\n        });\n        this.emit(\"error\", error);\n        throw error;\n      }\n\n      return network;\n    });\n  }\n\n  get blockNumber() {\n    this._getInternalBlockNumber(100 + this.pollingInterval / 2).then(blockNumber => {\n      this._setFastBlockNumber(blockNumber);\n    }, error => {});\n\n    return this._fastBlockNumber != null ? this._fastBlockNumber : -1;\n  }\n\n  get polling() {\n    return this._poller != null;\n  }\n\n  set polling(value) {\n    if (value && !this._poller) {\n      this._poller = setInterval(() => {\n        this.poll();\n      }, this.pollingInterval);\n\n      if (!this._bootstrapPoll) {\n        this._bootstrapPoll = setTimeout(() => {\n          this.poll(); // We block additional polls until the polling interval\n          // is done, to prevent overwhelming the poll function\n\n          this._bootstrapPoll = setTimeout(() => {\n            // If polling was disabled, something may require a poke\n            // since starting the bootstrap poll and it was disabled\n            if (!this._poller) {\n              this.poll();\n            } // Clear out the bootstrap so we can do another\n\n\n            this._bootstrapPoll = null;\n          }, this.pollingInterval);\n        }, 0);\n      }\n    } else if (!value && this._poller) {\n      clearInterval(this._poller);\n      this._poller = null;\n    }\n  }\n\n  get pollingInterval() {\n    return this._pollingInterval;\n  }\n\n  set pollingInterval(value) {\n    if (typeof value !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n      throw new Error(\"invalid polling interval\");\n    }\n\n    this._pollingInterval = value;\n\n    if (this._poller) {\n      clearInterval(this._poller);\n      this._poller = setInterval(() => {\n        this.poll();\n      }, this._pollingInterval);\n    }\n  }\n\n  _getFastBlockNumber() {\n    const now = getTime(); // Stale block number, request a newer value\n\n    if (now - this._fastQueryDate > 2 * this._pollingInterval) {\n      this._fastQueryDate = now;\n      this._fastBlockNumberPromise = this.getBlockNumber().then(blockNumber => {\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n          this._fastBlockNumber = blockNumber;\n        }\n\n        return this._fastBlockNumber;\n      });\n    }\n\n    return this._fastBlockNumberPromise;\n  }\n\n  _setFastBlockNumber(blockNumber) {\n    // Older block, maybe a stale request\n    if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) {\n      return;\n    } // Update the time we updated the blocknumber\n\n\n    this._fastQueryDate = getTime(); // Newer block number, use  it\n\n    if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n      this._fastBlockNumber = blockNumber;\n      this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n    }\n  }\n\n  waitForTransaction(transactionHash, confirmations, timeout) {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      return this._waitForTransaction(transactionHash, confirmations == null ? 1 : confirmations, timeout || 0, null);\n    });\n  }\n\n  _waitForTransaction(transactionHash, confirmations, timeout, replaceable) {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      const receipt = yield this.getTransactionReceipt(transactionHash); // Receipt is already good\n\n      if ((receipt ? receipt.confirmations : 0) >= confirmations) {\n        return receipt;\n      } // Poll until the receipt is good...\n\n\n      return new Promise((resolve, reject) => {\n        const cancelFuncs = [];\n        let done = false;\n\n        const alreadyDone = function () {\n          if (done) {\n            return true;\n          }\n\n          done = true;\n          cancelFuncs.forEach(func => {\n            func();\n          });\n          return false;\n        };\n\n        const minedHandler = receipt => {\n          if (receipt.confirmations < confirmations) {\n            return;\n          }\n\n          if (alreadyDone()) {\n            return;\n          }\n\n          resolve(receipt);\n        };\n\n        this.on(transactionHash, minedHandler);\n        cancelFuncs.push(() => {\n          this.removeListener(transactionHash, minedHandler);\n        });\n\n        if (replaceable) {\n          let lastBlockNumber = replaceable.startBlock;\n          let scannedBlock = null;\n\n          const replaceHandler = blockNumber => __awaiter$9(this, void 0, void 0, function* () {\n            if (done) {\n              return;\n            } // Wait 1 second; this is only used in the case of a fault, so\n            // we will trade off a little bit of latency for more consistent\n            // results and fewer JSON-RPC calls\n\n\n            yield stall(1000);\n            this.getTransactionCount(replaceable.from).then(nonce => __awaiter$9(this, void 0, void 0, function* () {\n              if (done) {\n                return;\n              }\n\n              if (nonce <= replaceable.nonce) {\n                lastBlockNumber = blockNumber;\n              } else {\n                // First check if the transaction was mined\n                {\n                  const mined = yield this.getTransaction(transactionHash);\n\n                  if (mined && mined.blockNumber != null) {\n                    return;\n                  }\n                } // First time scanning. We start a little earlier for some\n                // wiggle room here to handle the eventually consistent nature\n                // of blockchain (e.g. the getTransactionCount was for a\n                // different block)\n\n                if (scannedBlock == null) {\n                  scannedBlock = lastBlockNumber - 3;\n\n                  if (scannedBlock < replaceable.startBlock) {\n                    scannedBlock = replaceable.startBlock;\n                  }\n                }\n\n                while (scannedBlock <= blockNumber) {\n                  if (done) {\n                    return;\n                  }\n\n                  const block = yield this.getBlockWithTransactions(scannedBlock);\n\n                  for (let ti = 0; ti < block.transactions.length; ti++) {\n                    const tx = block.transactions[ti]; // Successfully mined!\n\n                    if (tx.hash === transactionHash) {\n                      return;\n                    } // Matches our transaction from and nonce; its a replacement\n\n\n                    if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                      if (done) {\n                        return;\n                      } // Get the receipt of the replacement\n\n\n                      const receipt = yield this.waitForTransaction(tx.hash, confirmations); // Already resolved or rejected (prolly a timeout)\n\n                      if (alreadyDone()) {\n                        return;\n                      } // The reason we were replaced\n\n\n                      let reason = \"replaced\";\n\n                      if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                        reason = \"repriced\";\n                      } else if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                        reason = \"cancelled\";\n                      } // Explain why we were replaced\n\n\n                      reject(logger$t.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                        cancelled: reason === \"replaced\" || reason === \"cancelled\",\n                        reason,\n                        replacement: this._wrapTransaction(tx),\n                        hash: transactionHash,\n                        receipt\n                      }));\n                      return;\n                    }\n                  }\n\n                  scannedBlock++;\n                }\n              }\n\n              if (done) {\n                return;\n              }\n\n              this.once(\"block\", replaceHandler);\n            }), error => {\n              if (done) {\n                return;\n              }\n\n              this.once(\"block\", replaceHandler);\n            });\n          });\n\n          if (done) {\n            return;\n          }\n\n          this.once(\"block\", replaceHandler);\n          cancelFuncs.push(() => {\n            this.removeListener(\"block\", replaceHandler);\n          });\n        }\n\n        if (typeof timeout === \"number\" && timeout > 0) {\n          const timer = setTimeout(() => {\n            if (alreadyDone()) {\n              return;\n            }\n\n            reject(logger$t.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, {\n              timeout: timeout\n            }));\n          }, timeout);\n\n          if (timer.unref) {\n            timer.unref();\n          }\n\n          cancelFuncs.push(() => {\n            clearTimeout(timer);\n          });\n        }\n      });\n    });\n  }\n\n  getBlockNumber() {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      return this._getInternalBlockNumber(0);\n    });\n  }\n\n  getGasPrice() {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      const result = yield this.perform(\"getGasPrice\", {});\n\n      try {\n        return BigNumber.from(result);\n      } catch (error) {\n        return logger$t.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n          method: \"getGasPrice\",\n          result,\n          error\n        });\n      }\n    });\n  }\n\n  getBalance(addressOrName, blockTag) {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      const params = yield resolveProperties({\n        address: this._getAddress(addressOrName),\n        blockTag: this._getBlockTag(blockTag)\n      });\n      const result = yield this.perform(\"getBalance\", params);\n\n      try {\n        return BigNumber.from(result);\n      } catch (error) {\n        return logger$t.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n          method: \"getBalance\",\n          params,\n          result,\n          error\n        });\n      }\n    });\n  }\n\n  getTransactionCount(addressOrName, blockTag) {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      const params = yield resolveProperties({\n        address: this._getAddress(addressOrName),\n        blockTag: this._getBlockTag(blockTag)\n      });\n      const result = yield this.perform(\"getTransactionCount\", params);\n\n      try {\n        return BigNumber.from(result).toNumber();\n      } catch (error) {\n        return logger$t.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n          method: \"getTransactionCount\",\n          params,\n          result,\n          error\n        });\n      }\n    });\n  }\n\n  getCode(addressOrName, blockTag) {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      const params = yield resolveProperties({\n        address: this._getAddress(addressOrName),\n        blockTag: this._getBlockTag(blockTag)\n      });\n      const result = yield this.perform(\"getCode\", params);\n\n      try {\n        return hexlify(result);\n      } catch (error) {\n        return logger$t.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n          method: \"getCode\",\n          params,\n          result,\n          error\n        });\n      }\n    });\n  }\n\n  getStorageAt(addressOrName, position, blockTag) {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      const params = yield resolveProperties({\n        address: this._getAddress(addressOrName),\n        blockTag: this._getBlockTag(blockTag),\n        position: Promise.resolve(position).then(p => hexValue(p))\n      });\n      const result = yield this.perform(\"getStorageAt\", params);\n\n      try {\n        return hexlify(result);\n      } catch (error) {\n        return logger$t.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n          method: \"getStorageAt\",\n          params,\n          result,\n          error\n        });\n      }\n    });\n  } // This should be called by any subclass wrapping a TransactionResponse\n\n\n  _wrapTransaction(tx, hash, startBlock) {\n    if (hash != null && hexDataLength(hash) !== 32) {\n      throw new Error(\"invalid response - sendTransaction\");\n    }\n\n    const result = tx; // Check the hash we expect is the same as the hash the server reported\n\n    if (hash != null && tx.hash !== hash) {\n      logger$t.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, {\n        expectedHash: tx.hash,\n        returnedHash: hash\n      });\n    }\n\n    result.wait = (confirms, timeout) => __awaiter$9(this, void 0, void 0, function* () {\n      if (confirms == null) {\n        confirms = 1;\n      }\n\n      if (timeout == null) {\n        timeout = 0;\n      } // Get the details to detect replacement\n\n\n      let replacement = undefined;\n\n      if (confirms !== 0 && startBlock != null) {\n        replacement = {\n          data: tx.data,\n          from: tx.from,\n          nonce: tx.nonce,\n          to: tx.to,\n          value: tx.value,\n          startBlock\n        };\n      }\n\n      const receipt = yield this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n\n      if (receipt == null && confirms === 0) {\n        return null;\n      } // No longer pending, allow the polling loop to garbage collect this\n\n\n      this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n\n      if (receipt.status === 0) {\n        logger$t.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n          transactionHash: tx.hash,\n          transaction: tx,\n          receipt: receipt\n        });\n      }\n\n      return receipt;\n    });\n\n    return result;\n  }\n\n  sendTransaction(signedTransaction) {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      const hexTx = yield Promise.resolve(signedTransaction).then(t => hexlify(t));\n      const tx = this.formatter.transaction(signedTransaction);\n\n      if (tx.confirmations == null) {\n        tx.confirmations = 0;\n      }\n\n      const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n      try {\n        const hash = yield this.perform(\"sendTransaction\", {\n          signedTransaction: hexTx\n        });\n        return this._wrapTransaction(tx, hash, blockNumber);\n      } catch (error) {\n        error.transaction = tx;\n        error.transactionHash = tx.hash;\n        throw error;\n      }\n    });\n  }\n\n  _getTransactionRequest(transaction) {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      const values = yield transaction;\n      const tx = {};\n      [\"from\", \"to\"].forEach(key => {\n        if (values[key] == null) {\n          return;\n        }\n\n        tx[key] = Promise.resolve(values[key]).then(v => v ? this._getAddress(v) : null);\n      });\n      [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach(key => {\n        if (values[key] == null) {\n          return;\n        }\n\n        tx[key] = Promise.resolve(values[key]).then(v => v ? BigNumber.from(v) : null);\n      });\n      [\"type\"].forEach(key => {\n        if (values[key] == null) {\n          return;\n        }\n\n        tx[key] = Promise.resolve(values[key]).then(v => v != null ? v : null);\n      });\n\n      if (values.accessList) {\n        tx.accessList = this.formatter.accessList(values.accessList);\n      }\n\n      [\"data\"].forEach(key => {\n        if (values[key] == null) {\n          return;\n        }\n\n        tx[key] = Promise.resolve(values[key]).then(v => v ? hexlify(v) : null);\n      });\n      return this.formatter.transactionRequest(yield resolveProperties(tx));\n    });\n  }\n\n  _getFilter(filter) {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      filter = yield filter;\n      const result = {};\n\n      if (filter.address != null) {\n        result.address = this._getAddress(filter.address);\n      }\n\n      [\"blockHash\", \"topics\"].forEach(key => {\n        if (filter[key] == null) {\n          return;\n        }\n\n        result[key] = filter[key];\n      });\n      [\"fromBlock\", \"toBlock\"].forEach(key => {\n        if (filter[key] == null) {\n          return;\n        }\n\n        result[key] = this._getBlockTag(filter[key]);\n      });\n      return this.formatter.filter(yield resolveProperties(result));\n    });\n  }\n\n  call(transaction, blockTag) {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      const params = yield resolveProperties({\n        transaction: this._getTransactionRequest(transaction),\n        blockTag: this._getBlockTag(blockTag)\n      });\n      const result = yield this.perform(\"call\", params);\n\n      try {\n        return hexlify(result);\n      } catch (error) {\n        return logger$t.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n          method: \"call\",\n          params,\n          result,\n          error\n        });\n      }\n    });\n  }\n\n  estimateGas(transaction) {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      const params = yield resolveProperties({\n        transaction: this._getTransactionRequest(transaction)\n      });\n      const result = yield this.perform(\"estimateGas\", params);\n\n      try {\n        return BigNumber.from(result);\n      } catch (error) {\n        return logger$t.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n          method: \"estimateGas\",\n          params,\n          result,\n          error\n        });\n      }\n    });\n  }\n\n  _getAddress(addressOrName) {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      const address = yield this.resolveName(addressOrName);\n\n      if (address == null) {\n        logger$t.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: `resolveName(${JSON.stringify(addressOrName)})`\n        });\n      }\n\n      return address;\n    });\n  }\n\n  _getBlock(blockHashOrBlockTag, includeTransactions) {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      blockHashOrBlockTag = yield blockHashOrBlockTag; // If blockTag is a number (not \"latest\", etc), this is the block number\n\n      let blockNumber = -128;\n      const params = {\n        includeTransactions: !!includeTransactions\n      };\n\n      if (isHexString(blockHashOrBlockTag, 32)) {\n        params.blockHash = blockHashOrBlockTag;\n      } else {\n        try {\n          params.blockTag = this.formatter.blockTag(yield this._getBlockTag(blockHashOrBlockTag));\n\n          if (isHexString(params.blockTag)) {\n            blockNumber = parseInt(params.blockTag.substring(2), 16);\n          }\n        } catch (error) {\n          logger$t.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n        }\n      }\n\n      return poll(() => __awaiter$9(this, void 0, void 0, function* () {\n        const block = yield this.perform(\"getBlock\", params); // Block was not found\n\n        if (block == null) {\n          // For blockhashes, if we didn't say it existed, that blockhash may\n          // not exist. If we did see it though, perhaps from a log, we know\n          // it exists, and this node is just not caught up yet.\n          if (params.blockHash != null) {\n            if (this._emitted[\"b:\" + params.blockHash] == null) {\n              return null;\n            }\n          } // For block tags, if we are asking for a future block, we return null\n\n\n          if (params.blockTag != null) {\n            if (blockNumber > this._emitted.block) {\n              return null;\n            }\n          } // Retry on the next block\n\n\n          return undefined;\n        } // Add transactions\n\n\n        if (includeTransactions) {\n          let blockNumber = null;\n\n          for (let i = 0; i < block.transactions.length; i++) {\n            const tx = block.transactions[i];\n\n            if (tx.blockNumber == null) {\n              tx.confirmations = 0;\n            } else if (tx.confirmations == null) {\n              if (blockNumber == null) {\n                blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n              } // Add the confirmations using the fast block number (pessimistic)\n\n\n              let confirmations = blockNumber - tx.blockNumber + 1;\n\n              if (confirmations <= 0) {\n                confirmations = 1;\n              }\n\n              tx.confirmations = confirmations;\n            }\n          }\n\n          const blockWithTxs = this.formatter.blockWithTransactions(block);\n          blockWithTxs.transactions = blockWithTxs.transactions.map(tx => this._wrapTransaction(tx));\n          return blockWithTxs;\n        }\n\n        return this.formatter.block(block);\n      }), {\n        oncePoll: this\n      });\n    });\n  }\n\n  getBlock(blockHashOrBlockTag) {\n    return this._getBlock(blockHashOrBlockTag, false);\n  }\n\n  getBlockWithTransactions(blockHashOrBlockTag) {\n    return this._getBlock(blockHashOrBlockTag, true);\n  }\n\n  getTransaction(transactionHash) {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      transactionHash = yield transactionHash;\n      const params = {\n        transactionHash: this.formatter.hash(transactionHash, true)\n      };\n      return poll(() => __awaiter$9(this, void 0, void 0, function* () {\n        const result = yield this.perform(\"getTransaction\", params);\n\n        if (result == null) {\n          if (this._emitted[\"t:\" + transactionHash] == null) {\n            return null;\n          }\n\n          return undefined;\n        }\n\n        const tx = this.formatter.transactionResponse(result);\n\n        if (tx.blockNumber == null) {\n          tx.confirmations = 0;\n        } else if (tx.confirmations == null) {\n          const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval); // Add the confirmations using the fast block number (pessimistic)\n\n          let confirmations = blockNumber - tx.blockNumber + 1;\n\n          if (confirmations <= 0) {\n            confirmations = 1;\n          }\n\n          tx.confirmations = confirmations;\n        }\n\n        return this._wrapTransaction(tx);\n      }), {\n        oncePoll: this\n      });\n    });\n  }\n\n  getTransactionReceipt(transactionHash) {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      transactionHash = yield transactionHash;\n      const params = {\n        transactionHash: this.formatter.hash(transactionHash, true)\n      };\n      return poll(() => __awaiter$9(this, void 0, void 0, function* () {\n        const result = yield this.perform(\"getTransactionReceipt\", params);\n\n        if (result == null) {\n          if (this._emitted[\"t:\" + transactionHash] == null) {\n            return null;\n          }\n\n          return undefined;\n        } // \"geth-etc\" returns receipts before they are ready\n\n\n        if (result.blockHash == null) {\n          return undefined;\n        }\n\n        const receipt = this.formatter.receipt(result);\n\n        if (receipt.blockNumber == null) {\n          receipt.confirmations = 0;\n        } else if (receipt.confirmations == null) {\n          const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval); // Add the confirmations using the fast block number (pessimistic)\n\n          let confirmations = blockNumber - receipt.blockNumber + 1;\n\n          if (confirmations <= 0) {\n            confirmations = 1;\n          }\n\n          receipt.confirmations = confirmations;\n        }\n\n        return receipt;\n      }), {\n        oncePoll: this\n      });\n    });\n  }\n\n  getLogs(filter) {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      const params = yield resolveProperties({\n        filter: this._getFilter(filter)\n      });\n      const logs = yield this.perform(\"getLogs\", params);\n      logs.forEach(log => {\n        if (log.removed == null) {\n          log.removed = false;\n        }\n      });\n      return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n    });\n  }\n\n  getEtherPrice() {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      return this.perform(\"getEtherPrice\", {});\n    });\n  }\n\n  _getBlockTag(blockTag) {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      blockTag = yield blockTag;\n\n      if (typeof blockTag === \"number\" && blockTag < 0) {\n        if (blockTag % 1) {\n          logger$t.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n        }\n\n        let blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n        blockNumber += blockTag;\n\n        if (blockNumber < 0) {\n          blockNumber = 0;\n        }\n\n        return this.formatter.blockTag(blockNumber);\n      }\n\n      return this.formatter.blockTag(blockTag);\n    });\n  }\n\n  getResolver(name) {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      try {\n        const address = yield this._getResolver(name);\n\n        if (address == null) {\n          return null;\n        }\n\n        return new Resolver(this, address, name);\n      } catch (error) {\n        if (error.code === Logger.errors.CALL_EXCEPTION) {\n          return null;\n        }\n\n        return null;\n      }\n    });\n  }\n\n  _getResolver(name) {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      // Get the resolver from the blockchain\n      const network = yield this.getNetwork(); // No ENS...\n\n      if (!network.ensAddress) {\n        logger$t.throwError(\"network does not support ENS\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"ENS\",\n          network: network.name\n        });\n      } // keccak256(\"resolver(bytes32)\")\n\n\n      const transaction = {\n        to: network.ensAddress,\n        data: \"0x0178b8bf\" + namehash(name).substring(2)\n      };\n\n      try {\n        return this.formatter.callAddress(yield this.call(transaction));\n      } catch (error) {\n        if (error.code === Logger.errors.CALL_EXCEPTION) {\n          return null;\n        }\n\n        throw error;\n      }\n    });\n  }\n\n  resolveName(name) {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      name = yield name; // If it is already an address, nothing to resolve\n\n      try {\n        return Promise.resolve(this.formatter.address(name));\n      } catch (error) {\n        // If is is a hexstring, the address is bad (See #694)\n        if (isHexString(name)) {\n          throw error;\n        }\n      }\n\n      if (typeof name !== \"string\") {\n        logger$t.throwArgumentError(\"invalid ENS name\", \"name\", name);\n      } // Get the addr from the resovler\n\n\n      const resolver = yield this.getResolver(name);\n\n      if (!resolver) {\n        return null;\n      }\n\n      return yield resolver.getAddress();\n    });\n  }\n\n  lookupAddress(address) {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      address = yield address;\n      address = this.formatter.address(address);\n      const reverseName = address.substring(2).toLowerCase() + \".addr.reverse\";\n      const resolverAddress = yield this._getResolver(reverseName);\n\n      if (!resolverAddress) {\n        return null;\n      } // keccak(\"name(bytes32)\")\n\n\n      let bytes = arrayify(yield this.call({\n        to: resolverAddress,\n        data: \"0x691f3431\" + namehash(reverseName).substring(2)\n      })); // Strip off the dynamic string pointer (0x20)\n\n      if (bytes.length < 32 || !BigNumber.from(bytes.slice(0, 32)).eq(32)) {\n        return null;\n      }\n\n      bytes = bytes.slice(32); // Not a length-prefixed string\n\n      if (bytes.length < 32) {\n        return null;\n      } // Get the length of the string (from the length-prefix)\n\n\n      const length = BigNumber.from(bytes.slice(0, 32)).toNumber();\n      bytes = bytes.slice(32); // Length longer than available data\n\n      if (length > bytes.length) {\n        return null;\n      }\n\n      const name = toUtf8String(bytes.slice(0, length)); // Make sure the reverse record matches the foward record\n\n      const addr = yield this.resolveName(name);\n\n      if (addr != address) {\n        return null;\n      }\n\n      return name;\n    });\n  }\n\n  perform(method, params) {\n    return logger$t.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, {\n      operation: method\n    });\n  }\n\n  _startEvent(event) {\n    this.polling = this._events.filter(e => e.pollable()).length > 0;\n  }\n\n  _stopEvent(event) {\n    this.polling = this._events.filter(e => e.pollable()).length > 0;\n  }\n\n  _addEventListener(eventName, listener, once) {\n    const event = new Event(getEventTag$1(eventName), listener, once);\n\n    this._events.push(event);\n\n    this._startEvent(event);\n\n    return this;\n  }\n\n  on(eventName, listener) {\n    return this._addEventListener(eventName, listener, false);\n  }\n\n  once(eventName, listener) {\n    return this._addEventListener(eventName, listener, true);\n  }\n\n  emit(eventName, ...args) {\n    let result = false;\n    let stopped = [];\n    let eventTag = getEventTag$1(eventName);\n    this._events = this._events.filter(event => {\n      if (event.tag !== eventTag) {\n        return true;\n      }\n\n      setTimeout(() => {\n        event.listener.apply(this, args);\n      }, 0);\n      result = true;\n\n      if (event.once) {\n        stopped.push(event);\n        return false;\n      }\n\n      return true;\n    });\n    stopped.forEach(event => {\n      this._stopEvent(event);\n    });\n    return result;\n  }\n\n  listenerCount(eventName) {\n    if (!eventName) {\n      return this._events.length;\n    }\n\n    let eventTag = getEventTag$1(eventName);\n    return this._events.filter(event => {\n      return event.tag === eventTag;\n    }).length;\n  }\n\n  listeners(eventName) {\n    if (eventName == null) {\n      return this._events.map(event => event.listener);\n    }\n\n    let eventTag = getEventTag$1(eventName);\n    return this._events.filter(event => event.tag === eventTag).map(event => event.listener);\n  }\n\n  off(eventName, listener) {\n    if (listener == null) {\n      return this.removeAllListeners(eventName);\n    }\n\n    const stopped = [];\n    let found = false;\n    let eventTag = getEventTag$1(eventName);\n    this._events = this._events.filter(event => {\n      if (event.tag !== eventTag || event.listener != listener) {\n        return true;\n      }\n\n      if (found) {\n        return true;\n      }\n\n      found = true;\n      stopped.push(event);\n      return false;\n    });\n    stopped.forEach(event => {\n      this._stopEvent(event);\n    });\n    return this;\n  }\n\n  removeAllListeners(eventName) {\n    let stopped = [];\n\n    if (eventName == null) {\n      stopped = this._events;\n      this._events = [];\n    } else {\n      const eventTag = getEventTag$1(eventName);\n      this._events = this._events.filter(event => {\n        if (event.tag !== eventTag) {\n          return true;\n        }\n\n        stopped.push(event);\n        return false;\n      });\n    }\n\n    stopped.forEach(event => {\n      this._stopEvent(event);\n    });\n    return this;\n  }\n\n}\n\nvar __awaiter$a = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$u = new Logger(version$m);\nconst errorGas = [\"call\", \"estimateGas\"];\n\nfunction checkError(method, error, params) {\n  // Undo the \"convenience\" some nodes are attempting to prevent backwards\n  // incompatibility; maybe for v6 consider forwarding reverts as errors\n  if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n    const e = error.error;\n\n    if (e && e.message.match(\"reverted\") && isHexString(e.data)) {\n      return e.data;\n    }\n\n    logger$u.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n      error,\n      data: \"0x\"\n    });\n  }\n\n  let message = error.message;\n\n  if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof error.error.message === \"string\") {\n    message = error.error.message;\n  } else if (typeof error.body === \"string\") {\n    message = error.body;\n  } else if (typeof error.responseText === \"string\") {\n    message = error.responseText;\n  }\n\n  message = (message || \"\").toLowerCase();\n  const transaction = params.transaction || params.signedTransaction; // \"insufficient funds for gas * price + value + cost(data)\"\n\n  if (message.match(/insufficient funds|base fee exceeds gas limit/)) {\n    logger$u.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n      error,\n      method,\n      transaction\n    });\n  } // \"nonce too low\"\n\n\n  if (message.match(/nonce too low/)) {\n    logger$u.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n      error,\n      method,\n      transaction\n    });\n  } // \"replacement transaction underpriced\"\n\n\n  if (message.match(/replacement transaction underpriced/)) {\n    logger$u.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n      error,\n      method,\n      transaction\n    });\n  } // \"replacement transaction underpriced\"\n\n\n  if (message.match(/only replay-protected/)) {\n    logger$u.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n      error,\n      method,\n      transaction\n    });\n  }\n\n  if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) {\n    logger$u.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n      error,\n      method,\n      transaction\n    });\n  }\n\n  throw error;\n}\n\nfunction timer(timeout) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, timeout);\n  });\n}\n\nfunction getResult(payload) {\n  if (payload.error) {\n    // @TODO: not any\n    const error = new Error(payload.error.message);\n    error.code = payload.error.code;\n    error.data = payload.error.data;\n    throw error;\n  }\n\n  return payload.result;\n}\n\nfunction getLowerCase(value) {\n  if (value) {\n    return value.toLowerCase();\n  }\n\n  return value;\n}\n\nconst _constructorGuard$4 = {};\n\nclass JsonRpcSigner extends Signer {\n  constructor(constructorGuard, provider, addressOrIndex) {\n    logger$u.checkNew(new.target, JsonRpcSigner);\n    super();\n\n    if (constructorGuard !== _constructorGuard$4) {\n      throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n    }\n\n    defineReadOnly(this, \"provider\", provider);\n\n    if (addressOrIndex == null) {\n      addressOrIndex = 0;\n    }\n\n    if (typeof addressOrIndex === \"string\") {\n      defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n      defineReadOnly(this, \"_index\", null);\n    } else if (typeof addressOrIndex === \"number\") {\n      defineReadOnly(this, \"_index\", addressOrIndex);\n      defineReadOnly(this, \"_address\", null);\n    } else {\n      logger$u.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n    }\n  }\n\n  connect(provider) {\n    return logger$u.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n      operation: \"connect\"\n    });\n  }\n\n  connectUnchecked() {\n    return new UncheckedJsonRpcSigner(_constructorGuard$4, this.provider, this._address || this._index);\n  }\n\n  getAddress() {\n    if (this._address) {\n      return Promise.resolve(this._address);\n    }\n\n    return this.provider.send(\"eth_accounts\", []).then(accounts => {\n      if (accounts.length <= this._index) {\n        logger$u.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"getAddress\"\n        });\n      }\n\n      return this.provider.formatter.address(accounts[this._index]);\n    });\n  }\n\n  sendUncheckedTransaction(transaction) {\n    transaction = shallowCopy(transaction);\n    const fromAddress = this.getAddress().then(address => {\n      if (address) {\n        address = address.toLowerCase();\n      }\n\n      return address;\n    }); // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n    // wishes to use this, it is easy to specify explicitly, otherwise\n    // we look it up for them.\n\n    if (transaction.gasLimit == null) {\n      const estimate = shallowCopy(transaction);\n      estimate.from = fromAddress;\n      transaction.gasLimit = this.provider.estimateGas(estimate);\n    }\n\n    if (transaction.to != null) {\n      transaction.to = Promise.resolve(transaction.to).then(to => __awaiter$a(this, void 0, void 0, function* () {\n        if (to == null) {\n          return null;\n        }\n\n        const address = yield this.provider.resolveName(to);\n\n        if (address == null) {\n          logger$u.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n        }\n\n        return address;\n      }));\n    }\n\n    return resolveProperties({\n      tx: resolveProperties(transaction),\n      sender: fromAddress\n    }).then(({\n      tx,\n      sender\n    }) => {\n      if (tx.from != null) {\n        if (tx.from.toLowerCase() !== sender) {\n          logger$u.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n        }\n      } else {\n        tx.from = sender;\n      }\n\n      const hexTx = this.provider.constructor.hexlifyTransaction(tx, {\n        from: true\n      });\n      return this.provider.send(\"eth_sendTransaction\", [hexTx]).then(hash => {\n        return hash;\n      }, error => {\n        return checkError(\"sendTransaction\", error, hexTx);\n      });\n    });\n  }\n\n  signTransaction(transaction) {\n    return logger$u.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n      operation: \"signTransaction\"\n    });\n  }\n\n  sendTransaction(transaction) {\n    return __awaiter$a(this, void 0, void 0, function* () {\n      // This cannot be mined any earlier than any recent block\n      const blockNumber = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval); // Send the transaction\n\n      const hash = yield this.sendUncheckedTransaction(transaction);\n\n      try {\n        // Unfortunately, JSON-RPC only provides and opaque transaction hash\n        // for a response, and we need the actual transaction, so we poll\n        // for it; it should show up very quickly\n        return yield poll(() => __awaiter$a(this, void 0, void 0, function* () {\n          const tx = yield this.provider.getTransaction(hash);\n\n          if (tx === null) {\n            return undefined;\n          }\n\n          return this.provider._wrapTransaction(tx, hash, blockNumber);\n        }), {\n          oncePoll: this.provider\n        });\n      } catch (error) {\n        error.transactionHash = hash;\n        throw error;\n      }\n    });\n  }\n\n  signMessage(message) {\n    return __awaiter$a(this, void 0, void 0, function* () {\n      const data = typeof message === \"string\" ? toUtf8Bytes(message) : message;\n      const address = yield this.getAddress(); // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n\n      return yield this.provider.send(\"eth_sign\", [address.toLowerCase(), hexlify(data)]);\n    });\n  }\n\n  _signTypedData(domain, types, value) {\n    return __awaiter$a(this, void 0, void 0, function* () {\n      // Populate any ENS names (in-place)\n      const populated = yield TypedDataEncoder.resolveNames(domain, types, value, name => {\n        return this.provider.resolveName(name);\n      });\n      const address = yield this.getAddress();\n      return yield this.provider.send(\"eth_signTypedData_v4\", [address.toLowerCase(), JSON.stringify(TypedDataEncoder.getPayload(populated.domain, types, populated.value))]);\n    });\n  }\n\n  unlock(password) {\n    return __awaiter$a(this, void 0, void 0, function* () {\n      const provider = this.provider;\n      const address = yield this.getAddress();\n      return provider.send(\"personal_unlockAccount\", [address.toLowerCase(), password, null]);\n    });\n  }\n\n}\n\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n  sendTransaction(transaction) {\n    return this.sendUncheckedTransaction(transaction).then(hash => {\n      return {\n        hash: hash,\n        nonce: null,\n        gasLimit: null,\n        gasPrice: null,\n        data: null,\n        value: null,\n        chainId: null,\n        confirmations: 0,\n        from: null,\n        wait: confirmations => {\n          return this.provider.waitForTransaction(hash, confirmations);\n        }\n      };\n    });\n  }\n\n}\n\nconst allowedTransactionKeys$3 = {\n  chainId: true,\n  data: true,\n  gasLimit: true,\n  gasPrice: true,\n  nonce: true,\n  to: true,\n  value: true,\n  type: true,\n  accessList: true,\n  maxFeePerGas: true,\n  maxPriorityFeePerGas: true\n};\n\nclass JsonRpcProvider extends BaseProvider {\n  constructor(url, network) {\n    logger$u.checkNew(new.target, JsonRpcProvider);\n    let networkOrReady = network; // The network is unknown, query the JSON-RPC for it\n\n    if (networkOrReady == null) {\n      networkOrReady = new Promise((resolve, reject) => {\n        setTimeout(() => {\n          this.detectNetwork().then(network => {\n            resolve(network);\n          }, error => {\n            reject(error);\n          });\n        }, 0);\n      });\n    }\n\n    super(networkOrReady); // Default URL\n\n    if (!url) {\n      url = getStatic(this.constructor, \"defaultUrl\")();\n    }\n\n    if (typeof url === \"string\") {\n      defineReadOnly(this, \"connection\", Object.freeze({\n        url: url\n      }));\n    } else {\n      defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n    }\n\n    this._nextId = 42;\n  }\n\n  get _cache() {\n    if (this._eventLoopCache == null) {\n      this._eventLoopCache = {};\n    }\n\n    return this._eventLoopCache;\n  }\n\n  static defaultUrl() {\n    return \"http:/\\/localhost:8545\";\n  }\n\n  detectNetwork() {\n    if (!this._cache[\"detectNetwork\"]) {\n      this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork(); // Clear this cache at the beginning of the next event loop\n\n      setTimeout(() => {\n        this._cache[\"detectNetwork\"] = null;\n      }, 0);\n    }\n\n    return this._cache[\"detectNetwork\"];\n  }\n\n  _uncachedDetectNetwork() {\n    return __awaiter$a(this, void 0, void 0, function* () {\n      yield timer(0);\n      let chainId = null;\n\n      try {\n        chainId = yield this.send(\"eth_chainId\", []);\n      } catch (error) {\n        try {\n          chainId = yield this.send(\"net_version\", []);\n        } catch (error) {}\n      }\n\n      if (chainId != null) {\n        const getNetwork = getStatic(this.constructor, \"getNetwork\");\n\n        try {\n          return getNetwork(BigNumber.from(chainId).toNumber());\n        } catch (error) {\n          return logger$u.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n            chainId: chainId,\n            event: \"invalidNetwork\",\n            serverError: error\n          });\n        }\n      }\n\n      return logger$u.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n        event: \"noNetwork\"\n      });\n    });\n  }\n\n  getSigner(addressOrIndex) {\n    return new JsonRpcSigner(_constructorGuard$4, this, addressOrIndex);\n  }\n\n  getUncheckedSigner(addressOrIndex) {\n    return this.getSigner(addressOrIndex).connectUnchecked();\n  }\n\n  listAccounts() {\n    return this.send(\"eth_accounts\", []).then(accounts => {\n      return accounts.map(a => this.formatter.address(a));\n    });\n  }\n\n  send(method, params) {\n    const request = {\n      method: method,\n      params: params,\n      id: this._nextId++,\n      jsonrpc: \"2.0\"\n    };\n    this.emit(\"debug\", {\n      action: \"request\",\n      request: deepCopy(request),\n      provider: this\n    }); // We can expand this in the future to any call, but for now these\n    // are the biggest wins and do not require any serializing parameters.\n\n    const cache = [\"eth_chainId\", \"eth_blockNumber\"].indexOf(method) >= 0;\n\n    if (cache && this._cache[method]) {\n      return this._cache[method];\n    }\n\n    const result = fetchJson(this.connection, JSON.stringify(request), getResult).then(result => {\n      this.emit(\"debug\", {\n        action: \"response\",\n        request: request,\n        response: result,\n        provider: this\n      });\n      return result;\n    }, error => {\n      this.emit(\"debug\", {\n        action: \"response\",\n        error: error,\n        request: request,\n        provider: this\n      });\n      throw error;\n    }); // Cache the fetch, but clear it on the next event loop\n\n    if (cache) {\n      this._cache[method] = result;\n      setTimeout(() => {\n        this._cache[method] = null;\n      }, 0);\n    }\n\n    return result;\n  }\n\n  prepareRequest(method, params) {\n    switch (method) {\n      case \"getBlockNumber\":\n        return [\"eth_blockNumber\", []];\n\n      case \"getGasPrice\":\n        return [\"eth_gasPrice\", []];\n\n      case \"getBalance\":\n        return [\"eth_getBalance\", [getLowerCase(params.address), params.blockTag]];\n\n      case \"getTransactionCount\":\n        return [\"eth_getTransactionCount\", [getLowerCase(params.address), params.blockTag]];\n\n      case \"getCode\":\n        return [\"eth_getCode\", [getLowerCase(params.address), params.blockTag]];\n\n      case \"getStorageAt\":\n        return [\"eth_getStorageAt\", [getLowerCase(params.address), params.position, params.blockTag]];\n\n      case \"sendTransaction\":\n        return [\"eth_sendRawTransaction\", [params.signedTransaction]];\n\n      case \"getBlock\":\n        if (params.blockTag) {\n          return [\"eth_getBlockByNumber\", [params.blockTag, !!params.includeTransactions]];\n        } else if (params.blockHash) {\n          return [\"eth_getBlockByHash\", [params.blockHash, !!params.includeTransactions]];\n        }\n\n        return null;\n\n      case \"getTransaction\":\n        return [\"eth_getTransactionByHash\", [params.transactionHash]];\n\n      case \"getTransactionReceipt\":\n        return [\"eth_getTransactionReceipt\", [params.transactionHash]];\n\n      case \"call\":\n        {\n          const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n          return [\"eth_call\", [hexlifyTransaction(params.transaction, {\n            from: true\n          }), params.blockTag]];\n        }\n\n      case \"estimateGas\":\n        {\n          const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n          return [\"eth_estimateGas\", [hexlifyTransaction(params.transaction, {\n            from: true\n          })]];\n        }\n\n      case \"getLogs\":\n        if (params.filter && params.filter.address != null) {\n          params.filter.address = getLowerCase(params.filter.address);\n        }\n\n        return [\"eth_getLogs\", [params.filter]];\n    }\n\n    return null;\n  }\n\n  perform(method, params) {\n    return __awaiter$a(this, void 0, void 0, function* () {\n      // Legacy networks do not like the type field being passed along (which\n      // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n      if (method === \"call\" || method === \"estimateGas\") {\n        const tx = params.transaction;\n\n        if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n          // If there are no EIP-1559 properties, it might be non-EIP-a559\n          if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n            const feeData = yield this.getFeeData();\n\n            if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n              // Network doesn't know about EIP-1559 (and hence type)\n              params = shallowCopy(params);\n              params.transaction = shallowCopy(tx);\n              delete params.transaction.type;\n            }\n          }\n        }\n      }\n\n      const args = this.prepareRequest(method, params);\n\n      if (args == null) {\n        logger$u.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, {\n          operation: method\n        });\n      }\n\n      try {\n        return yield this.send(args[0], args[1]);\n      } catch (error) {\n        return checkError(method, error, params);\n      }\n    });\n  }\n\n  _startEvent(event) {\n    if (event.tag === \"pending\") {\n      this._startPending();\n    }\n\n    super._startEvent(event);\n  }\n\n  _startPending() {\n    if (this._pendingFilter != null) {\n      return;\n    }\n\n    const self = this;\n    const pendingFilter = this.send(\"eth_newPendingTransactionFilter\", []);\n    this._pendingFilter = pendingFilter;\n    pendingFilter.then(function (filterId) {\n      function poll() {\n        self.send(\"eth_getFilterChanges\", [filterId]).then(function (hashes) {\n          if (self._pendingFilter != pendingFilter) {\n            return null;\n          }\n\n          let seq = Promise.resolve();\n          hashes.forEach(function (hash) {\n            // @TODO: This should be garbage collected at some point... How? When?\n            self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n            seq = seq.then(function () {\n              return self.getTransaction(hash).then(function (tx) {\n                self.emit(\"pending\", tx);\n                return null;\n              });\n            });\n          });\n          return seq.then(function () {\n            return timer(1000);\n          });\n        }).then(function () {\n          if (self._pendingFilter != pendingFilter) {\n            self.send(\"eth_uninstallFilter\", [filterId]);\n            return;\n          }\n\n          setTimeout(function () {\n            poll();\n          }, 0);\n          return null;\n        }).catch(error => {});\n      }\n\n      poll();\n      return filterId;\n    }).catch(error => {});\n  }\n\n  _stopEvent(event) {\n    if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n      this._pendingFilter = null;\n    }\n\n    super._stopEvent(event);\n  } // Convert an ethers.js transaction into a JSON-RPC transaction\n  //  - gasLimit => gas\n  //  - All values hexlified\n  //  - All numeric values zero-striped\n  //  - All addresses are lowercased\n  // NOTE: This allows a TransactionRequest, but all values should be resolved\n  //       before this is called\n  // @TODO: This will likely be removed in future versions and prepareRequest\n  //        will be the preferred method for this.\n\n\n  static hexlifyTransaction(transaction, allowExtra) {\n    // Check only allowed properties are given\n    const allowed = shallowCopy(allowedTransactionKeys$3);\n\n    if (allowExtra) {\n      for (const key in allowExtra) {\n        if (allowExtra[key]) {\n          allowed[key] = true;\n        }\n      }\n    }\n\n    checkProperties(transaction, allowed);\n    const result = {}; // Some nodes (INFURA ropsten; INFURA mainnet is fine) do not like leading zeros.\n\n    [\"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function (key) {\n      if (transaction[key] == null) {\n        return;\n      }\n\n      const value = hexValue(transaction[key]);\n\n      if (key === \"gasLimit\") {\n        key = \"gas\";\n      }\n\n      result[key] = value;\n    });\n    [\"from\", \"to\", \"data\"].forEach(function (key) {\n      if (transaction[key] == null) {\n        return;\n      }\n\n      result[key] = hexlify(transaction[key]);\n    });\n\n    if (transaction.accessList) {\n      result[\"accessList\"] = accessListify(transaction.accessList);\n    }\n\n    return result;\n  }\n\n}\n\nlet WS = null;\n\ntry {\n  WS = WebSocket;\n\n  if (WS == null) {\n    throw new Error(\"inject please\");\n  }\n} catch (error) {\n  const logger = new Logger(version$m);\n\n  WS = function () {\n    logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n      operation: \"new WebSocket()\"\n    });\n  };\n}\n\nvar __awaiter$b = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$v = new Logger(version$m);\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicats\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\n\nlet NextId = 1; // For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\n\nclass WebSocketProvider extends JsonRpcProvider {\n  constructor(url, network) {\n    // This will be added in the future; please open an issue to expedite\n    if (network === \"any\") {\n      logger$v.throwError(\"WebSocketProvider does not support 'any' network yet\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"network:any\"\n      });\n    }\n\n    super(url, network);\n    this._pollingInterval = -1;\n    this._wsReady = false;\n    defineReadOnly(this, \"_websocket\", new WS(this.connection.url));\n    defineReadOnly(this, \"_requests\", {});\n    defineReadOnly(this, \"_subs\", {});\n    defineReadOnly(this, \"_subIds\", {});\n    defineReadOnly(this, \"_detectNetwork\", super.detectNetwork()); // Stall sending requests until the socket is open...\n\n    this._websocket.onopen = () => {\n      this._wsReady = true;\n      Object.keys(this._requests).forEach(id => {\n        this._websocket.send(this._requests[id].payload);\n      });\n    };\n\n    this._websocket.onmessage = messageEvent => {\n      const data = messageEvent.data;\n      const result = JSON.parse(data);\n\n      if (result.id != null) {\n        const id = String(result.id);\n        const request = this._requests[id];\n        delete this._requests[id];\n\n        if (result.result !== undefined) {\n          request.callback(null, result.result);\n          this.emit(\"debug\", {\n            action: \"response\",\n            request: JSON.parse(request.payload),\n            response: result.result,\n            provider: this\n          });\n        } else {\n          let error = null;\n\n          if (result.error) {\n            error = new Error(result.error.message || \"unknown error\");\n            defineReadOnly(error, \"code\", result.error.code || null);\n            defineReadOnly(error, \"response\", data);\n          } else {\n            error = new Error(\"unknown error\");\n          }\n\n          request.callback(error, undefined);\n          this.emit(\"debug\", {\n            action: \"response\",\n            error: error,\n            request: JSON.parse(request.payload),\n            provider: this\n          });\n        }\n      } else if (result.method === \"eth_subscription\") {\n        // Subscription...\n        const sub = this._subs[result.params.subscription];\n\n        if (sub) {\n          //this.emit.apply(this,                  );\n          sub.processFunc(result.params.result);\n        }\n      } else {\n        console.warn(\"this should not happen\");\n      }\n    }; // This Provider does not actually poll, but we want to trigger\n    // poll events for things that depend on them (like stalling for\n    // block and transaction lookups)\n\n\n    const fauxPoll = setInterval(() => {\n      this.emit(\"poll\");\n    }, 1000);\n\n    if (fauxPoll.unref) {\n      fauxPoll.unref();\n    }\n  }\n\n  detectNetwork() {\n    return this._detectNetwork;\n  }\n\n  get pollingInterval() {\n    return 0;\n  }\n\n  resetEventsBlock(blockNumber) {\n    logger$v.throwError(\"cannot reset events block on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n      operation: \"resetEventBlock\"\n    });\n  }\n\n  set pollingInterval(value) {\n    logger$v.throwError(\"cannot set polling interval on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n      operation: \"setPollingInterval\"\n    });\n  }\n\n  poll() {\n    return __awaiter$b(this, void 0, void 0, function* () {\n      return null;\n    });\n  }\n\n  set polling(value) {\n    if (!value) {\n      return;\n    }\n\n    logger$v.throwError(\"cannot set polling on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n      operation: \"setPolling\"\n    });\n  }\n\n  send(method, params) {\n    const rid = NextId++;\n    return new Promise((resolve, reject) => {\n      function callback(error, result) {\n        if (error) {\n          return reject(error);\n        }\n\n        return resolve(result);\n      }\n\n      const payload = JSON.stringify({\n        method: method,\n        params: params,\n        id: rid,\n        jsonrpc: \"2.0\"\n      });\n      this.emit(\"debug\", {\n        action: \"request\",\n        request: JSON.parse(payload),\n        provider: this\n      });\n      this._requests[String(rid)] = {\n        callback,\n        payload\n      };\n\n      if (this._wsReady) {\n        this._websocket.send(payload);\n      }\n    });\n  }\n\n  static defaultUrl() {\n    return \"ws:/\\/localhost:8546\";\n  }\n\n  _subscribe(tag, param, processFunc) {\n    return __awaiter$b(this, void 0, void 0, function* () {\n      let subIdPromise = this._subIds[tag];\n\n      if (subIdPromise == null) {\n        subIdPromise = Promise.all(param).then(param => {\n          return this.send(\"eth_subscribe\", param);\n        });\n        this._subIds[tag] = subIdPromise;\n      }\n\n      const subId = yield subIdPromise;\n      this._subs[subId] = {\n        tag,\n        processFunc\n      };\n    });\n  }\n\n  _startEvent(event) {\n    switch (event.type) {\n      case \"block\":\n        this._subscribe(\"block\", [\"newHeads\"], result => {\n          const blockNumber = BigNumber.from(result.number).toNumber();\n          this._emitted.block = blockNumber;\n          this.emit(\"block\", blockNumber);\n        });\n\n        break;\n\n      case \"pending\":\n        this._subscribe(\"pending\", [\"newPendingTransactions\"], result => {\n          this.emit(\"pending\", result);\n        });\n\n        break;\n\n      case \"filter\":\n        this._subscribe(event.tag, [\"logs\", this._getFilter(event.filter)], result => {\n          if (result.removed == null) {\n            result.removed = false;\n          }\n\n          this.emit(event.filter, this.formatter.filterLog(result));\n        });\n\n        break;\n\n      case \"tx\":\n        {\n          const emitReceipt = event => {\n            const hash = event.hash;\n            this.getTransactionReceipt(hash).then(receipt => {\n              if (!receipt) {\n                return;\n              }\n\n              this.emit(hash, receipt);\n            });\n          }; // In case it is already mined\n\n\n          emitReceipt(event); // To keep things simple, we start up a single newHeads subscription\n          // to keep an eye out for transactions we are watching for.\n          // Starting a subscription for an event (i.e. \"tx\") that is already\n          // running is (basically) a nop.\n\n          this._subscribe(\"tx\", [\"newHeads\"], result => {\n            this._events.filter(e => e.type === \"tx\").forEach(emitReceipt);\n          });\n\n          break;\n        }\n      // Nothing is needed\n\n      case \"debug\":\n      case \"poll\":\n      case \"willPoll\":\n      case \"didPoll\":\n      case \"error\":\n        break;\n\n      default:\n        console.log(\"unhandled:\", event);\n        break;\n    }\n  }\n\n  _stopEvent(event) {\n    let tag = event.tag;\n\n    if (event.type === \"tx\") {\n      // There are remaining transaction event listeners\n      if (this._events.filter(e => e.type === \"tx\").length) {\n        return;\n      }\n\n      tag = \"tx\";\n    } else if (this.listenerCount(event.event)) {\n      // There are remaining event listeners\n      return;\n    }\n\n    const subId = this._subIds[tag];\n\n    if (!subId) {\n      return;\n    }\n\n    delete this._subIds[tag];\n    subId.then(subId => {\n      if (!this._subs[subId]) {\n        return;\n      }\n\n      delete this._subs[subId];\n      this.send(\"eth_unsubscribe\", [subId]);\n    });\n  }\n\n  destroy() {\n    return __awaiter$b(this, void 0, void 0, function* () {\n      // Wait until we have connected before trying to disconnect\n      if (this._websocket.readyState === WS.CONNECTING) {\n        yield new Promise(resolve => {\n          this._websocket.onopen = function () {\n            resolve(true);\n          };\n\n          this._websocket.onerror = function () {\n            resolve(false);\n          };\n        });\n      } // Hangup\n      // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n\n\n      this._websocket.close(1000);\n    });\n  }\n\n}\n\nvar __awaiter$c = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$w = new Logger(version$m); // A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\n\nclass StaticJsonRpcProvider extends JsonRpcProvider {\n  detectNetwork() {\n    const _super = Object.create(null, {\n      detectNetwork: {\n        get: () => super.detectNetwork\n      }\n    });\n\n    return __awaiter$c(this, void 0, void 0, function* () {\n      let network = this.network;\n\n      if (network == null) {\n        network = yield _super.detectNetwork.call(this);\n\n        if (!network) {\n          logger$w.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, {});\n        } // If still not set, set it\n\n\n        if (this._network == null) {\n          // A static network does not support \"any\"\n          defineReadOnly(this, \"_network\", network);\n          this.emit(\"network\", network, null);\n        }\n      }\n\n      return network;\n    });\n  }\n\n}\n\nclass UrlJsonRpcProvider extends StaticJsonRpcProvider {\n  constructor(network, apiKey) {\n    logger$w.checkAbstract(new.target, UrlJsonRpcProvider); // Normalize the Network and API Key\n\n    network = getStatic(new.target, \"getNetwork\")(network);\n    apiKey = getStatic(new.target, \"getApiKey\")(apiKey);\n    const connection = getStatic(new.target, \"getUrl\")(network, apiKey);\n    super(connection, network);\n\n    if (typeof apiKey === \"string\") {\n      defineReadOnly(this, \"apiKey\", apiKey);\n    } else if (apiKey != null) {\n      Object.keys(apiKey).forEach(key => {\n        defineReadOnly(this, key, apiKey[key]);\n      });\n    }\n  }\n\n  _startPending() {\n    logger$w.warn(\"WARNING: API provider does not support pending filters\");\n  }\n\n  isCommunityResource() {\n    return false;\n  }\n\n  getSigner(address) {\n    return logger$w.throwError(\"API provider does not support signing\", Logger.errors.UNSUPPORTED_OPERATION, {\n      operation: \"getSigner\"\n    });\n  }\n\n  listAccounts() {\n    return Promise.resolve([]);\n  } // Return a defaultApiKey if null, otherwise validate the API key\n\n\n  static getApiKey(apiKey) {\n    return apiKey;\n  } // Returns the url or connection for the given network and API key. The\n  // API key will have been sanitized by the getApiKey first, so any validation\n  // or transformations can be done there.\n\n\n  static getUrl(network, apiKey) {\n    return logger$w.throwError(\"not implemented; sub-classes must override getUrl\", Logger.errors.NOT_IMPLEMENTED, {\n      operation: \"getUrl\"\n    });\n  }\n\n}\n\nvar __awaiter$d = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$x = new Logger(version$m); // This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\n\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\";\n\nclass AlchemyWebSocketProvider extends WebSocketProvider {\n  constructor(network, apiKey) {\n    const provider = new AlchemyProvider(network, apiKey);\n    const url = provider.connection.url.replace(/^http/i, \"ws\").replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n    super(url, provider.network);\n    defineReadOnly(this, \"apiKey\", provider.apiKey);\n  }\n\n  isCommunityResource() {\n    return this.apiKey === defaultApiKey;\n  }\n\n}\n\nclass AlchemyProvider extends UrlJsonRpcProvider {\n  static getWebSocketProvider(network, apiKey) {\n    return new AlchemyWebSocketProvider(network, apiKey);\n  }\n\n  static getApiKey(apiKey) {\n    if (apiKey == null) {\n      return defaultApiKey;\n    }\n\n    if (apiKey && typeof apiKey !== \"string\") {\n      logger$x.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n    }\n\n    return apiKey;\n  }\n\n  static getUrl(network, apiKey) {\n    let host = null;\n\n    switch (network.name) {\n      case \"homestead\":\n        host = \"eth-mainnet.alchemyapi.io/v2/\";\n        break;\n\n      case \"ropsten\":\n        host = \"eth-ropsten.alchemyapi.io/v2/\";\n        break;\n\n      case \"rinkeby\":\n        host = \"eth-rinkeby.alchemyapi.io/v2/\";\n        break;\n\n      case \"goerli\":\n        host = \"eth-goerli.alchemyapi.io/v2/\";\n        break;\n\n      case \"kovan\":\n        host = \"eth-kovan.alchemyapi.io/v2/\";\n        break;\n\n      case \"matic\":\n        host = \"polygon-mainnet.g.alchemy.com/v2/\";\n        break;\n\n      case \"maticmum\":\n        host = \"polygon-mumbai.g.alchemy.com/v2/\";\n        break;\n\n      default:\n        logger$x.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n    }\n\n    return {\n      allowGzip: true,\n      url: \"https:/\" + \"/\" + host + apiKey,\n      throttleCallback: (attempt, url) => {\n        if (apiKey === defaultApiKey) {\n          showThrottleMessage();\n        }\n\n        return Promise.resolve(true);\n      }\n    };\n  }\n\n  perform(method, params) {\n    const _super = Object.create(null, {\n      perform: {\n        get: () => super.perform\n      }\n    });\n\n    return __awaiter$d(this, void 0, void 0, function* () {\n      if (method === \"estimateGas\" && params.transaction.type === 2 || method === \"sendTransaction\" && params.signedTransaction.substring(0, 4) === \"0x02\") {\n        logger$x.throwError(\"AlchemyProvider does not currently support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: method,\n          transaction: params.transaction\n        });\n      }\n\n      return _super.perform.call(this, method, params);\n    });\n  }\n\n  isCommunityResource() {\n    return this.apiKey === defaultApiKey;\n  }\n\n}\n\nvar __awaiter$e = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$y = new Logger(version$m);\n\nclass CloudflareProvider extends UrlJsonRpcProvider {\n  static getApiKey(apiKey) {\n    if (apiKey != null) {\n      logger$y.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n    }\n\n    return null;\n  }\n\n  static getUrl(network, apiKey) {\n    let host = null;\n\n    switch (network.name) {\n      case \"homestead\":\n        host = \"https://cloudflare-eth.com/\";\n        break;\n\n      default:\n        logger$y.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n    }\n\n    return host;\n  }\n\n  perform(method, params) {\n    const _super = Object.create(null, {\n      perform: {\n        get: () => super.perform\n      }\n    });\n\n    return __awaiter$e(this, void 0, void 0, function* () {\n      // The Cloudflare provider does not support eth_blockNumber,\n      // so we get the latest block and pull it from that\n      if (method === \"getBlockNumber\") {\n        const block = yield _super.perform.call(this, \"getBlock\", {\n          blockTag: \"latest\"\n        });\n        return block.number;\n      }\n\n      return _super.perform.call(this, method, params);\n    });\n  }\n\n}\n\nvar __awaiter$f = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$z = new Logger(version$m); // The transaction has already been sanitized by the calls in Provider\n\nfunction getTransactionPostData(transaction) {\n  const result = {};\n\n  for (let key in transaction) {\n    if (transaction[key] == null) {\n      continue;\n    }\n\n    let value = transaction[key];\n\n    if (key === \"type\" && value === 0) {\n      continue;\n    } // Quantity-types require no leading zero, unless 0\n\n\n    if ({\n      type: true,\n      gasLimit: true,\n      gasPrice: true,\n      maxFeePerGs: true,\n      maxPriorityFeePerGas: true,\n      nonce: true,\n      value: true\n    }[key]) {\n      value = hexValue(hexlify(value));\n    } else if (key === \"accessList\") {\n      value = \"[\" + accessListify(value).map(set => {\n        return `{address:\"${set.address}\",storageKeys:[\"${set.storageKeys.join('\",\"')}\"]}`;\n      }).join(\",\") + \"]\";\n    } else {\n      value = hexlify(value);\n    }\n\n    result[key] = value;\n  }\n\n  return result;\n}\n\nfunction getResult$1(result) {\n  // getLogs, getHistory have weird success responses\n  if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n    return result.result;\n  }\n\n  if (result.status != 1 || result.message != \"OK\") {\n    const error = new Error(\"invalid response\");\n    error.result = JSON.stringify(result);\n\n    if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n      error.throttleRetry = true;\n    }\n\n    throw error;\n  }\n\n  return result.result;\n}\n\nfunction getJsonResult(result) {\n  // This response indicates we are being throttled\n  if (result && result.status == 0 && result.message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n    const error = new Error(\"throttled response\");\n    error.result = JSON.stringify(result);\n    error.throttleRetry = true;\n    throw error;\n  }\n\n  if (result.jsonrpc != \"2.0\") {\n    // @TODO: not any\n    const error = new Error(\"invalid response\");\n    error.result = JSON.stringify(result);\n    throw error;\n  }\n\n  if (result.error) {\n    // @TODO: not any\n    const error = new Error(result.error.message || \"unknown error\");\n\n    if (result.error.code) {\n      error.code = result.error.code;\n    }\n\n    if (result.error.data) {\n      error.data = result.error.data;\n    }\n\n    throw error;\n  }\n\n  return result.result;\n} // The blockTag was normalized as a string by the Provider pre-perform operations\n\n\nfunction checkLogTag(blockTag) {\n  if (blockTag === \"pending\") {\n    throw new Error(\"pending not supported\");\n  }\n\n  if (blockTag === \"latest\") {\n    return blockTag;\n  }\n\n  return parseInt(blockTag.substring(2), 16);\n}\n\nconst defaultApiKey$1 = \"9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB\";\n\nfunction checkError$1(method, error, transaction) {\n  // Undo the \"convenience\" some nodes are attempting to prevent backwards\n  // incompatibility; maybe for v6 consider forwarding reverts as errors\n  if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n    const e = error.error; // Etherscan keeps changing their string\n\n    if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n      // Etherscan prefixes the data like \"Reverted 0x1234\"\n      let data = e.data;\n\n      if (data) {\n        data = \"0x\" + data.replace(/^.*0x/i, \"\");\n      }\n\n      if (isHexString(data)) {\n        return data;\n      }\n\n      logger$z.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n        error,\n        data: \"0x\"\n      });\n    }\n  } // Get the message from any nested error structure\n\n\n  let message = error.message;\n\n  if (error.code === Logger.errors.SERVER_ERROR) {\n    if (error.error && typeof error.error.message === \"string\") {\n      message = error.error.message;\n    } else if (typeof error.body === \"string\") {\n      message = error.body;\n    } else if (typeof error.responseText === \"string\") {\n      message = error.responseText;\n    }\n  }\n\n  message = (message || \"\").toLowerCase(); // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n\n  if (message.match(/insufficient funds/)) {\n    logger$z.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n      error,\n      method,\n      transaction\n    });\n  } // \"Transaction with the same hash was already imported.\"\n\n\n  if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n    logger$z.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n      error,\n      method,\n      transaction\n    });\n  } // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n\n\n  if (message.match(/another transaction with same nonce/)) {\n    logger$z.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n      error,\n      method,\n      transaction\n    });\n  }\n\n  if (message.match(/execution failed due to an exception|execution reverted/)) {\n    logger$z.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n      error,\n      method,\n      transaction\n    });\n  }\n\n  throw error;\n}\n\nclass EtherscanProvider extends BaseProvider {\n  constructor(network, apiKey) {\n    logger$z.checkNew(new.target, EtherscanProvider);\n    super(network);\n    defineReadOnly(this, \"baseUrl\", this.getBaseUrl());\n    defineReadOnly(this, \"apiKey\", apiKey || defaultApiKey$1);\n  }\n\n  getBaseUrl() {\n    switch (this.network ? this.network.name : \"invalid\") {\n      case \"homestead\":\n        return \"https:/\\/api.etherscan.io\";\n\n      case \"ropsten\":\n        return \"https:/\\/api-ropsten.etherscan.io\";\n\n      case \"rinkeby\":\n        return \"https:/\\/api-rinkeby.etherscan.io\";\n\n      case \"kovan\":\n        return \"https:/\\/api-kovan.etherscan.io\";\n\n      case \"goerli\":\n        return \"https:/\\/api-goerli.etherscan.io\";\n    }\n\n    return logger$z.throwArgumentError(\"unsupported network\", \"network\", name);\n  }\n\n  getUrl(module, params) {\n    const query = Object.keys(params).reduce((accum, key) => {\n      const value = params[key];\n\n      if (value != null) {\n        accum += `&${key}=${value}`;\n      }\n\n      return accum;\n    }, \"\");\n    const apiKey = this.apiKey ? `&apikey=${this.apiKey}` : \"\";\n    return `${this.baseUrl}/api?module=${module}${query}${apiKey}`;\n  }\n\n  getPostUrl() {\n    return `${this.baseUrl}/api`;\n  }\n\n  getPostData(module, params) {\n    params.module = module;\n    params.apikey = this.apiKey;\n    return params;\n  }\n\n  fetch(module, params, post) {\n    return __awaiter$f(this, void 0, void 0, function* () {\n      const url = post ? this.getPostUrl() : this.getUrl(module, params);\n      const payload = post ? this.getPostData(module, params) : null;\n      const procFunc = module === \"proxy\" ? getJsonResult : getResult$1;\n      this.emit(\"debug\", {\n        action: \"request\",\n        request: url,\n        provider: this\n      });\n      const connection = {\n        url: url,\n        throttleSlotInterval: 1000,\n        throttleCallback: (attempt, url) => {\n          if (this.isCommunityResource()) {\n            showThrottleMessage();\n          }\n\n          return Promise.resolve(true);\n        }\n      };\n      let payloadStr = null;\n\n      if (payload) {\n        connection.headers = {\n          \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\"\n        };\n        payloadStr = Object.keys(payload).map(key => {\n          return `${key}=${payload[key]}`;\n        }).join(\"&\");\n      }\n\n      const result = yield fetchJson(connection, payloadStr, procFunc || getJsonResult);\n      this.emit(\"debug\", {\n        action: \"response\",\n        request: url,\n        response: deepCopy(result),\n        provider: this\n      });\n      return result;\n    });\n  }\n\n  detectNetwork() {\n    return __awaiter$f(this, void 0, void 0, function* () {\n      return this.network;\n    });\n  }\n\n  perform(method, params) {\n    const _super = Object.create(null, {\n      perform: {\n        get: () => super.perform\n      }\n    });\n\n    return __awaiter$f(this, void 0, void 0, function* () {\n      switch (method) {\n        case \"getBlockNumber\":\n          return this.fetch(\"proxy\", {\n            action: \"eth_blockNumber\"\n          });\n\n        case \"getGasPrice\":\n          return this.fetch(\"proxy\", {\n            action: \"eth_gasPrice\"\n          });\n\n        case \"getBalance\":\n          // Returns base-10 result\n          return this.fetch(\"account\", {\n            action: \"balance\",\n            address: params.address,\n            tag: params.blockTag\n          });\n\n        case \"getTransactionCount\":\n          return this.fetch(\"proxy\", {\n            action: \"eth_getTransactionCount\",\n            address: params.address,\n            tag: params.blockTag\n          });\n\n        case \"getCode\":\n          return this.fetch(\"proxy\", {\n            action: \"eth_getCode\",\n            address: params.address,\n            tag: params.blockTag\n          });\n\n        case \"getStorageAt\":\n          return this.fetch(\"proxy\", {\n            action: \"eth_getStorageAt\",\n            address: params.address,\n            position: params.position,\n            tag: params.blockTag\n          });\n\n        case \"sendTransaction\":\n          return this.fetch(\"proxy\", {\n            action: \"eth_sendRawTransaction\",\n            hex: params.signedTransaction\n          }, true).catch(error => {\n            return checkError$1(\"sendTransaction\", error, params.signedTransaction);\n          });\n\n        case \"getBlock\":\n          if (params.blockTag) {\n            return this.fetch(\"proxy\", {\n              action: \"eth_getBlockByNumber\",\n              tag: params.blockTag,\n              boolean: params.includeTransactions ? \"true\" : \"false\"\n            });\n          }\n\n          throw new Error(\"getBlock by blockHash not implemented\");\n\n        case \"getTransaction\":\n          return this.fetch(\"proxy\", {\n            action: \"eth_getTransactionByHash\",\n            txhash: params.transactionHash\n          });\n\n        case \"getTransactionReceipt\":\n          return this.fetch(\"proxy\", {\n            action: \"eth_getTransactionReceipt\",\n            txhash: params.transactionHash\n          });\n\n        case \"call\":\n          {\n            if (params.blockTag !== \"latest\") {\n              throw new Error(\"EtherscanProvider does not support blockTag for call\");\n            }\n\n            const postData = getTransactionPostData(params.transaction);\n            postData.module = \"proxy\";\n            postData.action = \"eth_call\";\n\n            try {\n              return yield this.fetch(\"proxy\", postData, true);\n            } catch (error) {\n              return checkError$1(\"call\", error, params.transaction);\n            }\n          }\n\n        case \"estimateGas\":\n          {\n            const postData = getTransactionPostData(params.transaction);\n            postData.module = \"proxy\";\n            postData.action = \"eth_estimateGas\";\n\n            try {\n              return yield this.fetch(\"proxy\", postData, true);\n            } catch (error) {\n              return checkError$1(\"estimateGas\", error, params.transaction);\n            }\n          }\n\n        case \"getLogs\":\n          {\n            const args = {\n              action: \"getLogs\"\n            };\n\n            if (params.filter.fromBlock) {\n              args.fromBlock = checkLogTag(params.filter.fromBlock);\n            }\n\n            if (params.filter.toBlock) {\n              args.toBlock = checkLogTag(params.filter.toBlock);\n            }\n\n            if (params.filter.address) {\n              args.address = params.filter.address;\n            } // @TODO: We can handle slightly more complicated logs using the logs API\n\n\n            if (params.filter.topics && params.filter.topics.length > 0) {\n              if (params.filter.topics.length > 1) {\n                logger$z.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, {\n                  topics: params.filter.topics\n                });\n              }\n\n              if (params.filter.topics.length === 1) {\n                const topic0 = params.filter.topics[0];\n\n                if (typeof topic0 !== \"string\" || topic0.length !== 66) {\n                  logger$z.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    topic0: topic0\n                  });\n                }\n\n                args.topic0 = topic0;\n              }\n            }\n\n            const logs = yield this.fetch(\"logs\", args); // Cache txHash => blockHash\n\n            let blocks = {}; // Add any missing blockHash to the logs\n\n            for (let i = 0; i < logs.length; i++) {\n              const log = logs[i];\n\n              if (log.blockHash != null) {\n                continue;\n              }\n\n              if (blocks[log.blockNumber] == null) {\n                const block = yield this.getBlock(log.blockNumber);\n\n                if (block) {\n                  blocks[log.blockNumber] = block.hash;\n                }\n              }\n\n              log.blockHash = blocks[log.blockNumber];\n            }\n\n            return logs;\n          }\n\n        case \"getEtherPrice\":\n          if (this.network.name !== \"homestead\") {\n            return 0.0;\n          }\n\n          return parseFloat((yield this.fetch(\"stats\", {\n            action: \"ethprice\"\n          })).ethusd);\n      }\n\n      return _super.perform.call(this, method, params);\n    });\n  } // Note: The `page` page parameter only allows pagination within the\n  //       10,000 window abailable without a page and offset parameter\n  //       Error: Result window is too large, PageNo x Offset size must\n  //              be less than or equal to 10000\n\n\n  getHistory(addressOrName, startBlock, endBlock) {\n    return __awaiter$f(this, void 0, void 0, function* () {\n      const params = {\n        action: \"txlist\",\n        address: yield this.resolveName(addressOrName),\n        startblock: startBlock == null ? 0 : startBlock,\n        endblock: endBlock == null ? 99999999 : endBlock,\n        sort: \"asc\"\n      };\n      const result = yield this.fetch(\"account\", params);\n      return result.map(tx => {\n        [\"contractAddress\", \"to\"].forEach(function (key) {\n          if (tx[key] == \"\") {\n            delete tx[key];\n          }\n        });\n\n        if (tx.creates == null && tx.contractAddress != null) {\n          tx.creates = tx.contractAddress;\n        }\n\n        const item = this.formatter.transactionResponse(tx);\n\n        if (tx.timeStamp) {\n          item.timestamp = parseInt(tx.timeStamp);\n        }\n\n        return item;\n      });\n    });\n  }\n\n  isCommunityResource() {\n    return this.apiKey === defaultApiKey$1;\n  }\n\n}\n\nvar __awaiter$g = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$A = new Logger(version$m);\n\nfunction now() {\n  return new Date().getTime();\n} // Returns to network as long as all agree, or null if any is null.\n// Throws an error if any two networks do not match.\n\n\nfunction checkNetworks(networks) {\n  let result = null;\n\n  for (let i = 0; i < networks.length; i++) {\n    const network = networks[i]; // Null! We do not know our network; bail.\n\n    if (network == null) {\n      return null;\n    }\n\n    if (result) {\n      // Make sure the network matches the previous networks\n      if (!(result.name === network.name && result.chainId === network.chainId && (result.ensAddress === network.ensAddress || result.ensAddress == null && network.ensAddress == null))) {\n        logger$A.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n      }\n    } else {\n      result = network;\n    }\n  }\n\n  return result;\n}\n\nfunction median(values, maxDelta) {\n  values = values.slice().sort();\n  const middle = Math.floor(values.length / 2); // Odd length; take the middle\n\n  if (values.length % 2) {\n    return values[middle];\n  } // Even length; take the average of the two middle\n\n\n  const a = values[middle - 1],\n        b = values[middle];\n\n  if (maxDelta != null && Math.abs(a - b) > maxDelta) {\n    return null;\n  }\n\n  return (a + b) / 2;\n}\n\nfunction serialize$1(value) {\n  if (value === null) {\n    return \"null\";\n  } else if (typeof value === \"number\" || typeof value === \"boolean\") {\n    return JSON.stringify(value);\n  } else if (typeof value === \"string\") {\n    return value;\n  } else if (BigNumber.isBigNumber(value)) {\n    return value.toString();\n  } else if (Array.isArray(value)) {\n    return JSON.stringify(value.map(i => serialize$1(i)));\n  } else if (typeof value === \"object\") {\n    const keys = Object.keys(value);\n    keys.sort();\n    return \"{\" + keys.map(key => {\n      let v = value[key];\n\n      if (typeof v === \"function\") {\n        v = \"[function]\";\n      } else {\n        v = serialize$1(v);\n      }\n\n      return JSON.stringify(key) + \":\" + v;\n    }).join(\",\") + \"}\";\n  }\n\n  throw new Error(\"unknown value type: \" + typeof value);\n} // Next request ID to use for emitting debug info\n\n\nlet nextRid = 1;\n\nfunction stall$1(duration) {\n  let cancel = null;\n  let timer = null;\n  let promise = new Promise(resolve => {\n    cancel = function () {\n      if (timer) {\n        clearTimeout(timer);\n        timer = null;\n      }\n\n      resolve();\n    };\n\n    timer = setTimeout(cancel, duration);\n  });\n\n  const wait = func => {\n    promise = promise.then(func);\n    return promise;\n  };\n\n  function getPromise() {\n    return promise;\n  }\n\n  return {\n    cancel,\n    getPromise,\n    wait\n  };\n}\n\nconst ForwardErrors = [Logger.errors.CALL_EXCEPTION, Logger.errors.INSUFFICIENT_FUNDS, Logger.errors.NONCE_EXPIRED, Logger.errors.REPLACEMENT_UNDERPRICED, Logger.errors.UNPREDICTABLE_GAS_LIMIT];\nconst ForwardProperties = [\"address\", \"args\", \"errorArgs\", \"errorSignature\", \"method\", \"transaction\"];\n\nfunction exposeDebugConfig(config, now) {\n  const result = {\n    weight: config.weight\n  };\n  Object.defineProperty(result, \"provider\", {\n    get: () => config.provider\n  });\n\n  if (config.start) {\n    result.start = config.start;\n  }\n\n  if (now) {\n    result.duration = now - config.start;\n  }\n\n  if (config.done) {\n    if (config.error) {\n      result.error = config.error;\n    } else {\n      result.result = config.result || null;\n    }\n  }\n\n  return result;\n}\n\nfunction normalizedTally(normalize, quorum) {\n  return function (configs) {\n    // Count the votes for each result\n    const tally = {};\n    configs.forEach(c => {\n      const value = normalize(c.result);\n\n      if (!tally[value]) {\n        tally[value] = {\n          count: 0,\n          result: c.result\n        };\n      }\n\n      tally[value].count++;\n    }); // Check for a quorum on any given result\n\n    const keys = Object.keys(tally);\n\n    for (let i = 0; i < keys.length; i++) {\n      const check = tally[keys[i]];\n\n      if (check.count >= quorum) {\n        return check.result;\n      }\n    } // No quroum\n\n\n    return undefined;\n  };\n}\n\nfunction getProcessFunc(provider, method, params) {\n  let normalize = serialize$1;\n\n  switch (method) {\n    case \"getBlockNumber\":\n      // Return the median value, unless there is (median + 1) is also\n      // present, in which case that is probably true and the median\n      // is going to be stale soon. In the event of a malicious node,\n      // the lie will be true soon enough.\n      return function (configs) {\n        const values = configs.map(c => c.result); // Get the median block number\n\n        let blockNumber = median(configs.map(c => c.result), 2);\n\n        if (blockNumber == null) {\n          return undefined;\n        }\n\n        blockNumber = Math.ceil(blockNumber); // If the next block height is present, its prolly safe to use\n\n        if (values.indexOf(blockNumber + 1) >= 0) {\n          blockNumber++;\n        } // Don't ever roll back the blockNumber\n\n\n        if (blockNumber >= provider._highestBlockNumber) {\n          provider._highestBlockNumber = blockNumber;\n        }\n\n        return provider._highestBlockNumber;\n      };\n\n    case \"getGasPrice\":\n      // Return the middle (round index up) value, similar to median\n      // but do not average even entries and choose the higher.\n      // Malicious actors must compromise 50% of the nodes to lie.\n      return function (configs) {\n        const values = configs.map(c => c.result);\n        values.sort();\n        return values[Math.floor(values.length / 2)];\n      };\n\n    case \"getEtherPrice\":\n      // Returns the median price. Malicious actors must compromise at\n      // least 50% of the nodes to lie (in a meaningful way).\n      return function (configs) {\n        return median(configs.map(c => c.result));\n      };\n    // No additional normalizing required; serialize is enough\n\n    case \"getBalance\":\n    case \"getTransactionCount\":\n    case \"getCode\":\n    case \"getStorageAt\":\n    case \"call\":\n    case \"estimateGas\":\n    case \"getLogs\":\n      break;\n    // We drop the confirmations from transactions as it is approximate\n\n    case \"getTransaction\":\n    case \"getTransactionReceipt\":\n      normalize = function (tx) {\n        if (tx == null) {\n          return null;\n        }\n\n        tx = shallowCopy(tx);\n        tx.confirmations = -1;\n        return serialize$1(tx);\n      };\n\n      break;\n    // We drop the confirmations from transactions as it is approximate\n\n    case \"getBlock\":\n      // We drop the confirmations from transactions as it is approximate\n      if (params.includeTransactions) {\n        normalize = function (block) {\n          if (block == null) {\n            return null;\n          }\n\n          block = shallowCopy(block);\n          block.transactions = block.transactions.map(tx => {\n            tx = shallowCopy(tx);\n            tx.confirmations = -1;\n            return tx;\n          });\n          return serialize$1(block);\n        };\n      } else {\n        normalize = function (block) {\n          if (block == null) {\n            return null;\n          }\n\n          return serialize$1(block);\n        };\n      }\n\n      break;\n\n    default:\n      throw new Error(\"unknown method: \" + method);\n  } // Return the result if and only if the expected quorum is\n  // satisfied and agreed upon for the final result.\n\n\n  return normalizedTally(normalize, provider.quorum);\n} // If we are doing a blockTag query, we need to make sure the backend is\n// caught up to the FallbackProvider, before sending a request to it.\n\n\nfunction waitForSync(config, blockNumber) {\n  return __awaiter$g(this, void 0, void 0, function* () {\n    const provider = config.provider;\n\n    if (provider.blockNumber != null && provider.blockNumber >= blockNumber || blockNumber === -1) {\n      return provider;\n    }\n\n    return poll(() => {\n      return new Promise((resolve, reject) => {\n        setTimeout(function () {\n          // We are synced\n          if (provider.blockNumber >= blockNumber) {\n            return resolve(provider);\n          } // We're done; just quit\n\n\n          if (config.cancelled) {\n            return resolve(null);\n          } // Try again, next block\n\n\n          return resolve(undefined);\n        }, 0);\n      });\n    }, {\n      oncePoll: provider\n    });\n  });\n}\n\nfunction getRunner(config, currentBlockNumber, method, params) {\n  return __awaiter$g(this, void 0, void 0, function* () {\n    let provider = config.provider;\n\n    switch (method) {\n      case \"getBlockNumber\":\n      case \"getGasPrice\":\n        return provider[method]();\n\n      case \"getEtherPrice\":\n        if (provider.getEtherPrice) {\n          return provider.getEtherPrice();\n        }\n\n        break;\n\n      case \"getBalance\":\n      case \"getTransactionCount\":\n      case \"getCode\":\n        if (params.blockTag && isHexString(params.blockTag)) {\n          provider = yield waitForSync(config, currentBlockNumber);\n        }\n\n        return provider[method](params.address, params.blockTag || \"latest\");\n\n      case \"getStorageAt\":\n        if (params.blockTag && isHexString(params.blockTag)) {\n          provider = yield waitForSync(config, currentBlockNumber);\n        }\n\n        return provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\");\n\n      case \"getBlock\":\n        if (params.blockTag && isHexString(params.blockTag)) {\n          provider = yield waitForSync(config, currentBlockNumber);\n        }\n\n        return provider[params.includeTransactions ? \"getBlockWithTransactions\" : \"getBlock\"](params.blockTag || params.blockHash);\n\n      case \"call\":\n      case \"estimateGas\":\n        if (params.blockTag && isHexString(params.blockTag)) {\n          provider = yield waitForSync(config, currentBlockNumber);\n        }\n\n        return provider[method](params.transaction);\n\n      case \"getTransaction\":\n      case \"getTransactionReceipt\":\n        return provider[method](params.transactionHash);\n\n      case \"getLogs\":\n        {\n          let filter = params.filter;\n\n          if (filter.fromBlock && isHexString(filter.fromBlock) || filter.toBlock && isHexString(filter.toBlock)) {\n            provider = yield waitForSync(config, currentBlockNumber);\n          }\n\n          return provider.getLogs(filter);\n        }\n    }\n\n    return logger$A.throwError(\"unknown method error\", Logger.errors.UNKNOWN_ERROR, {\n      method: method,\n      params: params\n    });\n  });\n}\n\nclass FallbackProvider extends BaseProvider {\n  constructor(providers, quorum) {\n    logger$A.checkNew(new.target, FallbackProvider);\n\n    if (providers.length === 0) {\n      logger$A.throwArgumentError(\"missing providers\", \"providers\", providers);\n    }\n\n    const providerConfigs = providers.map((configOrProvider, index) => {\n      if (Provider.isProvider(configOrProvider)) {\n        const stallTimeout = isCommunityResource(configOrProvider) ? 2000 : 750;\n        const priority = 1;\n        return Object.freeze({\n          provider: configOrProvider,\n          weight: 1,\n          stallTimeout,\n          priority\n        });\n      }\n\n      const config = shallowCopy(configOrProvider);\n\n      if (config.priority == null) {\n        config.priority = 1;\n      }\n\n      if (config.stallTimeout == null) {\n        config.stallTimeout = isCommunityResource(configOrProvider) ? 2000 : 750;\n      }\n\n      if (config.weight == null) {\n        config.weight = 1;\n      }\n\n      const weight = config.weight;\n\n      if (weight % 1 || weight > 512 || weight < 1) {\n        logger$A.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", `providers[${index}].weight`, weight);\n      }\n\n      return Object.freeze(config);\n    });\n    const total = providerConfigs.reduce((accum, c) => accum + c.weight, 0);\n\n    if (quorum == null) {\n      quorum = total / 2;\n    } else if (quorum > total) {\n      logger$A.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n    } // Are all providers' networks are known\n\n\n    let networkOrReady = checkNetworks(providerConfigs.map(c => c.provider.network)); // Not all networks are known; we must stall\n\n    if (networkOrReady == null) {\n      networkOrReady = new Promise((resolve, reject) => {\n        setTimeout(() => {\n          this.detectNetwork().then(resolve, reject);\n        }, 0);\n      });\n    }\n\n    super(networkOrReady); // Preserve a copy, so we do not get mutated\n\n    defineReadOnly(this, \"providerConfigs\", Object.freeze(providerConfigs));\n    defineReadOnly(this, \"quorum\", quorum);\n    this._highestBlockNumber = -1;\n  }\n\n  detectNetwork() {\n    return __awaiter$g(this, void 0, void 0, function* () {\n      const networks = yield Promise.all(this.providerConfigs.map(c => c.provider.getNetwork()));\n      return checkNetworks(networks);\n    });\n  }\n\n  perform(method, params) {\n    return __awaiter$g(this, void 0, void 0, function* () {\n      // Sending transactions is special; always broadcast it to all backends\n      if (method === \"sendTransaction\") {\n        const results = yield Promise.all(this.providerConfigs.map(c => {\n          return c.provider.sendTransaction(params.signedTransaction).then(result => {\n            return result.hash;\n          }, error => {\n            return error;\n          });\n        })); // Any success is good enough (other errors are likely \"already seen\" errors\n\n        for (let i = 0; i < results.length; i++) {\n          const result = results[i];\n\n          if (typeof result === \"string\") {\n            return result;\n          }\n        } // They were all an error; pick the first error\n\n\n        throw results[0];\n      } // We need to make sure we are in sync with our backends, so we need\n      // to know this before we can make a lot of calls\n\n\n      if (this._highestBlockNumber === -1 && method !== \"getBlockNumber\") {\n        yield this.getBlockNumber();\n      }\n\n      const processFunc = getProcessFunc(this, method, params); // Shuffle the providers and then sort them by their priority; we\n      // shallowCopy them since we will store the result in them too\n\n      const configs = shuffled(this.providerConfigs.map(shallowCopy));\n      configs.sort((a, b) => a.priority - b.priority);\n      const currentBlockNumber = this._highestBlockNumber;\n      let i = 0;\n      let first = true;\n\n      while (true) {\n        const t0 = now(); // Compute the inflight weight (exclude anything past)\n\n        let inflightWeight = configs.filter(c => c.runner && t0 - c.start < c.stallTimeout).reduce((accum, c) => accum + c.weight, 0); // Start running enough to meet quorum\n\n        while (inflightWeight < this.quorum && i < configs.length) {\n          const config = configs[i++];\n          const rid = nextRid++;\n          config.start = now();\n          config.staller = stall$1(config.stallTimeout);\n          config.staller.wait(() => {\n            config.staller = null;\n          });\n          config.runner = getRunner(config, currentBlockNumber, method, params).then(result => {\n            config.done = true;\n            config.result = result;\n\n            if (this.listenerCount(\"debug\")) {\n              this.emit(\"debug\", {\n                action: \"request\",\n                rid: rid,\n                backend: exposeDebugConfig(config, now()),\n                request: {\n                  method: method,\n                  params: deepCopy(params)\n                },\n                provider: this\n              });\n            }\n          }, error => {\n            config.done = true;\n            config.error = error;\n\n            if (this.listenerCount(\"debug\")) {\n              this.emit(\"debug\", {\n                action: \"request\",\n                rid: rid,\n                backend: exposeDebugConfig(config, now()),\n                request: {\n                  method: method,\n                  params: deepCopy(params)\n                },\n                provider: this\n              });\n            }\n          });\n\n          if (this.listenerCount(\"debug\")) {\n            this.emit(\"debug\", {\n              action: \"request\",\n              rid: rid,\n              backend: exposeDebugConfig(config, null),\n              request: {\n                method: method,\n                params: deepCopy(params)\n              },\n              provider: this\n            });\n          }\n\n          inflightWeight += config.weight;\n        } // Wait for anything meaningful to finish or stall out\n\n\n        const waiting = [];\n        configs.forEach(c => {\n          if (c.done || !c.runner) {\n            return;\n          }\n\n          waiting.push(c.runner);\n\n          if (c.staller) {\n            waiting.push(c.staller.getPromise());\n          }\n        });\n\n        if (waiting.length) {\n          yield Promise.race(waiting);\n        } // Check the quorum and process the results; the process function\n        // may additionally decide the quorum is not met\n\n\n        const results = configs.filter(c => c.done && c.error == null);\n\n        if (results.length >= this.quorum) {\n          const result = processFunc(results);\n\n          if (result !== undefined) {\n            // Shut down any stallers\n            configs.forEach(c => {\n              if (c.staller) {\n                c.staller.cancel();\n              }\n\n              c.cancelled = true;\n            });\n            return result;\n          }\n\n          if (!first) {\n            yield stall$1(100).getPromise();\n          }\n\n          first = false;\n        } // No result, check for errors that should be forwarded\n\n\n        const errors = configs.reduce((accum, c) => {\n          if (!c.done || c.error == null) {\n            return accum;\n          }\n\n          const code = c.error.code;\n\n          if (ForwardErrors.indexOf(code) >= 0) {\n            if (!accum[code]) {\n              accum[code] = {\n                error: c.error,\n                weight: 0\n              };\n            }\n\n            accum[code].weight += c.weight;\n          }\n\n          return accum;\n        }, {});\n        Object.keys(errors).forEach(errorCode => {\n          const tally = errors[errorCode];\n\n          if (tally.weight < this.quorum) {\n            return;\n          } // Shut down any stallers\n\n\n          configs.forEach(c => {\n            if (c.staller) {\n              c.staller.cancel();\n            }\n\n            c.cancelled = true;\n          });\n          const e = tally.error;\n          const props = {};\n          ForwardProperties.forEach(name => {\n            if (e[name] == null) {\n              return;\n            }\n\n            props[name] = e[name];\n          });\n          logger$A.throwError(e.reason || e.message, errorCode, props);\n        }); // All configs have run to completion; we will never get more data\n\n        if (configs.filter(c => !c.done).length === 0) {\n          break;\n        }\n      } // Shut down any stallers; shouldn't be any\n\n\n      configs.forEach(c => {\n        if (c.staller) {\n          c.staller.cancel();\n        }\n\n        c.cancelled = true;\n      });\n      return logger$A.throwError(\"failed to meet quorum\", Logger.errors.SERVER_ERROR, {\n        method: method,\n        params: params,\n        //results: configs.map((c) => c.result),\n        //errors: configs.map((c) => c.error),\n        results: configs.map(c => exposeDebugConfig(c)),\n        provider: this\n      });\n    });\n  }\n\n}\n\nconst IpcProvider = null;\nconst logger$B = new Logger(version$m);\nconst defaultProjectId = \"84842078b09946638c03157f83405213\";\n\nclass InfuraWebSocketProvider extends WebSocketProvider {\n  constructor(network, apiKey) {\n    const provider = new InfuraProvider(network, apiKey);\n    const connection = provider.connection;\n\n    if (connection.password) {\n      logger$B.throwError(\"INFURA WebSocket project secrets unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"InfuraProvider.getWebSocketProvider()\"\n      });\n    }\n\n    const url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n    super(url, network);\n    defineReadOnly(this, \"apiKey\", provider.projectId);\n    defineReadOnly(this, \"projectId\", provider.projectId);\n    defineReadOnly(this, \"projectSecret\", provider.projectSecret);\n  }\n\n  isCommunityResource() {\n    return this.projectId === defaultProjectId;\n  }\n\n}\n\nclass InfuraProvider extends UrlJsonRpcProvider {\n  static getWebSocketProvider(network, apiKey) {\n    return new InfuraWebSocketProvider(network, apiKey);\n  }\n\n  static getApiKey(apiKey) {\n    const apiKeyObj = {\n      apiKey: defaultProjectId,\n      projectId: defaultProjectId,\n      projectSecret: null\n    };\n\n    if (apiKey == null) {\n      return apiKeyObj;\n    }\n\n    if (typeof apiKey === \"string\") {\n      apiKeyObj.projectId = apiKey;\n    } else if (apiKey.projectSecret != null) {\n      logger$B.assertArgument(typeof apiKey.projectId === \"string\", \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n      logger$B.assertArgument(typeof apiKey.projectSecret === \"string\", \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n      apiKeyObj.projectId = apiKey.projectId;\n      apiKeyObj.projectSecret = apiKey.projectSecret;\n    } else if (apiKey.projectId) {\n      apiKeyObj.projectId = apiKey.projectId;\n    }\n\n    apiKeyObj.apiKey = apiKeyObj.projectId;\n    return apiKeyObj;\n  }\n\n  static getUrl(network, apiKey) {\n    let host = null;\n\n    switch (network ? network.name : \"unknown\") {\n      case \"homestead\":\n        host = \"mainnet.infura.io\";\n        break;\n\n      case \"ropsten\":\n        host = \"ropsten.infura.io\";\n        break;\n\n      case \"rinkeby\":\n        host = \"rinkeby.infura.io\";\n        break;\n\n      case \"kovan\":\n        host = \"kovan.infura.io\";\n        break;\n\n      case \"goerli\":\n        host = \"goerli.infura.io\";\n        break;\n\n      case \"matic\":\n        host = \"polygon-mainnet.infura.io\";\n        break;\n\n      case \"maticmum\":\n        host = \"polygon-mumbai.infura.io\";\n        break;\n\n      default:\n        logger$B.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n          argument: \"network\",\n          value: network\n        });\n    }\n\n    const connection = {\n      allowGzip: true,\n      url: \"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId,\n      throttleCallback: (attempt, url) => {\n        if (apiKey.projectId === defaultProjectId) {\n          showThrottleMessage();\n        }\n\n        return Promise.resolve(true);\n      }\n    };\n\n    if (apiKey.projectSecret != null) {\n      connection.user = \"\";\n      connection.password = apiKey.projectSecret;\n    }\n\n    return connection;\n  }\n\n  isCommunityResource() {\n    return this.projectId === defaultProjectId;\n  }\n\n} // Experimental\n\n\nclass JsonRpcBatchProvider extends JsonRpcProvider {\n  send(method, params) {\n    const request = {\n      method: method,\n      params: params,\n      id: this._nextId++,\n      jsonrpc: \"2.0\"\n    };\n\n    if (this._pendingBatch == null) {\n      this._pendingBatch = [];\n    }\n\n    const inflightRequest = {\n      request,\n      resolve: null,\n      reject: null\n    };\n    const promise = new Promise((resolve, reject) => {\n      inflightRequest.resolve = resolve;\n      inflightRequest.reject = reject;\n    });\n\n    this._pendingBatch.push(inflightRequest);\n\n    if (!this._pendingBatchAggregator) {\n      // Schedule batch for next event loop + short duration\n      this._pendingBatchAggregator = setTimeout(() => {\n        // Get teh current batch and clear it, so new requests\n        // go into the next batch\n        const batch = this._pendingBatch;\n        this._pendingBatch = null;\n        this._pendingBatchAggregator = null; // Get the request as an array of requests\n\n        const request = batch.map(inflight => inflight.request);\n        this.emit(\"debug\", {\n          action: \"requestBatch\",\n          request: deepCopy(request),\n          provider: this\n        });\n        return fetchJson(this.connection, JSON.stringify(request)).then(result => {\n          this.emit(\"debug\", {\n            action: \"response\",\n            request: request,\n            response: result,\n            provider: this\n          }); // For each result, feed it to the correct Promise, depending\n          // on whether it was a success or error\n\n          batch.forEach((inflightRequest, index) => {\n            const payload = result[index];\n\n            if (payload.error) {\n              const error = new Error(payload.error.message);\n              error.code = payload.error.code;\n              error.data = payload.error.data;\n              inflightRequest.reject(error);\n            } else {\n              inflightRequest.resolve(payload.result);\n            }\n          });\n        }, error => {\n          this.emit(\"debug\", {\n            action: \"response\",\n            error: error,\n            request: request,\n            provider: this\n          });\n          batch.forEach(inflightRequest => {\n            inflightRequest.reject(error);\n          });\n        });\n      }, 10);\n    }\n\n    return promise;\n  }\n\n}\n/* istanbul ignore file */\n\n\nconst logger$C = new Logger(version$m); // Special API key provided by Nodesmith for ethers.js\n\nconst defaultApiKey$2 = \"ETHERS_JS_SHARED\";\n\nclass NodesmithProvider extends UrlJsonRpcProvider {\n  static getApiKey(apiKey) {\n    if (apiKey && typeof apiKey !== \"string\") {\n      logger$C.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n    }\n\n    return apiKey || defaultApiKey$2;\n  }\n\n  static getUrl(network, apiKey) {\n    logger$C.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n    let host = null;\n\n    switch (network.name) {\n      case \"homestead\":\n        host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n        break;\n\n      case \"ropsten\":\n        host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n        break;\n\n      case \"rinkeby\":\n        host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n        break;\n\n      case \"goerli\":\n        host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n        break;\n\n      case \"kovan\":\n        host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n        break;\n\n      default:\n        logger$C.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n    }\n\n    return host + \"?apiKey=\" + apiKey;\n  }\n\n}\n\nconst logger$D = new Logger(version$m); // These are load-balancer-based applicatoin IDs\n\nconst defaultApplicationIds = {\n  homestead: \"6004bcd10040261633ade990\",\n  ropsten: \"6004bd4d0040261633ade991\",\n  rinkeby: \"6004bda20040261633ade994\",\n  goerli: \"6004bd860040261633ade992\"\n};\n\nclass PocketProvider extends UrlJsonRpcProvider {\n  constructor(network, apiKey) {\n    // We need a bit of creativity in the constructor because\n    // Pocket uses different default API keys based on the network\n    if (apiKey == null) {\n      const n = getStatic(new.target, \"getNetwork\")(network);\n\n      if (n) {\n        const applicationId = defaultApplicationIds[n.name];\n\n        if (applicationId) {\n          apiKey = {\n            applicationId: applicationId,\n            loadBalancer: true\n          };\n        }\n      } // If there was any issue above, we don't know this network\n\n\n      if (apiKey == null) {\n        logger$D.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n          argument: \"network\",\n          value: network\n        });\n      }\n    }\n\n    super(network, apiKey);\n  }\n\n  static getApiKey(apiKey) {\n    // Most API Providers allow null to get the default configuration, but\n    // Pocket requires the network to decide the default provider, so we\n    // rely on hijacking the constructor to add a sensible default for us\n    if (apiKey == null) {\n      logger$D.throwArgumentError(\"PocketProvider.getApiKey does not support null apiKey\", \"apiKey\", apiKey);\n    }\n\n    const apiKeyObj = {\n      applicationId: null,\n      loadBalancer: false,\n      applicationSecretKey: null\n    }; // Parse applicationId and applicationSecretKey\n\n    if (typeof apiKey === \"string\") {\n      apiKeyObj.applicationId = apiKey;\n    } else if (apiKey.applicationSecretKey != null) {\n      logger$D.assertArgument(typeof apiKey.applicationId === \"string\", \"applicationSecretKey requires an applicationId\", \"applicationId\", apiKey.applicationId);\n      logger$D.assertArgument(typeof apiKey.applicationSecretKey === \"string\", \"invalid applicationSecretKey\", \"applicationSecretKey\", \"[REDACTED]\");\n      apiKeyObj.applicationId = apiKey.applicationId;\n      apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n      apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n    } else if (apiKey.applicationId) {\n      logger$D.assertArgument(typeof apiKey.applicationId === \"string\", \"apiKey.applicationId must be a string\", \"apiKey.applicationId\", apiKey.applicationId);\n      apiKeyObj.applicationId = apiKey.applicationId;\n      apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n    } else {\n      logger$D.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n    }\n\n    return apiKeyObj;\n  }\n\n  static getUrl(network, apiKey) {\n    let host = null;\n\n    switch (network ? network.name : \"unknown\") {\n      case \"homestead\":\n        host = \"eth-mainnet.gateway.pokt.network\";\n        break;\n\n      case \"ropsten\":\n        host = \"eth-ropsten.gateway.pokt.network\";\n        break;\n\n      case \"rinkeby\":\n        host = \"eth-rinkeby.gateway.pokt.network\";\n        break;\n\n      case \"goerli\":\n        host = \"eth-goerli.gateway.pokt.network\";\n        break;\n\n      default:\n        logger$D.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n          argument: \"network\",\n          value: network\n        });\n    }\n\n    let url = null;\n\n    if (apiKey.loadBalancer) {\n      url = `https:/\\/${host}/v1/lb/${apiKey.applicationId}`;\n    } else {\n      url = `https:/\\/${host}/v1/${apiKey.applicationId}`;\n    }\n\n    const connection = {\n      url\n    }; // Initialize empty headers\n\n    connection.headers = {}; // Apply application secret key\n\n    if (apiKey.applicationSecretKey != null) {\n      connection.user = \"\";\n      connection.password = apiKey.applicationSecretKey;\n    }\n\n    return connection;\n  }\n\n  isCommunityResource() {\n    return this.applicationId === defaultApplicationIds[this.network.name];\n  }\n\n}\n\nconst logger$E = new Logger(version$m);\nlet _nextId = 1;\n\nfunction buildWeb3LegacyFetcher(provider, sendFunc) {\n  const fetcher = \"Web3LegacyFetcher\";\n  return function (method, params) {\n    // Metamask complains about eth_sign (and on some versions hangs)\n    if (method == \"eth_sign\" && (provider.isMetaMask || provider.isStatus)) {\n      // https://github.com/ethereum/go-ethereum/wiki/Management-APIs#personal_sign\n      method = \"personal_sign\";\n      params = [params[1], params[0]];\n    }\n\n    const request = {\n      method: method,\n      params: params,\n      id: _nextId++,\n      jsonrpc: \"2.0\"\n    };\n    return new Promise((resolve, reject) => {\n      this.emit(\"debug\", {\n        action: \"request\",\n        fetcher,\n        request: deepCopy(request),\n        provider: this\n      });\n      sendFunc(request, (error, response) => {\n        if (error) {\n          this.emit(\"debug\", {\n            action: \"response\",\n            fetcher,\n            error,\n            request,\n            provider: this\n          });\n          return reject(error);\n        }\n\n        this.emit(\"debug\", {\n          action: \"response\",\n          fetcher,\n          request,\n          response,\n          provider: this\n        });\n\n        if (response.error) {\n          const error = new Error(response.error.message);\n          error.code = response.error.code;\n          error.data = response.error.data;\n          return reject(error);\n        }\n\n        resolve(response.result);\n      });\n    });\n  };\n}\n\nfunction buildEip1193Fetcher(provider) {\n  return function (method, params) {\n    if (params == null) {\n      params = [];\n    } // Metamask complains about eth_sign (and on some versions hangs)\n\n\n    if (method == \"eth_sign\" && (provider.isMetaMask || provider.isStatus)) {\n      // https://github.com/ethereum/go-ethereum/wiki/Management-APIs#personal_sign\n      method = \"personal_sign\";\n      params = [params[1], params[0]];\n    }\n\n    const request = {\n      method,\n      params\n    };\n    this.emit(\"debug\", {\n      action: \"request\",\n      fetcher: \"Eip1193Fetcher\",\n      request: deepCopy(request),\n      provider: this\n    });\n    return provider.request(request).then(response => {\n      this.emit(\"debug\", {\n        action: \"response\",\n        fetcher: \"Eip1193Fetcher\",\n        request,\n        response,\n        provider: this\n      });\n      return response;\n    }, error => {\n      this.emit(\"debug\", {\n        action: \"response\",\n        fetcher: \"Eip1193Fetcher\",\n        request,\n        error,\n        provider: this\n      });\n      throw error;\n    });\n  };\n}\n\nclass Web3Provider extends JsonRpcProvider {\n  constructor(provider, network) {\n    logger$E.checkNew(new.target, Web3Provider);\n\n    if (provider == null) {\n      logger$E.throwArgumentError(\"missing provider\", \"provider\", provider);\n    }\n\n    let path = null;\n    let jsonRpcFetchFunc = null;\n    let subprovider = null;\n\n    if (typeof provider === \"function\") {\n      path = \"unknown:\";\n      jsonRpcFetchFunc = provider;\n    } else {\n      path = provider.host || provider.path || \"\";\n\n      if (!path && provider.isMetaMask) {\n        path = \"metamask\";\n      }\n\n      subprovider = provider;\n\n      if (provider.request) {\n        if (path === \"\") {\n          path = \"eip-1193:\";\n        }\n\n        jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n      } else if (provider.sendAsync) {\n        jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n      } else if (provider.send) {\n        jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n      } else {\n        logger$E.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n      }\n\n      if (!path) {\n        path = \"unknown:\";\n      }\n    }\n\n    super(path, network);\n    defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n    defineReadOnly(this, \"provider\", subprovider);\n  }\n\n  send(method, params) {\n    return this.jsonRpcFetchFunc(method, params);\n  }\n\n}\n\nconst logger$F = new Logger(version$m); ////////////////////////\n// Helper Functions\n\nfunction getDefaultProvider(network, options) {\n  if (network == null) {\n    network = \"homestead\";\n  } // If passed a URL, figure out the right type of provider based on the scheme\n\n\n  if (typeof network === \"string\") {\n    // @TODO: Add support for IpcProvider; maybe if it ends in \".ipc\"?\n    // Handle http and ws (and their secure variants)\n    const match = network.match(/^(ws|http)s?:/i);\n\n    if (match) {\n      switch (match[1]) {\n        case \"http\":\n          return new JsonRpcProvider(network);\n\n        case \"ws\":\n          return new WebSocketProvider(network);\n\n        default:\n          logger$F.throwArgumentError(\"unsupported URL scheme\", \"network\", network);\n      }\n    }\n  }\n\n  const n = getNetwork(network);\n\n  if (!n || !n._defaultProvider) {\n    logger$F.throwError(\"unsupported getDefaultProvider network\", Logger.errors.NETWORK_ERROR, {\n      operation: \"getDefaultProvider\",\n      network: network\n    });\n  }\n\n  return n._defaultProvider({\n    FallbackProvider,\n    AlchemyProvider,\n    CloudflareProvider,\n    EtherscanProvider,\n    InfuraProvider,\n    JsonRpcProvider,\n    NodesmithProvider,\n    PocketProvider,\n    Web3Provider,\n    IpcProvider\n  }, options);\n}\n\nvar index$3 = {\n  __proto__: null,\n  Provider: Provider,\n  BaseProvider: BaseProvider,\n  Resolver: Resolver,\n  UrlJsonRpcProvider: UrlJsonRpcProvider,\n  FallbackProvider: FallbackProvider,\n  AlchemyProvider: AlchemyProvider,\n  AlchemyWebSocketProvider: AlchemyWebSocketProvider,\n  CloudflareProvider: CloudflareProvider,\n  EtherscanProvider: EtherscanProvider,\n  InfuraProvider: InfuraProvider,\n  InfuraWebSocketProvider: InfuraWebSocketProvider,\n  JsonRpcProvider: JsonRpcProvider,\n  JsonRpcBatchProvider: JsonRpcBatchProvider,\n  NodesmithProvider: NodesmithProvider,\n  PocketProvider: PocketProvider,\n  StaticJsonRpcProvider: StaticJsonRpcProvider,\n  Web3Provider: Web3Provider,\n  WebSocketProvider: WebSocketProvider,\n  IpcProvider: IpcProvider,\n  JsonRpcSigner: JsonRpcSigner,\n  getDefaultProvider: getDefaultProvider,\n  getNetwork: getNetwork,\n  isCommunityResource: isCommunityResource,\n  isCommunityResourcable: isCommunityResourcable,\n  showThrottleMessage: showThrottleMessage,\n  Formatter: Formatter\n};\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\nconst Zeros$1 = \"0000000000000000000000000000000000000000000000000000000000000000\";\n\nfunction _pack(type, value, isArray) {\n  switch (type) {\n    case \"address\":\n      if (isArray) {\n        return zeroPad(value, 32);\n      }\n\n      return arrayify(value);\n\n    case \"string\":\n      return toUtf8Bytes(value);\n\n    case \"bytes\":\n      return arrayify(value);\n\n    case \"bool\":\n      value = value ? \"0x01\" : \"0x00\";\n\n      if (isArray) {\n        return zeroPad(value, 32);\n      }\n\n      return arrayify(value);\n  }\n\n  let match = type.match(regexNumber);\n\n  if (match) {\n    //let signed = (match[1] === \"int\")\n    let size = parseInt(match[2] || \"256\");\n\n    if (match[2] && String(size) !== match[2] || size % 8 !== 0 || size === 0 || size > 256) {\n      throw new Error(\"invalid number type - \" + type);\n    }\n\n    if (isArray) {\n      size = 256;\n    }\n\n    value = BigNumber.from(value).toTwos(size);\n    return zeroPad(value, size / 8);\n  }\n\n  match = type.match(regexBytes);\n\n  if (match) {\n    const size = parseInt(match[1]);\n\n    if (String(size) !== match[1] || size === 0 || size > 32) {\n      throw new Error(\"invalid bytes type - \" + type);\n    }\n\n    if (arrayify(value).byteLength !== size) {\n      throw new Error(\"invalid value for \" + type);\n    }\n\n    if (isArray) {\n      return arrayify((value + Zeros$1).substring(0, 66));\n    }\n\n    return value;\n  }\n\n  match = type.match(regexArray);\n\n  if (match && Array.isArray(value)) {\n    const baseType = match[1];\n    const count = parseInt(match[2] || String(value.length));\n\n    if (count != value.length) {\n      throw new Error(\"invalid value for \" + type);\n    }\n\n    const result = [];\n    value.forEach(function (value) {\n      result.push(_pack(baseType, value, true));\n    });\n    return concat(result);\n  }\n\n  throw new Error(\"invalid type - \" + type);\n} // @TODO: Array Enum\n\n\nfunction pack$1(types, values) {\n  if (types.length != values.length) {\n    throw new Error(\"type/value count mismatch\");\n  }\n\n  const tight = [];\n  types.forEach(function (type, index) {\n    tight.push(_pack(type, values[index]));\n  });\n  return hexlify(concat(tight));\n}\n\nfunction keccak256$1(types, values) {\n  return keccak256(pack$1(types, values));\n}\n\nfunction sha256$2(types, values) {\n  return sha256$1(pack$1(types, values));\n}\n\nconst version$n = \"units/5.4.0\";\nconst logger$G = new Logger(version$n);\nconst names = [\"wei\", \"kwei\", \"mwei\", \"gwei\", \"szabo\", \"finney\", \"ether\"]; // Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\n\nfunction commify(value) {\n  const comps = String(value).split(\".\");\n\n  if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || comps[1] && !comps[1].match(/^[0-9]*$/) || value === \".\" || value === \"-.\") {\n    logger$G.throwArgumentError(\"invalid value\", \"value\", value);\n  } // Make sure we have at least one whole digit (0 if none)\n\n\n  let whole = comps[0];\n  let negative = \"\";\n\n  if (whole.substring(0, 1) === \"-\") {\n    negative = \"-\";\n    whole = whole.substring(1);\n  } // Make sure we have at least 1 whole digit with no leading zeros\n\n\n  while (whole.substring(0, 1) === \"0\") {\n    whole = whole.substring(1);\n  }\n\n  if (whole === \"\") {\n    whole = \"0\";\n  }\n\n  let suffix = \"\";\n\n  if (comps.length === 2) {\n    suffix = \".\" + (comps[1] || \"0\");\n  }\n\n  while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n    suffix = suffix.substring(0, suffix.length - 1);\n  }\n\n  const formatted = [];\n\n  while (whole.length) {\n    if (whole.length <= 3) {\n      formatted.unshift(whole);\n      break;\n    } else {\n      const index = whole.length - 3;\n      formatted.unshift(whole.substring(index));\n      whole = whole.substring(0, index);\n    }\n  }\n\n  return negative + formatted.join(\",\") + suffix;\n}\n\nfunction formatUnits(value, unitName) {\n  if (typeof unitName === \"string\") {\n    const index = names.indexOf(unitName);\n\n    if (index !== -1) {\n      unitName = 3 * index;\n    }\n  }\n\n  return formatFixed(value, unitName != null ? unitName : 18);\n}\n\nfunction parseUnits(value, unitName) {\n  if (typeof value !== \"string\") {\n    logger$G.throwArgumentError(\"value must be a string\", \"value\", value);\n  }\n\n  if (typeof unitName === \"string\") {\n    const index = names.indexOf(unitName);\n\n    if (index !== -1) {\n      unitName = 3 * index;\n    }\n  }\n\n  return parseFixed(value, unitName != null ? unitName : 18);\n}\n\nfunction formatEther(wei) {\n  return formatUnits(wei, 18);\n}\n\nfunction parseEther(ether) {\n  return parseUnits(ether, 18);\n}\n\nvar utils$1 = {\n  __proto__: null,\n  AbiCoder: AbiCoder,\n  defaultAbiCoder: defaultAbiCoder,\n  Fragment: Fragment,\n  ConstructorFragment: ConstructorFragment,\n  ErrorFragment: ErrorFragment,\n  EventFragment: EventFragment,\n  FunctionFragment: FunctionFragment,\n  ParamType: ParamType,\n  FormatTypes: FormatTypes,\n  checkResultErrors: checkResultErrors,\n  Logger: Logger,\n  RLP: index,\n  _fetchData: _fetchData,\n  fetchJson: fetchJson,\n  poll: poll,\n  checkProperties: checkProperties,\n  deepCopy: deepCopy,\n  defineReadOnly: defineReadOnly,\n  getStatic: getStatic,\n  resolveProperties: resolveProperties,\n  shallowCopy: shallowCopy,\n  arrayify: arrayify,\n  concat: concat,\n  stripZeros: stripZeros,\n  zeroPad: zeroPad,\n  isBytes: isBytes,\n  isBytesLike: isBytesLike,\n  defaultPath: defaultPath,\n  HDNode: HDNode,\n  SigningKey: SigningKey,\n  Interface: Interface,\n  LogDescription: LogDescription,\n  TransactionDescription: TransactionDescription,\n  base58: Base58,\n  base64: index$2,\n  hexlify: hexlify,\n  isHexString: isHexString,\n  hexConcat: hexConcat,\n  hexStripZeros: hexStripZeros,\n  hexValue: hexValue,\n  hexZeroPad: hexZeroPad,\n  hexDataLength: hexDataLength,\n  hexDataSlice: hexDataSlice,\n  nameprep: nameprep,\n  _toEscapedUtf8String: _toEscapedUtf8String,\n  toUtf8Bytes: toUtf8Bytes,\n  toUtf8CodePoints: toUtf8CodePoints,\n  toUtf8String: toUtf8String,\n  Utf8ErrorFuncs: Utf8ErrorFuncs,\n  formatBytes32String: formatBytes32String,\n  parseBytes32String: parseBytes32String,\n  hashMessage: hashMessage,\n  namehash: namehash,\n  isValidName: isValidName,\n  id: id,\n  _TypedDataEncoder: TypedDataEncoder,\n  getAddress: getAddress,\n  getIcapAddress: getIcapAddress,\n  getContractAddress: getContractAddress,\n  getCreate2Address: getCreate2Address,\n  isAddress: isAddress,\n  formatEther: formatEther,\n  parseEther: parseEther,\n  formatUnits: formatUnits,\n  parseUnits: parseUnits,\n  commify: commify,\n  computeHmac: computeHmac,\n  keccak256: keccak256,\n  ripemd160: ripemd160$1,\n  sha256: sha256$1,\n  sha512: sha512$1,\n  randomBytes: randomBytes,\n  shuffled: shuffled,\n  solidityPack: pack$1,\n  solidityKeccak256: keccak256$1,\n  soliditySha256: sha256$2,\n  splitSignature: splitSignature,\n  joinSignature: joinSignature,\n  accessListify: accessListify,\n  parseTransaction: parse,\n  serializeTransaction: serialize,\n\n  get TransactionTypes() {\n    return TransactionTypes;\n  },\n\n  getJsonWalletAddress: getJsonWalletAddress,\n  computeAddress: computeAddress,\n  recoverAddress: recoverAddress,\n  computePublicKey: computePublicKey,\n  recoverPublicKey: recoverPublicKey,\n  verifyMessage: verifyMessage,\n  verifyTypedData: verifyTypedData,\n  getAccountPath: getAccountPath,\n  mnemonicToEntropy: mnemonicToEntropy,\n  entropyToMnemonic: entropyToMnemonic,\n  isValidMnemonic: isValidMnemonic,\n  mnemonicToSeed: mnemonicToSeed,\n\n  get SupportedAlgorithm() {\n    return SupportedAlgorithm;\n  },\n\n  get UnicodeNormalizationForm() {\n    return UnicodeNormalizationForm;\n  },\n\n  get Utf8ErrorReason() {\n    return Utf8ErrorReason;\n  },\n\n  Indexed: Indexed\n};\nconst version$o = \"ethers/5.4.5\";\nconst logger$H = new Logger(version$o);\nvar ethers = {\n  __proto__: null,\n  Signer: Signer,\n  Wallet: Wallet,\n  VoidSigner: VoidSigner,\n  getDefaultProvider: getDefaultProvider,\n  providers: index$3,\n  BaseContract: BaseContract,\n  Contract: Contract,\n  ContractFactory: ContractFactory,\n  BigNumber: BigNumber,\n  FixedNumber: FixedNumber,\n  constants: index$1,\n\n  get errors() {\n    return ErrorCode;\n  },\n\n  logger: logger$H,\n  utils: utils$1,\n  wordlists: wordlists,\n  version: version$o,\n  Wordlist: Wordlist\n};\nconst byoaContractAddress = `0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512`;\nconst providerNetwork = `http://localhost:8545`;\nconst jrpcProvider = new JsonRpcProvider('https://eth-mainnet.alchemyapi.io/v2/Uo717K-DDAxlSM5gXM-zgv678k0aMZH5', 'mainnet');\nwindow.byoa = {\n  context: {\n    ethers: ethers,\n    provider: getDefaultProvider('https://eth-mainnet.alchemyapi.io/v2/Uo717K-DDAxlSM5gXM-zgv678k0aMZH5'),\n    jrpcProvider: jrpcProvider,\n    dataPipeFn: data => {\n      return data;\n    },\n    account: {\n      address: null\n    }\n  }\n};\nconst useStyles = makeStyles({\n  root: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    minWidth: '100vw',\n    minHeight: '100vh',\n    background: 'rgba(50,0,0,0.25)',\n    pointerEvents: 'none'\n  },\n  speedDial: {\n    position: 'fixed',\n    bottom: 20,\n    right: 20,\n    zIndex: 1000000000\n  },\n  byoaButton: {}\n});\nconst providerOptions = {\n  walletconnect: {\n    display: {\n      name: \"Mobile\"\n    },\n    package: WalletConnectProvider,\n    options: {\n      infuraId: \"6430aa46e9354b91bea44e464af71f7a\"\n    }\n  }\n};\nconst web3Modal = new Web3Modal({\n  network: providerNetwork,\n  cacheProvider: true,\n  disableInjectedProvider: false,\n  providerOptions\n});\n\nconst ByoaSDK = props => {\n  const classes = useStyles();\n  const [translateDial, setTranslateDial] = useState({\n    x: 0,\n    y: 0\n  });\n  const [dialDirection, setDialDirection] = useState(\"up\");\n  const [openDial, setOpenDial] = useState(false);\n  const [provider, setProvider] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const [accountAddress, setAccountAddress] = useState(null);\n  const [installedApps, setInstalledApps] = useState([]);\n\n  const connectWallet = async () => {\n    try {\n      let p = provider;\n\n      if (p === null) {\n        p = await web3Modal.connect();\n\n        if (p === null) {\n          throw new Error('Unable to connect provider to modal');\n        }\n\n        p.on('accountsChanged', e => {\n          console.log(e);\n          disconnectWallet();\n        });\n        p.on(\"chainChanged\", chainId => {\n          console.log(\"chain \" + chainId);\n        });\n        setProvider(p);\n      }\n\n      let w3 = web3;\n\n      if (w3 === null) {\n        w3 = new Web3(p);\n\n        if (w3 === null) {\n          throw new Error('Unable to connect web3');\n        }\n\n        setWeb3(w3);\n      }\n\n      const accounts = await p.request({\n        method: 'eth_accounts'\n      });\n\n      if (accounts.length > 0) {\n        setAccountAddress(accounts[0]);\n        setTimeout(async () => {\n          refreshMyApps(accounts[0]);\n        }, 2000);\n      }\n    } catch (error) {\n      console.log(error);\n      alert('Unable to connect wallet. Please try again.');\n    }\n  };\n\n  const disconnectWallet = async () => {\n    await web3Modal.clearCachedProvider();\n    setProvider(null);\n    setAccountAddress(null);\n  };\n\n  const getTokenMetadata = async uri => {\n    return new Promise(resolve => {\n      resolve({\n        meta: uri,\n        image: \"ipfs://QmYoSTehmdFUnSYCFrYdvSrEtNGy9U5gWEfroCTMGecHKw/0.png\",\n        byoa: {\n          browser: {\n            uri: \"http://localhost:3000/scripts/example1.js\",\n            target: \"host\"\n          }\n        }\n      });\n    });\n  };\n\n  const transformIPFSToPinned = ipfsURI => {\n    return `${ipfsURI}`;\n  };\n\n  const refreshMyApps = async addressHelper => {\n    let w3 = new Web3(providerNetwork);\n\n    try {\n      let contract = new w3.eth.Contract(abi$1.abi, byoaContractAddress);\n      let myTokenIds = await contract.methods.walletOfOwner(accountAddress ? accountAddress : addressHelper).call();\n      console.log(myTokenIds);\n      let appLUT = {};\n      let allInstalls = [];\n\n      for (var i = 0; i < myTokenIds.length; i++) {\n        let tid = parseInt(myTokenIds[i]);\n        let appIdForToken = await contract.methods.getAppIdByTokenId(tid).call();\n        let directTokenURI = await contract.methods.tokenURI(tid).call();\n        let tokenMeta = await getTokenMetadata(directTokenURI);\n\n        if (appLUT[appIdForToken] !== null) {\n          let appDetails = await contract.methods.getAppDetailsById(parseInt(appIdForToken)).call();\n          appLUT[appIdForToken] = {\n            id: appIdForToken,\n            name: appDetails[0],\n            description: appDetails[1],\n            tokenURI: appDetails[2],\n            owner: appDetails[3],\n            price: parseInt(appDetails[4]),\n            address: byoaContractAddress,\n            version: 'beta v0.1'\n          };\n        }\n\n        let ia = {\n          id: tid,\n          tokenURI: directTokenURI,\n          app: appLUT[appIdForToken],\n          imageURI: tokenMeta.image,\n          byoaDetails: {\n            uri: tokenMeta.byoa.browser.uri,\n            target: tokenMeta.byoa.browser.target\n          }\n        };\n        allInstalls.push(ia);\n      }\n\n      console.log(allInstalls);\n      setInstalledApps(allInstalls);\n    } catch (error) {\n      console.log(`Error fetching apps: ${error}`);\n    }\n  };\n\n  return createElement(Box, {\n    className: classes.root\n  }, createElement(Container, {\n    className: classes.speedDial\n  }, createElement(DragMove, {\n    onDragMove: e => {\n      setTranslateDial({\n        x: translateDial.x + e.movementX,\n        y: translateDial.y + e.movementY\n      });\n\n      if (e.clientY < 200) {\n        if (dialDirection !== \"down\") setDialDirection(\"down\");\n      }\n\n      if (e.clientY > 200) {\n        if (dialDirection !== \"up\") setDialDirection(\"up\");\n      }\n    }\n  }, createElement(SpeedDial, {\n    style: {\n      transform: `translateX(${translateDial.x}px) translateY(${translateDial.y}px)`\n    },\n    ariaLabel: \"BYOA Speed Dial\",\n    hidden: false,\n    icon: createElement(Typography, {\n      className: classes.byoaButton\n    }, \"RUN\"),\n    open: openDial,\n    onOpen: () => {\n      setOpenDial(true);\n    },\n    onClose: () => {\n      setOpenDial(false);\n    },\n    onClick: () => {},\n    direction: dialDirection\n  }, createElement(SpeedDialAction, {\n    key: 'sda-connect-wallet',\n    icon: createElement(AccountBalanceWalletIcon, null),\n    tooltipTitle: 'Connect Wallet',\n    onClick: () => {\n      connectWallet();\n    }\n  }), installedApps.map((installedApp, i) => createElement(SpeedDialAction, {\n    key: `sd-action-${installedApp.id}-${i}`,\n    icon: createElement(PetsIcon, null),\n    tooltipTitle: `${installedApp.app.name} (#${installedApp.id})`,\n    onClick: () => {\n      let scriptID = `byoa-${installedApp.id}-${installedApp.app.id}`;\n      const existingApp = document.getElementById(scriptID);\n\n      if (!existingApp) {\n        const script = document.createElement('script');\n        script.src = transformIPFSToPinned(installedApp.byoaDetails.uri);\n        script.id = scriptID;\n\n        if (installedApp.byoaDetails.target == \"host\") {\n          document.body.appendChild(script);\n\n          script.onload = () => {\n            console.log('loaded script');\n          };\n        }\n      }\n    }\n  }))))));\n};\n\nexport { ByoaSDK };","map":{"version":3,"sources":["/Users/pagreczner/src/mallows/react-libraries/byoa-sdk/dist/index.modern.js"],"names":["makeStyles","Box","Container","Typography","SpeedDial","SpeedDialAction","React__default","useState","createElement","AccountBalanceWalletIcon","WalletConnectProvider","PetsIcon","Web3","Web3Modal","DragMove","props","onPointerDown","onPointerUp","onPointerMove","onDragMove","children","style","className","isDragging","setIsDragging","handlePointerDown","e","handlePointerUp","handlePointerMove","defaultProps","_format","contractName","sourceName","abi","inputs","stateMutability","type","anonymous","indexed","internalType","name","outputs","bytecode","deployedBytecode","linkReferences","deployedLinkReferences","abi$1","commonjsGlobal","globalThis","window","global","self","createCommonjsModule","fn","module","exports","getCjsExportFromNamespace","n","_nodeResolve_empty","_nodeResolve_empty$1","__proto__","require$$0","bn","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","negative","words","length","red","_init","wordSize","Buffer","num","Array","isArray","max","left","right","cmp","min","init","_initNumber","_initArray","toString","replace","start","_parseHex","_parseBase","toArray","Math","ceil","i","j","w","off","strip","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","r","parseLength","parseBase","str","end","mul","len","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","b","q","andln","iushrn","clz32","_countBits","t","_zeroBits","bitLength","hi","toBitArray","bit","wbit","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","a","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","add","sub","smallMulTo","lo","k","ncarry","rword","maxJ","comb10MulTo","o","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","fftm","FFTM","mulp","mulTo","x","y","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","bhiBits","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","ireduce","rlen","split","imulK","undefined","_strip","input","K256","call","output","outLen","prev","next","P224","P192","P25519","_prime","prime","imod","mod3","one","nOne","lpow","z","inv","windowSize","wnd","current","currentLen","mont","Mont","rinv","minv","u","version","_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","error","_logLevel","_globalLogger","_checkNormalize","missing","forEach","form","normalize","push","join","String","fromCharCode","message","_normalizeError","LogLevel","ErrorCode","Logger","Object","defineProperty","enumerable","value","writable","_log","logLevel","args","level","toLowerCase","throwArgumentError","console","log","apply","levels","DEBUG","INFO","warn","WARNING","makeError","code","params","errors","UNKNOWN_ERROR","messageDetails","keys","key","JSON","stringify","reason","throwError","INVALID_ARGUMENT","argument","condition","assertArgument","checkNormalize","UNSUPPORTED_OPERATION","operation","checkSafeUint53","NUMERIC_FAULT","fault","checkArgumentCount","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","checkNew","target","kind","MISSING_NEW","checkAbstract","globalLogger","setCensorship","censorship","permanent","setLogLevel","from","version$1","logger","isHexable","toHexString","addSlice","array","slice","arguments","Uint8Array","isBytesLike","isHexString","isBytes","v","arrayify","options","result","unshift","parseInt","allowMissingPrefix","substring","hex","hexPad","concat","items","objects","map","item","reduce","accum","offset","object","set","stripZeros","zeroPad","match","HexCharacters","hexlify","floor","hexDataLength","data","hexDataSlice","endOffset","hexConcat","hexValue","trimmed","hexStripZeros","hexZeroPad","splitSignature","signature","_vs","recoveryParam","bytes","vs","joinSignature","version$2","logger$1","_constructorGuard","MAX_SAFE","isBigNumberish","BigNumber","isBigNumber","_warnedToStringRadix","constructorGuard","new","_hex","_isBigNumber","freeze","toBigNumber","toBN","other","throwFault","isNegative","shr","toBigInt","BigInt","toHex","anyValue","_base36To16","_base16To36","logger$2","_constructorGuard$1","Zero","NegativeOne","throwFault$1","getMultiplier","decimals","formatFixed","multiplier","fraction","whole","parseFixed","comps","sigFraction","all","sig","wholeValue","fractionValue","wei","FixedFormat","signed","_multiplier","check","defaultValue","FixedNumber","format","_value","_isFixedNumber","_checkFormat","addUnsafe","fromValue","subUnsafe","mulUnsafe","divUnsafe","hasFraction","ONE","toFormat","ceiling","factor","bump","BUMP","toUnsafeFloat","parseFloat","fromString","fixedFormat","numeric","decimal","fromBytes","isFixedNumber","version$3","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","rejected","done","then","logger$3","defineReadOnly","getStatic","getPrototypeOf","resolveProperties","promises","results","checkProperties","properties","shallowCopy","opaque","bigint","boolean","_isFrozen","isFrozen","_deepCopy","deepCopy","Description","version$4","logger$4","_constructorGuard$2","ModifiersBytes","calldata","memory","storage","ModifiersNest","checkModifier","indexOf","parseParamType","param","allowIndexed","originalParam","newNode","parent","node","state","allowType","allowParams","verifyType","components","child","allowName","allowArray","sibling","readArray","populate","FormatTypes","sighash","minimal","full","json","paramTypeArray","RegExp","ParamType","arrayLength","arrayChildren","fromObject","baseType","_isParamType","comp","parse","isParamType","ParamTypify","parseParams","allowIndex","splitNesting","Fragment","_isFragment","isFragment","FunctionFragment","EventFragment","ConstructorFragment","ErrorFragment","trim","isEventFragment","verifyIdentifier","regexParen","modifier","parseGas","gas","parseModifiers","constant","payable","verifyState","isConstructorFragment","parens","isFunctionFragment","returns","checkForbidden","fragment","isErrorFragment","regexIdentifier","depth","logger$5","checkResultErrors","checkErrors","path","childPath","Coder","localName","dynamic","_throwError","Writer","_data","_dataLength","_padding","_writeData","appendWriter","writer","writeBytes","paddingOffset","_getValue","BUFFER_OVERRUN","writeValue","writeUpdatableValue","Reader","coerceFunc","allowLoose","_offset","consumed","coerce","_coerceFunc","_peekBytes","loose","alignedLength","subReader","readBytes","readValue","sha3","root","NODE_JS","JS_SHA3_NO_NODE_JS","process","versions","COMMON_JS","JS_SHA3_NO_COMMON_JS","HEX_CHARS","SHAKE_PADDING","KECCAK_PADDING","PADDING","SHIFT","RC","BITS","SHAKE_BITS","OUTPUT_TYPES","createOutputMethod","outputType","Keccak","update","createShakeOutputMethod","outputBits","createMethod","method","create","createShakeMethod","algorithms","methods","methodNames","algorithm","methodName","blocks","reset","block","blockCount","byteCount","outputBlocks","extraBytes","notString","ArrayBuffer","lastByteIndex","f","finalize","arrayBuffer","buffer","Uint32Array","digest","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","b10","b11","b12","b13","b14","b15","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49","keccak256","keccak_256","version$5","logger$6","arrayifyInteger","unarrayifyInteger","_encode","payload","encode","_decodeChildren","childOffset","decoded","_decode","lengthLength","decode","version$6","logger$7","getChecksumAddress","address","chars","expanded","hashed","toUpperCase","MAX_SAFE_INTEGER","log10","LN10","ibanLookup","safeDigits","ibanChecksum","checksum","getAddress","isAddress","getIcapAddress","base36","getContractAddress","transaction","nonce","getCreate2Address","salt","initCodeHash","AddressCoder","reader","AnonymousCoder","coder","logger$8","pack","coders","values","arrayValues","unique","staticWriter","dynamicWriter","updateFuncs","dynamicOffset","updateFunc","baseOffset","func","unpack","baseReader","offsetReader","uniqueNames","get","ArrayCoder","defaultChild","BooleanCoder","DynamicBytesCoder","BytesCoder","FixedBytesCoder","NullCoder","AddressZero","NegativeOne$1","Zero$1","One","Two","WeiPerEther","MaxUint256","MinInt256","MaxInt256","HashZero","EtherSymbol","index$1","NumberCoder","maxUintValue","bounds","version$7","logger$9","UnicodeNormalizationForm","Utf8ErrorReason","errorFunc","badCodepoint","ignoreFunc","BAD_PREFIX","UNEXPECTED_CONTINUE","OVERRUN","replaceFunc","OVERLONG","Utf8ErrorFuncs","ignore","getUtf8CodePoints","onError","extraLength","overlongMask","nextChar","MISSING_CONTINUE","OUT_OF_RANGE","UTF16_SURROGATE","toUtf8Bytes","pair","escapeChar","_toEscapedUtf8String","codePoint","_toUtf8String","codePoints","toUtf8String","toUtf8CodePoints","formatBytes32String","text","parseBytes32String","bytes2","createTable","createRangeTable","matchMap","ranges","range","d","Table_A_1_ranges","Table_B_1_flags","Table_B_2_ranges","Table_B_2_lut_abs","Table_B_2_lut_rel","Table_B_2_complex","Table_C_ranges","flatten","_nameprepTableA1","codepoint","_nameprepTableB2","codes","complex","_nameprepTableC","nameprep","codesTableB2","NFKC","StringCoder","TupleCoder","types","logger$a","paramTypeBytes","paramTypeNumber","AbiCoder","_getCoder","component","_getWordSize","_getReader","_getWriter","getDefaultValue","defaultAbiCoder","id","version$8","logger$b","Zeros","fill","Partition","isValidName","namehash","partition","label","messagePrefix","hashMessage","__awaiter$1","logger$c","NegativeOne$2","Zero$2","One$1","MaxUint256$1","hexPadRight","padOffset","hexTrue","hexFalse","domainFieldTypes","chainId","verifyingContract","domainFieldNames","checkString","domainChecks","getBaseEncoder","boundsUpper","boundsLower","encodeType","fields","TypedDataEncoder","links","parents","subtypes","field","encoder","primaryTypes","filter","checkCircular","found","subtype","primaryType","st","sort","_types","getEncoder","_encoderCache","_getEncoder","subEncoder","encodedType","encodeData","hashStruct","hash","_visit","callback","visit","getPrimaryType","hashDomain","domain","domainFields","EIP712Domain","resolveNames","resolveName","ensCache","getPayload","domainValues","domainTypes","typesWithDomain","logger$d","LogDescription","TransactionDescription","ErrorDescription","Indexed","isIndexed","_isIndexed","BuiltinErrors","wrapAccessError","property","wrap","Interface","fragments","bucket","deploy","functions","events","getAbiCoder","getSighash","getEventTopic","eventFragment","getFunction","nameOrSignatureOrSighash","matching","getEvent","nameOrSignatureOrTopic","topichash","getError","_decodeParams","_abiCoder","_encodeParams","encodeDeploy","decodeErrorResult","encodeErrorResult","decodeFunctionData","functionFragment","encodeFunctionData","decodeFunctionResult","errorArgs","errorName","errorSignature","selector","builtin","CALL_EXCEPTION","encodeFunctionResult","encodeFilterTopics","topics","encodeTopic","pop","encodeEventLog","dataTypes","dataValues","decodeEventLog","topicHash","expected","nonIndexed","resultIndexed","resultNonIndexed","nonIndexedIndex","indexedIndex","parseTransaction","tx","parseLog","topic","parseError","hexData","errorFragment","isInterface","_isInterface","version$9","__awaiter$2","logger$e","ForkEvent","isForkEvent","_isForkEvent","Provider","getFeeData","gasPrice","getBlock","getGasPrice","catch","maxFeePerGas","maxPriorityFeePerGas","baseFeePerGas","addListener","eventName","listener","on","removeListener","isProvider","_isProvider","version$a","__awaiter$3","logger$f","allowedTransactionKeys","forwardErrors","INSUFFICIENT_FUNDS","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","Signer","getBalance","blockTag","_checkProvider","provider","getTransactionCount","estimateGas","checkTransaction","sendTransaction","populateTransaction","signedTx","signTransaction","getChainId","network","getNetwork","to","hasEip1559","feeData","gasLimit","UNPREDICTABLE_GAS_LIMIT","isSigner","_isSigner","VoidSigner","_fail","signMessage","_signTypedData","connect","minimalisticAssert","equal","assertEqual","inherits_browser","configurable","inherits_1","isSurrogatePair","enc","toArray_1","toHex$1","zero2","toHex_1","htonl","htonl_1","toHex32","zero8","toHex32_1","zero2_1","zero8_1","join32","join32_1","split32","split32_1","rotr32","rotr32_1","rotl32","rotl32_1","sum32","sum32_1","sum32_3","sum32_3_1","sum32_4","sum32_4_1","sum32_5","sum32_5_1","sum64","buf","pos","ah","al","bh","bl","sum64_1","sum64_hi","sum64_hi_1","sum64_lo","sum64_lo_1","sum64_4_hi","ch","cl","dh","dl","sum64_4_hi_1","sum64_4_lo","sum64_4_lo_1","sum64_5_hi","eh","el","sum64_5_hi_1","sum64_5_lo","sum64_5_lo_1","rotr64_hi","rotr64_hi_1","rotr64_lo","rotr64_lo_1","shr64_hi","shr64_hi_1","shr64_lo","shr64_lo_1","utils","BlockHash","pending","pendingTotal","blockSize","outSize","hmacStrength","padLength","_delta8","_delta32","BlockHash_1","_update","_pad","_digest","pad","common","rotr32$1","ft_1","ch32","p32","maj32","ft_1_1","ch32_1","maj32_1","p32_1","s0_256","s0_256_1","s1_256","s1_256_1","g0_256","g0_256_1","g1_256","g1_256_1","common$1","rotl32$1","sum32$1","sum32_5$1","ft_1$1","BlockHash$1","sha1_K","SHA1","W","_1","sum32$2","sum32_4$1","sum32_5$2","ch32$1","maj32$1","s0_256$1","s1_256$1","g0_256$1","g1_256$1","BlockHash$2","sha256_K","SHA256","_256","T1","T2","SHA224","_224","rotr64_hi$1","rotr64_lo$1","shr64_hi$1","shr64_lo$1","sum64$1","sum64_hi$1","sum64_lo$1","sum64_4_hi$1","sum64_4_lo$1","sum64_5_hi$1","sum64_5_lo$1","BlockHash$3","sha512_K","SHA512","_512","_prepareBlock","c0_hi","g1_512_hi","c0_lo","g1_512_lo","c1_hi","c1_lo","c2_hi","g0_512_hi","c2_lo","g0_512_lo","c3_hi","c3_lo","fh","fl","gh","gl","hh","hl","s1_512_hi","s1_512_lo","ch64_hi","ch64_lo","c4_hi","c4_lo","T1_hi","T1_lo","s0_512_hi","s0_512_lo","maj64_hi","maj64_lo","T2_hi","T2_lo","xh","xl","yh","yl","zh","zl","SHA384","_384","sha1","sha224","sha256","sha384","sha512","sha","rotl32$2","sum32$3","sum32_3$1","sum32_4$2","BlockHash$4","RIPEMD160","ripemd160","E","Ah","Bh","Ch","Dh","Eh","T","K","rh","Kh","sh","ripemd","Hmac","Hash","inner","outer","hmac","hash_1","createCommonjsModule$1","basedir","require","commonjsRequire","minimalisticAssert$1","assert$1","utils_1","arr","utils_1$1","getNAF","naf","getJSF","k1","k2","jsf","d1","d2","m8","m14","m24","u1","u2","cachedProperty","obj","computer","parseBytes","intFromLE","assert$1$1","BaseCurve","conf","zero","two","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","_bitLength","adjustCount","redN","_maxwellTrick","point","validate","_fixedNafMul","precomputed","doubles","_getDoubles","I","repr","nafW","jpoint","mixedAdd","points","toP","_wnafMul","nafPoints","_getNAFPoints","dblp","_wnafMulAdd","defW","coeffs","jacobianResult","wndWidth","comb","toJ","ja","jb","BasePoint","curve","decodePoint","pointFromX","encodeCompressed","compact","getX","getY","precompute","power","beta","_getBeta","_hasDoubles","dbl","inherits_browser$1","assert$2","ShortCurve","tinv","zeroA","threeA","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","short_1","lambda","betas","_getEndoRoots","lambdas","basis","vec","_getEndoBasis","ntinv","l1","l2","aprxSqrt","y1","y2","prevR","len1","len2","_endoSplit","v1","v2","p1","p2","q1","q2","inf","ax","rhs","_endoWnafMulAdd","npoints","ncoeffs","Point","isRed","fromJSON","pre","endoMul","obj2point","isInfinity","nx","ny","ys1","dyinv","mulAdd","jmulAdd","_precompute","negate","JPoint","zOne","zinv","zinv2","ay","pz2","z2","s1","s2","h2","h3","nz","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t1","t2","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","yyyy8","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","eqXToP","zs","xc","curve_1","short","edwards","curves_1","curves","PresetCurve","defineCurve","crash","HmacDRBG","predResist","minEntropy","_reseed","reseedInterval","V","entropy","entropyEnc","nonceEnc","pers","persEnc","hmacDrbg","seed","_hmac","kmac","reseed","addEnc","generate","temp","assert$3","KeyPair","ec","priv","pub","_importPrivate","privEnc","_importPublic","pubEnc","fromPublic","fromPrivate","getPublic","getPrivate","derive","sign","verify","assert$4","Signature","_importDER","Position","place","getLength","initial","octetLen","rmPadding","slen","constructLength","octets","LN2","toDER","backHalf","rand","assert$5","EC","hasOwnProperty","nh","keyPair","keyFromPrivate","keyFromPublic","genKeyPair","drbg","ns2","_truncateToN","truncOnly","bkey","ns1","iter","kp","kpX","canonical","signature$1","sinv","recoverPubKey","isYOdd","isSecondKey","rInv","getKeyRecoveryParam","Q","Qprime","elliptic_1","elliptic","eddsa","EC$1","version$b","logger$g","_curve","getCurve","SigningKey","privateKey","_addPoint","p0","publicKey","signDigest","digestBytes","computeSharedSecret","otherKey","otherKeyPair","computePublicKey","isSigningKey","_isSigningKey","recoverPublicKey","rs","compressed","signingKey","version$c","logger$h","TransactionTypes","handleAddress","handleNumber","transactionFields","maxLength","allowedTransactionKeys$1","computeAddress","recoverAddress","formatNumber","accessSetify","addr","storageKeys","storageKey","accessListify","localeCompare","formatAccessList","_serializeEip1559","accessList","_serializeEip2930","_serialize","raw","fieldInfo","serialize","transactionType","_parseEipSignature","recid","_parseEip1559","_parseEip2930","_parse","rawTransaction","version$d","__awaiter$4","logger$i","allowedTransactionKeys$2","resolver","nameOrPromise","resolveAddresses","paramType","contract","overrides","signer","override","resolved","resolvedAddress","interface","intrinsic","roValue","leftovers","buildPopulate","buildEstimate","signerOrProvider","buildCall","collapseSimple","deployTransaction","_deployed","buildSend","txRequest","wait","bind","confirmations","receipt","logs","event","parsed","eventSignature","blockHash","getTransaction","transactionHash","getTransactionReceipt","buildDefault","getEventTag","RunningEvent","tag","_listeners","once","removeAllListeners","listeners","listenerCount","run","argsCopy","setTimeout","prepareEvent","getEmit","ErrorRunningEvent","FragmentRunningEvent","contractInterface","decodeError","WildcardRunningEvent","BaseContract","addressOrName","Contract","uniqueFilters","filters","uniqueSignatures","callStatic","signatures","getInterface","deployed","_deployedPromise","getCode","contractAddress","fallback","attach","_normalizeRunningEvent","runningEvent","_runningEvents","_getRunningEvent","_checkRunningEvents","emit","_wrappedEmits","_wrapEvent","_addEventListener","wrappedEmit","queryFilter","fromBlockOrBlockhash","toBlock","fromBlock","getLogs","ContractFactory","bytecodeHex","getDeployTransaction","unsignedTx","getContract","fromSolidity","compilerOutput","evm","BaseX","alphabet","charAt","_alphabetMap","source","digits","_leader","TypeError","byte","reverse","Base32","Base58","SupportedAlgorithm","version$e","logger$j","ripemd160$1","sha256$1","sha512$1","computeHmac","pbkdf2","password","iterations","keylen","hashAlgorithm","hLen","DK","block1","U","destPos","version$f","logger$k","Wordlist","locale","mnemonic","wordlist","getWord","getWordIndex","register","lang","loadWords","LangCz","langCz","words$1","wordlist$1","loadWords$1","LangEn","langEn","words$2","lookup","wordlist$2","dropDiacritic","expand","loadWords$2","LangEs","langEs","words$3","wordlist$3","lookup$1","dropDiacritic$1","expand$1","loadWords$3","LangFr","langFr","mapping","wordlist$4","KiYoKu","KyoKu","loadWords$4","kana","sortJapanese","LangJa","langJa","data$1","getHangul","wordlist$5","loadWords$5","LangKo","langKo","words$4","wordlist$6","loadWords$6","LangIt","langIt","data$2","deltaData","wordlist$7","zh_cn","zh_tw","Checks","codes$1","loadWords$7","deltaOffset","LangZh","country","langZhCn","langZhTw","wordlists","cz","en","es","fr","it","ko","version$g","logger$l","MasterSecret","HardenedBit","getUpperMask","getLowerMask","bytes32","base58check","getWordlist","_constructorGuard$3","defaultPath","HDNode","parentFingerprint","chainCode","mnemonicOrPath","compressedPublicKey","extendedKey","neuter","_derive","IL","IR","ki","Ki","ek","srcMnemonic","phrase","fingerprint","derivePath","_fromSeed","seedArray","fromMnemonic","entropyToMnemonic","mnemonicToEntropy","mnemonicToSeed","fromSeed","fromExtendedKey","NFKD","entropyBits","checksumBits","checksumMask","indices","remainingBits","isValidMnemonic","getAccountPath","version$h","logger$m","anyGlobal","crypto","msCrypto","getRandomValues","randomBytes","shuffled","random","aesJs","checkInt","checkInts","arrayish","coerceArray","arg","isView","createArray","copyArray","sourceArray","targetArray","targetStart","sourceStart","sourceEnd","convertUtf8","toBytes","encodeURI","substr","convertHex","Hex","numberOfRounds","rcon","S","Si","T3","T4","T5","T6","T7","T8","U1","U2","U3","U4","convertToInt32","AES","_prepare","rounds","_Ke","_Kd","roundKeyCount","KC","tk","rconpointer","tt","encrypt","plaintext","decrypt","ciphertext","ModeOfOperationECB","description","_aes","ModeOfOperationCBC","iv","_lastCipherblock","ModeOfOperationCFB","segmentSize","_shiftRegister","encrypted","xorSegment","ModeOfOperationOFB","_lastPrecipher","_lastPrecipherIndex","Counter","initialValue","_counter","setValue","setBytes","increment","ModeOfOperationCTR","counter","_remainingCounter","_remainingCounterIndex","pkcs7pad","padder","pkcs7strip","aesjs","ModeOfOperation","ecb","cbc","cfb","ofb","ctr","utf8","pkcs7","_arrayTest","version$i","looseArrayify","hexString","zpad","getPassword","searchPath","currentChild","matchingChild","uuidV4","logger$n","CrowdsaleAccount","isCrowdsaleAccount","_isCrowdsaleAccount","ethaddr","encseed","encryptedSeed","aesCbc","seedHex","seedHexBytes","isCrowdsaleWallet","isKeystoreWallet","getJsonWalletAddress","scrypt","MAX_VALUE","h0","h1","h4","h5","h6","h7","bytesLeft","bitLenHi","bitLenLo","numZeros","PBKDF2_HMAC_SHA256_OneIter","dkLen","innerLen","outerKey","dk","incrementCounter","blockmix_salsa8","BY","Yi","_X","arraycopy","blockxor","salsa20_8","R","src","srcPos","checkBufferish","ensureInteger","_scrypt","XY","totalOps","currentOp","lastPercent10","stop","i0","i1","Bi","limit","nextTick","setImmediate","incrementalSMix","steps","percent10","derivedKey","lib","progressCallback","lastProgress","progress","syncScrypt","__awaiter$5","logger$o","hasMnemonic","KeystoreAccount","isKeystoreAccount","_isKeystoreAccount","_decrypt","cipher","aesCtr","_getAccount","computedMAC","mnemonicKey","account","mnemonicCiphertext","mnemonicIv","mnemonicCounter","mnemonicAesCtr","pbkdf2Sync","passwordBytes","prfFunc","pbkdf2$1","_computeKdfKey","pbkdf2Func","scryptFunc","kdf","prf","decryptSync","decrypt$1","client","uuidRandom","uuid","macPrefix","mac","Crypto","cipherparams","kdfparams","dklen","now","Date","timestamp","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","gethFilename","decryptJsonWallet","decryptJsonWalletSync","version$j","__awaiter$6","logger$p","isAccount","hasMnemonic$1","Wallet","_mnemonic","_signingKey","populated","createRandom","extraEntropy","fromEncryptedJson","fromEncryptedJsonSync","verifyMessage","verifyTypedData","version$k","logger$q","isRenetworkable","renetwork","ethDefaultProvider","providers","providerList","InfuraProvider","infura","EtherscanProvider","etherscan","AlchemyProvider","alchemy","PocketProvider","skip","CloudflareProvider","FallbackProvider","quorum","etcDefaultProvider","url","JsonRpcProvider","homestead","ensAddress","_defaultProvider","ropsten","classicMordor","networks","unspecified","mainnet","morden","testnet","rinkeby","kovan","goerli","classic","classicMorden","classicTestnet","classicKotti","xdai","matic","maticmum","bnb","bnbt","standard","defaultProvider","decode$1","textData","atob","encode$1","btoa","index$2","version$l","__awaiter$7","getUrl","href","request","headers","body","cache","credentials","redirect","referrer","response","fetch","statusCode","status","statusMessage","statusText","__awaiter$8","logger$r","staller","duration","bodyify","_fetchData","connection","processFunc","attemptLimit","throttleLimit","throttleCallback","throttleSlotInterval","allow304","timeout","allowGzip","user","allowInsecureAuthentication","authorization","flatHeaders","header","runningTimeout","timer","promise","TIMEOUT","requestBody","requestMethod","cancel","clearTimeout","runningFetch","attempt","tryAgain","stall","retryAfter","SERVER_ERROR","serverError","throttleRetry","race","fetchJson","processJsonFunc","updated","hasContentType","poll","interval","retryLimit","oncePoll","onceBlock","ALPHABET","ALPHABET_MAP","polymodStep","prefixChk","prefix","chk","encode$2","LIMIT","__decode","lowered","uppered","lastIndexOf","wordChars","decodeUnsafe","decode$2","convert","inBits","outBits","maxV","toWordsUnsafe","toWords","fromWordsUnsafe","fromWords","bech32","version$m","logger$s","Formatter","formats","getDefaultFormats","bigNumber","strictData","allowNull","blockNumber","transactionIndex","uint256","creates","transactionRequest","receiptLog","arrayOf","logIndex","gasUsed","logsBloom","cumulativeGasUsed","effectiveGasPrice","parentHash","difficulty","miner","extraData","transactions","blockWithTransactions","transactionResponse","filterLog","removed","allowFalsish","strict","callAddress","_block","author","networkId","byzantium","checkKey","checkValue","nullValue","replaceValue","isCommunityResourcable","isCommunityResource","throttleMessage","showThrottleMessage","__awaiter$9","logger$t","checkTopic","serializeTopics","sorted","deserializeTopics","getEventTag$1","getTime","PollableEvents","Event","pollable","coinInfos","symbol","p2pkh","p2sh","ilk","bytes32ify","base58Encode","Resolver","formatter","_fetchBytes","parameters","_getAddress","coinType","hexBytes","coinInfo","getContentHash","ipfs","swarm","getText","keyBytes","defaultFormatter","nextPollId","BaseProvider","_events","_emitted","getFormatter","anyNetwork","detectNetwork","_networkPromise","_ready","knownNetwork","_maxInternalBlockNumber","_lastBlockNumber","_pollingInterval","_fastQueryDate","_network","ready","NETWORK_ERROR","_getInternalBlockNumber","maxAge","_internalBlockNumber","internalBlockNumber","respTime","reqTime","checkInternalBlockNumber","perform","networkError","_setFastBlockNumber","pollId","runners","pollingInterval","previousBlockNumber","eventBlockNumber","runner","resetEventsBlock","polling","currentNetwork","_fastBlockNumber","_fastBlockNumberPromise","detectedNetwork","_poller","setInterval","_bootstrapPoll","clearInterval","_getFastBlockNumber","getBlockNumber","waitForTransaction","_waitForTransaction","replaceable","cancelFuncs","alreadyDone","minedHandler","lastBlockNumber","startBlock","scannedBlock","replaceHandler","mined","getBlockWithTransactions","ti","TRANSACTION_REPLACED","cancelled","replacement","_wrapTransaction","unref","_getBlockTag","getStorageAt","position","expectedHash","returnedHash","confirms","signedTransaction","hexTx","_getTransactionRequest","_getFilter","_getBlock","blockHashOrBlockTag","includeTransactions","blockWithTxs","getEtherPrice","getResolver","_getResolver","lookupAddress","reverseName","resolverAddress","NOT_IMPLEMENTED","_startEvent","_stopEvent","stopped","eventTag","__awaiter$a","logger$u","errorGas","checkError","responseText","getResult","getLowerCase","_constructorGuard$4","JsonRpcSigner","addressOrIndex","connectUnchecked","UncheckedJsonRpcSigner","_address","_index","send","accounts","sendUncheckedTransaction","fromAddress","estimate","sender","hexlifyTransaction","unlock","allowedTransactionKeys$3","networkOrReady","_nextId","_cache","_eventLoopCache","defaultUrl","_uncachedDetectNetwork","getSigner","getUncheckedSigner","listAccounts","jsonrpc","action","prepareRequest","_startPending","_pendingFilter","pendingFilter","filterId","hashes","seq","allowExtra","allowed","WS","WebSocket","__awaiter$b","logger$v","NextId","WebSocketProvider","_wsReady","_websocket","onopen","_requests","onmessage","messageEvent","_subs","subscription","fauxPoll","_detectNetwork","rid","_subscribe","subIdPromise","_subIds","subId","emitReceipt","destroy","readyState","CONNECTING","onerror","close","__awaiter$c","logger$w","StaticJsonRpcProvider","_super","UrlJsonRpcProvider","apiKey","getApiKey","__awaiter$d","logger$x","defaultApiKey","AlchemyWebSocketProvider","getWebSocketProvider","host","__awaiter$e","logger$y","__awaiter$f","logger$z","getTransactionPostData","maxFeePerGs","getResult$1","getJsonResult","checkLogTag","defaultApiKey$1","checkError$1","getBaseUrl","query","baseUrl","getPostUrl","getPostData","apikey","post","procFunc","payloadStr","txhash","postData","topic0","ethusd","getHistory","endBlock","startblock","endblock","timeStamp","__awaiter$g","logger$A","checkNetworks","median","maxDelta","middle","serialize$1","nextRid","stall$1","getPromise","ForwardErrors","ForwardProperties","exposeDebugConfig","config","weight","normalizedTally","configs","tally","getProcessFunc","_highestBlockNumber","waitForSync","getRunner","currentBlockNumber","providerConfigs","configOrProvider","stallTimeout","priority","first","t0","inflightWeight","backend","waiting","errorCode","IpcProvider","logger$B","defaultProjectId","InfuraWebSocketProvider","projectId","projectSecret","apiKeyObj","JsonRpcBatchProvider","_pendingBatch","inflightRequest","_pendingBatchAggregator","batch","inflight","logger$C","defaultApiKey$2","NodesmithProvider","logger$D","defaultApplicationIds","applicationId","loadBalancer","applicationSecretKey","logger$E","buildWeb3LegacyFetcher","sendFunc","fetcher","isMetaMask","isStatus","buildEip1193Fetcher","Web3Provider","jsonRpcFetchFunc","subprovider","sendAsync","logger$F","getDefaultProvider","index$3","regexBytes","regexNumber","regexArray","Zeros$1","_pack","pack$1","tight","keccak256$1","sha256$2","version$n","logger$G","names","commify","suffix","formatted","formatUnits","unitName","parseUnits","formatEther","parseEther","ether","utils$1","RLP","base58","base64","_TypedDataEncoder","solidityPack","solidityKeccak256","soliditySha256","serializeTransaction","version$o","logger$H","ethers","constants","byoaContractAddress","providerNetwork","jrpcProvider","byoa","context","dataPipeFn","useStyles","top","minWidth","minHeight","background","pointerEvents","speedDial","bottom","zIndex","byoaButton","providerOptions","walletconnect","display","package","infuraId","web3Modal","cacheProvider","disableInjectedProvider","ByoaSDK","classes","translateDial","setTranslateDial","dialDirection","setDialDirection","openDial","setOpenDial","setProvider","web3","setWeb3","accountAddress","setAccountAddress","installedApps","setInstalledApps","connectWallet","disconnectWallet","refreshMyApps","alert","clearCachedProvider","getTokenMetadata","uri","meta","image","browser","transformIPFSToPinned","ipfsURI","addressHelper","eth","myTokenIds","walletOfOwner","appLUT","allInstalls","tid","appIdForToken","getAppIdByTokenId","directTokenURI","tokenURI","tokenMeta","appDetails","getAppDetailsById","owner","price","ia","app","imageURI","byoaDetails","movementX","movementY","clientY","ariaLabel","hidden","icon","open","onOpen","onClose","onClick","direction","tooltipTitle","installedApp","scriptID","existingApp","document","getElementById","script","appendChild","onload"],"mappings":"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","sourcesContent":["import { makeStyles, Box, Container, Typography } from '@material-ui/core';\nimport { SpeedDial, SpeedDialAction } from '@material-ui/lab';\nimport React__default, { useState, createElement } from 'react';\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\nimport WalletConnectProvider from '@walletconnect/web3-provider';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport Web3 from 'web3';\nimport Web3Modal from 'web3modal';\n\nfunction DragMove(props) {\n  const {\n    onPointerDown,\n    onPointerUp,\n    onPointerMove,\n    onDragMove,\n    children,\n    style,\n    className\n  } = props;\n  const [isDragging, setIsDragging] = useState(false);\n\n  const handlePointerDown = e => {\n    setIsDragging(true);\n    onPointerDown(e);\n  };\n\n  const handlePointerUp = e => {\n    setIsDragging(false);\n    onPointerUp(e);\n  };\n\n  const handlePointerMove = e => {\n    if (isDragging) onDragMove(e);\n    onPointerMove(e);\n  };\n\n  return React__default.createElement(\"div\", {\n    onPointerDown: handlePointerDown,\n    onPointerUp: handlePointerUp,\n    onPointerMove: handlePointerMove,\n    style: style,\n    className: className\n  }, children);\n}\nDragMove.defaultProps = {\n  onPointerDown: () => {},\n  onPointerUp: () => {},\n  onPointerMove: () => {}\n};\n\nvar _format = \"hh-sol-artifact-1\";\nvar contractName = \"Byoa\";\nvar sourceName = \"contracts/byoa.sol\";\nvar abi = [\n\t{\n\t\tinputs: [\n\t\t],\n\t\tstateMutability: \"nonpayable\",\n\t\ttype: \"constructor\"\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"owner\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"approved\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"tokenId\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tname: \"Approval\",\n\t\ttype: \"event\"\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"owner\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"operator\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tinternalType: \"bool\",\n\t\t\t\tname: \"approved\",\n\t\t\t\ttype: \"bool\"\n\t\t\t}\n\t\t],\n\t\tname: \"ApprovalForAll\",\n\t\ttype: \"event\"\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"bytes32\",\n\t\t\t\tname: \"role\",\n\t\t\t\ttype: \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"bytes32\",\n\t\t\t\tname: \"previousAdminRole\",\n\t\t\t\ttype: \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"bytes32\",\n\t\t\t\tname: \"newAdminRole\",\n\t\t\t\ttype: \"bytes32\"\n\t\t\t}\n\t\t],\n\t\tname: \"RoleAdminChanged\",\n\t\ttype: \"event\"\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"bytes32\",\n\t\t\t\tname: \"role\",\n\t\t\t\ttype: \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"account\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"sender\",\n\t\t\t\ttype: \"address\"\n\t\t\t}\n\t\t],\n\t\tname: \"RoleGranted\",\n\t\ttype: \"event\"\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"bytes32\",\n\t\t\t\tname: \"role\",\n\t\t\t\ttype: \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"account\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"sender\",\n\t\t\t\ttype: \"address\"\n\t\t\t}\n\t\t],\n\t\tname: \"RoleRevoked\",\n\t\ttype: \"event\"\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"from\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"to\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"tokenId\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tname: \"Transfer\",\n\t\ttype: \"event\"\n\t},\n\t{\n\t\tinputs: [\n\t\t],\n\t\tname: \"DEFAULT_ADMIN_ROLE\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"bytes32\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"bytes32\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t],\n\t\tname: \"DEVELOPER_ROLE\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"bytes32\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"bytes32\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"to\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"tokenId\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tname: \"approve\",\n\t\toutputs: [\n\t\t],\n\t\tstateMutability: \"nonpayable\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"owner\",\n\t\t\t\ttype: \"address\"\n\t\t\t}\n\t\t],\n\t\tname: \"balanceOf\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"string\",\n\t\t\t\tname: \"name\",\n\t\t\t\ttype: \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"string\",\n\t\t\t\tname: \"description\",\n\t\t\t\ttype: \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"price\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"string\",\n\t\t\t\tname: \"_tokenURI\",\n\t\t\t\ttype: \"string\"\n\t\t\t}\n\t\t],\n\t\tname: \"createApp\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"nonpayable\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"appId\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tname: \"getAppDetailsById\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"string\",\n\t\t\t\tname: \"name\",\n\t\t\t\ttype: \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"string\",\n\t\t\t\tname: \"description\",\n\t\t\t\ttype: \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"string\",\n\t\t\t\tname: \"_tokenURI\",\n\t\t\t\ttype: \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"owner\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"price\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"_tokenId\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tname: \"getAppIdByTokenId\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t],\n\t\tname: \"getAppIds\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256[]\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"uint256[]\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"tokenId\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tname: \"getApproved\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"address\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"bytes32\",\n\t\t\t\tname: \"role\",\n\t\t\t\ttype: \"bytes32\"\n\t\t\t}\n\t\t],\n\t\tname: \"getRoleAdmin\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"bytes32\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"bytes32\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"bytes32\",\n\t\t\t\tname: \"role\",\n\t\t\t\ttype: \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"account\",\n\t\t\t\ttype: \"address\"\n\t\t\t}\n\t\t],\n\t\tname: \"grantRole\",\n\t\toutputs: [\n\t\t],\n\t\tstateMutability: \"nonpayable\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"bytes32\",\n\t\t\t\tname: \"role\",\n\t\t\t\ttype: \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"account\",\n\t\t\t\ttype: \"address\"\n\t\t\t}\n\t\t],\n\t\tname: \"hasRole\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"bool\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"bool\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"owner\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"operator\",\n\t\t\t\ttype: \"address\"\n\t\t\t}\n\t\t],\n\t\tname: \"isApprovedForAll\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"bool\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"bool\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"_appId\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tname: \"mint\",\n\t\toutputs: [\n\t\t],\n\t\tstateMutability: \"payable\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t],\n\t\tname: \"name\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"string\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"string\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"tokenId\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tname: \"ownerOf\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"address\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"bytes32\",\n\t\t\t\tname: \"role\",\n\t\t\t\ttype: \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"account\",\n\t\t\t\ttype: \"address\"\n\t\t\t}\n\t\t],\n\t\tname: \"renounceRole\",\n\t\toutputs: [\n\t\t],\n\t\tstateMutability: \"nonpayable\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"bytes32\",\n\t\t\t\tname: \"role\",\n\t\t\t\ttype: \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"account\",\n\t\t\t\ttype: \"address\"\n\t\t\t}\n\t\t],\n\t\tname: \"revokeRole\",\n\t\toutputs: [\n\t\t],\n\t\tstateMutability: \"nonpayable\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"from\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"to\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"tokenId\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tname: \"safeTransferFrom\",\n\t\toutputs: [\n\t\t],\n\t\tstateMutability: \"nonpayable\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"from\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"to\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"tokenId\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"bytes\",\n\t\t\t\tname: \"_data\",\n\t\t\t\ttype: \"bytes\"\n\t\t\t}\n\t\t],\n\t\tname: \"safeTransferFrom\",\n\t\toutputs: [\n\t\t],\n\t\tstateMutability: \"nonpayable\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"operator\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"bool\",\n\t\t\t\tname: \"approved\",\n\t\t\t\ttype: \"bool\"\n\t\t\t}\n\t\t],\n\t\tname: \"setApprovalForAll\",\n\t\toutputs: [\n\t\t],\n\t\tstateMutability: \"nonpayable\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"bytes4\",\n\t\t\t\tname: \"interfaceId\",\n\t\t\t\ttype: \"bytes4\"\n\t\t\t}\n\t\t],\n\t\tname: \"supportsInterface\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"bool\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"bool\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t],\n\t\tname: \"symbol\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"string\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"string\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"index\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tname: \"tokenByIndex\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"owner\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"index\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tname: \"tokenOfOwnerByIndex\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"tokenId\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tname: \"tokenURI\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"string\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"string\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t],\n\t\tname: \"totalSupply\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"from\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"to\",\n\t\t\t\ttype: \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"tokenId\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tname: \"transferFrom\",\n\t\toutputs: [\n\t\t],\n\t\tstateMutability: \"nonpayable\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"appId\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"string\",\n\t\t\t\tname: \"name\",\n\t\t\t\ttype: \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"string\",\n\t\t\t\tname: \"description\",\n\t\t\t\ttype: \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"price\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: \"string\",\n\t\t\t\tname: \"_tokenURI\",\n\t\t\t\ttype: \"string\"\n\t\t\t}\n\t\t],\n\t\tname: \"updateApp\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"uint256\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"nonpayable\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"address\",\n\t\t\t\tname: \"_owner\",\n\t\t\t\ttype: \"address\"\n\t\t\t}\n\t\t],\n\t\tname: \"walletOfOwner\",\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: \"uint256[]\",\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"uint256[]\"\n\t\t\t}\n\t\t],\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\"\n\t},\n\t{\n\t\tinputs: [\n\t\t],\n\t\tname: \"withdrawAll\",\n\t\toutputs: [\n\t\t],\n\t\tstateMutability: \"payable\",\n\t\ttype: \"function\"\n\t}\n];\nvar bytecode = \"0x6080604052668e1bc9bf040000600d553480156200001c57600080fd5b506040518060400160405280600781526020017f42796f61205631000000000000000000000000000000000000000000000000008152506040518060400160405280600781526020017f42594f415f5631000000000000000000000000000000000000000000000000008152508160009080519060200190620000a192919062000253565b508060019080519060200190620000ba92919062000253565b505050620000d26000801b33620000d860201b60201c565b62000368565b620000ea8282620000ee60201b60201c565b5050565b620001008282620001e060201b60201c565b620001dc576001600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620001816200024b60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b828054620002619062000303565b90600052602060002090601f016020900481019282620002855760008555620002d1565b82601f10620002a057805160ff1916838001178555620002d1565b82800160010185558215620002d1579182015b82811115620002d0578251825591602001919060010190620002b3565b5b509050620002e09190620002e4565b5090565b5b80821115620002ff576000816000905550600101620002e5565b5090565b600060028204905060018216806200031c57607f821691505b6020821081141562000333576200033262000339565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6152f080620003786000396000f3fe6080604052600436106101d85760003560e01c80634b42a0f81161010257806395d89b4111610095578063b88d4fde11610064578063b88d4fde14610718578063c87b56dd14610741578063d547741f1461077e578063e985e9c5146107a7576101d8565b806395d89b411461067d578063a0712d68146106a8578063a217fddf146106c4578063a22cb465146106ef576101d8565b8063853828b6116100d1578063853828b6146105ce5780639103a0e0146105d85780639118f31a1461060357806391d1485414610640576101d8565b80634b42a0f8146104da5780634f6ccce7146105175780636352211e1461055457806370a0823114610591576101d8565b80632f2ff15d1161017a57806342842e0e1161014957806342842e0e146103f6578063438b63001461041f578063458f9cfb1461045c578063471c1ea91461049d576101d8565b80632f2ff15d1461033c5780632f745c591461036557806333f717fe146103a257806336568abe146103cd576101d8565b8063095ea7b3116101b6578063095ea7b31461028257806318160ddd146102ab57806323b872dd146102d6578063248a9ca3146102ff576101d8565b806301ffc9a7146101dd57806306fdde031461021a578063081812fc14610245575b600080fd5b3480156101e957600080fd5b5061020460048036038101906101ff9190613a8e565b6107e4565b6040516102119190614278565b60405180910390f35b34801561022657600080fd5b5061022f6107f6565b60405161023c91906142ae565b60405180910390f35b34801561025157600080fd5b5061026c60048036038101906102679190613ba3565b610888565b60405161027991906141ef565b60405180910390f35b34801561028e57600080fd5b506102a960048036038101906102a491906139e1565b61090d565b005b3480156102b757600080fd5b506102c0610a25565b6040516102cd9190614638565b60405180910390f35b3480156102e257600080fd5b506102fd60048036038101906102f891906138cb565b610a32565b005b34801561030b57600080fd5b5061032660048036038101906103219190613a21565b610a92565b6040516103339190614293565b60405180910390f35b34801561034857600080fd5b50610363600480360381019061035e9190613a4e565b610ab2565b005b34801561037157600080fd5b5061038c600480360381019061038791906139e1565b610adb565b6040516103999190614638565b60405180910390f35b3480156103ae57600080fd5b506103b7610b80565b6040516103c49190614256565b60405180910390f35b3480156103d957600080fd5b506103f460048036038101906103ef9190613a4e565b610c36565b005b34801561040257600080fd5b5061041d600480360381019061041891906138cb565b610cb9565b005b34801561042b57600080fd5b506104466004803603810190610441919061385e565b610cd9565b6040516104539190614256565b60405180910390f35b34801561046857600080fd5b50610483600480360381019061047e9190613ba3565b610de3565b6040516104949594939291906142d0565b60405180910390f35b3480156104a957600080fd5b506104c460048036038101906104bf9190613bd0565b6110b4565b6040516104d19190614638565b60405180910390f35b3480156104e657600080fd5b5061050160048036038101906104fc9190613ae8565b611545565b60405161050e9190614638565b60405180910390f35b34801561052357600080fd5b5061053e60048036038101906105399190613ba3565b6116df565b60405161054b9190614638565b60405180910390f35b34801561056057600080fd5b5061057b60048036038101906105769190613ba3565b611750565b60405161058891906141ef565b60405180910390f35b34801561059d57600080fd5b506105b860048036038101906105b3919061385e565b611802565b6040516105c59190614638565b60405180910390f35b6105d66118ba565b005b3480156105e457600080fd5b506105ed611946565b6040516105fa9190614293565b60405180910390f35b34801561060f57600080fd5b5061062a60048036038101906106259190613ba3565b61196a565b6040516106379190614638565b60405180910390f35b34801561064c57600080fd5b5061066760048036038101906106629190613a4e565b611987565b6040516106749190614278565b60405180910390f35b34801561068957600080fd5b506106926119f2565b60405161069f91906142ae565b60405180910390f35b6106c260048036038101906106bd9190613ba3565b611a84565b005b3480156106d057600080fd5b506106d9611bdc565b6040516106e69190614293565b60405180910390f35b3480156106fb57600080fd5b50610716600480360381019061071191906139a1565b611be3565b005b34801561072457600080fd5b5061073f600480360381019061073a919061391e565b611d64565b005b34801561074d57600080fd5b5061076860048036038101906107639190613ba3565b611dc6565b60405161077591906142ae565b60405180910390f35b34801561078a57600080fd5b506107a560048036038101906107a09190613a4e565b611dd8565b005b3480156107b357600080fd5b506107ce60048036038101906107c9919061388b565b611e01565b6040516107db9190614278565b60405180910390f35b60006107ef82611e95565b9050919050565b60606000805461080590614955565b80601f016020809104026020016040519081016040528092919081815260200182805461083190614955565b801561087e5780601f106108535761010080835404028352916020019161087e565b820191906000526020600020905b81548152906001019060200180831161086157829003601f168201915b5050505050905090565b600061089382611f0f565b6108d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c990614558565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061091882611750565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610989576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610980906145b8565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166109a8611f7b565b73ffffffffffffffffffffffffffffffffffffffff1614806109d757506109d6816109d1611f7b565b611e01565b5b610a16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0d90614458565b60405180910390fd5b610a208383611f83565b505050565b6000600880549050905090565b610a43610a3d611f7b565b8261203c565b610a82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a79906145d8565b60405180910390fd5b610a8d83838361211a565b505050565b6000600a6000838152602001908152602001600020600101549050919050565b610abb82610a92565b610acc81610ac7611f7b565b612376565b610ad68383612413565b505050565b6000610ae683611802565b8210610b27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1e90614358565b60405180910390fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b60606000610b8e600c6124f4565b67ffffffffffffffff811115610ba757610ba6614b1d565b5b604051908082528060200260200182016040528015610bd55781602001602082028036833780820191505090505b5090506000600190505b610be9600c6124f4565b8111610c2e578082600183610bfe9190614837565b81518110610c0f57610c0e614aee565b5b6020026020010181815250508080610c26906149b8565b915050610bdf565b508091505090565b610c3e611f7b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca290614618565b60405180910390fd5b610cb58282612502565b5050565b610cd483838360405180602001604052806000815250611d64565b505050565b60606000610ce683611802565b90506000811415610d4357600067ffffffffffffffff811115610d0c57610d0b614b1d565b5b604051908082528060200260200182016040528015610d3a5781602001602082028036833780820191505090505b50915050610dde565b60008167ffffffffffffffff811115610d5f57610d5e614b1d565b5b604051908082528060200260200182016040528015610d8d5781602001602082028036833780820191505090505b50905060005b82811015610dd757610da58582610adb565b828281518110610db857610db7614aee565b5b6020026020010181815250508080610dcf906149b8565b915050610d93565b5080925050505b919050565b60608060606000806000600e6000888152602001908152602001600020600001541415610e45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3c90614378565b60405180910390fd5b6000600e60008881526020019081526020016000206040518060c001604052908160008201548152602001600182018054610e7f90614955565b80601f0160208091040260200160405190810160405280929190818152602001828054610eab90614955565b8015610ef85780601f10610ecd57610100808354040283529160200191610ef8565b820191906000526020600020905b815481529060010190602001808311610edb57829003601f168201915b50505050508152602001600282018054610f1190614955565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3d90614955565b8015610f8a5780601f10610f5f57610100808354040283529160200191610f8a565b820191906000526020600020905b815481529060010190602001808311610f6d57829003601f168201915b5050505050815260200160038201548152602001600482018054610fad90614955565b80601f0160208091040260200160405190810160405280929190818152602001828054610fd990614955565b80156110265780601f10610ffb57610100808354040283529160200191611026565b820191906000526020600020905b81548152906001019060200180831161100957829003601f168201915b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090508060200151816040015182608001518360a001518460600151955095509550955095505091939590929450565b60006110e07f4504b9dfd7400a1522f49a8b4a100552da9236849581fd59b7363eb48c6a474c33611987565b61111f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111690614398565b60405180910390fd5b6000600e6000888152602001908152602001600020600001541415611179576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117090614378565b60405180910390fd5b6000600e60008881526020019081526020016000206040518060c0016040529081600082015481526020016001820180546111b390614955565b80601f01602080910402602001604051908101604052809291908181526020018280546111df90614955565b801561122c5780601f106112015761010080835404028352916020019161122c565b820191906000526020600020905b81548152906001019060200180831161120f57829003601f168201915b5050505050815260200160028201805461124590614955565b80601f016020809104026020016040519081016040528092919081815260200182805461127190614955565b80156112be5780601f10611293576101008083540402835291602001916112be565b820191906000526020600020905b8154815290600101906020018083116112a157829003601f168201915b50505050508152602001600382015481526020016004820180546112e190614955565b80601f016020809104026020016040519081016040528092919081815260200182805461130d90614955565b801561135a5780601f1061132f5761010080835404028352916020019161135a565b820191906000526020600020905b81548152906001019060200180831161133d57829003601f168201915b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090503373ffffffffffffffffffffffffffffffffffffffff168160a0015173ffffffffffffffffffffffffffffffffffffffff161461142d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142490614518565b60405180910390fd5b6040518060c001604052808881526020018781526020018681526020018581526020018481526020013373ffffffffffffffffffffffffffffffffffffffff16815250600e60008981526020019081526020016000206000820151816000015560208201518160010190805190602001906114a992919061365d565b5060408201518160020190805190602001906114c692919061365d565b506060820151816003015560808201518160040190805190602001906114ed92919061365d565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508691505095945050505050565b60006115717f4504b9dfd7400a1522f49a8b4a100552da9236849581fd59b7363eb48c6a474c33611987565b6115b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a790614398565b60405180910390fd5b6115ba600c6125e4565b60006115c6600c6124f4565b90506040518060c001604052808281526020018781526020018681526020018581526020018481526020013373ffffffffffffffffffffffffffffffffffffffff16815250600e600083815260200190815260200160002060008201518160000155602082015181600101908051906020019061164492919061365d565b50604082015181600201908051906020019061166192919061365d565b5060608201518160030155608082015181600401908051906020019061168892919061365d565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505080915050949350505050565b60006116e9610a25565b821061172a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611721906145f8565b60405180910390fd5b6008828154811061173e5761173d614aee565b5b90600052602060002001549050919050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f090614498565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611873576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161186a90614478565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6118c76000801b33611987565b611906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118fd906144d8565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505061194457600080fd5b565b7f4504b9dfd7400a1522f49a8b4a100552da9236849581fd59b7363eb48c6a474c81565b6000600f6000838152602001908152602001600020549050919050565b6000600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060018054611a0190614955565b80601f0160208091040260200160405190810160405280929190818152602001828054611a2d90614955565b8015611a7a5780601f10611a4f57610100808354040283529160200191611a7a565b820191906000526020600020905b815481529060010190602001808311611a5d57829003601f168201915b5050505050905090565b6000600e6000838152602001908152602001600020600001541415611ade576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ad590614378565b60405180910390fd5b6000611ae8610a25565b90506000600182611af99190614756565b9050611b0533826125fa565b611b0e81611f0f565b611b1757600080fd5b82600f600083815260200190815260200160002081905550611bd781600e60008681526020019081526020016000206004018054611b5490614955565b80601f0160208091040260200160405190810160405280929190818152602001828054611b8090614955565b8015611bcd5780601f10611ba257610100808354040283529160200191611bcd565b820191906000526020600020905b815481529060010190602001808311611bb057829003601f168201915b5050505050612618565b505050565b6000801b81565b611beb611f7b565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611c59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c5090614418565b60405180910390fd5b8060056000611c66611f7b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611d13611f7b565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611d589190614278565b60405180910390a35050565b611d75611d6f611f7b565b8361203c565b611db4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dab906145d8565b60405180910390fd5b611dc08484848461268c565b50505050565b6060611dd1826126e8565b9050919050565b611de182610a92565b611df281611ded611f7b565b612376565b611dfc8383612502565b505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611f085750611f078261283a565b5b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16611ff683611750565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061204782611f0f565b612086576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161207d90614438565b60405180910390fd5b600061209183611750565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061210057508373ffffffffffffffffffffffffffffffffffffffff166120e884610888565b73ffffffffffffffffffffffffffffffffffffffff16145b8061211157506121108185611e01565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661213a82611750565b73ffffffffffffffffffffffffffffffffffffffff1614612190576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161218790614578565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612200576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121f7906143f8565b60405180910390fd5b61220b8383836128b4565b612216600082611f83565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546122669190614837565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546122bd9190614756565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6123808282611987565b61240f576123a58173ffffffffffffffffffffffffffffffffffffffff1660146128c4565b6123b38360001c60206128c4565b6040516020016123c49291906141b5565b6040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161240691906142ae565b60405180910390fd5b5050565b61241d8282611987565b6124f0576001600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612495611f7b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600081600001549050919050565b61250c8282611987565b156125e0576000600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612585611f7b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6001816000016000828254019250508190555050565b612614828260405180602001604052806000815250612b00565b5050565b61262182611f0f565b612660576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612657906144b8565b60405180910390fd5b80600b6000848152602001908152602001600020908051906020019061268792919061365d565b505050565b61269784848461211a565b6126a384848484612b5b565b6126e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126d9906143b8565b60405180910390fd5b50505050565b60606126f382611f0f565b612732576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161272990614538565b60405180910390fd5b6000600b6000848152602001908152602001600020805461275290614955565b80601f016020809104026020016040519081016040528092919081815260200182805461277e90614955565b80156127cb5780601f106127a0576101008083540402835291602001916127cb565b820191906000526020600020905b8154815290600101906020018083116127ae57829003601f168201915b5050505050905060006127dc612cf2565b90506000815114156127f2578192505050612835565b60008251111561282757808260405160200161280f929190614191565b60405160208183030381529060405292505050612835565b61283084612d09565b925050505b919050565b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806128ad57506128ac82612db0565b5b9050919050565b6128bf838383612e92565b505050565b6060600060028360026128d791906147dd565b6128e19190614756565b67ffffffffffffffff8111156128fa576128f9614b1d565b5b6040519080825280601f01601f19166020018201604052801561292c5781602001600182028036833780820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061296457612963614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106129c8576129c7614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002612a0891906147dd565b612a129190614756565b90505b6001811115612ab2577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110612a5457612a53614aee565b5b1a60f81b828281518110612a6b57612a6a614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080612aab9061492b565b9050612a15565b5060008414612af6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612aed90614338565b60405180910390fd5b8091505092915050565b612b0a8383612fa6565b612b176000848484612b5b565b612b56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b4d906143b8565b60405180910390fd5b505050565b6000612b7c8473ffffffffffffffffffffffffffffffffffffffff16613174565b15612ce5578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02612ba5611f7b565b8786866040518563ffffffff1660e01b8152600401612bc7949392919061420a565b602060405180830381600087803b158015612be157600080fd5b505af1925050508015612c1257506040513d601f19601f82011682018060405250810190612c0f9190613abb565b60015b612c95573d8060008114612c42576040519150601f19603f3d011682016040523d82523d6000602084013e612c47565b606091505b50600081511415612c8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c84906143b8565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050612cea565b600190505b949350505050565b606060405180602001604052806000815250905090565b6060612d1482611f0f565b612d53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d4a90614598565b60405180910390fd5b6000612d5d612cf2565b90506000815111612d7d5760405180602001604052806000815250612da8565b80612d8784613187565b604051602001612d98929190614191565b6040516020818303038152906040525b915050919050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612e7b57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80612e8b5750612e8a826132e8565b5b9050919050565b612e9d838383613352565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612ee057612edb81613357565b612f1f565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612f1e57612f1d83826133a0565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612f6257612f5d8161350d565b612fa1565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612fa057612f9f82826135de565b5b5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613016576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161300d906144f8565b60405180910390fd5b61301f81611f0f565b1561305f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613056906143d8565b60405180910390fd5b61306b600083836128b4565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546130bb9190614756565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600080823b905060008111915050919050565b606060008214156131cf576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506132e3565b600082905060005b600082146132015780806131ea906149b8565b915050600a826131fa91906147ac565b91506131d7565b60008167ffffffffffffffff81111561321d5761321c614b1d565b5b6040519080825280601f01601f19166020018201604052801561324f5781602001600182028036833780820191505090505b5090505b600085146132dc576001826132689190614837565b9150600a856132779190614a01565b60306132839190614756565b60f81b81838151811061329957613298614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856132d591906147ac565b9450613253565b8093505050505b919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b505050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505060019003906000526020600020016000909190919091505550565b600060016133ad84611802565b6133b79190614837565b905060006007600084815260200190815260200160002054905081811461349c576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550816007600083815260200190815260200160002081905550505b6007600084815260200190815260200160002060009055600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905550505050565b600060016008805490506135219190614837565b905060006009600084815260200190815260200160002054905060006008838154811061355157613550614aee565b5b90600052602060002001549050806008838154811061357357613572614aee565b5b9060005260206000200181905550816009600083815260200190815260200160002081905550600960008581526020019081526020016000206000905560088054806135c2576135c1614abf565b5b6001900381819060005260206000200160009055905550505050565b60006135e983611802565b905081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806007600084815260200190815260200160002081905550505050565b82805461366990614955565b90600052602060002090601f01602090048101928261368b57600085556136d2565b82601f106136a457805160ff19168380011785556136d2565b828001600101855582156136d2579182015b828111156136d15782518255916020019190600101906136b6565b5b5090506136df91906136e3565b5090565b5b808211156136fc5760008160009055506001016136e4565b5090565b600061371361370e84614678565b614653565b90508281526020810184848401111561372f5761372e614b51565b5b61373a8482856148e9565b509392505050565b6000613755613750846146a9565b614653565b90508281526020810184848401111561377157613770614b51565b5b61377c8482856148e9565b509392505050565b60008135905061379381615247565b92915050565b6000813590506137a88161525e565b92915050565b6000813590506137bd81615275565b92915050565b6000813590506137d28161528c565b92915050565b6000815190506137e78161528c565b92915050565b600082601f83011261380257613801614b4c565b5b8135613812848260208601613700565b91505092915050565b600082601f8301126138305761382f614b4c565b5b8135613840848260208601613742565b91505092915050565b600081359050613858816152a3565b92915050565b60006020828403121561387457613873614b5b565b5b600061388284828501613784565b91505092915050565b600080604083850312156138a2576138a1614b5b565b5b60006138b085828601613784565b92505060206138c185828601613784565b9150509250929050565b6000806000606084860312156138e4576138e3614b5b565b5b60006138f286828701613784565b935050602061390386828701613784565b925050604061391486828701613849565b9150509250925092565b6000806000806080858703121561393857613937614b5b565b5b600061394687828801613784565b945050602061395787828801613784565b935050604061396887828801613849565b925050606085013567ffffffffffffffff81111561398957613988614b56565b5b613995878288016137ed565b91505092959194509250565b600080604083850312156139b8576139b7614b5b565b5b60006139c685828601613784565b92505060206139d785828601613799565b9150509250929050565b600080604083850312156139f8576139f7614b5b565b5b6000613a0685828601613784565b9250506020613a1785828601613849565b9150509250929050565b600060208284031215613a3757613a36614b5b565b5b6000613a45848285016137ae565b91505092915050565b60008060408385031215613a6557613a64614b5b565b5b6000613a73858286016137ae565b9250506020613a8485828601613784565b9150509250929050565b600060208284031215613aa457613aa3614b5b565b5b6000613ab2848285016137c3565b91505092915050565b600060208284031215613ad157613ad0614b5b565b5b6000613adf848285016137d8565b91505092915050565b60008060008060808587031215613b0257613b01614b5b565b5b600085013567ffffffffffffffff811115613b2057613b1f614b56565b5b613b2c8782880161381b565b945050602085013567ffffffffffffffff811115613b4d57613b4c614b56565b5b613b598782880161381b565b9350506040613b6a87828801613849565b925050606085013567ffffffffffffffff811115613b8b57613b8a614b56565b5b613b978782880161381b565b91505092959194509250565b600060208284031215613bb957613bb8614b5b565b5b6000613bc784828501613849565b91505092915050565b600080600080600060a08688031215613bec57613beb614b5b565b5b6000613bfa88828901613849565b955050602086013567ffffffffffffffff811115613c1b57613c1a614b56565b5b613c278882890161381b565b945050604086013567ffffffffffffffff811115613c4857613c47614b56565b5b613c548882890161381b565b9350506060613c6588828901613849565b925050608086013567ffffffffffffffff811115613c8657613c85614b56565b5b613c928882890161381b565b9150509295509295909350565b6000613cab8383614173565b60208301905092915050565b613cc08161486b565b82525050565b6000613cd1826146ea565b613cdb8185614718565b9350613ce6836146da565b8060005b83811015613d17578151613cfe8882613c9f565b9750613d098361470b565b925050600181019050613cea565b5085935050505092915050565b613d2d8161487d565b82525050565b613d3c81614889565b82525050565b6000613d4d826146f5565b613d578185614729565b9350613d678185602086016148f8565b613d7081614b60565b840191505092915050565b6000613d8682614700565b613d90818561473a565b9350613da08185602086016148f8565b613da981614b60565b840191505092915050565b6000613dbf82614700565b613dc9818561474b565b9350613dd98185602086016148f8565b80840191505092915050565b6000613df260208361473a565b9150613dfd82614b71565b602082019050919050565b6000613e15602b8361473a565b9150613e2082614b9a565b604082019050919050565b6000613e3860118361473a565b9150613e4382614be9565b602082019050919050565b6000613e5b60248361473a565b9150613e6682614c12565b604082019050919050565b6000613e7e60328361473a565b9150613e8982614c61565b604082019050919050565b6000613ea1601c8361473a565b9150613eac82614cb0565b602082019050919050565b6000613ec460248361473a565b9150613ecf82614cd9565b604082019050919050565b6000613ee760198361473a565b9150613ef282614d28565b602082019050919050565b6000613f0a602c8361473a565b9150613f1582614d51565b604082019050919050565b6000613f2d60388361473a565b9150613f3882614da0565b604082019050919050565b6000613f50602a8361473a565b9150613f5b82614def565b604082019050919050565b6000613f7360298361473a565b9150613f7e82614e3e565b604082019050919050565b6000613f96602e8361473a565b9150613fa182614e8d565b604082019050919050565b6000613fb9601c8361473a565b9150613fc482614edc565b602082019050919050565b6000613fdc60208361473a565b9150613fe782614f05565b602082019050919050565b6000613fff60218361473a565b915061400a82614f2e565b604082019050919050565b600061402260318361473a565b915061402d82614f7d565b604082019050919050565b6000614045602c8361473a565b915061405082614fcc565b604082019050919050565b600061406860298361473a565b91506140738261501b565b604082019050919050565b600061408b602f8361473a565b91506140968261506a565b604082019050919050565b60006140ae60218361473a565b91506140b9826150b9565b604082019050919050565b60006140d160318361473a565b91506140dc82615108565b604082019050919050565b60006140f4602c8361473a565b91506140ff82615157565b604082019050919050565b600061411760178361474b565b9150614122826151a6565b601782019050919050565b600061413a60118361474b565b9150614145826151cf565b601182019050919050565b600061415d602f8361473a565b9150614168826151f8565b604082019050919050565b61417c816148df565b82525050565b61418b816148df565b82525050565b600061419d8285613db4565b91506141a98284613db4565b91508190509392505050565b60006141c08261410a565b91506141cc8285613db4565b91506141d78261412d565b91506141e38284613db4565b91508190509392505050565b60006020820190506142046000830184613cb7565b92915050565b600060808201905061421f6000830187613cb7565b61422c6020830186613cb7565b6142396040830185614182565b818103606083015261424b8184613d42565b905095945050505050565b600060208201905081810360008301526142708184613cc6565b905092915050565b600060208201905061428d6000830184613d24565b92915050565b60006020820190506142a86000830184613d33565b92915050565b600060208201905081810360008301526142c88184613d7b565b905092915050565b600060a08201905081810360008301526142ea8188613d7b565b905081810360208301526142fe8187613d7b565b905081810360408301526143128186613d7b565b90506143216060830185613cb7565b61432e6080830184614182565b9695505050505050565b6000602082019050818103600083015261435181613de5565b9050919050565b6000602082019050818103600083015261437181613e08565b9050919050565b6000602082019050818103600083015261439181613e2b565b9050919050565b600060208201905081810360008301526143b181613e4e565b9050919050565b600060208201905081810360008301526143d181613e71565b9050919050565b600060208201905081810360008301526143f181613e94565b9050919050565b6000602082019050818103600083015261441181613eb7565b9050919050565b6000602082019050818103600083015261443181613eda565b9050919050565b6000602082019050818103600083015261445181613efd565b9050919050565b6000602082019050818103600083015261447181613f20565b9050919050565b6000602082019050818103600083015261449181613f43565b9050919050565b600060208201905081810360008301526144b181613f66565b9050919050565b600060208201905081810360008301526144d181613f89565b9050919050565b600060208201905081810360008301526144f181613fac565b9050919050565b6000602082019050818103600083015261451181613fcf565b9050919050565b6000602082019050818103600083015261453181613ff2565b9050919050565b6000602082019050818103600083015261455181614015565b9050919050565b6000602082019050818103600083015261457181614038565b9050919050565b600060208201905081810360008301526145918161405b565b9050919050565b600060208201905081810360008301526145b18161407e565b9050919050565b600060208201905081810360008301526145d1816140a1565b9050919050565b600060208201905081810360008301526145f1816140c4565b9050919050565b60006020820190508181036000830152614611816140e7565b9050919050565b6000602082019050818103600083015261463181614150565b9050919050565b600060208201905061464d6000830184614182565b92915050565b600061465d61466e565b90506146698282614987565b919050565b6000604051905090565b600067ffffffffffffffff82111561469357614692614b1d565b5b61469c82614b60565b9050602081019050919050565b600067ffffffffffffffff8211156146c4576146c3614b1d565b5b6146cd82614b60565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000614761826148df565b915061476c836148df565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156147a1576147a0614a32565b5b828201905092915050565b60006147b7826148df565b91506147c2836148df565b9250826147d2576147d1614a61565b5b828204905092915050565b60006147e8826148df565b91506147f3836148df565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561482c5761482b614a32565b5b828202905092915050565b6000614842826148df565b915061484d836148df565b9250828210156148605761485f614a32565b5b828203905092915050565b6000614876826148bf565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156149165780820151818401526020810190506148fb565b83811115614925576000848401525b50505050565b6000614936826148df565b9150600082141561494a57614949614a32565b5b600182039050919050565b6000600282049050600182168061496d57607f821691505b6020821081141561498157614980614a90565b5b50919050565b61499082614b60565b810181811067ffffffffffffffff821117156149af576149ae614b1d565b5b80604052505050565b60006149c3826148df565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156149f6576149f5614a32565b5b600182019050919050565b6000614a0c826148df565b9150614a17836148df565b925082614a2757614a26614a61565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008201527f74206f6620626f756e6473000000000000000000000000000000000000000000602082015250565b7f417070204944206d757374206578697374000000000000000000000000000000600082015250565b7f4d757374206265206120646576656c6f70657220746f2063726561746520616e60008201527f2061707000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b7f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008201527f6578697374656e7420746f6b656e000000000000000000000000000000000000602082015250565b7f4d75737420626520616e2061646d696e20746f20776974686472617700000000600082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f596f75206d75737420626520746865206f776e6572206f66207468697320617060008201527f7000000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524337323155524953746f726167653a2055524920717565727920666f722060008201527f6e6f6e6578697374656e7420746f6b656e000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008201527f73206e6f74206f776e0000000000000000000000000000000000000000000000602082015250565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b7f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008201527f7574206f6620626f756e64730000000000000000000000000000000000000000602082015250565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6152508161486b565b811461525b57600080fd5b50565b6152678161487d565b811461527257600080fd5b50565b61527e81614889565b811461528957600080fd5b50565b61529581614893565b81146152a057600080fd5b50565b6152ac816148df565b81146152b757600080fd5b5056fea26469706673582212206d1e1f96a7981ff2283155936d935258895e739fa6191f3ee5d4c71aebe1597c64736f6c63430008060033\";\nvar deployedBytecode = \"0x6080604052600436106101d85760003560e01c80634b42a0f81161010257806395d89b4111610095578063b88d4fde11610064578063b88d4fde14610718578063c87b56dd14610741578063d547741f1461077e578063e985e9c5146107a7576101d8565b806395d89b411461067d578063a0712d68146106a8578063a217fddf146106c4578063a22cb465146106ef576101d8565b8063853828b6116100d1578063853828b6146105ce5780639103a0e0146105d85780639118f31a1461060357806391d1485414610640576101d8565b80634b42a0f8146104da5780634f6ccce7146105175780636352211e1461055457806370a0823114610591576101d8565b80632f2ff15d1161017a57806342842e0e1161014957806342842e0e146103f6578063438b63001461041f578063458f9cfb1461045c578063471c1ea91461049d576101d8565b80632f2ff15d1461033c5780632f745c591461036557806333f717fe146103a257806336568abe146103cd576101d8565b8063095ea7b3116101b6578063095ea7b31461028257806318160ddd146102ab57806323b872dd146102d6578063248a9ca3146102ff576101d8565b806301ffc9a7146101dd57806306fdde031461021a578063081812fc14610245575b600080fd5b3480156101e957600080fd5b5061020460048036038101906101ff9190613a8e565b6107e4565b6040516102119190614278565b60405180910390f35b34801561022657600080fd5b5061022f6107f6565b60405161023c91906142ae565b60405180910390f35b34801561025157600080fd5b5061026c60048036038101906102679190613ba3565b610888565b60405161027991906141ef565b60405180910390f35b34801561028e57600080fd5b506102a960048036038101906102a491906139e1565b61090d565b005b3480156102b757600080fd5b506102c0610a25565b6040516102cd9190614638565b60405180910390f35b3480156102e257600080fd5b506102fd60048036038101906102f891906138cb565b610a32565b005b34801561030b57600080fd5b5061032660048036038101906103219190613a21565b610a92565b6040516103339190614293565b60405180910390f35b34801561034857600080fd5b50610363600480360381019061035e9190613a4e565b610ab2565b005b34801561037157600080fd5b5061038c600480360381019061038791906139e1565b610adb565b6040516103999190614638565b60405180910390f35b3480156103ae57600080fd5b506103b7610b80565b6040516103c49190614256565b60405180910390f35b3480156103d957600080fd5b506103f460048036038101906103ef9190613a4e565b610c36565b005b34801561040257600080fd5b5061041d600480360381019061041891906138cb565b610cb9565b005b34801561042b57600080fd5b506104466004803603810190610441919061385e565b610cd9565b6040516104539190614256565b60405180910390f35b34801561046857600080fd5b50610483600480360381019061047e9190613ba3565b610de3565b6040516104949594939291906142d0565b60405180910390f35b3480156104a957600080fd5b506104c460048036038101906104bf9190613bd0565b6110b4565b6040516104d19190614638565b60405180910390f35b3480156104e657600080fd5b5061050160048036038101906104fc9190613ae8565b611545565b60405161050e9190614638565b60405180910390f35b34801561052357600080fd5b5061053e60048036038101906105399190613ba3565b6116df565b60405161054b9190614638565b60405180910390f35b34801561056057600080fd5b5061057b60048036038101906105769190613ba3565b611750565b60405161058891906141ef565b60405180910390f35b34801561059d57600080fd5b506105b860048036038101906105b3919061385e565b611802565b6040516105c59190614638565b60405180910390f35b6105d66118ba565b005b3480156105e457600080fd5b506105ed611946565b6040516105fa9190614293565b60405180910390f35b34801561060f57600080fd5b5061062a60048036038101906106259190613ba3565b61196a565b6040516106379190614638565b60405180910390f35b34801561064c57600080fd5b5061066760048036038101906106629190613a4e565b611987565b6040516106749190614278565b60405180910390f35b34801561068957600080fd5b506106926119f2565b60405161069f91906142ae565b60405180910390f35b6106c260048036038101906106bd9190613ba3565b611a84565b005b3480156106d057600080fd5b506106d9611bdc565b6040516106e69190614293565b60405180910390f35b3480156106fb57600080fd5b50610716600480360381019061071191906139a1565b611be3565b005b34801561072457600080fd5b5061073f600480360381019061073a919061391e565b611d64565b005b34801561074d57600080fd5b5061076860048036038101906107639190613ba3565b611dc6565b60405161077591906142ae565b60405180910390f35b34801561078a57600080fd5b506107a560048036038101906107a09190613a4e565b611dd8565b005b3480156107b357600080fd5b506107ce60048036038101906107c9919061388b565b611e01565b6040516107db9190614278565b60405180910390f35b60006107ef82611e95565b9050919050565b60606000805461080590614955565b80601f016020809104026020016040519081016040528092919081815260200182805461083190614955565b801561087e5780601f106108535761010080835404028352916020019161087e565b820191906000526020600020905b81548152906001019060200180831161086157829003601f168201915b5050505050905090565b600061089382611f0f565b6108d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c990614558565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061091882611750565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610989576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610980906145b8565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166109a8611f7b565b73ffffffffffffffffffffffffffffffffffffffff1614806109d757506109d6816109d1611f7b565b611e01565b5b610a16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0d90614458565b60405180910390fd5b610a208383611f83565b505050565b6000600880549050905090565b610a43610a3d611f7b565b8261203c565b610a82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a79906145d8565b60405180910390fd5b610a8d83838361211a565b505050565b6000600a6000838152602001908152602001600020600101549050919050565b610abb82610a92565b610acc81610ac7611f7b565b612376565b610ad68383612413565b505050565b6000610ae683611802565b8210610b27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1e90614358565b60405180910390fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b60606000610b8e600c6124f4565b67ffffffffffffffff811115610ba757610ba6614b1d565b5b604051908082528060200260200182016040528015610bd55781602001602082028036833780820191505090505b5090506000600190505b610be9600c6124f4565b8111610c2e578082600183610bfe9190614837565b81518110610c0f57610c0e614aee565b5b6020026020010181815250508080610c26906149b8565b915050610bdf565b508091505090565b610c3e611f7b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca290614618565b60405180910390fd5b610cb58282612502565b5050565b610cd483838360405180602001604052806000815250611d64565b505050565b60606000610ce683611802565b90506000811415610d4357600067ffffffffffffffff811115610d0c57610d0b614b1d565b5b604051908082528060200260200182016040528015610d3a5781602001602082028036833780820191505090505b50915050610dde565b60008167ffffffffffffffff811115610d5f57610d5e614b1d565b5b604051908082528060200260200182016040528015610d8d5781602001602082028036833780820191505090505b50905060005b82811015610dd757610da58582610adb565b828281518110610db857610db7614aee565b5b6020026020010181815250508080610dcf906149b8565b915050610d93565b5080925050505b919050565b60608060606000806000600e6000888152602001908152602001600020600001541415610e45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3c90614378565b60405180910390fd5b6000600e60008881526020019081526020016000206040518060c001604052908160008201548152602001600182018054610e7f90614955565b80601f0160208091040260200160405190810160405280929190818152602001828054610eab90614955565b8015610ef85780601f10610ecd57610100808354040283529160200191610ef8565b820191906000526020600020905b815481529060010190602001808311610edb57829003601f168201915b50505050508152602001600282018054610f1190614955565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3d90614955565b8015610f8a5780601f10610f5f57610100808354040283529160200191610f8a565b820191906000526020600020905b815481529060010190602001808311610f6d57829003601f168201915b5050505050815260200160038201548152602001600482018054610fad90614955565b80601f0160208091040260200160405190810160405280929190818152602001828054610fd990614955565b80156110265780601f10610ffb57610100808354040283529160200191611026565b820191906000526020600020905b81548152906001019060200180831161100957829003601f168201915b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090508060200151816040015182608001518360a001518460600151955095509550955095505091939590929450565b60006110e07f4504b9dfd7400a1522f49a8b4a100552da9236849581fd59b7363eb48c6a474c33611987565b61111f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111690614398565b60405180910390fd5b6000600e6000888152602001908152602001600020600001541415611179576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117090614378565b60405180910390fd5b6000600e60008881526020019081526020016000206040518060c0016040529081600082015481526020016001820180546111b390614955565b80601f01602080910402602001604051908101604052809291908181526020018280546111df90614955565b801561122c5780601f106112015761010080835404028352916020019161122c565b820191906000526020600020905b81548152906001019060200180831161120f57829003601f168201915b5050505050815260200160028201805461124590614955565b80601f016020809104026020016040519081016040528092919081815260200182805461127190614955565b80156112be5780601f10611293576101008083540402835291602001916112be565b820191906000526020600020905b8154815290600101906020018083116112a157829003601f168201915b50505050508152602001600382015481526020016004820180546112e190614955565b80601f016020809104026020016040519081016040528092919081815260200182805461130d90614955565b801561135a5780601f1061132f5761010080835404028352916020019161135a565b820191906000526020600020905b81548152906001019060200180831161133d57829003601f168201915b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090503373ffffffffffffffffffffffffffffffffffffffff168160a0015173ffffffffffffffffffffffffffffffffffffffff161461142d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142490614518565b60405180910390fd5b6040518060c001604052808881526020018781526020018681526020018581526020018481526020013373ffffffffffffffffffffffffffffffffffffffff16815250600e60008981526020019081526020016000206000820151816000015560208201518160010190805190602001906114a992919061365d565b5060408201518160020190805190602001906114c692919061365d565b506060820151816003015560808201518160040190805190602001906114ed92919061365d565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508691505095945050505050565b60006115717f4504b9dfd7400a1522f49a8b4a100552da9236849581fd59b7363eb48c6a474c33611987565b6115b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a790614398565b60405180910390fd5b6115ba600c6125e4565b60006115c6600c6124f4565b90506040518060c001604052808281526020018781526020018681526020018581526020018481526020013373ffffffffffffffffffffffffffffffffffffffff16815250600e600083815260200190815260200160002060008201518160000155602082015181600101908051906020019061164492919061365d565b50604082015181600201908051906020019061166192919061365d565b5060608201518160030155608082015181600401908051906020019061168892919061365d565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505080915050949350505050565b60006116e9610a25565b821061172a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611721906145f8565b60405180910390fd5b6008828154811061173e5761173d614aee565b5b90600052602060002001549050919050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f090614498565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611873576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161186a90614478565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6118c76000801b33611987565b611906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118fd906144d8565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505061194457600080fd5b565b7f4504b9dfd7400a1522f49a8b4a100552da9236849581fd59b7363eb48c6a474c81565b6000600f6000838152602001908152602001600020549050919050565b6000600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060018054611a0190614955565b80601f0160208091040260200160405190810160405280929190818152602001828054611a2d90614955565b8015611a7a5780601f10611a4f57610100808354040283529160200191611a7a565b820191906000526020600020905b815481529060010190602001808311611a5d57829003601f168201915b5050505050905090565b6000600e6000838152602001908152602001600020600001541415611ade576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ad590614378565b60405180910390fd5b6000611ae8610a25565b90506000600182611af99190614756565b9050611b0533826125fa565b611b0e81611f0f565b611b1757600080fd5b82600f600083815260200190815260200160002081905550611bd781600e60008681526020019081526020016000206004018054611b5490614955565b80601f0160208091040260200160405190810160405280929190818152602001828054611b8090614955565b8015611bcd5780601f10611ba257610100808354040283529160200191611bcd565b820191906000526020600020905b815481529060010190602001808311611bb057829003601f168201915b5050505050612618565b505050565b6000801b81565b611beb611f7b565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611c59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c5090614418565b60405180910390fd5b8060056000611c66611f7b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611d13611f7b565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611d589190614278565b60405180910390a35050565b611d75611d6f611f7b565b8361203c565b611db4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dab906145d8565b60405180910390fd5b611dc08484848461268c565b50505050565b6060611dd1826126e8565b9050919050565b611de182610a92565b611df281611ded611f7b565b612376565b611dfc8383612502565b505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611f085750611f078261283a565b5b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16611ff683611750565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061204782611f0f565b612086576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161207d90614438565b60405180910390fd5b600061209183611750565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061210057508373ffffffffffffffffffffffffffffffffffffffff166120e884610888565b73ffffffffffffffffffffffffffffffffffffffff16145b8061211157506121108185611e01565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661213a82611750565b73ffffffffffffffffffffffffffffffffffffffff1614612190576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161218790614578565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612200576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121f7906143f8565b60405180910390fd5b61220b8383836128b4565b612216600082611f83565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546122669190614837565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546122bd9190614756565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6123808282611987565b61240f576123a58173ffffffffffffffffffffffffffffffffffffffff1660146128c4565b6123b38360001c60206128c4565b6040516020016123c49291906141b5565b6040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161240691906142ae565b60405180910390fd5b5050565b61241d8282611987565b6124f0576001600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612495611f7b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600081600001549050919050565b61250c8282611987565b156125e0576000600a600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612585611f7b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6001816000016000828254019250508190555050565b612614828260405180602001604052806000815250612b00565b5050565b61262182611f0f565b612660576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612657906144b8565b60405180910390fd5b80600b6000848152602001908152602001600020908051906020019061268792919061365d565b505050565b61269784848461211a565b6126a384848484612b5b565b6126e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126d9906143b8565b60405180910390fd5b50505050565b60606126f382611f0f565b612732576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161272990614538565b60405180910390fd5b6000600b6000848152602001908152602001600020805461275290614955565b80601f016020809104026020016040519081016040528092919081815260200182805461277e90614955565b80156127cb5780601f106127a0576101008083540402835291602001916127cb565b820191906000526020600020905b8154815290600101906020018083116127ae57829003601f168201915b5050505050905060006127dc612cf2565b90506000815114156127f2578192505050612835565b60008251111561282757808260405160200161280f929190614191565b60405160208183030381529060405292505050612835565b61283084612d09565b925050505b919050565b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806128ad57506128ac82612db0565b5b9050919050565b6128bf838383612e92565b505050565b6060600060028360026128d791906147dd565b6128e19190614756565b67ffffffffffffffff8111156128fa576128f9614b1d565b5b6040519080825280601f01601f19166020018201604052801561292c5781602001600182028036833780820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061296457612963614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106129c8576129c7614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002612a0891906147dd565b612a129190614756565b90505b6001811115612ab2577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110612a5457612a53614aee565b5b1a60f81b828281518110612a6b57612a6a614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080612aab9061492b565b9050612a15565b5060008414612af6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612aed90614338565b60405180910390fd5b8091505092915050565b612b0a8383612fa6565b612b176000848484612b5b565b612b56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b4d906143b8565b60405180910390fd5b505050565b6000612b7c8473ffffffffffffffffffffffffffffffffffffffff16613174565b15612ce5578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02612ba5611f7b565b8786866040518563ffffffff1660e01b8152600401612bc7949392919061420a565b602060405180830381600087803b158015612be157600080fd5b505af1925050508015612c1257506040513d601f19601f82011682018060405250810190612c0f9190613abb565b60015b612c95573d8060008114612c42576040519150601f19603f3d011682016040523d82523d6000602084013e612c47565b606091505b50600081511415612c8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c84906143b8565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050612cea565b600190505b949350505050565b606060405180602001604052806000815250905090565b6060612d1482611f0f565b612d53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d4a90614598565b60405180910390fd5b6000612d5d612cf2565b90506000815111612d7d5760405180602001604052806000815250612da8565b80612d8784613187565b604051602001612d98929190614191565b6040516020818303038152906040525b915050919050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612e7b57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80612e8b5750612e8a826132e8565b5b9050919050565b612e9d838383613352565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612ee057612edb81613357565b612f1f565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612f1e57612f1d83826133a0565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612f6257612f5d8161350d565b612fa1565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612fa057612f9f82826135de565b5b5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613016576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161300d906144f8565b60405180910390fd5b61301f81611f0f565b1561305f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613056906143d8565b60405180910390fd5b61306b600083836128b4565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546130bb9190614756565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600080823b905060008111915050919050565b606060008214156131cf576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506132e3565b600082905060005b600082146132015780806131ea906149b8565b915050600a826131fa91906147ac565b91506131d7565b60008167ffffffffffffffff81111561321d5761321c614b1d565b5b6040519080825280601f01601f19166020018201604052801561324f5781602001600182028036833780820191505090505b5090505b600085146132dc576001826132689190614837565b9150600a856132779190614a01565b60306132839190614756565b60f81b81838151811061329957613298614aee565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856132d591906147ac565b9450613253565b8093505050505b919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b505050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505060019003906000526020600020016000909190919091505550565b600060016133ad84611802565b6133b79190614837565b905060006007600084815260200190815260200160002054905081811461349c576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550816007600083815260200190815260200160002081905550505b6007600084815260200190815260200160002060009055600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905550505050565b600060016008805490506135219190614837565b905060006009600084815260200190815260200160002054905060006008838154811061355157613550614aee565b5b90600052602060002001549050806008838154811061357357613572614aee565b5b9060005260206000200181905550816009600083815260200190815260200160002081905550600960008581526020019081526020016000206000905560088054806135c2576135c1614abf565b5b6001900381819060005260206000200160009055905550505050565b60006135e983611802565b905081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806007600084815260200190815260200160002081905550505050565b82805461366990614955565b90600052602060002090601f01602090048101928261368b57600085556136d2565b82601f106136a457805160ff19168380011785556136d2565b828001600101855582156136d2579182015b828111156136d15782518255916020019190600101906136b6565b5b5090506136df91906136e3565b5090565b5b808211156136fc5760008160009055506001016136e4565b5090565b600061371361370e84614678565b614653565b90508281526020810184848401111561372f5761372e614b51565b5b61373a8482856148e9565b509392505050565b6000613755613750846146a9565b614653565b90508281526020810184848401111561377157613770614b51565b5b61377c8482856148e9565b509392505050565b60008135905061379381615247565b92915050565b6000813590506137a88161525e565b92915050565b6000813590506137bd81615275565b92915050565b6000813590506137d28161528c565b92915050565b6000815190506137e78161528c565b92915050565b600082601f83011261380257613801614b4c565b5b8135613812848260208601613700565b91505092915050565b600082601f8301126138305761382f614b4c565b5b8135613840848260208601613742565b91505092915050565b600081359050613858816152a3565b92915050565b60006020828403121561387457613873614b5b565b5b600061388284828501613784565b91505092915050565b600080604083850312156138a2576138a1614b5b565b5b60006138b085828601613784565b92505060206138c185828601613784565b9150509250929050565b6000806000606084860312156138e4576138e3614b5b565b5b60006138f286828701613784565b935050602061390386828701613784565b925050604061391486828701613849565b9150509250925092565b6000806000806080858703121561393857613937614b5b565b5b600061394687828801613784565b945050602061395787828801613784565b935050604061396887828801613849565b925050606085013567ffffffffffffffff81111561398957613988614b56565b5b613995878288016137ed565b91505092959194509250565b600080604083850312156139b8576139b7614b5b565b5b60006139c685828601613784565b92505060206139d785828601613799565b9150509250929050565b600080604083850312156139f8576139f7614b5b565b5b6000613a0685828601613784565b9250506020613a1785828601613849565b9150509250929050565b600060208284031215613a3757613a36614b5b565b5b6000613a45848285016137ae565b91505092915050565b60008060408385031215613a6557613a64614b5b565b5b6000613a73858286016137ae565b9250506020613a8485828601613784565b9150509250929050565b600060208284031215613aa457613aa3614b5b565b5b6000613ab2848285016137c3565b91505092915050565b600060208284031215613ad157613ad0614b5b565b5b6000613adf848285016137d8565b91505092915050565b60008060008060808587031215613b0257613b01614b5b565b5b600085013567ffffffffffffffff811115613b2057613b1f614b56565b5b613b2c8782880161381b565b945050602085013567ffffffffffffffff811115613b4d57613b4c614b56565b5b613b598782880161381b565b9350506040613b6a87828801613849565b925050606085013567ffffffffffffffff811115613b8b57613b8a614b56565b5b613b978782880161381b565b91505092959194509250565b600060208284031215613bb957613bb8614b5b565b5b6000613bc784828501613849565b91505092915050565b600080600080600060a08688031215613bec57613beb614b5b565b5b6000613bfa88828901613849565b955050602086013567ffffffffffffffff811115613c1b57613c1a614b56565b5b613c278882890161381b565b945050604086013567ffffffffffffffff811115613c4857613c47614b56565b5b613c548882890161381b565b9350506060613c6588828901613849565b925050608086013567ffffffffffffffff811115613c8657613c85614b56565b5b613c928882890161381b565b9150509295509295909350565b6000613cab8383614173565b60208301905092915050565b613cc08161486b565b82525050565b6000613cd1826146ea565b613cdb8185614718565b9350613ce6836146da565b8060005b83811015613d17578151613cfe8882613c9f565b9750613d098361470b565b925050600181019050613cea565b5085935050505092915050565b613d2d8161487d565b82525050565b613d3c81614889565b82525050565b6000613d4d826146f5565b613d578185614729565b9350613d678185602086016148f8565b613d7081614b60565b840191505092915050565b6000613d8682614700565b613d90818561473a565b9350613da08185602086016148f8565b613da981614b60565b840191505092915050565b6000613dbf82614700565b613dc9818561474b565b9350613dd98185602086016148f8565b80840191505092915050565b6000613df260208361473a565b9150613dfd82614b71565b602082019050919050565b6000613e15602b8361473a565b9150613e2082614b9a565b604082019050919050565b6000613e3860118361473a565b9150613e4382614be9565b602082019050919050565b6000613e5b60248361473a565b9150613e6682614c12565b604082019050919050565b6000613e7e60328361473a565b9150613e8982614c61565b604082019050919050565b6000613ea1601c8361473a565b9150613eac82614cb0565b602082019050919050565b6000613ec460248361473a565b9150613ecf82614cd9565b604082019050919050565b6000613ee760198361473a565b9150613ef282614d28565b602082019050919050565b6000613f0a602c8361473a565b9150613f1582614d51565b604082019050919050565b6000613f2d60388361473a565b9150613f3882614da0565b604082019050919050565b6000613f50602a8361473a565b9150613f5b82614def565b604082019050919050565b6000613f7360298361473a565b9150613f7e82614e3e565b604082019050919050565b6000613f96602e8361473a565b9150613fa182614e8d565b604082019050919050565b6000613fb9601c8361473a565b9150613fc482614edc565b602082019050919050565b6000613fdc60208361473a565b9150613fe782614f05565b602082019050919050565b6000613fff60218361473a565b915061400a82614f2e565b604082019050919050565b600061402260318361473a565b915061402d82614f7d565b604082019050919050565b6000614045602c8361473a565b915061405082614fcc565b604082019050919050565b600061406860298361473a565b91506140738261501b565b604082019050919050565b600061408b602f8361473a565b91506140968261506a565b604082019050919050565b60006140ae60218361473a565b91506140b9826150b9565b604082019050919050565b60006140d160318361473a565b91506140dc82615108565b604082019050919050565b60006140f4602c8361473a565b91506140ff82615157565b604082019050919050565b600061411760178361474b565b9150614122826151a6565b601782019050919050565b600061413a60118361474b565b9150614145826151cf565b601182019050919050565b600061415d602f8361473a565b9150614168826151f8565b604082019050919050565b61417c816148df565b82525050565b61418b816148df565b82525050565b600061419d8285613db4565b91506141a98284613db4565b91508190509392505050565b60006141c08261410a565b91506141cc8285613db4565b91506141d78261412d565b91506141e38284613db4565b91508190509392505050565b60006020820190506142046000830184613cb7565b92915050565b600060808201905061421f6000830187613cb7565b61422c6020830186613cb7565b6142396040830185614182565b818103606083015261424b8184613d42565b905095945050505050565b600060208201905081810360008301526142708184613cc6565b905092915050565b600060208201905061428d6000830184613d24565b92915050565b60006020820190506142a86000830184613d33565b92915050565b600060208201905081810360008301526142c88184613d7b565b905092915050565b600060a08201905081810360008301526142ea8188613d7b565b905081810360208301526142fe8187613d7b565b905081810360408301526143128186613d7b565b90506143216060830185613cb7565b61432e6080830184614182565b9695505050505050565b6000602082019050818103600083015261435181613de5565b9050919050565b6000602082019050818103600083015261437181613e08565b9050919050565b6000602082019050818103600083015261439181613e2b565b9050919050565b600060208201905081810360008301526143b181613e4e565b9050919050565b600060208201905081810360008301526143d181613e71565b9050919050565b600060208201905081810360008301526143f181613e94565b9050919050565b6000602082019050818103600083015261441181613eb7565b9050919050565b6000602082019050818103600083015261443181613eda565b9050919050565b6000602082019050818103600083015261445181613efd565b9050919050565b6000602082019050818103600083015261447181613f20565b9050919050565b6000602082019050818103600083015261449181613f43565b9050919050565b600060208201905081810360008301526144b181613f66565b9050919050565b600060208201905081810360008301526144d181613f89565b9050919050565b600060208201905081810360008301526144f181613fac565b9050919050565b6000602082019050818103600083015261451181613fcf565b9050919050565b6000602082019050818103600083015261453181613ff2565b9050919050565b6000602082019050818103600083015261455181614015565b9050919050565b6000602082019050818103600083015261457181614038565b9050919050565b600060208201905081810360008301526145918161405b565b9050919050565b600060208201905081810360008301526145b18161407e565b9050919050565b600060208201905081810360008301526145d1816140a1565b9050919050565b600060208201905081810360008301526145f1816140c4565b9050919050565b60006020820190508181036000830152614611816140e7565b9050919050565b6000602082019050818103600083015261463181614150565b9050919050565b600060208201905061464d6000830184614182565b92915050565b600061465d61466e565b90506146698282614987565b919050565b6000604051905090565b600067ffffffffffffffff82111561469357614692614b1d565b5b61469c82614b60565b9050602081019050919050565b600067ffffffffffffffff8211156146c4576146c3614b1d565b5b6146cd82614b60565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000614761826148df565b915061476c836148df565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156147a1576147a0614a32565b5b828201905092915050565b60006147b7826148df565b91506147c2836148df565b9250826147d2576147d1614a61565b5b828204905092915050565b60006147e8826148df565b91506147f3836148df565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561482c5761482b614a32565b5b828202905092915050565b6000614842826148df565b915061484d836148df565b9250828210156148605761485f614a32565b5b828203905092915050565b6000614876826148bf565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156149165780820151818401526020810190506148fb565b83811115614925576000848401525b50505050565b6000614936826148df565b9150600082141561494a57614949614a32565b5b600182039050919050565b6000600282049050600182168061496d57607f821691505b6020821081141561498157614980614a90565b5b50919050565b61499082614b60565b810181811067ffffffffffffffff821117156149af576149ae614b1d565b5b80604052505050565b60006149c3826148df565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156149f6576149f5614a32565b5b600182019050919050565b6000614a0c826148df565b9150614a17836148df565b925082614a2757614a26614a61565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008201527f74206f6620626f756e6473000000000000000000000000000000000000000000602082015250565b7f417070204944206d757374206578697374000000000000000000000000000000600082015250565b7f4d757374206265206120646576656c6f70657220746f2063726561746520616e60008201527f2061707000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b7f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008201527f6578697374656e7420746f6b656e000000000000000000000000000000000000602082015250565b7f4d75737420626520616e2061646d696e20746f20776974686472617700000000600082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f596f75206d75737420626520746865206f776e6572206f66207468697320617060008201527f7000000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524337323155524953746f726167653a2055524920717565727920666f722060008201527f6e6f6e6578697374656e7420746f6b656e000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008201527f73206e6f74206f776e0000000000000000000000000000000000000000000000602082015250565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b7f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008201527f7574206f6620626f756e64730000000000000000000000000000000000000000602082015250565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6152508161486b565b811461525b57600080fd5b50565b6152678161487d565b811461527257600080fd5b50565b61527e81614889565b811461528957600080fd5b50565b61529581614893565b81146152a057600080fd5b50565b6152ac816148df565b81146152b757600080fd5b5056fea26469706673582212206d1e1f96a7981ff2283155936d935258895e739fa6191f3ee5d4c71aebe1597c64736f6c63430008060033\";\nvar linkReferences = {\n};\nvar deployedLinkReferences = {\n};\nvar abi$1 = {\n\t_format: _format,\n\tcontractName: contractName,\n\tsourceName: sourceName,\n\tabi: abi,\n\tbytecode: bytecode,\n\tdeployedBytecode: deployedBytecode,\n\tlinkReferences: linkReferences,\n\tdeployedLinkReferences: deployedLinkReferences\n};\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nfunction getCjsExportFromNamespace (n) {\n\treturn n && n['default'] || n;\n}\n\nvar _nodeResolve_empty = {};\n\nvar _nodeResolve_empty$1 = {\n  __proto__: null,\n  'default': _nodeResolve_empty\n};\n\nvar require$$0 = getCjsExportFromNamespace(_nodeResolve_empty$1);\n\nvar bn = createCommonjsModule(function (module) {\n(function (module, exports) {\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require$$0.Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) ; else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})( module, commonjsGlobal);\n});\n\nconst version = \"logger/5.4.0\";\n//# sourceMappingURL=_version.js.map\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nvar ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficien funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\nclass Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            try {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key]));\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map\n\nconst version$1 = \"bytes/5.4.0\";\n//# sourceMappingURL=_version.js.map\n\nconst logger = new Logger(version$1);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nfunction isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nfunction isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (value.length == null) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (typeof (v) !== \"number\" || v < 0 || v >= 256 || (v % 1)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nfunction concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nfunction stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nfunction zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nfunction isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nfunction hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (typeof (value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) {\n            return (\"0x0\" + value);\n        }\n        return \"0x\" + value;\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nfunction hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nfunction hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nfunction hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nfunction hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nfunction hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nfunction hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nfunction splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0\n    };\n    if (isBytesLike(signature)) {\n        const bytes = arrayify(signature);\n        if (bytes.length !== 65) {\n            logger.throwArgumentError(\"invalid signature string; must be 65 bytes\", \"signature\", signature);\n        }\n        // Get the r, s and v\n        result.r = hexlify(bytes.slice(0, 32));\n        result.s = hexlify(bytes.slice(32, 64));\n        result.v = bytes[64];\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else if (result.recoveryParam !== (1 - (result.v % 2))) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    return result;\n}\nfunction joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n//# sourceMappingURL=index.js.map\n\nconst version$2 = \"bignumber/5.4.1\";\n//# sourceMappingURL=_version.js.map\n\nvar BN = bn.BN;\nconst logger$1 = new Logger(version$2);\nconst _constructorGuard = {};\nconst MAX_SAFE = 0x1fffffffffffff;\nfunction isBigNumberish(value) {\n    return (value != null) && (BigNumber.isBigNumber(value) ||\n        (typeof (value) === \"number\" && (value % 1) === 0) ||\n        (typeof (value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof (value) === \"bigint\") ||\n        isBytes(value));\n}\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\nclass BigNumber {\n    constructor(constructorGuard, hex) {\n        logger$1.checkNew(new.target, BigNumber);\n        if (constructorGuard !== _constructorGuard) {\n            logger$1.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n        this._hex = hex;\n        this._isBigNumber = true;\n        Object.freeze(this);\n    }\n    fromTwos(value) {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n    toTwos(value) {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n    abs() {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n    add(other) {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n    sub(other) {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n    div(other) {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division by zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n    mul(other) {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n    mod(other) {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"cannot modulo negative values\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n    pow(other) {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"cannot raise to negative values\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n    and(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'and' negative values\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n    or(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'or' negative values\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n    xor(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'xor' negative values\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n    mask(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot mask negative values\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n    shl(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot shift negative values\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n    shr(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot shift negative values\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n    eq(other) {\n        return toBN(this).eq(toBN(other));\n    }\n    lt(other) {\n        return toBN(this).lt(toBN(other));\n    }\n    lte(other) {\n        return toBN(this).lte(toBN(other));\n    }\n    gt(other) {\n        return toBN(this).gt(toBN(other));\n    }\n    gte(other) {\n        return toBN(this).gte(toBN(other));\n    }\n    isNegative() {\n        return (this._hex[0] === \"-\");\n    }\n    isZero() {\n        return toBN(this).isZero();\n    }\n    toNumber() {\n        try {\n            return toBN(this).toNumber();\n        }\n        catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n    toBigInt() {\n        try {\n            return BigInt(this.toString());\n        }\n        catch (e) { }\n        return logger$1.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n    toString() {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger$1.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            }\n            else if (arguments[0] === 16) {\n                logger$1.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n            }\n            else {\n                logger$1.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n            }\n        }\n        return toBN(this).toString(10);\n    }\n    toHexString() {\n        return this._hex;\n    }\n    toJSON(key) {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n    static from(value) {\n        if (value instanceof BigNumber) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n            return logger$1.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n        if (typeof (value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n            return BigNumber.from(String(value));\n        }\n        const anyValue = value;\n        if (typeof (anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n        if (anyValue) {\n            // Hexable interface (takes piority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof (hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n            }\n            else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n                if (typeof (hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n        return logger$1.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n    static isBigNumber(value) {\n        return !!(value && value._isBigNumber);\n    }\n}\n// Normalize the hex string\nfunction toHex(value) {\n    // For BN, call on the hex string\n    if (typeof (value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n        // Cannot have mulitple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") {\n            logger$1.throwArgumentError(\"invalid hex\", \"value\", value);\n        }\n        // Call toHex on the positive component\n        value = toHex(value);\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") {\n            return value;\n        }\n        // Negate the value\n        return \"-\" + value;\n    }\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    // Normalize zero\n    if (value === \"0x\") {\n        return \"0x00\";\n    }\n    // Make the string even length\n    if (value.length % 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n    return value;\n}\nfunction toBigNumber(value) {\n    return BigNumber.from(toHex(value));\n}\nfunction toBN(value) {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\nfunction throwFault(fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value != null) {\n        params.value = value;\n    }\n    return logger$1.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n// value should have no prefix\nfunction _base36To16(value) {\n    return (new BN(value, 36)).toString(16);\n}\n// value should have no prefix\nfunction _base16To36(value) {\n    return (new BN(value, 16)).toString(36);\n}\n//# sourceMappingURL=bignumber.js.map\n\nconst logger$2 = new Logger(version$2);\nconst _constructorGuard$1 = {};\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\nfunction throwFault$1(message, fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value !== undefined) {\n        params.value = value;\n    }\n    return logger$2.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n}\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\";\nwhile (zeros.length < 256) {\n    zeros += zeros;\n}\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals) {\n    if (typeof (decimals) !== \"number\") {\n        try {\n            decimals = BigNumber.from(decimals).toNumber();\n        }\n        catch (e) { }\n    }\n    if (typeof (decimals) === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n        return (\"1\" + zeros.substring(0, decimals));\n    }\n    return logger$2.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\nfunction formatFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    // Make sure wei is a big number (convert as necessary)\n    value = BigNumber.from(value);\n    const negative = value.lt(Zero);\n    if (negative) {\n        value = value.mul(NegativeOne);\n    }\n    let fraction = value.mod(multiplier).toString();\n    while (fraction.length < multiplier.length - 1) {\n        fraction = \"0\" + fraction;\n    }\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n    const whole = value.div(multiplier).toString();\n    if (multiplier.length === 1) {\n        value = whole;\n    }\n    else {\n        value = whole + \".\" + fraction;\n    }\n    if (negative) {\n        value = \"-\" + value;\n    }\n    return value;\n}\nfunction parseFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    if (typeof (value) !== \"string\" || !value.match(/^-?[0-9.,]+$/)) {\n        logger$2.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n    // Is it negative?\n    const negative = (value.substring(0, 1) === \"-\");\n    if (negative) {\n        value = value.substring(1);\n    }\n    if (value === \".\") {\n        logger$2.throwArgumentError(\"missing value\", \"value\", value);\n    }\n    // Split it into a whole and fractional part\n    const comps = value.split(\".\");\n    if (comps.length > 2) {\n        logger$2.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n    let whole = comps[0], fraction = comps[1];\n    if (!whole) {\n        whole = \"0\";\n    }\n    if (!fraction) {\n        fraction = \"0\";\n    }\n    // Get significant digits to check truncation for underflow\n    {\n        const sigFraction = fraction.replace(/^([0-9]*?)(0*)$/, (all, sig, zeros) => (sig));\n        if (sigFraction.length > multiplier.length - 1) {\n            throwFault$1(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n        }\n    }\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < multiplier.length - 1) {\n        fraction += \"0\";\n    }\n    const wholeValue = BigNumber.from(whole);\n    const fractionValue = BigNumber.from(fraction);\n    let wei = (wholeValue.mul(multiplier)).add(fractionValue);\n    if (negative) {\n        wei = wei.mul(NegativeOne);\n    }\n    return wei;\n}\nclass FixedFormat {\n    constructor(constructorGuard, signed, width, decimals) {\n        if (constructorGuard !== _constructorGuard$1) {\n            logger$2.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n        this.name = (signed ? \"\" : \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n        this._multiplier = getMultiplier(decimals);\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (value instanceof FixedFormat) {\n            return value;\n        }\n        if (typeof (value) === \"number\") {\n            value = `fixed128x${value}`;\n        }\n        let signed = true;\n        let width = 128;\n        let decimals = 18;\n        if (typeof (value) === \"string\") {\n            if (value === \"fixed\") ;\n            else if (value === \"ufixed\") {\n                signed = false;\n            }\n            else {\n                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) {\n                    logger$2.throwArgumentError(\"invalid fixed format\", \"format\", value);\n                }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        }\n        else if (value) {\n            const check = (key, type, defaultValue) => {\n                if (value[key] == null) {\n                    return defaultValue;\n                }\n                if (typeof (value[key]) !== type) {\n                    logger$2.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type + \")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            };\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n        if (width % 8) {\n            logger$2.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n        if (decimals > 80) {\n            logger$2.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n        return new FixedFormat(_constructorGuard$1, signed, width, decimals);\n    }\n}\nclass FixedNumber {\n    constructor(constructorGuard, hex, value, format) {\n        logger$2.checkNew(new.target, FixedNumber);\n        if (constructorGuard !== _constructorGuard$1) {\n            logger$2.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.format = format;\n        this._hex = hex;\n        this._value = value;\n        this._isFixedNumber = true;\n        Object.freeze(this);\n    }\n    _checkFormat(other) {\n        if (this.format.name !== other.format.name) {\n            logger$2.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n        }\n    }\n    addUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    }\n    subUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    }\n    mulUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n    divUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    }\n    floor() {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (this.isNegative() && hasFraction) {\n            result = result.subUnsafe(ONE.toFormat(result.format));\n        }\n        return result;\n    }\n    ceiling() {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (!this.isNegative() && hasFraction) {\n            result = result.addUnsafe(ONE.toFormat(result.format));\n        }\n        return result;\n    }\n    // @TODO: Support other rounding algorithms\n    round(decimals) {\n        if (decimals == null) {\n            decimals = 0;\n        }\n        // If we are already in range, we're done\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            logger$2.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n        }\n        if (comps[1].length <= decimals) {\n            return this;\n        }\n        const factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals), this.format);\n        const bump = BUMP.toFormat(this.format);\n        return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);\n    }\n    isZero() {\n        return (this._value === \"0.0\" || this._value === \"0\");\n    }\n    isNegative() {\n        return (this._value[0] === \"-\");\n    }\n    toString() { return this._value; }\n    toHexString(width) {\n        if (width == null) {\n            return this._hex;\n        }\n        if (width % 8) {\n            logger$2.throwArgumentError(\"invalid byte width\", \"width\", width);\n        }\n        const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return hexZeroPad(hex, width / 8);\n    }\n    toUnsafeFloat() { return parseFloat(this.toString()); }\n    toFormat(format) {\n        return FixedNumber.fromString(this._value, format);\n    }\n    static fromValue(value, decimals, format) {\n        // If decimals looks more like a format, and there is no format, shift the parameters\n        if (format == null && decimals != null && !isBigNumberish(decimals)) {\n            format = decimals;\n            decimals = null;\n        }\n        if (decimals == null) {\n            decimals = 0;\n        }\n        if (format == null) {\n            format = \"fixed\";\n        }\n        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    }\n    static fromString(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        const numeric = parseFixed(value, fixedFormat.decimals);\n        if (!fixedFormat.signed && numeric.lt(Zero)) {\n            throwFault$1(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n        let hex = null;\n        if (fixedFormat.signed) {\n            hex = numeric.toTwos(fixedFormat.width).toHexString();\n        }\n        else {\n            hex = numeric.toHexString();\n            hex = hexZeroPad(hex, fixedFormat.width / 8);\n        }\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard$1, hex, decimal, fixedFormat);\n    }\n    static fromBytes(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        if (arrayify(value).length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n        let numeric = BigNumber.from(value);\n        if (fixedFormat.signed) {\n            numeric = numeric.fromTwos(fixedFormat.width);\n        }\n        const hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard$1, hex, decimal, fixedFormat);\n    }\n    static from(value, format) {\n        if (typeof (value) === \"string\") {\n            return FixedNumber.fromString(value, format);\n        }\n        if (isBytes(value)) {\n            return FixedNumber.fromBytes(value, format);\n        }\n        try {\n            return FixedNumber.fromValue(value, 0, format);\n        }\n        catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n            }\n        }\n        return logger$2.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n    static isFixedNumber(value) {\n        return !!(value && value._isFixedNumber);\n    }\n}\nconst ONE = FixedNumber.from(1);\nconst BUMP = FixedNumber.from(\"0.5\");\n//# sourceMappingURL=fixednumber.js.map\n\nconst version$3 = \"properties/5.4.0\";\n//# sourceMappingURL=_version.js.map\n\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst logger$3 = new Logger(version$3);\nfunction defineReadOnly(object, name, value) {\n    Object.defineProperty(object, name, {\n        enumerable: true,\n        value: value,\n        writable: false,\n    });\n}\n// Crawl up the constructor chain to find a static method\nfunction getStatic(ctor, key) {\n    for (let i = 0; i < 32; i++) {\n        if (ctor[key]) {\n            return ctor[key];\n        }\n        if (!ctor.prototype || typeof (ctor.prototype) !== \"object\") {\n            break;\n        }\n        ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n    }\n    return null;\n}\nfunction resolveProperties(object) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const promises = Object.keys(object).map((key) => {\n            const value = object[key];\n            return Promise.resolve(value).then((v) => ({ key: key, value: v }));\n        });\n        const results = yield Promise.all(promises);\n        return results.reduce((accum, result) => {\n            accum[(result.key)] = result.value;\n            return accum;\n        }, {});\n    });\n}\nfunction checkProperties(object, properties) {\n    if (!object || typeof (object) !== \"object\") {\n        logger$3.throwArgumentError(\"invalid object\", \"object\", object);\n    }\n    Object.keys(object).forEach((key) => {\n        if (!properties[key]) {\n            logger$3.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n        }\n    });\n}\nfunction shallowCopy(object) {\n    const result = {};\n    for (const key in object) {\n        result[key] = object[key];\n    }\n    return result;\n}\nconst opaque = { bigint: true, boolean: true, \"function\": true, number: true, string: true };\nfunction _isFrozen(object) {\n    // Opaque objects are not mutable, so safe to copy by assignment\n    if (object === undefined || object === null || opaque[typeof (object)]) {\n        return true;\n    }\n    if (Array.isArray(object) || typeof (object) === \"object\") {\n        if (!Object.isFrozen(object)) {\n            return false;\n        }\n        const keys = Object.keys(object);\n        for (let i = 0; i < keys.length; i++) {\n            if (!_isFrozen(object[keys[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return logger$3.throwArgumentError(`Cannot deepCopy ${typeof (object)}`, \"object\", object);\n}\n// Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\nfunction _deepCopy(object) {\n    if (_isFrozen(object)) {\n        return object;\n    }\n    // Arrays are mutable, so we need to create a copy\n    if (Array.isArray(object)) {\n        return Object.freeze(object.map((item) => deepCopy(item)));\n    }\n    if (typeof (object) === \"object\") {\n        const result = {};\n        for (const key in object) {\n            const value = object[key];\n            if (value === undefined) {\n                continue;\n            }\n            defineReadOnly(result, key, deepCopy(value));\n        }\n        return result;\n    }\n    return logger$3.throwArgumentError(`Cannot deepCopy ${typeof (object)}`, \"object\", object);\n}\nfunction deepCopy(object) {\n    return _deepCopy(object);\n}\nclass Description {\n    constructor(info) {\n        for (const key in info) {\n            this[key] = deepCopy(info[key]);\n        }\n    }\n}\n//# sourceMappingURL=index.js.map\n\nconst version$4 = \"abi/5.4.0\";\n//# sourceMappingURL=_version.js.map\n\nconst logger$4 = new Logger(version$4);\nconst _constructorGuard$2 = {};\nlet ModifiersBytes = { calldata: true, memory: true, storage: true };\nlet ModifiersNest = { calldata: true, memory: true };\nfunction checkModifier(type, name) {\n    if (type === \"bytes\" || type === \"string\") {\n        if (ModifiersBytes[name]) {\n            return true;\n        }\n    }\n    else if (type === \"address\") {\n        if (name === \"payable\") {\n            return true;\n        }\n    }\n    else if (type.indexOf(\"[\") >= 0 || type === \"tuple\") {\n        if (ModifiersNest[name]) {\n            return true;\n        }\n    }\n    if (ModifiersBytes[name] || name === \"payable\") {\n        logger$4.throwArgumentError(\"invalid modifier\", \"name\", name);\n    }\n    return false;\n}\n// @TODO: Make sure that children of an indexed tuple are marked with a null indexed\nfunction parseParamType(param, allowIndexed) {\n    let originalParam = param;\n    function throwError(i) {\n        logger$4.throwArgumentError(`unexpected character at position ${i}`, \"param\", param);\n    }\n    param = param.replace(/\\s/g, \" \");\n    function newNode(parent) {\n        let node = { type: \"\", name: \"\", parent: parent, state: { allowType: true } };\n        if (allowIndexed) {\n            node.indexed = false;\n        }\n        return node;\n    }\n    let parent = { type: \"\", name: \"\", state: { allowType: true } };\n    let node = parent;\n    for (let i = 0; i < param.length; i++) {\n        let c = param[i];\n        switch (c) {\n            case \"(\":\n                if (node.state.allowType && node.type === \"\") {\n                    node.type = \"tuple\";\n                }\n                else if (!node.state.allowParams) {\n                    throwError(i);\n                }\n                node.state.allowType = false;\n                node.type = verifyType(node.type);\n                node.components = [newNode(node)];\n                node = node.components[0];\n                break;\n            case \")\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let child = node;\n                node = node.parent;\n                if (!node) {\n                    throwError(i);\n                }\n                delete child.parent;\n                node.state.allowParams = false;\n                node.state.allowName = true;\n                node.state.allowArray = true;\n                break;\n            case \",\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let sibling = newNode(node.parent);\n                //{ type: \"\", name: \"\", parent: node.parent, state: { allowType: true } };\n                node.parent.components.push(sibling);\n                delete node.parent;\n                node = sibling;\n                break;\n            // Hit a space...\n            case \" \":\n                // If reading type, the type is done and may read a param or name\n                if (node.state.allowType) {\n                    if (node.type !== \"\") {\n                        node.type = verifyType(node.type);\n                        delete node.state.allowType;\n                        node.state.allowName = true;\n                        node.state.allowParams = true;\n                    }\n                }\n                // If reading name, the name is done\n                if (node.state.allowName) {\n                    if (node.name !== \"\") {\n                        if (node.name === \"indexed\") {\n                            if (!allowIndexed) {\n                                throwError(i);\n                            }\n                            if (node.indexed) {\n                                throwError(i);\n                            }\n                            node.indexed = true;\n                            node.name = \"\";\n                        }\n                        else if (checkModifier(node.type, node.name)) {\n                            node.name = \"\";\n                        }\n                        else {\n                            node.state.allowName = false;\n                        }\n                    }\n                }\n                break;\n            case \"[\":\n                if (!node.state.allowArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.allowArray = false;\n                node.state.allowName = false;\n                node.state.readArray = true;\n                break;\n            case \"]\":\n                if (!node.state.readArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.readArray = false;\n                node.state.allowArray = true;\n                node.state.allowName = true;\n                break;\n            default:\n                if (node.state.allowType) {\n                    node.type += c;\n                    node.state.allowParams = true;\n                    node.state.allowArray = true;\n                }\n                else if (node.state.allowName) {\n                    node.name += c;\n                    delete node.state.allowArray;\n                }\n                else if (node.state.readArray) {\n                    node.type += c;\n                }\n                else {\n                    throwError(i);\n                }\n        }\n    }\n    if (node.parent) {\n        logger$4.throwArgumentError(\"unexpected eof\", \"param\", param);\n    }\n    delete parent.state;\n    if (node.name === \"indexed\") {\n        if (!allowIndexed) {\n            throwError(originalParam.length - 7);\n        }\n        if (node.indexed) {\n            throwError(originalParam.length - 7);\n        }\n        node.indexed = true;\n        node.name = \"\";\n    }\n    else if (checkModifier(node.type, node.name)) {\n        node.name = \"\";\n    }\n    parent.type = verifyType(parent.type);\n    return parent;\n}\nfunction populate(object, params) {\n    for (let key in params) {\n        defineReadOnly(object, key, params[key]);\n    }\n}\nconst FormatTypes = Object.freeze({\n    // Bare formatting, as is needed for computing a sighash of an event or function\n    sighash: \"sighash\",\n    // Human-Readable with Minimal spacing and without names (compact human-readable)\n    minimal: \"minimal\",\n    // Human-Readble with nice spacing, including all names\n    full: \"full\",\n    // JSON-format a la Solidity\n    json: \"json\"\n});\nconst paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\nclass ParamType {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard$2) {\n            logger$4.throwError(\"use fromString\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new ParamType()\"\n            });\n        }\n        populate(this, params);\n        let match = this.type.match(paramTypeArray);\n        if (match) {\n            populate(this, {\n                arrayLength: parseInt(match[2] || \"-1\"),\n                arrayChildren: ParamType.fromObject({\n                    type: match[1],\n                    components: this.components\n                }),\n                baseType: \"array\"\n            });\n        }\n        else {\n            populate(this, {\n                arrayLength: null,\n                arrayChildren: null,\n                baseType: ((this.components != null) ? \"tuple\" : this.type)\n            });\n        }\n        this._isParamType = true;\n        Object.freeze(this);\n    }\n    // Format the parameter fragment\n    //   - sighash: \"(uint256,address)\"\n    //   - minimal: \"tuple(uint256,address) indexed\"\n    //   - full:    \"tuple(uint256 foo, addres bar) indexed baz\"\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger$4.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            let result = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\" : this.type),\n                name: (this.name || undefined)\n            };\n            if (typeof (this.indexed) === \"boolean\") {\n                result.indexed = this.indexed;\n            }\n            if (this.components) {\n                result.components = this.components.map((comp) => JSON.parse(comp.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n        let result = \"\";\n        // Array\n        if (this.baseType === \"array\") {\n            result += this.arrayChildren.format(format);\n            result += \"[\" + (this.arrayLength < 0 ? \"\" : String(this.arrayLength)) + \"]\";\n        }\n        else {\n            if (this.baseType === \"tuple\") {\n                if (format !== FormatTypes.sighash) {\n                    result += this.type;\n                }\n                result += \"(\" + this.components.map((comp) => comp.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \")\";\n            }\n            else {\n                result += this.type;\n            }\n        }\n        if (format !== FormatTypes.sighash) {\n            if (this.indexed === true) {\n                result += \" indexed\";\n            }\n            if (format === FormatTypes.full && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n        return result;\n    }\n    static from(value, allowIndexed) {\n        if (typeof (value) === \"string\") {\n            return ParamType.fromString(value, allowIndexed);\n        }\n        return ParamType.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ParamType.isParamType(value)) {\n            return value;\n        }\n        return new ParamType(_constructorGuard$2, {\n            name: (value.name || null),\n            type: verifyType(value.type),\n            indexed: ((value.indexed == null) ? null : !!value.indexed),\n            components: (value.components ? value.components.map(ParamType.fromObject) : null)\n        });\n    }\n    static fromString(value, allowIndexed) {\n        function ParamTypify(node) {\n            return ParamType.fromObject({\n                name: node.name,\n                type: node.type,\n                indexed: node.indexed,\n                components: node.components\n            });\n        }\n        return ParamTypify(parseParamType(value, !!allowIndexed));\n    }\n    static isParamType(value) {\n        return !!(value != null && value._isParamType);\n    }\n}\nfunction parseParams(value, allowIndex) {\n    return splitNesting(value).map((param) => ParamType.fromString(param, allowIndex));\n}\nclass Fragment {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard$2) {\n            logger$4.throwError(\"use a static from method\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new Fragment()\"\n            });\n        }\n        populate(this, params);\n        this._isFragment = true;\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (Fragment.isFragment(value)) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            return Fragment.fromString(value);\n        }\n        return Fragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (Fragment.isFragment(value)) {\n            return value;\n        }\n        switch (value.type) {\n            case \"function\":\n                return FunctionFragment.fromObject(value);\n            case \"event\":\n                return EventFragment.fromObject(value);\n            case \"constructor\":\n                return ConstructorFragment.fromObject(value);\n            case \"error\":\n                return ErrorFragment.fromObject(value);\n            case \"fallback\":\n            case \"receive\":\n                // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?\n                return null;\n        }\n        return logger$4.throwArgumentError(\"invalid fragment object\", \"value\", value);\n    }\n    static fromString(value) {\n        // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n        value = value.replace(/\\s/g, \" \");\n        value = value.replace(/\\(/g, \" (\").replace(/\\)/g, \") \").replace(/\\s+/g, \" \");\n        value = value.trim();\n        if (value.split(\" \")[0] === \"event\") {\n            return EventFragment.fromString(value.substring(5).trim());\n        }\n        else if (value.split(\" \")[0] === \"function\") {\n            return FunctionFragment.fromString(value.substring(8).trim());\n        }\n        else if (value.split(\"(\")[0].trim() === \"constructor\") {\n            return ConstructorFragment.fromString(value.trim());\n        }\n        else if (value.split(\" \")[0] === \"error\") {\n            return ErrorFragment.fromString(value.substring(5).trim());\n        }\n        return logger$4.throwArgumentError(\"unsupported fragment\", \"value\", value);\n    }\n    static isFragment(value) {\n        return !!(value && value._isFragment);\n    }\n}\nclass EventFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger$4.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"event \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.anonymous) {\n                result += \"anonymous \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return EventFragment.fromString(value);\n        }\n        return EventFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (EventFragment.isEventFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"event\") {\n            logger$4.throwArgumentError(\"invalid event object\", \"value\", value);\n        }\n        const params = {\n            name: verifyIdentifier(value.name),\n            anonymous: value.anonymous,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            type: \"event\"\n        };\n        return new EventFragment(_constructorGuard$2, params);\n    }\n    static fromString(value) {\n        let match = value.match(regexParen);\n        if (!match) {\n            logger$4.throwArgumentError(\"invalid event string\", \"value\", value);\n        }\n        let anonymous = false;\n        match[3].split(\" \").forEach((modifier) => {\n            switch (modifier.trim()) {\n                case \"anonymous\":\n                    anonymous = true;\n                    break;\n                case \"\":\n                    break;\n                default:\n                    logger$4.warn(\"unknown modifier: \" + modifier);\n            }\n        });\n        return EventFragment.fromObject({\n            name: match[1].trim(),\n            anonymous: anonymous,\n            inputs: parseParams(match[2], true),\n            type: \"event\"\n        });\n    }\n    static isEventFragment(value) {\n        return (value && value._isFragment && value.type === \"event\");\n    }\n}\nfunction parseGas(value, params) {\n    params.gas = null;\n    let comps = value.split(\"@\");\n    if (comps.length !== 1) {\n        if (comps.length > 2) {\n            logger$4.throwArgumentError(\"invalid human-readable ABI signature\", \"value\", value);\n        }\n        if (!comps[1].match(/^[0-9]+$/)) {\n            logger$4.throwArgumentError(\"invalid human-readable ABI signature gas\", \"value\", value);\n        }\n        params.gas = BigNumber.from(comps[1]);\n        return comps[0];\n    }\n    return value;\n}\nfunction parseModifiers(value, params) {\n    params.constant = false;\n    params.payable = false;\n    params.stateMutability = \"nonpayable\";\n    value.split(\" \").forEach((modifier) => {\n        switch (modifier.trim()) {\n            case \"constant\":\n                params.constant = true;\n                break;\n            case \"payable\":\n                params.payable = true;\n                params.stateMutability = \"payable\";\n                break;\n            case \"nonpayable\":\n                params.payable = false;\n                params.stateMutability = \"nonpayable\";\n                break;\n            case \"pure\":\n                params.constant = true;\n                params.stateMutability = \"pure\";\n                break;\n            case \"view\":\n                params.constant = true;\n                params.stateMutability = \"view\";\n                break;\n            case \"external\":\n            case \"public\":\n            case \"\":\n                break;\n            default:\n                console.log(\"unknown modifier: \" + modifier);\n        }\n    });\n}\nfunction verifyState(value) {\n    let result = {\n        constant: false,\n        payable: true,\n        stateMutability: \"payable\"\n    };\n    if (value.stateMutability != null) {\n        result.stateMutability = value.stateMutability;\n        // Set (and check things are consistent) the constant property\n        result.constant = (result.stateMutability === \"view\" || result.stateMutability === \"pure\");\n        if (value.constant != null) {\n            if ((!!value.constant) !== result.constant) {\n                logger$4.throwArgumentError(\"cannot have constant function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n        // Set (and check things are consistent) the payable property\n        result.payable = (result.stateMutability === \"payable\");\n        if (value.payable != null) {\n            if ((!!value.payable) !== result.payable) {\n                logger$4.throwArgumentError(\"cannot have payable function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n    }\n    else if (value.payable != null) {\n        result.payable = !!value.payable;\n        // If payable we can assume non-constant; otherwise we can't assume\n        if (value.constant == null && !result.payable && value.type !== \"constructor\") {\n            logger$4.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n        }\n        result.constant = !!value.constant;\n        if (result.constant) {\n            result.stateMutability = \"view\";\n        }\n        else {\n            result.stateMutability = (result.payable ? \"payable\" : \"nonpayable\");\n        }\n        if (result.payable && result.constant) {\n            logger$4.throwArgumentError(\"cannot have constant payable function\", \"value\", value);\n        }\n    }\n    else if (value.constant != null) {\n        result.constant = !!value.constant;\n        result.payable = !result.constant;\n        result.stateMutability = (result.constant ? \"view\" : \"payable\");\n    }\n    else if (value.type !== \"constructor\") {\n        logger$4.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n    }\n    return result;\n}\nclass ConstructorFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger$4.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        if (format === FormatTypes.sighash) {\n            logger$4.throwError(\"cannot format a constructor for sighash\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"format(sighash)\"\n            });\n        }\n        let result = \"constructor(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (this.stateMutability && this.stateMutability !== \"nonpayable\") {\n            result += this.stateMutability + \" \";\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return ConstructorFragment.fromString(value);\n        }\n        return ConstructorFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ConstructorFragment.isConstructorFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"constructor\") {\n            logger$4.throwArgumentError(\"invalid constructor object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        if (state.constant) {\n            logger$4.throwArgumentError(\"constructor cannot be constant\", \"value\", value);\n        }\n        const params = {\n            name: null,\n            type: value.type,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas) : null)\n        };\n        return new ConstructorFragment(_constructorGuard$2, params);\n    }\n    static fromString(value) {\n        let params = { type: \"constructor\" };\n        value = parseGas(value, params);\n        let parens = value.match(regexParen);\n        if (!parens || parens[1].trim() !== \"constructor\") {\n            logger$4.throwArgumentError(\"invalid constructor string\", \"value\", value);\n        }\n        params.inputs = parseParams(parens[2].trim(), false);\n        parseModifiers(parens[3].trim(), params);\n        return ConstructorFragment.fromObject(params);\n    }\n    static isConstructorFragment(value) {\n        return (value && value._isFragment && value.type === \"constructor\");\n    }\n}\nclass FunctionFragment extends ConstructorFragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger$4.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n                outputs: this.outputs.map((output) => JSON.parse(output.format(format))),\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"function \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.stateMutability) {\n                if (this.stateMutability !== \"nonpayable\") {\n                    result += (this.stateMutability + \" \");\n                }\n            }\n            else if (this.constant) {\n                result += \"view \";\n            }\n            if (this.outputs && this.outputs.length) {\n                result += \"returns (\" + this.outputs.map((output) => output.format(format)).join(\", \") + \") \";\n            }\n            if (this.gas != null) {\n                result += \"@\" + this.gas.toString() + \" \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return FunctionFragment.fromString(value);\n        }\n        return FunctionFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (FunctionFragment.isFunctionFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"function\") {\n            logger$4.throwArgumentError(\"invalid function object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        const params = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            constant: state.constant,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            outputs: (value.outputs ? value.outputs.map(ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas) : null)\n        };\n        return new FunctionFragment(_constructorGuard$2, params);\n    }\n    static fromString(value) {\n        let params = { type: \"function\" };\n        value = parseGas(value, params);\n        let comps = value.split(\" returns \");\n        if (comps.length > 2) {\n            logger$4.throwArgumentError(\"invalid function string\", \"value\", value);\n        }\n        let parens = comps[0].match(regexParen);\n        if (!parens) {\n            logger$4.throwArgumentError(\"invalid function signature\", \"value\", value);\n        }\n        params.name = parens[1].trim();\n        if (params.name) {\n            verifyIdentifier(params.name);\n        }\n        params.inputs = parseParams(parens[2], false);\n        parseModifiers(parens[3].trim(), params);\n        // We have outputs\n        if (comps.length > 1) {\n            let returns = comps[1].match(regexParen);\n            if (returns[1].trim() != \"\" || returns[3].trim() != \"\") {\n                logger$4.throwArgumentError(\"unexpected tokens\", \"value\", value);\n            }\n            params.outputs = parseParams(returns[2], false);\n        }\n        else {\n            params.outputs = [];\n        }\n        return FunctionFragment.fromObject(params);\n    }\n    static isFunctionFragment(value) {\n        return (value && value._isFragment && value.type === \"function\");\n    }\n}\n//export class StructFragment extends Fragment {\n//}\nfunction checkForbidden(fragment) {\n    const sig = fragment.format();\n    if (sig === \"Error(string)\" || sig === \"Panic(uint256)\") {\n        logger$4.throwArgumentError(`cannot specify user defined ${sig} error`, \"fragment\", fragment);\n    }\n    return fragment;\n}\nclass ErrorFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger$4.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"error \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return ErrorFragment.fromString(value);\n        }\n        return ErrorFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ErrorFragment.isErrorFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"error\") {\n            logger$4.throwArgumentError(\"invalid error object\", \"value\", value);\n        }\n        const params = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : [])\n        };\n        return checkForbidden(new ErrorFragment(_constructorGuard$2, params));\n    }\n    static fromString(value) {\n        let params = { type: \"error\" };\n        let parens = value.match(regexParen);\n        if (!parens) {\n            logger$4.throwArgumentError(\"invalid error signature\", \"value\", value);\n        }\n        params.name = parens[1].trim();\n        if (params.name) {\n            verifyIdentifier(params.name);\n        }\n        params.inputs = parseParams(parens[2], false);\n        return checkForbidden(ErrorFragment.fromObject(params));\n    }\n    static isErrorFragment(value) {\n        return (value && value._isFragment && value.type === \"error\");\n    }\n}\nfunction verifyType(type) {\n    // These need to be transformed to their full description\n    if (type.match(/^uint($|[^1-9])/)) {\n        type = \"uint256\" + type.substring(4);\n    }\n    else if (type.match(/^int($|[^1-9])/)) {\n        type = \"int256\" + type.substring(3);\n    }\n    // @TODO: more verification\n    return type;\n}\n// See: https://github.com/ethereum/solidity/blob/1f8f1a3db93a548d0555e3e14cfc55a10e25b60e/docs/grammar/SolidityLexer.g4#L234\nconst regexIdentifier = new RegExp(\"^[a-zA-Z$_][a-zA-Z0-9$_]*$\");\nfunction verifyIdentifier(value) {\n    if (!value || !value.match(regexIdentifier)) {\n        logger$4.throwArgumentError(`invalid identifier \"${value}\"`, \"value\", value);\n    }\n    return value;\n}\nconst regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\nfunction splitNesting(value) {\n    value = value.trim();\n    let result = [];\n    let accum = \"\";\n    let depth = 0;\n    for (let offset = 0; offset < value.length; offset++) {\n        let c = value[offset];\n        if (c === \",\" && depth === 0) {\n            result.push(accum);\n            accum = \"\";\n        }\n        else {\n            accum += c;\n            if (c === \"(\") {\n                depth++;\n            }\n            else if (c === \")\") {\n                depth--;\n                if (depth === -1) {\n                    logger$4.throwArgumentError(\"unbalanced parenthesis\", \"value\", value);\n                }\n            }\n        }\n    }\n    if (accum) {\n        result.push(accum);\n    }\n    return result;\n}\n//# sourceMappingURL=fragments.js.map\n\nconst logger$5 = new Logger(version$4);\nfunction checkResultErrors(result) {\n    // Find the first error (if any)\n    const errors = [];\n    const checkErrors = function (path, object) {\n        if (!Array.isArray(object)) {\n            return;\n        }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n            try {\n                checkErrors(childPath, object[key]);\n            }\n            catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    };\n    checkErrors([], result);\n    return errors;\n}\nclass Coder {\n    constructor(name, type, localName, dynamic) {\n        // @TODO: defineReadOnly these\n        this.name = name;\n        this.type = type;\n        this.localName = localName;\n        this.dynamic = dynamic;\n    }\n    _throwError(message, value) {\n        logger$5.throwArgumentError(message, this.localName, value);\n    }\n}\nclass Writer {\n    constructor(wordSize) {\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        this._data = [];\n        this._dataLength = 0;\n        this._padding = new Uint8Array(wordSize);\n    }\n    get data() {\n        return hexConcat(this._data);\n    }\n    get length() { return this._dataLength; }\n    _writeData(data) {\n        this._data.push(data);\n        this._dataLength += data.length;\n        return data.length;\n    }\n    appendWriter(writer) {\n        return this._writeData(concat(writer._data));\n    }\n    // Arrayish items; padded on the right to wordSize\n    writeBytes(value) {\n        let bytes = arrayify(value);\n        const paddingOffset = bytes.length % this.wordSize;\n        if (paddingOffset) {\n            bytes = concat([bytes, this._padding.slice(paddingOffset)]);\n        }\n        return this._writeData(bytes);\n    }\n    _getValue(value) {\n        let bytes = arrayify(BigNumber.from(value));\n        if (bytes.length > this.wordSize) {\n            logger$5.throwError(\"value out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                length: this.wordSize,\n                offset: bytes.length\n            });\n        }\n        if (bytes.length % this.wordSize) {\n            bytes = concat([this._padding.slice(bytes.length % this.wordSize), bytes]);\n        }\n        return bytes;\n    }\n    // BigNumberish items; padded on the left to wordSize\n    writeValue(value) {\n        return this._writeData(this._getValue(value));\n    }\n    writeUpdatableValue() {\n        const offset = this._data.length;\n        this._data.push(this._padding);\n        this._dataLength += this.wordSize;\n        return (value) => {\n            this._data[offset] = this._getValue(value);\n        };\n    }\n}\nclass Reader {\n    constructor(data, wordSize, coerceFunc, allowLoose) {\n        defineReadOnly(this, \"_data\", arrayify(data));\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        defineReadOnly(this, \"_coerceFunc\", coerceFunc);\n        defineReadOnly(this, \"allowLoose\", allowLoose);\n        this._offset = 0;\n    }\n    get data() { return hexlify(this._data); }\n    get consumed() { return this._offset; }\n    // The default Coerce function\n    static coerce(name, value) {\n        let match = name.match(\"^u?int([0-9]+)$\");\n        if (match && parseInt(match[1]) <= 48) {\n            value = value.toNumber();\n        }\n        return value;\n    }\n    coerce(name, value) {\n        if (this._coerceFunc) {\n            return this._coerceFunc(name, value);\n        }\n        return Reader.coerce(name, value);\n    }\n    _peekBytes(offset, length, loose) {\n        let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n        if (this._offset + alignedLength > this._data.length) {\n            if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n                alignedLength = length;\n            }\n            else {\n                logger$5.throwError(\"data out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                    length: this._data.length,\n                    offset: this._offset + alignedLength\n                });\n            }\n        }\n        return this._data.slice(this._offset, this._offset + alignedLength);\n    }\n    subReader(offset) {\n        return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n    }\n    readBytes(length, loose) {\n        let bytes = this._peekBytes(0, length, !!loose);\n        this._offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n    readValue() {\n        return BigNumber.from(this.readBytes(this.wordSize));\n    }\n}\n//# sourceMappingURL=abstract-coder.js.map\n\nvar sha3 = createCommonjsModule(function (module) {\n/**\r\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\r\n *\r\n * @version 0.5.7\r\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\r\n * @copyright Chen, Yi-Cyuan 2015-2016\r\n * @license MIT\r\n */\r\n/*jslint bitwise: true */\r\n(function () {\r\n\r\n  var root = typeof window === 'object' ? window : {};\r\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\r\n  if (NODE_JS) {\r\n    root = commonjsGlobal;\r\n  }\r\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && 'object' === 'object' && module.exports;\r\n  var HEX_CHARS = '0123456789abcdef'.split('');\r\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\r\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\r\n  var PADDING = [6, 1536, 393216, 100663296];\r\n  var SHIFT = [0, 8, 16, 24];\r\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\r\n            0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\r\n            2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\r\n            2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\r\n            2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\r\n  var BITS = [224, 256, 384, 512];\r\n  var SHAKE_BITS = [128, 256];\r\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array'];\r\n\r\n  var createOutputMethod = function (bits, padding, outputType) {\r\n    return function (message) {\r\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\r\n    };\r\n  };\r\n\r\n  var createShakeOutputMethod = function (bits, padding, outputType) {\r\n    return function (message, outputBits) {\r\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\r\n    };\r\n  };\r\n\r\n  var createMethod = function (bits, padding) {\r\n    var method = createOutputMethod(bits, padding, 'hex');\r\n    method.create = function () {\r\n      return new Keccak(bits, padding, bits);\r\n    };\r\n    method.update = function (message) {\r\n      return method.create().update(message);\r\n    };\r\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\r\n      var type = OUTPUT_TYPES[i];\r\n      method[type] = createOutputMethod(bits, padding, type);\r\n    }\r\n    return method;\r\n  };\r\n\r\n  var createShakeMethod = function (bits, padding) {\r\n    var method = createShakeOutputMethod(bits, padding, 'hex');\r\n    method.create = function (outputBits) {\r\n      return new Keccak(bits, padding, outputBits);\r\n    };\r\n    method.update = function (message, outputBits) {\r\n      return method.create(outputBits).update(message);\r\n    };\r\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\r\n      var type = OUTPUT_TYPES[i];\r\n      method[type] = createShakeOutputMethod(bits, padding, type);\r\n    }\r\n    return method;\r\n  };\r\n\r\n  var algorithms = [\r\n    {name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod},\r\n    {name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod},\r\n    {name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod}\r\n  ];\r\n\r\n  var methods = {}, methodNames = [];\r\n\r\n  for (var i = 0; i < algorithms.length; ++i) {\r\n    var algorithm = algorithms[i];\r\n    var bits  = algorithm.bits;\r\n    for (var j = 0; j < bits.length; ++j) {\r\n      var methodName = algorithm.name +'_' + bits[j];\r\n      methodNames.push(methodName);\r\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\r\n    }\r\n  }\r\n\r\n  function Keccak(bits, padding, outputBits) {\r\n    this.blocks = [];\r\n    this.s = [];\r\n    this.padding = padding;\r\n    this.outputBits = outputBits;\r\n    this.reset = true;\r\n    this.block = 0;\r\n    this.start = 0;\r\n    this.blockCount = (1600 - (bits << 1)) >> 5;\r\n    this.byteCount = this.blockCount << 2;\r\n    this.outputBlocks = outputBits >> 5;\r\n    this.extraBytes = (outputBits & 31) >> 3;\r\n\r\n    for (var i = 0; i < 50; ++i) {\r\n      this.s[i] = 0;\r\n    }\r\n  }\r\n\r\n  Keccak.prototype.update = function (message) {\r\n    var notString = typeof message !== 'string';\r\n    if (notString && message.constructor === ArrayBuffer) {\r\n      message = new Uint8Array(message);\r\n    }\r\n    var length = message.length, blocks = this.blocks, byteCount = this.byteCount,\r\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\r\n\r\n    while (index < length) {\r\n      if (this.reset) {\r\n        this.reset = false;\r\n        blocks[0] = this.block;\r\n        for (i = 1; i < blockCount + 1; ++i) {\r\n          blocks[i] = 0;\r\n        }\r\n      }\r\n      if (notString) {\r\n        for (i = this.start; index < length && i < byteCount; ++index) {\r\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\r\n        }\r\n      } else {\r\n        for (i = this.start; index < length && i < byteCount; ++index) {\r\n          code = message.charCodeAt(index);\r\n          if (code < 0x80) {\r\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\r\n          } else if (code < 0x800) {\r\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n          } else if (code < 0xd800 || code >= 0xe000) {\r\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n          } else {\r\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\r\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n          }\r\n        }\r\n      }\r\n      this.lastByteIndex = i;\r\n      if (i >= byteCount) {\r\n        this.start = i - byteCount;\r\n        this.block = blocks[blockCount];\r\n        for (i = 0; i < blockCount; ++i) {\r\n          s[i] ^= blocks[i];\r\n        }\r\n        f(s);\r\n        this.reset = true;\r\n      } else {\r\n        this.start = i;\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  Keccak.prototype.finalize = function () {\r\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\r\n    blocks[i >> 2] |= this.padding[i & 3];\r\n    if (this.lastByteIndex === this.byteCount) {\r\n      blocks[0] = blocks[blockCount];\r\n      for (i = 1; i < blockCount + 1; ++i) {\r\n        blocks[i] = 0;\r\n      }\r\n    }\r\n    blocks[blockCount - 1] |= 0x80000000;\r\n    for (i = 0; i < blockCount; ++i) {\r\n      s[i] ^= blocks[i];\r\n    }\r\n    f(s);\r\n  };\r\n\r\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\r\n    this.finalize();\r\n\r\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\r\n        extraBytes = this.extraBytes, i = 0, j = 0;\r\n    var hex = '', block;\r\n    while (j < outputBlocks) {\r\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\r\n        block = s[i];\r\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\r\n               HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\r\n               HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\r\n               HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\r\n      }\r\n      if (j % blockCount === 0) {\r\n        f(s);\r\n        i = 0;\r\n      }\r\n    }\r\n    if (extraBytes) {\r\n      block = s[i];\r\n      if (extraBytes > 0) {\r\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\r\n      }\r\n      if (extraBytes > 1) {\r\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\r\n      }\r\n      if (extraBytes > 2) {\r\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\r\n      }\r\n    }\r\n    return hex;\r\n  };\r\n\r\n  Keccak.prototype.arrayBuffer = function () {\r\n    this.finalize();\r\n\r\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\r\n        extraBytes = this.extraBytes, i = 0, j = 0;\r\n    var bytes = this.outputBits >> 3;\r\n    var buffer;\r\n    if (extraBytes) {\r\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\r\n    } else {\r\n      buffer = new ArrayBuffer(bytes);\r\n    }\r\n    var array = new Uint32Array(buffer);\r\n    while (j < outputBlocks) {\r\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\r\n        array[j] = s[i];\r\n      }\r\n      if (j % blockCount === 0) {\r\n        f(s);\r\n      }\r\n    }\r\n    if (extraBytes) {\r\n      array[i] = s[i];\r\n      buffer = buffer.slice(0, bytes);\r\n    }\r\n    return buffer;\r\n  };\r\n\r\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\r\n\r\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\r\n    this.finalize();\r\n\r\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\r\n        extraBytes = this.extraBytes, i = 0, j = 0;\r\n    var array = [], offset, block;\r\n    while (j < outputBlocks) {\r\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\r\n        offset = j << 2;\r\n        block = s[i];\r\n        array[offset] = block & 0xFF;\r\n        array[offset + 1] = (block >> 8) & 0xFF;\r\n        array[offset + 2] = (block >> 16) & 0xFF;\r\n        array[offset + 3] = (block >> 24) & 0xFF;\r\n      }\r\n      if (j % blockCount === 0) {\r\n        f(s);\r\n      }\r\n    }\r\n    if (extraBytes) {\r\n      offset = j << 2;\r\n      block = s[i];\r\n      if (extraBytes > 0) {\r\n        array[offset] = block & 0xFF;\r\n      }\r\n      if (extraBytes > 1) {\r\n        array[offset + 1] = (block >> 8) & 0xFF;\r\n      }\r\n      if (extraBytes > 2) {\r\n        array[offset + 2] = (block >> 16) & 0xFF;\r\n      }\r\n    }\r\n    return array;\r\n  };\r\n\r\n  var f = function (s) {\r\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\r\n        b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\r\n        b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\r\n        b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\r\n    for (n = 0; n < 48; n += 2) {\r\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\r\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\r\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\r\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\r\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\r\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\r\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\r\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\r\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\r\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\r\n\r\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\r\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\r\n      s[0] ^= h;\r\n      s[1] ^= l;\r\n      s[10] ^= h;\r\n      s[11] ^= l;\r\n      s[20] ^= h;\r\n      s[21] ^= l;\r\n      s[30] ^= h;\r\n      s[31] ^= l;\r\n      s[40] ^= h;\r\n      s[41] ^= l;\r\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\r\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\r\n      s[2] ^= h;\r\n      s[3] ^= l;\r\n      s[12] ^= h;\r\n      s[13] ^= l;\r\n      s[22] ^= h;\r\n      s[23] ^= l;\r\n      s[32] ^= h;\r\n      s[33] ^= l;\r\n      s[42] ^= h;\r\n      s[43] ^= l;\r\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\r\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\r\n      s[4] ^= h;\r\n      s[5] ^= l;\r\n      s[14] ^= h;\r\n      s[15] ^= l;\r\n      s[24] ^= h;\r\n      s[25] ^= l;\r\n      s[34] ^= h;\r\n      s[35] ^= l;\r\n      s[44] ^= h;\r\n      s[45] ^= l;\r\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\r\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\r\n      s[6] ^= h;\r\n      s[7] ^= l;\r\n      s[16] ^= h;\r\n      s[17] ^= l;\r\n      s[26] ^= h;\r\n      s[27] ^= l;\r\n      s[36] ^= h;\r\n      s[37] ^= l;\r\n      s[46] ^= h;\r\n      s[47] ^= l;\r\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\r\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\r\n      s[8] ^= h;\r\n      s[9] ^= l;\r\n      s[18] ^= h;\r\n      s[19] ^= l;\r\n      s[28] ^= h;\r\n      s[29] ^= l;\r\n      s[38] ^= h;\r\n      s[39] ^= l;\r\n      s[48] ^= h;\r\n      s[49] ^= l;\r\n\r\n      b0 = s[0];\r\n      b1 = s[1];\r\n      b32 = (s[11] << 4) | (s[10] >>> 28);\r\n      b33 = (s[10] << 4) | (s[11] >>> 28);\r\n      b14 = (s[20] << 3) | (s[21] >>> 29);\r\n      b15 = (s[21] << 3) | (s[20] >>> 29);\r\n      b46 = (s[31] << 9) | (s[30] >>> 23);\r\n      b47 = (s[30] << 9) | (s[31] >>> 23);\r\n      b28 = (s[40] << 18) | (s[41] >>> 14);\r\n      b29 = (s[41] << 18) | (s[40] >>> 14);\r\n      b20 = (s[2] << 1) | (s[3] >>> 31);\r\n      b21 = (s[3] << 1) | (s[2] >>> 31);\r\n      b2 = (s[13] << 12) | (s[12] >>> 20);\r\n      b3 = (s[12] << 12) | (s[13] >>> 20);\r\n      b34 = (s[22] << 10) | (s[23] >>> 22);\r\n      b35 = (s[23] << 10) | (s[22] >>> 22);\r\n      b16 = (s[33] << 13) | (s[32] >>> 19);\r\n      b17 = (s[32] << 13) | (s[33] >>> 19);\r\n      b48 = (s[42] << 2) | (s[43] >>> 30);\r\n      b49 = (s[43] << 2) | (s[42] >>> 30);\r\n      b40 = (s[5] << 30) | (s[4] >>> 2);\r\n      b41 = (s[4] << 30) | (s[5] >>> 2);\r\n      b22 = (s[14] << 6) | (s[15] >>> 26);\r\n      b23 = (s[15] << 6) | (s[14] >>> 26);\r\n      b4 = (s[25] << 11) | (s[24] >>> 21);\r\n      b5 = (s[24] << 11) | (s[25] >>> 21);\r\n      b36 = (s[34] << 15) | (s[35] >>> 17);\r\n      b37 = (s[35] << 15) | (s[34] >>> 17);\r\n      b18 = (s[45] << 29) | (s[44] >>> 3);\r\n      b19 = (s[44] << 29) | (s[45] >>> 3);\r\n      b10 = (s[6] << 28) | (s[7] >>> 4);\r\n      b11 = (s[7] << 28) | (s[6] >>> 4);\r\n      b42 = (s[17] << 23) | (s[16] >>> 9);\r\n      b43 = (s[16] << 23) | (s[17] >>> 9);\r\n      b24 = (s[26] << 25) | (s[27] >>> 7);\r\n      b25 = (s[27] << 25) | (s[26] >>> 7);\r\n      b6 = (s[36] << 21) | (s[37] >>> 11);\r\n      b7 = (s[37] << 21) | (s[36] >>> 11);\r\n      b38 = (s[47] << 24) | (s[46] >>> 8);\r\n      b39 = (s[46] << 24) | (s[47] >>> 8);\r\n      b30 = (s[8] << 27) | (s[9] >>> 5);\r\n      b31 = (s[9] << 27) | (s[8] >>> 5);\r\n      b12 = (s[18] << 20) | (s[19] >>> 12);\r\n      b13 = (s[19] << 20) | (s[18] >>> 12);\r\n      b44 = (s[29] << 7) | (s[28] >>> 25);\r\n      b45 = (s[28] << 7) | (s[29] >>> 25);\r\n      b26 = (s[38] << 8) | (s[39] >>> 24);\r\n      b27 = (s[39] << 8) | (s[38] >>> 24);\r\n      b8 = (s[48] << 14) | (s[49] >>> 18);\r\n      b9 = (s[49] << 14) | (s[48] >>> 18);\r\n\r\n      s[0] = b0 ^ (~b2 & b4);\r\n      s[1] = b1 ^ (~b3 & b5);\r\n      s[10] = b10 ^ (~b12 & b14);\r\n      s[11] = b11 ^ (~b13 & b15);\r\n      s[20] = b20 ^ (~b22 & b24);\r\n      s[21] = b21 ^ (~b23 & b25);\r\n      s[30] = b30 ^ (~b32 & b34);\r\n      s[31] = b31 ^ (~b33 & b35);\r\n      s[40] = b40 ^ (~b42 & b44);\r\n      s[41] = b41 ^ (~b43 & b45);\r\n      s[2] = b2 ^ (~b4 & b6);\r\n      s[3] = b3 ^ (~b5 & b7);\r\n      s[12] = b12 ^ (~b14 & b16);\r\n      s[13] = b13 ^ (~b15 & b17);\r\n      s[22] = b22 ^ (~b24 & b26);\r\n      s[23] = b23 ^ (~b25 & b27);\r\n      s[32] = b32 ^ (~b34 & b36);\r\n      s[33] = b33 ^ (~b35 & b37);\r\n      s[42] = b42 ^ (~b44 & b46);\r\n      s[43] = b43 ^ (~b45 & b47);\r\n      s[4] = b4 ^ (~b6 & b8);\r\n      s[5] = b5 ^ (~b7 & b9);\r\n      s[14] = b14 ^ (~b16 & b18);\r\n      s[15] = b15 ^ (~b17 & b19);\r\n      s[24] = b24 ^ (~b26 & b28);\r\n      s[25] = b25 ^ (~b27 & b29);\r\n      s[34] = b34 ^ (~b36 & b38);\r\n      s[35] = b35 ^ (~b37 & b39);\r\n      s[44] = b44 ^ (~b46 & b48);\r\n      s[45] = b45 ^ (~b47 & b49);\r\n      s[6] = b6 ^ (~b8 & b0);\r\n      s[7] = b7 ^ (~b9 & b1);\r\n      s[16] = b16 ^ (~b18 & b10);\r\n      s[17] = b17 ^ (~b19 & b11);\r\n      s[26] = b26 ^ (~b28 & b20);\r\n      s[27] = b27 ^ (~b29 & b21);\r\n      s[36] = b36 ^ (~b38 & b30);\r\n      s[37] = b37 ^ (~b39 & b31);\r\n      s[46] = b46 ^ (~b48 & b40);\r\n      s[47] = b47 ^ (~b49 & b41);\r\n      s[8] = b8 ^ (~b0 & b2);\r\n      s[9] = b9 ^ (~b1 & b3);\r\n      s[18] = b18 ^ (~b10 & b12);\r\n      s[19] = b19 ^ (~b11 & b13);\r\n      s[28] = b28 ^ (~b20 & b22);\r\n      s[29] = b29 ^ (~b21 & b23);\r\n      s[38] = b38 ^ (~b30 & b32);\r\n      s[39] = b39 ^ (~b31 & b33);\r\n      s[48] = b48 ^ (~b40 & b42);\r\n      s[49] = b49 ^ (~b41 & b43);\r\n\r\n      s[0] ^= RC[n];\r\n      s[1] ^= RC[n + 1];\r\n    }\r\n  };\r\n\r\n  if (COMMON_JS) {\r\n    module.exports = methods;\r\n  } else {\r\n    for (var i = 0; i < methodNames.length; ++i) {\r\n      root[methodNames[i]] = methods[methodNames[i]];\r\n    }\r\n  }\r\n})();\n});\n\nfunction keccak256(data) {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n//# sourceMappingURL=index.js.map\n\nconst version$5 = \"rlp/5.4.0\";\n//# sourceMappingURL=_version.js.map\n\nconst logger$6 = new Logger(version$5);\nfunction arrayifyInteger(value) {\n    const result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\nfunction unarrayifyInteger(data, offset, length) {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\nfunction _encode(object) {\n    if (Array.isArray(object)) {\n        let payload = [];\n        object.forEach(function (child) {\n            payload = payload.concat(_encode(child));\n        });\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length);\n            return payload;\n        }\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n        return length.concat(payload);\n    }\n    if (!isBytesLike(object)) {\n        logger$6.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object);\n    }\n    const data = Array.prototype.slice.call(arrayify(object));\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n    }\n    else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n    return length.concat(data);\n}\nfunction encode(object) {\n    return hexlify(_encode(object));\n}\nfunction _decodeChildren(data, offset, childOffset, length) {\n    const result = [];\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n        result.push(decoded.result);\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            logger$6.throwError(\"child data too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n    }\n    return { consumed: (1 + length), result: result };\n}\n// returns { consumed: number, result: Object }\nfunction _decode(data, offset) {\n    if (data.length === 0) {\n        logger$6.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger$6.throwError(\"data short segment too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger$6.throwError(\"data long segment too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n    }\n    else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        if (offset + 1 + length > data.length) {\n            logger$6.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        return _decodeChildren(data, offset, offset + 1, length);\n    }\n    else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger$6.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger$6.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result };\n    }\n    else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        if (offset + 1 + length > data.length) {\n            logger$6.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result };\n    }\n    return { consumed: 1, result: hexlify(data[offset]) };\n}\nfunction decode(data) {\n    const bytes = arrayify(data);\n    const decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        logger$6.throwArgumentError(\"invalid rlp data\", \"data\", data);\n    }\n    return decoded.result;\n}\n//# sourceMappingURL=index.js.map\n\nvar index = {\n  __proto__: null,\n  encode: encode,\n  decode: decode\n};\n\nconst version$6 = \"address/5.4.0\";\n//# sourceMappingURL=_version.js.map\n\nconst logger$7 = new Logger(version$6);\nfunction getChecksumAddress(address) {\n    if (!isHexString(address, 20)) {\n        logger$7.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    address = address.toLowerCase();\n    const chars = address.substring(2).split(\"\");\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n    const hashed = arrayify(keccak256(expanded));\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n    return \"0x\" + chars.join(\"\");\n}\n// Shims for environments that are missing some required constants and functions\nconst MAX_SAFE_INTEGER = 0x1fffffffffffff;\nfunction log10(x) {\n    if (Math.log10) {\n        return Math.log10(x);\n    }\n    return Math.log(x) / Math.LN10;\n}\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n// Create lookup table\nconst ibanLookup = {};\nfor (let i = 0; i < 10; i++) {\n    ibanLookup[String(i)] = String(i);\n}\nfor (let i = 0; i < 26; i++) {\n    ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n}\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\nfunction ibanChecksum(address) {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits) {\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) {\n        checksum = \"0\" + checksum;\n    }\n    return checksum;\n}\nfunction getAddress(address) {\n    let result = null;\n    if (typeof (address) !== \"string\") {\n        logger$7.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") {\n            address = \"0x\" + address;\n        }\n        result = getChecksumAddress(address);\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger$7.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n        // Maybe ICAP? (we only support direct mode)\n    }\n    else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger$7.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n        result = _base36To16(address.substring(4));\n        while (result.length < 40) {\n            result = \"0\" + result;\n        }\n        result = getChecksumAddress(\"0x\" + result);\n    }\n    else {\n        logger$7.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    return result;\n}\nfunction isAddress(address) {\n    try {\n        getAddress(address);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nfunction getIcapAddress(address) {\n    let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    while (base36.length < 30) {\n        base36 = \"0\" + base36;\n    }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nfunction getContractAddress(transaction) {\n    let from = null;\n    try {\n        from = getAddress(transaction.from);\n    }\n    catch (error) {\n        logger$7.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n    }\n    const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n    return getAddress(hexDataSlice(keccak256(encode([from, nonce])), 12));\n}\nfunction getCreate2Address(from, salt, initCodeHash) {\n    if (hexDataLength(salt) !== 32) {\n        logger$7.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n    }\n    if (hexDataLength(initCodeHash) !== 32) {\n        logger$7.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n    }\n    return getAddress(hexDataSlice(keccak256(concat([\"0xff\", getAddress(from), salt, initCodeHash])), 12));\n}\n//# sourceMappingURL=index.js.map\n\nclass AddressCoder extends Coder {\n    constructor(localName) {\n        super(\"address\", \"address\", localName, false);\n    }\n    defaultValue() {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n    encode(writer, value) {\n        try {\n            getAddress(value);\n        }\n        catch (error) {\n            this._throwError(error.message, value);\n        }\n        return writer.writeValue(value);\n    }\n    decode(reader) {\n        return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\n    }\n}\n//# sourceMappingURL=address.js.map\n\n// Clones the functionality of an existing Coder, but without a localName\nclass AnonymousCoder extends Coder {\n    constructor(coder) {\n        super(coder.name, coder.type, undefined, coder.dynamic);\n        this.coder = coder;\n    }\n    defaultValue() {\n        return this.coder.defaultValue();\n    }\n    encode(writer, value) {\n        return this.coder.encode(writer, value);\n    }\n    decode(reader) {\n        return this.coder.decode(reader);\n    }\n}\n//# sourceMappingURL=anonymous.js.map\n\nconst logger$8 = new Logger(version$4);\nfunction pack(writer, coders, values) {\n    let arrayValues = null;\n    if (Array.isArray(values)) {\n        arrayValues = values;\n    }\n    else if (values && typeof (values) === \"object\") {\n        let unique = {};\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            if (!name) {\n                logger$8.throwError(\"cannot encode object for signature with missing names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n            if (unique[name]) {\n                logger$8.throwError(\"cannot encode object for signature with duplicate names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n            unique[name] = true;\n            return values[name];\n        });\n    }\n    else {\n        logger$8.throwArgumentError(\"invalid tuple value\", \"tuple\", values);\n    }\n    if (coders.length !== arrayValues.length) {\n        logger$8.throwArgumentError(\"types/value length mismatch\", \"tuple\", values);\n    }\n    let staticWriter = new Writer(writer.wordSize);\n    let dynamicWriter = new Writer(writer.wordSize);\n    let updateFuncs = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n        }\n        else {\n            coder.encode(staticWriter, value);\n        }\n    });\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\nfunction unpack(reader, coders) {\n    let values = [];\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n    coders.forEach((coder) => {\n        let value = null;\n        if (coder.dynamic) {\n            let offset = reader.readValue();\n            let offsetReader = baseReader.subReader(offset.toNumber());\n            try {\n                value = coder.decode(offsetReader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        else {\n            try {\n                value = coder.decode(reader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        if (value != undefined) {\n            values.push(value);\n        }\n    });\n    // We only output named properties for uniquely named coders\n    const uniqueNames = coders.reduce((accum, coder) => {\n        const name = coder.localName;\n        if (name) {\n            if (!accum[name]) {\n                accum[name] = 0;\n            }\n            accum[name]++;\n        }\n        return accum;\n    }, {});\n    // Add any named parameters (i.e. tuples)\n    coders.forEach((coder, index) => {\n        let name = coder.localName;\n        if (!name || uniqueNames[name] !== 1) {\n            return;\n        }\n        if (name === \"length\") {\n            name = \"_length\";\n        }\n        if (values[name] != null) {\n            return;\n        }\n        const value = values[index];\n        if (value instanceof Error) {\n            Object.defineProperty(values, name, {\n                get: () => { throw value; }\n            });\n        }\n        else {\n            values[name] = value;\n        }\n    });\n    for (let i = 0; i < values.length; i++) {\n        const value = values[i];\n        if (value instanceof Error) {\n            Object.defineProperty(values, i, {\n                get: () => { throw value; }\n            });\n        }\n    }\n    return Object.freeze(values);\n}\nclass ArrayCoder extends Coder {\n    constructor(coder, length, localName) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length : \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n        this.coder = coder;\n        this.length = length;\n    }\n    defaultValue() {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n        const result = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n    encode(writer, value) {\n        if (!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n        let count = this.length;\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n        logger$8.checkArgumentCount(value.length, count, \"coder array\" + (this.localName ? (\" \" + this.localName) : \"\"));\n        let coders = [];\n        for (let i = 0; i < value.length; i++) {\n            coders.push(this.coder);\n        }\n        return pack(writer, coders, value);\n    }\n    decode(reader) {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readValue().toNumber();\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            if (count * 32 > reader._data.length) {\n                logger$8.throwError(\"insufficient data length\", Logger.errors.BUFFER_OVERRUN, {\n                    length: reader._data.length,\n                    count: count\n                });\n            }\n        }\n        let coders = [];\n        for (let i = 0; i < count; i++) {\n            coders.push(new AnonymousCoder(this.coder));\n        }\n        return reader.coerce(this.name, unpack(reader, coders));\n    }\n}\n//# sourceMappingURL=array.js.map\n\nclass BooleanCoder extends Coder {\n    constructor(localName) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n    defaultValue() {\n        return false;\n    }\n    encode(writer, value) {\n        return writer.writeValue(value ? 1 : 0);\n    }\n    decode(reader) {\n        return reader.coerce(this.type, !reader.readValue().isZero());\n    }\n}\n//# sourceMappingURL=boolean.js.map\n\nclass DynamicBytesCoder extends Coder {\n    constructor(type, localName) {\n        super(type, type, localName, true);\n    }\n    defaultValue() {\n        return \"0x\";\n    }\n    encode(writer, value) {\n        value = arrayify(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n    decode(reader) {\n        return reader.readBytes(reader.readValue().toNumber(), true);\n    }\n}\nclass BytesCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"bytes\", localName);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, hexlify(super.decode(reader)));\n    }\n}\n//# sourceMappingURL=bytes.js.map\n\n// @TODO: Merge this with bytes\nclass FixedBytesCoder extends Coder {\n    constructor(size, localName) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        this.size = size;\n    }\n    defaultValue() {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n    encode(writer, value) {\n        let data = arrayify(value);\n        if (data.length !== this.size) {\n            this._throwError(\"incorrect data length\", value);\n        }\n        return writer.writeBytes(data);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n    }\n}\n//# sourceMappingURL=fixed-bytes.js.map\n\nclass NullCoder extends Coder {\n    constructor(localName) {\n        super(\"null\", \"\", localName, false);\n    }\n    defaultValue() {\n        return null;\n    }\n    encode(writer, value) {\n        if (value != null) {\n            this._throwError(\"not null\", value);\n        }\n        return writer.writeBytes([]);\n    }\n    decode(reader) {\n        reader.readBytes(0);\n        return reader.coerce(this.name, null);\n    }\n}\n//# sourceMappingURL=null.js.map\n\nconst AddressZero = \"0x0000000000000000000000000000000000000000\";\n//# sourceMappingURL=addresses.js.map\n\nconst NegativeOne$1 = ( /*#__PURE__*/BigNumber.from(-1));\nconst Zero$1 = ( /*#__PURE__*/BigNumber.from(0));\nconst One = ( /*#__PURE__*/BigNumber.from(1));\nconst Two = ( /*#__PURE__*/BigNumber.from(2));\nconst WeiPerEther = ( /*#__PURE__*/BigNumber.from(\"1000000000000000000\"));\nconst MaxUint256 = ( /*#__PURE__*/BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\nconst MinInt256 = ( /*#__PURE__*/BigNumber.from(\"-0x8000000000000000000000000000000000000000000000000000000000000000\"));\nconst MaxInt256 = ( /*#__PURE__*/BigNumber.from(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n//# sourceMappingURL=bignumbers.js.map\n\nconst HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n//# sourceMappingURL=hashes.js.map\n\n// NFKC (composed)             // (decomposed)\nconst EtherSymbol = \"\\u039e\"; // \"\\uD835\\uDF63\";\n//# sourceMappingURL=strings.js.map\n\n//# sourceMappingURL=index.js.map\n\nvar index$1 = {\n  __proto__: null,\n  AddressZero: AddressZero,\n  NegativeOne: NegativeOne$1,\n  Zero: Zero$1,\n  One: One,\n  Two: Two,\n  WeiPerEther: WeiPerEther,\n  MaxUint256: MaxUint256,\n  MinInt256: MinInt256,\n  MaxInt256: MaxInt256,\n  HashZero: HashZero,\n  EtherSymbol: EtherSymbol\n};\n\nclass NumberCoder extends Coder {\n    constructor(size, signed, localName) {\n        const name = ((signed ? \"int\" : \"uint\") + (size * 8));\n        super(name, name, localName, false);\n        this.size = size;\n        this.signed = signed;\n    }\n    defaultValue() {\n        return 0;\n    }\n    encode(writer, value) {\n        let v = BigNumber.from(value);\n        // Check bounds are safe for encoding\n        let maxUintValue = MaxUint256.mask(writer.wordSize * 8);\n        if (this.signed) {\n            let bounds = maxUintValue.mask(this.size * 8 - 1);\n            if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne$1))) {\n                this._throwError(\"value out-of-bounds\", value);\n            }\n        }\n        else if (v.lt(Zero$1) || v.gt(maxUintValue.mask(this.size * 8))) {\n            this._throwError(\"value out-of-bounds\", value);\n        }\n        v = v.toTwos(this.size * 8).mask(this.size * 8);\n        if (this.signed) {\n            v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n        }\n        return writer.writeValue(v);\n    }\n    decode(reader) {\n        let value = reader.readValue().mask(this.size * 8);\n        if (this.signed) {\n            value = value.fromTwos(this.size * 8);\n        }\n        return reader.coerce(this.name, value);\n    }\n}\n//# sourceMappingURL=number.js.map\n\nconst version$7 = \"strings/5.4.0\";\n//# sourceMappingURL=_version.js.map\n\nconst logger$9 = new Logger(version$7);\n///////////////////////////////\nvar UnicodeNormalizationForm;\n(function (UnicodeNormalizationForm) {\n    UnicodeNormalizationForm[\"current\"] = \"\";\n    UnicodeNormalizationForm[\"NFC\"] = \"NFC\";\n    UnicodeNormalizationForm[\"NFD\"] = \"NFD\";\n    UnicodeNormalizationForm[\"NFKC\"] = \"NFKC\";\n    UnicodeNormalizationForm[\"NFKD\"] = \"NFKD\";\n})(UnicodeNormalizationForm || (UnicodeNormalizationForm = {}));\nvar Utf8ErrorReason;\n(function (Utf8ErrorReason) {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"UNEXPECTED_CONTINUE\"] = \"unexpected continuation byte\";\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"BAD_PREFIX\"] = \"bad codepoint prefix\";\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"OVERRUN\"] = \"string overrun\";\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    Utf8ErrorReason[\"MISSING_CONTINUE\"] = \"missing continuation byte\";\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    Utf8ErrorReason[\"OUT_OF_RANGE\"] = \"out of UTF-8 range\";\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    Utf8ErrorReason[\"UTF16_SURROGATE\"] = \"UTF-16 surrogate\";\n    // The string is an overlong reperesentation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    Utf8ErrorReason[\"OVERLONG\"] = \"overlong representation\";\n})(Utf8ErrorReason || (Utf8ErrorReason = {}));\nfunction errorFunc(reason, offset, bytes, output, badCodepoint) {\n    return logger$9.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`, \"bytes\", bytes);\n}\nfunction ignoreFunc(reason, offset, bytes, output, badCodepoint) {\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) {\n                break;\n            }\n            i++;\n        }\n        return i;\n    }\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n    // Nothing to skip\n    return 0;\n}\nfunction replaceFunc(reason, offset, bytes, output, badCodepoint) {\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n    // Put the replacement character into the output\n    output.push(0xfffd);\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes);\n}\n// Common error handing strategies\nconst Utf8ErrorFuncs = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes, onError) {\n    if (onError == null) {\n        onError = Utf8ErrorFuncs.error;\n    }\n    bytes = arrayify(bytes);\n    const result = [];\n    let i = 0;\n    // Invalid bytes are ignored\n    while (i < bytes.length) {\n        const c = bytes[i++];\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n            // 1110 xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n            // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n        }\n        else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            }\n            else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            }\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n        // See above loop for invalid contimuation byte\n        if (res === null) {\n            continue;\n        }\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        result.push(res);\n    }\n    return result;\n}\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nfunction toUtf8Bytes(str, form = UnicodeNormalizationForm.current) {\n    if (form != UnicodeNormalizationForm.current) {\n        logger$9.checkNormalize();\n        str = str.normalize(form);\n    }\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n        if (c < 0x80) {\n            result.push(c);\n        }\n        else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n        }\n        else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n        }\n        else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n    return arrayify(result);\n}\nfunction escapeChar(value) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\nfunction _toEscapedUtf8String(bytes, onError) {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8: return \"\\\\b\";\n                case 9: return \"\\\\t\";\n                case 10: return \"\\\\n\";\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\nfunction _toUtf8String(codePoints) {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode((((codePoint >> 10) & 0x3ff) + 0xd800), ((codePoint & 0x3ff) + 0xdc00));\n    }).join(\"\");\n}\nfunction toUtf8String(bytes, onError) {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\nfunction toUtf8CodePoints(str, form = UnicodeNormalizationForm.current) {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n//# sourceMappingURL=utf8.js.map\n\nfunction formatBytes32String(text) {\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n    // Check we have room for null-termination\n    if (bytes.length > 31) {\n        throw new Error(\"bytes32 string must be less than 32 bytes\");\n    }\n    // Zero-pad (implicitly null-terminates)\n    return hexlify(concat([bytes, HashZero]).slice(0, 32));\n}\nfunction parseBytes32String(bytes) {\n    const data = arrayify(bytes);\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) {\n        throw new Error(\"invalid bytes32 - not 32 bytes long\");\n    }\n    if (data[31] !== 0) {\n        throw new Error(\"invalid bytes32 string - no null terminator\");\n    }\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) {\n        length--;\n    }\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n//# sourceMappingURL=bytes32.js.map\n\nfunction bytes2(data) {\n    if ((data.length % 4) !== 0) {\n        throw new Error(\"bad data\");\n    }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\nfunction createTable(data, func) {\n    if (!func) {\n        func = function (value) { return [parseInt(value, 16)]; };\n    }\n    let lo = 0;\n    let result = {};\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n    return result;\n}\nfunction createRangeTable(data) {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        }\n        else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\nfunction matchMap(value, ranges) {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) {\n                continue;\n            }\n            return range;\n        }\n    }\n    return null;\n}\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\nconst Table_B_2_ranges = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [23], l: 127 },\n    { h: 54, s: 1, e: [48], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [2, 6, 8], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [18, 24, 66], l: 19, d: 2 },\n    { h: 26, s: 32, e: [17], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [38], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [1, 4, 5, 7, 8, 11, 12, 17], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [2, 7, 8, 17], l: 52 },\n    { h: 24, s: -120023, e: [2, 7, 13, 15, 16, 17], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [17], l: 56 },\n    { h: 24, s: -119601, e: [17], l: 58 },\n    { h: 24, s: -119659, e: [17], l: 58 },\n    { h: 24, s: -119717, e: [17], l: 58 },\n    { h: 24, s: -119775, e: [17], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\nfunction flatten(values) {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, []);\n}\nfunction _nameprepTableA1(codepoint) {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\nfunction _nameprepTableB2(codepoint) {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) {\n        return [codepoint + range.s];\n    }\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) {\n        return codes;\n    }\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) {\n        return [codepoint + shift[0]];\n    }\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) {\n        return complex;\n    }\n    return null;\n}\nfunction _nameprepTableC(codepoint) {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\nfunction nameprep(value) {\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {\n        return value.toLowerCase();\n    }\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) {\n            return [];\n        }\n        if (code >= 0xfe00 && code <= 0xfe0f) {\n            return [];\n        }\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) {\n            return codesTableB2;\n        }\n        // No Substitution\n        return [code];\n    }));\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n    // IDNA extras\n    let name = _toUtf8String(codes);\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n    // IDNA: 4.2.4\n    if (name.length > 63) {\n        throw new Error(\"too long\");\n    }\n    return name;\n}\n//# sourceMappingURL=idna.js.map\n\nclass StringCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"string\", localName);\n    }\n    defaultValue() {\n        return \"\";\n    }\n    encode(writer, value) {\n        return super.encode(writer, toUtf8Bytes(value));\n    }\n    decode(reader) {\n        return toUtf8String(super.decode(reader));\n    }\n}\n//# sourceMappingURL=string.js.map\n\nclass TupleCoder extends Coder {\n    constructor(coders, localName) {\n        let dynamic = false;\n        const types = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) {\n                dynamic = true;\n            }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n        super(\"tuple\", type, localName, dynamic);\n        this.coders = coders;\n    }\n    defaultValue() {\n        const values = [];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) {\n                    accum[name] = 0;\n                }\n                accum[name]++;\n            }\n            return accum;\n        }, {});\n        // Add named values\n        this.coders.forEach((coder, index) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) {\n                return;\n            }\n            if (name === \"length\") {\n                name = \"_length\";\n            }\n            if (values[name] != null) {\n                return;\n            }\n            values[name] = values[index];\n        });\n        return Object.freeze(values);\n    }\n    encode(writer, value) {\n        return pack(writer, this.coders, value);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, unpack(reader, this.coders));\n    }\n}\n//# sourceMappingURL=tuple.js.map\n\nconst logger$a = new Logger(version$4);\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\nclass AbiCoder {\n    constructor(coerceFunc) {\n        logger$a.checkNew(new.target, AbiCoder);\n        defineReadOnly(this, \"coerceFunc\", coerceFunc || null);\n    }\n    _getCoder(param) {\n        switch (param.baseType) {\n            case \"address\":\n                return new AddressCoder(param.name);\n            case \"bool\":\n                return new BooleanCoder(param.name);\n            case \"string\":\n                return new StringCoder(param.name);\n            case \"bytes\":\n                return new BytesCoder(param.name);\n            case \"array\":\n                return new ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n            case \"tuple\":\n                return new TupleCoder((param.components || []).map((component) => {\n                    return this._getCoder(component);\n                }), param.name);\n            case \"\":\n                return new NullCoder(param.name);\n        }\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            if (size === 0 || size > 256 || (size % 8) !== 0) {\n                logger$a.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n            }\n            return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            if (size === 0 || size > 32) {\n                logger$a.throwArgumentError(\"invalid bytes length\", \"param\", param);\n            }\n            return new FixedBytesCoder(size, param.name);\n        }\n        return logger$a.throwArgumentError(\"invalid type\", \"type\", param.type);\n    }\n    _getWordSize() { return 32; }\n    _getReader(data, allowLoose) {\n        return new Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n    }\n    _getWriter() {\n        return new Writer(this._getWordSize());\n    }\n    getDefaultValue(types) {\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n    encode(types, values) {\n        if (types.length !== values.length) {\n            logger$a.throwError(\"types/values length mismatch\", Logger.errors.INVALID_ARGUMENT, {\n                count: { types: types.length, values: values.length },\n                value: { types: types, values: values }\n            });\n        }\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n        const writer = this._getWriter();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n    decode(types, data, loose) {\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(this._getReader(arrayify(data), loose));\n    }\n}\nconst defaultAbiCoder = new AbiCoder();\n//# sourceMappingURL=abi-coder.js.map\n\nfunction id(text) {\n    return keccak256(toUtf8Bytes(text));\n}\n//# sourceMappingURL=id.js.map\n\nconst version$8 = \"hash/5.4.0\";\n//# sourceMappingURL=_version.js.map\n\nconst logger$b = new Logger(version$8);\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\nconst Partition = new RegExp(\"^((.*)\\\\.)?([^.]+)$\");\nfunction isValidName(name) {\n    try {\n        const comps = name.split(\".\");\n        for (let i = 0; i < comps.length; i++) {\n            if (nameprep(comps[i]).length === 0) {\n                throw new Error(\"empty\");\n            }\n        }\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nfunction namehash(name) {\n    /* istanbul ignore if */\n    if (typeof (name) !== \"string\") {\n        logger$b.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n    let current = name;\n    let result = Zeros;\n    while (current.length) {\n        const partition = current.match(Partition);\n        if (partition == null || partition[2] === \"\") {\n            logger$b.throwArgumentError(\"invalid ENS address; missing component\", \"name\", name);\n        }\n        const label = toUtf8Bytes(nameprep(partition[3]));\n        result = keccak256(concat([result, keccak256(label)]));\n        current = partition[2] || \"\";\n    }\n    return hexlify(result);\n}\n//# sourceMappingURL=namehash.js.map\n\nconst messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\nfunction hashMessage(message) {\n    if (typeof (message) === \"string\") {\n        message = toUtf8Bytes(message);\n    }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n//# sourceMappingURL=message.js.map\n\nvar __awaiter$1 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst logger$c = new Logger(version$8);\nconst padding = new Uint8Array(32);\npadding.fill(0);\nconst NegativeOne$2 = BigNumber.from(-1);\nconst Zero$2 = BigNumber.from(0);\nconst One$1 = BigNumber.from(1);\nconst MaxUint256$1 = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nfunction hexPadRight(value) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32;\n    if (padOffset) {\n        return hexConcat([bytes, padding.slice(padOffset)]);\n    }\n    return hexlify(bytes);\n}\nconst hexTrue = hexZeroPad(One$1.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero$2.toHexString(), 32);\nconst domainFieldTypes = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\nconst domainFieldNames = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\nfunction checkString(key) {\n    return function (value) {\n        if (typeof (value) !== \"string\") {\n            logger$c.throwArgumentError(`invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);\n        }\n        return value;\n    };\n}\nconst domainChecks = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function (value) {\n        try {\n            return BigNumber.from(value).toString();\n        }\n        catch (error) { }\n        return logger$c.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function (value) {\n        try {\n            return getAddress(value).toLowerCase();\n        }\n        catch (error) { }\n        return logger$c.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function (value) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) {\n                throw new Error(\"bad length\");\n            }\n            return hexlify(bytes);\n        }\n        catch (error) { }\n        return logger$c.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n};\nfunction getBaseEncoder(type) {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger$c.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n            const boundsUpper = MaxUint256$1.mask(signed ? (width - 1) : width);\n            const boundsLower = signed ? boundsUpper.add(One$1).mul(NegativeOne$2) : Zero$2;\n            return function (value) {\n                const v = BigNumber.from(value);\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger$c.throwArgumentError(`value out-of-bounds for ${type}`, \"value\", value);\n                }\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger$c.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n            return function (value) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger$c.throwArgumentError(`invalid length for ${type}`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n    switch (type) {\n        case \"address\": return function (value) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function (value) {\n            return ((!value) ? hexFalse : hexTrue);\n        };\n        case \"bytes\": return function (value) {\n            return keccak256(value);\n        };\n        case \"string\": return function (value) {\n            return id(value);\n        };\n    }\n    return null;\n}\nfunction encodeType(name, fields) {\n    return `${name}(${fields.map(({ name, type }) => (type + \" \" + name)).join(\",\")})`;\n}\nclass TypedDataEncoder {\n    constructor(types) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n        defineReadOnly(this, \"_encoderCache\", {});\n        defineReadOnly(this, \"_types\", {});\n        // Link struct types to their direct child structs\n        const links = {};\n        // Link structs to structs which contain them as a child\n        const parents = {};\n        // Link all subtypes within a given struct\n        const subtypes = {};\n        Object.keys(types).forEach((type) => {\n            links[type] = {};\n            parents[type] = [];\n            subtypes[type] = {};\n        });\n        for (const name in types) {\n            const uniqueNames = {};\n            types[name].forEach((field) => {\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger$c.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger$c.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) {\n                    return;\n                }\n                if (!parents[baseType]) {\n                    logger$c.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n        if (primaryTypes.length === 0) {\n            logger$c.throwArgumentError(\"missing primary type\", \"types\", types);\n        }\n        else if (primaryTypes.length > 1) {\n            logger$c.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map((t) => (JSON.stringify(t))).join(\", \")}`, \"types\", types);\n        }\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n        // Check for circular type references\n        function checkCircular(type, found) {\n            if (found[type]) {\n                logger$c.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`, \"types\", types);\n            }\n            found[type] = true;\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) {\n                    return;\n                }\n                // Recursively check children\n                checkCircular(child, found);\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n            delete found[type];\n        }\n        checkCircular(this.primaryType, {});\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n    getEncoder(type) {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n    _getEncoder(type) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return encoder;\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value) => {\n                if (length >= 0 && value.length !== length) {\n                    logger$c.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n                return keccak256(hexConcat(result));\n            };\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) {\n                        return keccak256(result);\n                    }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            };\n        }\n        return logger$c.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n    }\n    encodeType(name) {\n        const result = this._types[name];\n        if (!result) {\n            logger$c.throwArgumentError(`unknown type: ${JSON.stringify(name)}`, \"name\", name);\n        }\n        return result;\n    }\n    encodeData(type, value) {\n        return this.getEncoder(type)(value);\n    }\n    hashStruct(name, value) {\n        return keccak256(this.encodeData(name, value));\n    }\n    encode(value) {\n        return this.encodeData(this.primaryType, value);\n    }\n    hash(value) {\n        return this.hashStruct(this.primaryType, value);\n    }\n    _visit(type, value, callback) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return callback(type, value);\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger$c.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v) => this._visit(subtype, v, callback));\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, {});\n        }\n        return logger$c.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n    }\n    visit(value, callback) {\n        return this._visit(this.primaryType, value, callback);\n    }\n    static from(types) {\n        return new TypedDataEncoder(types);\n    }\n    static getPrimaryType(types) {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n    static hashStruct(name, types, value) {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n    static hashDomain(domain) {\n        const domainFields = [];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger$c.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n    static encode(domain, types, value) {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n    static hash(domain, types, value) {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n    // Replaces all address types with ENS names with their looked up address\n    static resolveNames(domain, types, value, resolveName) {\n        return __awaiter$1(this, void 0, void 0, function* () {\n            // Make a copy to isolate it from the object passed in\n            domain = shallowCopy(domain);\n            // Look up all ENS names\n            const ensCache = {};\n            // Do we need to look up the domain's verifyingContract?\n            if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n                ensCache[domain.verifyingContract] = \"0x\";\n            }\n            // We are going to use the encoder to visit all the base values\n            const encoder = TypedDataEncoder.from(types);\n            // Get a list of all the addresses\n            encoder.visit(value, (type, value) => {\n                if (type === \"address\" && !isHexString(value, 20)) {\n                    ensCache[value] = \"0x\";\n                }\n                return value;\n            });\n            // Lookup each name\n            for (const name in ensCache) {\n                ensCache[name] = yield resolveName(name);\n            }\n            // Replace the domain verifyingContract if needed\n            if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n                domain.verifyingContract = ensCache[domain.verifyingContract];\n            }\n            // Replace all ENS names with their address\n            value = encoder.visit(value, (type, value) => {\n                if (type === \"address\" && ensCache[value]) {\n                    return ensCache[value];\n                }\n                return value;\n            });\n            return { domain, value };\n        });\n    }\n    static getPayload(domain, types, value) {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n        // Derive the EIP712Domain Struct reference type\n        const domainValues = {};\n        const domainTypes = [];\n        domainFieldNames.forEach((name) => {\n            const value = domain[name];\n            if (value == null) {\n                return;\n            }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n        const encoder = TypedDataEncoder.from(types);\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger$c.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        }\n        else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n        // Validate the data structures and types\n        encoder.encode(value);\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type, value) => {\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof (value) !== \"string\") {\n                            logger$c.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n                return logger$c.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n//# sourceMappingURL=typed-data.js.map\n\nconst logger$d = new Logger(version$4);\nclass LogDescription extends Description {\n}\nclass TransactionDescription extends Description {\n}\nclass ErrorDescription extends Description {\n}\nclass Indexed extends Description {\n    static isIndexed(value) {\n        return !!(value && value._isIndexed);\n    }\n}\nconst BuiltinErrors = {\n    \"0x08c379a0\": { signature: \"Error(string)\", name: \"Error\", inputs: [\"string\"], reason: true },\n    \"0x4e487b71\": { signature: \"Panic(uint256)\", name: \"Panic\", inputs: [\"uint256\"] }\n};\nfunction wrapAccessError(property, error) {\n    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${property}`);\n    wrap.error = error;\n    return wrap;\n}\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\nclass Interface {\n    constructor(fragments) {\n        logger$d.checkNew(new.target, Interface);\n        let abi = [];\n        if (typeof (fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        }\n        else {\n            abi = fragments;\n        }\n        defineReadOnly(this, \"fragments\", abi.map((fragment) => {\n            return Fragment.from(fragment);\n        }).filter((fragment) => (fragment != null)));\n        defineReadOnly(this, \"_abiCoder\", getStatic((new.target), \"getAbiCoder\")());\n        defineReadOnly(this, \"functions\", {});\n        defineReadOnly(this, \"errors\", {});\n        defineReadOnly(this, \"events\", {});\n        defineReadOnly(this, \"structs\", {});\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment) => {\n            let bucket = null;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        logger$d.warn(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineReadOnly(this, \"deploy\", fragment);\n                    return;\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.functions;\n                    break;\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.events;\n                    break;\n                case \"error\":\n                    bucket = this.errors;\n                    break;\n                default:\n                    return;\n            }\n            let signature = fragment.format();\n            if (bucket[signature]) {\n                logger$d.warn(\"duplicate definition - \" + signature);\n                return;\n            }\n            bucket[signature] = fragment;\n        });\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineReadOnly(this, \"deploy\", ConstructorFragment.from({\n                payable: false,\n                type: \"constructor\"\n            }));\n        }\n        defineReadOnly(this, \"_isInterface\", true);\n    }\n    format(format) {\n        if (!format) {\n            format = FormatTypes.full;\n        }\n        if (format === FormatTypes.sighash) {\n            logger$d.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n        }\n        const abi = this.fragments.map((fragment) => fragment.format(format));\n        // We need to re-bundle the JSON fragments a bit\n        if (format === FormatTypes.json) {\n            return JSON.stringify(abi.map((j) => JSON.parse(j)));\n        }\n        return abi;\n    }\n    // Sub-classes can override these to handle other blockchains\n    static getAbiCoder() {\n        return defaultAbiCoder;\n    }\n    static getAddress(address) {\n        return getAddress(address);\n    }\n    static getSighash(fragment) {\n        return hexDataSlice(id(fragment.format()), 0, 4);\n    }\n    static getEventTopic(eventFragment) {\n        return id(eventFragment.format());\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getFunction(nameOrSignatureOrSighash) {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            for (const name in this.functions) {\n                if (nameOrSignatureOrSighash === this.getSighash(name)) {\n                    return this.functions[name];\n                }\n            }\n            logger$d.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.functions).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger$d.throwArgumentError(\"no matching function\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger$d.throwArgumentError(\"multiple matching functions\", \"name\", name);\n            }\n            return this.functions[matching[0]];\n        }\n        // Normlize the signature and lookup the function\n        const result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger$d.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    getEvent(nameOrSignatureOrTopic) {\n        if (isHexString(nameOrSignatureOrTopic)) {\n            const topichash = nameOrSignatureOrTopic.toLowerCase();\n            for (const name in this.events) {\n                if (topichash === this.getEventTopic(name)) {\n                    return this.events[name];\n                }\n            }\n            logger$d.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrTopic.trim();\n            const matching = Object.keys(this.events).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger$d.throwArgumentError(\"no matching event\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger$d.throwArgumentError(\"multiple matching events\", \"name\", name);\n            }\n            return this.events[matching[0]];\n        }\n        // Normlize the signature and lookup the function\n        const result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];\n        if (!result) {\n            logger$d.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n        }\n        return result;\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getError(nameOrSignatureOrSighash) {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            const getSighash = getStatic(this.constructor, \"getSighash\");\n            for (const name in this.errors) {\n                const error = this.errors[name];\n                if (nameOrSignatureOrSighash === getSighash(error)) {\n                    return this.errors[name];\n                }\n            }\n            logger$d.throwArgumentError(\"no matching error\", \"sighash\", nameOrSignatureOrSighash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.errors).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger$d.throwArgumentError(\"no matching error\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger$d.throwArgumentError(\"multiple matching errors\", \"name\", name);\n            }\n            return this.errors[matching[0]];\n        }\n        // Normlize the signature and lookup the function\n        const result = this.errors[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger$d.throwArgumentError(\"no matching error\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n    // Get the sighash (the bytes4 selector) used by Solidity to identify a function\n    getSighash(fragment) {\n        if (typeof (fragment) === \"string\") {\n            try {\n                fragment = this.getFunction(fragment);\n            }\n            catch (error) {\n                try {\n                    fragment = this.getError(fragment);\n                }\n                catch (_) {\n                    throw error;\n                }\n            }\n        }\n        return getStatic(this.constructor, \"getSighash\")(fragment);\n    }\n    // Get the topic (the bytes32 hash) used by Solidity to identify an event\n    getEventTopic(eventFragment) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        return getStatic(this.constructor, \"getEventTopic\")(eventFragment);\n    }\n    _decodeParams(params, data) {\n        return this._abiCoder.decode(params, data);\n    }\n    _encodeParams(params, values) {\n        return this._abiCoder.encode(params, values);\n    }\n    encodeDeploy(values) {\n        return this._encodeParams(this.deploy.inputs, values || []);\n    }\n    decodeErrorResult(fragment, data) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n        const bytes = arrayify(data);\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(fragment)) {\n            logger$d.throwArgumentError(`data signature does not match error ${fragment.name}.`, \"data\", hexlify(bytes));\n        }\n        return this._decodeParams(fragment.inputs, bytes.slice(4));\n    }\n    encodeErrorResult(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n        return hexlify(concat([\n            this.getSighash(fragment),\n            this._encodeParams(fragment.inputs, values || [])\n        ]));\n    }\n    // Decode the data for a function call (e.g. tx.data)\n    decodeFunctionData(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        const bytes = arrayify(data);\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n            logger$d.throwArgumentError(`data signature does not match function ${functionFragment.name}.`, \"data\", hexlify(bytes));\n        }\n        return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n    }\n    // Encode the data for a function call (e.g. tx.data)\n    encodeFunctionData(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return hexlify(concat([\n            this.getSighash(functionFragment),\n            this._encodeParams(functionFragment.inputs, values || [])\n        ]));\n    }\n    // Decode the result from a function call (e.g. from eth_call)\n    decodeFunctionResult(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        let bytes = arrayify(data);\n        let reason = null;\n        let errorArgs = null;\n        let errorName = null;\n        let errorSignature = null;\n        switch (bytes.length % this._abiCoder._getWordSize()) {\n            case 0:\n                try {\n                    return this._abiCoder.decode(functionFragment.outputs, bytes);\n                }\n                catch (error) { }\n                break;\n            case 4: {\n                const selector = hexlify(bytes.slice(0, 4));\n                const builtin = BuiltinErrors[selector];\n                if (builtin) {\n                    errorArgs = this._abiCoder.decode(builtin.inputs, bytes.slice(4));\n                    errorName = builtin.name;\n                    errorSignature = builtin.signature;\n                    if (builtin.reason) {\n                        reason = errorArgs[0];\n                    }\n                }\n                else {\n                    try {\n                        const error = this.getError(selector);\n                        errorArgs = this._abiCoder.decode(error.inputs, bytes.slice(4));\n                        errorName = error.name;\n                        errorSignature = error.format();\n                    }\n                    catch (error) {\n                        console.log(error);\n                    }\n                }\n                break;\n            }\n        }\n        return logger$d.throwError(\"call revert exception\", Logger.errors.CALL_EXCEPTION, {\n            method: functionFragment.format(),\n            errorArgs, errorName, errorSignature, reason\n        });\n    }\n    // Encode the result for a function call (e.g. for eth_call)\n    encodeFunctionResult(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return hexlify(this._abiCoder.encode(functionFragment.outputs, values || []));\n    }\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (values.length > eventFragment.inputs.length) {\n            logger$d.throwError(\"too many arguments for \" + eventFragment.format(), Logger.errors.UNEXPECTED_ARGUMENT, {\n                argument: \"values\",\n                value: values\n            });\n        }\n        let topics = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        const encodeTopic = (param, value) => {\n            if (param.type === \"string\") {\n                return id(value);\n            }\n            else if (param.type === \"bytes\") {\n                return keccak256(hexlify(value));\n            }\n            // Check addresses are valid\n            if (param.type === \"address\") {\n                this._abiCoder.encode([\"address\"], [value]);\n            }\n            return hexZeroPad(hexlify(value), 32);\n        };\n        values.forEach((value, index) => {\n            let param = eventFragment.inputs[index];\n            if (!param.indexed) {\n                if (value != null) {\n                    logger$d.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                }\n                return;\n            }\n            if (value == null) {\n                topics.push(null);\n            }\n            else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger$d.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            }\n            else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            }\n            else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n        return topics;\n    }\n    encodeEventLog(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        const topics = [];\n        const dataTypes = [];\n        const dataValues = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        if (values.length !== eventFragment.inputs.length) {\n            logger$d.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n        }\n        eventFragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value));\n                }\n                else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value));\n                }\n                else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TOOD\n                    throw new Error(\"not implemented\");\n                }\n                else {\n                    topics.push(this._abiCoder.encode([param.type], [value]));\n                }\n            }\n            else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n        return {\n            data: this._abiCoder.encode(dataTypes, dataValues),\n            topics: topics\n        };\n    }\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(eventFragment, data, topics) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (topics != null && !eventFragment.anonymous) {\n            let topicHash = this.getEventTopic(eventFragment);\n            if (!isHexString(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n                logger$d.throwError(\"fragment/topic mismatch\", Logger.errors.INVALID_ARGUMENT, { argument: \"topics[0]\", expected: topicHash, value: topics[0] });\n            }\n            topics = topics.slice(1);\n        }\n        let indexed = [];\n        let nonIndexed = [];\n        let dynamic = [];\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.fromObject({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                }\n                else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            }\n            else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n        let resultIndexed = (topics != null) ? this._abiCoder.decode(indexed, concat(topics)) : null;\n        let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n        let result = [];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: null });\n                }\n                else if (dynamic[index]) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: resultIndexed[indexedIndex++] });\n                }\n                else {\n                    try {\n                        result[index] = resultIndexed[indexedIndex++];\n                    }\n                    catch (error) {\n                        result[index] = error;\n                    }\n                }\n            }\n            else {\n                try {\n                    result[index] = resultNonIndexed[nonIndexedIndex++];\n                }\n                catch (error) {\n                    result[index] = error;\n                }\n            }\n            // Add the keyword argument if named and safe\n            if (param.name && result[param.name] == null) {\n                const value = result[index];\n                // Make error named values throw on access\n                if (value instanceof Error) {\n                    Object.defineProperty(result, param.name, {\n                        get: () => { throw wrapAccessError(`property ${JSON.stringify(param.name)}`, value); }\n                    });\n                }\n                else {\n                    result[param.name] = value;\n                }\n            }\n        });\n        // Make all error indexed values throw on access\n        for (let i = 0; i < result.length; i++) {\n            const value = result[i];\n            if (value instanceof Error) {\n                Object.defineProperty(result, i, {\n                    get: () => { throw wrapAccessError(`index ${i}`, value); }\n                });\n            }\n        }\n        return Object.freeze(result);\n    }\n    // Given a transaction, find the matching function fragment (if any) and\n    // determine all its properties and call parameters\n    parseTransaction(tx) {\n        let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase());\n        if (!fragment) {\n            return null;\n        }\n        return new TransactionDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n            functionFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n            value: BigNumber.from(tx.value || \"0\"),\n        });\n    }\n    // @TODO\n    //parseCallResult(data: BytesLike): ??\n    // Given an event log, find the matching event fragment (if any) and\n    // determine all its properties and values\n    parseLog(log) {\n        let fragment = this.getEvent(log.topics[0]);\n        if (!fragment || fragment.anonymous) {\n            return null;\n        }\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe jsut a fragment?\n        return new LogDescription({\n            eventFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            topic: this.getEventTopic(fragment),\n            args: this.decodeEventLog(fragment, log.data, log.topics)\n        });\n    }\n    parseError(data) {\n        const hexData = hexlify(data);\n        let fragment = this.getError(hexData.substring(0, 10).toLowerCase());\n        if (!fragment) {\n            return null;\n        }\n        return new ErrorDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + hexData.substring(10)),\n            errorFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n        });\n    }\n    /*\n    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {\n        if (Interface.isInterface(value)) {\n            return value;\n        }\n        if (typeof(value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        return new Interface(value);\n    }\n    */\n    static isInterface(value) {\n        return !!(value && value._isInterface);\n    }\n}\n//# sourceMappingURL=interface.js.map\n\nconst version$9 = \"abstract-provider/5.4.1\";\n//# sourceMappingURL=_version.js.map\n\nvar __awaiter$2 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst logger$e = new Logger(version$9);\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\nclass ForkEvent extends Description {\n    static isForkEvent(value) {\n        return !!(value && value._isForkEvent);\n    }\n}\n///////////////////////////////\n// Exported Abstracts\nclass Provider {\n    constructor() {\n        logger$e.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n    getFeeData() {\n        return __awaiter$2(this, void 0, void 0, function* () {\n            const { block, gasPrice } = yield resolveProperties({\n                block: this.getBlock(\"latest\"),\n                gasPrice: this.getGasPrice().catch((error) => {\n                    // @TODO: Why is this now failing on Calaveras?\n                    //console.log(error);\n                    return null;\n                })\n            });\n            let maxFeePerGas = null, maxPriorityFeePerGas = null;\n            if (block && block.baseFeePerGas) {\n                // We may want to compute this more accurately in the future,\n                // using the formula \"check if the base fee is correct\".\n                // See: https://eips.ethereum.org/EIPS/eip-1559\n                maxPriorityFeePerGas = BigNumber.from(\"2500000000\");\n                maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n            }\n            return { maxFeePerGas, maxPriorityFeePerGas, gasPrice };\n        });\n    }\n    // Alias for \"on\"\n    addListener(eventName, listener) {\n        return this.on(eventName, listener);\n    }\n    // Alias for \"off\"\n    removeListener(eventName, listener) {\n        return this.off(eventName, listener);\n    }\n    static isProvider(value) {\n        return !!(value && value._isProvider);\n    }\n}\n//# sourceMappingURL=index.js.map\n\nconst version$a = \"abstract-signer/5.4.1\";\n//# sourceMappingURL=_version.js.map\n\nvar __awaiter$3 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst logger$f = new Logger(version$a);\nconst allowedTransactionKeys = [\n    \"accessList\", \"chainId\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"\n];\nconst forwardErrors = [\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n];\nclass Signer {\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        logger$f.checkAbstract(new.target, Signer);\n        defineReadOnly(this, \"_isSigner\", true);\n    }\n    ///////////////////\n    // Sub-classes MAY override these\n    getBalance(blockTag) {\n        return __awaiter$3(this, void 0, void 0, function* () {\n            this._checkProvider(\"getBalance\");\n            return yield this.provider.getBalance(this.getAddress(), blockTag);\n        });\n    }\n    getTransactionCount(blockTag) {\n        return __awaiter$3(this, void 0, void 0, function* () {\n            this._checkProvider(\"getTransactionCount\");\n            return yield this.provider.getTransactionCount(this.getAddress(), blockTag);\n        });\n    }\n    // Populates \"from\" if unspecified, and estimates the gas for the transation\n    estimateGas(transaction) {\n        return __awaiter$3(this, void 0, void 0, function* () {\n            this._checkProvider(\"estimateGas\");\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            return yield this.provider.estimateGas(tx);\n        });\n    }\n    // Populates \"from\" if unspecified, and calls with the transation\n    call(transaction, blockTag) {\n        return __awaiter$3(this, void 0, void 0, function* () {\n            this._checkProvider(\"call\");\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            return yield this.provider.call(tx, blockTag);\n        });\n    }\n    // Populates all fields in a transaction, signs it and sends it to the network\n    sendTransaction(transaction) {\n        return __awaiter$3(this, void 0, void 0, function* () {\n            this._checkProvider(\"sendTransaction\");\n            const tx = yield this.populateTransaction(transaction);\n            const signedTx = yield this.signTransaction(tx);\n            return yield this.provider.sendTransaction(signedTx);\n        });\n    }\n    getChainId() {\n        return __awaiter$3(this, void 0, void 0, function* () {\n            this._checkProvider(\"getChainId\");\n            const network = yield this.provider.getNetwork();\n            return network.chainId;\n        });\n    }\n    getGasPrice() {\n        return __awaiter$3(this, void 0, void 0, function* () {\n            this._checkProvider(\"getGasPrice\");\n            return yield this.provider.getGasPrice();\n        });\n    }\n    getFeeData() {\n        return __awaiter$3(this, void 0, void 0, function* () {\n            this._checkProvider(\"getFeeData\");\n            return yield this.provider.getFeeData();\n        });\n    }\n    resolveName(name) {\n        return __awaiter$3(this, void 0, void 0, function* () {\n            this._checkProvider(\"resolveName\");\n            return yield this.provider.resolveName(name);\n        });\n    }\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction) {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger$f.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n        const tx = shallowCopy(transaction);\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n        }\n        else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                    logger$f.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n        return tx;\n    }\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    //\n    // Notes:\n    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n    populateTransaction(transaction) {\n        return __awaiter$3(this, void 0, void 0, function* () {\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            if (tx.to != null) {\n                tx.to = Promise.resolve(tx.to).then((to) => __awaiter$3(this, void 0, void 0, function* () {\n                    if (to == null) {\n                        return null;\n                    }\n                    const address = yield this.resolveName(to);\n                    if (address == null) {\n                        logger$f.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                    }\n                    return address;\n                }));\n                // Prevent this error from causing an UnhandledPromiseException\n                tx.to.catch((error) => { });\n            }\n            // Do not allow mixing pre-eip-1559 and eip-1559 proerties\n            const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);\n            if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n                logger$f.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n            }\n            else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n                logger$f.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n            }\n            if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {\n                // Fully-formed EIP-1559 transaction (skip getFeeData)\n                tx.type = 2;\n            }\n            else if (tx.type === 0 || tx.type === 1) {\n                // Explicit Legacy or EIP-2930 transaction\n                // Populate missing gasPrice\n                if (tx.gasPrice == null) {\n                    tx.gasPrice = this.getGasPrice();\n                }\n            }\n            else {\n                // We need to get fee data to determine things\n                const feeData = yield this.getFeeData();\n                if (tx.type == null) {\n                    // We need to auto-detect the intended type of this transaction...\n                    if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                        // The network supports EIP-1559!\n                        // Upgrade transaction from null to eip-1559\n                        tx.type = 2;\n                        if (tx.gasPrice != null) {\n                            // Using legacy gasPrice property on an eip-1559 network,\n                            // so use gasPrice as both fee properties\n                            const gasPrice = tx.gasPrice;\n                            delete tx.gasPrice;\n                            tx.maxFeePerGas = gasPrice;\n                            tx.maxPriorityFeePerGas = gasPrice;\n                        }\n                        else {\n                            // Populate missing fee data\n                            if (tx.maxFeePerGas == null) {\n                                tx.maxFeePerGas = feeData.maxFeePerGas;\n                            }\n                            if (tx.maxPriorityFeePerGas == null) {\n                                tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                            }\n                        }\n                    }\n                    else if (feeData.gasPrice != null) {\n                        // Network doesn't support EIP-1559...\n                        // ...but they are trying to use EIP-1559 properties\n                        if (hasEip1559) {\n                            logger$f.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                                operation: \"populateTransaction\"\n                            });\n                        }\n                        // Populate missing fee data\n                        if (tx.gasPrice == null) {\n                            tx.gasPrice = feeData.gasPrice;\n                        }\n                        // Explicitly set untyped transaction to legacy\n                        tx.type = 0;\n                    }\n                    else {\n                        // getFeeData has failed us.\n                        logger$f.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"signer.getFeeData\"\n                        });\n                    }\n                }\n                else if (tx.type === 2) {\n                    // Explicitly using EIP-1559\n                    // Populate missing fee data\n                    if (tx.maxFeePerGas == null) {\n                        tx.maxFeePerGas = feeData.maxFeePerGas;\n                    }\n                    if (tx.maxPriorityFeePerGas == null) {\n                        tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                    }\n                }\n            }\n            if (tx.nonce == null) {\n                tx.nonce = this.getTransactionCount(\"pending\");\n            }\n            if (tx.gasLimit == null) {\n                tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                    if (forwardErrors.indexOf(error.code) >= 0) {\n                        throw error;\n                    }\n                    return logger$f.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                        error: error,\n                        tx: tx\n                    });\n                });\n            }\n            if (tx.chainId == null) {\n                tx.chainId = this.getChainId();\n            }\n            else {\n                tx.chainId = Promise.all([\n                    Promise.resolve(tx.chainId),\n                    this.getChainId()\n                ]).then((results) => {\n                    if (results[1] !== 0 && results[0] !== results[1]) {\n                        logger$f.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                    }\n                    return results[0];\n                });\n            }\n            return yield resolveProperties(tx);\n        });\n    }\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n    _checkProvider(operation) {\n        if (!this.provider) {\n            logger$f.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: (operation || \"_checkProvider\")\n            });\n        }\n    }\n    static isSigner(value) {\n        return !!(value && value._isSigner);\n    }\n}\nclass VoidSigner extends Signer {\n    constructor(address, provider) {\n        logger$f.checkNew(new.target, VoidSigner);\n        super();\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n    getAddress() {\n        return Promise.resolve(this.address);\n    }\n    _fail(message, operation) {\n        return Promise.resolve().then(() => {\n            logger$f.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    }\n    signMessage(message) {\n        return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n    signTransaction(transaction) {\n        return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n    _signTypedData(domain, types, value) {\n        return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n    }\n    connect(provider) {\n        return new VoidSigner(this.address, provider);\n    }\n}\n//# sourceMappingURL=index.js.map\n\nvar minimalisticAssert = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n\nvar inherits_browser = createCommonjsModule(function (module) {\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n      var TempCtor = function () {};\n      TempCtor.prototype = superCtor.prototype;\n      ctor.prototype = new TempCtor();\n      ctor.prototype.constructor = ctor;\n    }\n  };\n}\n});\n\nvar inherits_1 = inherits_browser;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nvar toArray_1 = toArray;\n\nfunction toHex$1(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nvar toHex_1 = toHex$1;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nvar htonl_1 = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nvar toHex32_1 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nvar zero2_1 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nvar zero8_1 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  minimalisticAssert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nvar join32_1 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nvar split32_1 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nvar rotr32_1 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nvar rotl32_1 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nvar sum32_1 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nvar sum32_3_1 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nvar sum32_4_1 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nvar sum32_5_1 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nvar sum64_1 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nvar sum64_hi_1 = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nvar sum64_lo_1 = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nvar sum64_4_hi_1 = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nvar sum64_4_lo_1 = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nvar sum64_5_hi_1 = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nvar sum64_5_lo_1 = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nvar rotr64_hi_1 = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nvar rotr64_lo_1 = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nvar shr64_hi_1 = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nvar shr64_lo_1 = shr64_lo;\n\nvar utils = {\n\tinherits: inherits_1,\n\ttoArray: toArray_1,\n\ttoHex: toHex_1,\n\thtonl: htonl_1,\n\ttoHex32: toHex32_1,\n\tzero2: zero2_1,\n\tzero8: zero8_1,\n\tjoin32: join32_1,\n\tsplit32: split32_1,\n\trotr32: rotr32_1,\n\trotl32: rotl32_1,\n\tsum32: sum32_1,\n\tsum32_3: sum32_3_1,\n\tsum32_4: sum32_4_1,\n\tsum32_5: sum32_5_1,\n\tsum64: sum64_1,\n\tsum64_hi: sum64_hi_1,\n\tsum64_lo: sum64_lo_1,\n\tsum64_4_hi: sum64_4_hi_1,\n\tsum64_4_lo: sum64_4_lo_1,\n\tsum64_5_hi: sum64_5_hi_1,\n\tsum64_5_lo: sum64_5_lo_1,\n\trotr64_hi: rotr64_hi_1,\n\trotr64_lo: rotr64_lo_1,\n\tshr64_hi: shr64_hi_1,\n\tshr64_lo: shr64_lo_1\n};\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nvar BlockHash_1 = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  minimalisticAssert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n\nvar common = {\n\tBlockHash: BlockHash_1\n};\n\nvar rotr32$1 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nvar ft_1_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nvar ch32_1 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nvar maj32_1 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nvar p32_1 = p32;\n\nfunction s0_256(x) {\n  return rotr32$1(x, 2) ^ rotr32$1(x, 13) ^ rotr32$1(x, 22);\n}\nvar s0_256_1 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32$1(x, 6) ^ rotr32$1(x, 11) ^ rotr32$1(x, 25);\n}\nvar s1_256_1 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32$1(x, 7) ^ rotr32$1(x, 18) ^ (x >>> 3);\n}\nvar g0_256_1 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32$1(x, 17) ^ rotr32$1(x, 19) ^ (x >>> 10);\n}\nvar g1_256_1 = g1_256;\n\nvar common$1 = {\n\tft_1: ft_1_1,\n\tch32: ch32_1,\n\tmaj32: maj32_1,\n\tp32: p32_1,\n\ts0_256: s0_256_1,\n\ts1_256: s1_256_1,\n\tg0_256: g0_256_1,\n\tg1_256: g1_256_1\n};\n\nvar rotl32$1 = utils.rotl32;\nvar sum32$1 = utils.sum32;\nvar sum32_5$1 = utils.sum32_5;\nvar ft_1$1 = common$1.ft_1;\nvar BlockHash$1 = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash$1.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash$1);\nvar _1 = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32$1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5$1(rotl32$1(a, 5), ft_1$1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32$1(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32$1(this.h[0], a);\n  this.h[1] = sum32$1(this.h[1], b);\n  this.h[2] = sum32$1(this.h[2], c);\n  this.h[3] = sum32$1(this.h[3], d);\n  this.h[4] = sum32$1(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nvar sum32$2 = utils.sum32;\nvar sum32_4$1 = utils.sum32_4;\nvar sum32_5$2 = utils.sum32_5;\nvar ch32$1 = common$1.ch32;\nvar maj32$1 = common$1.maj32;\nvar s0_256$1 = common$1.s0_256;\nvar s1_256$1 = common$1.s1_256;\nvar g0_256$1 = common$1.g0_256;\nvar g1_256$1 = common$1.g1_256;\n\nvar BlockHash$2 = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash$2.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash$2);\nvar _256 = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4$1(g1_256$1(W[i - 2]), W[i - 7], g0_256$1(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  minimalisticAssert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5$2(h, s1_256$1(e), ch32$1(e, f, g), this.k[i], W[i]);\n    var T2 = sum32$2(s0_256$1(a), maj32$1(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32$2(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32$2(T1, T2);\n  }\n\n  this.h[0] = sum32$2(this.h[0], a);\n  this.h[1] = sum32$2(this.h[1], b);\n  this.h[2] = sum32$2(this.h[2], c);\n  this.h[3] = sum32$2(this.h[3], d);\n  this.h[4] = sum32$2(this.h[4], e);\n  this.h[5] = sum32$2(this.h[5], f);\n  this.h[6] = sum32$2(this.h[6], g);\n  this.h[7] = sum32$2(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  _256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, _256);\nvar _224 = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\nvar rotr64_hi$1 = utils.rotr64_hi;\nvar rotr64_lo$1 = utils.rotr64_lo;\nvar shr64_hi$1 = utils.shr64_hi;\nvar shr64_lo$1 = utils.shr64_lo;\nvar sum64$1 = utils.sum64;\nvar sum64_hi$1 = utils.sum64_hi;\nvar sum64_lo$1 = utils.sum64_lo;\nvar sum64_4_hi$1 = utils.sum64_4_hi;\nvar sum64_4_lo$1 = utils.sum64_4_lo;\nvar sum64_5_hi$1 = utils.sum64_5_hi;\nvar sum64_5_lo$1 = utils.sum64_5_lo;\n\nvar BlockHash$3 = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash$3.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash$3);\nvar _512 = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi$1(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo$1(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  minimalisticAssert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi$1(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo$1(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi$1(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo$1(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi$1(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo$1(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi$1(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo$1(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64$1(this.h, 0, ah, al);\n  sum64$1(this.h, 2, bh, bl);\n  sum64$1(this.h, 4, ch, cl);\n  sum64$1(this.h, 6, dh, dl);\n  sum64$1(this.h, 8, eh, el);\n  sum64$1(this.h, 10, fh, fl);\n  sum64$1(this.h, 12, gh, gl);\n  sum64$1(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi$1(xh, xl, 28);\n  var c1_hi = rotr64_hi$1(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi$1(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo$1(xh, xl, 28);\n  var c1_lo = rotr64_lo$1(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo$1(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi$1(xh, xl, 14);\n  var c1_hi = rotr64_hi$1(xh, xl, 18);\n  var c2_hi = rotr64_hi$1(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo$1(xh, xl, 14);\n  var c1_lo = rotr64_lo$1(xh, xl, 18);\n  var c2_lo = rotr64_lo$1(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi$1(xh, xl, 1);\n  var c1_hi = rotr64_hi$1(xh, xl, 8);\n  var c2_hi = shr64_hi$1(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo$1(xh, xl, 1);\n  var c1_lo = rotr64_lo$1(xh, xl, 8);\n  var c2_lo = shr64_lo$1(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi$1(xh, xl, 19);\n  var c1_hi = rotr64_hi$1(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi$1(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo$1(xh, xl, 19);\n  var c1_lo = rotr64_lo$1(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo$1(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  _512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, _512);\nvar _384 = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n\nvar sha1 = _1;\nvar sha224 = _224;\nvar sha256 = _256;\nvar sha384 = _384;\nvar sha512 = _512;\n\nvar sha = {\n\tsha1: sha1,\n\tsha224: sha224,\n\tsha256: sha256,\n\tsha384: sha384,\n\tsha512: sha512\n};\n\nvar rotl32$2 = utils.rotl32;\nvar sum32$3 = utils.sum32;\nvar sum32_3$1 = utils.sum32_3;\nvar sum32_4$2 = utils.sum32_4;\nvar BlockHash$4 = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash$4.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash$4);\nvar ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32$3(\n      rotl32$2(\n        sum32_4$2(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32$2(C, 10);\n    C = B;\n    B = T;\n    T = sum32$3(\n      rotl32$2(\n        sum32_4$2(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32$2(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3$1(this.h[1], C, Dh);\n  this.h[1] = sum32_3$1(this.h[2], D, Eh);\n  this.h[2] = sum32_3$1(this.h[3], E, Ah);\n  this.h[3] = sum32_3$1(this.h[4], A, Bh);\n  this.h[4] = sum32_3$1(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n\nvar ripemd = {\n\tripemd160: ripemd160\n};\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nvar hmac = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  minimalisticAssert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n\nvar hash_1 = createCommonjsModule(function (module, exports) {\nvar hash = exports;\n\nhash.utils = utils;\nhash.common = common;\nhash.sha = sha;\nhash.ripemd = ripemd;\nhash.hmac = hmac;\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n});\n\nfunction createCommonjsModule$1(fn, basedir, module) {\n\treturn module = {\n\t\tpath: basedir,\n\t\texports: {},\n\t\trequire: function (path, base) {\n\t\t\treturn commonjsRequire();\n\t\t}\n\t}, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar minimalisticAssert$1 = assert$1;\n\nfunction assert$1(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert$1.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n\nvar utils_1 = createCommonjsModule$1(function (module, exports) {\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n});\n\nvar utils_1$1 = createCommonjsModule$1(function (module, exports) {\n\nvar utils = exports;\n\n\n\n\nutils.assert = minimalisticAssert$1;\nutils.toArray = utils_1.toArray;\nutils.zero2 = utils_1.zero2;\nutils.toHex = utils_1.toHex;\nutils.encode = utils_1.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new bn(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n});\n\n\n\nvar getNAF = utils_1$1.getNAF;\nvar getJSF = utils_1$1.getJSF;\nvar assert$1$1 = utils_1$1.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new bn(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? bn.red(conf.prime) : bn.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new bn(0).toRed(this.red);\n  this.one = new bn(1).toRed(this.red);\n  this.two = new bn(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new bn(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nvar base = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert$1$1(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert$1$1(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils_1$1.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert$1$1(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert$1$1(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils_1$1.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n\nvar inherits_browser$1 = createCommonjsModule$1(function (module) {\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n      var TempCtor = function () {};\n      TempCtor.prototype = superCtor.prototype;\n      ctor.prototype = new TempCtor();\n      ctor.prototype.constructor = ctor;\n    }\n  };\n}\n});\n\n\n\n\n\n\nvar assert$2 = utils_1$1.assert;\n\nfunction ShortCurve(conf) {\n  base.call(this, 'short', conf);\n\n  this.a = new bn(conf.a, 16).toRed(this.red);\n  this.b = new bn(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits_browser$1(ShortCurve, base);\nvar short_1 = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new bn(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new bn(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert$2(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new bn(vec.a, 16),\n        b: new bn(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : bn.mont(num);\n  var tinv = new bn(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new bn(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new bn(1);\n  var y1 = new bn(0);\n  var x2 = new bn(0);\n  var y2 = new bn(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new bn(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits_browser$1(Point, base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new bn(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new bn(0);\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16);\n    this.z = new bn(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits_browser$1(JPoint, base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new bn(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nvar curve_1 = createCommonjsModule$1(function (module, exports) {\n\nvar curve = exports;\n\ncurve.base = base;\ncurve.short = short_1;\ncurve.mont = /*RicMoo:ethers:require(./mont)*/(null);\ncurve.edwards = /*RicMoo:ethers:require(./edwards)*/(null);\n});\n\nvar curves_1 = createCommonjsModule$1(function (module, exports) {\n\nvar curves = exports;\n\n\n\n\n\nvar assert = utils_1$1.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve_1.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve_1.edwards(options);\n  else\n    this.curve = new curve_1.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash_1.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash_1.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash_1.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash_1.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash_1.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash_1.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash_1.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = /*RicMoo:ethers:require(./precomputed/secp256k1)*/(null).crash();\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash_1.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n});\n\n\n\n\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils_1.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils_1.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils_1.toArray(options.pers, options.persEnc || 'hex');\n  minimalisticAssert$1(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nvar hmacDrbg = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash_1.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils_1.toArray(entropy, entropyEnc);\n  add = utils_1.toArray(add, addEnc);\n\n  minimalisticAssert$1(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils_1.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils_1.encode(res, enc);\n};\n\n\n\nvar assert$3 = utils_1$1.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nvar key = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new bn(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert$3(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert$3(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert$3(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n\n\n\n\nvar assert$4 = utils_1$1.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert$4(options.r && options.s, 'Signature without r or s');\n  this.r = new bn(options.r, 16);\n  this.s = new bn(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nvar signature = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils_1$1.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new bn(r);\n  this.s = new bn(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils_1$1.encode(res, enc);\n};\n\n\n\n\n\nvar rand = /*RicMoo:ethers:require(brorand)*/(function() { throw new Error('unsupported'); });\nvar assert$5 = utils_1$1.assert;\n\n\n\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert$5(Object.prototype.hasOwnProperty.call(curves_1, options),\n      'Unknown curve ' + options);\n\n    options = curves_1[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves_1.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nvar ec = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new key(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return key.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return key.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new hmacDrbg({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new bn(2));\n  for (;;) {\n    var priv = new bn(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new bn(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new hmacDrbg({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new bn(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new bn(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature$1, key, enc) {\n  msg = this._truncateToN(new bn(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature$1 = new signature(signature$1, 'hex');\n\n  // Perform primitive values validation\n  var r = signature$1.r;\n  var s = signature$1.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature$1, j, enc) {\n  assert$5((3 & j) === j, 'The recovery param is more than two bits');\n  signature$1 = new signature(signature$1, enc);\n\n  var n = this.n;\n  var e = new bn(msg);\n  var r = signature$1.r;\n  var s = signature$1.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature$1.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature$1, Q, enc) {\n  signature$1 = new signature(signature$1, enc);\n  if (signature$1.recoveryParam !== null)\n    return signature$1.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature$1, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n\nvar elliptic_1 = createCommonjsModule$1(function (module, exports) {\n\nvar elliptic = exports;\n\nelliptic.version = /*RicMoo:ethers*/{ version: \"6.5.4\" }.version;\nelliptic.utils = utils_1$1;\nelliptic.rand = /*RicMoo:ethers:require(brorand)*/(function() { throw new Error('unsupported'); });\nelliptic.curve = curve_1;\nelliptic.curves = curves_1;\n\n// Protocols\nelliptic.ec = ec;\nelliptic.eddsa = /*RicMoo:ethers:require(./elliptic/eddsa)*/(null);\n});\n\nvar EC$1 = elliptic_1.ec;\n//# sourceMappingURL=browser-elliptic.js.map\n\nconst version$b = \"signing-key/5.4.0\";\n//# sourceMappingURL=_version.js.map\n\nconst logger$g = new Logger(version$b);\nlet _curve = null;\nfunction getCurve() {\n    if (!_curve) {\n        _curve = new EC$1(\"secp256k1\");\n    }\n    return _curve;\n}\nclass SigningKey {\n    constructor(privateKey) {\n        defineReadOnly(this, \"curve\", \"secp256k1\");\n        defineReadOnly(this, \"privateKey\", hexlify(privateKey));\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        defineReadOnly(this, \"publicKey\", \"0x\" + keyPair.getPublic(false, \"hex\"));\n        defineReadOnly(this, \"compressedPublicKey\", \"0x\" + keyPair.getPublic(true, \"hex\"));\n        defineReadOnly(this, \"_isSigningKey\", true);\n    }\n    _addPoint(other) {\n        const p0 = getCurve().keyFromPublic(arrayify(this.publicKey));\n        const p1 = getCurve().keyFromPublic(arrayify(other));\n        return \"0x\" + p0.pub.add(p1.pub).encodeCompressed(\"hex\");\n    }\n    signDigest(digest) {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const digestBytes = arrayify(digest);\n        if (digestBytes.length !== 32) {\n            logger$g.throwArgumentError(\"bad digest length\", \"digest\", digest);\n        }\n        const signature = keyPair.sign(digestBytes, { canonical: true });\n        return splitSignature({\n            recoveryParam: signature.recoveryParam,\n            r: hexZeroPad(\"0x\" + signature.r.toString(16), 32),\n            s: hexZeroPad(\"0x\" + signature.s.toString(16), 32),\n        });\n    }\n    computeSharedSecret(otherKey) {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));\n        return hexZeroPad(\"0x\" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);\n    }\n    static isSigningKey(value) {\n        return !!(value && value._isSigningKey);\n    }\n}\nfunction recoverPublicKey(digest, signature) {\n    const sig = splitSignature(signature);\n    const rs = { r: arrayify(sig.r), s: arrayify(sig.s) };\n    return \"0x\" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode(\"hex\", false);\n}\nfunction computePublicKey(key, compressed) {\n    const bytes = arrayify(key);\n    if (bytes.length === 32) {\n        const signingKey = new SigningKey(bytes);\n        if (compressed) {\n            return \"0x\" + getCurve().keyFromPrivate(bytes).getPublic(true, \"hex\");\n        }\n        return signingKey.publicKey;\n    }\n    else if (bytes.length === 33) {\n        if (compressed) {\n            return hexlify(bytes);\n        }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(false, \"hex\");\n    }\n    else if (bytes.length === 65) {\n        if (!compressed) {\n            return hexlify(bytes);\n        }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(true, \"hex\");\n    }\n    return logger$g.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\n//# sourceMappingURL=index.js.map\n\nconst version$c = \"transactions/5.4.0\";\n//# sourceMappingURL=_version.js.map\n\nconst logger$h = new Logger(version$c);\nvar TransactionTypes;\n(function (TransactionTypes) {\n    TransactionTypes[TransactionTypes[\"legacy\"] = 0] = \"legacy\";\n    TransactionTypes[TransactionTypes[\"eip2930\"] = 1] = \"eip2930\";\n    TransactionTypes[TransactionTypes[\"eip1559\"] = 2] = \"eip1559\";\n})(TransactionTypes || (TransactionTypes = {}));\n///////////////////////////////\nfunction handleAddress(value) {\n    if (value === \"0x\") {\n        return null;\n    }\n    return getAddress(value);\n}\nfunction handleNumber(value) {\n    if (value === \"0x\") {\n        return Zero$1;\n    }\n    return BigNumber.from(value);\n}\n// Legacy Transaction Fields\nconst transactionFields = [\n    { name: \"nonce\", maxLength: 32, numeric: true },\n    { name: \"gasPrice\", maxLength: 32, numeric: true },\n    { name: \"gasLimit\", maxLength: 32, numeric: true },\n    { name: \"to\", length: 20 },\n    { name: \"value\", maxLength: 32, numeric: true },\n    { name: \"data\" },\n];\nconst allowedTransactionKeys$1 = {\n    chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, type: true, value: true\n};\nfunction computeAddress(key) {\n    const publicKey = computePublicKey(key);\n    return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));\n}\nfunction recoverAddress(digest, signature) {\n    return computeAddress(recoverPublicKey(arrayify(digest), signature));\n}\nfunction formatNumber(value, name) {\n    const result = stripZeros(BigNumber.from(value).toHexString());\n    if (result.length > 32) {\n        logger$h.throwArgumentError(\"invalid length for \" + name, (\"transaction:\" + name), value);\n    }\n    return result;\n}\nfunction accessSetify(addr, storageKeys) {\n    return {\n        address: getAddress(addr),\n        storageKeys: (storageKeys || []).map((storageKey, index) => {\n            if (hexDataLength(storageKey) !== 32) {\n                logger$h.throwArgumentError(\"invalid access list storageKey\", `accessList[${addr}:${index}]`, storageKey);\n            }\n            return storageKey.toLowerCase();\n        })\n    };\n}\nfunction accessListify(value) {\n    if (Array.isArray(value)) {\n        return value.map((set, index) => {\n            if (Array.isArray(set)) {\n                if (set.length > 2) {\n                    logger$h.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\", `value[${index}]`, set);\n                }\n                return accessSetify(set[0], set[1]);\n            }\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n    const result = Object.keys(value).map((addr) => {\n        const storageKeys = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, {});\n        return accessSetify(addr, Object.keys(storageKeys).sort());\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\nfunction formatAccessList(value) {\n    return accessListify(value).map((set) => [set.address, set.storageKeys]);\n}\nfunction _serializeEip1559(transaction, signature) {\n    // If there is an explicit gasPrice, make sure it matches the\n    // EIP-1559 fees; otherwise they may not understand what they\n    // think they are setting in terms of fee.\n    if (transaction.gasPrice != null) {\n        const gasPrice = BigNumber.from(transaction.gasPrice);\n        const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);\n        if (!gasPrice.eq(maxFeePerGas)) {\n            logger$h.throwArgumentError(\"mismatch EIP-1559 gasPrice != maxFeePerGas\", \"tx\", {\n                gasPrice, maxFeePerGas\n            });\n        }\n    }\n    const fields = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(transaction.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to) : \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n    return hexConcat([\"0x02\", encode(fields)]);\n}\nfunction _serializeEip2930(transaction, signature) {\n    const fields = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.gasPrice || 0, \"gasPrice\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to) : \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n    return hexConcat([\"0x01\", encode(fields)]);\n}\n// Legacy Transactions and EIP-155\nfunction _serialize(transaction, signature) {\n    checkProperties(transaction, allowedTransactionKeys$1);\n    const raw = [];\n    transactionFields.forEach(function (fieldInfo) {\n        let value = transaction[fieldInfo.name] || ([]);\n        const options = {};\n        if (fieldInfo.numeric) {\n            options.hexPad = \"left\";\n        }\n        value = arrayify(hexlify(value, options));\n        // Fixed-width field\n        if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n            logger$h.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value);\n        }\n        // Variable-width (with a maximum)\n        if (fieldInfo.maxLength) {\n            value = stripZeros(value);\n            if (value.length > fieldInfo.maxLength) {\n                logger$h.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value);\n            }\n        }\n        raw.push(hexlify(value));\n    });\n    let chainId = 0;\n    if (transaction.chainId != null) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = transaction.chainId;\n        if (typeof (chainId) !== \"number\") {\n            logger$h.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n        }\n    }\n    else if (signature && !isBytesLike(signature) && signature.v > 28) {\n        // No chainId provided, but the signature is signing with EIP-155; derive chainId\n        chainId = Math.floor((signature.v - 35) / 2);\n    }\n    // We have an EIP-155 transaction (chainId was specified and non-zero)\n    if (chainId !== 0) {\n        raw.push(hexlify(chainId)); // @TODO: hexValue?\n        raw.push(\"0x\");\n        raw.push(\"0x\");\n    }\n    // Requesting an unsigned transation\n    if (!signature) {\n        return encode(raw);\n    }\n    // The splitSignature will ensure the transaction has a recoveryParam in the\n    // case that the signTransaction function only adds a v.\n    const sig = splitSignature(signature);\n    // We pushed a chainId and null r, s on for hashing only; remove those\n    let v = 27 + sig.recoveryParam;\n    if (chainId !== 0) {\n        raw.pop();\n        raw.pop();\n        raw.pop();\n        v += chainId * 2 + 8;\n        // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\n        if (sig.v > 28 && sig.v !== v) {\n            logger$h.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n        }\n    }\n    else if (sig.v !== v) {\n        logger$h.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n    raw.push(hexlify(v));\n    raw.push(stripZeros(arrayify(sig.r)));\n    raw.push(stripZeros(arrayify(sig.s)));\n    return encode(raw);\n}\nfunction serialize(transaction, signature) {\n    // Legacy and EIP-155 Transactions\n    if (transaction.type == null || transaction.type === 0) {\n        if (transaction.accessList != null) {\n            logger$h.throwArgumentError(\"untyped transactions do not support accessList; include type: 1\", \"transaction\", transaction);\n        }\n        return _serialize(transaction, signature);\n    }\n    // Typed Transactions (EIP-2718)\n    switch (transaction.type) {\n        case 1:\n            return _serializeEip2930(transaction, signature);\n        case 2:\n            return _serializeEip1559(transaction, signature);\n    }\n    return logger$h.throwError(`unsupported transaction type: ${transaction.type}`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"serializeTransaction\",\n        transactionType: transaction.type\n    });\n}\nfunction _parseEipSignature(tx, fields, serialize) {\n    try {\n        const recid = handleNumber(fields[0]).toNumber();\n        if (recid !== 0 && recid !== 1) {\n            throw new Error(\"bad recid\");\n        }\n        tx.v = recid;\n    }\n    catch (error) {\n        logger$h.throwArgumentError(\"invalid v for transaction type: 1\", \"v\", fields[0]);\n    }\n    tx.r = hexZeroPad(fields[1], 32);\n    tx.s = hexZeroPad(fields[2], 32);\n    try {\n        const digest = keccak256(serialize(tx));\n        tx.from = recoverAddress(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });\n    }\n    catch (error) {\n        console.log(error);\n    }\n}\nfunction _parseEip1559(payload) {\n    const transaction = decode(payload.slice(1));\n    if (transaction.length !== 9 && transaction.length !== 12) {\n        logger$h.throwArgumentError(\"invalid component count for transaction type: 2\", \"payload\", hexlify(payload));\n    }\n    const maxPriorityFeePerGas = handleNumber(transaction[2]);\n    const maxFeePerGas = handleNumber(transaction[3]);\n    const tx = {\n        type: 2,\n        chainId: handleNumber(transaction[0]).toNumber(),\n        nonce: handleNumber(transaction[1]).toNumber(),\n        maxPriorityFeePerGas: maxPriorityFeePerGas,\n        maxFeePerGas: maxFeePerGas,\n        gasPrice: null,\n        gasLimit: handleNumber(transaction[4]),\n        to: handleAddress(transaction[5]),\n        value: handleNumber(transaction[6]),\n        data: transaction[7],\n        accessList: accessListify(transaction[8]),\n    };\n    // Unsigned EIP-1559 Transaction\n    if (transaction.length === 9) {\n        return tx;\n    }\n    tx.hash = keccak256(payload);\n    _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);\n    return tx;\n}\nfunction _parseEip2930(payload) {\n    const transaction = decode(payload.slice(1));\n    if (transaction.length !== 8 && transaction.length !== 11) {\n        logger$h.throwArgumentError(\"invalid component count for transaction type: 1\", \"payload\", hexlify(payload));\n    }\n    const tx = {\n        type: 1,\n        chainId: handleNumber(transaction[0]).toNumber(),\n        nonce: handleNumber(transaction[1]).toNumber(),\n        gasPrice: handleNumber(transaction[2]),\n        gasLimit: handleNumber(transaction[3]),\n        to: handleAddress(transaction[4]),\n        value: handleNumber(transaction[5]),\n        data: transaction[6],\n        accessList: accessListify(transaction[7])\n    };\n    // Unsigned EIP-2930 Transaction\n    if (transaction.length === 8) {\n        return tx;\n    }\n    tx.hash = keccak256(payload);\n    _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);\n    return tx;\n}\n// Legacy Transactions and EIP-155\nfunction _parse(rawTransaction) {\n    const transaction = decode(rawTransaction);\n    if (transaction.length !== 9 && transaction.length !== 6) {\n        logger$h.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n    }\n    const tx = {\n        nonce: handleNumber(transaction[0]).toNumber(),\n        gasPrice: handleNumber(transaction[1]),\n        gasLimit: handleNumber(transaction[2]),\n        to: handleAddress(transaction[3]),\n        value: handleNumber(transaction[4]),\n        data: transaction[5],\n        chainId: 0\n    };\n    // Legacy unsigned transaction\n    if (transaction.length === 6) {\n        return tx;\n    }\n    try {\n        tx.v = BigNumber.from(transaction[6]).toNumber();\n    }\n    catch (error) {\n        console.log(error);\n        return tx;\n    }\n    tx.r = hexZeroPad(transaction[7], 32);\n    tx.s = hexZeroPad(transaction[8], 32);\n    if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n        // EIP-155 unsigned transaction\n        tx.chainId = tx.v;\n        tx.v = 0;\n    }\n    else {\n        // Signed Tranasaction\n        tx.chainId = Math.floor((tx.v - 35) / 2);\n        if (tx.chainId < 0) {\n            tx.chainId = 0;\n        }\n        let recoveryParam = tx.v - 27;\n        const raw = transaction.slice(0, 6);\n        if (tx.chainId !== 0) {\n            raw.push(hexlify(tx.chainId));\n            raw.push(\"0x\");\n            raw.push(\"0x\");\n            recoveryParam -= tx.chainId * 2 + 8;\n        }\n        const digest = keccak256(encode(raw));\n        try {\n            tx.from = recoverAddress(digest, { r: hexlify(tx.r), s: hexlify(tx.s), recoveryParam: recoveryParam });\n        }\n        catch (error) {\n            console.log(error);\n        }\n        tx.hash = keccak256(rawTransaction);\n    }\n    tx.type = null;\n    return tx;\n}\nfunction parse(rawTransaction) {\n    const payload = arrayify(rawTransaction);\n    // Legacy and EIP-155 Transactions\n    if (payload[0] > 0x7f) {\n        return _parse(payload);\n    }\n    // Typed Transaction (EIP-2718)\n    switch (payload[0]) {\n        case 1:\n            return _parseEip2930(payload);\n        case 2:\n            return _parseEip1559(payload);\n    }\n    return logger$h.throwError(`unsupported transaction type: ${payload[0]}`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"parseTransaction\",\n        transactionType: payload[0]\n    });\n}\n//# sourceMappingURL=index.js.map\n\nconst version$d = \"contracts/5.4.1\";\n//# sourceMappingURL=_version.js.map\n\nvar __awaiter$4 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst logger$i = new Logger(version$d);\n///////////////////////////////\nconst allowedTransactionKeys$2 = {\n    chainId: true, data: true, from: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n};\nfunction resolveName(resolver, nameOrPromise) {\n    return __awaiter$4(this, void 0, void 0, function* () {\n        const name = yield nameOrPromise;\n        // If it is already an address, just use it (after adding checksum)\n        try {\n            return getAddress(name);\n        }\n        catch (error) { }\n        if (!resolver) {\n            logger$i.throwError(\"a provider or signer is needed to resolve ENS names\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"resolveName\"\n            });\n        }\n        const address = yield resolver.resolveName(name);\n        if (address == null) {\n            logger$i.throwArgumentError(\"resolver or addr is not configured for ENS name\", \"name\", name);\n        }\n        return address;\n    });\n}\n// Recursively replaces ENS names with promises to resolve the name and resolves all properties\nfunction resolveAddresses(resolver, value, paramType) {\n    return __awaiter$4(this, void 0, void 0, function* () {\n        if (Array.isArray(paramType)) {\n            return yield Promise.all(paramType.map((paramType, index) => {\n                return resolveAddresses(resolver, ((Array.isArray(value)) ? value[index] : value[paramType.name]), paramType);\n            }));\n        }\n        if (paramType.type === \"address\") {\n            return yield resolveName(resolver, value);\n        }\n        if (paramType.type === \"tuple\") {\n            return yield resolveAddresses(resolver, value, paramType.components);\n        }\n        if (paramType.baseType === \"array\") {\n            if (!Array.isArray(value)) {\n                return Promise.reject(new Error(\"invalid value for array\"));\n            }\n            return yield Promise.all(value.map((v) => resolveAddresses(resolver, v, paramType.arrayChildren)));\n        }\n        return value;\n    });\n}\nfunction populateTransaction(contract, fragment, args) {\n    return __awaiter$4(this, void 0, void 0, function* () {\n        // If an extra argument is given, it is overrides\n        let overrides = {};\n        if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n            overrides = shallowCopy(args.pop());\n        }\n        // Make sure the parameter count matches\n        logger$i.checkArgumentCount(args.length, fragment.inputs.length, \"passed to contract\");\n        // Populate \"from\" override (allow promises)\n        if (contract.signer) {\n            if (overrides.from) {\n                // Contracts with a Signer are from the Signer's frame-of-reference;\n                // but we allow overriding \"from\" if it matches the signer\n                overrides.from = resolveProperties({\n                    override: resolveName(contract.signer, overrides.from),\n                    signer: contract.signer.getAddress()\n                }).then((check) => __awaiter$4(this, void 0, void 0, function* () {\n                    if (getAddress(check.signer) !== check.override) {\n                        logger$i.throwError(\"Contract with a Signer cannot override from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"overrides.from\"\n                        });\n                    }\n                    return check.override;\n                }));\n            }\n            else {\n                overrides.from = contract.signer.getAddress();\n            }\n        }\n        else if (overrides.from) {\n            overrides.from = resolveName(contract.provider, overrides.from);\n            //} else {\n            // Contracts without a signer can override \"from\", and if\n            // unspecified the zero address is used\n            //overrides.from = AddressZero;\n        }\n        // Wait for all dependencies to be resolved (prefer the signer over the provider)\n        const resolved = yield resolveProperties({\n            args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),\n            address: contract.resolvedAddress,\n            overrides: (resolveProperties(overrides) || {})\n        });\n        // The ABI coded transaction\n        const data = contract.interface.encodeFunctionData(fragment, resolved.args);\n        const tx = {\n            data: data,\n            to: resolved.address\n        };\n        // Resolved Overrides\n        const ro = resolved.overrides;\n        // Populate simple overrides\n        if (ro.nonce != null) {\n            tx.nonce = BigNumber.from(ro.nonce).toNumber();\n        }\n        if (ro.gasLimit != null) {\n            tx.gasLimit = BigNumber.from(ro.gasLimit);\n        }\n        if (ro.gasPrice != null) {\n            tx.gasPrice = BigNumber.from(ro.gasPrice);\n        }\n        if (ro.maxFeePerGas != null) {\n            tx.maxFeePerGas = BigNumber.from(ro.maxFeePerGas);\n        }\n        if (ro.maxPriorityFeePerGas != null) {\n            tx.maxPriorityFeePerGas = BigNumber.from(ro.maxPriorityFeePerGas);\n        }\n        if (ro.from != null) {\n            tx.from = ro.from;\n        }\n        if (ro.type != null) {\n            tx.type = ro.type;\n        }\n        if (ro.accessList != null) {\n            tx.accessList = accessListify(ro.accessList);\n        }\n        // If there was no \"gasLimit\" override, but the ABI specifies a default, use it\n        if (tx.gasLimit == null && fragment.gas != null) {\n            // Conmpute the intrinisic gas cost for this transaction\n            // @TODO: This is based on the yellow paper as of Petersburg; this is something\n            // we may wish to parameterize in v6 as part of the Network object. Since this\n            // is always a non-nil to address, we can ignore G_create, but may wish to add\n            // similar logic to the ContractFactory.\n            let intrinsic = 21000;\n            const bytes = arrayify(data);\n            for (let i = 0; i < bytes.length; i++) {\n                intrinsic += 4;\n                if (bytes[i]) {\n                    intrinsic += 64;\n                }\n            }\n            tx.gasLimit = BigNumber.from(fragment.gas).add(intrinsic);\n        }\n        // Populate \"value\" override\n        if (ro.value) {\n            const roValue = BigNumber.from(ro.value);\n            if (!roValue.isZero() && !fragment.payable) {\n                logger$i.throwError(\"non-payable method cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: overrides.value\n                });\n            }\n            tx.value = roValue;\n        }\n        // Remvoe the overrides\n        delete overrides.nonce;\n        delete overrides.gasLimit;\n        delete overrides.gasPrice;\n        delete overrides.from;\n        delete overrides.value;\n        delete overrides.type;\n        delete overrides.accessList;\n        delete overrides.maxFeePerGas;\n        delete overrides.maxPriorityFeePerGas;\n        // Make sure there are no stray overrides, which may indicate a\n        // typo or using an unsupported key.\n        const leftovers = Object.keys(overrides).filter((key) => (overrides[key] != null));\n        if (leftovers.length) {\n            logger$i.throwError(`cannot override ${leftovers.map((l) => JSON.stringify(l)).join(\",\")}`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"overrides\",\n                overrides: leftovers\n            });\n        }\n        return tx;\n    });\n}\nfunction buildPopulate(contract, fragment) {\n    return function (...args) {\n        return populateTransaction(contract, fragment, args);\n    };\n}\nfunction buildEstimate(contract, fragment) {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return function (...args) {\n        return __awaiter$4(this, void 0, void 0, function* () {\n            if (!signerOrProvider) {\n                logger$i.throwError(\"estimate require a provider or signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"estimateGas\"\n                });\n            }\n            const tx = yield populateTransaction(contract, fragment, args);\n            return yield signerOrProvider.estimateGas(tx);\n        });\n    };\n}\nfunction buildCall(contract, fragment, collapseSimple) {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return function (...args) {\n        return __awaiter$4(this, void 0, void 0, function* () {\n            // Extract the \"blockTag\" override if present\n            let blockTag = undefined;\n            if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n                const overrides = shallowCopy(args.pop());\n                if (overrides.blockTag != null) {\n                    blockTag = yield overrides.blockTag;\n                }\n                delete overrides.blockTag;\n                args.push(overrides);\n            }\n            // If the contract was just deployed, wait until it is mined\n            if (contract.deployTransaction != null) {\n                yield contract._deployed(blockTag);\n            }\n            // Call a node and get the result\n            const tx = yield populateTransaction(contract, fragment, args);\n            const result = yield signerOrProvider.call(tx, blockTag);\n            try {\n                let value = contract.interface.decodeFunctionResult(fragment, result);\n                if (collapseSimple && fragment.outputs.length === 1) {\n                    value = value[0];\n                }\n                return value;\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    error.address = contract.address;\n                    error.args = args;\n                    error.transaction = tx;\n                }\n                throw error;\n            }\n        });\n    };\n}\nfunction buildSend(contract, fragment) {\n    return function (...args) {\n        return __awaiter$4(this, void 0, void 0, function* () {\n            if (!contract.signer) {\n                logger$i.throwError(\"sending a transaction requires a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"sendTransaction\"\n                });\n            }\n            // If the contract was just deployed, wait until it is minded\n            if (contract.deployTransaction != null) {\n                yield contract._deployed();\n            }\n            const txRequest = yield populateTransaction(contract, fragment, args);\n            const tx = yield contract.signer.sendTransaction(txRequest);\n            // Tweak the tw.wait so the receipt has extra properties\n            const wait = tx.wait.bind(tx);\n            tx.wait = (confirmations) => {\n                return wait(confirmations).then((receipt) => {\n                    receipt.events = receipt.logs.map((log) => {\n                        let event = deepCopy(log);\n                        let parsed = null;\n                        try {\n                            parsed = contract.interface.parseLog(log);\n                        }\n                        catch (e) { }\n                        // Successfully parsed the event log; include it\n                        if (parsed) {\n                            event.args = parsed.args;\n                            event.decode = (data, topics) => {\n                                return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);\n                            };\n                            event.event = parsed.name;\n                            event.eventSignature = parsed.signature;\n                        }\n                        // Useful operations\n                        event.removeListener = () => { return contract.provider; };\n                        event.getBlock = () => {\n                            return contract.provider.getBlock(receipt.blockHash);\n                        };\n                        event.getTransaction = () => {\n                            return contract.provider.getTransaction(receipt.transactionHash);\n                        };\n                        event.getTransactionReceipt = () => {\n                            return Promise.resolve(receipt);\n                        };\n                        return event;\n                    });\n                    return receipt;\n                });\n            };\n            return tx;\n        });\n    };\n}\nfunction buildDefault(contract, fragment, collapseSimple) {\n    if (fragment.constant) {\n        return buildCall(contract, fragment, collapseSimple);\n    }\n    return buildSend(contract, fragment);\n}\nfunction getEventTag(filter) {\n    if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n        return \"*\";\n    }\n    return (filter.address || \"*\") + \"@\" + (filter.topics ? filter.topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            return topic.join(\"|\");\n        }\n        return topic;\n    }).join(\":\") : \"\");\n}\nclass RunningEvent {\n    constructor(tag, filter) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"filter\", filter);\n        this._listeners = [];\n    }\n    addListener(listener, once) {\n        this._listeners.push({ listener: listener, once: once });\n    }\n    removeListener(listener) {\n        let done = false;\n        this._listeners = this._listeners.filter((item) => {\n            if (done || item.listener !== listener) {\n                return true;\n            }\n            done = true;\n            return false;\n        });\n    }\n    removeAllListeners() {\n        this._listeners = [];\n    }\n    listeners() {\n        return this._listeners.map((i) => i.listener);\n    }\n    listenerCount() {\n        return this._listeners.length;\n    }\n    run(args) {\n        const listenerCount = this.listenerCount();\n        this._listeners = this._listeners.filter((item) => {\n            const argsCopy = args.slice();\n            // Call the callback in the next event loop\n            setTimeout(() => {\n                item.listener.apply(this, argsCopy);\n            }, 0);\n            // Reschedule it if it not \"once\"\n            return !(item.once);\n        });\n        return listenerCount;\n    }\n    prepareEvent(event) {\n    }\n    // Returns the array that will be applied to an emit\n    getEmit(event) {\n        return [event];\n    }\n}\nclass ErrorRunningEvent extends RunningEvent {\n    constructor() {\n        super(\"error\", null);\n    }\n}\n// @TODO Fragment should inherit Wildcard? and just override getEmit?\n//       or have a common abstract super class, with enough constructor\n//       options to configure both.\n// A Fragment Event will populate all the properties that Wildcard\n// will, and additioanlly dereference the arguments when emitting\nclass FragmentRunningEvent extends RunningEvent {\n    constructor(address, contractInterface, fragment, topics) {\n        const filter = {\n            address: address\n        };\n        let topic = contractInterface.getEventTopic(fragment);\n        if (topics) {\n            if (topic !== topics[0]) {\n                logger$i.throwArgumentError(\"topic mismatch\", \"topics\", topics);\n            }\n            filter.topics = topics.slice();\n        }\n        else {\n            filter.topics = [topic];\n        }\n        super(getEventTag(filter), filter);\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n        defineReadOnly(this, \"fragment\", fragment);\n    }\n    prepareEvent(event) {\n        super.prepareEvent(event);\n        event.event = this.fragment.name;\n        event.eventSignature = this.fragment.format();\n        event.decode = (data, topics) => {\n            return this.interface.decodeEventLog(this.fragment, data, topics);\n        };\n        try {\n            event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);\n        }\n        catch (error) {\n            event.args = null;\n            event.decodeError = error;\n        }\n    }\n    getEmit(event) {\n        const errors = checkResultErrors(event.args);\n        if (errors.length) {\n            throw errors[0].error;\n        }\n        const args = (event.args || []).slice();\n        args.push(event);\n        return args;\n    }\n}\n// A Wildard Event will attempt to populate:\n//  - event            The name of the event name\n//  - eventSignature   The full signature of the event\n//  - decode           A function to decode data and topics\n//  - args             The decoded data and topics\nclass WildcardRunningEvent extends RunningEvent {\n    constructor(address, contractInterface) {\n        super(\"*\", { address: address });\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n    }\n    prepareEvent(event) {\n        super.prepareEvent(event);\n        try {\n            const parsed = this.interface.parseLog(event);\n            event.event = parsed.name;\n            event.eventSignature = parsed.signature;\n            event.decode = (data, topics) => {\n                return this.interface.decodeEventLog(parsed.eventFragment, data, topics);\n            };\n            event.args = parsed.args;\n        }\n        catch (error) {\n            // No matching event\n        }\n    }\n}\nclass BaseContract {\n    constructor(addressOrName, contractInterface, signerOrProvider) {\n        logger$i.checkNew(new.target, Contract);\n        // @TODO: Maybe still check the addressOrName looks like a valid address or name?\n        //address = getAddress(address);\n        defineReadOnly(this, \"interface\", getStatic((new.target), \"getInterface\")(contractInterface));\n        if (signerOrProvider == null) {\n            defineReadOnly(this, \"provider\", null);\n            defineReadOnly(this, \"signer\", null);\n        }\n        else if (Signer.isSigner(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider.provider || null);\n            defineReadOnly(this, \"signer\", signerOrProvider);\n        }\n        else if (Provider.isProvider(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider);\n            defineReadOnly(this, \"signer\", null);\n        }\n        else {\n            logger$i.throwArgumentError(\"invalid signer or provider\", \"signerOrProvider\", signerOrProvider);\n        }\n        defineReadOnly(this, \"callStatic\", {});\n        defineReadOnly(this, \"estimateGas\", {});\n        defineReadOnly(this, \"functions\", {});\n        defineReadOnly(this, \"populateTransaction\", {});\n        defineReadOnly(this, \"filters\", {});\n        {\n            const uniqueFilters = {};\n            Object.keys(this.interface.events).forEach((eventSignature) => {\n                const event = this.interface.events[eventSignature];\n                defineReadOnly(this.filters, eventSignature, (...args) => {\n                    return {\n                        address: this.address,\n                        topics: this.interface.encodeFilterTopics(event, args)\n                    };\n                });\n                if (!uniqueFilters[event.name]) {\n                    uniqueFilters[event.name] = [];\n                }\n                uniqueFilters[event.name].push(eventSignature);\n            });\n            Object.keys(uniqueFilters).forEach((name) => {\n                const filters = uniqueFilters[name];\n                if (filters.length === 1) {\n                    defineReadOnly(this.filters, name, this.filters[filters[0]]);\n                }\n                else {\n                    logger$i.warn(`Duplicate definition of ${name} (${filters.join(\", \")})`);\n                }\n            });\n        }\n        defineReadOnly(this, \"_runningEvents\", {});\n        defineReadOnly(this, \"_wrappedEmits\", {});\n        if (addressOrName == null) {\n            logger$i.throwArgumentError(\"invalid contract address or ENS name\", \"addressOrName\", addressOrName);\n        }\n        defineReadOnly(this, \"address\", addressOrName);\n        if (this.provider) {\n            defineReadOnly(this, \"resolvedAddress\", resolveName(this.provider, addressOrName));\n        }\n        else {\n            try {\n                defineReadOnly(this, \"resolvedAddress\", Promise.resolve(getAddress(addressOrName)));\n            }\n            catch (error) {\n                // Without a provider, we cannot use ENS names\n                logger$i.throwError(\"provider is required to use ENS name as contract address\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"new Contract\"\n                });\n            }\n        }\n        const uniqueNames = {};\n        const uniqueSignatures = {};\n        Object.keys(this.interface.functions).forEach((signature) => {\n            const fragment = this.interface.functions[signature];\n            // Check that the signature is unique; if not the ABI generation has\n            // not been cleaned or may be incorrectly generated\n            if (uniqueSignatures[signature]) {\n                logger$i.warn(`Duplicate ABI entry for ${JSON.stringify(signature)}`);\n                return;\n            }\n            uniqueSignatures[signature] = true;\n            // Track unique names; we only expose bare named functions if they\n            // are ambiguous\n            {\n                const name = fragment.name;\n                if (!uniqueNames[name]) {\n                    uniqueNames[name] = [];\n                }\n                uniqueNames[name].push(signature);\n            }\n            if (this[signature] == null) {\n                defineReadOnly(this, signature, buildDefault(this, fragment, true));\n            }\n            // We do not collapse simple calls on this bucket, which allows\n            // frameworks to safely use this without introspection as well as\n            // allows decoding error recovery.\n            if (this.functions[signature] == null) {\n                defineReadOnly(this.functions, signature, buildDefault(this, fragment, false));\n            }\n            if (this.callStatic[signature] == null) {\n                defineReadOnly(this.callStatic, signature, buildCall(this, fragment, true));\n            }\n            if (this.populateTransaction[signature] == null) {\n                defineReadOnly(this.populateTransaction, signature, buildPopulate(this, fragment));\n            }\n            if (this.estimateGas[signature] == null) {\n                defineReadOnly(this.estimateGas, signature, buildEstimate(this, fragment));\n            }\n        });\n        Object.keys(uniqueNames).forEach((name) => {\n            // Ambiguous names to not get attached as bare names\n            const signatures = uniqueNames[name];\n            if (signatures.length > 1) {\n                return;\n            }\n            const signature = signatures[0];\n            // If overwriting a member property that is null, swallow the error\n            try {\n                if (this[name] == null) {\n                    defineReadOnly(this, name, this[signature]);\n                }\n            }\n            catch (e) { }\n            if (this.functions[name] == null) {\n                defineReadOnly(this.functions, name, this.functions[signature]);\n            }\n            if (this.callStatic[name] == null) {\n                defineReadOnly(this.callStatic, name, this.callStatic[signature]);\n            }\n            if (this.populateTransaction[name] == null) {\n                defineReadOnly(this.populateTransaction, name, this.populateTransaction[signature]);\n            }\n            if (this.estimateGas[name] == null) {\n                defineReadOnly(this.estimateGas, name, this.estimateGas[signature]);\n            }\n        });\n    }\n    static getContractAddress(transaction) {\n        return getContractAddress(transaction);\n    }\n    static getInterface(contractInterface) {\n        if (Interface.isInterface(contractInterface)) {\n            return contractInterface;\n        }\n        return new Interface(contractInterface);\n    }\n    // @TODO: Allow timeout?\n    deployed() {\n        return this._deployed();\n    }\n    _deployed(blockTag) {\n        if (!this._deployedPromise) {\n            // If we were just deployed, we know the transaction we should occur in\n            if (this.deployTransaction) {\n                this._deployedPromise = this.deployTransaction.wait().then(() => {\n                    return this;\n                });\n            }\n            else {\n                // @TODO: Once we allow a timeout to be passed in, we will wait\n                // up to that many blocks for getCode\n                // Otherwise, poll for our code to be deployed\n                this._deployedPromise = this.provider.getCode(this.address, blockTag).then((code) => {\n                    if (code === \"0x\") {\n                        logger$i.throwError(\"contract not deployed\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            contractAddress: this.address,\n                            operation: \"getDeployed\"\n                        });\n                    }\n                    return this;\n                });\n            }\n        }\n        return this._deployedPromise;\n    }\n    // @TODO:\n    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>\n    // @TODO:\n    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>\n    fallback(overrides) {\n        if (!this.signer) {\n            logger$i.throwError(\"sending a transactions require a signer\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"sendTransaction(fallback)\" });\n        }\n        const tx = shallowCopy(overrides || {});\n        [\"from\", \"to\"].forEach(function (key) {\n            if (tx[key] == null) {\n                return;\n            }\n            logger$i.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        tx.to = this.resolvedAddress;\n        return this.deployed().then(() => {\n            return this.signer.sendTransaction(tx);\n        });\n    }\n    // Reconnect to a different signer or provider\n    connect(signerOrProvider) {\n        if (typeof (signerOrProvider) === \"string\") {\n            signerOrProvider = new VoidSigner(signerOrProvider, this.provider);\n        }\n        const contract = new (this.constructor)(this.address, this.interface, signerOrProvider);\n        if (this.deployTransaction) {\n            defineReadOnly(contract, \"deployTransaction\", this.deployTransaction);\n        }\n        return contract;\n    }\n    // Re-attach to a different on-chain instance of this contract\n    attach(addressOrName) {\n        return new (this.constructor)(addressOrName, this.interface, this.signer || this.provider);\n    }\n    static isIndexed(value) {\n        return Indexed.isIndexed(value);\n    }\n    _normalizeRunningEvent(runningEvent) {\n        // Already have an instance of this event running; we can re-use it\n        if (this._runningEvents[runningEvent.tag]) {\n            return this._runningEvents[runningEvent.tag];\n        }\n        return runningEvent;\n    }\n    _getRunningEvent(eventName) {\n        if (typeof (eventName) === \"string\") {\n            // Listen for \"error\" events (if your contract has an error event, include\n            // the full signature to bypass this special event keyword)\n            if (eventName === \"error\") {\n                return this._normalizeRunningEvent(new ErrorRunningEvent());\n            }\n            // Listen for any event that is registered\n            if (eventName === \"event\") {\n                return this._normalizeRunningEvent(new RunningEvent(\"event\", null));\n            }\n            // Listen for any event\n            if (eventName === \"*\") {\n                return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n            }\n            // Get the event Fragment (throws if ambiguous/unknown event)\n            const fragment = this.interface.getEvent(eventName);\n            return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));\n        }\n        // We have topics to filter by...\n        if (eventName.topics && eventName.topics.length > 0) {\n            // Is it a known topichash? (throws if no matching topichash)\n            try {\n                const topic = eventName.topics[0];\n                if (typeof (topic) !== \"string\") {\n                    throw new Error(\"invalid topic\"); // @TODO: May happen for anonymous events\n                }\n                const fragment = this.interface.getEvent(topic);\n                return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));\n            }\n            catch (error) { }\n            // Filter by the unknown topichash\n            const filter = {\n                address: this.address,\n                topics: eventName.topics\n            };\n            return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));\n        }\n        return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n    }\n    _checkRunningEvents(runningEvent) {\n        if (runningEvent.listenerCount() === 0) {\n            delete this._runningEvents[runningEvent.tag];\n            // If we have a poller for this, remove it\n            const emit = this._wrappedEmits[runningEvent.tag];\n            if (emit && runningEvent.filter) {\n                this.provider.off(runningEvent.filter, emit);\n                delete this._wrappedEmits[runningEvent.tag];\n            }\n        }\n    }\n    // Subclasses can override this to gracefully recover\n    // from parse errors if they wish\n    _wrapEvent(runningEvent, log, listener) {\n        const event = deepCopy(log);\n        event.removeListener = () => {\n            if (!listener) {\n                return;\n            }\n            runningEvent.removeListener(listener);\n            this._checkRunningEvents(runningEvent);\n        };\n        event.getBlock = () => { return this.provider.getBlock(log.blockHash); };\n        event.getTransaction = () => { return this.provider.getTransaction(log.transactionHash); };\n        event.getTransactionReceipt = () => { return this.provider.getTransactionReceipt(log.transactionHash); };\n        // This may throw if the topics and data mismatch the signature\n        runningEvent.prepareEvent(event);\n        return event;\n    }\n    _addEventListener(runningEvent, listener, once) {\n        if (!this.provider) {\n            logger$i.throwError(\"events require a provider or a signer with a provider\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"once\" });\n        }\n        runningEvent.addListener(listener, once);\n        // Track this running event and its listeners (may already be there; but no hard in updating)\n        this._runningEvents[runningEvent.tag] = runningEvent;\n        // If we are not polling the provider, start polling\n        if (!this._wrappedEmits[runningEvent.tag]) {\n            const wrappedEmit = (log) => {\n                let event = this._wrapEvent(runningEvent, log, listener);\n                // Try to emit the result for the parameterized event...\n                if (event.decodeError == null) {\n                    try {\n                        const args = runningEvent.getEmit(event);\n                        this.emit(runningEvent.filter, ...args);\n                    }\n                    catch (error) {\n                        event.decodeError = error.error;\n                    }\n                }\n                // Always emit \"event\" for fragment-base events\n                if (runningEvent.filter != null) {\n                    this.emit(\"event\", event);\n                }\n                // Emit \"error\" if there was an error\n                if (event.decodeError != null) {\n                    this.emit(\"error\", event.decodeError, event);\n                }\n            };\n            this._wrappedEmits[runningEvent.tag] = wrappedEmit;\n            // Special events, like \"error\" do not have a filter\n            if (runningEvent.filter != null) {\n                this.provider.on(runningEvent.filter, wrappedEmit);\n            }\n        }\n    }\n    queryFilter(event, fromBlockOrBlockhash, toBlock) {\n        const runningEvent = this._getRunningEvent(event);\n        const filter = shallowCopy(runningEvent.filter);\n        if (typeof (fromBlockOrBlockhash) === \"string\" && isHexString(fromBlockOrBlockhash, 32)) {\n            if (toBlock != null) {\n                logger$i.throwArgumentError(\"cannot specify toBlock with blockhash\", \"toBlock\", toBlock);\n            }\n            filter.blockHash = fromBlockOrBlockhash;\n        }\n        else {\n            filter.fromBlock = ((fromBlockOrBlockhash != null) ? fromBlockOrBlockhash : 0);\n            filter.toBlock = ((toBlock != null) ? toBlock : \"latest\");\n        }\n        return this.provider.getLogs(filter).then((logs) => {\n            return logs.map((log) => this._wrapEvent(runningEvent, log, null));\n        });\n    }\n    on(event, listener) {\n        this._addEventListener(this._getRunningEvent(event), listener, false);\n        return this;\n    }\n    once(event, listener) {\n        this._addEventListener(this._getRunningEvent(event), listener, true);\n        return this;\n    }\n    emit(eventName, ...args) {\n        if (!this.provider) {\n            return false;\n        }\n        const runningEvent = this._getRunningEvent(eventName);\n        const result = (runningEvent.run(args) > 0);\n        // May have drained all the \"once\" events; check for living events\n        this._checkRunningEvents(runningEvent);\n        return result;\n    }\n    listenerCount(eventName) {\n        if (!this.provider) {\n            return 0;\n        }\n        if (eventName == null) {\n            return Object.keys(this._runningEvents).reduce((accum, key) => {\n                return accum + this._runningEvents[key].listenerCount();\n            }, 0);\n        }\n        return this._getRunningEvent(eventName).listenerCount();\n    }\n    listeners(eventName) {\n        if (!this.provider) {\n            return [];\n        }\n        if (eventName == null) {\n            const result = [];\n            for (let tag in this._runningEvents) {\n                this._runningEvents[tag].listeners().forEach((listener) => {\n                    result.push(listener);\n                });\n            }\n            return result;\n        }\n        return this._getRunningEvent(eventName).listeners();\n    }\n    removeAllListeners(eventName) {\n        if (!this.provider) {\n            return this;\n        }\n        if (eventName == null) {\n            for (const tag in this._runningEvents) {\n                const runningEvent = this._runningEvents[tag];\n                runningEvent.removeAllListeners();\n                this._checkRunningEvents(runningEvent);\n            }\n            return this;\n        }\n        // Delete any listeners\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeAllListeners();\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n    off(eventName, listener) {\n        if (!this.provider) {\n            return this;\n        }\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeListener(listener);\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n    removeListener(eventName, listener) {\n        return this.off(eventName, listener);\n    }\n}\nclass Contract extends BaseContract {\n}\nclass ContractFactory {\n    constructor(contractInterface, bytecode, signer) {\n        let bytecodeHex = null;\n        if (typeof (bytecode) === \"string\") {\n            bytecodeHex = bytecode;\n        }\n        else if (isBytes(bytecode)) {\n            bytecodeHex = hexlify(bytecode);\n        }\n        else if (bytecode && typeof (bytecode.object) === \"string\") {\n            // Allow the bytecode object from the Solidity compiler\n            bytecodeHex = bytecode.object;\n        }\n        else {\n            // Crash in the next verification step\n            bytecodeHex = \"!\";\n        }\n        // Make sure it is 0x prefixed\n        if (bytecodeHex.substring(0, 2) !== \"0x\") {\n            bytecodeHex = \"0x\" + bytecodeHex;\n        }\n        // Make sure the final result is valid bytecode\n        if (!isHexString(bytecodeHex) || (bytecodeHex.length % 2)) {\n            logger$i.throwArgumentError(\"invalid bytecode\", \"bytecode\", bytecode);\n        }\n        // If we have a signer, make sure it is valid\n        if (signer && !Signer.isSigner(signer)) {\n            logger$i.throwArgumentError(\"invalid signer\", \"signer\", signer);\n        }\n        defineReadOnly(this, \"bytecode\", bytecodeHex);\n        defineReadOnly(this, \"interface\", getStatic((new.target), \"getInterface\")(contractInterface));\n        defineReadOnly(this, \"signer\", signer || null);\n    }\n    // @TODO: Future; rename to populteTransaction?\n    getDeployTransaction(...args) {\n        let tx = {};\n        // If we have 1 additional argument, we allow transaction overrides\n        if (args.length === this.interface.deploy.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n            tx = shallowCopy(args.pop());\n            for (const key in tx) {\n                if (!allowedTransactionKeys$2[key]) {\n                    throw new Error(\"unknown transaction override \" + key);\n                }\n            }\n        }\n        // Do not allow these to be overridden in a deployment transaction\n        [\"data\", \"from\", \"to\"].forEach((key) => {\n            if (tx[key] == null) {\n                return;\n            }\n            logger$i.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        if (tx.value) {\n            const value = BigNumber.from(tx.value);\n            if (!value.isZero() && !this.interface.deploy.payable) {\n                logger$i.throwError(\"non-payable constructor cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: tx.value\n                });\n            }\n        }\n        // Make sure the call matches the constructor signature\n        logger$i.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n        // Set the data to the bytecode + the encoded constructor arguments\n        tx.data = hexlify(concat([\n            this.bytecode,\n            this.interface.encodeDeploy(args)\n        ]));\n        return tx;\n    }\n    deploy(...args) {\n        return __awaiter$4(this, void 0, void 0, function* () {\n            let overrides = {};\n            // If 1 extra parameter was passed in, it contains overrides\n            if (args.length === this.interface.deploy.inputs.length + 1) {\n                overrides = args.pop();\n            }\n            // Make sure the call matches the constructor signature\n            logger$i.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n            // Resolve ENS names and promises in the arguments\n            const params = yield resolveAddresses(this.signer, args, this.interface.deploy.inputs);\n            params.push(overrides);\n            // Get the deployment transaction (with optional overrides)\n            const unsignedTx = this.getDeployTransaction(...params);\n            // Send the deployment transaction\n            const tx = yield this.signer.sendTransaction(unsignedTx);\n            const address = getStatic(this.constructor, \"getContractAddress\")(tx);\n            const contract = getStatic(this.constructor, \"getContract\")(address, this.interface, this.signer);\n            defineReadOnly(contract, \"deployTransaction\", tx);\n            return contract;\n        });\n    }\n    attach(address) {\n        return (this.constructor).getContract(address, this.interface, this.signer);\n    }\n    connect(signer) {\n        return new (this.constructor)(this.interface, this.bytecode, signer);\n    }\n    static fromSolidity(compilerOutput, signer) {\n        if (compilerOutput == null) {\n            logger$i.throwError(\"missing compiler output\", Logger.errors.MISSING_ARGUMENT, { argument: \"compilerOutput\" });\n        }\n        if (typeof (compilerOutput) === \"string\") {\n            compilerOutput = JSON.parse(compilerOutput);\n        }\n        const abi = compilerOutput.abi;\n        let bytecode = null;\n        if (compilerOutput.bytecode) {\n            bytecode = compilerOutput.bytecode;\n        }\n        else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n            bytecode = compilerOutput.evm.bytecode;\n        }\n        return new this(abi, bytecode, signer);\n    }\n    static getInterface(contractInterface) {\n        return Contract.getInterface(contractInterface);\n    }\n    static getContractAddress(tx) {\n        return getContractAddress(tx);\n    }\n    static getContract(address, contractInterface, signer) {\n        return new Contract(address, contractInterface, signer);\n    }\n}\n//# sourceMappingURL=index.js.map\n\n/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\nclass BaseX {\n    constructor(alphabet) {\n        defineReadOnly(this, \"alphabet\", alphabet);\n        defineReadOnly(this, \"base\", alphabet.length);\n        defineReadOnly(this, \"_alphabetMap\", {});\n        defineReadOnly(this, \"_leader\", alphabet.charAt(0));\n        // pre-compute lookup table\n        for (let i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n    encode(value) {\n        let source = arrayify(value);\n        if (source.length === 0) {\n            return \"\";\n        }\n        let digits = [0];\n        for (let i = 0; i < source.length; ++i) {\n            let carry = source[i];\n            for (let j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n        let string = \"\";\n        // deal with leading zeros\n        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n        // convert digits to a string\n        for (let q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n        return string;\n    }\n    decode(value) {\n        if (typeof (value) !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n        let bytes = [];\n        if (value.length === 0) {\n            return new Uint8Array(bytes);\n        }\n        bytes.push(0);\n        for (let i = 0; i < value.length; i++) {\n            let byte = this._alphabetMap[value[i]];\n            if (byte === undefined) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n            }\n            let carry = byte;\n            for (let j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n        // deal with leading zeros\n        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0);\n        }\n        return arrayify(new Uint8Array(bytes.reverse()));\n    }\n}\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n//# sourceMappingURL=index.js.map\n\nvar SupportedAlgorithm;\n(function (SupportedAlgorithm) {\n    SupportedAlgorithm[\"sha256\"] = \"sha256\";\n    SupportedAlgorithm[\"sha512\"] = \"sha512\";\n})(SupportedAlgorithm || (SupportedAlgorithm = {}));\n//# sourceMappingURL=types.js.map\n\nconst version$e = \"sha2/5.4.0\";\n//# sourceMappingURL=_version.js.map\n\nconst logger$j = new Logger(version$e);\nfunction ripemd160$1(data) {\n    return \"0x\" + (hash_1.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\nfunction sha256$1(data) {\n    return \"0x\" + (hash_1.sha256().update(arrayify(data)).digest(\"hex\"));\n}\nfunction sha512$1(data) {\n    return \"0x\" + (hash_1.sha512().update(arrayify(data)).digest(\"hex\"));\n}\nfunction computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger$j.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash_1.hmac(hash_1[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map\n\nfunction pbkdf2(password, salt, iterations, keylen, hashAlgorithm) {\n    password = arrayify(password);\n    salt = arrayify(salt);\n    let hLen;\n    let l = 1;\n    const DK = new Uint8Array(keylen);\n    const block1 = new Uint8Array(salt.length + 4);\n    block1.set(salt);\n    //salt.copy(block1, 0, 0, salt.length)\n    let r;\n    let T;\n    for (let i = 1; i <= l; i++) {\n        //block1.writeUInt32BE(i, salt.length)\n        block1[salt.length] = (i >> 24) & 0xff;\n        block1[salt.length + 1] = (i >> 16) & 0xff;\n        block1[salt.length + 2] = (i >> 8) & 0xff;\n        block1[salt.length + 3] = i & 0xff;\n        //let U = createHmac(password).update(block1).digest();\n        let U = arrayify(computeHmac(hashAlgorithm, password, block1));\n        if (!hLen) {\n            hLen = U.length;\n            T = new Uint8Array(hLen);\n            l = Math.ceil(keylen / hLen);\n            r = keylen - (l - 1) * hLen;\n        }\n        //U.copy(T, 0, 0, hLen)\n        T.set(U);\n        for (let j = 1; j < iterations; j++) {\n            //U = createHmac(password).update(U).digest();\n            U = arrayify(computeHmac(hashAlgorithm, password, U));\n            for (let k = 0; k < hLen; k++)\n                T[k] ^= U[k];\n        }\n        const destPos = (i - 1) * hLen;\n        const len = (i === l ? r : hLen);\n        //T.copy(DK, destPos, 0, len)\n        DK.set(arrayify(T).slice(0, len), destPos);\n    }\n    return hexlify(DK);\n}\n//# sourceMappingURL=pbkdf2.js.map\n\nconst version$f = \"wordlists/5.4.0\";\n//# sourceMappingURL=_version.js.map\n\nconst logger$k = new Logger(version$f);\nclass Wordlist {\n    constructor(locale) {\n        logger$k.checkAbstract(new.target, Wordlist);\n        defineReadOnly(this, \"locale\", locale);\n    }\n    // Subclasses may override this\n    split(mnemonic) {\n        return mnemonic.toLowerCase().split(/ +/g);\n    }\n    // Subclasses may override this\n    join(words) {\n        return words.join(\" \");\n    }\n    static check(wordlist) {\n        const words = [];\n        for (let i = 0; i < 2048; i++) {\n            const word = wordlist.getWord(i);\n            /* istanbul ignore if */\n            if (i !== wordlist.getWordIndex(word)) {\n                return \"0x\";\n            }\n            words.push(word);\n        }\n        return id(words.join(\"\\n\") + \"\\n\");\n    }\n    static register(lang, name) {\n    }\n}\n//# sourceMappingURL=wordlist.js.map\n\nconst words = \"AbdikaceAbecedaAdresaAgreseAkceAktovkaAlejAlkoholAmputaceAnanasAndulkaAnekdotaAnketaAntikaAnulovatArchaAroganceAsfaltAsistentAspiraceAstmaAstronomAtlasAtletikaAtolAutobusAzylBabkaBachorBacilBaculkaBadatelBagetaBagrBahnoBakterieBaladaBaletkaBalkonBalonekBalvanBalzaBambusBankomatBarbarBaretBarmanBarokoBarvaBaterkaBatohBavlnaBazalkaBazilikaBazukaBednaBeranBesedaBestieBetonBezinkaBezmocBeztakBicyklBidloBiftekBikinyBilanceBiografBiologBitvaBizonBlahobytBlatouchBlechaBleduleBleskBlikatBliznaBlokovatBlouditBludBobekBobrBodlinaBodnoutBohatostBojkotBojovatBokorysBolestBorecBoroviceBotaBoubelBouchatBoudaBouleBouratBoxerBradavkaBramboraBrankaBratrBreptaBriketaBrkoBrlohBronzBroskevBrunetkaBrusinkaBrzdaBrzyBublinaBubnovatBuchtaBuditelBudkaBudovaBufetBujarostBukviceBuldokBulvaBundaBunkrBurzaButikBuvolBuzolaBydletBylinaBytovkaBzukotCapartCarevnaCedrCeduleCejchCejnCelaCelerCelkemCelniceCeninaCennostCenovkaCentrumCenzorCestopisCetkaChalupaChapadloCharitaChataChechtatChemieChichotChirurgChladChlebaChlubitChmelChmuraChobotChocholChodbaCholeraChomoutChopitChorobaChovChrapotChrlitChrtChrupChtivostChudinaChutnatChvatChvilkaChvostChybaChystatChytitCibuleCigaretaCihelnaCihlaCinkotCirkusCisternaCitaceCitrusCizinecCizostClonaCokolivCouvatCtitelCtnostCudnostCuketaCukrCupotCvaknoutCvalCvikCvrkotCyklistaDalekoDarebaDatelDatumDceraDebataDechovkaDecibelDeficitDeflaceDeklDekretDemokratDepreseDerbyDeskaDetektivDikobrazDiktovatDiodaDiplomDiskDisplejDivadloDivochDlahaDlouhoDluhopisDnesDobroDobytekDocentDochutitDodnesDohledDohodaDohraDojemDojniceDokladDokolaDoktorDokumentDolarDolevaDolinaDomaDominantDomluvitDomovDonutitDopadDopisDoplnitDoposudDoprovodDopustitDorazitDorostDortDosahDoslovDostatekDosudDosytaDotazDotekDotknoutDoufatDoutnatDovozceDozaduDoznatDozorceDrahotaDrakDramatikDravecDrazeDrdolDrobnostDrogerieDrozdDrsnostDrtitDrzostDubenDuchovnoDudekDuhaDuhovkaDusitDusnoDutostDvojiceDvorecDynamitEkologEkonomieElektronElipsaEmailEmiseEmoceEmpatieEpizodaEpochaEpopejEposEsejEsenceEskortaEskymoEtiketaEuforieEvoluceExekuceExkurzeExpediceExplozeExportExtraktFackaFajfkaFakultaFanatikFantazieFarmacieFavoritFazoleFederaceFejetonFenkaFialkaFigurantFilozofFiltrFinanceFintaFixaceFjordFlanelFlirtFlotilaFondFosforFotbalFotkaFotonFrakceFreskaFrontaFukarFunkceFyzikaGalejeGarantGenetikaGeologGilotinaGlazuraGlejtGolemGolfistaGotikaGrafGramofonGranuleGrepGrilGrogGroteskaGumaHadiceHadrHalaHalenkaHanbaHanopisHarfaHarpunaHavranHebkostHejkalHejnoHejtmanHektarHelmaHematomHerecHernaHesloHezkyHistorikHladovkaHlasivkyHlavaHledatHlenHlodavecHlohHloupostHltatHlubinaHluchotaHmatHmotaHmyzHnisHnojivoHnoutHoblinaHobojHochHodinyHodlatHodnotaHodovatHojnostHokejHolinkaHolkaHolubHomoleHonitbaHonoraceHoralHordaHorizontHorkoHorlivecHormonHorninaHoroskopHorstvoHospodaHostinaHotovostHoubaHoufHoupatHouskaHovorHradbaHraniceHravostHrazdaHrbolekHrdinaHrdloHrdostHrnekHrobkaHromadaHrotHroudaHrozenHrstkaHrubostHryzatHubenostHubnoutHudbaHukotHumrHusitaHustotaHvozdHybnostHydrantHygienaHymnaHysterikIdylkaIhnedIkonaIluzeImunitaInfekceInflaceInkasoInovaceInspekceInternetInvalidaInvestorInzerceIronieJablkoJachtaJahodaJakmileJakostJalovecJantarJarmarkJaroJasanJasnoJatkaJavorJazykJedinecJedleJednatelJehlanJekotJelenJelitoJemnostJenomJepiceJeseterJevitJezdecJezeroJinakJindyJinochJiskraJistotaJitrniceJizvaJmenovatJogurtJurtaKabaretKabelKabinetKachnaKadetKadidloKahanKajakKajutaKakaoKaktusKalamitaKalhotyKalibrKalnostKameraKamkolivKamnaKanibalKanoeKantorKapalinaKapelaKapitolaKapkaKapleKapotaKaprKapustaKapybaraKaramelKarotkaKartonKasaKatalogKatedraKauceKauzaKavalecKazajkaKazetaKazivostKdekolivKdesiKedlubenKempKeramikaKinoKlacekKladivoKlamKlapotKlasikaKlaunKlecKlenbaKlepatKlesnoutKlidKlimaKlisnaKloboukKlokanKlopaKloubKlubovnaKlusatKluzkostKmenKmitatKmotrKnihaKnotKoaliceKoberecKobkaKoblihaKobylaKocourKohoutKojenecKokosKoktejlKolapsKoledaKolizeKoloKomandoKometaKomikKomnataKomoraKompasKomunitaKonatKonceptKondiceKonecKonfeseKongresKoninaKonkursKontaktKonzervaKopanecKopieKopnoutKoprovkaKorbelKorektorKormidloKoroptevKorpusKorunaKorytoKorzetKosatecKostkaKotelKotletaKotoulKoukatKoupelnaKousekKouzloKovbojKozaKozorohKrabiceKrachKrajinaKralovatKrasopisKravataKreditKrejcarKresbaKrevetaKriketKritikKrizeKrkavecKrmelecKrmivoKrocanKrokKronikaKropitKroupaKrovkaKrtekKruhadloKrupiceKrutostKrvinkaKrychleKryptaKrystalKrytKudlankaKufrKujnostKuklaKulajdaKulichKulkaKulometKulturaKunaKupodivuKurtKurzorKutilKvalitaKvasinkaKvestorKynologKyselinaKytaraKyticeKytkaKytovecKyvadloLabradorLachtanLadnostLaikLakomecLamelaLampaLanovkaLasiceLasoLasturaLatinkaLavinaLebkaLeckdyLedenLedniceLedovkaLedvinaLegendaLegieLegraceLehceLehkostLehnoutLektvarLenochodLentilkaLepenkaLepidloLetadloLetecLetmoLetokruhLevhartLevitaceLevobokLibraLichotkaLidojedLidskostLihovinaLijavecLilekLimetkaLinieLinkaLinoleumListopadLitinaLitovatLobistaLodivodLogikaLogopedLokalitaLoketLomcovatLopataLopuchLordLososLotrLoudalLouhLoukaLouskatLovecLstivostLucernaLuciferLumpLuskLustraceLviceLyraLyrikaLysinaMadamMadloMagistrMahagonMajetekMajitelMajoritaMakakMakoviceMakrelaMalbaMalinaMalovatMalviceMaminkaMandleMankoMarnostMasakrMaskotMasopustMaticeMatrikaMaturitaMazanecMazivoMazlitMazurkaMdlobaMechanikMeditaceMedovinaMelasaMelounMentolkaMetlaMetodaMetrMezeraMigraceMihnoutMihuleMikinaMikrofonMilenecMilimetrMilostMimikaMincovnaMinibarMinometMinulostMiskaMistrMixovatMladostMlhaMlhovinaMlokMlsatMluvitMnichMnohemMobilMocnostModelkaModlitbaMohylaMokroMolekulaMomentkaMonarchaMonoklMonstrumMontovatMonzunMosazMoskytMostMotivaceMotorkaMotykaMouchaMoudrostMozaikaMozekMozolMramorMravenecMrkevMrtvolaMrzetMrzutostMstitelMudrcMuflonMulatMumieMuniceMusetMutaceMuzeumMuzikantMyslivecMzdaNabouratNachytatNadaceNadbytekNadhozNadobroNadpisNahlasNahnatNahodileNahraditNaivitaNajednouNajistoNajmoutNaklonitNakonecNakrmitNalevoNamazatNamluvitNanometrNaokoNaopakNaostroNapadatNapevnoNaplnitNapnoutNaposledNaprostoNaroditNarubyNarychloNasaditNasekatNaslepoNastatNatolikNavenekNavrchNavzdoryNazvatNebeNechatNeckyNedalekoNedbatNeduhNegaceNehetNehodaNejenNejprveNeklidNelibostNemilostNemocNeochotaNeonkaNepokojNerostNervNesmyslNesouladNetvorNeuronNevinaNezvykleNicotaNijakNikamNikdyNiklNikterakNitroNoclehNohaviceNominaceNoraNorekNositelNosnostNouzeNovinyNovotaNozdraNudaNudleNugetNutitNutnostNutrieNymfaObalObarvitObavaObdivObecObehnatObejmoutObezitaObhajobaObilniceObjasnitObjektObklopitOblastOblekOblibaOblohaObludaObnosObohatitObojekOboutObrazecObrnaObrubaObrysObsahObsluhaObstaratObuvObvazObvinitObvodObvykleObyvatelObzorOcasOcelOcenitOchladitOchotaOchranaOcitnoutOdbojOdbytOdchodOdcizitOdebratOdeslatOdevzdatOdezvaOdhadceOdhoditOdjetOdjinudOdkazOdkoupitOdlivOdlukaOdmlkaOdolnostOdpadOdpisOdploutOdporOdpustitOdpykatOdrazkaOdsouditOdstupOdsunOdtokOdtudOdvahaOdvetaOdvolatOdvracetOdznakOfinaOfsajdOhlasOhniskoOhradaOhrozitOhryzekOkapOkeniceOklikaOknoOkouzlitOkovyOkrasaOkresOkrsekOkruhOkupantOkurkaOkusitOlejninaOlizovatOmakOmeletaOmezitOmladinaOmlouvatOmluvaOmylOnehdyOpakovatOpasekOperaceOpiceOpilostOpisovatOporaOpoziceOpravduOprotiOrbitalOrchestrOrgieOrliceOrlojOrtelOsadaOschnoutOsikaOsivoOslavaOslepitOslnitOslovitOsnovaOsobaOsolitOspalecOstenOstrahaOstudaOstychOsvojitOteplitOtiskOtopOtrhatOtrlostOtrokOtrubyOtvorOvanoutOvarOvesOvlivnitOvoceOxidOzdobaPachatelPacientPadouchPahorekPaktPalandaPalecPalivoPalubaPamfletPamlsekPanenkaPanikaPannaPanovatPanstvoPantoflePaprikaParketaParodiePartaParukaParybaPasekaPasivitaPastelkaPatentPatronaPavoukPaznehtPazourekPeckaPedagogPejsekPekloPelotonPenaltaPendrekPenzePeriskopPeroPestrostPetardaPeticePetrolejPevninaPexesoPianistaPihaPijavicePiklePiknikPilinaPilnostPilulkaPinzetaPipetaPisatelPistolePitevnaPivnicePivovarPlacentaPlakatPlamenPlanetaPlastikaPlatitPlavidloPlazPlechPlemenoPlentaPlesPletivoPlevelPlivatPlnitPlnoPlochaPlodinaPlombaPloutPlukPlynPobavitPobytPochodPocitPoctivecPodatPodcenitPodepsatPodhledPodivitPodkladPodmanitPodnikPodobaPodporaPodrazPodstataPodvodPodzimPoeziePohankaPohnutkaPohovorPohromaPohybPointaPojistkaPojmoutPokazitPoklesPokojPokrokPokutaPokynPolednePolibekPolknoutPolohaPolynomPomaluPominoutPomlkaPomocPomstaPomysletPonechatPonorkaPonurostPopadatPopelPopisekPoplachPoprositPopsatPopudPoradcePorcePorodPoruchaPoryvPosaditPosedPosilaPoskokPoslanecPosouditPospoluPostavaPosudekPosypPotahPotkanPotleskPotomekPotravaPotupaPotvoraPoukazPoutoPouzdroPovahaPovidlaPovlakPovozPovrchPovstatPovykPovzdechPozdravPozemekPoznatekPozorPozvatPracovatPrahoryPraktikaPralesPraotecPraporekPrasePravdaPrincipPrknoProbuditProcentoProdejProfeseProhraProjektProlomitPromilePronikatPropadProrokProsbaProtonProutekProvazPrskavkaPrstenPrudkostPrutPrvekPrvohoryPsanecPsovodPstruhPtactvoPubertaPuchPudlPukavecPuklinaPukrlePultPumpaPuncPupenPusaPusinkaPustinaPutovatPutykaPyramidaPyskPytelRacekRachotRadiaceRadniceRadonRaftRagbyRaketaRakovinaRamenoRampouchRandeRarachRaritaRasovnaRastrRatolestRazanceRazidloReagovatReakceReceptRedaktorReferentReflexRejnokReklamaRekordRekrutRektorReputaceRevizeRevmaRevolverRezervaRiskovatRizikoRobotikaRodokmenRohovkaRokleRokokoRomanetoRopovodRopuchaRorejsRosolRostlinaRotmistrRotopedRotundaRoubenkaRouchoRoupRouraRovinaRovniceRozborRozchodRozdatRozeznatRozhodceRozinkaRozjezdRozkazRozlohaRozmarRozpadRozruchRozsahRoztokRozumRozvodRubrikaRuchadloRukaviceRukopisRybaRybolovRychlostRydloRypadloRytinaRyzostSadistaSahatSakoSamecSamizdatSamotaSanitkaSardinkaSasankaSatelitSazbaSazeniceSborSchovatSebrankaSeceseSedadloSedimentSedloSehnatSejmoutSekeraSektaSekundaSekvojeSemenoSenoServisSesaditSeshoraSeskokSeslatSestraSesuvSesypatSetbaSetinaSetkatSetnoutSetrvatSeverSeznamShodaShrnoutSifonSilniceSirkaSirotekSirupSituaceSkafandrSkaliskoSkanzenSkautSkeptikSkicaSkladbaSkleniceSkloSkluzSkobaSkokanSkoroSkriptaSkrzSkupinaSkvostSkvrnaSlabikaSladidloSlaninaSlastSlavnostSledovatSlepecSlevaSlezinaSlibSlinaSlizniceSlonSloupekSlovoSluchSluhaSlunceSlupkaSlzaSmaragdSmetanaSmilstvoSmlouvaSmogSmradSmrkSmrtkaSmutekSmyslSnadSnahaSnobSobotaSochaSodovkaSokolSopkaSotvaSoubojSoucitSoudceSouhlasSouladSoumrakSoupravaSousedSoutokSouvisetSpalovnaSpasitelSpisSplavSpodekSpojenecSpoluSponzorSpornostSpoustaSprchaSpustitSrandaSrazSrdceSrnaSrnecSrovnatSrpenSrstSrubStaniceStarostaStatikaStavbaStehnoStezkaStodolaStolekStopaStornoStoupatStrachStresStrhnoutStromStrunaStudnaStupniceStvolStykSubjektSubtropySucharSudostSuknoSundatSunoutSurikataSurovinaSvahSvalstvoSvetrSvatbaSvazekSvisleSvitekSvobodaSvodidloSvorkaSvrabSykavkaSykotSynekSynovecSypatSypkostSyrovostSyselSytostTabletkaTabuleTahounTajemnoTajfunTajgaTajitTajnostTaktikaTamhleTamponTancovatTanecTankerTapetaTaveninaTazatelTechnikaTehdyTekutinaTelefonTemnotaTendenceTenistaTenorTeplotaTepnaTeprveTerapieTermoskaTextilTichoTiskopisTitulekTkadlecTkaninaTlapkaTleskatTlukotTlupaTmelToaletaTopinkaTopolTorzoTouhaToulecTradiceTraktorTrampTrasaTraverzaTrefitTrestTrezorTrhavinaTrhlinaTrochuTrojiceTroskaTroubaTrpceTrpitelTrpkostTrubecTruchlitTruhliceTrusTrvatTudyTuhnoutTuhostTundraTuristaTurnajTuzemskoTvarohTvorbaTvrdostTvrzTygrTykevUbohostUbozeUbratUbrousekUbrusUbytovnaUchoUctivostUdivitUhraditUjednatUjistitUjmoutUkazatelUklidnitUklonitUkotvitUkrojitUliceUlitaUlovitUmyvadloUnavitUniformaUniknoutUpadnoutUplatnitUplynoutUpoutatUpravitUranUrazitUsednoutUsilovatUsmrtitUsnadnitUsnoutUsouditUstlatUstrnoutUtahovatUtkatUtlumitUtonoutUtopenecUtrousitUvalitUvolnitUvozovkaUzdravitUzelUzeninaUzlinaUznatVagonValchaValounVanaVandalVanilkaVaranVarhanyVarovatVcelkuVchodVdovaVedroVegetaceVejceVelbloudVeletrhVelitelVelmocVelrybaVenkovVerandaVerzeVeselkaVeskrzeVesniceVespoduVestaVeterinaVeverkaVibraceVichrVideohraVidinaVidleVilaViniceVisetVitalitaVizeVizitkaVjezdVkladVkusVlajkaVlakVlasecVlevoVlhkostVlivVlnovkaVloupatVnucovatVnukVodaVodivostVodoznakVodstvoVojenskyVojnaVojskoVolantVolbaVolitVolnoVoskovkaVozidloVozovnaVpravoVrabecVracetVrahVrataVrbaVrcholekVrhatVrstvaVrtuleVsaditVstoupitVstupVtipVybavitVybratVychovatVydatVydraVyfotitVyhledatVyhnoutVyhoditVyhraditVyhubitVyjasnitVyjetVyjmoutVyklopitVykonatVylekatVymazatVymezitVymizetVymysletVynechatVynikatVynutitVypadatVyplatitVypravitVypustitVyrazitVyrovnatVyrvatVyslovitVysokoVystavitVysunoutVysypatVytasitVytesatVytratitVyvinoutVyvolatVyvrhelVyzdobitVyznatVzaduVzbuditVzchopitVzdorVzduchVzdychatVzestupVzhledemVzkazVzlykatVznikVzorekVzpouraVztahVztekXylofonZabratZabydletZachovatZadarmoZadusitZafoukatZahltitZahoditZahradaZahynoutZajatecZajetZajistitZaklepatZakoupitZalepitZamezitZamotatZamysletZanechatZanikatZaplatitZapojitZapsatZarazitZastavitZasunoutZatajitZatemnitZatknoutZaujmoutZavalitZaveletZavinitZavolatZavrtatZazvonitZbavitZbrusuZbudovatZbytekZdalekaZdarmaZdatnostZdivoZdobitZdrojZdvihZdymadloZeleninaZemanZeminaZeptatZezaduZezdolaZhatitZhltnoutZhlubokaZhotovitZhrubaZimaZimniceZjemnitZklamatZkoumatZkratkaZkumavkaZlatoZlehkaZlobaZlomZlostZlozvykZmapovatZmarZmatekZmijeZmizetZmocnitZmodratZmrzlinaZmutovatZnakZnalostZnamenatZnovuZobrazitZotavitZoubekZoufaleZploditZpomalitZpravaZprostitZprudkaZprvuZradaZranitZrcadloZrnitostZrnoZrovnaZrychlitZrzavostZtichaZtratitZubovinaZubrZvednoutZvenkuZveselaZvonZvratZvukovodZvyk\";\nlet wordlist = null;\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x25f44555f4af25b51a711136e1c7d6e50ce9f8917d39d6b1f076b2bb4d2fac1a\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\nclass LangCz extends Wordlist {\n    constructor() {\n        super(\"cz\");\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\nconst langCz = new LangCz();\nWordlist.register(langCz);\n//# sourceMappingURL=lang-cz.js.map\n\nconst words$1 = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\nlet wordlist$1 = null;\nfunction loadWords$1(lang) {\n    if (wordlist$1 != null) {\n        return;\n    }\n    wordlist$1 = words$1.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\") {\n        wordlist$1 = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\nclass LangEn extends Wordlist {\n    constructor() {\n        super(\"en\");\n    }\n    getWord(index) {\n        loadWords$1(this);\n        return wordlist$1[index];\n    }\n    getWordIndex(word) {\n        loadWords$1(this);\n        return wordlist$1.indexOf(word);\n    }\n}\nconst langEn = new LangEn();\nWordlist.register(langEn);\n//# sourceMappingURL=lang-en.js.map\n\nconst words$2 = \"A/bacoAbdomenAbejaAbiertoAbogadoAbonoAbortoAbrazoAbrirAbueloAbusoAcabarAcademiaAccesoAccio/nAceiteAcelgaAcentoAceptarA/cidoAclararAcne/AcogerAcosoActivoActoActrizActuarAcudirAcuerdoAcusarAdictoAdmitirAdoptarAdornoAduanaAdultoAe/reoAfectarAficio/nAfinarAfirmarA/gilAgitarAgoni/aAgostoAgotarAgregarAgrioAguaAgudoA/guilaAgujaAhogoAhorroAireAislarAjedrezAjenoAjusteAlacra/nAlambreAlarmaAlbaA/lbumAlcaldeAldeaAlegreAlejarAlertaAletaAlfilerAlgaAlgodo/nAliadoAlientoAlivioAlmaAlmejaAlmi/barAltarAltezaAltivoAltoAlturaAlumnoAlzarAmableAmanteAmapolaAmargoAmasarA/mbarA/mbitoAmenoAmigoAmistadAmorAmparoAmplioAnchoAncianoAnclaAndarAnde/nAnemiaA/nguloAnilloA/nimoAni/sAnotarAntenaAntiguoAntojoAnualAnularAnuncioA~adirA~ejoA~oApagarAparatoApetitoApioAplicarApodoAporteApoyoAprenderAprobarApuestaApuroAradoAra~aArarA/rbitroA/rbolArbustoArchivoArcoArderArdillaArduoA/reaA/ridoAriesArmoni/aArne/sAromaArpaArpo/nArregloArrozArrugaArteArtistaAsaAsadoAsaltoAscensoAsegurarAseoAsesorAsientoAsiloAsistirAsnoAsombroA/speroAstillaAstroAstutoAsumirAsuntoAtajoAtaqueAtarAtentoAteoA/ticoAtletaA/tomoAtraerAtrozAtu/nAudazAudioAugeAulaAumentoAusenteAutorAvalAvanceAvaroAveAvellanaAvenaAvestruzAvio/nAvisoAyerAyudaAyunoAzafra/nAzarAzoteAzu/carAzufreAzulBabaBaborBacheBahi/aBaileBajarBalanzaBalco/nBaldeBambu/BancoBandaBa~oBarbaBarcoBarnizBarroBa/sculaBasto/nBasuraBatallaBateri/aBatirBatutaBau/lBazarBebe/BebidaBelloBesarBesoBestiaBichoBienBingoBlancoBloqueBlusaBoaBobinaBoboBocaBocinaBodaBodegaBoinaBolaBoleroBolsaBombaBondadBonitoBonoBonsa/iBordeBorrarBosqueBoteBoti/nBo/vedaBozalBravoBrazoBrechaBreveBrilloBrincoBrisaBrocaBromaBronceBroteBrujaBruscoBrutoBuceoBucleBuenoBueyBufandaBufo/nBu/hoBuitreBultoBurbujaBurlaBurroBuscarButacaBuzo/nCaballoCabezaCabinaCabraCacaoCada/verCadenaCaerCafe/Cai/daCaima/nCajaCajo/nCalCalamarCalcioCaldoCalidadCalleCalmaCalorCalvoCamaCambioCamelloCaminoCampoCa/ncerCandilCanelaCanguroCanicaCantoCa~aCa~o/nCaobaCaosCapazCapita/nCapoteCaptarCapuchaCaraCarbo/nCa/rcelCaretaCargaCari~oCarneCarpetaCarroCartaCasaCascoCaseroCaspaCastorCatorceCatreCaudalCausaCazoCebollaCederCedroCeldaCe/lebreCelosoCe/lulaCementoCenizaCentroCercaCerdoCerezaCeroCerrarCertezaCe/spedCetroChacalChalecoChampu/ChanclaChapaCharlaChicoChisteChivoChoqueChozaChuletaChuparCiclo/nCiegoCieloCienCiertoCifraCigarroCimaCincoCineCintaCipre/sCircoCiruelaCisneCitaCiudadClamorClanClaroClaseClaveClienteClimaCli/nicaCobreCoccio/nCochinoCocinaCocoCo/digoCodoCofreCogerCoheteCoji/nCojoColaColchaColegioColgarColinaCollarColmoColumnaCombateComerComidaCo/modoCompraCondeConejoCongaConocerConsejoContarCopaCopiaCorazo/nCorbataCorchoCordo/nCoronaCorrerCoserCosmosCostaCra/neoCra/terCrearCrecerCrei/doCremaCri/aCrimenCriptaCrisisCromoCro/nicaCroquetaCrudoCruzCuadroCuartoCuatroCuboCubrirCucharaCuelloCuentoCuerdaCuestaCuevaCuidarCulebraCulpaCultoCumbreCumplirCunaCunetaCuotaCupo/nCu/pulaCurarCuriosoCursoCurvaCutisDamaDanzaDarDardoDa/tilDeberDe/bilDe/cadaDecirDedoDefensaDefinirDejarDelfi/nDelgadoDelitoDemoraDensoDentalDeporteDerechoDerrotaDesayunoDeseoDesfileDesnudoDestinoDesvi/oDetalleDetenerDeudaDi/aDiabloDiademaDiamanteDianaDiarioDibujoDictarDienteDietaDiezDifi/cilDignoDilemaDiluirDineroDirectoDirigirDiscoDise~oDisfrazDivaDivinoDobleDoceDolorDomingoDonDonarDoradoDormirDorsoDosDosisDrago/nDrogaDuchaDudaDueloDue~oDulceDu/oDuqueDurarDurezaDuroE/banoEbrioEcharEcoEcuadorEdadEdicio/nEdificioEditorEducarEfectoEficazEjeEjemploElefanteElegirElementoElevarElipseE/liteElixirElogioEludirEmbudoEmitirEmocio/nEmpateEmpe~oEmpleoEmpresaEnanoEncargoEnchufeEnci/aEnemigoEneroEnfadoEnfermoEnga~oEnigmaEnlaceEnormeEnredoEnsayoEnse~arEnteroEntrarEnvaseEnvi/oE/pocaEquipoErizoEscalaEscenaEscolarEscribirEscudoEsenciaEsferaEsfuerzoEspadaEspejoEspi/aEsposaEspumaEsqui/EstarEsteEstiloEstufaEtapaEternoE/ticaEtniaEvadirEvaluarEventoEvitarExactoExamenExcesoExcusaExentoExigirExilioExistirE/xitoExpertoExplicarExponerExtremoFa/bricaFa/bulaFachadaFa/cilFactorFaenaFajaFaldaFalloFalsoFaltarFamaFamiliaFamosoFarao/nFarmaciaFarolFarsaFaseFatigaFaunaFavorFaxFebreroFechaFelizFeoFeriaFerozFe/rtilFervorFesti/nFiableFianzaFiarFibraFiccio/nFichaFideoFiebreFielFieraFiestaFiguraFijarFijoFilaFileteFilialFiltroFinFincaFingirFinitoFirmaFlacoFlautaFlechaFlorFlotaFluirFlujoFlu/orFobiaFocaFogataFogo/nFolioFolletoFondoFormaForroFortunaForzarFosaFotoFracasoFra/gilFranjaFraseFraudeFrei/rFrenoFresaFri/oFritoFrutaFuegoFuenteFuerzaFugaFumarFuncio/nFundaFurgo/nFuriaFusilFu/tbolFuturoGacelaGafasGaitaGajoGalaGaleri/aGalloGambaGanarGanchoGangaGansoGarajeGarzaGasolinaGastarGatoGavila/nGemeloGemirGenGe/neroGenioGenteGeranioGerenteGermenGestoGiganteGimnasioGirarGiroGlaciarGloboGloriaGolGolfoGolosoGolpeGomaGordoGorilaGorraGotaGoteoGozarGradaGra/ficoGranoGrasaGratisGraveGrietaGrilloGripeGrisGritoGrosorGru/aGruesoGrumoGrupoGuanteGuapoGuardiaGuerraGui/aGui~oGuionGuisoGuitarraGusanoGustarHaberHa/bilHablarHacerHachaHadaHallarHamacaHarinaHazHaza~aHebillaHebraHechoHeladoHelioHembraHerirHermanoHe/roeHervirHieloHierroHi/gadoHigieneHijoHimnoHistoriaHocicoHogarHogueraHojaHombreHongoHonorHonraHoraHormigaHornoHostilHoyoHuecoHuelgaHuertaHuesoHuevoHuidaHuirHumanoHu/medoHumildeHumoHundirHuraca/nHurtoIconoIdealIdiomaI/doloIglesiaIglu/IgualIlegalIlusio/nImagenIma/nImitarImparImperioImponerImpulsoIncapazI/ndiceInerteInfielInformeIngenioInicioInmensoInmuneInnatoInsectoInstanteIntere/sI/ntimoIntuirInu/tilInviernoIraIrisIroni/aIslaIsloteJabali/Jabo/nJamo/nJarabeJardi/nJarraJaulaJazmi/nJefeJeringaJineteJornadaJorobaJovenJoyaJuergaJuevesJuezJugadorJugoJugueteJuicioJuncoJunglaJunioJuntarJu/piterJurarJustoJuvenilJuzgarKiloKoalaLabioLacioLacraLadoLadro/nLagartoLa/grimaLagunaLaicoLamerLa/minaLa/mparaLanaLanchaLangostaLanzaLa/pizLargoLarvaLa/stimaLataLa/texLatirLaurelLavarLazoLealLeccio/nLecheLectorLeerLegio/nLegumbreLejanoLenguaLentoLe~aLeo/nLeopardoLesio/nLetalLetraLeveLeyendaLibertadLibroLicorLi/derLidiarLienzoLigaLigeroLimaLi/miteLimo/nLimpioLinceLindoLi/neaLingoteLinoLinternaLi/quidoLisoListaLiteraLitioLitroLlagaLlamaLlantoLlaveLlegarLlenarLlevarLlorarLloverLluviaLoboLocio/nLocoLocuraLo/gicaLogroLombrizLomoLonjaLoteLuchaLucirLugarLujoLunaLunesLupaLustroLutoLuzMacetaMachoMaderaMadreMaduroMaestroMafiaMagiaMagoMai/zMaldadMaletaMallaMaloMama/MamboMamutMancoMandoManejarMangaManiqui/ManjarManoMansoMantaMa~anaMapaMa/quinaMarMarcoMareaMarfilMargenMaridoMa/rmolMarro/nMartesMarzoMasaMa/scaraMasivoMatarMateriaMatizMatrizMa/ximoMayorMazorcaMechaMedallaMedioMe/dulaMejillaMejorMelenaMelo/nMemoriaMenorMensajeMenteMenu/MercadoMerengueMe/ritoMesMeso/nMetaMeterMe/todoMetroMezclaMiedoMielMiembroMigaMilMilagroMilitarMillo/nMimoMinaMineroMi/nimoMinutoMiopeMirarMisaMiseriaMisilMismoMitadMitoMochilaMocio/nModaModeloMohoMojarMoldeMolerMolinoMomentoMomiaMonarcaMonedaMonjaMontoMo~oMoradaMorderMorenoMorirMorroMorsaMortalMoscaMostrarMotivoMoverMo/vilMozoMuchoMudarMuebleMuelaMuerteMuestraMugreMujerMulaMuletaMultaMundoMu~ecaMuralMuroMu/sculoMuseoMusgoMu/sicaMusloNa/carNacio/nNadarNaipeNaranjaNarizNarrarNasalNatalNativoNaturalNa/useaNavalNaveNavidadNecioNe/ctarNegarNegocioNegroNeo/nNervioNetoNeutroNevarNeveraNichoNidoNieblaNietoNi~ezNi~oNi/tidoNivelNoblezaNocheNo/minaNoriaNormaNorteNotaNoticiaNovatoNovelaNovioNubeNucaNu/cleoNudilloNudoNueraNueveNuezNuloNu/meroNutriaOasisObesoObispoObjetoObraObreroObservarObtenerObvioOcaOcasoOce/anoOchentaOchoOcioOcreOctavoOctubreOcultoOcuparOcurrirOdiarOdioOdiseaOesteOfensaOfertaOficioOfrecerOgroOi/doOi/rOjoOlaOleadaOlfatoOlivoOllaOlmoOlorOlvidoOmbligoOndaOnzaOpacoOpcio/nO/peraOpinarOponerOptarO/pticaOpuestoOracio/nOradorOralO/rbitaOrcaOrdenOrejaO/rganoOrgi/aOrgulloOrienteOrigenOrillaOroOrquestaOrugaOsadi/aOscuroOseznoOsoOstraOto~oOtroOvejaO/vuloO/xidoOxi/genoOyenteOzonoPactoPadrePaellaPa/ginaPagoPai/sPa/jaroPalabraPalcoPaletaPa/lidoPalmaPalomaPalparPanPanalPa/nicoPanteraPa~ueloPapa/PapelPapillaPaquetePararParcelaParedParirParoPa/rpadoParquePa/rrafoPartePasarPaseoPasio/nPasoPastaPataPatioPatriaPausaPautaPavoPayasoPeato/nPecadoPeceraPechoPedalPedirPegarPeinePelarPelda~oPeleaPeligroPellejoPeloPelucaPenaPensarPe~o/nPeo/nPeorPepinoPeque~oPeraPerchaPerderPerezaPerfilPericoPerlaPermisoPerroPersonaPesaPescaPe/simoPesta~aPe/taloPetro/leoPezPezu~aPicarPicho/nPiePiedraPiernaPiezaPijamaPilarPilotoPimientaPinoPintorPinzaPi~aPiojoPipaPirataPisarPiscinaPisoPistaPito/nPizcaPlacaPlanPlataPlayaPlazaPleitoPlenoPlomoPlumaPluralPobrePocoPoderPodioPoemaPoesi/aPoetaPolenPolici/aPolloPolvoPomadaPomeloPomoPompaPonerPorcio/nPortalPosadaPoseerPosiblePostePotenciaPotroPozoPradoPrecozPreguntaPremioPrensaPresoPrevioPrimoPri/ncipePrisio/nPrivarProaProbarProcesoProductoProezaProfesorProgramaProlePromesaProntoPropioPro/ximoPruebaPu/blicoPucheroPudorPuebloPuertaPuestoPulgaPulirPulmo/nPulpoPulsoPumaPuntoPu~alPu~oPupaPupilaPure/QuedarQuejaQuemarQuererQuesoQuietoQui/micaQuinceQuitarRa/banoRabiaRaboRacio/nRadicalRai/zRamaRampaRanchoRangoRapazRa/pidoRaptoRasgoRaspaRatoRayoRazaRazo/nReaccio/nRealidadReba~oReboteRecaerRecetaRechazoRecogerRecreoRectoRecursoRedRedondoReducirReflejoReformaRefra/nRefugioRegaloRegirReglaRegresoRehe/nReinoRei/rRejaRelatoRelevoRelieveRellenoRelojRemarRemedioRemoRencorRendirRentaRepartoRepetirReposoReptilResRescateResinaRespetoRestoResumenRetiroRetornoRetratoReunirReve/sRevistaReyRezarRicoRiegoRiendaRiesgoRifaRi/gidoRigorRinco/nRi~o/nRi/oRiquezaRisaRitmoRitoRizoRobleRoceRociarRodarRodeoRodillaRoerRojizoRojoRomeroRomperRonRoncoRondaRopaRoperoRosaRoscaRostroRotarRubi/RuborRudoRuedaRugirRuidoRuinaRuletaRuloRumboRumorRupturaRutaRutinaSa/badoSaberSabioSableSacarSagazSagradoSalaSaldoSaleroSalirSalmo/nSalo/nSalsaSaltoSaludSalvarSambaSancio/nSandi/aSanearSangreSanidadSanoSantoSapoSaqueSardinaSarte/nSastreSata/nSaunaSaxofo/nSeccio/nSecoSecretoSectaSedSeguirSeisSelloSelvaSemanaSemillaSendaSensorSe~alSe~orSepararSepiaSequi/aSerSerieSermo/nServirSesentaSesio/nSetaSetentaSeveroSexoSextoSidraSiestaSieteSigloSignoSi/labaSilbarSilencioSillaSi/mboloSimioSirenaSistemaSitioSituarSobreSocioSodioSolSolapaSoldadoSoledadSo/lidoSoltarSolucio/nSombraSondeoSonidoSonoroSonrisaSopaSoplarSoporteSordoSorpresaSorteoSoste/nSo/tanoSuaveSubirSucesoSudorSuegraSueloSue~oSuerteSufrirSujetoSulta/nSumarSuperarSuplirSuponerSupremoSurSurcoSure~oSurgirSustoSutilTabacoTabiqueTablaTabu/TacoTactoTajoTalarTalcoTalentoTallaTalo/nTama~oTamborTangoTanqueTapaTapeteTapiaTapo/nTaquillaTardeTareaTarifaTarjetaTarotTarroTartaTatuajeTauroTazaTazo/nTeatroTechoTeclaTe/cnicaTejadoTejerTejidoTelaTele/fonoTemaTemorTemploTenazTenderTenerTenisTensoTeori/aTerapiaTercoTe/rminoTernuraTerrorTesisTesoroTestigoTeteraTextoTezTibioTiburo/nTiempoTiendaTierraTiesoTigreTijeraTildeTimbreTi/midoTimoTintaTi/oTi/picoTipoTiraTiro/nTita/nTi/tereTi/tuloTizaToallaTobilloTocarTocinoTodoTogaToldoTomarTonoTontoToparTopeToqueTo/raxToreroTormentaTorneoToroTorpedoTorreTorsoTortugaTosToscoToserTo/xicoTrabajoTractorTraerTra/ficoTragoTrajeTramoTranceTratoTraumaTrazarTre/bolTreguaTreintaTrenTreparTresTribuTrigoTripaTristeTriunfoTrofeoTrompaTroncoTropaTroteTrozoTrucoTruenoTrufaTuberi/aTuboTuertoTumbaTumorTu/nelTu/nicaTurbinaTurismoTurnoTutorUbicarU/lceraUmbralUnidadUnirUniversoUnoUntarU~aUrbanoUrbeUrgenteUrnaUsarUsuarioU/tilUtopi/aUvaVacaVaci/oVacunaVagarVagoVainaVajillaValeVa/lidoValleValorVa/lvulaVampiroVaraVariarVaro/nVasoVecinoVectorVehi/culoVeinteVejezVelaVeleroVelozVenaVencerVendaVenenoVengarVenirVentaVenusVerVeranoVerboVerdeVeredaVerjaVersoVerterVi/aViajeVibrarVicioVi/ctimaVidaVi/deoVidrioViejoViernesVigorVilVillaVinagreVinoVi~edoVioli/nViralVirgoVirtudVisorVi/speraVistaVitaminaViudoVivazViveroVivirVivoVolca/nVolumenVolverVorazVotarVotoVozVueloVulgarYacerYateYeguaYemaYernoYesoYodoYogaYogurZafiroZanjaZapatoZarzaZonaZorroZumoZurdo\";\nconst lookup = {};\nlet wordlist$2 = null;\nfunction dropDiacritic(word) {\n    logger$k.checkNormalize();\n    return toUtf8String(Array.prototype.filter.call(toUtf8Bytes(word.normalize(\"NFD\").toLowerCase()), (c) => {\n        return ((c >= 65 && c <= 90) || (c >= 97 && c <= 123));\n    }));\n}\nfunction expand(word) {\n    const output = [];\n    Array.prototype.forEach.call(toUtf8Bytes(word), (c) => {\n        // Acute accent\n        if (c === 47) {\n            output.push(204);\n            output.push(129);\n            // n-tilde\n        }\n        else if (c === 126) {\n            output.push(110);\n            output.push(204);\n            output.push(131);\n        }\n        else {\n            output.push(c);\n        }\n    });\n    return toUtf8String(output);\n}\nfunction loadWords$2(lang) {\n    if (wordlist$2 != null) {\n        return;\n    }\n    wordlist$2 = words$2.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \").map((w) => expand(w));\n    wordlist$2.forEach((word, index) => {\n        lookup[dropDiacritic(word)] = index;\n    });\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0xf74fb7092aeacdfbf8959557de22098da512207fb9f109cb526994938cf40300\") {\n        wordlist$2 = null;\n        throw new Error(\"BIP39 Wordlist for es (Spanish) FAILED\");\n    }\n}\nclass LangEs extends Wordlist {\n    constructor() {\n        super(\"es\");\n    }\n    getWord(index) {\n        loadWords$2(this);\n        return wordlist$2[index];\n    }\n    getWordIndex(word) {\n        loadWords$2(this);\n        return lookup[dropDiacritic(word)];\n    }\n}\nconst langEs = new LangEs();\nWordlist.register(langEs);\n//# sourceMappingURL=lang-es.js.map\n\nconst words$3 = \"\";\nlet wordlist$3 = null;\nconst lookup$1 = {};\nfunction dropDiacritic$1(word) {\n    logger$k.checkNormalize();\n    return toUtf8String(Array.prototype.filter.call(toUtf8Bytes(word.normalize(\"NFD\").toLowerCase()), (c) => {\n        return ((c >= 65 && c <= 90) || (c >= 97 && c <= 123));\n    }));\n}\nfunction expand$1(word) {\n    const output = [];\n    Array.prototype.forEach.call(toUtf8Bytes(word), (c) => {\n        // Acute accent\n        if (c === 47) {\n            output.push(204);\n            output.push(129);\n            // Grave accent\n        }\n        else if (c === 45) {\n            output.push(204);\n            output.push(128);\n        }\n        else {\n            output.push(c);\n        }\n    });\n    return toUtf8String(output);\n}\nfunction loadWords$3(lang) {\n    if (wordlist$3 != null) {\n        return;\n    }\n    wordlist$3 = words$3.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \").map((w) => expand$1(w));\n    wordlist$3.forEach((word, index) => {\n        lookup$1[dropDiacritic$1(word)] = index;\n    });\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x51deb7ae009149dc61a6bd18a918eb7ac78d2775726c68e598b92d002519b045\") {\n        wordlist$3 = null;\n        throw new Error(\"BIP39 Wordlist for fr (French) FAILED\");\n    }\n}\nclass LangFr extends Wordlist {\n    constructor() {\n        super(\"fr\");\n    }\n    getWord(index) {\n        loadWords$3(this);\n        return wordlist$3[index];\n    }\n    getWordIndex(word) {\n        loadWords$3(this);\n        return lookup$1[dropDiacritic$1(word)];\n    }\n}\nconst langFr = new LangFr();\nWordlist.register(langFr);\n//# sourceMappingURL=lang-fr.js.map\n\nconst data = [\n    // 4-kana words\n    \"AQRASRAGBAGUAIRAHBAghAURAdBAdcAnoAMEAFBAFCBKFBQRBSFBCXBCDBCHBGFBEQBpBBpQBIkBHNBeOBgFBVCBhBBhNBmOBmRBiHBiFBUFBZDBvFBsXBkFBlcBjYBwDBMBBTBBTRBWBBWXXaQXaRXQWXSRXCFXYBXpHXOQXHRXhRXuRXmXXbRXlXXwDXTRXrCXWQXWGaBWaKcaYgasFadQalmaMBacAKaRKKBKKXKKjKQRKDRKCYKCRKIDKeVKHcKlXKjHKrYNAHNBWNaRNKcNIBNIONmXNsXNdXNnBNMBNRBNrXNWDNWMNFOQABQAHQBrQXBQXFQaRQKXQKDQKOQKFQNBQNDQQgQCXQCDQGBQGDQGdQYXQpBQpQQpHQLXQHuQgBQhBQhCQuFQmXQiDQUFQZDQsFQdRQkHQbRQlOQlmQPDQjDQwXQMBQMDQcFQTBQTHQrDDXQDNFDGBDGQDGRDpFDhFDmXDZXDbRDMYDRdDTRDrXSAhSBCSBrSGQSEQSHBSVRShYShkSyQSuFSiBSdcSoESocSlmSMBSFBSFKSFNSFdSFcCByCaRCKcCSBCSRCCrCGbCEHCYXCpBCpQCIBCIHCeNCgBCgFCVECVcCmkCmwCZXCZFCdRClOClmClFCjDCjdCnXCwBCwXCcRCFQCFjGXhGNhGDEGDMGCDGCHGIFGgBGVXGVEGVRGmXGsXGdYGoSGbRGnXGwXGwDGWRGFNGFLGFOGFdGFkEABEBDEBFEXOEaBEKSENBENDEYXEIgEIkEgBEgQEgHEhFEudEuFEiBEiHEiFEZDEvBEsXEsFEdXEdREkFEbBEbRElFEPCEfkEFNYAEYAhYBNYQdYDXYSRYCEYYoYgQYgRYuRYmCYZTYdBYbEYlXYjQYRbYWRpKXpQopQnpSFpCXpIBpISphNpdBpdRpbRpcZpFBpFNpFDpFopFrLADLBuLXQLXcLaFLCXLEhLpBLpFLHXLeVLhILdHLdRLoDLbRLrXIABIBQIBCIBsIBoIBMIBRIXaIaRIKYIKRINBINuICDIGBIIDIIkIgRIxFIyQIiHIdRIbYIbRIlHIwRIMYIcRIRVITRIFBIFNIFQOABOAFOBQOaFONBONMOQFOSFOCDOGBOEQOpBOLXOIBOIFOgQOgFOyQOycOmXOsXOdIOkHOMEOMkOWWHBNHXNHXWHNXHDuHDRHSuHSRHHoHhkHmRHdRHkQHlcHlRHwBHWcgAEgAggAkgBNgBQgBEgXOgYcgLXgHjgyQgiBgsFgdagMYgWSgFQgFEVBTVXEVKBVKNVKDVKYVKRVNBVNYVDBVDxVSBVSRVCjVGNVLXVIFVhBVhcVsXVdRVbRVlRhBYhKYhDYhGShxWhmNhdahdkhbRhjohMXhTRxAXxXSxKBxNBxEQxeNxeQxhXxsFxdbxlHxjcxFBxFNxFQxFOxFoyNYyYoybcyMYuBQuBRuBruDMuCouHBudQukkuoBulVuMXuFEmCYmCRmpRmeDmiMmjdmTFmFQiADiBOiaRiKRiNBiNRiSFiGkiGFiERipRiLFiIFihYibHijBijEiMXiWBiFBiFCUBQUXFUaRUNDUNcUNRUNFUDBUSHUCDUGBUGFUEqULNULoUIRUeEUeYUgBUhFUuRUiFUsXUdFUkHUbBUjSUjYUwXUMDUcHURdUTBUrBUrXUrQZAFZXZZaRZKFZNBZQFZCXZGBZYdZpBZLDZIFZHXZHNZeQZVRZVFZmXZiBZvFZdFZkFZbHZbFZwXZcCZcRZRBvBQvBGvBLvBWvCovMYsAFsBDsaRsKFsNFsDrsSHsSFsCXsCRsEBsEHsEfspBsLBsLDsIgsIRseGsbRsFBsFQsFSdNBdSRdCVdGHdYDdHcdVbdySduDdsXdlRdwXdWYdWcdWRkBMkXOkaRkNIkNFkSFkCFkYBkpRkeNkgBkhVkmXksFklVkMBkWDkFNoBNoaQoaFoNBoNXoNaoNEoSRoEroYXoYCoYbopRopFomXojkowXorFbBEbEIbdBbjYlaRlDElMXlFDjKjjSRjGBjYBjYkjpRjLXjIBjOFjeVjbRjwBnXQnSHnpFnLXnINnMBnTRwXBwXNwXYwNFwQFwSBwGFwLXwLDweNwgBwuHwjDwnXMBXMpFMIBMeNMTHcaQcNBcDHcSFcCXcpBcLXcLDcgFcuFcnXcwXccDcTQcrFTQErXNrCHrpFrgFrbFrTHrFcWNYWNbWEHWMXWTR\",\n    // 5-kana words\n    \"ABGHABIJAEAVAYJQALZJAIaRAHNXAHdcAHbRAZJMAZJRAZTRAdVJAklmAbcNAjdRAMnRAMWYAWpRAWgRAFgBAFhBAFdcBNJBBNJDBQKBBQhcBQlmBDEJBYJkBYJTBpNBBpJFBIJBBIJDBIcABOKXBOEJBOVJBOiJBOZJBepBBeLXBeIFBegBBgGJBVJXBuocBiJRBUJQBlXVBlITBwNFBMYVBcqXBTlmBWNFBWiJBWnRBFGHBFwXXKGJXNJBXNZJXDTTXSHSXSVRXSlHXCJDXGQJXEhXXYQJXYbRXOfXXeNcXVJFXhQJXhEJXdTRXjdXXMhBXcQTXRGBXTEBXTnQXFCXXFOFXFgFaBaFaBNJaBCJaBpBaBwXaNJKaNJDaQIBaDpRaEPDaHMFamDJalEJaMZJaFaFaFNBaFQJaFLDaFVHKBCYKBEBKBHDKXaFKXGdKXEJKXpHKXIBKXZDKXwXKKwLKNacKNYJKNJoKNWcKDGdKDTRKChXKGaRKGhBKGbRKEBTKEaRKEPTKLMDKLWRKOHDKVJcKdBcKlIBKlOPKFSBKFEPKFpFNBNJNJBQNBGHNBEPNBHXNBgFNBVXNBZDNBsXNBwXNNaRNNJDNNJENNJkNDCJNDVDNGJRNJiDNZJNNsCJNJFNNFSBNFCXNFEPNFLXNFIFQJBFQCaRQJEQQLJDQLJFQIaRQOqXQHaFQHHQQVJXQVJDQhNJQmEIQZJFQsJXQJrFQWbRDJABDBYJDXNFDXCXDXLXDXZDDXsJDQqXDSJFDJCXDEPkDEqXDYmQDpSJDOCkDOGQDHEIDVJDDuDuDWEBDJFgSBNDSBSFSBGHSBIBSBTQSKVYSJQNSJQiSJCXSEqXSJYVSIiJSOMYSHAHSHaQSeCFSepQSegBSHdHSHrFShSJSJuHSJUFSkNRSrSrSWEBSFaHSJFQSFCXSFGDSFYXSFODSFgBSFVXSFhBSFxFSFkFSFbBSFMFCADdCJXBCXaFCXKFCXNFCXCXCXGBCXEJCXYBCXLDCXIBCXOPCXHXCXgBCXhBCXiBCXlDCXcHCJNBCJNFCDCJCDGBCDVXCDhBCDiDCDJdCCmNCpJFCIaRCOqXCHCHCHZJCViJCuCuCmddCJiFCdNBCdHhClEJCnUJCreSCWlgCWTRCFBFCFNBCFYBCFVFCFhFCFdSCFTBCFWDGBNBGBQFGJBCGBEqGBpBGBgQGNBEGNJYGNkOGNJRGDUFGJpQGHaBGJeNGJeEGVBlGVKjGiJDGvJHGsVJGkEBGMIJGWjNGFBFGFCXGFGBGFYXGFpBGFMFEASJEAWpEJNFECJVEIXSEIQJEOqXEOcFEeNcEHEJEHlFEJgFEhlmEmDJEmZJEiMBEUqXEoSREPBFEPXFEPKFEPSFEPEFEPpFEPLXEPIBEJPdEPcFEPTBEJnXEqlHEMpREFCXEFODEFcFYASJYJAFYBaBYBVXYXpFYDhBYCJBYJGFYYbRYeNcYJeVYiIJYZJcYvJgYvJRYJsXYsJFYMYMYreVpBNHpBEJpBwXpQxFpYEJpeNDpJeDpeSFpeCHpHUJpHbBpHcHpmUJpiiJpUJrpsJuplITpFaBpFQqpFGBpFEfpFYBpFpBpFLJpFIDpFgBpFVXpFyQpFuFpFlFpFjDpFnXpFwXpJFMpFTBLXCJLXEFLXhFLXUJLXbFLalmLNJBLSJQLCLCLGJBLLDJLHaFLeNFLeSHLeCXLepFLhaRLZsJLsJDLsJrLocaLlLlLMdbLFNBLFSBLFEHLFkFIBBFIBXFIBaQIBKXIBSFIBpHIBLXIBgBIBhBIBuHIBmXIBiFIBZXIBvFIBbFIBjQIBwXIBWFIKTRIQUJIDGFICjQIYSRIINXIJeCIVaRImEkIZJFIvJRIsJXIdCJIJoRIbBQIjYBIcqXITFVIreVIFKFIFSFIFCJIFGFIFLDIFIBIJFOIFgBIFVXIJFhIFxFIFmXIFdHIFbBIJFrIJFWOBGBOQfXOOKjOUqXOfXBOqXEOcqXORVJOFIBOFlDHBIOHXiFHNTRHCJXHIaRHHJDHHEJHVbRHZJYHbIBHRsJHRkDHWlmgBKFgBSBgBCDgBGHgBpBgBIBgBVJgBuBgBvFgKDTgQVXgDUJgGSJgOqXgmUMgZIJgTUJgWIEgFBFgFNBgFDJgFSFgFGBgFYXgJFOgFgQgFVXgFhBgFbHgJFWVJABVQKcVDgFVOfXVeDFVhaRVmGdViJYVMaRVFNHhBNDhBCXhBEqhBpFhBLXhNJBhSJRheVXhhKEhxlmhZIJhdBQhkIJhbMNhMUJhMZJxNJgxQUJxDEkxDdFxSJRxplmxeSBxeCXxeGFxeYXxepQxegBxWVcxFEQxFLXxFIBxFgBxFxDxFZtxFdcxFbBxFwXyDJXyDlcuASJuDJpuDIBuCpJuGSJuIJFueEFuZIJusJXudWEuoIBuWGJuFBcuFKEuFNFuFQFuFDJuFGJuFVJuFUtuFdHuFTBmBYJmNJYmQhkmLJDmLJomIdXmiJYmvJRmsJRmklmmMBymMuCmclmmcnQiJABiJBNiJBDiBSFiBCJiBEFiBYBiBpFiBLXiBTHiJNciDEfiCZJiECJiJEqiOkHiHKFieNDiHJQieQcieDHieSFieCXieGFieEFieIHiegFihUJixNoioNXiFaBiFKFiFNDiFEPiFYXitFOitFHiFgBiFVEiFmXiFitiFbBiFMFiFrFUCXQUIoQUIJcUHQJUeCEUHwXUUJDUUqXUdWcUcqXUrnQUFNDUFSHUFCFUFEfUFLXUtFOZBXOZXSBZXpFZXVXZEQJZEJkZpDJZOqXZeNHZeCDZUqXZFBQZFEHZFLXvBAFvBKFvBCXvBEPvBpHvBIDvBgFvBuHvQNJvFNFvFGBvFIBvJFcsXCDsXLXsXsXsXlFsXcHsQqXsJQFsEqXseIFsFEHsFjDdBxOdNpRdNJRdEJbdpJRdhZJdnSJdrjNdFNJdFQHdFhNkNJDkYaRkHNRkHSRkVbRkuMRkjSJkcqDoSJFoEiJoYZJoOfXohEBoMGQocqXbBAFbBXFbBaFbBNDbBGBbBLXbBTBbBWDbGJYbIJHbFQqbFpQlDgQlOrFlVJRjGEBjZJRnXvJnXbBnEfHnOPDngJRnxfXnUJWwXEJwNpJwDpBwEfXwrEBMDCJMDGHMDIJMLJDcQGDcQpHcqXccqNFcqCXcFCJRBSBRBGBRBEJRBpQTBNFTBQJTBpBTBVXTFABTFSBTFCFTFGBTFMDrXCJrXLDrDNJrEfHrFQJrFitWNjdWNTR\",\n    // 6-kana words\n    \"AKLJMANOPFASNJIAEJWXAYJNRAIIbRAIcdaAeEfDAgidRAdjNYAMYEJAMIbRAFNJBAFpJFBBIJYBDZJFBSiJhBGdEBBEJfXBEJqXBEJWRBpaUJBLXrXBIYJMBOcfXBeEfFBestXBjNJRBcDJOBFEqXXNvJRXDMBhXCJNYXOAWpXONJWXHDEBXeIaRXhYJDXZJSJXMDJOXcASJXFVJXaBQqXaBZJFasXdQaFSJQaFEfXaFpJHaFOqXKBNSRKXvJBKQJhXKEJQJKEJGFKINJBKIJjNKgJNSKVElmKVhEBKiJGFKlBgJKjnUJKwsJYKMFIJKFNJDKFIJFKFOfXNJBSFNJBCXNBpJFNJBvQNJBMBNJLJXNJOqXNJeCXNJeGFNdsJCNbTKFNwXUJQNFEPQDiJcQDMSJQSFpBQGMQJQJeOcQyCJEQUJEBQJFBrQFEJqDXDJFDJXpBDJXIMDGiJhDIJGRDJeYcDHrDJDVXgFDkAWpDkIgRDjDEqDMvJRDJFNFDJFIBSKclmSJQOFSJQVHSJQjDSJGJBSJGJFSECJoSHEJqSJHTBSJVJDSViJYSZJNBSJsJDSFSJFSFEfXSJFLXCBUJVCJXSBCJXpBCXVJXCJXsXCJXdFCJNJHCLIJgCHiJFCVNJMChCJhCUHEJCsJTRCJdYcCoQJCCFEfXCFIJgCFUJxCFstFGJBaQGJBIDGQJqXGYJNRGJHKFGeQqDGHEJFGJeLXGHIiJGHdBlGUJEBGkIJTGFQPDGJFEqEAGegEJIJBEJVJXEhQJTEiJNcEJZJFEJoEqEjDEqEPDsXEPGJBEPOqXEPeQFEfDiDEJfEFEfepQEfMiJEqXNBEqDIDEqeSFEqVJXEMvJRYXNJDYXEJHYKVJcYYJEBYJeEcYJUqXYFpJFYFstXpAZJMpBSJFpNBNFpeQPDpHLJDpHIJFpHgJFpeitFpHZJFpJFADpFSJFpJFCJpFOqXpFitBpJFZJLXIJFLIJgRLVNJWLVHJMLwNpJLFGJBLFLJDLFOqXLJFUJIBDJXIBGJBIJBYQIJBIBIBOqXIBcqDIEGJFILNJTIIJEBIOiJhIJeNBIJeIBIhiJIIWoTRIJFAHIJFpBIJFuHIFUtFIJFTHOSBYJOEcqXOHEJqOvBpFOkVJrObBVJOncqDOcNJkHhNJRHuHJuHdMhBgBUqXgBsJXgONJBgHNJDgHHJQgJeitgHsJXgJyNagyDJBgZJDrgsVJQgkEJNgkjSJgJFAHgFCJDgFZtMVJXNFVXQfXVJXDJVXoQJVQVJQVDEfXVDvJHVEqNFVeQfXVHpJFVHxfXVVJSRVVmaRVlIJOhCXVJhHjYkhxCJVhWVUJhWiJcxBNJIxeEqDxfXBFxcFEPxFSJFxFYJXyBDQJydaUJyFOPDuYCJYuLvJRuHLJXuZJLDuFOPDuFZJHuFcqXmKHJdmCQJcmOsVJiJAGFitLCFieOfXiestXiZJMEikNJQirXzFiFQqXiFIJFiFZJFiFvtFUHpJFUteIcUteOcUVCJkUhdHcUbEJEUJqXQUMNJhURjYkUFitFZDGJHZJIxDZJVJXZJFDJZJFpQvBNJBvBSJFvJxBrseQqDsVFVJdFLJDkEJNBkmNJYkFLJDoQJOPoGsJRoEAHBoEJfFbBQqDbBZJHbFVJXlFIJBjYIrXjeitcjjCEBjWMNBwXQfXwXOaFwDsJXwCJTRwrCZJMDNJQcDDJFcqDOPRYiJFTBsJXTQIJBTFEfXTFLJDrXEJFrEJXMrFZJFWEJdEWYTlm\",\n    // 7-kana words\n    \"ABCDEFACNJTRAMBDJdAcNJVXBLNJEBXSIdWRXErNJkXYDJMBXZJCJaXMNJaYKKVJKcKDEJqXKDcNJhKVJrNYKbgJVXKFVJSBNBYBwDNJeQfXNJeEqXNhGJWENJFiJRQlIJbEQJfXxDQqXcfXQFNDEJQFwXUJDYcnUJDJIBgQDIUJTRDJFEqDSJQSJFSJQIJFSOPeZtSJFZJHCJXQfXCTDEqFGJBSJFGJBOfXGJBcqXGJHNJDGJRLiJEJfXEqEJFEJPEFpBEJYJBZJFYBwXUJYiJMEBYJZJyTYTONJXpQMFXFpeGIDdpJFstXpJFcPDLBVSJRLHQJqXLJFZJFIJBNJDIJBUqXIBkFDJIJEJPTIYJGWRIJeQPDIJeEfHIJFsJXOqGDSFHXEJqXgJCsJCgGQJqXgdQYJEgFMFNBgJFcqDVJwXUJVJFZJchIgJCCxOEJqXxOwXUJyDJBVRuscisciJBiJBieUtqXiJFDJkiFsJXQUGEZJcUJFsJXZtXIrXZDZJDrZJFNJDZJFstXvJFQqXvJFCJEsJXQJqkhkNGBbDJdTRbYJMEBlDwXUJMEFiJFcfXNJDRcNJWMTBLJXC\",\n    // 8-kana words\n    \"BraFUtHBFSJFdbNBLJXVJQoYJNEBSJBEJfHSJHwXUJCJdAZJMGjaFVJXEJPNJBlEJfFiJFpFbFEJqIJBVJCrIBdHiJhOPFChvJVJZJNJWxGFNIFLueIBQJqUHEJfUFstOZJDrlXEASJRlXVJXSFwVJNJWD\",\n    // 9-kana words\n    \"QJEJNNJDQJEJIBSFQJEJxegBQJEJfHEPSJBmXEJFSJCDEJqXLXNJFQqXIcQsFNJFIFEJqXUJgFsJXIJBUJEJfHNFvJxEqXNJnXUJFQqD\",\n    // 10-kana words\n    \"IJBEJqXZJ\"\n];\n// Maps each character into its kana value (the index)\nconst mapping = \"~~AzB~X~a~KN~Q~D~S~C~G~E~Y~p~L~I~O~eH~g~V~hxyumi~~U~~Z~~v~~s~~dkoblPjfnqwMcRTr~W~~~F~~~~~Jt\";\nlet wordlist$4 = null;\nfunction hex(word) {\n    return hexlify(toUtf8Bytes(word));\n}\nconst KiYoKu = \"0xe3818de38284e3818f\";\nconst KyoKu = \"0xe3818de38283e3818f\";\nfunction loadWords$4(lang) {\n    if (wordlist$4 !== null) {\n        return;\n    }\n    wordlist$4 = [];\n    // Transforms for normalizing (sort is a not quite UTF-8)\n    const transform = {};\n    // Delete the diacritic marks\n    transform[toUtf8String([227, 130, 154])] = false;\n    transform[toUtf8String([227, 130, 153])] = false;\n    // Some simple transforms that sort out most of the order\n    transform[toUtf8String([227, 130, 133])] = toUtf8String([227, 130, 134]);\n    transform[toUtf8String([227, 129, 163])] = toUtf8String([227, 129, 164]);\n    transform[toUtf8String([227, 130, 131])] = toUtf8String([227, 130, 132]);\n    transform[toUtf8String([227, 130, 135])] = toUtf8String([227, 130, 136]);\n    // Normalize words using the transform\n    function normalize(word) {\n        let result = \"\";\n        for (let i = 0; i < word.length; i++) {\n            let kana = word[i];\n            const target = transform[kana];\n            if (target === false) {\n                continue;\n            }\n            if (target) {\n                kana = target;\n            }\n            result += kana;\n        }\n        return result;\n    }\n    // Sort how the Japanese list is sorted\n    function sortJapanese(a, b) {\n        a = normalize(a);\n        b = normalize(b);\n        if (a < b) {\n            return -1;\n        }\n        if (a > b) {\n            return 1;\n        }\n        return 0;\n    }\n    // Load all the words\n    for (let length = 3; length <= 9; length++) {\n        const d = data[length - 3];\n        for (let offset = 0; offset < d.length; offset += length) {\n            const word = [];\n            for (let i = 0; i < length; i++) {\n                const k = mapping.indexOf(d[offset + i]);\n                word.push(227);\n                word.push((k & 0x40) ? 130 : 129);\n                word.push((k & 0x3f) + 128);\n            }\n            wordlist$4.push(toUtf8String(word));\n        }\n    }\n    wordlist$4.sort(sortJapanese);\n    // For some reason kyoku and kiyoku are flipped in node (!!).\n    // The order SHOULD be:\n    //   - kyoku\n    //   - kiyoku\n    // This should ignore \"if\", but that doesn't work here??\n    /* istanbul ignore next */\n    if (hex(wordlist$4[442]) === KiYoKu && hex(wordlist$4[443]) === KyoKu) {\n        const tmp = wordlist$4[442];\n        wordlist$4[442] = wordlist$4[443];\n        wordlist$4[443] = tmp;\n    }\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0xcb36b09e6baa935787fd762ce65e80b0c6a8dabdfbc3a7f86ac0e2c4fd111600\") {\n        wordlist$4 = null;\n        throw new Error(\"BIP39 Wordlist for ja (Japanese) FAILED\");\n    }\n}\nclass LangJa extends Wordlist {\n    constructor() {\n        super(\"ja\");\n    }\n    getWord(index) {\n        loadWords$4(this);\n        return wordlist$4[index];\n    }\n    getWordIndex(word) {\n        loadWords$4(this);\n        return wordlist$4.indexOf(word);\n    }\n    split(mnemonic) {\n        logger$k.checkNormalize();\n        return mnemonic.split(/(?:\\u3000| )+/g);\n    }\n    join(words) {\n        return words.join(\"\\u3000\");\n    }\n}\nconst langJa = new LangJa();\nWordlist.register(langJa);\n//# sourceMappingURL=lang-ja.js.map\n\nconst data$1 = [\n    \"OYAa\",\n    \"ATAZoATBl3ATCTrATCl8ATDloATGg3ATHT8ATJT8ATJl3ATLlvATLn4ATMT8ATMX8ATMboATMgoAToLbAToMTATrHgATvHnAT3AnAT3JbAT3MTAT8DbAT8JTAT8LmAT8MYAT8MbAT#LnAUHT8AUHZvAUJXrAUJX8AULnrAXJnvAXLUoAXLgvAXMn6AXRg3AXrMbAX3JTAX3QbAYLn3AZLgvAZrSUAZvAcAZ8AaAZ8AbAZ8AnAZ8HnAZ8LgAZ8MYAZ8MgAZ8OnAaAboAaDTrAaFTrAaJTrAaJboAaLVoAaMXvAaOl8AaSeoAbAUoAbAg8AbAl4AbGnrAbMT8AbMXrAbMn4AbQb8AbSV8AbvRlAb8AUAb8AnAb8HgAb8JTAb8NTAb8RbAcGboAcLnvAcMT8AcMX8AcSToAcrAaAcrFnAc8AbAc8MgAfGgrAfHboAfJnvAfLV8AfLkoAfMT8AfMnoAfQb8AfScrAfSgrAgAZ8AgFl3AgGX8AgHZvAgHgrAgJXoAgJX8AgJboAgLZoAgLn4AgOX8AgoATAgoAnAgoCUAgoJgAgoLXAgoMYAgoSeAgrDUAgrJTAhrFnAhrLjAhrQgAjAgoAjJnrAkMX8AkOnoAlCTvAlCV8AlClvAlFg4AlFl6AlFn3AloSnAlrAXAlrAfAlrFUAlrFbAlrGgAlrOXAlvKnAlvMTAl3AbAl3MnAnATrAnAcrAnCZ3AnCl8AnDg8AnFboAnFl3AnHX4AnHbrAnHgrAnIl3AnJgvAnLXoAnLX4AnLbrAnLgrAnLhrAnMXoAnMgrAnOn3AnSbrAnSeoAnvLnAn3OnCTGgvCTSlvCTvAUCTvKnCTvNTCT3CZCT3GUCT3MTCT8HnCUCZrCULf8CULnvCU3HnCU3JUCY6NUCbDb8CbFZoCbLnrCboOTCboScCbrFnCbvLnCb8AgCb8HgCb$LnCkLfoClBn3CloDUDTHT8DTLl3DTSU8DTrAaDTrLXDTrLjDTrOYDTrOgDTvFXDTvFnDT3HUDT3LfDUCT9DUDT4DUFVoDUFV8DUFkoDUGgrDUJnrDULl8DUMT8DUMXrDUMX4DUMg8DUOUoDUOgvDUOg8DUSToDUSZ8DbDXoDbDgoDbGT8DbJn3DbLg3DbLn4DbMXrDbMg8DbOToDboJXGTClvGTDT8GTFZrGTLVoGTLlvGTLl3GTMg8GTOTvGTSlrGToCUGTrDgGTrJYGTrScGTtLnGTvAnGTvQgGUCZrGUDTvGUFZoGUHXrGULnvGUMT8GUoMgGXoLnGXrMXGXrMnGXvFnGYLnvGZOnvGZvOnGZ8LaGZ8LmGbAl3GbDYvGbDlrGbHX3GbJl4GbLV8GbLn3GbMn4GboJTGboRfGbvFUGb3GUGb4JnGgDX3GgFl$GgJlrGgLX6GgLZoGgLf8GgOXoGgrAgGgrJXGgrMYGgrScGgvATGgvOYGnAgoGnJgvGnLZoGnLg3GnLnrGnQn8GnSbrGnrMgHTClvHTDToHTFT3HTQT8HToJTHToJgHTrDUHTrMnHTvFYHTvRfHT8MnHT8SUHUAZ8HUBb4HUDTvHUoMYHXFl6HXJX6HXQlrHXrAUHXrMnHXrSbHXvFYHXvKXHX3LjHX3MeHYvQlHZrScHZvDbHbAcrHbFT3HbFl3HbJT8HbLTrHbMT8HbMXrHbMbrHbQb8HbSX3HboDbHboJTHbrFUHbrHgHbrJTHb8JTHb8MnHb8QgHgAlrHgDT3HgGgrHgHgrHgJTrHgJT8HgLX@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!Ln$CTGXMnCToLZ4CTrHT8CT3JTrCT3RZrCT#GTvCU6GgvCU8Db8CU8GZrCU8HT8CboLl3CbrGgrCbrMU8Cb8DT3Cb8GnrCb8LX4Cb8MT8Cb8ObrCgrGgvCgrKX4Cl8FZoDTrAbvDTrDboDTrGT6DTrJgrDTrMX3DTrRZrDTrRg8DTvAVvDTvFZoDT3DT8DT3Ln3DT4HZrDT4MT8DT8AlrDT8MT8DUAkGbDUDbJnDYLnQlDbDUOYDbMTAnDbMXSnDboAT3DboFn4DboLnvDj6JTrGTCgFTGTGgFnGTJTMnGTLnPlGToJT8GTrCT3GTrLVoGTrLnvGTrMX3GTrMboGTvKl3GZClFnGZrDT3GZ8DTrGZ8FZ8GZ8MXvGZ8On8GZ8ST3GbCnQXGbMbFnGboFboGboJg3GboMXoGb3JTvGb3JboGb3Mn6Gb3Qb8GgDXLjGgMnAUGgrDloGgrHX4GgrSToGgvAXrGgvAZvGgvFbrGgvLl3GgvMnvGnDnLXGnrATrGnrMboGnuLl3HTATMnHTAgCnHTCTCTHTrGTvHTrHTvHTrJX8HTrLl8HTrMT8HTrMgoHTrOTrHTuOn3HTvAZrHTvDTvHTvGboHTvJU8HTvLl3HTvMXrHTvQb4HT4GT6HT4JT8HT4Jb#HT8Al3HT8GZrHT8GgrHT8HX4HT8Jb8HT8JnoHT8LTrHT8LgvHT8SToHT8SV8HUoJUoHUoJX8HUoLnrHXrLZoHXvAl3HX3LnrHX4FkvHX4LhrHX4MXoHX4OnoHZrAZ8HZrDb8HZrGZ8HZrJnrHZvGZ8HZvLnvHZ8JnvHZ8LhrHbCXJlHbMTAnHboJl4HbpLl3HbrJX8HbrLnrHbrMnvHbvRYrHgoSTrHgrFV8HgrGZ8HgrJXoHgrRnvHgvBb!HgvGTrHgvHX4HgvHn!HgvLTrHgvSU8HnDnLbHnFbJbHnvDn8Hn6GgvHn!BTvJTCTLnJTQgFnJTrAnvJTrLX4JTrOUoJTvFn3JTvLnrJTvNToJT3AgoJT3Jn4JT3LhvJT3ObrJT8AcrJT8Al3JT8JT8JT8JnoJT8LX4JT8LnrJT8MX3JT8Rg3JT8Sc8JUoBTvJU8AToJU8GZ8JU8GgvJU8JTrJU8JXrJU8JnrJU8LnvJU8ScvJXHnJlJXrGgvJXrJU8JXrLhrJXrMT8JXrMXrJXrQUoJXvCTvJXvGZ8JXvGgrJXvQT8JX8Ab8JX8DT8JX8GZ8JX8HZvJX8LnrJX8MT8JX8MXoJX8MnvJX8ST3JYGnCTJbAkGbJbCTAnJbLTAcJboDT3JboLb6JbrAnvJbrCn3JbrDl8JbrGboJbrIZoJbrJnvJbrMnvJbrQb4Jb8RZrJeAbAnJgJnFbJgScAnJgrATrJgvHZ8JgvMn4JlJlFbJlLiQXJlLjOnJlRbOlJlvNXoJlvRl3Jl4AcrJl8AUoJl8MnrJnFnMlJnHgGbJnoDT8JnoFV8JnoGgvJnoIT8JnoQToJnoRg3JnrCZ3JnrGgrJnrHTvJnrLf8JnrOX8JnvAT3JnvFZoJnvGT8JnvJl4JnvMT8JnvMX8JnvOXrJnvPX6JnvSX3JnvSZrJn3MT8Jn3MX8Jn3RTrLTATKnLTJnLTLTMXKnLTRTQlLToGb8LTrAZ8LTrCZ8LTrDb8LTrHT8LT3PX6LT4FZoLT$CTvLT$GgrLUvHX3LVoATrLVoAgoLVoJboLVoMX3LVoRg3LV8CZ3LV8FZoLV8GTvLXrDXoLXrFbrLXvAgvLXvFlrLXvLl3LXvRn6LX4Mb8LX8GT8LYCXMnLYrMnrLZoSTvLZrAZvLZrAloLZrFToLZrJXvLZrJboLZrJl4LZrLnrLZrMT8LZrOgvLZrRnvLZrST4LZvMX8LZvSlvLZ8AgoLZ8CT3LZ8JT8LZ8LV8LZ8LZoLZ8Lg8LZ8SV8LZ8SbrLZ$HT8LZ$Mn4La6CTvLbFbMnLbRYFTLbSnFZLboJT8LbrAT9LbrGb3LbrQb8LcrJX8LcrMXrLerHTvLerJbrLerNboLgrDb8LgrGZ8LgrHTrLgrMXrLgrSU8LgvJTrLgvLl3Lg6Ll3LhrLnrLhrMT8LhvAl4LiLnQXLkoAgrLkoJT8LkoJn4LlrSU8Ll3FZoLl3HTrLl3JX8Ll3JnoLl3LToLmLeFbLnDUFbLnLVAnLnrATrLnrAZoLnrAb8LnrAlrLnrGgvLnrJU8LnrLZrLnrLhrLnrMb8LnrOXrLnrSZ8LnvAb4LnvDTrLnvDl8LnvHTrLnvHbrLnvJT8LnvJU8LnvJbrLnvLhvLnvMX8LnvMb8LnvNnoLnvSU8Ln3Al3Ln4FZoLn4GT6Ln4JgvLn4LhrLn4MT8Ln4SToMToCZrMToJX8MToLX4MToLf8MToRg3MTrEloMTvGb6MT3BTrMT3Lb6MT8AcrMT8AgrMT8GZrMT8JnoMT8LnrMT8MX3MUOUAnMXAbFnMXoAloMXoJX8MXoLf8MXoLl8MXrAb8MXrDTvMXrGT8MXrGgrMXrHTrMXrLf8MXrMU8MXrOXvMXrQb8MXvGT8MXvHTrMXvLVoMX3AX3MX3Jn3MX3LhrMX3MX3MX4AlrMX4OboMX8GTvMX8GZrMX8GgrMX8JT8MX8JX8MX8LhrMX8MT8MYDUFbMYMgDbMbGnFfMbvLX4MbvLl3Mb8Mb8Mb8ST4MgGXCnMg8ATrMg8AgoMg8CZrMg8DTrMg8DboMg8HTrMg8JgrMg8LT8MloJXoMl8AhrMl8JT8MnLgAUMnoJXrMnoLX4MnoLhrMnoMT8MnrAl4MnrDb8MnrOTvMnrOgvMnrQb8MnrSU8MnvGgrMnvHZ8Mn3MToMn4DTrMn4LTrMn4Mg8NnBXAnOTFTFnOToAToOTrGgvOTrJX8OT3JXoOT6MTrOT8GgrOT8HTpOT8MToOUoHT8OUoJT8OUoLn3OXrAgoOXrDg8OXrMT8OXvSToOX6CTvOX8CZrOX8OgrOb6HgvOb8AToOb8MT8OcvLZ8OgvAlrOgvHTvOgvJTrOgvJnrOgvLZrOgvLn4OgvMT8OgvRTrOg8AZoOg8DbvOnrOXoOnvJn4OnvLhvOnvRTrOn3GgoOn3JnvOn6JbvOn8OTrPTGYFTPbBnFnPbGnDnPgDYQTPlrAnvPlrETvPlrLnvPlrMXvPlvFX4QTMTAnQTrJU8QYCnJlQYJlQlQbGTQbQb8JnrQb8LZoQb8LnvQb8MT8Qb8Ml8Qb8ST4QloAl4QloHZvQloJX8QloMn8QnJZOlRTrAZvRTrDTrRTvJn4RTvLhvRT4Jb8RZrAZrRZ8AkrRZ8JU8RZ8LV8RZ8LnvRbJlQXRg3GboRg3MnvRg8AZ8Rg8JboRg8Jl4RnLTCbRnvFl3RnvQb8SToAl4SToCZrSToFZoSToHXrSToJU8SToJgvSToJl4SToLhrSToMX3STrAlvSTrCT9STrCgrSTrGgrSTrHXrSTrHboSTrJnoSTrNboSTvLnrST4AZoST8Ab8ST8JT8SUoJn3SU6HZ#SU6JTvSU8Db8SU8HboSU8LgrSV8JT8SZrAcrSZrAl3SZrJT8SZrJnvSZrMT8SZvLUoSZ4FZoSZ8JnoSZ8RZrScoLnrScoMT8ScoMX8ScrAT4ScrAZ8ScrLZ8ScrLkvScvDb8ScvLf8ScvNToSgrFZrShvKnrSloHUoSloLnrSlrMXoSl8HgrSmrJUoSn3BX6\",\n    \"ATFlOn3ATLgrDYAT4MTAnAT8LTMnAYJnRTrAbGgJnrAbLV8LnAbvNTAnAeFbLg3AgOYMXoAlQbFboAnDboAfAnJgoJTBToDgAnBUJbAl3BboDUAnCTDlvLnCTFTrSnCYoQTLnDTwAbAnDUDTrSnDUHgHgrDX8LXFnDbJXAcrETvLTLnGTFTQbrGTMnGToGT3DUFbGUJlPX3GbQg8LnGboJbFnGb3GgAYGgAg8ScGgMbAXrGgvAbAnGnJTLnvGnvATFgHTDT6ATHTrDlJnHYLnMn8HZrSbJTHZ8LTFnHbFTJUoHgSeMT8HgrLjAnHgvAbAnHlFUrDlHnDgvAnHnHTFT3HnQTGnrJTAaMXvJTGbCn3JTOgrAnJXvAXMnJbMg8SnJbMnRg3Jb8LTMnJnAl3OnJnGYrQlJnJlQY3LTDlCn3LTJjLg3LTLgvFXLTMg3GTLV8HUOgLXFZLg3LXNXrMnLX8QXFnLX9AlMYLYLXPXrLZAbJU8LZDUJU8LZMXrSnLZ$AgFnLaPXrDULbFYrMnLbMn8LXLboJgJgLeFbLg3LgLZrSnLgOYAgoLhrRnJlLkCTrSnLkOnLhrLnFX%AYLnFZoJXLnHTvJbLnLloAbMTATLf8MTHgJn3MTMXrAXMT3MTFnMUITvFnMXFX%AYMXMXvFbMXrFTDbMYAcMX3MbLf8SnMb8JbFnMgMXrMTMgvAXFnMgvGgCmMnAloSnMnFnJTrOXvMXSnOX8HTMnObJT8ScObLZFl3ObMXCZoPTLgrQXPUFnoQXPU3RXJlPX3RkQXPbrJXQlPlrJbFnQUAhrDbQXGnCXvQYLnHlvQbLfLnvRTOgvJbRXJYrQlRYLnrQlRbLnrQlRlFT8JlRlFnrQXSTClCn3STHTrAnSTLZQlrSTMnGTrSToHgGbSTrGTDnSTvGXCnST3HgFbSU3HXAXSbAnJn3SbFT8LnScLfLnv\",\n    \"AT3JgJX8AT8FZoSnAT8JgFV8AT8LhrDbAZ8JT8DbAb8GgLhrAb8SkLnvAe8MT8SnAlMYJXLVAl3GYDTvAl3LfLnvBUDTvLl3CTOn3HTrCT3DUGgrCU8MT8AbCbFTrJUoCgrDb8MTDTLV8JX8DTLnLXQlDT8LZrSnDUQb8FZ8DUST4JnvDb8ScOUoDj6GbJl4GTLfCYMlGToAXvFnGboAXvLnGgAcrJn3GgvFnSToGnLf8JnvGn#HTDToHTLnFXJlHTvATFToHTvHTDToHTvMTAgoHT3STClvHT4AlFl6HT8HTDToHUoDgJTrHUoScMX3HbRZrMXoHboJg8LTHgDb8JTrHgMToLf8HgvLnLnoHnHn3HT4Hn6MgvAnJTJU8ScvJT3AaQT8JT8HTrAnJXrRg8AnJbAloMXoJbrATFToJbvMnoSnJgDb6GgvJgDb8MXoJgSX3JU8JguATFToJlPYLnQlJlQkDnLbJlQlFYJlJl8Lf8OTJnCTFnLbJnLTHXMnJnLXGXCnJnoFfRg3JnrMYRg3Jn3HgFl3KT8Dg8LnLTRlFnPTLTvPbLbvLVoSbrCZLXMY6HT3LXNU7DlrLXNXDTATLX8DX8LnLZDb8JU8LZMnoLhrLZSToJU8LZrLaLnrLZvJn3SnLZ8LhrSnLaJnoMT8LbFlrHTvLbrFTLnrLbvATLlvLb6OTFn3LcLnJZOlLeAT6Mn4LeJT3ObrLg6LXFlrLhrJg8LnLhvDlPX4LhvLfLnvLj6JTFT3LnFbrMXoLnQluCTvLnrQXCY6LnvLfLnvLnvMgLnvLnvSeLf8MTMbrJn3MT3JgST3MT8AnATrMT8LULnrMUMToCZrMUScvLf8MXoDT8SnMX6ATFToMX8AXMT8MX8FkMT8MX8HTrDUMX8ScoSnMYJT6CTvMgAcrMXoMg8SToAfMlvAXLg3MnFl3AnvOT3AnFl3OUoATHT8OU3RnLXrOXrOXrSnObPbvFn6Og8HgrSnOg8OX8DbPTvAgoJgPU3RYLnrPXrDnJZrPb8CTGgvPlrLTDlvPlvFUJnoQUvFXrQlQeMnoAl3QlrQlrSnRTFTrJUoSTDlLiLXSTFg6HT3STJgoMn4STrFTJTrSTrLZFl3ST4FnMXoSUrDlHUoScvHTvSnSfLkvMXo\",\n    \"AUoAcrMXoAZ8HboAg8AbOg6ATFgAg8AloMXoAl3AT8JTrAl8MX8MXoCT3SToJU8Cl8Db8MXoDT8HgrATrDboOT8MXoGTOTrATMnGT8LhrAZ8GnvFnGnQXHToGgvAcrHTvAXvLl3HbrAZoMXoHgBlFXLg3HgMnFXrSnHgrSb8JUoHn6HT8LgvITvATrJUoJUoLZrRnvJU8HT8Jb8JXvFX8QT8JXvLToJTrJYrQnGnQXJgrJnoATrJnoJU8ScvJnvMnvMXoLTCTLgrJXLTJlRTvQlLbRnJlQYvLbrMb8LnvLbvFn3RnoLdCVSTGZrLeSTvGXCnLg3MnoLn3MToLlrETvMT8SToAl3MbrDU6GTvMb8LX4LhrPlrLXGXCnSToLf8Rg3STrDb8LTrSTvLTHXMnSb3RYLnMnSgOg6ATFg\",\n    \"HUDlGnrQXrJTrHgLnrAcJYMb8DULc8LTvFgGnCk3Mg8JbAnLX4QYvFYHnMXrRUoJnGnvFnRlvFTJlQnoSTrBXHXrLYSUJgLfoMT8Se8DTrHbDb\",\n    \"AbDl8SToJU8An3RbAb8ST8DUSTrGnrAgoLbFU6Db8LTrMg8AaHT8Jb8ObDl8SToJU8Pb3RlvFYoJl\"\n];\nconst codes = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*\";\nfunction getHangul(code) {\n    if (code >= 40) {\n        code = code + 168 - 40;\n    }\n    else if (code >= 19) {\n        code = code + 97 - 19;\n    }\n    return toUtf8String([225, (code >> 6) + 132, (code & 0x3f) + 128]);\n}\nlet wordlist$5 = null;\nfunction loadWords$5(lang) {\n    if (wordlist$5 != null) {\n        return;\n    }\n    wordlist$5 = [];\n    data$1.forEach((data, length) => {\n        length += 4;\n        for (let i = 0; i < data.length; i += length) {\n            let word = \"\";\n            for (let j = 0; j < length; j++) {\n                word += getHangul(codes.indexOf(data[i + j]));\n            }\n            wordlist$5.push(word);\n        }\n    });\n    wordlist$5.sort();\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0xf9eddeace9c5d3da9c93cf7d3cd38f6a13ed3affb933259ae865714e8a3ae71a\") {\n        wordlist$5 = null;\n        throw new Error(\"BIP39 Wordlist for ko (Korean) FAILED\");\n    }\n}\nclass LangKo extends Wordlist {\n    constructor() {\n        super(\"ko\");\n    }\n    getWord(index) {\n        loadWords$5(this);\n        return wordlist$5[index];\n    }\n    getWordIndex(word) {\n        loadWords$5(this);\n        return wordlist$5.indexOf(word);\n    }\n}\nconst langKo = new LangKo();\nWordlist.register(langKo);\n//# sourceMappingURL=lang-ko.js.map\n\nconst words$4 = \"AbacoAbbaglioAbbinatoAbeteAbissoAbolireAbrasivoAbrogatoAccadereAccennoAccusatoAcetoneAchilleAcidoAcquaAcreAcrilicoAcrobataAcutoAdagioAddebitoAddomeAdeguatoAderireAdipeAdottareAdulareAffabileAffettoAffissoAffrantoAforismaAfosoAfricanoAgaveAgenteAgevoleAggancioAgireAgitareAgonismoAgricoloAgrumetoAguzzoAlabardaAlatoAlbatroAlberatoAlboAlbumeAlceAlcolicoAlettoneAlfaAlgebraAlianteAlibiAlimentoAllagatoAllegroAllievoAllodolaAllusivoAlmenoAlogenoAlpacaAlpestreAltalenaAlternoAlticcioAltroveAlunnoAlveoloAlzareAmalgamaAmanitaAmarenaAmbitoAmbratoAmebaAmericaAmetistaAmicoAmmassoAmmendaAmmirareAmmonitoAmoreAmpioAmpliareAmuletoAnacardoAnagrafeAnalistaAnarchiaAnatraAncaAncellaAncoraAndareAndreaAnelloAngeloAngolareAngustoAnimaAnnegareAnnidatoAnnoAnnuncioAnonimoAnticipoAnziApaticoAperturaApodeApparireAppetitoAppoggioApprodoAppuntoAprileArabicaArachideAragostaAraldicaArancioAraturaArazzoArbitroArchivioArditoArenileArgentoArgineArgutoAriaArmoniaArneseArredatoArringaArrostoArsenicoArsoArteficeArzilloAsciuttoAscoltoAsepsiAsetticoAsfaltoAsinoAsolaAspiratoAsproAssaggioAsseAssolutoAssurdoAstaAstenutoAsticeAstrattoAtavicoAteismoAtomicoAtonoAttesaAttivareAttornoAttritoAttualeAusilioAustriaAutistaAutonomoAutunnoAvanzatoAvereAvvenireAvvisoAvvolgereAzioneAzotoAzzimoAzzurroBabeleBaccanoBacinoBacoBadessaBadilataBagnatoBaitaBalconeBaldoBalenaBallataBalzanoBambinoBandireBaraondaBarbaroBarcaBaritonoBarlumeBaroccoBasilicoBassoBatostaBattutoBauleBavaBavosaBeccoBeffaBelgioBelvaBendaBenevoleBenignoBenzinaBereBerlinaBetaBibitaBiciBidoneBifidoBigaBilanciaBimboBinocoloBiologoBipedeBipolareBirbanteBirraBiscottoBisestoBisnonnoBisonteBisturiBizzarroBlandoBlattaBollitoBonificoBordoBoscoBotanicoBottinoBozzoloBraccioBradipoBramaBrancaBravuraBretellaBrevettoBrezzaBrigliaBrillanteBrindareBroccoloBrodoBronzinaBrulloBrunoBubboneBucaBudinoBuffoneBuioBulboBuonoBurloneBurrascaBussolaBustaCadettoCaducoCalamaroCalcoloCalesseCalibroCalmoCaloriaCambusaCamerataCamiciaCamminoCamolaCampaleCanapaCandelaCaneCaninoCanottoCantinaCapaceCapelloCapitoloCapogiroCapperoCapraCapsulaCarapaceCarcassaCardoCarismaCarovanaCarrettoCartolinaCasaccioCascataCasermaCasoCassoneCastelloCasualeCatastaCatenaCatrameCautoCavilloCedibileCedrataCefaloCelebreCellulareCenaCenoneCentesimoCeramicaCercareCertoCerumeCervelloCesoiaCespoCetoChelaChiaroChiccaChiedereChimeraChinaChirurgoChitarraCiaoCiclismoCifrareCignoCilindroCiottoloCircaCirrosiCitricoCittadinoCiuffoCivettaCivileClassicoClinicaCloroCoccoCodardoCodiceCoerenteCognomeCollareColmatoColoreColposoColtivatoColzaComaCometaCommandoComodoComputerComuneConcisoCondurreConfermaCongelareConiugeConnessoConoscereConsumoContinuoConvegnoCopertoCopioneCoppiaCopricapoCorazzaCordataCoricatoCorniceCorollaCorpoCorredoCorsiaCorteseCosmicoCostanteCotturaCovatoCratereCravattaCreatoCredereCremosoCrescitaCretaCricetoCrinaleCrisiCriticoCroceCronacaCrostataCrucialeCruscaCucireCuculoCuginoCullatoCupolaCuratoreCursoreCurvoCuscinoCustodeDadoDainoDalmataDamerinoDanielaDannosoDanzareDatatoDavantiDavveroDebuttoDecennioDecisoDeclinoDecolloDecretoDedicatoDefinitoDeformeDegnoDelegareDelfinoDelirioDeltaDemenzaDenotatoDentroDepositoDerapataDerivareDerogaDescrittoDesertoDesiderioDesumereDetersivoDevotoDiametroDicembreDiedroDifesoDiffusoDigerireDigitaleDiluvioDinamicoDinnanziDipintoDiplomaDipoloDiradareDireDirottoDirupoDisagioDiscretoDisfareDisgeloDispostoDistanzaDisumanoDitoDivanoDiveltoDividereDivoratoDobloneDocenteDoganaleDogmaDolceDomatoDomenicaDominareDondoloDonoDormireDoteDottoreDovutoDozzinaDragoDruidoDubbioDubitareDucaleDunaDuomoDupliceDuraturoEbanoEccessoEccoEclissiEconomiaEderaEdicolaEdileEditoriaEducareEgemoniaEgliEgoismoEgregioElaboratoElargireEleganteElencatoElettoElevareElficoElicaElmoElsaElusoEmanatoEmblemaEmessoEmiroEmotivoEmozioneEmpiricoEmuloEndemicoEnduroEnergiaEnfasiEnotecaEntrareEnzimaEpatiteEpilogoEpisodioEpocaleEppureEquatoreErarioErbaErbosoEredeEremitaErigereErmeticoEroeErosivoErranteEsagonoEsameEsanimeEsaudireEscaEsempioEsercitoEsibitoEsigenteEsistereEsitoEsofagoEsortatoEsosoEspansoEspressoEssenzaEssoEstesoEstimareEstoniaEstrosoEsultareEtilicoEtnicoEtruscoEttoEuclideoEuropaEvasoEvidenzaEvitatoEvolutoEvvivaFabbricaFaccendaFachiroFalcoFamigliaFanaleFanfaraFangoFantasmaFareFarfallaFarinosoFarmacoFasciaFastosoFasulloFaticareFatoFavolosoFebbreFecolaFedeFegatoFelpaFeltroFemminaFendereFenomenoFermentoFerroFertileFessuraFestivoFettaFeudoFiabaFiduciaFifaFiguratoFiloFinanzaFinestraFinireFioreFiscaleFisicoFiumeFlaconeFlamencoFleboFlemmaFloridoFluenteFluoroFobicoFocacciaFocosoFoderatoFoglioFolataFolcloreFolgoreFondenteFoneticoFoniaFontanaForbitoForchettaForestaFormicaFornaioForoFortezzaForzareFosfatoFossoFracassoFranaFrassinoFratelloFreccettaFrenataFrescoFrigoFrollinoFrondeFrugaleFruttaFucilataFucsiaFuggenteFulmineFulvoFumanteFumettoFumosoFuneFunzioneFuocoFurboFurgoneFuroreFusoFutileGabbianoGaffeGalateoGallinaGaloppoGamberoGammaGaranziaGarboGarofanoGarzoneGasdottoGasolioGastricoGattoGaudioGazeboGazzellaGecoGelatinaGelsoGemelloGemmatoGeneGenitoreGennaioGenotipoGergoGhepardoGhiaccioGhisaGialloGildaGineproGiocareGioielloGiornoGioveGiratoGironeGittataGiudizioGiuratoGiustoGlobuloGlutineGnomoGobbaGolfGomitoGommoneGonfioGonnaGovernoGracileGradoGraficoGrammoGrandeGrattareGravosoGraziaGrecaGreggeGrifoneGrigioGrinzaGrottaGruppoGuadagnoGuaioGuantoGuardareGufoGuidareIbernatoIconaIdenticoIdillioIdoloIdraIdricoIdrogenoIgieneIgnaroIgnoratoIlareIllesoIllogicoIlludereImballoImbevutoImboccoImbutoImmaneImmersoImmolatoImpaccoImpetoImpiegoImportoImprontaInalareInarcareInattivoIncantoIncendioInchinoIncisivoInclusoIncontroIncrocioIncuboIndagineIndiaIndoleIneditoInfattiInfilareInflittoIngaggioIngegnoIngleseIngordoIngrossoInnescoInodoreInoltrareInondatoInsanoInsettoInsiemeInsonniaInsulinaIntasatoInteroIntonacoIntuitoInumidireInvalidoInveceInvitoIperboleIpnoticoIpotesiIppicaIrideIrlandaIronicoIrrigatoIrrorareIsolatoIsotopoIstericoIstitutoIstriceItaliaIterareLabbroLabirintoLaccaLaceratoLacrimaLacunaLaddoveLagoLampoLancettaLanternaLardosoLargaLaringeLastraLatenzaLatinoLattugaLavagnaLavoroLegaleLeggeroLemboLentezzaLenzaLeoneLepreLesivoLessatoLestoLetteraleLevaLevigatoLiberoLidoLievitoLillaLimaturaLimitareLimpidoLineareLinguaLiquidoLiraLiricaLiscaLiteLitigioLivreaLocandaLodeLogicaLombareLondraLongevoLoquaceLorenzoLotoLotteriaLuceLucidatoLumacaLuminosoLungoLupoLuppoloLusingaLussoLuttoMacabroMacchinaMaceroMacinatoMadamaMagicoMagliaMagneteMagroMaiolicaMalafedeMalgradoMalintesoMalsanoMaltoMalumoreManaManciaMandorlaMangiareManifestoMannaroManovraMansardaMantideManubrioMappaMaratonaMarcireMarettaMarmoMarsupioMascheraMassaiaMastinoMaterassoMatricolaMattoneMaturoMazurcaMeandroMeccanicoMecenateMedesimoMeditareMegaMelassaMelisMelodiaMeningeMenoMensolaMercurioMerendaMerloMeschinoMeseMessereMestoloMetalloMetodoMettereMiagolareMicaMicelioMicheleMicroboMidolloMieleMiglioreMilanoMiliteMimosaMineraleMiniMinoreMirinoMirtilloMiscelaMissivaMistoMisurareMitezzaMitigareMitraMittenteMnemonicoModelloModificaModuloMoganoMogioMoleMolossoMonasteroMoncoMondinaMonetarioMonileMonotonoMonsoneMontatoMonvisoMoraMordereMorsicatoMostroMotivatoMotosegaMottoMovenzaMovimentoMozzoMuccaMucosaMuffaMughettoMugnaioMulattoMulinelloMultiploMummiaMuntoMuovereMuraleMusaMuscoloMusicaMutevoleMutoNababboNaftaNanometroNarcisoNariceNarratoNascereNastrareNaturaleNauticaNaviglioNebulosaNecrosiNegativoNegozioNemmenoNeofitaNerettoNervoNessunoNettunoNeutraleNeveNevroticoNicchiaNinfaNitidoNobileNocivoNodoNomeNominaNordicoNormaleNorvegeseNostranoNotareNotiziaNotturnoNovellaNucleoNullaNumeroNuovoNutrireNuvolaNuzialeOasiObbedireObbligoObeliscoOblioOboloObsoletoOccasioneOcchioOccidenteOccorrereOccultareOcraOculatoOdiernoOdorareOffertaOffrireOffuscatoOggettoOggiOgnunoOlandeseOlfattoOliatoOlivaOlogrammaOltreOmaggioOmbelicoOmbraOmegaOmissioneOndosoOnereOniceOnnivoroOnorevoleOntaOperatoOpinioneOppostoOracoloOrafoOrdineOrecchinoOreficeOrfanoOrganicoOrigineOrizzonteOrmaOrmeggioOrnativoOrologioOrrendoOrribileOrtensiaOrticaOrzataOrzoOsareOscurareOsmosiOspedaleOspiteOssaOssidareOstacoloOsteOtiteOtreOttagonoOttimoOttobreOvaleOvestOvinoOviparoOvocitoOvunqueOvviareOzioPacchettoPacePacificoPadellaPadronePaesePagaPaginaPalazzinaPalesarePallidoPaloPaludePandoroPannelloPaoloPaonazzoPapricaParabolaParcellaParerePargoloPariParlatoParolaPartireParvenzaParzialePassivoPasticcaPataccaPatologiaPattumePavonePeccatoPedalarePedonalePeggioPelosoPenarePendicePenisolaPennutoPenombraPensarePentolaPepePepitaPerbenePercorsoPerdonatoPerforarePergamenaPeriodoPermessoPernoPerplessoPersuasoPertugioPervasoPesatorePesistaPesoPestiferoPetaloPettinePetulantePezzoPiacerePiantaPiattinoPiccinoPicozzaPiegaPietraPifferoPigiamaPigolioPigroPilaPiliferoPillolaPilotaPimpantePinetaPinnaPinoloPioggiaPiomboPiramidePireticoPiritePirolisiPitonePizzicoPlaceboPlanarePlasmaPlatanoPlenarioPochezzaPoderosoPodismoPoesiaPoggiarePolentaPoligonoPollicePolmonitePolpettaPolsoPoltronaPolverePomicePomodoroPontePopolosoPorfidoPorosoPorporaPorrePortataPosaPositivoPossessoPostulatoPotassioPoterePranzoPrassiPraticaPreclusoPredicaPrefissoPregiatoPrelievoPremerePrenotarePreparatoPresenzaPretestoPrevalsoPrimaPrincipePrivatoProblemaProcuraProdurreProfumoProgettoProlungaPromessaPronomePropostaProrogaProtesoProvaPrudentePrugnaPruritoPsichePubblicoPudicaPugilatoPugnoPulcePulitoPulsantePuntarePupazzoPupillaPuroQuadroQualcosaQuasiQuerelaQuotaRaccoltoRaddoppioRadicaleRadunatoRafficaRagazzoRagioneRagnoRamarroRamingoRamoRandagioRantolareRapatoRapinaRappresoRasaturaRaschiatoRasenteRassegnaRastrelloRataRavvedutoRealeRecepireRecintoReclutaReconditoRecuperoRedditoRedimereRegalatoRegistroRegolaRegressoRelazioneRemareRemotoRennaReplicaReprimereReputareResaResidenteResponsoRestauroReteRetinaRetoricaRettificaRevocatoRiassuntoRibadireRibelleRibrezzoRicaricaRiccoRicevereRiciclatoRicordoRicredutoRidicoloRidurreRifasareRiflessoRiformaRifugioRigareRigettatoRighelloRilassatoRilevatoRimanereRimbalzoRimedioRimorchioRinascitaRincaroRinforzoRinnovoRinomatoRinsavitoRintoccoRinunciaRinvenireRiparatoRipetutoRipienoRiportareRipresaRipulireRisataRischioRiservaRisibileRisoRispettoRistoroRisultatoRisvoltoRitardoRitegnoRitmicoRitrovoRiunioneRivaRiversoRivincitaRivoltoRizomaRobaRoboticoRobustoRocciaRocoRodaggioRodereRoditoreRogitoRollioRomanticoRompereRonzioRosolareRospoRotanteRotondoRotulaRovescioRubizzoRubricaRugaRullinoRumineRumorosoRuoloRupeRussareRusticoSabatoSabbiareSabotatoSagomaSalassoSaldaturaSalgemmaSalivareSalmoneSaloneSaltareSalutoSalvoSapereSapidoSaporitoSaracenoSarcasmoSartoSassosoSatelliteSatiraSatolloSaturnoSavanaSavioSaziatoSbadiglioSbalzoSbancatoSbarraSbattereSbavareSbendareSbirciareSbloccatoSbocciatoSbrinareSbruffoneSbuffareScabrosoScadenzaScalaScambiareScandaloScapolaScarsoScatenareScavatoSceltoScenicoScettroSchedaSchienaSciarpaScienzaScindereScippoSciroppoScivoloSclerareScodellaScolpitoScompartoSconfortoScoprireScortaScossoneScozzeseScribaScrollareScrutinioScuderiaScultoreScuolaScuroScusareSdebitareSdoganareSeccaturaSecondoSedanoSeggiolaSegnalatoSegregatoSeguitoSelciatoSelettivoSellaSelvaggioSemaforoSembrareSemeSeminatoSempreSensoSentireSepoltoSequenzaSerataSerbatoSerenoSerioSerpenteSerraglioServireSestinaSetolaSettimanaSfaceloSfaldareSfamatoSfarzosoSfaticatoSferaSfidaSfilatoSfingeSfocatoSfoderareSfogoSfoltireSforzatoSfrattoSfruttatoSfuggitoSfumareSfusoSgabelloSgarbatoSgonfiareSgorbioSgrassatoSguardoSibiloSiccomeSierraSiglaSignoreSilenzioSillabaSimboloSimpaticoSimulatoSinfoniaSingoloSinistroSinoSintesiSinusoideSiparioSismaSistoleSituatoSlittaSlogaturaSlovenoSmarritoSmemoratoSmentitoSmeraldoSmilzoSmontareSmottatoSmussatoSnellireSnervatoSnodoSobbalzoSobrioSoccorsoSocialeSodaleSoffittoSognoSoldatoSolenneSolidoSollazzoSoloSolubileSolventeSomaticoSommaSondaSonettoSonniferoSopireSoppesoSopraSorgereSorpassoSorrisoSorsoSorteggioSorvolatoSospiroSostaSottileSpadaSpallaSpargereSpatolaSpaventoSpazzolaSpecieSpedireSpegnereSpelaturaSperanzaSpessoreSpettraleSpezzatoSpiaSpigolosoSpillatoSpinosoSpiraleSplendidoSportivoSposoSprangaSprecareSpronatoSpruzzoSpuntinoSquilloSradicareSrotolatoStabileStaccoStaffaStagnareStampatoStantioStarnutoStaseraStatutoSteloSteppaSterzoStilettoStimaStirpeStivaleStizzosoStonatoStoricoStrappoStregatoStriduloStrozzareStruttoStuccareStufoStupendoSubentroSuccosoSudoreSuggeritoSugoSultanoSuonareSuperboSupportoSurgelatoSurrogatoSussurroSuturaSvagareSvedeseSveglioSvelareSvenutoSveziaSviluppoSvistaSvizzeraSvoltaSvuotareTabaccoTabulatoTacciareTaciturnoTaleTalismanoTamponeTanninoTaraTardivoTargatoTariffaTarpareTartarugaTastoTatticoTavernaTavolataTazzaTecaTecnicoTelefonoTemerarioTempoTemutoTendoneTeneroTensioneTentacoloTeoremaTermeTerrazzoTerzettoTesiTesseratoTestatoTetroTettoiaTifareTigellaTimbroTintoTipicoTipografoTiraggioTiroTitanioTitoloTitubanteTizioTizzoneToccareTollerareToltoTombolaTomoTonfoTonsillaTopazioTopologiaToppaTorbaTornareTorroneTortoraToscanoTossireTostaturaTotanoTraboccoTracheaTrafilaTragediaTralcioTramontoTransitoTrapanoTrarreTraslocoTrattatoTraveTrecciaTremolioTrespoloTributoTrichecoTrifoglioTrilloTrinceaTrioTristezzaTrituratoTrivellaTrombaTronoTroppoTrottolaTrovareTruccatoTubaturaTuffatoTulipanoTumultoTunisiaTurbareTurchinoTutaTutelaUbicatoUccelloUccisoreUdireUditivoUffaUfficioUgualeUlisseUltimatoUmanoUmileUmorismoUncinettoUngereUnghereseUnicornoUnificatoUnisonoUnitarioUnteUovoUpupaUraganoUrgenzaUrloUsanzaUsatoUscitoUsignoloUsuraioUtensileUtilizzoUtopiaVacanteVaccinatoVagabondoVagliatoValangaValgoValicoVallettaValorosoValutareValvolaVampataVangareVanitosoVanoVantaggioVanveraVaporeVaranoVarcatoVarianteVascaVedettaVedovaVedutoVegetaleVeicoloVelcroVelinaVellutoVeloceVenatoVendemmiaVentoVeraceVerbaleVergognaVerificaVeroVerrucaVerticaleVescicaVessilloVestaleVeteranoVetrinaVetustoViandanteVibranteVicendaVichingoVicinanzaVidimareVigiliaVignetoVigoreVileVillanoViminiVincitoreViolaViperaVirgolaVirologoVirulentoViscosoVisioneVispoVissutoVisuraVitaVitelloVittimaVivandaVividoViziareVoceVogaVolatileVolereVolpeVoragineVulcanoZampognaZannaZappatoZatteraZavorraZefiroZelanteZeloZenzeroZerbinoZibettoZincoZirconeZittoZollaZoticoZuccheroZufoloZuluZuppa\";\nlet wordlist$6 = null;\nfunction loadWords$6(lang) {\n    if (wordlist$6 != null) {\n        return;\n    }\n    wordlist$6 = words$4.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x5c1362d88fd4cf614a96f3234941d29f7d37c08c5292fde03bf62c2db6ff7620\") {\n        wordlist$6 = null;\n        throw new Error(\"BIP39 Wordlist for it (Italian) FAILED\");\n    }\n}\nclass LangIt extends Wordlist {\n    constructor() {\n        super(\"it\");\n    }\n    getWord(index) {\n        loadWords$6(this);\n        return wordlist$6[index];\n    }\n    getWordIndex(word) {\n        loadWords$6(this);\n        return wordlist$6.indexOf(word);\n    }\n}\nconst langIt = new LangIt();\nWordlist.register(langIt);\n//# sourceMappingURL=lang-it.js.map\n\nconst data$2 = \"}aE#4A=Yv&co#4N#6G=cJ&SM#66|/Z#4t&kn~46#4K~4q%b9=IR#7l,mB#7W_X2*dl}Uo~7s}Uf&Iw#9c&cw~6O&H6&wx&IG%v5=IQ~8a&Pv#47$PR&50%Ko&QM&3l#5f,D9#4L|/H&tQ;v0~6n]nN<di,AM=W5%QO&ka&ua,hM^tm=zV=JA=wR&+X]7P&NB#4J#5L|/b[dA}tJ<Do&6m&u2[U1&Kb.HM&mC=w0&MW<rY,Hq#6M}QG,13&wP}Jp]Ow%ue&Kg<HP<D9~4k~9T&I2_c6$9T#9/[C5~7O~4a=cs&O7=KK=An&l9$6U$8A&uD&QI|/Y&bg}Ux&F2#6b}E2&JN&kW&kp=U/&bb=Xl<Cj}k+~5J#6L&5z&9i}b4&Fo,ho(X0_g3~4O$Fz&QE<HN=Ww]6/%GF-Vw=tj&/D&PN#9g=YO}cL&Of&PI~5I&Ip=vU=IW#9G;0o-wU}ss&QR<BT&R9=tk$PY_dh&Pq-yh]7T,nj.Xu=EP&76=cI&Fs*Xg}z7$Gb&+I=DF,AF=cA}rL#7j=Dz&3y<Aa$52=PQ}b0(iY$Fa}oL&xV#6U=ec=WZ,xh%RY<dp#9N&Fl&44=WH*A7=sh&TB&8P=07;u+&PK}uh}J5#72)V/=xC,AB$k0&f6;1E|+5=1B,3v]6n&wR%b+&xx]7f=Ol}fl;+D^wG]7E;nB;uh^Ir&l5=JL,nS=cf=g5;u6|/Q$Gc=MH%Hg#5d%M6^86=U+$Gz,l/,ir^5y&Ba&/F-IY&FI&be%IZ#77&PW_Nu$kE(Yf&NX]7Z,Jy&FJ(Xo&Nz#/d=y7&MX<Ag}Z+;nE]Dt(iG#4D=13&Pj~4c%v8&Zo%OL&/X#4W<HR&ie~6J_1O(Y2=y5=Ad*cv_eB#6k&PX:BU#7A;uk&Ft&Fx_dD=U2;vB=U5=4F}+O&GN.HH:9s=b0%NV(jO&IH=JT}Z9=VZ<Af,Kx^4m&uJ%c6,6r;9m#+L}cf%Kh&F3~4H=vP}bu,Hz|++,1w]nv}k6;uu$jw*Kl*WX&uM[x7&Fr[m7$NO&QN]hu=JN}nR^8g#/h(ps|KC;vd}xz=V0}p6&FD$G1#7K<bG_4p~8g&cf;u4=tl}+k%5/}fz;uw<cA=u1}gU}VM=LJ=eX&+L&Pr#4U}p2:nC,2K]7H:jF&9x}uX#9O=MB<fz~8X~5m&4D&kN&u5%E/(h7(ZF&VG<de(qM|/e-Wt=3x(a+,/R]f/&ND$Ro&nU}0g=KA%kH&NK$Ke<dS}cB&IX~5g$TN]6m=Uv,Is&Py=Ef%Kz#+/%bi&+A<F4$OG&4C&FL#9V<Zk=2I_eE&6c]nw&kq$HG}y+&A8$P3}OH=XP]70%IS(AJ_gH%GZ&tY&AZ=vb~6y&/r=VI=Wv<Zi=fl=xf&eL}c8}OL=MJ=g8$F7=YT}9u=0+^xC}JH&nL^N0~4T]K2,Cy%OC#6s;vG(AC^xe^cG&MF}Br#9P;wD-7h$O/&xA}Fn^PC]6i]7G&8V$Qs;vl(TB~73~4l<mW&6V=2y&uY&+3)aP}XF;LP&kx$wU=t7;uy<FN&lz)7E=Oo*Y+;wI}9q}le;J6&Ri&4t&Qr#8B=cb&vG=J5|Ql(h5<Yy~4+}QD,Lx=wn%K/&RK=dO&Pw,Q9=co%4u;9u}g0@6a^4I%b0=zo|/c&tX=dQ=OS#+b=yz_AB&wB&Pm=W9$HP_gR=62=AO=ti=hI,oA&jr&dH=tm&b6$P2(x8=zi;nG~7F;05]0n[Ix&3m}rg=Xp=cd&uz]7t;97=cN;vV<jf&FF&F1=6Q&Ik*Kk&P4,2z=fQ]7D&3u,H0=d/}Uw<ZN<7R}Kv;0f$H7,MD]7n$F0#88~9Z%da=by;+T#/u=VF&fO&kr^kf<AB]sU,I5$Ng&Pz;0i&QD&vM=Yl:BM;nJ_xJ]U7&Kf&30,3f|Z9*dC)je_jA&Q4&Kp$NH(Yz#6S&Id%Ib=KX,AD=KV%dP}tW&Pk^+E_Ni=cq,3R}VZ(Si=b+}rv;0j}rZ]uA,/w(Sx&Jv$w9&4d&wE,NJ$Gy=J/]Ls#7k<ZQ<Y/&uj]Ov$PM;v3,2F&+u:up=On&3e,Jv;90=J+&Qm]6q}bK#+d~8Y(h2]hA;99&AS=I/}qB&dQ}yJ-VM}Vl&ui,iB&G3|Dc]7d=eQ%dX%JC_1L~4d^NP;vJ&/1)ZI#7N]9X[bQ&PL=0L(UZ,Lm&kc&IR}n7(iR<AQ<dg=33=vN}ft}au]7I,Ba=x9=dR~6R&Tq=Xi,3d$Nr&Bc}DI&ku&vf]Dn,/F&iD,Ll&Nw=0y&I7=Ls=/A&tU=Qe}Ua&uk&+F=g4=gh=Vj#+1&Qn}Uy*44#5F,Pc&Rz*Xn=oh=5W;0n_Nf(iE<Y7=vr=Zu]oz#5Z%mI=kN=Bv_Jp(T2;vt_Ml<FS&uI=L/&6P]64$M7}86<bo%QX(SI%IY&VK=Al&Ux;vv;ut*E/%uh<ZE|O3,M2(yc]yu=Wk&tp:Ex}hr,Cl&WE)+Z=8U}I2_4Q,hA_si=iw=OM=tM=yZ%Ia=U7;wT}b+;uo=Za}yS!5x}HD}fb#5O_dA;Nv%uB(yB;01(Sf}Fk;v7}Pt#8v<mZ#7L,/r&Pl~4w&f5=Ph$Fw_LF&8m,bL=yJ&BH}p/*Jn}tU~5Q;wB(h6]Df]8p^+B;E4&Wc=d+;Ea&bw$8C&FN,DM=Yf}mP~5w=fT#6V=mC=Fi=AV}jB&AN}lW}aH#/D)dZ;hl;vE}/7,CJ;31&w8,hj%u9_Js=jJ&4M~8k=TN&eC}nL&uc-wi&lX}dj=Mv=e2#6u=cr$uq$6G]8W}Jb:nm=Yg<b3(UA;vX&6n&xF=KT,jC,De&R8&oY=Zv&oB]7/=Z2&Oa}bf,hh(4h^tZ&72&Nx;D2&xL~5h~40)ZG)h+=OJ&RA]Bv$yB=Oq=df,AQ%Jn}OJ;11,3z&Tl&tj;v+^Hv,Dh(id=s+]7N&N3)9Q~8f,S4=uW=w4&uX,LX&3d]CJ&yp&8x<b2_do&lP=y/<cy_dG=Oi=7R(VH(lt_1T,Iq_AA;12^6T%k6#8K[B1{oO<AU[Bt;1b$9S&Ps<8T=St{bY,jB(Zp&63&Uv$9V,PM]6v&Af}zW[bW_oq}sm}nB&Kq&gC&ff_eq_2m&5F&TI}rf}Gf;Zr_z9;ER&jk}iz_sn<BN~+n&vo=Vi%97|ZR=Wc,WE&6t]6z%85(ly#84=KY)6m_5/=aX,N3}Tm&he&6K]tR_B2-I3;u/&hU&lH<AP=iB&IA=XL;/5&Nh=wv<BH#79=vS=zl<AA=0X_RG}Bw&9p$NW,AX&kP_Lp&/Z(Tc]Mu}hs#6I}5B&cI<bq&H9#6m=K9}vH(Y1(Y0#4B&w6,/9&gG<bE,/O=zb}I4_l8<B/;wL%Qo<HO[Mq=XX}0v&BP&F4(mG}0i}nm,EC=9u{I3,xG&/9=JY*DK&hR)BX=EI=cx=b/{6k}yX%A+&wa}Xb=la;wi^lL;0t}jo&Qb=xg=XB}iO<qo{bR=NV&8f=a0&Jy;0v=uK)HK;vN#6h&jB(h/%ud&NI%wY.X7=Pt}Cu-uL&Gs_hl%mH,tm]78=Lb^Q0#7Y=1u<Bt&+Q=Co_RH,w3;1e}ux<aU;ui}U3&Q5%bt]63&UQ|0l&uL}O7&3o,AV&dm|Nj(Xt*5+(Uu&Hh(p7(UF=VR=Bp^Jl&Hd[ix)9/=Iq]C8<67]66}mB%6f}bb}JI]8T$HA}db=YM&pa=2J}tS&Y0=PS&y4=cX$6E,hX,XP&nR;04,FQ&l0&Vm_Dv#5Y~8Z=Bi%MA]6x=JO:+p,Az&9q,Hj~6/}SD=K1:EJ}nA;Qo#/E]9R,Ie&6X%W3]61&v4=xX_MC=0q;06(Xq=fs}IG}Dv=0l}o7$iZ;9v&LH&DP-7a&OY,SZ,Kz,Cv&dh=fx|Nh,F/~7q=XF&w+;9n&Gw;0h}Z7<7O&JK(S7&LS<AD<ac=wo<Dt&zw%4B=4v#8P;9o~6p*vV=Tm,Or&I6=1q}nY=P0=gq&Bl&Uu,Ch%yb}UY=zh}dh}rl(T4_xk(YA#8R*xH,IN}Jn]7V}C4&Ty}j3]7p=cL=3h&wW%Qv<Z3=f0&RI&+S(ic_zq}oN&/Y=z1;Td=LW=0e=OI(Vc,+b^ju(UL;0r:Za%8v=Rp=zw&58&73&wK}qX]6y&8E)a2}WR=wP^ur&nQ<cH}Re=Aq&wk}Q0&+q=PP,Gc|/d^k5,Fw]8Y}Pg]p3=ju=ed}r5_yf&Cs]7z$/G<Cm&Jp&54_1G_gP_Ll}JZ;0u]k8_7k(Sg]65{9i=LN&Sx&WK,iW&fD&Lk{9a}Em-9c#8N&io=sy]8d&nT&IK(lx#7/$lW(Td<s8~49,3o<7Y=MW(T+_Jr&Wd,iL}Ct=xh&5V;v4&8n%Kx=iF&l2_0B{B+,If(J0,Lv;u8=Kx-vB=HC&vS=Z6&fU&vE^xK;3D=4h=MR#45:Jw;0d}iw=LU}I5=I0]gB*im,K9}GU,1k_4U&Tt=Vs(iX&lU(TF#7y,ZO}oA&m5#5P}PN}Uz=hM<B1&FB<aG,e6~7T<tP(UQ_ZT=wu&F8)aQ]iN,1r_Lo&/g:CD}84{J1_Ki&Na&3n$jz&FE=dc;uv;va}in}ll=fv(h1&3h}fp=Cy}BM(+E~8m}lo%v7=hC(T6$cj=BQ=Bw(DR,2j=Ks,NS|F+;00=fU=70}Mb(YU;+G&m7&hr=Sk%Co]t+(X5_Jw}0r}gC(AS-IP&QK<Z2#8Q$WC]WX}T2&pG_Ka,HC=R4&/N;Z+;ch(C7,D4$3p_Mk&B2$8D=n9%Ky#5z(CT&QJ#7B]DC]gW}nf~5M;Iw#80}Tc_1F#4Z-aC}Hl=ph=fz,/3=aW}JM}nn;DG;vm}wn,4P}T3;wx&RG$u+}zK=0b;+J_Ek{re<aZ=AS}yY#5D]7q,Cp}xN=VP*2C}GZ}aG~+m_Cs=OY#6r]6g<GS}LC(UB=3A=Bo}Jy<c4}Is;1P<AG}Op<Z1}ld}nS=1Z,yM&95&98=CJ(4t:2L$Hk=Zo}Vc;+I}np&N1}9y=iv}CO*7p=jL)px]tb^zh&GS&Vl%v/;vR=14=zJ&49|/f]hF}WG;03=8P}o/&Gg&rp;DB,Kv}Ji&Pb;aA^ll(4j%yt}+K$Ht#4y&hY]7Y<F1,eN}bG(Uh%6Z]t5%G7;+F_RE;it}tL=LS&Da=Xx(S+(4f=8G=yI}cJ}WP=37=jS}pX}hd)fp<A8=Jt~+o$HJ=M6}iX=g9}CS=dv=Cj(mP%Kd,xq|+9&LD(4/=Xm&QP=Lc}LX&fL;+K=Op(lu=Qs.qC:+e&L+=Jj#8w;SL]7S(b+#4I=c1&nG_Lf&uH;+R)ZV<bV%B/,TE&0H&Jq&Ah%OF&Ss(p2,Wv&I3=Wl}Vq;1L&lJ#9b_1H=8r=b8=JH(SZ=hD=J2#7U,/U#/X~6P,FU<eL=jx,mG=hG=CE&PU=Se(qX&LY=X6=y4&tk&QQ&tf=4g&xI}W+&mZ=Dc#7w}Lg;DA;wQ_Kb(cJ=hR%yX&Yb,hw{bX_4X;EP;1W_2M}Uc=b5(YF,CM&Tp^OJ{DD]6s=vF=Yo~8q}XH}Fu%P5(SJ=Qt;MO]s8<F3&B3&8T(Ul-BS*dw&dR<87}/8]62$PZ]Lx<Au}9Q]7c=ja=KR,Go,Us&v6(qk}pG&G2=ev^GM%w4&H4]7F&dv]J6}Ew:9w=sj-ZL}Ym$+h(Ut(Um~4n=Xs(U7%eE=Qc_JR<CA#6t<Fv|/I,IS,EG<F2(Xy$/n<Fa(h9}+9_2o&N4#7X<Zq|+f_Dp=dt&na,Ca=NJ)jY=8C=YG=s6&Q+<DO}D3=xB&R1(lw;Qn<bF(Cu|/B}HV=SS&n7,10&u0]Dm%A6^4Q=WR(TD=Xo<GH,Rj(l8)bP&n/=LM&CF,F5&ml=PJ;0k=LG=tq,Rh,D6@4i=1p&+9=YC%er_Mh;nI;0q=Fw]80=xq=FM$Gv;v6&nc;wK%H2&Kj;vs,AA=YP,66}bI(qR~5U=6q~4b$Ni=K5.X3$So&Iu(p+]8G=Cf=RY(TS_O3(iH&57=fE=Dg_Do#9z#7H;FK{qd_2k%JR}en&gh_z8;Rx}9p<cN_Ne,DO;LN_7o~/p=NF=5Y}gN<ce<C1,QE]Wv=3u<BC}GK]yq}DY&u/_hj=II(pz&rC,jV&+Z}ut=NQ;Cg-SR_ZS,+o=u/;Oy_RK_QF(Fx&xP}Wr&TA,Uh&g1=yr{ax[VF$Pg(YB;Ox=Vy;+W(Sp}XV%dd&33(l/]l4#4Y}OE=6c=bw(A7&9t%wd&N/&mo,JH&Qe)fm=Ao}fu=tH\";\nconst deltaData = \"FAZDC6BALcLZCA+GBARCW8wNCcDDZ8LVFBOqqDUiou+M42TFAyERXFb7EjhP+vmBFpFrUpfDV2F7eB+eCltCHJFWLFCED+pWTojEIHFXc3aFn4F68zqjEuKidS1QBVPDEhE7NA4mhMF7oThD49ot3FgtzHFCK0acW1x8DH1EmLoIlrWFBLE+y5+NA3Cx65wJHTaEZVaK1mWAmPGxgYCdxwOjTDIt/faOEhTl1vqNsKtJCOhJWuio2g07KLZEQsFBUpNtwEByBgxFslFheFbiEPvi61msDvApxCzB6rBCzox7joYA5UdDc+Cb4FSgIabpXFAj3bjkmFAxCZE+mD/SFf/0ELecYCt3nLoxC6WEZf2tKDB4oZvrEmqFkKk7BwILA7gtYBpsTq//D4jD0F0wEB9pyQ1BD5Ba0oYHDI+sbDFhvrHXdDHfgFEIJLi5r8qercNFBgFLC4bo5ERJtamWBDFy73KCEb6M8VpmEt330ygCTK58EIIFkYgF84gtGA9Uyh3m68iVrFbWFbcbqiCYHZ9J1jeRPbL8yswhMiDbhEhdNoSwFbZrLT740ABEqgCkO8J1BLd1VhKKR4sD1yUo0z+FF59Mvg71CFbyEhbHSFBKEIKyoQNgQppq9T0KAqePu0ZFGrXOHdKJqkoTFhYvpDNyuuznrN84thJbsCoO6Cu6Xlvntvy0QYuAExQEYtTUBf3CoCqwgGFZ4u1HJFzDVwEy3cjcpV4QvsPaBC3rCGyCF23o4K3pp2gberGgFEJEHo4nHICtyKH2ZqyxhN05KBBJIQlKh/Oujv/DH32VrlqFdIFC7Fz9Ct4kaqFME0UETLprnN9kfy+kFmtQBB0+5CFu0N9Ij8l/VvJDh2oq3hT6EzjTHKFN7ZjZwoTsAZ4Exsko6Fpa6WC+sduz8jyrLpegTv2h1EBeYpLpm2czQW0KoCcS0bCVXCmuWJDBjN1nQNLdF58SFJ0h7i3pC3oEOKy/FjBklL70XvBEEIWp2yZ04xObzAWDDJG7f+DbqBEA7LyiR95j7MDVdDViz2RE5vWlBMv5e4+VfhP3aXNPhvLSynb9O2x4uFBV+3jqu6d5pCG28/sETByvmu/+IJ0L3wb4rj9DNOLBF6XPIODr4L19U9RRofAG6Nxydi8Bki8BhGJbBAJKzbJxkZSlF9Q2Cu8oKqggB9hBArwLLqEBWEtFowy8XK8bEyw9snT+BeyFk1ZCSrdmgfEwFePTgCjELBEnIbjaDDPJm36rG9pztcEzT8dGk23SBhXBB1H4z+OWze0ooFzz8pDBYFvp9j9tvFByf9y4EFdVnz026CGR5qMr7fxMHN8UUdlyJAzlTBDRC28k+L4FB8078ljyD91tUj1ocnTs8vdEf7znbzm+GIjEZnoZE5rnLL700Xc7yHfz05nWxy03vBB9YGHYOWxgMQGBCR24CVYNE1hpfKxN0zKnfJDmmMgMmBWqNbjfSyFCBWSCGCgR8yFXiHyEj+VtD1FB3FpC1zI0kFbzifiKTLm9yq5zFmur+q8FHqjoOBWsBPiDbnCC2ErunV6cJ6TygXFYHYp7MKN9RUlSIS8/xBAGYLzeqUnBF4QbsTuUkUqGs6CaiDWKWjQK9EJkjpkTmNCPYXL\";\n// @TODO: Load lazily\nconst wordlist$7 = {\n    zh_cn: null,\n    zh_tw: null\n};\nconst Checks = {\n    zh_cn: \"0x17bcc4d8547e5a7135e365d1ab443aaae95e76d8230c2782c67305d4f21497a1\",\n    zh_tw: \"0x51e720e90c7b87bec1d70eb6e74a21a449bd3ec9c020b01d3a40ed991b60ce5d\"\n};\nconst codes$1 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nconst style = \"~!@#$%^&*_-=[]{}|;:,.()<>?\";\nfunction loadWords$7(lang) {\n    if (wordlist$7[lang.locale] !== null) {\n        return;\n    }\n    wordlist$7[lang.locale] = [];\n    let deltaOffset = 0;\n    for (let i = 0; i < 2048; i++) {\n        const s = style.indexOf(data$2[i * 3]);\n        const bytes = [\n            228 + (s >> 2),\n            128 + codes$1.indexOf(data$2[i * 3 + 1]),\n            128 + codes$1.indexOf(data$2[i * 3 + 2]),\n        ];\n        if (lang.locale === \"zh_tw\") {\n            const common = s % 4;\n            for (let i = common; i < 3; i++) {\n                bytes[i] = codes$1.indexOf(deltaData[deltaOffset++]) + ((i == 0) ? 228 : 128);\n            }\n        }\n        wordlist$7[lang.locale].push(toUtf8String(bytes));\n    }\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== Checks[lang.locale]) {\n        wordlist$7[lang.locale] = null;\n        throw new Error(\"BIP39 Wordlist for \" + lang.locale + \" (Chinese) FAILED\");\n    }\n}\nclass LangZh extends Wordlist {\n    constructor(country) {\n        super(\"zh_\" + country);\n    }\n    getWord(index) {\n        loadWords$7(this);\n        return wordlist$7[this.locale][index];\n    }\n    getWordIndex(word) {\n        loadWords$7(this);\n        return wordlist$7[this.locale].indexOf(word);\n    }\n    split(mnemonic) {\n        mnemonic = mnemonic.replace(/(?:\\u3000| )+/g, \"\");\n        return mnemonic.split(\"\");\n    }\n}\nconst langZhCn = new LangZh(\"cn\");\nWordlist.register(langZhCn);\nWordlist.register(langZhCn, \"zh\");\nconst langZhTw = new LangZh(\"tw\");\nWordlist.register(langZhTw);\n//# sourceMappingURL=lang-zh.js.map\n\nconst wordlists = {\n    cz: langCz,\n    en: langEn,\n    es: langEs,\n    fr: langFr,\n    it: langIt,\n    ja: langJa,\n    ko: langKo,\n    zh: langZhCn,\n    zh_cn: langZhCn,\n    zh_tw: langZhTw\n};\n//# sourceMappingURL=wordlists.js.map\n\nconst version$g = \"hdnode/5.4.0\";\n//# sourceMappingURL=_version.js.map\n\nconst logger$l = new Logger(version$g);\nconst N = BigNumber.from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n// \"Bitcoin seed\"\nconst MasterSecret = toUtf8Bytes(\"Bitcoin seed\");\nconst HardenedBit = 0x80000000;\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits) {\n    return ((1 << bits) - 1) << (8 - bits);\n}\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits) {\n    return (1 << bits) - 1;\n}\nfunction bytes32(value) {\n    return hexZeroPad(hexlify(value), 32);\n}\nfunction base58check(data) {\n    return Base58.encode(concat([data, hexDataSlice(sha256$1(sha256$1(data)), 0, 4)]));\n}\nfunction getWordlist(wordlist) {\n    if (wordlist == null) {\n        return wordlists[\"en\"];\n    }\n    if (typeof (wordlist) === \"string\") {\n        const words = wordlists[wordlist];\n        if (words == null) {\n            logger$l.throwArgumentError(\"unknown locale\", \"wordlist\", wordlist);\n        }\n        return words;\n    }\n    return wordlist;\n}\nconst _constructorGuard$3 = {};\nconst defaultPath = \"m/44'/60'/0'/0/0\";\nclass HDNode {\n    /**\n     *  This constructor should not be called directly.\n     *\n     *  Please use:\n     *   - fromMnemonic\n     *   - fromSeed\n     */\n    constructor(constructorGuard, privateKey, publicKey, parentFingerprint, chainCode, index, depth, mnemonicOrPath) {\n        logger$l.checkNew(new.target, HDNode);\n        /* istanbul ignore if */\n        if (constructorGuard !== _constructorGuard$3) {\n            throw new Error(\"HDNode constructor cannot be called directly\");\n        }\n        if (privateKey) {\n            const signingKey = new SigningKey(privateKey);\n            defineReadOnly(this, \"privateKey\", signingKey.privateKey);\n            defineReadOnly(this, \"publicKey\", signingKey.compressedPublicKey);\n        }\n        else {\n            defineReadOnly(this, \"privateKey\", null);\n            defineReadOnly(this, \"publicKey\", hexlify(publicKey));\n        }\n        defineReadOnly(this, \"parentFingerprint\", parentFingerprint);\n        defineReadOnly(this, \"fingerprint\", hexDataSlice(ripemd160$1(sha256$1(this.publicKey)), 0, 4));\n        defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        defineReadOnly(this, \"chainCode\", chainCode);\n        defineReadOnly(this, \"index\", index);\n        defineReadOnly(this, \"depth\", depth);\n        if (mnemonicOrPath == null) {\n            // From a source that does not preserve the path (e.g. extended keys)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", null);\n        }\n        else if (typeof (mnemonicOrPath) === \"string\") {\n            // From a source that does not preserve the mnemonic (e.g. neutered)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", mnemonicOrPath);\n        }\n        else {\n            // From a fully qualified source\n            defineReadOnly(this, \"mnemonic\", mnemonicOrPath);\n            defineReadOnly(this, \"path\", mnemonicOrPath.path);\n        }\n    }\n    get extendedKey() {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current senitment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n        if (this.depth >= 256) {\n            throw new Error(\"Depth too large!\");\n        }\n        return base58check(concat([\n            ((this.privateKey != null) ? \"0x0488ADE4\" : \"0x0488B21E\"),\n            hexlify(this.depth),\n            this.parentFingerprint,\n            hexZeroPad(hexlify(this.index), 4),\n            this.chainCode,\n            ((this.privateKey != null) ? concat([\"0x00\", this.privateKey]) : this.publicKey),\n        ]));\n    }\n    neuter() {\n        return new HDNode(_constructorGuard$3, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);\n    }\n    _derive(index) {\n        if (index > 0xffffffff) {\n            throw new Error(\"invalid index - \" + String(index));\n        }\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n        }\n        const data = new Uint8Array(37);\n        if (index & HardenedBit) {\n            if (!this.privateKey) {\n                throw new Error(\"cannot derive child of neutered node\");\n            }\n            // Data = 0x00 || ser_256(k_par)\n            data.set(arrayify(this.privateKey), 1);\n            // Hardened path\n            if (path) {\n                path += \"'\";\n            }\n        }\n        else {\n            // Data = ser_p(point(k_par))\n            data.set(arrayify(this.publicKey));\n        }\n        // Data += ser_32(i)\n        for (let i = 24; i >= 0; i -= 8) {\n            data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff);\n        }\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));\n        const IL = I.slice(0, 32);\n        const IR = I.slice(32);\n        // The private key\n        let ki = null;\n        // The public key\n        let Ki = null;\n        if (this.privateKey) {\n            ki = bytes32(BigNumber.from(IL).add(this.privateKey).mod(N));\n        }\n        else {\n            const ek = new SigningKey(hexlify(IL));\n            Ki = ek._addPoint(this.publicKey);\n        }\n        let mnemonicOrPath = path;\n        const srcMnemonic = this.mnemonic;\n        if (srcMnemonic) {\n            mnemonicOrPath = Object.freeze({\n                phrase: srcMnemonic.phrase,\n                path: path,\n                locale: (srcMnemonic.locale || \"en\")\n            });\n        }\n        return new HDNode(_constructorGuard$3, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);\n    }\n    derivePath(path) {\n        const components = path.split(\"/\");\n        if (components.length === 0 || (components[0] === \"m\" && this.depth !== 0)) {\n            throw new Error(\"invalid path - \" + path);\n        }\n        if (components[0] === \"m\") {\n            components.shift();\n        }\n        let result = this;\n        for (let i = 0; i < components.length; i++) {\n            const component = components[i];\n            if (component.match(/^[0-9]+'$/)) {\n                const index = parseInt(component.substring(0, component.length - 1));\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(HardenedBit + index);\n            }\n            else if (component.match(/^[0-9]+$/)) {\n                const index = parseInt(component);\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(index);\n            }\n            else {\n                throw new Error(\"invalid path component - \" + component);\n            }\n        }\n        return result;\n    }\n    static _fromSeed(seed, mnemonic) {\n        const seedArray = arrayify(seed);\n        if (seedArray.length < 16 || seedArray.length > 64) {\n            throw new Error(\"invalid seed\");\n        }\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));\n        return new HDNode(_constructorGuard$3, bytes32(I.slice(0, 32)), null, \"0x00000000\", bytes32(I.slice(32)), 0, 0, mnemonic);\n    }\n    static fromMnemonic(mnemonic, password, wordlist) {\n        // If a locale name was passed in, find the associated wordlist\n        wordlist = getWordlist(wordlist);\n        // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)\n        mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);\n        return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {\n            phrase: mnemonic,\n            path: \"m\",\n            locale: wordlist.locale\n        });\n    }\n    static fromSeed(seed) {\n        return HDNode._fromSeed(seed, null);\n    }\n    static fromExtendedKey(extendedKey) {\n        const bytes = Base58.decode(extendedKey);\n        if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {\n            logger$l.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n        }\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\":\n            case \"0x043587cf\":\n                return new HDNode(_constructorGuard$3, null, hexlify(key), parentFingerprint, chainCode, index, depth, null);\n            // Private Key\n            case \"0x0488ade4\":\n            case \"0x04358394 \":\n                if (key[0] !== 0) {\n                    break;\n                }\n                return new HDNode(_constructorGuard$3, hexlify(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);\n        }\n        return logger$l.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n    }\n}\nfunction mnemonicToSeed(mnemonic, password) {\n    if (!password) {\n        password = \"\";\n    }\n    const salt = toUtf8Bytes(\"mnemonic\" + password, UnicodeNormalizationForm.NFKD);\n    return pbkdf2(toUtf8Bytes(mnemonic, UnicodeNormalizationForm.NFKD), salt, 2048, 64, \"sha512\");\n}\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    wordlist = getWordlist(wordlist);\n    logger$l.checkNormalize();\n    const words = wordlist.split(mnemonic);\n    if ((words.length % 3) !== 0) {\n        throw new Error(\"invalid mnemonic\");\n    }\n    const entropy = arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        if (index === -1) {\n            throw new Error(\"invalid mnemonic\");\n        }\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n    const entropyBits = 32 * words.length / 3;\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n    const checksum = arrayify(sha256$1(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n        throw new Error(\"invalid checksum\");\n    }\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\nfunction entropyToMnemonic(entropy, wordlist) {\n    wordlist = getWordlist(wordlist);\n    entropy = arrayify(entropy);\n    if ((entropy.length % 4) !== 0 || entropy.length < 16 || entropy.length > 32) {\n        throw new Error(\"invalid entropy\");\n    }\n    const indices = [0];\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n            remainingBits -= 8;\n            // This byte will complete an 11-bit index\n        }\n        else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n            remainingBits += 3;\n        }\n    }\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = arrayify(sha256$1(entropy))[0] & getUpperMask(checksumBits);\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n    return wordlist.join(indices.map((index) => wordlist.getWord(index)));\n}\nfunction isValidMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nfunction getAccountPath(index) {\n    if (typeof (index) !== \"number\" || index < 0 || index >= HardenedBit || index % 1) {\n        logger$l.throwArgumentError(\"invalid account index\", \"index\", index);\n    }\n    return `m/44'/60'/${index}'/0/0`;\n}\n//# sourceMappingURL=index.js.map\n\nconst version$h = \"random/5.4.0\";\n//# sourceMappingURL=_version.js.map\n\nconst logger$m = new Logger(version$h);\nlet anyGlobal = null;\ntry {\n    anyGlobal = window;\n    if (anyGlobal == null) {\n        throw new Error(\"try next\");\n    }\n}\ncatch (error) {\n    try {\n        anyGlobal = global;\n        if (anyGlobal == null) {\n            throw new Error(\"try next\");\n        }\n    }\n    catch (error) {\n        anyGlobal = {};\n    }\n}\nlet crypto = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n    logger$m.warn(\"WARNING: Missing strong random number source\");\n    crypto = {\n        getRandomValues: function (buffer) {\n            return logger$m.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\nfunction randomBytes(length) {\n    if (length <= 0 || length > 1024 || (length % 1)) {\n        logger$m.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return arrayify(result);\n}\n//# sourceMappingURL=random.js.map\n\nfunction shuffled(array) {\n    array = array.slice();\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n    return array;\n}\n//# sourceMappingURL=shuffle.js.map\n\nvar aesJs = createCommonjsModule(function (module, exports) {\n\n(function(root) {\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16));\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c);\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14};\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    };\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    };\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    };\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    };\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    };\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    };\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    };\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    };\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    };\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    };\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    };\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    };\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    };\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    };\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    };\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    };\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = value >> 8;\n        }\n    };\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    };\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter);\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    };\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    };\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    {\n        module.exports = aesjs;\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    }\n\n\n})();\n});\n\nconst version$i = \"json-wallets/5.4.0\";\n//# sourceMappingURL=_version.js.map\n\nfunction looseArrayify(hexString) {\n    if (typeof (hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return arrayify(hexString);\n}\nfunction zpad(value, length) {\n    value = String(value);\n    while (value.length < length) {\n        value = '0' + value;\n    }\n    return value;\n}\nfunction getPassword(password) {\n    if (typeof (password) === 'string') {\n        return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n    }\n    return arrayify(password);\n}\nfunction searchPath(object, path) {\n    let currentChild = object;\n    const comps = path.toLowerCase().split('/');\n    for (let i = 0; i < comps.length; i++) {\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n            if (key.toLowerCase() === comps[i]) {\n                matchingChild = currentChild[key];\n                break;\n            }\n        }\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n    return currentChild;\n}\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\nfunction uuidV4(randomBytes) {\n    const bytes = arrayify(randomBytes);\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    const value = hexlify(bytes);\n    return [\n        value.substring(2, 10),\n        value.substring(10, 14),\n        value.substring(14, 18),\n        value.substring(18, 22),\n        value.substring(22, 34),\n    ].join(\"-\");\n}\n//# sourceMappingURL=utils.js.map\n\nconst logger$n = new Logger(version$i);\nclass CrowdsaleAccount extends Description {\n    isCrowdsaleAccount(value) {\n        return !!(value && value._isCrowdsaleAccount);\n    }\n}\n// See: https://github.com/ethereum/pyethsaletool\nfunction decrypt(json, password) {\n    const data = JSON.parse(json);\n    password = getPassword(password);\n    // Ethereum Address\n    const ethaddr = getAddress(searchPath(data, \"ethaddr\"));\n    // Encrypted Seed\n    const encseed = looseArrayify(searchPath(data, \"encseed\"));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        logger$n.throwArgumentError(\"invalid encseed\", \"json\", json);\n    }\n    const key = arrayify(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n    // Decrypt the seed\n    const aesCbc = new aesJs.ModeOfOperation.cbc(key, iv);\n    const seed = aesJs.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n    const seedHexBytes = toUtf8Bytes(seedHex);\n    const privateKey = keccak256(seedHexBytes);\n    return new CrowdsaleAccount({\n        _isCrowdsaleAccount: true,\n        address: ethaddr,\n        privateKey: privateKey\n    });\n}\n//# sourceMappingURL=crowdsale.js.map\n\nfunction isCrowdsaleWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    return (data.encseed && data.ethaddr);\n}\nfunction isKeystoreWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\nfunction getJsonWalletAddress(json) {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).ethaddr);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    if (isKeystoreWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).address);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=inspect.js.map\n\nvar scrypt = createCommonjsModule(function (module, exports) {\n\n(function(root) {\n    const MAX_VALUE = 0x7fffffff;\n\n    // The SHA256 and PBKDF2 implementation are from scrypt-async-js:\n    // See: https://github.com/dchest/scrypt-async-js\n    function SHA256(m) {\n        const K = new Uint32Array([\n           0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n           0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n           0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n           0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n           0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n           0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n           0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n           0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n           0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n           0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n           0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n           0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n           0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n       ]);\n\n        let h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a;\n        let h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n        const w = new Uint32Array(64);\n\n        function blocks(p) {\n            let off = 0, len = p.length;\n            while (len >= 64) {\n                let a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i, j, t1, t2;\n\n                for (i = 0; i < 16; i++) {\n                    j = off + i*4;\n                    w[i] = ((p[j] & 0xff)<<24) | ((p[j+1] & 0xff)<<16) |\n                    ((p[j+2] & 0xff)<<8) | (p[j+3] & 0xff);\n                }\n\n                for (i = 16; i < 64; i++) {\n                    u = w[i-2];\n                    t1 = ((u>>>17) | (u<<(32-17))) ^ ((u>>>19) | (u<<(32-19))) ^ (u>>>10);\n\n                    u = w[i-15];\n                    t2 = ((u>>>7) | (u<<(32-7))) ^ ((u>>>18) | (u<<(32-18))) ^ (u>>>3);\n\n                    w[i] = (((t1 + w[i-7]) | 0) + ((t2 + w[i-16]) | 0)) | 0;\n                }\n\n                for (i = 0; i < 64; i++) {\n                    t1 = ((((((e>>>6) | (e<<(32-6))) ^ ((e>>>11) | (e<<(32-11))) ^\n                             ((e>>>25) | (e<<(32-25)))) + ((e & f) ^ (~e & g))) | 0) +\n                          ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n\n                    t2 = ((((a>>>2) | (a<<(32-2))) ^ ((a>>>13) | (a<<(32-13))) ^\n                           ((a>>>22) | (a<<(32-22)))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n\n                    h = g;\n                    g = f;\n                    f = e;\n                    e = (d + t1) | 0;\n                    d = c;\n                    c = b;\n                    b = a;\n                    a = (t1 + t2) | 0;\n                }\n\n                h0 = (h0 + a) | 0;\n                h1 = (h1 + b) | 0;\n                h2 = (h2 + c) | 0;\n                h3 = (h3 + d) | 0;\n                h4 = (h4 + e) | 0;\n                h5 = (h5 + f) | 0;\n                h6 = (h6 + g) | 0;\n                h7 = (h7 + h) | 0;\n\n                off += 64;\n                len -= 64;\n            }\n        }\n\n        blocks(m);\n\n        let i, bytesLeft = m.length % 64,\n        bitLenHi = (m.length / 0x20000000) | 0,\n        bitLenLo = m.length << 3,\n        numZeros = (bytesLeft < 56) ? 56 : 120,\n        p = m.slice(m.length - bytesLeft, m.length);\n\n        p.push(0x80);\n        for (i = bytesLeft + 1; i < numZeros; i++) { p.push(0); }\n        p.push((bitLenHi >>> 24) & 0xff);\n        p.push((bitLenHi >>> 16) & 0xff);\n        p.push((bitLenHi >>> 8)  & 0xff);\n        p.push((bitLenHi >>> 0)  & 0xff);\n        p.push((bitLenLo >>> 24) & 0xff);\n        p.push((bitLenLo >>> 16) & 0xff);\n        p.push((bitLenLo >>> 8)  & 0xff);\n        p.push((bitLenLo >>> 0)  & 0xff);\n\n        blocks(p);\n\n        return [\n            (h0 >>> 24) & 0xff, (h0 >>> 16) & 0xff, (h0 >>> 8) & 0xff, (h0 >>> 0) & 0xff,\n            (h1 >>> 24) & 0xff, (h1 >>> 16) & 0xff, (h1 >>> 8) & 0xff, (h1 >>> 0) & 0xff,\n            (h2 >>> 24) & 0xff, (h2 >>> 16) & 0xff, (h2 >>> 8) & 0xff, (h2 >>> 0) & 0xff,\n            (h3 >>> 24) & 0xff, (h3 >>> 16) & 0xff, (h3 >>> 8) & 0xff, (h3 >>> 0) & 0xff,\n            (h4 >>> 24) & 0xff, (h4 >>> 16) & 0xff, (h4 >>> 8) & 0xff, (h4 >>> 0) & 0xff,\n            (h5 >>> 24) & 0xff, (h5 >>> 16) & 0xff, (h5 >>> 8) & 0xff, (h5 >>> 0) & 0xff,\n            (h6 >>> 24) & 0xff, (h6 >>> 16) & 0xff, (h6 >>> 8) & 0xff, (h6 >>> 0) & 0xff,\n            (h7 >>> 24) & 0xff, (h7 >>> 16) & 0xff, (h7 >>> 8) & 0xff, (h7 >>> 0) & 0xff\n        ];\n    }\n\n    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {\n        // compress password if it's longer than hash block length\n        password = (password.length <= 64) ? password : SHA256(password);\n\n        const innerLen = 64 + salt.length + 4;\n        const inner = new Array(innerLen);\n        const outerKey = new Array(64);\n\n        let i;\n        let dk = [];\n\n        // inner = (password ^ ipad) || salt || counter\n        for (i = 0; i < 64; i++) { inner[i] = 0x36; }\n        for (i = 0; i < password.length; i++) { inner[i] ^= password[i]; }\n        for (i = 0; i < salt.length; i++) { inner[64 + i] = salt[i]; }\n        for (i = innerLen - 4; i < innerLen; i++) { inner[i] = 0; }\n\n        // outerKey = password ^ opad\n        for (i = 0; i < 64; i++) outerKey[i] = 0x5c;\n        for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];\n\n        // increments counter inside inner\n        function incrementCounter() {\n            for (let i = innerLen - 1; i >= innerLen - 4; i--) {\n                inner[i]++;\n                if (inner[i] <= 0xff) return;\n                inner[i] = 0;\n            }\n        }\n\n        // output blocks = SHA256(outerKey || SHA256(inner)) ...\n        while (dkLen >= 32) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));\n            dkLen -= 32;\n        }\n        if (dkLen > 0) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));\n        }\n\n        return dk;\n    }\n\n    // The following is an adaptation of scryptsy\n    // See: https://www.npmjs.com/package/scryptsy\n    function blockmix_salsa8(BY, Yi, r, x, _X) {\n        let i;\n\n        arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);\n        for (i = 0; i < 2 * r; i++) {\n            blockxor(BY, i * 16, _X, 16);\n            salsa20_8(_X, x);\n            arraycopy(_X, 0, BY, Yi + (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2) * 16, BY, (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);\n        }\n    }\n\n    function R(a, b) {\n        return (a << b) | (a >>> (32 - b));\n    }\n\n    function salsa20_8(B, x) {\n        arraycopy(B, 0, x, 0, 16);\n\n        for (let i = 8; i > 0; i -= 2) {\n            x[ 4] ^= R(x[ 0] + x[12], 7);\n            x[ 8] ^= R(x[ 4] + x[ 0], 9);\n            x[12] ^= R(x[ 8] + x[ 4], 13);\n            x[ 0] ^= R(x[12] + x[ 8], 18);\n            x[ 9] ^= R(x[ 5] + x[ 1], 7);\n            x[13] ^= R(x[ 9] + x[ 5], 9);\n            x[ 1] ^= R(x[13] + x[ 9], 13);\n            x[ 5] ^= R(x[ 1] + x[13], 18);\n            x[14] ^= R(x[10] + x[ 6], 7);\n            x[ 2] ^= R(x[14] + x[10], 9);\n            x[ 6] ^= R(x[ 2] + x[14], 13);\n            x[10] ^= R(x[ 6] + x[ 2], 18);\n            x[ 3] ^= R(x[15] + x[11], 7);\n            x[ 7] ^= R(x[ 3] + x[15], 9);\n            x[11] ^= R(x[ 7] + x[ 3], 13);\n            x[15] ^= R(x[11] + x[ 7], 18);\n            x[ 1] ^= R(x[ 0] + x[ 3], 7);\n            x[ 2] ^= R(x[ 1] + x[ 0], 9);\n            x[ 3] ^= R(x[ 2] + x[ 1], 13);\n            x[ 0] ^= R(x[ 3] + x[ 2], 18);\n            x[ 6] ^= R(x[ 5] + x[ 4], 7);\n            x[ 7] ^= R(x[ 6] + x[ 5], 9);\n            x[ 4] ^= R(x[ 7] + x[ 6], 13);\n            x[ 5] ^= R(x[ 4] + x[ 7], 18);\n            x[11] ^= R(x[10] + x[ 9], 7);\n            x[ 8] ^= R(x[11] + x[10], 9);\n            x[ 9] ^= R(x[ 8] + x[11], 13);\n            x[10] ^= R(x[ 9] + x[ 8], 18);\n            x[12] ^= R(x[15] + x[14], 7);\n            x[13] ^= R(x[12] + x[15], 9);\n            x[14] ^= R(x[13] + x[12], 13);\n            x[15] ^= R(x[14] + x[13], 18);\n        }\n\n        for (let i = 0; i < 16; ++i) {\n            B[i] += x[i];\n        }\n    }\n\n    // naive approach... going back to loop unrolling may yield additional performance\n    function blockxor(S, Si, D, len) {\n        for (let i = 0; i < len; i++) {\n            D[i] ^= S[Si + i];\n        }\n    }\n\n    function arraycopy(src, srcPos, dest, destPos, length) {\n        while (length--) {\n            dest[destPos++] = src[srcPos++];\n        }\n    }\n\n    function checkBufferish(o) {\n        if (!o || typeof(o.length) !== 'number') { return false; }\n\n        for (let i = 0; i < o.length; i++) {\n            const v = o[i];\n            if (typeof(v) !== 'number' || v % 1 || v < 0 || v >= 256) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function ensureInteger(value, name) {\n        if (typeof(value) !== \"number\" || (value % 1)) { throw new Error('invalid ' + name); }\n        return value;\n    }\n\n    // N = Cpu cost, r = Memory cost, p = parallelization cost\n    // callback(error, progress, key)\n    function _scrypt(password, salt, N, r, p, dkLen, callback) {\n\n        N = ensureInteger(N, 'N');\n        r = ensureInteger(r, 'r');\n        p = ensureInteger(p, 'p');\n\n        dkLen = ensureInteger(dkLen, 'dkLen');\n\n        if (N === 0 || (N & (N - 1)) !== 0) { throw new Error('N must be power of 2'); }\n\n        if (N > MAX_VALUE / 128 / r) { throw new Error('N too large'); }\n        if (r > MAX_VALUE / 128 / p) { throw new Error('r too large'); }\n\n        if (!checkBufferish(password)) {\n            throw new Error('password must be an array or buffer');\n        }\n        password = Array.prototype.slice.call(password);\n\n        if (!checkBufferish(salt)) {\n            throw new Error('salt must be an array or buffer');\n        }\n        salt = Array.prototype.slice.call(salt);\n\n        let b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);\n        const B = new Uint32Array(p * 32 * r);\n        for (let i = 0; i < B.length; i++) {\n            const j = i * 4;\n            B[i] = ((b[j + 3] & 0xff) << 24) |\n                   ((b[j + 2] & 0xff) << 16) |\n                   ((b[j + 1] & 0xff) << 8) |\n                   ((b[j + 0] & 0xff) << 0);\n        }\n\n        const XY = new Uint32Array(64 * r);\n        const V = new Uint32Array(32 * r * N);\n\n        const Yi = 32 * r;\n\n        // scratch space\n        const x = new Uint32Array(16);       // salsa20_8\n        const _X = new Uint32Array(16);      // blockmix_salsa8\n\n        const totalOps = p * N * 2;\n        let currentOp = 0;\n        let lastPercent10 = null;\n\n        // Set this to true to abandon the scrypt on the next step\n        let stop = false;\n\n        // State information\n        let state = 0;\n        let i0 = 0, i1;\n        let Bi;\n\n        // How many blockmix_salsa8 can we do per step?\n        const limit = callback ? parseInt(1000 / r): 0xffffffff;\n\n        // Trick from scrypt-async; if there is a setImmediate shim in place, use it\n        const nextTick = (typeof(setImmediate) !== 'undefined') ? setImmediate : setTimeout;\n\n        // This is really all I changed; making scryptsy a state machine so we occasionally\n        // stop and give other evnts on the evnt loop a chance to run. ~RicMoo\n        const incrementalSMix = function() {\n            if (stop) {\n                return callback(new Error('cancelled'), currentOp / totalOps);\n            }\n\n            let steps;\n\n            switch (state) {\n                case 0:\n                    // for (var i = 0; i < p; i++)...\n                    Bi = i0 * 32 * r;\n\n                    arraycopy(B, Bi, XY, 0, Yi);                       // ROMix - 1\n\n                    state = 1;                                         // Move to ROMix 2\n                    i1 = 0;\n\n                    // Fall through\n\n                case 1:\n\n                    // Run up to 1000 steps of the first inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                  // ROMix - 2\n                        arraycopy(XY, 0, V, (i1 + i) * Yi, Yi);         // ROMix - 3\n                        blockmix_salsa8(XY, Yi, r, x, _X);             // ROMix - 4\n                    }\n\n                    // for (var i = 0; i < N; i++)\n                    i1 += steps;\n                    currentOp += steps;\n\n                    if (callback) {\n                        // Call the callback with the progress (optionally stopping us)\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    i1 = 0;                                          // Move to ROMix 6\n                    state = 2;\n\n                    // Fall through\n\n                case 2:\n\n                    // Run up to 1000 steps of the second inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                // ROMix - 6\n                        const offset = (2 * r - 1) * 16;             // ROMix - 7\n                        const j = XY[offset] & (N - 1);\n                        blockxor(V, j * Yi, XY, Yi);                 // ROMix - 8 (inner)\n                        blockmix_salsa8(XY, Yi, r, x, _X);           // ROMix - 9 (outer)\n                    }\n\n                    // for (var i = 0; i < N; i++)...\n                    i1 += steps;\n                    currentOp += steps;\n\n                    // Call the callback with the progress (optionally stopping us)\n                    if (callback) {\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    arraycopy(XY, 0, B, Bi, Yi);                     // ROMix - 10\n\n                    // for (var i = 0; i < p; i++)...\n                    i0++;\n                    if (i0 < p) {\n                        state = 0;\n                        break;\n                    }\n\n                    b = [];\n                    for (let i = 0; i < B.length; i++) {\n                        b.push((B[i] >>  0) & 0xff);\n                        b.push((B[i] >>  8) & 0xff);\n                        b.push((B[i] >> 16) & 0xff);\n                        b.push((B[i] >> 24) & 0xff);\n                    }\n\n                    const derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);\n\n                    // Send the result to the callback\n                    if (callback) { callback(null, 1.0, derivedKey); }\n\n                    // Done; don't break (which would reschedule)\n                    return derivedKey;\n            }\n\n            // Schedule the next steps\n            if (callback) { nextTick(incrementalSMix); }\n        };\n\n        // Run the smix state machine until completion\n        if (!callback) {\n            while (true) {\n                const derivedKey = incrementalSMix();\n                if (derivedKey != undefined) { return derivedKey; }\n            }\n        }\n\n        // Bootstrap the async incremental smix\n        incrementalSMix();\n    }\n\n    const lib = {\n        scrypt: function(password, salt, N, r, p, dkLen, progressCallback) {\n            return new Promise(function(resolve, reject) {\n                let lastProgress = 0;\n                if (progressCallback) { progressCallback(0); }\n                _scrypt(password, salt, N, r, p, dkLen, function(error, progress, key) {\n                    if (error) {\n                        reject(error);\n                    } else if (key) {\n                        if (progressCallback && lastProgress !== 1) {\n                            progressCallback(1);\n                        }\n                        resolve(new Uint8Array(key));\n                    } else if (progressCallback && progress !== lastProgress) {\n                        lastProgress = progress;\n                        return progressCallback(progress);\n                    }\n                });\n            });\n        },\n        syncScrypt: function(password, salt, N, r, p, dkLen) {\n            return new Uint8Array(_scrypt(password, salt, N, r, p, dkLen));\n        }\n    };\n\n    // node.js\n    {\n       module.exports = lib;\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    }\n\n})();\n});\n\nvar __awaiter$5 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst logger$o = new Logger(version$i);\n// Exported Types\nfunction hasMnemonic(value) {\n    return (value != null && value.mnemonic && value.mnemonic.phrase);\n}\nclass KeystoreAccount extends Description {\n    isKeystoreAccount(value) {\n        return !!(value && value._isKeystoreAccount);\n    }\n}\nfunction _decrypt(data, key, ciphertext) {\n    const cipher = searchPath(data, \"crypto/cipher\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = looseArrayify(searchPath(data, \"crypto/cipherparams/iv\"));\n        const counter = new aesJs.Counter(iv);\n        const aesCtr = new aesJs.ModeOfOperation.ctr(key, counter);\n        return arrayify(aesCtr.decrypt(ciphertext));\n    }\n    return null;\n}\nfunction _getAccount(data, key) {\n    const ciphertext = looseArrayify(searchPath(data, \"crypto/ciphertext\"));\n    const computedMAC = hexlify(keccak256(concat([key.slice(16, 32), ciphertext]))).substring(2);\n    if (computedMAC !== searchPath(data, \"crypto/mac\").toLowerCase()) {\n        throw new Error(\"invalid password\");\n    }\n    const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n    if (!privateKey) {\n        logger$o.throwError(\"unsupported cipher\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"decrypt\"\n        });\n    }\n    const mnemonicKey = key.slice(32, 64);\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (check.substring(0, 2) !== \"0x\") {\n            check = \"0x\" + check;\n        }\n        if (getAddress(check) !== address) {\n            throw new Error(\"address mismatch\");\n        }\n    }\n    const account = {\n        _isKeystoreAccount: true,\n        address: address,\n        privateKey: hexlify(privateKey)\n    };\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    if (searchPath(data, \"x-ethers/version\") === \"0.1\") {\n        const mnemonicCiphertext = looseArrayify(searchPath(data, \"x-ethers/mnemonicCiphertext\"));\n        const mnemonicIv = looseArrayify(searchPath(data, \"x-ethers/mnemonicCounter\"));\n        const mnemonicCounter = new aesJs.Counter(mnemonicIv);\n        const mnemonicAesCtr = new aesJs.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n        const path = searchPath(data, \"x-ethers/path\") || defaultPath;\n        const locale = searchPath(data, \"x-ethers/locale\") || \"en\";\n        const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n        try {\n            const mnemonic = entropyToMnemonic(entropy, locale);\n            const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n            account.mnemonic = node.mnemonic;\n        }\n        catch (error) {\n            // If we don't have the locale wordlist installed to\n            // read this mnemonic, just bail and don't set the\n            // mnemonic\n            if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n                throw error;\n            }\n        }\n    }\n    return new KeystoreAccount(account);\n}\nfunction pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc) {\n    return arrayify(pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction pbkdf2$1(passwordBytes, salt, count, dkLen, prfFunc) {\n    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction _computeKdfKey(data, password, pbkdf2Func, scryptFunc, progressCallback) {\n    const passwordBytes = getPassword(password);\n    const kdf = searchPath(data, \"crypto/kdf\");\n    if (kdf && typeof (kdf) === \"string\") {\n        const throwError = function (name, value) {\n            return logger$o.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n        };\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            const N = parseInt(searchPath(data, \"crypto/kdfparams/n\"));\n            const r = parseInt(searchPath(data, \"crypto/kdfparams/r\"));\n            const p = parseInt(searchPath(data, \"crypto/kdfparams/p\"));\n            // Check for all required parameters\n            if (!N || !r || !p) {\n                throwError(\"kdf\", kdf);\n            }\n            // Make sure N is a power of 2\n            if ((N & (N - 1)) !== 0) {\n                throwError(\"N\", N);\n            }\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n        }\n        else if (kdf.toLowerCase() === \"pbkdf2\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            let prfFunc = null;\n            const prf = searchPath(data, \"crypto/kdfparams/prf\");\n            if (prf === \"hmac-sha256\") {\n                prfFunc = \"sha256\";\n            }\n            else if (prf === \"hmac-sha512\") {\n                prfFunc = \"sha512\";\n            }\n            else {\n                throwError(\"prf\", prf);\n            }\n            const count = parseInt(searchPath(data, \"crypto/kdfparams/c\"));\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n        }\n    }\n    return logger$o.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\nfunction decryptSync(json, password) {\n    const data = JSON.parse(json);\n    const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt);\n    return _getAccount(data, key);\n}\nfunction decrypt$1(json, password, progressCallback) {\n    return __awaiter$5(this, void 0, void 0, function* () {\n        const data = JSON.parse(json);\n        const key = yield _computeKdfKey(data, password, pbkdf2$1, scrypt.scrypt, progressCallback);\n        return _getAccount(data, key);\n    });\n}\nfunction encrypt(account, password, options, progressCallback) {\n    try {\n        // Check the address matches the private key\n        if (getAddress(account.address) !== computeAddress(account.privateKey)) {\n            throw new Error(\"address/privateKey mismatch\");\n        }\n        // Check the mnemonic (if any) matches the private key\n        if (hasMnemonic(account)) {\n            const mnemonic = account.mnemonic;\n            const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n        }\n    }\n    catch (e) {\n        return Promise.reject(e);\n    }\n    // The options are optional, so adjust the call as needed\n    if (typeof (options) === \"function\" && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) {\n        options = {};\n    }\n    const privateKey = arrayify(account.privateKey);\n    const passwordBytes = getPassword(password);\n    let entropy = null;\n    let path = null;\n    let locale = null;\n    if (hasMnemonic(account)) {\n        const srcMnemonic = account.mnemonic;\n        entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n        path = srcMnemonic.path || defaultPath;\n        locale = srcMnemonic.locale || \"en\";\n    }\n    let client = options.client;\n    if (!client) {\n        client = \"ethers.js\";\n    }\n    // Check/generate the salt\n    let salt = null;\n    if (options.salt) {\n        salt = arrayify(options.salt);\n    }\n    else {\n        salt = randomBytes(32);\n    }\n    // Override initialization vector\n    let iv = null;\n    if (options.iv) {\n        iv = arrayify(options.iv);\n        if (iv.length !== 16) {\n            throw new Error(\"invalid iv\");\n        }\n    }\n    else {\n        iv = randomBytes(16);\n    }\n    // Override the uuid\n    let uuidRandom = null;\n    if (options.uuid) {\n        uuidRandom = arrayify(options.uuid);\n        if (uuidRandom.length !== 16) {\n            throw new Error(\"invalid uuid\");\n        }\n    }\n    else {\n        uuidRandom = randomBytes(16);\n    }\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) {\n            N = options.scrypt.N;\n        }\n        if (options.scrypt.r) {\n            r = options.scrypt.r;\n        }\n        if (options.scrypt.p) {\n            p = options.scrypt.p;\n        }\n    }\n    // We take 64 bytes:\n    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    return scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key) => {\n        key = arrayify(key);\n        // This will be used to encrypt the wallet (as per Web3 secret storage)\n        const derivedKey = key.slice(0, 16);\n        const macPrefix = key.slice(16, 32);\n        // This will be used to encrypt the mnemonic phrase (if any)\n        const mnemonicKey = key.slice(32, 64);\n        // Encrypt the private key\n        const counter = new aesJs.Counter(iv);\n        const aesCtr = new aesJs.ModeOfOperation.ctr(derivedKey, counter);\n        const ciphertext = arrayify(aesCtr.encrypt(privateKey));\n        // Compute the message authentication code, used to check the password\n        const mac = keccak256(concat([macPrefix, ciphertext]));\n        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n        const data = {\n            address: account.address.substring(2).toLowerCase(),\n            id: uuidV4(uuidRandom),\n            version: 3,\n            Crypto: {\n                cipher: \"aes-128-ctr\",\n                cipherparams: {\n                    iv: hexlify(iv).substring(2),\n                },\n                ciphertext: hexlify(ciphertext).substring(2),\n                kdf: \"scrypt\",\n                kdfparams: {\n                    salt: hexlify(salt).substring(2),\n                    n: N,\n                    dklen: 32,\n                    p: p,\n                    r: r\n                },\n                mac: mac.substring(2)\n            }\n        };\n        // If we have a mnemonic, encrypt it into the JSON wallet\n        if (entropy) {\n            const mnemonicIv = randomBytes(16);\n            const mnemonicCounter = new aesJs.Counter(mnemonicIv);\n            const mnemonicAesCtr = new aesJs.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));\n            const now = new Date();\n            const timestamp = (now.getUTCFullYear() + \"-\" +\n                zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                zpad(now.getUTCDate(), 2) + \"T\" +\n                zpad(now.getUTCHours(), 2) + \"-\" +\n                zpad(now.getUTCMinutes(), 2) + \"-\" +\n                zpad(now.getUTCSeconds(), 2) + \".0Z\");\n            data[\"x-ethers\"] = {\n                client: client,\n                gethFilename: (\"UTC--\" + timestamp + \"--\" + data.address),\n                mnemonicCounter: hexlify(mnemonicIv).substring(2),\n                mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n                path: path,\n                locale: locale,\n                version: \"0.1\"\n            };\n        }\n        return JSON.stringify(data);\n    });\n}\n//# sourceMappingURL=keystore.js.map\n\nfunction decryptJsonWallet(json, password, progressCallback) {\n    if (isCrowdsaleWallet(json)) {\n        if (progressCallback) {\n            progressCallback(0);\n        }\n        const account = decrypt(json, password);\n        if (progressCallback) {\n            progressCallback(1);\n        }\n        return Promise.resolve(account);\n    }\n    if (isKeystoreWallet(json)) {\n        return decrypt$1(json, password, progressCallback);\n    }\n    return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\nfunction decryptJsonWalletSync(json, password) {\n    if (isCrowdsaleWallet(json)) {\n        return decrypt(json, password);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptSync(json, password);\n    }\n    throw new Error(\"invalid JSON wallet\");\n}\n//# sourceMappingURL=index.js.map\n\nconst version$j = \"wallet/5.4.0\";\n//# sourceMappingURL=_version.js.map\n\nvar __awaiter$6 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst logger$p = new Logger(version$j);\nfunction isAccount(value) {\n    return (value != null && isHexString(value.privateKey, 32) && value.address != null);\n}\nfunction hasMnemonic$1(value) {\n    const mnemonic = value.mnemonic;\n    return (mnemonic && mnemonic.phrase);\n}\nclass Wallet extends Signer {\n    constructor(privateKey, provider) {\n        logger$p.checkNew(new.target, Wallet);\n        super();\n        if (isAccount(privateKey)) {\n            const signingKey = new SigningKey(privateKey.privateKey);\n            defineReadOnly(this, \"_signingKey\", () => signingKey);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n            if (this.address !== getAddress(privateKey.address)) {\n                logger$p.throwArgumentError(\"privateKey/address mismatch\", \"privateKey\", \"[REDACTED]\");\n            }\n            if (hasMnemonic$1(privateKey)) {\n                const srcMnemonic = privateKey.mnemonic;\n                defineReadOnly(this, \"_mnemonic\", () => ({\n                    phrase: srcMnemonic.phrase,\n                    path: srcMnemonic.path || defaultPath,\n                    locale: srcMnemonic.locale || \"en\"\n                }));\n                const mnemonic = this.mnemonic;\n                const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);\n                if (computeAddress(node.privateKey) !== this.address) {\n                    logger$p.throwArgumentError(\"mnemonic/address mismatch\", \"privateKey\", \"[REDACTED]\");\n                }\n            }\n            else {\n                defineReadOnly(this, \"_mnemonic\", () => null);\n            }\n        }\n        else {\n            if (SigningKey.isSigningKey(privateKey)) {\n                /* istanbul ignore if */\n                if (privateKey.curve !== \"secp256k1\") {\n                    logger$p.throwArgumentError(\"unsupported curve; must be secp256k1\", \"privateKey\", \"[REDACTED]\");\n                }\n                defineReadOnly(this, \"_signingKey\", () => privateKey);\n            }\n            else {\n                // A lot of common tools do not prefix private keys with a 0x (see: #1166)\n                if (typeof (privateKey) === \"string\") {\n                    if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n                        privateKey = \"0x\" + privateKey;\n                    }\n                }\n                const signingKey = new SigningKey(privateKey);\n                defineReadOnly(this, \"_signingKey\", () => signingKey);\n            }\n            defineReadOnly(this, \"_mnemonic\", () => null);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        }\n        /* istanbul ignore if */\n        if (provider && !Provider.isProvider(provider)) {\n            logger$p.throwArgumentError(\"invalid provider\", \"provider\", provider);\n        }\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n    get mnemonic() { return this._mnemonic(); }\n    get privateKey() { return this._signingKey().privateKey; }\n    get publicKey() { return this._signingKey().publicKey; }\n    getAddress() {\n        return Promise.resolve(this.address);\n    }\n    connect(provider) {\n        return new Wallet(this, provider);\n    }\n    signTransaction(transaction) {\n        return resolveProperties(transaction).then((tx) => {\n            if (tx.from != null) {\n                if (getAddress(tx.from) !== this.address) {\n                    logger$p.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n                }\n                delete tx.from;\n            }\n            const signature = this._signingKey().signDigest(keccak256(serialize(tx)));\n            return serialize(tx, signature);\n        });\n    }\n    signMessage(message) {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            return joinSignature(this._signingKey().signDigest(hashMessage(message)));\n        });\n    }\n    _signTypedData(domain, types, value) {\n        return __awaiter$6(this, void 0, void 0, function* () {\n            // Populate any ENS names\n            const populated = yield TypedDataEncoder.resolveNames(domain, types, value, (name) => {\n                if (this.provider == null) {\n                    logger$p.throwError(\"cannot resolve ENS names without a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"resolveName\",\n                        value: name\n                    });\n                }\n                return this.provider.resolveName(name);\n            });\n            return joinSignature(this._signingKey().signDigest(TypedDataEncoder.hash(populated.domain, types, populated.value)));\n        });\n    }\n    encrypt(password, options, progressCallback) {\n        if (typeof (options) === \"function\" && !progressCallback) {\n            progressCallback = options;\n            options = {};\n        }\n        if (progressCallback && typeof (progressCallback) !== \"function\") {\n            throw new Error(\"invalid callback\");\n        }\n        if (!options) {\n            options = {};\n        }\n        return encrypt(this, password, options, progressCallback);\n    }\n    /**\n     *  Static methods to create Wallet instances.\n     */\n    static createRandom(options) {\n        let entropy = randomBytes(16);\n        if (!options) {\n            options = {};\n        }\n        if (options.extraEntropy) {\n            entropy = arrayify(hexDataSlice(keccak256(concat([entropy, options.extraEntropy])), 0, 16));\n        }\n        const mnemonic = entropyToMnemonic(entropy, options.locale);\n        return Wallet.fromMnemonic(mnemonic, options.path, options.locale);\n    }\n    static fromEncryptedJson(json, password, progressCallback) {\n        return decryptJsonWallet(json, password, progressCallback).then((account) => {\n            return new Wallet(account);\n        });\n    }\n    static fromEncryptedJsonSync(json, password) {\n        return new Wallet(decryptJsonWalletSync(json, password));\n    }\n    static fromMnemonic(mnemonic, path, wordlist) {\n        if (!path) {\n            path = defaultPath;\n        }\n        return new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));\n    }\n}\nfunction verifyMessage(message, signature) {\n    return recoverAddress(hashMessage(message), signature);\n}\nfunction verifyTypedData(domain, types, value, signature) {\n    return recoverAddress(TypedDataEncoder.hash(domain, types, value), signature);\n}\n//# sourceMappingURL=index.js.map\n\nconst version$k = \"networks/5.4.2\";\n//# sourceMappingURL=_version.js.map\n\nconst logger$q = new Logger(version$k);\nfunction isRenetworkable(value) {\n    return (value && typeof (value.renetwork) === \"function\");\n}\nfunction ethDefaultProvider(network) {\n    const func = function (providers, options) {\n        if (options == null) {\n            options = {};\n        }\n        const providerList = [];\n        if (providers.InfuraProvider) {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            }\n            catch (error) { }\n        }\n        if (providers.EtherscanProvider) {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            }\n            catch (error) { }\n        }\n        if (providers.AlchemyProvider) {\n            try {\n                providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n            }\n            catch (error) { }\n        }\n        if (providers.PocketProvider) {\n            // These networks are currently faulty on Pocket as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once Pocket has upgraded their nodes\n            const skip = [\"goerli\", \"ropsten\", \"rinkeby\"];\n            try {\n                const provider = new providers.PocketProvider(network);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            }\n            catch (error) { }\n        }\n        if (providers.CloudflareProvider) {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            }\n            catch (error) { }\n        }\n        if (providerList.length === 0) {\n            return null;\n        }\n        if (providers.FallbackProvider) {\n            let quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            }\n            else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n        return providerList[0];\n    };\n    func.renetwork = function (network) {\n        return ethDefaultProvider(network);\n    };\n    return func;\n}\nfunction etcDefaultProvider(url, network) {\n    const func = function (providers, options) {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n        return null;\n    };\n    func.renetwork = function (network) {\n        return etcDefaultProvider(url, network);\n    };\n    return func;\n}\nconst homestead = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\nconst ropsten = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\nconst classicMordor = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\nconst networks = {\n    unspecified: { chainId: 0, name: \"unspecified\" },\n    homestead: homestead,\n    mainnet: homestead,\n    morden: { chainId: 2, name: \"morden\" },\n    ropsten: ropsten,\n    testnet: ropsten,\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/etc\", \"classic\")\n    },\n    classicMorden: { chainId: 62, name: \"classicMorden\" },\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n    xdai: { chainId: 100, name: \"xdai\" },\n    matic: { chainId: 137, name: \"matic\" },\n    maticmum: { chainId: 80001, name: \"maticmum\" },\n    bnb: { chainId: 56, name: \"bnb\" },\n    bnbt: { chainId: 97, name: \"bnbt\" },\n};\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nfunction getNetwork(network) {\n    // No network (null)\n    if (network == null) {\n        return null;\n    }\n    if (typeof (network) === \"number\") {\n        for (const name in networks) {\n            const standard = networks[name];\n            if (standard.chainId === network) {\n                return {\n                    name: standard.name,\n                    chainId: standard.chainId,\n                    ensAddress: (standard.ensAddress || null),\n                    _defaultProvider: (standard._defaultProvider || null)\n                };\n            }\n        }\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n    if (typeof (network) === \"string\") {\n        const standard = networks[network];\n        if (standard == null) {\n            return null;\n        }\n        return {\n            name: standard.name,\n            chainId: standard.chainId,\n            ensAddress: standard.ensAddress,\n            _defaultProvider: (standard._defaultProvider || null)\n        };\n    }\n    const standard = networks[network.name];\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof (network.chainId) !== \"number\") {\n            logger$q.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        logger$q.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    let defaultProvider = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        }\n        else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\n//# sourceMappingURL=index.js.map\n\nfunction decode$1(textData) {\n    textData = atob(textData);\n    const data = [];\n    for (let i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return arrayify(data);\n}\nfunction encode$1(data) {\n    data = arrayify(data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n//# sourceMappingURL=base64.js.map\n\n//# sourceMappingURL=index.js.map\n\nvar index$2 = {\n  __proto__: null,\n  decode: decode$1,\n  encode: encode$1\n};\n\nconst version$l = \"web/5.4.0\";\n//# sourceMappingURL=_version.js.map\n\nvar __awaiter$7 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nfunction getUrl(href, options) {\n    return __awaiter$7(this, void 0, void 0, function* () {\n        if (options == null) {\n            options = {};\n        }\n        const request = {\n            method: (options.method || \"GET\"),\n            headers: (options.headers || {}),\n            body: (options.body || undefined),\n            mode: \"cors\",\n            cache: \"no-cache\",\n            credentials: \"same-origin\",\n            redirect: \"follow\",\n            referrer: \"client\", // no-referrer, *client\n        };\n        const response = yield fetch(href, request);\n        const body = yield response.arrayBuffer();\n        const headers = {};\n        if (response.headers.forEach) {\n            response.headers.forEach((value, key) => {\n                headers[key.toLowerCase()] = value;\n            });\n        }\n        else {\n            ((response.headers).keys)().forEach((key) => {\n                headers[key.toLowerCase()] = response.headers.get(key);\n            });\n        }\n        return {\n            headers: headers,\n            statusCode: response.status,\n            statusMessage: response.statusText,\n            body: arrayify(new Uint8Array(body)),\n        };\n    });\n}\n//# sourceMappingURL=geturl.js.map\n\nvar __awaiter$8 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst logger$r = new Logger(version$l);\nfunction staller(duration) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\nfunction bodyify(value, type) {\n    if (value == null) {\n        return null;\n    }\n    if (typeof (value) === \"string\") {\n        return value;\n    }\n    if (isBytesLike(value)) {\n        if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n            try {\n                return toUtf8String(value);\n            }\n            catch (error) { }\n        }\n        return hexlify(value);\n    }\n    return value;\n}\n// This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\nfunction _fetchData(connection, body, processFunc) {\n    // How many times to retry in the event of a throttle\n    const attemptLimit = (typeof (connection) === \"object\" && connection.throttleLimit != null) ? connection.throttleLimit : 12;\n    logger$r.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0), \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n    const throttleCallback = ((typeof (connection) === \"object\") ? connection.throttleCallback : null);\n    const throttleSlotInterval = ((typeof (connection) === \"object\" && typeof (connection.throttleSlotInterval) === \"number\") ? connection.throttleSlotInterval : 100);\n    logger$r.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0), \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n    const headers = {};\n    let url = null;\n    // @TODO: Allow ConnectionInfo to override some of these values\n    const options = {\n        method: \"GET\",\n    };\n    let allow304 = false;\n    let timeout = 2 * 60 * 1000;\n    if (typeof (connection) === \"string\") {\n        url = connection;\n    }\n    else if (typeof (connection) === \"object\") {\n        if (connection == null || connection.url == null) {\n            logger$r.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n        }\n        url = connection.url;\n        if (typeof (connection.timeout) === \"number\" && connection.timeout > 0) {\n            timeout = connection.timeout;\n        }\n        if (connection.headers) {\n            for (const key in connection.headers) {\n                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };\n                if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n                    allow304 = true;\n                }\n            }\n        }\n        options.allowGzip = !!connection.allowGzip;\n        if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n                logger$r.throwError(\"basic authentication requires a secure https url\", Logger.errors.INVALID_ARGUMENT, { argument: \"url\", url: url, user: connection.user, password: \"[REDACTED]\" });\n            }\n            const authorization = connection.user + \":\" + connection.password;\n            headers[\"authorization\"] = {\n                key: \"Authorization\",\n                value: \"Basic \" + encode$1(toUtf8Bytes(authorization))\n            };\n        }\n    }\n    if (body) {\n        options.method = \"POST\";\n        options.body = body;\n        if (headers[\"content-type\"] == null) {\n            headers[\"content-type\"] = { key: \"Content-Type\", value: \"application/octet-stream\" };\n        }\n        if (headers[\"content-length\"] == null) {\n            headers[\"content-length\"] = { key: \"Content-Length\", value: String(body.length) };\n        }\n    }\n    const flatHeaders = {};\n    Object.keys(headers).forEach((key) => {\n        const header = headers[key];\n        flatHeaders[header.key] = header.value;\n    });\n    options.headers = flatHeaders;\n    const runningTimeout = (function () {\n        let timer = null;\n        const promise = new Promise(function (resolve, reject) {\n            if (timeout) {\n                timer = setTimeout(() => {\n                    if (timer == null) {\n                        return;\n                    }\n                    timer = null;\n                    reject(logger$r.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        timeout: timeout,\n                        url: url\n                    }));\n                }, timeout);\n            }\n        });\n        const cancel = function () {\n            if (timer == null) {\n                return;\n            }\n            clearTimeout(timer);\n            timer = null;\n        };\n        return { promise, cancel };\n    })();\n    const runningFetch = (function () {\n        return __awaiter$8(this, void 0, void 0, function* () {\n            for (let attempt = 0; attempt < attemptLimit; attempt++) {\n                let response = null;\n                try {\n                    response = yield getUrl(url, options);\n                    // Exponential back-off throttling\n                    if (response.statusCode === 429 && attempt < attemptLimit) {\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = yield throttleCallback(attempt, url);\n                        }\n                        if (tryAgain) {\n                            let stall = 0;\n                            const retryAfter = response.headers[\"retry-after\"];\n                            if (typeof (retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                                stall = parseInt(retryAfter) * 1000;\n                            }\n                            else {\n                                stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            }\n                            //console.log(\"Stalling 429\");\n                            yield staller(stall);\n                            continue;\n                        }\n                    }\n                }\n                catch (error) {\n                    response = error.response;\n                    if (response == null) {\n                        runningTimeout.cancel();\n                        logger$r.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n                            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                            requestMethod: options.method,\n                            serverError: error,\n                            url: url\n                        });\n                    }\n                }\n                let body = response.body;\n                if (allow304 && response.statusCode === 304) {\n                    body = null;\n                }\n                else if (response.statusCode < 200 || response.statusCode >= 300) {\n                    runningTimeout.cancel();\n                    logger$r.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n                        status: response.statusCode,\n                        headers: response.headers,\n                        body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"] : null)),\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        url: url\n                    });\n                }\n                if (processFunc) {\n                    try {\n                        const result = yield processFunc(body, response);\n                        runningTimeout.cancel();\n                        return result;\n                    }\n                    catch (error) {\n                        // Allow the processFunc to trigger a throttle\n                        if (error.throttleRetry && attempt < attemptLimit) {\n                            let tryAgain = true;\n                            if (throttleCallback) {\n                                tryAgain = yield throttleCallback(attempt, url);\n                            }\n                            if (tryAgain) {\n                                const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                                //console.log(\"Stalling callback\");\n                                yield staller(timeout);\n                                continue;\n                            }\n                        }\n                        runningTimeout.cancel();\n                        logger$r.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                            body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"] : null)),\n                            error: error,\n                            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                            requestMethod: options.method,\n                            url: url\n                        });\n                    }\n                }\n                runningTimeout.cancel();\n                // If we had a processFunc, it eitehr returned a T or threw above.\n                // The \"body\" is now a Uint8Array.\n                return body;\n            }\n            return logger$r.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n                requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                requestMethod: options.method,\n                url: url\n            });\n        });\n    })();\n    return Promise.race([runningTimeout.promise, runningFetch]);\n}\nfunction fetchJson(connection, json, processFunc) {\n    let processJsonFunc = (value, response) => {\n        let result = null;\n        if (value != null) {\n            try {\n                result = JSON.parse(toUtf8String(value));\n            }\n            catch (error) {\n                logger$r.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n                    body: value,\n                    error: error\n                });\n            }\n        }\n        if (processFunc) {\n            result = processFunc(result, response);\n        }\n        return result;\n    };\n    // If we have json to send, we must\n    // - add content-type of application/json (unless already overridden)\n    // - convert the json to bytes\n    let body = null;\n    if (json != null) {\n        body = toUtf8Bytes(json);\n        // Create a connection with the content-type set for JSON\n        const updated = (typeof (connection) === \"string\") ? ({ url: connection }) : shallowCopy(connection);\n        if (updated.headers) {\n            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === \"content-type\")).length) !== 0;\n            if (!hasContentType) {\n                updated.headers = shallowCopy(updated.headers);\n                updated.headers[\"content-type\"] = \"application/json\";\n            }\n        }\n        else {\n            updated.headers = { \"content-type\": \"application/json\" };\n        }\n        connection = updated;\n    }\n    return _fetchData(connection, body, processJsonFunc);\n}\nfunction poll(func, options) {\n    if (!options) {\n        options = {};\n    }\n    options = shallowCopy(options);\n    if (options.floor == null) {\n        options.floor = 0;\n    }\n    if (options.ceiling == null) {\n        options.ceiling = 10000;\n    }\n    if (options.interval == null) {\n        options.interval = 250;\n    }\n    return new Promise(function (resolve, reject) {\n        let timer = null;\n        let done = false;\n        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n        const cancel = () => {\n            if (done) {\n                return false;\n            }\n            done = true;\n            if (timer) {\n                clearTimeout(timer);\n            }\n            return true;\n        };\n        if (options.timeout) {\n            timer = setTimeout(() => {\n                if (cancel()) {\n                    reject(new Error(\"timeout\"));\n                }\n            }, options.timeout);\n        }\n        const retryLimit = options.retryLimit;\n        let attempt = 0;\n        function check() {\n            return func().then(function (result) {\n                // If we have a result, or are allowed null then we're done\n                if (result !== undefined) {\n                    if (cancel()) {\n                        resolve(result);\n                    }\n                }\n                else if (options.oncePoll) {\n                    options.oncePoll.once(\"poll\", check);\n                }\n                else if (options.onceBlock) {\n                    options.onceBlock.once(\"block\", check);\n                    // Otherwise, exponential back-off (up to 10s) our next request\n                }\n                else if (!done) {\n                    attempt++;\n                    if (attempt > retryLimit) {\n                        if (cancel()) {\n                            reject(new Error(\"retry limit reached\"));\n                        }\n                        return;\n                    }\n                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                    if (timeout < options.floor) {\n                        timeout = options.floor;\n                    }\n                    if (timeout > options.ceiling) {\n                        timeout = options.ceiling;\n                    }\n                    setTimeout(check, timeout);\n                }\n                return null;\n            }, function (error) {\n                if (cancel()) {\n                    reject(error);\n                }\n            });\n        }\n        check();\n    });\n}\n//# sourceMappingURL=index.js.map\n\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {};\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z);\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z;\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25;\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1;\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i);\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5);\n  }\n  chk = polymodStep(chk);\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i);\n    chk = polymodStep(chk) ^ (v & 0x1f);\n  }\n  return chk\n}\n\nfunction encode$2 (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90;\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase();\n\n  // determine chk mod\n  var chk = prefixChk(prefix);\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1';\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i];\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x;\n    result += ALPHABET.charAt(x);\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk);\n  }\n  chk ^= 1;\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f;\n    result += ALPHABET.charAt(v);\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90;\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase();\n  var uppered = str.toUpperCase();\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered;\n\n  var split = str.lastIndexOf('1');\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split);\n  var wordChars = str.slice(split + 1);\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix);\n  if (typeof chk === 'string') return chk\n\n  var words = [];\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i);\n    var v = ALPHABET_MAP[c];\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v;\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v);\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments);\n  if (typeof res === 'object') return res\n}\n\nfunction decode$2 (str) {\n  var res = __decode.apply(null, arguments);\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0;\n  var bits = 0;\n  var maxV = (1 << outBits) - 1;\n\n  var result = [];\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i];\n    bits += inBits;\n\n    while (bits >= outBits) {\n      bits -= outBits;\n      result.push((value >> bits) & maxV);\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV);\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true);\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true);\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false);\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false);\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nvar bech32 = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode$2,\n  encode: encode$2,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n};\n\nconst version$m = \"providers/5.4.4\";\n//# sourceMappingURL=_version.js.map\n\nconst logger$s = new Logger(version$m);\nclass Formatter {\n    constructor() {\n        logger$s.checkNew(new.target, Formatter);\n        this.formats = this.getDefaultFormats();\n    }\n    getDefaultFormats() {\n        const formats = ({});\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const type = this.type.bind(this);\n        const strictData = (v) => { return this.data(v, true); };\n        formats.transaction = {\n            hash: hash,\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n            confirmations: Formatter.allowNull(number, null),\n            from: address,\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n            creates: Formatter.allowNull(address, null),\n            raw: Formatter.allowNull(data),\n        };\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n        formats.block = {\n            hash: hash,\n            parentHash: hash,\n            number: number,\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n            miner: address,\n            extraData: data,\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n        formats.blockWithTransactions = shallowCopy(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n            topics: Formatter.arrayOf(hash),\n            transactionHash: hash,\n            logIndex: number,\n        };\n        return formats;\n    }\n    accessList(accessList) {\n        return accessListify(accessList || []);\n    }\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number) {\n        if (number === \"0x\") {\n            return 0;\n        }\n        return BigNumber.from(number).toNumber();\n    }\n    type(number) {\n        if (number === \"0x\" || number == null) {\n            return 0;\n        }\n        return BigNumber.from(number).toNumber();\n    }\n    // Strict! Used on input.\n    bigNumber(value) {\n        return BigNumber.from(value);\n    }\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value) {\n        if (typeof (value) === \"boolean\") {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") {\n                return true;\n            }\n            if (value === \"false\") {\n                return false;\n            }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n    hex(value, strict) {\n        if (typeof (value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") {\n                value = \"0x\" + value;\n            }\n            if (isHexString(value)) {\n                return value.toLowerCase();\n            }\n        }\n        return logger$s.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n    data(value, strict) {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n    // Requires an address\n    // Strict! Used on input.\n    address(value) {\n        return getAddress(value);\n    }\n    callAddress(value) {\n        if (!isHexString(value, 32)) {\n            return null;\n        }\n        const address = getAddress(hexDataSlice(value, 12));\n        return (address === AddressZero) ? null : address;\n    }\n    contractAddress(value) {\n        return getContractAddress(value);\n    }\n    // Strict! Used on input.\n    blockTag(blockTag) {\n        if (blockTag == null) {\n            return \"latest\";\n        }\n        if (blockTag === \"earliest\") {\n            return \"0x0\";\n        }\n        if (blockTag === \"latest\" || blockTag === \"pending\") {\n            return blockTag;\n        }\n        if (typeof (blockTag) === \"number\" || isHexString(blockTag)) {\n            return hexValue(blockTag);\n        }\n        throw new Error(\"invalid blockTag\");\n    }\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value, strict) {\n        const result = this.hex(value, strict);\n        if (hexDataLength(result) !== 32) {\n            return logger$s.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value) {\n        if (value == null) {\n            return null;\n        }\n        const v = BigNumber.from(value);\n        try {\n            return v.toNumber();\n        }\n        catch (error) { }\n        return null;\n    }\n    uint256(value) {\n        if (!isHexString(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return hexZeroPad(value, 32);\n    }\n    _block(value, format) {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        return Formatter.check(format, value);\n    }\n    block(value) {\n        return this._block(value, this.formats.block);\n    }\n    blockWithTransactions(value) {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n    // Strict! Used on input.\n    transactionRequest(value) {\n        return Formatter.check(this.formats.transactionRequest, value);\n    }\n    transactionResponse(transaction) {\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n        if ((transaction.type === 1 || transaction.type === 2) && transaction.accessList == null) {\n            transaction.accessList = [];\n        }\n        const result = Formatter.check(this.formats.transaction, transaction);\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n            result.chainId = chainId;\n        }\n        else {\n            let chainId = transaction.networkId;\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n            if (typeof (chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) {\n                    chainId = 0;\n                }\n                chainId = parseInt(chainId);\n            }\n            if (typeof (chainId) !== \"number\") {\n                chainId = 0;\n            }\n            result.chainId = chainId;\n        }\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n        return result;\n    }\n    transaction(value) {\n        return parse(value);\n    }\n    receiptLog(value) {\n        return Formatter.check(this.formats.receiptLog, value);\n    }\n    receipt(value) {\n        const result = Formatter.check(this.formats.receipt, value);\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = BigNumber.from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        logger$s.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                }\n                else {\n                    logger$s.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            }\n            else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger$s.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n        return result;\n    }\n    topics(value) {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n        }\n        else if (value != null) {\n            return this.hash(value, true);\n        }\n        return null;\n    }\n    filter(value) {\n        return Formatter.check(this.formats.filter, value);\n    }\n    filterLog(value) {\n        return Formatter.check(this.formats.filterLog, value);\n    }\n    static check(format, object) {\n        const result = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) {\n                    result[key] = value;\n                }\n            }\n            catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n    // if value is null-ish, nullValue is returned\n    static allowNull(format, nullValue) {\n        return (function (value) {\n            if (value == null) {\n                return nullValue;\n            }\n            return format(value);\n        });\n    }\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format, replaceValue) {\n        return (function (value) {\n            if (!value) {\n                return replaceValue;\n            }\n            return format(value);\n        });\n    }\n    // Requires an Array satisfying check\n    static arrayOf(format) {\n        return (function (array) {\n            if (!Array.isArray(array)) {\n                throw new Error(\"not an array\");\n            }\n            const result = [];\n            array.forEach(function (value) {\n                result.push(format(value));\n            });\n            return result;\n        });\n    }\n}\nfunction isCommunityResourcable(value) {\n    return (value && typeof (value.isCommunityResource) === \"function\");\n}\nfunction isCommunityResource(value) {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\n// Show the throttle message only once\nlet throttleMessage = false;\nfunction showThrottleMessage() {\n    if (throttleMessage) {\n        return;\n    }\n    throttleMessage = true;\n    console.log(\"========= NOTICE =========\");\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n//# sourceMappingURL=formatter.js.map\n\nvar __awaiter$9 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst logger$t = new Logger(version$m);\n//////////////////////////////\n// Event Serializeing\nfunction checkTopic(topic) {\n    if (topic == null) {\n        return \"null\";\n    }\n    if (hexDataLength(topic) !== 32) {\n        logger$t.throwArgumentError(\"invalid topic\", \"topic\", topic);\n    }\n    return topic.toLowerCase();\n}\nfunction serializeTopics(topics) {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) {\n        topics.pop();\n    }\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            // Only track unique OR-topics\n            const unique = {};\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n            return sorted.join(\"|\");\n        }\n        else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\nfunction deserializeTopics(data) {\n    if (data === \"\") {\n        return [];\n    }\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") {\n            return [];\n        }\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null : topic);\n        });\n        return ((comps.length === 1) ? comps[0] : comps);\n    });\n}\nfunction getEventTag$1(eventName) {\n    if (typeof (eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n        if (hexDataLength(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n    }\n    else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n    }\n    else if (ForkEvent.isForkEvent(eventName)) {\n        logger$t.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n    }\n    else if (eventName && typeof (eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n    throw new Error(\"invalid event - \" + eventName);\n}\n//////////////////////////////\n// Helper Object\nfunction getTime() {\n    return (new Date()).getTime();\n}\nfunction stall(duration) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n//////////////////////////////\n// Provider Object\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\nconst PollableEvents = [\"block\", \"network\", \"pending\", \"poll\"];\nclass Event {\n    constructor(tag, listener, once) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"listener\", listener);\n        defineReadOnly(this, \"once\", once);\n    }\n    get event() {\n        switch (this.type) {\n            case \"tx\":\n                return this.hash;\n            case \"filter\":\n                return this.filter;\n        }\n        return this.tag;\n    }\n    get type() {\n        return this.tag.split(\":\")[0];\n    }\n    get hash() {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") {\n            return null;\n        }\n        return comps[1];\n    }\n    get filter() {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") {\n            return null;\n        }\n        const address = comps[1];\n        const topics = deserializeTopics(comps[2]);\n        const filter = {};\n        if (topics.length > 0) {\n            filter.topics = topics;\n        }\n        if (address && address !== \"*\") {\n            filter.address = address;\n        }\n        return filter;\n    }\n    pollable() {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos = {\n    \"0\": { symbol: \"btc\", p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\": { symbol: \"ltc\", p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\": { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\": { symbol: \"eth\", ilk: \"eth\" },\n    \"61\": { symbol: \"etc\", ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\nfunction bytes32ify(value) {\n    return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data) {\n    return Base58.encode(concat([data, hexDataSlice(sha256$1(sha256$1(data)), 0, 4)]));\n}\nclass Resolver {\n    constructor(provider, address, name) {\n        defineReadOnly(this, \"provider\", provider);\n        defineReadOnly(this, \"name\", name);\n        defineReadOnly(this, \"address\", provider.formatter.address(address));\n    }\n    _fetchBytes(selector, parameters) {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            // keccak256(\"addr(bytes32,uint256)\")\n            const transaction = {\n                to: this.address,\n                data: hexConcat([selector, namehash(this.name), (parameters || \"0x\")])\n            };\n            try {\n                const result = yield this.provider.call(transaction);\n                if (result === \"0x\") {\n                    return null;\n                }\n                const offset = BigNumber.from(hexDataSlice(result, 0, 32)).toNumber();\n                const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n                return hexDataSlice(result, offset + 32, offset + 32 + length);\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    return null;\n                }\n                return null;\n            }\n        });\n    }\n    _getAddress(coinType, hexBytes) {\n        const coinInfo = coinInfos[String(coinType)];\n        if (coinInfo == null) {\n            logger$t.throwError(`unsupported coin type: ${coinType}`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${coinType})`\n            });\n        }\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n        const bytes = arrayify(hexBytes);\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([[coinInfo.p2pkh], (\"0x\" + p2pkh[2])]));\n                }\n            }\n        }\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([[coinInfo.p2sh], (\"0x\" + p2sh[2])]));\n                }\n            }\n        }\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            }\n            else {\n                version = -1;\n            }\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32.encode(coinInfo.prefix, words);\n            }\n        }\n        return null;\n    }\n    getAddress(coinType) {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            if (coinType == null) {\n                coinType = 60;\n            }\n            // If Ethereum, use the standard `addr(bytes32)`\n            if (coinType === 60) {\n                try {\n                    // keccak256(\"addr(bytes32)\")\n                    const transaction = {\n                        to: this.address,\n                        data: (\"0x3b3b57de\" + namehash(this.name).substring(2))\n                    };\n                    const hexBytes = yield this.provider.call(transaction);\n                    // No address\n                    if (hexBytes === \"0x\" || hexBytes === HashZero) {\n                        return null;\n                    }\n                    return this.provider.formatter.callAddress(hexBytes);\n                }\n                catch (error) {\n                    if (error.code === Logger.errors.CALL_EXCEPTION) {\n                        return null;\n                    }\n                    throw error;\n                }\n            }\n            // keccak256(\"addr(bytes32,uint256\")\n            const hexBytes = yield this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n            // No address\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            // Compute the address\n            const address = this._getAddress(coinType, hexBytes);\n            if (address == null) {\n                logger$t.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: `getAddress(${coinType})`,\n                    coinType: coinType,\n                    data: hexBytes\n                });\n            }\n            return address;\n        });\n    }\n    getContentHash() {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            // keccak256(\"contenthash()\")\n            const hexBytes = yield this._fetchBytes(\"0xbc1c58d1\");\n            // No contenthash\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            // IPFS (CID: 1, Type: DAG-PB)\n            const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n            if (ipfs) {\n                const length = parseInt(ipfs[3], 16);\n                if (ipfs[4].length === length * 2) {\n                    return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n                }\n            }\n            // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n            const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);\n            if (swarm) {\n                if (swarm[1].length === (32 * 2)) {\n                    return \"bzz:/\\/\" + swarm[1];\n                }\n            }\n            return logger$t.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"getContentHash()\",\n                data: hexBytes\n            });\n        });\n    }\n    getText(key) {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            // The key encoded as parameter to fetchBytes\n            let keyBytes = toUtf8Bytes(key);\n            // The nodehash consumes the first slot, so the string pointer targets\n            // offset 64, with the length at offset 64 and data starting at offset 96\n            keyBytes = concat([bytes32ify(64), bytes32ify(keyBytes.length), keyBytes]);\n            // Pad to word-size (32 bytes)\n            if ((keyBytes.length % 32) !== 0) {\n                keyBytes = concat([keyBytes, hexZeroPad(\"0x\", 32 - (key.length % 32))]);\n            }\n            const hexBytes = yield this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            return toUtf8String(hexBytes);\n        });\n    }\n}\nlet defaultFormatter = null;\nlet nextPollId = 1;\nclass BaseProvider extends Provider {\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n    constructor(network) {\n        logger$t.checkNew(new.target, Provider);\n        super();\n        // Events being listened to\n        this._events = [];\n        this._emitted = { block: -2 };\n        this.formatter = new.target.getFormatter();\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        defineReadOnly(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) {\n            network = this.detectNetwork();\n        }\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n        }\n        else {\n            const knownNetwork = getStatic((new.target), \"getNetwork\")(network);\n            if (knownNetwork) {\n                defineReadOnly(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n            }\n            else {\n                logger$t.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n        this._maxInternalBlockNumber = -1024;\n        this._lastBlockNumber = -2;\n        this._pollingInterval = 4000;\n        this._fastQueryDate = 0;\n    }\n    _ready() {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            if (this._network == null) {\n                let network = null;\n                if (this._networkPromise) {\n                    try {\n                        network = yield this._networkPromise;\n                    }\n                    catch (error) { }\n                }\n                // Try the Provider's network detection (this MUST throw if it cannot)\n                if (network == null) {\n                    network = yield this.detectNetwork();\n                }\n                // This should never happen; every Provider sub-class should have\n                // suggested a network by here (or have thrown).\n                if (!network) {\n                    logger$t.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, {});\n                }\n                // Possible this call stacked so do not call defineReadOnly again\n                if (this._network == null) {\n                    if (this.anyNetwork) {\n                        this._network = network;\n                    }\n                    else {\n                        defineReadOnly(this, \"_network\", network);\n                    }\n                    this.emit(\"network\", network, null);\n                }\n            }\n            return this._network;\n        });\n    }\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is refelcted); otherwise this cannot change\n    get ready() {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter() {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n        }\n        return defaultFormatter;\n    }\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network) {\n        return getNetwork((network == null) ? \"homestead\" : network);\n    }\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    _getInternalBlockNumber(maxAge) {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            yield this._ready();\n            // Allowing stale data up to maxAge old\n            if (maxAge > 0) {\n                // While there are pending internal block requests...\n                while (this._internalBlockNumber) {\n                    // ...\"remember\" which fetch we started with\n                    const internalBlockNumber = this._internalBlockNumber;\n                    try {\n                        // Check the result is not too stale\n                        const result = yield internalBlockNumber;\n                        if ((getTime() - result.respTime) <= maxAge) {\n                            return result.blockNumber;\n                        }\n                        // Too old; fetch a new value\n                        break;\n                    }\n                    catch (error) {\n                        // The fetch rejected; if we are the first to get the\n                        // rejection, drop through so we replace it with a new\n                        // fetch; all others blocked will then get that fetch\n                        // which won't match the one they \"remembered\" and loop\n                        if (this._internalBlockNumber === internalBlockNumber) {\n                            break;\n                        }\n                    }\n                }\n            }\n            const reqTime = getTime();\n            const checkInternalBlockNumber = resolveProperties({\n                blockNumber: this.perform(\"getBlockNumber\", {}),\n                networkError: this.getNetwork().then((network) => (null), (error) => (error))\n            }).then(({ blockNumber, networkError }) => {\n                if (networkError) {\n                    // Unremember this bad internal block number\n                    if (this._internalBlockNumber === checkInternalBlockNumber) {\n                        this._internalBlockNumber = null;\n                    }\n                    throw networkError;\n                }\n                const respTime = getTime();\n                blockNumber = BigNumber.from(blockNumber).toNumber();\n                if (blockNumber < this._maxInternalBlockNumber) {\n                    blockNumber = this._maxInternalBlockNumber;\n                }\n                this._maxInternalBlockNumber = blockNumber;\n                this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n                return { blockNumber, reqTime, respTime };\n            });\n            this._internalBlockNumber = checkInternalBlockNumber;\n            // Swallow unhandled exceptions; if needed they are handled else where\n            checkInternalBlockNumber.catch((error) => {\n                // Don't null the dead (rejected) fetch, if it has already been updated\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n            });\n            return (yield checkInternalBlockNumber).blockNumber;\n        });\n    }\n    poll() {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            const pollId = nextPollId++;\n            // Track all running promises, so we can trigger a post-poll once they are complete\n            const runners = [];\n            let blockNumber = null;\n            try {\n                blockNumber = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n            }\n            catch (error) {\n                this.emit(\"error\", error);\n                return;\n            }\n            this._setFastBlockNumber(blockNumber);\n            // Emit a poll event after we have the latest (fast) block number\n            this.emit(\"poll\", pollId, blockNumber);\n            // If the block has not changed, meh.\n            if (blockNumber === this._lastBlockNumber) {\n                this.emit(\"didPoll\", pollId);\n                return;\n            }\n            // First polling cycle, trigger a \"block\" events\n            if (this._emitted.block === -2) {\n                this._emitted.block = blockNumber - 1;\n            }\n            if (Math.abs((this._emitted.block) - blockNumber) > 1000) {\n                logger$t.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${blockNumber})`);\n                this.emit(\"error\", logger$t.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                    blockNumber: blockNumber,\n                    event: \"blockSkew\",\n                    previousBlockNumber: this._emitted.block\n                }));\n                this.emit(\"block\", blockNumber);\n            }\n            else {\n                // Notify all listener for each block that has passed\n                for (let i = this._emitted.block + 1; i <= blockNumber; i++) {\n                    this.emit(\"block\", i);\n                }\n            }\n            // The emitted block was updated, check for obsolete events\n            if (this._emitted.block !== blockNumber) {\n                this._emitted.block = blockNumber;\n                Object.keys(this._emitted).forEach((key) => {\n                    // The block event does not expire\n                    if (key === \"block\") {\n                        return;\n                    }\n                    // The block we were at when we emitted this event\n                    const eventBlockNumber = this._emitted[key];\n                    // We cannot garbage collect pending transactions or blocks here\n                    // They should be garbage collected by the Provider when setting\n                    // \"pending\" events\n                    if (eventBlockNumber === \"pending\") {\n                        return;\n                    }\n                    // Evict any transaction hashes or block hashes over 12 blocks\n                    // old, since they should not return null anyways\n                    if (blockNumber - eventBlockNumber > 12) {\n                        delete this._emitted[key];\n                    }\n                });\n            }\n            // First polling cycle\n            if (this._lastBlockNumber === -2) {\n                this._lastBlockNumber = blockNumber - 1;\n            }\n            // Find all transaction hashes we are waiting on\n            this._events.forEach((event) => {\n                switch (event.type) {\n                    case \"tx\": {\n                        const hash = event.hash;\n                        let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                            if (!receipt || receipt.blockNumber == null) {\n                                return null;\n                            }\n                            this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                            this.emit(hash, receipt);\n                            return null;\n                        }).catch((error) => { this.emit(\"error\", error); });\n                        runners.push(runner);\n                        break;\n                    }\n                    case \"filter\": {\n                        const filter = event.filter;\n                        filter.fromBlock = this._lastBlockNumber + 1;\n                        filter.toBlock = blockNumber;\n                        const runner = this.getLogs(filter).then((logs) => {\n                            if (logs.length === 0) {\n                                return;\n                            }\n                            logs.forEach((log) => {\n                                this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n                                this.emit(filter, log);\n                            });\n                        }).catch((error) => { this.emit(\"error\", error); });\n                        runners.push(runner);\n                        break;\n                    }\n                }\n            });\n            this._lastBlockNumber = blockNumber;\n            // Once all events for this loop have been processed, emit \"didPoll\"\n            Promise.all(runners).then(() => {\n                this.emit(\"didPoll\", pollId);\n            }).catch((error) => { this.emit(\"error\", error); });\n            return;\n        });\n    }\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber) {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) {\n            this.poll();\n        }\n    }\n    get network() {\n        return this._network;\n    }\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    detectNetwork() {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            return logger$t.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"provider.detectNetwork\"\n            });\n        });\n    }\n    getNetwork() {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            const network = yield this._ready();\n            // Make sure we are still connected to the same network; this is\n            // only an external call for backends which can have the underlying\n            // network change spontaneously\n            const currentNetwork = yield this.detectNetwork();\n            if (network.chainId !== currentNetwork.chainId) {\n                // We are allowing network changes, things can get complex fast;\n                // make sure you know what you are doing if you use \"any\"\n                if (this.anyNetwork) {\n                    this._network = currentNetwork;\n                    // Reset all internal block number guards and caches\n                    this._lastBlockNumber = -2;\n                    this._fastBlockNumber = null;\n                    this._fastBlockNumberPromise = null;\n                    this._fastQueryDate = 0;\n                    this._emitted.block = -2;\n                    this._maxInternalBlockNumber = -1024;\n                    this._internalBlockNumber = null;\n                    // The \"network\" event MUST happen before this method resolves\n                    // so any events have a chance to unregister, so we stall an\n                    // additional event loop before returning from /this/ call\n                    this.emit(\"network\", currentNetwork, network);\n                    yield stall(0);\n                    return this._network;\n                }\n                const error = logger$t.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                    event: \"changed\",\n                    network: network,\n                    detectedNetwork: currentNetwork\n                });\n                this.emit(\"error\", error);\n                throw error;\n            }\n            return network;\n        });\n    }\n    get blockNumber() {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber : -1;\n    }\n    get polling() {\n        return (this._poller != null);\n    }\n    set polling(value) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) {\n                            this.poll();\n                        }\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n        }\n        else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n    get pollingInterval() {\n        return this._pollingInterval;\n    }\n    set pollingInterval(value) {\n        if (typeof (value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n        this._pollingInterval = value;\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n    _getFastBlockNumber() {\n        const now = getTime();\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n        return this._fastBlockNumberPromise;\n    }\n    _setFastBlockNumber(blockNumber) {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) {\n            return;\n        }\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n    waitForTransaction(transactionHash, confirmations, timeout) {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            return this._waitForTransaction(transactionHash, (confirmations == null) ? 1 : confirmations, timeout || 0, null);\n        });\n    }\n    _waitForTransaction(transactionHash, confirmations, timeout, replaceable) {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            const receipt = yield this.getTransactionReceipt(transactionHash);\n            // Receipt is already good\n            if ((receipt ? receipt.confirmations : 0) >= confirmations) {\n                return receipt;\n            }\n            // Poll until the receipt is good...\n            return new Promise((resolve, reject) => {\n                const cancelFuncs = [];\n                let done = false;\n                const alreadyDone = function () {\n                    if (done) {\n                        return true;\n                    }\n                    done = true;\n                    cancelFuncs.forEach((func) => { func(); });\n                    return false;\n                };\n                const minedHandler = (receipt) => {\n                    if (receipt.confirmations < confirmations) {\n                        return;\n                    }\n                    if (alreadyDone()) {\n                        return;\n                    }\n                    resolve(receipt);\n                };\n                this.on(transactionHash, minedHandler);\n                cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });\n                if (replaceable) {\n                    let lastBlockNumber = replaceable.startBlock;\n                    let scannedBlock = null;\n                    const replaceHandler = (blockNumber) => __awaiter$9(this, void 0, void 0, function* () {\n                        if (done) {\n                            return;\n                        }\n                        // Wait 1 second; this is only used in the case of a fault, so\n                        // we will trade off a little bit of latency for more consistent\n                        // results and fewer JSON-RPC calls\n                        yield stall(1000);\n                        this.getTransactionCount(replaceable.from).then((nonce) => __awaiter$9(this, void 0, void 0, function* () {\n                            if (done) {\n                                return;\n                            }\n                            if (nonce <= replaceable.nonce) {\n                                lastBlockNumber = blockNumber;\n                            }\n                            else {\n                                // First check if the transaction was mined\n                                {\n                                    const mined = yield this.getTransaction(transactionHash);\n                                    if (mined && mined.blockNumber != null) {\n                                        return;\n                                    }\n                                }\n                                // First time scanning. We start a little earlier for some\n                                // wiggle room here to handle the eventually consistent nature\n                                // of blockchain (e.g. the getTransactionCount was for a\n                                // different block)\n                                if (scannedBlock == null) {\n                                    scannedBlock = lastBlockNumber - 3;\n                                    if (scannedBlock < replaceable.startBlock) {\n                                        scannedBlock = replaceable.startBlock;\n                                    }\n                                }\n                                while (scannedBlock <= blockNumber) {\n                                    if (done) {\n                                        return;\n                                    }\n                                    const block = yield this.getBlockWithTransactions(scannedBlock);\n                                    for (let ti = 0; ti < block.transactions.length; ti++) {\n                                        const tx = block.transactions[ti];\n                                        // Successfully mined!\n                                        if (tx.hash === transactionHash) {\n                                            return;\n                                        }\n                                        // Matches our transaction from and nonce; its a replacement\n                                        if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                                            if (done) {\n                                                return;\n                                            }\n                                            // Get the receipt of the replacement\n                                            const receipt = yield this.waitForTransaction(tx.hash, confirmations);\n                                            // Already resolved or rejected (prolly a timeout)\n                                            if (alreadyDone()) {\n                                                return;\n                                            }\n                                            // The reason we were replaced\n                                            let reason = \"replaced\";\n                                            if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                                reason = \"repriced\";\n                                            }\n                                            else if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                                reason = \"cancelled\";\n                                            }\n                                            // Explain why we were replaced\n                                            reject(logger$t.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                                                cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                                reason,\n                                                replacement: this._wrapTransaction(tx),\n                                                hash: transactionHash,\n                                                receipt\n                                            }));\n                                            return;\n                                        }\n                                    }\n                                    scannedBlock++;\n                                }\n                            }\n                            if (done) {\n                                return;\n                            }\n                            this.once(\"block\", replaceHandler);\n                        }), (error) => {\n                            if (done) {\n                                return;\n                            }\n                            this.once(\"block\", replaceHandler);\n                        });\n                    });\n                    if (done) {\n                        return;\n                    }\n                    this.once(\"block\", replaceHandler);\n                    cancelFuncs.push(() => {\n                        this.removeListener(\"block\", replaceHandler);\n                    });\n                }\n                if (typeof (timeout) === \"number\" && timeout > 0) {\n                    const timer = setTimeout(() => {\n                        if (alreadyDone()) {\n                            return;\n                        }\n                        reject(logger$t.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, { timeout: timeout }));\n                    }, timeout);\n                    if (timer.unref) {\n                        timer.unref();\n                    }\n                    cancelFuncs.push(() => { clearTimeout(timer); });\n                }\n            });\n        });\n    }\n    getBlockNumber() {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            return this._getInternalBlockNumber(0);\n        });\n    }\n    getGasPrice() {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const result = yield this.perform(\"getGasPrice\", {});\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger$t.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getGasPrice\",\n                    result, error\n                });\n            }\n        });\n    }\n    getBalance(addressOrName, blockTag) {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getBalance\", params);\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger$t.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getBalance\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getTransactionCount(addressOrName, blockTag) {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getTransactionCount\", params);\n            try {\n                return BigNumber.from(result).toNumber();\n            }\n            catch (error) {\n                return logger$t.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getTransactionCount\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getCode(addressOrName, blockTag) {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getCode\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger$t.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getCode\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getStorageAt(addressOrName, position, blockTag) {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag),\n                position: Promise.resolve(position).then((p) => hexValue(p))\n            });\n            const result = yield this.perform(\"getStorageAt\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger$t.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getStorageAt\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx, hash, startBlock) {\n        if (hash != null && hexDataLength(hash) !== 32) {\n            throw new Error(\"invalid response - sendTransaction\");\n        }\n        const result = tx;\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger$t.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n        result.wait = (confirms, timeout) => __awaiter$9(this, void 0, void 0, function* () {\n            if (confirms == null) {\n                confirms = 1;\n            }\n            if (timeout == null) {\n                timeout = 0;\n            }\n            // Get the details to detect replacement\n            let replacement = undefined;\n            if (confirms !== 0 && startBlock != null) {\n                replacement = {\n                    data: tx.data,\n                    from: tx.from,\n                    nonce: tx.nonce,\n                    to: tx.to,\n                    value: tx.value,\n                    startBlock\n                };\n            }\n            const receipt = yield this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n            if (receipt == null && confirms === 0) {\n                return null;\n            }\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n            if (receipt.status === 0) {\n                logger$t.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        });\n        return result;\n    }\n    sendTransaction(signedTransaction) {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const hexTx = yield Promise.resolve(signedTransaction).then(t => hexlify(t));\n            const tx = this.formatter.transaction(signedTransaction);\n            if (tx.confirmations == null) {\n                tx.confirmations = 0;\n            }\n            const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            try {\n                const hash = yield this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n                return this._wrapTransaction(tx, hash, blockNumber);\n            }\n            catch (error) {\n                error.transaction = tx;\n                error.transactionHash = tx.hash;\n                throw error;\n            }\n        });\n    }\n    _getTransactionRequest(transaction) {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            const values = yield transaction;\n            const tx = {};\n            [\"from\", \"to\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v) : null));\n            });\n            [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v) : null));\n            });\n            [\"type\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v : null));\n            });\n            if (values.accessList) {\n                tx.accessList = this.formatter.accessList(values.accessList);\n            }\n            [\"data\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v) : null));\n            });\n            return this.formatter.transactionRequest(yield resolveProperties(tx));\n        });\n    }\n    _getFilter(filter) {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            filter = yield filter;\n            const result = {};\n            if (filter.address != null) {\n                result.address = this._getAddress(filter.address);\n            }\n            [\"blockHash\", \"topics\"].forEach((key) => {\n                if (filter[key] == null) {\n                    return;\n                }\n                result[key] = filter[key];\n            });\n            [\"fromBlock\", \"toBlock\"].forEach((key) => {\n                if (filter[key] == null) {\n                    return;\n                }\n                result[key] = this._getBlockTag(filter[key]);\n            });\n            return this.formatter.filter(yield resolveProperties(result));\n        });\n    }\n    call(transaction, blockTag) {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                transaction: this._getTransactionRequest(transaction),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"call\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger$t.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"call\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    estimateGas(transaction) {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                transaction: this._getTransactionRequest(transaction)\n            });\n            const result = yield this.perform(\"estimateGas\", params);\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger$t.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"estimateGas\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    _getAddress(addressOrName) {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            const address = yield this.resolveName(addressOrName);\n            if (address == null) {\n                logger$t.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: `resolveName(${JSON.stringify(addressOrName)})`\n                });\n            }\n            return address;\n        });\n    }\n    _getBlock(blockHashOrBlockTag, includeTransactions) {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            blockHashOrBlockTag = yield blockHashOrBlockTag;\n            // If blockTag is a number (not \"latest\", etc), this is the block number\n            let blockNumber = -128;\n            const params = {\n                includeTransactions: !!includeTransactions\n            };\n            if (isHexString(blockHashOrBlockTag, 32)) {\n                params.blockHash = blockHashOrBlockTag;\n            }\n            else {\n                try {\n                    params.blockTag = this.formatter.blockTag(yield this._getBlockTag(blockHashOrBlockTag));\n                    if (isHexString(params.blockTag)) {\n                        blockNumber = parseInt(params.blockTag.substring(2), 16);\n                    }\n                }\n                catch (error) {\n                    logger$t.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n                }\n            }\n            return poll(() => __awaiter$9(this, void 0, void 0, function* () {\n                const block = yield this.perform(\"getBlock\", params);\n                // Block was not found\n                if (block == null) {\n                    // For blockhashes, if we didn't say it existed, that blockhash may\n                    // not exist. If we did see it though, perhaps from a log, we know\n                    // it exists, and this node is just not caught up yet.\n                    if (params.blockHash != null) {\n                        if (this._emitted[\"b:\" + params.blockHash] == null) {\n                            return null;\n                        }\n                    }\n                    // For block tags, if we are asking for a future block, we return null\n                    if (params.blockTag != null) {\n                        if (blockNumber > this._emitted.block) {\n                            return null;\n                        }\n                    }\n                    // Retry on the next block\n                    return undefined;\n                }\n                // Add transactions\n                if (includeTransactions) {\n                    let blockNumber = null;\n                    for (let i = 0; i < block.transactions.length; i++) {\n                        const tx = block.transactions[i];\n                        if (tx.blockNumber == null) {\n                            tx.confirmations = 0;\n                        }\n                        else if (tx.confirmations == null) {\n                            if (blockNumber == null) {\n                                blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                            }\n                            // Add the confirmations using the fast block number (pessimistic)\n                            let confirmations = (blockNumber - tx.blockNumber) + 1;\n                            if (confirmations <= 0) {\n                                confirmations = 1;\n                            }\n                            tx.confirmations = confirmations;\n                        }\n                    }\n                    const blockWithTxs = this.formatter.blockWithTransactions(block);\n                    blockWithTxs.transactions = blockWithTxs.transactions.map((tx) => this._wrapTransaction(tx));\n                    return blockWithTxs;\n                }\n                return this.formatter.block(block);\n            }), { oncePoll: this });\n        });\n    }\n    getBlock(blockHashOrBlockTag) {\n        return (this._getBlock(blockHashOrBlockTag, false));\n    }\n    getBlockWithTransactions(blockHashOrBlockTag) {\n        return (this._getBlock(blockHashOrBlockTag, true));\n    }\n    getTransaction(transactionHash) {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            transactionHash = yield transactionHash;\n            const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n            return poll(() => __awaiter$9(this, void 0, void 0, function* () {\n                const result = yield this.perform(\"getTransaction\", params);\n                if (result == null) {\n                    if (this._emitted[\"t:\" + transactionHash] == null) {\n                        return null;\n                    }\n                    return undefined;\n                }\n                const tx = this.formatter.transactionResponse(result);\n                if (tx.blockNumber == null) {\n                    tx.confirmations = 0;\n                }\n                else if (tx.confirmations == null) {\n                    const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                    // Add the confirmations using the fast block number (pessimistic)\n                    let confirmations = (blockNumber - tx.blockNumber) + 1;\n                    if (confirmations <= 0) {\n                        confirmations = 1;\n                    }\n                    tx.confirmations = confirmations;\n                }\n                return this._wrapTransaction(tx);\n            }), { oncePoll: this });\n        });\n    }\n    getTransactionReceipt(transactionHash) {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            transactionHash = yield transactionHash;\n            const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n            return poll(() => __awaiter$9(this, void 0, void 0, function* () {\n                const result = yield this.perform(\"getTransactionReceipt\", params);\n                if (result == null) {\n                    if (this._emitted[\"t:\" + transactionHash] == null) {\n                        return null;\n                    }\n                    return undefined;\n                }\n                // \"geth-etc\" returns receipts before they are ready\n                if (result.blockHash == null) {\n                    return undefined;\n                }\n                const receipt = this.formatter.receipt(result);\n                if (receipt.blockNumber == null) {\n                    receipt.confirmations = 0;\n                }\n                else if (receipt.confirmations == null) {\n                    const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                    // Add the confirmations using the fast block number (pessimistic)\n                    let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                    if (confirmations <= 0) {\n                        confirmations = 1;\n                    }\n                    receipt.confirmations = confirmations;\n                }\n                return receipt;\n            }), { oncePoll: this });\n        });\n    }\n    getLogs(filter) {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({ filter: this._getFilter(filter) });\n            const logs = yield this.perform(\"getLogs\", params);\n            logs.forEach((log) => {\n                if (log.removed == null) {\n                    log.removed = false;\n                }\n            });\n            return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n        });\n    }\n    getEtherPrice() {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            return this.perform(\"getEtherPrice\", {});\n        });\n    }\n    _getBlockTag(blockTag) {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            blockTag = yield blockTag;\n            if (typeof (blockTag) === \"number\" && blockTag < 0) {\n                if (blockTag % 1) {\n                    logger$t.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n                }\n                let blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                blockNumber += blockTag;\n                if (blockNumber < 0) {\n                    blockNumber = 0;\n                }\n                return this.formatter.blockTag(blockNumber);\n            }\n            return this.formatter.blockTag(blockTag);\n        });\n    }\n    getResolver(name) {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            try {\n                const address = yield this._getResolver(name);\n                if (address == null) {\n                    return null;\n                }\n                return new Resolver(this, address, name);\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    return null;\n                }\n                return null;\n            }\n        });\n    }\n    _getResolver(name) {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            // Get the resolver from the blockchain\n            const network = yield this.getNetwork();\n            // No ENS...\n            if (!network.ensAddress) {\n                logger$t.throwError(\"network does not support ENS\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"ENS\", network: network.name });\n            }\n            // keccak256(\"resolver(bytes32)\")\n            const transaction = {\n                to: network.ensAddress,\n                data: (\"0x0178b8bf\" + namehash(name).substring(2))\n            };\n            try {\n                return this.formatter.callAddress(yield this.call(transaction));\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    return null;\n                }\n                throw error;\n            }\n        });\n    }\n    resolveName(name) {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            name = yield name;\n            // If it is already an address, nothing to resolve\n            try {\n                return Promise.resolve(this.formatter.address(name));\n            }\n            catch (error) {\n                // If is is a hexstring, the address is bad (See #694)\n                if (isHexString(name)) {\n                    throw error;\n                }\n            }\n            if (typeof (name) !== \"string\") {\n                logger$t.throwArgumentError(\"invalid ENS name\", \"name\", name);\n            }\n            // Get the addr from the resovler\n            const resolver = yield this.getResolver(name);\n            if (!resolver) {\n                return null;\n            }\n            return yield resolver.getAddress();\n        });\n    }\n    lookupAddress(address) {\n        return __awaiter$9(this, void 0, void 0, function* () {\n            address = yield address;\n            address = this.formatter.address(address);\n            const reverseName = address.substring(2).toLowerCase() + \".addr.reverse\";\n            const resolverAddress = yield this._getResolver(reverseName);\n            if (!resolverAddress) {\n                return null;\n            }\n            // keccak(\"name(bytes32)\")\n            let bytes = arrayify(yield this.call({\n                to: resolverAddress,\n                data: (\"0x691f3431\" + namehash(reverseName).substring(2))\n            }));\n            // Strip off the dynamic string pointer (0x20)\n            if (bytes.length < 32 || !BigNumber.from(bytes.slice(0, 32)).eq(32)) {\n                return null;\n            }\n            bytes = bytes.slice(32);\n            // Not a length-prefixed string\n            if (bytes.length < 32) {\n                return null;\n            }\n            // Get the length of the string (from the length-prefix)\n            const length = BigNumber.from(bytes.slice(0, 32)).toNumber();\n            bytes = bytes.slice(32);\n            // Length longer than available data\n            if (length > bytes.length) {\n                return null;\n            }\n            const name = toUtf8String(bytes.slice(0, length));\n            // Make sure the reverse record matches the foward record\n            const addr = yield this.resolveName(name);\n            if (addr != address) {\n                return null;\n            }\n            return name;\n        });\n    }\n    perform(method, params) {\n        return logger$t.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    }\n    _startEvent(event) {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n    _stopEvent(event) {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n    _addEventListener(eventName, listener, once) {\n        const event = new Event(getEventTag$1(eventName), listener, once);\n        this._events.push(event);\n        this._startEvent(event);\n        return this;\n    }\n    on(eventName, listener) {\n        return this._addEventListener(eventName, listener, false);\n    }\n    once(eventName, listener) {\n        return this._addEventListener(eventName, listener, true);\n    }\n    emit(eventName, ...args) {\n        let result = false;\n        let stopped = [];\n        let eventTag = getEventTag$1(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) {\n                return true;\n            }\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n            result = true;\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n            return true;\n        });\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return result;\n    }\n    listenerCount(eventName) {\n        if (!eventName) {\n            return this._events.length;\n        }\n        let eventTag = getEventTag$1(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n    listeners(eventName) {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n        let eventTag = getEventTag$1(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n    off(eventName, listener) {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n        const stopped = [];\n        let found = false;\n        let eventTag = getEventTag$1(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) {\n                return true;\n            }\n            if (found) {\n                return true;\n            }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return this;\n    }\n    removeAllListeners(eventName) {\n        let stopped = [];\n        if (eventName == null) {\n            stopped = this._events;\n            this._events = [];\n        }\n        else {\n            const eventTag = getEventTag$1(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) {\n                    return true;\n                }\n                stopped.push(event);\n                return false;\n            });\n        }\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return this;\n    }\n}\n//# sourceMappingURL=base-provider.js.map\n\nvar __awaiter$a = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst logger$u = new Logger(version$m);\nconst errorGas = [\"call\", \"estimateGas\"];\nfunction checkError(method, error, params) {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n        if (e && e.message.match(\"reverted\") && isHexString(e.data)) {\n            return e.data;\n        }\n        logger$u.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n            error, data: \"0x\"\n        });\n    }\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof (error.error.message) === \"string\") {\n        message = error.error.message;\n    }\n    else if (typeof (error.body) === \"string\") {\n        message = error.body;\n    }\n    else if (typeof (error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n    const transaction = params.transaction || params.signedTransaction;\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit/)) {\n        logger$u.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n    // \"nonce too low\"\n    if (message.match(/nonce too low/)) {\n        logger$u.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced/)) {\n        logger$u.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/)) {\n        logger$u.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) {\n        logger$u.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n    throw error;\n}\nfunction timer(timeout) {\n    return new Promise(function (resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\nfunction getResult(payload) {\n    if (payload.error) {\n        // @TODO: not any\n        const error = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n    return payload.result;\n}\nfunction getLowerCase(value) {\n    if (value) {\n        return value.toLowerCase();\n    }\n    return value;\n}\nconst _constructorGuard$4 = {};\nclass JsonRpcSigner extends Signer {\n    constructor(constructorGuard, provider, addressOrIndex) {\n        logger$u.checkNew(new.target, JsonRpcSigner);\n        super();\n        if (constructorGuard !== _constructorGuard$4) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n        defineReadOnly(this, \"provider\", provider);\n        if (addressOrIndex == null) {\n            addressOrIndex = 0;\n        }\n        if (typeof (addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n        }\n        else if (typeof (addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n        }\n        else {\n            logger$u.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n    connect(provider) {\n        return logger$u.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n    connectUnchecked() {\n        return new UncheckedJsonRpcSigner(_constructorGuard$4, this.provider, this._address || this._index);\n    }\n    getAddress() {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger$u.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index]);\n        });\n    }\n    sendUncheckedTransaction(transaction) {\n        transaction = shallowCopy(transaction);\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) {\n                address = address.toLowerCase();\n            }\n            return address;\n        });\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then((to) => __awaiter$a(this, void 0, void 0, function* () {\n                if (to == null) {\n                    return null;\n                }\n                const address = yield this.provider.resolveName(to);\n                if (address == null) {\n                    logger$u.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            }));\n        }\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger$u.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            }\n            else {\n                tx.from = sender;\n            }\n            const hexTx = this.provider.constructor.hexlifyTransaction(tx, { from: true });\n            return this.provider.send(\"eth_sendTransaction\", [hexTx]).then((hash) => {\n                return hash;\n            }, (error) => {\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n    signTransaction(transaction) {\n        return logger$u.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n    sendTransaction(transaction) {\n        return __awaiter$a(this, void 0, void 0, function* () {\n            // This cannot be mined any earlier than any recent block\n            const blockNumber = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n            // Send the transaction\n            const hash = yield this.sendUncheckedTransaction(transaction);\n            try {\n                // Unfortunately, JSON-RPC only provides and opaque transaction hash\n                // for a response, and we need the actual transaction, so we poll\n                // for it; it should show up very quickly\n                return yield poll(() => __awaiter$a(this, void 0, void 0, function* () {\n                    const tx = yield this.provider.getTransaction(hash);\n                    if (tx === null) {\n                        return undefined;\n                    }\n                    return this.provider._wrapTransaction(tx, hash, blockNumber);\n                }), { oncePoll: this.provider });\n            }\n            catch (error) {\n                error.transactionHash = hash;\n                throw error;\n            }\n        });\n    }\n    signMessage(message) {\n        return __awaiter$a(this, void 0, void 0, function* () {\n            const data = ((typeof (message) === \"string\") ? toUtf8Bytes(message) : message);\n            const address = yield this.getAddress();\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return yield this.provider.send(\"eth_sign\", [address.toLowerCase(), hexlify(data)]);\n        });\n    }\n    _signTypedData(domain, types, value) {\n        return __awaiter$a(this, void 0, void 0, function* () {\n            // Populate any ENS names (in-place)\n            const populated = yield TypedDataEncoder.resolveNames(domain, types, value, (name) => {\n                return this.provider.resolveName(name);\n            });\n            const address = yield this.getAddress();\n            return yield this.provider.send(\"eth_signTypedData_v4\", [\n                address.toLowerCase(),\n                JSON.stringify(TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n            ]);\n        });\n    }\n    unlock(password) {\n        return __awaiter$a(this, void 0, void 0, function* () {\n            const provider = this.provider;\n            const address = yield this.getAddress();\n            return provider.send(\"personal_unlockAccount\", [address.toLowerCase(), password, null]);\n        });\n    }\n}\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction) {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return {\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\nconst allowedTransactionKeys$3 = {\n    chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n};\nclass JsonRpcProvider extends BaseProvider {\n    constructor(url, network) {\n        logger$u.checkNew(new.target, JsonRpcProvider);\n        let networkOrReady = network;\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n        super(networkOrReady);\n        // Default URL\n        if (!url) {\n            url = getStatic(this.constructor, \"defaultUrl\")();\n        }\n        if (typeof (url) === \"string\") {\n            defineReadOnly(this, \"connection\", Object.freeze({\n                url: url\n            }));\n        }\n        else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n        this._nextId = 42;\n    }\n    get _cache() {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = {};\n        }\n        return this._eventLoopCache;\n    }\n    static defaultUrl() {\n        return \"http:/\\/localhost:8545\";\n    }\n    detectNetwork() {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n    _uncachedDetectNetwork() {\n        return __awaiter$a(this, void 0, void 0, function* () {\n            yield timer(0);\n            let chainId = null;\n            try {\n                chainId = yield this.send(\"eth_chainId\", []);\n            }\n            catch (error) {\n                try {\n                    chainId = yield this.send(\"net_version\", []);\n                }\n                catch (error) { }\n            }\n            if (chainId != null) {\n                const getNetwork = getStatic(this.constructor, \"getNetwork\");\n                try {\n                    return getNetwork(BigNumber.from(chainId).toNumber());\n                }\n                catch (error) {\n                    return logger$u.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                        chainId: chainId,\n                        event: \"invalidNetwork\",\n                        serverError: error\n                    });\n                }\n            }\n            return logger$u.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                event: \"noNetwork\"\n            });\n        });\n    }\n    getSigner(addressOrIndex) {\n        return new JsonRpcSigner(_constructorGuard$4, this, addressOrIndex);\n    }\n    getUncheckedSigner(addressOrIndex) {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n    listAccounts() {\n        return this.send(\"eth_accounts\", []).then((accounts) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n    send(method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([\"eth_chainId\", \"eth_blockNumber\"].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n            return result;\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n            throw error;\n        });\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n        return result;\n    }\n    prepareRequest(method, params) {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [\"eth_blockNumber\", []];\n            case \"getGasPrice\":\n                return [\"eth_gasPrice\", []];\n            case \"getBalance\":\n                return [\"eth_getBalance\", [getLowerCase(params.address), params.blockTag]];\n            case \"getTransactionCount\":\n                return [\"eth_getTransactionCount\", [getLowerCase(params.address), params.blockTag]];\n            case \"getCode\":\n                return [\"eth_getCode\", [getLowerCase(params.address), params.blockTag]];\n            case \"getStorageAt\":\n                return [\"eth_getStorageAt\", [getLowerCase(params.address), params.position, params.blockTag]];\n            case \"sendTransaction\":\n                return [\"eth_sendRawTransaction\", [params.signedTransaction]];\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [\"eth_getBlockByNumber\", [params.blockTag, !!params.includeTransactions]];\n                }\n                else if (params.blockHash) {\n                    return [\"eth_getBlockByHash\", [params.blockHash, !!params.includeTransactions]];\n                }\n                return null;\n            case \"getTransaction\":\n                return [\"eth_getTransactionByHash\", [params.transactionHash]];\n            case \"getTransactionReceipt\":\n                return [\"eth_getTransactionReceipt\", [params.transactionHash]];\n            case \"call\": {\n                const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_call\", [hexlifyTransaction(params.transaction, { from: true }), params.blockTag]];\n            }\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_estimateGas\", [hexlifyTransaction(params.transaction, { from: true })]];\n            }\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [\"eth_getLogs\", [params.filter]];\n        }\n        return null;\n    }\n    perform(method, params) {\n        return __awaiter$a(this, void 0, void 0, function* () {\n            // Legacy networks do not like the type field being passed along (which\n            // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n            if (method === \"call\" || method === \"estimateGas\") {\n                const tx = params.transaction;\n                if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                    // If there are no EIP-1559 properties, it might be non-EIP-a559\n                    if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                        const feeData = yield this.getFeeData();\n                        if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                            // Network doesn't know about EIP-1559 (and hence type)\n                            params = shallowCopy(params);\n                            params.transaction = shallowCopy(tx);\n                            delete params.transaction.type;\n                        }\n                    }\n                }\n            }\n            const args = this.prepareRequest(method, params);\n            if (args == null) {\n                logger$u.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n            }\n            try {\n                return yield this.send(args[0], args[1]);\n            }\n            catch (error) {\n                return checkError(method, error, params);\n            }\n        });\n    }\n    _startEvent(event) {\n        if (event.tag === \"pending\") {\n            this._startPending();\n        }\n        super._startEvent(event);\n    }\n    _startPending() {\n        if (this._pendingFilter != null) {\n            return;\n        }\n        const self = this;\n        const pendingFilter = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n        pendingFilter.then(function (filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [filterId]).then(function (hashes) {\n                    if (self._pendingFilter != pendingFilter) {\n                        return null;\n                    }\n                    let seq = Promise.resolve();\n                    hashes.forEach(function (hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function () {\n                            return self.getTransaction(hash).then(function (tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n                    return seq.then(function () {\n                        return timer(1000);\n                    });\n                }).then(function () {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [filterId]);\n                        return;\n                    }\n                    setTimeout(function () { poll(); }, 0);\n                    return null;\n                }).catch((error) => { });\n            }\n            poll();\n            return filterId;\n        }).catch((error) => { });\n    }\n    _stopEvent(event) {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction, allowExtra) {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys$3);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) {\n                    allowed[key] = true;\n                }\n            }\n        }\n        checkProperties(transaction, allowed);\n        const result = {};\n        // Some nodes (INFURA ropsten; INFURA mainnet is fine) do not like leading zeros.\n        [\"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            const value = hexValue(transaction[key]);\n            if (key === \"gasLimit\") {\n                key = \"gas\";\n            }\n            result[key] = value;\n        });\n        [\"from\", \"to\", \"data\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            result[key] = hexlify(transaction[key]);\n        });\n        if (transaction.accessList) {\n            result[\"accessList\"] = accessListify(transaction.accessList);\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=json-rpc-provider.js.map\n\nlet WS = null;\ntry {\n    WS = WebSocket;\n    if (WS == null) {\n        throw new Error(\"inject please\");\n    }\n}\ncatch (error) {\n    const logger = new Logger(version$m);\n    WS = function () {\n        logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n        });\n    };\n}\n//# sourceMappingURL=ws.js.map\n\nvar __awaiter$b = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst logger$v = new Logger(version$m);\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicats\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\nlet NextId = 1;\n// For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\nclass WebSocketProvider extends JsonRpcProvider {\n    constructor(url, network) {\n        // This will be added in the future; please open an issue to expedite\n        if (network === \"any\") {\n            logger$v.throwError(\"WebSocketProvider does not support 'any' network yet\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"network:any\"\n            });\n        }\n        super(url, network);\n        this._pollingInterval = -1;\n        this._wsReady = false;\n        defineReadOnly(this, \"_websocket\", new WS(this.connection.url));\n        defineReadOnly(this, \"_requests\", {});\n        defineReadOnly(this, \"_subs\", {});\n        defineReadOnly(this, \"_subIds\", {});\n        defineReadOnly(this, \"_detectNetwork\", super.detectNetwork());\n        // Stall sending requests until the socket is open...\n        this._websocket.onopen = () => {\n            this._wsReady = true;\n            Object.keys(this._requests).forEach((id) => {\n                this._websocket.send(this._requests[id].payload);\n            });\n        };\n        this._websocket.onmessage = (messageEvent) => {\n            const data = messageEvent.data;\n            const result = JSON.parse(data);\n            if (result.id != null) {\n                const id = String(result.id);\n                const request = this._requests[id];\n                delete this._requests[id];\n                if (result.result !== undefined) {\n                    request.callback(null, result.result);\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: JSON.parse(request.payload),\n                        response: result.result,\n                        provider: this\n                    });\n                }\n                else {\n                    let error = null;\n                    if (result.error) {\n                        error = new Error(result.error.message || \"unknown error\");\n                        defineReadOnly(error, \"code\", result.error.code || null);\n                        defineReadOnly(error, \"response\", data);\n                    }\n                    else {\n                        error = new Error(\"unknown error\");\n                    }\n                    request.callback(error, undefined);\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: JSON.parse(request.payload),\n                        provider: this\n                    });\n                }\n            }\n            else if (result.method === \"eth_subscription\") {\n                // Subscription...\n                const sub = this._subs[result.params.subscription];\n                if (sub) {\n                    //this.emit.apply(this,                  );\n                    sub.processFunc(result.params.result);\n                }\n            }\n            else {\n                console.warn(\"this should not happen\");\n            }\n        };\n        // This Provider does not actually poll, but we want to trigger\n        // poll events for things that depend on them (like stalling for\n        // block and transaction lookups)\n        const fauxPoll = setInterval(() => {\n            this.emit(\"poll\");\n        }, 1000);\n        if (fauxPoll.unref) {\n            fauxPoll.unref();\n        }\n    }\n    detectNetwork() {\n        return this._detectNetwork;\n    }\n    get pollingInterval() {\n        return 0;\n    }\n    resetEventsBlock(blockNumber) {\n        logger$v.throwError(\"cannot reset events block on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resetEventBlock\"\n        });\n    }\n    set pollingInterval(value) {\n        logger$v.throwError(\"cannot set polling interval on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPollingInterval\"\n        });\n    }\n    poll() {\n        return __awaiter$b(this, void 0, void 0, function* () {\n            return null;\n        });\n    }\n    set polling(value) {\n        if (!value) {\n            return;\n        }\n        logger$v.throwError(\"cannot set polling on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPolling\"\n        });\n    }\n    send(method, params) {\n        const rid = NextId++;\n        return new Promise((resolve, reject) => {\n            function callback(error, result) {\n                if (error) {\n                    return reject(error);\n                }\n                return resolve(result);\n            }\n            const payload = JSON.stringify({\n                method: method,\n                params: params,\n                id: rid,\n                jsonrpc: \"2.0\"\n            });\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: JSON.parse(payload),\n                provider: this\n            });\n            this._requests[String(rid)] = { callback, payload };\n            if (this._wsReady) {\n                this._websocket.send(payload);\n            }\n        });\n    }\n    static defaultUrl() {\n        return \"ws:/\\/localhost:8546\";\n    }\n    _subscribe(tag, param, processFunc) {\n        return __awaiter$b(this, void 0, void 0, function* () {\n            let subIdPromise = this._subIds[tag];\n            if (subIdPromise == null) {\n                subIdPromise = Promise.all(param).then((param) => {\n                    return this.send(\"eth_subscribe\", param);\n                });\n                this._subIds[tag] = subIdPromise;\n            }\n            const subId = yield subIdPromise;\n            this._subs[subId] = { tag, processFunc };\n        });\n    }\n    _startEvent(event) {\n        switch (event.type) {\n            case \"block\":\n                this._subscribe(\"block\", [\"newHeads\"], (result) => {\n                    const blockNumber = BigNumber.from(result.number).toNumber();\n                    this._emitted.block = blockNumber;\n                    this.emit(\"block\", blockNumber);\n                });\n                break;\n            case \"pending\":\n                this._subscribe(\"pending\", [\"newPendingTransactions\"], (result) => {\n                    this.emit(\"pending\", result);\n                });\n                break;\n            case \"filter\":\n                this._subscribe(event.tag, [\"logs\", this._getFilter(event.filter)], (result) => {\n                    if (result.removed == null) {\n                        result.removed = false;\n                    }\n                    this.emit(event.filter, this.formatter.filterLog(result));\n                });\n                break;\n            case \"tx\": {\n                const emitReceipt = (event) => {\n                    const hash = event.hash;\n                    this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt) {\n                            return;\n                        }\n                        this.emit(hash, receipt);\n                    });\n                };\n                // In case it is already mined\n                emitReceipt(event);\n                // To keep things simple, we start up a single newHeads subscription\n                // to keep an eye out for transactions we are watching for.\n                // Starting a subscription for an event (i.e. \"tx\") that is already\n                // running is (basically) a nop.\n                this._subscribe(\"tx\", [\"newHeads\"], (result) => {\n                    this._events.filter((e) => (e.type === \"tx\")).forEach(emitReceipt);\n                });\n                break;\n            }\n            // Nothing is needed\n            case \"debug\":\n            case \"poll\":\n            case \"willPoll\":\n            case \"didPoll\":\n            case \"error\":\n                break;\n            default:\n                console.log(\"unhandled:\", event);\n                break;\n        }\n    }\n    _stopEvent(event) {\n        let tag = event.tag;\n        if (event.type === \"tx\") {\n            // There are remaining transaction event listeners\n            if (this._events.filter((e) => (e.type === \"tx\")).length) {\n                return;\n            }\n            tag = \"tx\";\n        }\n        else if (this.listenerCount(event.event)) {\n            // There are remaining event listeners\n            return;\n        }\n        const subId = this._subIds[tag];\n        if (!subId) {\n            return;\n        }\n        delete this._subIds[tag];\n        subId.then((subId) => {\n            if (!this._subs[subId]) {\n                return;\n            }\n            delete this._subs[subId];\n            this.send(\"eth_unsubscribe\", [subId]);\n        });\n    }\n    destroy() {\n        return __awaiter$b(this, void 0, void 0, function* () {\n            // Wait until we have connected before trying to disconnect\n            if (this._websocket.readyState === WS.CONNECTING) {\n                yield (new Promise((resolve) => {\n                    this._websocket.onopen = function () {\n                        resolve(true);\n                    };\n                    this._websocket.onerror = function () {\n                        resolve(false);\n                    };\n                }));\n            }\n            // Hangup\n            // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n            this._websocket.close(1000);\n        });\n    }\n}\n//# sourceMappingURL=websocket-provider.js.map\n\nvar __awaiter$c = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst logger$w = new Logger(version$m);\n// A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\nclass StaticJsonRpcProvider extends JsonRpcProvider {\n    detectNetwork() {\n        const _super = Object.create(null, {\n            detectNetwork: { get: () => super.detectNetwork }\n        });\n        return __awaiter$c(this, void 0, void 0, function* () {\n            let network = this.network;\n            if (network == null) {\n                network = yield _super.detectNetwork.call(this);\n                if (!network) {\n                    logger$w.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, {});\n                }\n                // If still not set, set it\n                if (this._network == null) {\n                    // A static network does not support \"any\"\n                    defineReadOnly(this, \"_network\", network);\n                    this.emit(\"network\", network, null);\n                }\n            }\n            return network;\n        });\n    }\n}\nclass UrlJsonRpcProvider extends StaticJsonRpcProvider {\n    constructor(network, apiKey) {\n        logger$w.checkAbstract(new.target, UrlJsonRpcProvider);\n        // Normalize the Network and API Key\n        network = getStatic((new.target), \"getNetwork\")(network);\n        apiKey = getStatic((new.target), \"getApiKey\")(apiKey);\n        const connection = getStatic((new.target), \"getUrl\")(network, apiKey);\n        super(connection, network);\n        if (typeof (apiKey) === \"string\") {\n            defineReadOnly(this, \"apiKey\", apiKey);\n        }\n        else if (apiKey != null) {\n            Object.keys(apiKey).forEach((key) => {\n                defineReadOnly(this, key, apiKey[key]);\n            });\n        }\n    }\n    _startPending() {\n        logger$w.warn(\"WARNING: API provider does not support pending filters\");\n    }\n    isCommunityResource() {\n        return false;\n    }\n    getSigner(address) {\n        return logger$w.throwError(\"API provider does not support signing\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"getSigner\" });\n    }\n    listAccounts() {\n        return Promise.resolve([]);\n    }\n    // Return a defaultApiKey if null, otherwise validate the API key\n    static getApiKey(apiKey) {\n        return apiKey;\n    }\n    // Returns the url or connection for the given network and API key. The\n    // API key will have been sanitized by the getApiKey first, so any validation\n    // or transformations can be done there.\n    static getUrl(network, apiKey) {\n        return logger$w.throwError(\"not implemented; sub-classes must override getUrl\", Logger.errors.NOT_IMPLEMENTED, {\n            operation: \"getUrl\"\n        });\n    }\n}\n//# sourceMappingURL=url-json-rpc-provider.js.map\n\nvar __awaiter$d = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst logger$x = new Logger(version$m);\n// This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\";\nclass AlchemyWebSocketProvider extends WebSocketProvider {\n    constructor(network, apiKey) {\n        const provider = new AlchemyProvider(network, apiKey);\n        const url = provider.connection.url.replace(/^http/i, \"ws\")\n            .replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n        super(url, provider.network);\n        defineReadOnly(this, \"apiKey\", provider.apiKey);\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\nclass AlchemyProvider extends UrlJsonRpcProvider {\n    static getWebSocketProvider(network, apiKey) {\n        return new AlchemyWebSocketProvider(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        if (apiKey == null) {\n            return defaultApiKey;\n        }\n        if (apiKey && typeof (apiKey) !== \"string\") {\n            logger$x.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.alchemyapi.io/v2/\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.alchemyapi.io/v2/\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.alchemyapi.io/v2/\";\n                break;\n            case \"kovan\":\n                host = \"eth-kovan.alchemyapi.io/v2/\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.g.alchemy.com/v2/\";\n                break;\n            default:\n                logger$x.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + apiKey),\n            throttleCallback: (attempt, url) => {\n                if (apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n    }\n    perform(method, params) {\n        const _super = Object.create(null, {\n            perform: { get: () => super.perform }\n        });\n        return __awaiter$d(this, void 0, void 0, function* () {\n            if ((method === \"estimateGas\" && params.transaction.type === 2) || (method === \"sendTransaction\" && params.signedTransaction.substring(0, 4) === \"0x02\")) {\n                logger$x.throwError(\"AlchemyProvider does not currently support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: method,\n                    transaction: params.transaction\n                });\n            }\n            return _super.perform.call(this, method, params);\n        });\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n//# sourceMappingURL=alchemy-provider.js.map\n\nvar __awaiter$e = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst logger$y = new Logger(version$m);\nclass CloudflareProvider extends UrlJsonRpcProvider {\n    static getApiKey(apiKey) {\n        if (apiKey != null) {\n            logger$y.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n        }\n        return null;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n            default:\n                logger$y.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return host;\n    }\n    perform(method, params) {\n        const _super = Object.create(null, {\n            perform: { get: () => super.perform }\n        });\n        return __awaiter$e(this, void 0, void 0, function* () {\n            // The Cloudflare provider does not support eth_blockNumber,\n            // so we get the latest block and pull it from that\n            if (method === \"getBlockNumber\") {\n                const block = yield _super.perform.call(this, \"getBlock\", { blockTag: \"latest\" });\n                return block.number;\n            }\n            return _super.perform.call(this, method, params);\n        });\n    }\n}\n//# sourceMappingURL=cloudflare-provider.js.map\n\nvar __awaiter$f = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst logger$z = new Logger(version$m);\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction) {\n    const result = {};\n    for (let key in transaction) {\n        if (transaction[key] == null) {\n            continue;\n        }\n        let value = transaction[key];\n        if (key === \"type\" && value === 0) {\n            continue;\n        }\n        // Quantity-types require no leading zero, unless 0\n        if ({ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true }[key]) {\n            value = hexValue(hexlify(value));\n        }\n        else if (key === \"accessList\") {\n            value = \"[\" + accessListify(value).map((set) => {\n                return `{address:\"${set.address}\",storageKeys:[\"${set.storageKeys.join('\",\"')}\"]}`;\n            }).join(\",\") + \"]\";\n        }\n        else {\n            value = hexlify(value);\n        }\n        result[key] = value;\n    }\n    return result;\n}\nfunction getResult$1(result) {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n        return result.result;\n    }\n    if (result.status != 1 || result.message != \"OK\") {\n        const error = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n        }\n        throw error;\n    }\n    return result.result;\n}\nfunction getJsonResult(result) {\n    // This response indicates we are being throttled\n    if (result && result.status == 0 && result.message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n        const error = new Error(\"throttled response\");\n        error.result = JSON.stringify(result);\n        error.throttleRetry = true;\n        throw error;\n    }\n    if (result.jsonrpc != \"2.0\") {\n        // @TODO: not any\n        const error = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n    if (result.error) {\n        // @TODO: not any\n        const error = new Error(result.error.message || \"unknown error\");\n        if (result.error.code) {\n            error.code = result.error.code;\n        }\n        if (result.error.data) {\n            error.data = result.error.data;\n        }\n        throw error;\n    }\n    return result.result;\n}\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag) {\n    if (blockTag === \"pending\") {\n        throw new Error(\"pending not supported\");\n    }\n    if (blockTag === \"latest\") {\n        return blockTag;\n    }\n    return parseInt(blockTag.substring(2), 16);\n}\nconst defaultApiKey$1 = \"9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB\";\nfunction checkError$1(method, error, transaction) {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n        // Etherscan keeps changing their string\n        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n            // Etherscan prefixes the data like \"Reverted 0x1234\"\n            let data = e.data;\n            if (data) {\n                data = \"0x\" + data.replace(/^.*0x/i, \"\");\n            }\n            if (isHexString(data)) {\n                return data;\n            }\n            logger$z.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n                error, data: \"0x\"\n            });\n        }\n    }\n    // Get the message from any nested error structure\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR) {\n        if (error.error && typeof (error.error.message) === \"string\") {\n            message = error.error.message;\n        }\n        else if (typeof (error.body) === \"string\") {\n            message = error.body;\n        }\n        else if (typeof (error.responseText) === \"string\") {\n            message = error.responseText;\n        }\n    }\n    message = (message || \"\").toLowerCase();\n    // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n    if (message.match(/insufficient funds/)) {\n        logger$z.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n    // \"Transaction with the same hash was already imported.\"\n    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n        logger$z.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n    // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n    if (message.match(/another transaction with same nonce/)) {\n        logger$z.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n    if (message.match(/execution failed due to an exception|execution reverted/)) {\n        logger$z.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n    throw error;\n}\nclass EtherscanProvider extends BaseProvider {\n    constructor(network, apiKey) {\n        logger$z.checkNew(new.target, EtherscanProvider);\n        super(network);\n        defineReadOnly(this, \"baseUrl\", this.getBaseUrl());\n        defineReadOnly(this, \"apiKey\", apiKey || defaultApiKey$1);\n    }\n    getBaseUrl() {\n        switch (this.network ? this.network.name : \"invalid\") {\n            case \"homestead\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"ropsten\":\n                return \"https:/\\/api-ropsten.etherscan.io\";\n            case \"rinkeby\":\n                return \"https:/\\/api-rinkeby.etherscan.io\";\n            case \"kovan\":\n                return \"https:/\\/api-kovan.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n        }\n        return logger$z.throwArgumentError(\"unsupported network\", \"network\", name);\n    }\n    getUrl(module, params) {\n        const query = Object.keys(params).reduce((accum, key) => {\n            const value = params[key];\n            if (value != null) {\n                accum += `&${key}=${value}`;\n            }\n            return accum;\n        }, \"\");\n        const apiKey = ((this.apiKey) ? `&apikey=${this.apiKey}` : \"\");\n        return `${this.baseUrl}/api?module=${module}${query}${apiKey}`;\n    }\n    getPostUrl() {\n        return `${this.baseUrl}/api`;\n    }\n    getPostData(module, params) {\n        params.module = module;\n        params.apikey = this.apiKey;\n        return params;\n    }\n    fetch(module, params, post) {\n        return __awaiter$f(this, void 0, void 0, function* () {\n            const url = (post ? this.getPostUrl() : this.getUrl(module, params));\n            const payload = (post ? this.getPostData(module, params) : null);\n            const procFunc = (module === \"proxy\") ? getJsonResult : getResult$1;\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: url,\n                provider: this\n            });\n            const connection = {\n                url: url,\n                throttleSlotInterval: 1000,\n                throttleCallback: (attempt, url) => {\n                    if (this.isCommunityResource()) {\n                        showThrottleMessage();\n                    }\n                    return Promise.resolve(true);\n                }\n            };\n            let payloadStr = null;\n            if (payload) {\n                connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n                payloadStr = Object.keys(payload).map((key) => {\n                    return `${key}=${payload[key]}`;\n                }).join(\"&\");\n            }\n            const result = yield fetchJson(connection, payloadStr, procFunc || getJsonResult);\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: url,\n                response: deepCopy(result),\n                provider: this\n            });\n            return result;\n        });\n    }\n    detectNetwork() {\n        return __awaiter$f(this, void 0, void 0, function* () {\n            return this.network;\n        });\n    }\n    perform(method, params) {\n        const _super = Object.create(null, {\n            perform: { get: () => super.perform }\n        });\n        return __awaiter$f(this, void 0, void 0, function* () {\n            switch (method) {\n                case \"getBlockNumber\":\n                    return this.fetch(\"proxy\", { action: \"eth_blockNumber\" });\n                case \"getGasPrice\":\n                    return this.fetch(\"proxy\", { action: \"eth_gasPrice\" });\n                case \"getBalance\":\n                    // Returns base-10 result\n                    return this.fetch(\"account\", {\n                        action: \"balance\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getTransactionCount\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionCount\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getCode\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getCode\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getStorageAt\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getStorageAt\",\n                        address: params.address,\n                        position: params.position,\n                        tag: params.blockTag\n                    });\n                case \"sendTransaction\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_sendRawTransaction\",\n                        hex: params.signedTransaction\n                    }, true).catch((error) => {\n                        return checkError$1(\"sendTransaction\", error, params.signedTransaction);\n                    });\n                case \"getBlock\":\n                    if (params.blockTag) {\n                        return this.fetch(\"proxy\", {\n                            action: \"eth_getBlockByNumber\",\n                            tag: params.blockTag,\n                            boolean: (params.includeTransactions ? \"true\" : \"false\")\n                        });\n                    }\n                    throw new Error(\"getBlock by blockHash not implemented\");\n                case \"getTransaction\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionByHash\",\n                        txhash: params.transactionHash\n                    });\n                case \"getTransactionReceipt\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionReceipt\",\n                        txhash: params.transactionHash\n                    });\n                case \"call\": {\n                    if (params.blockTag !== \"latest\") {\n                        throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                    }\n                    const postData = getTransactionPostData(params.transaction);\n                    postData.module = \"proxy\";\n                    postData.action = \"eth_call\";\n                    try {\n                        return yield this.fetch(\"proxy\", postData, true);\n                    }\n                    catch (error) {\n                        return checkError$1(\"call\", error, params.transaction);\n                    }\n                }\n                case \"estimateGas\": {\n                    const postData = getTransactionPostData(params.transaction);\n                    postData.module = \"proxy\";\n                    postData.action = \"eth_estimateGas\";\n                    try {\n                        return yield this.fetch(\"proxy\", postData, true);\n                    }\n                    catch (error) {\n                        return checkError$1(\"estimateGas\", error, params.transaction);\n                    }\n                }\n                case \"getLogs\": {\n                    const args = { action: \"getLogs\" };\n                    if (params.filter.fromBlock) {\n                        args.fromBlock = checkLogTag(params.filter.fromBlock);\n                    }\n                    if (params.filter.toBlock) {\n                        args.toBlock = checkLogTag(params.filter.toBlock);\n                    }\n                    if (params.filter.address) {\n                        args.address = params.filter.address;\n                    }\n                    // @TODO: We can handle slightly more complicated logs using the logs API\n                    if (params.filter.topics && params.filter.topics.length > 0) {\n                        if (params.filter.topics.length > 1) {\n                            logger$z.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                        }\n                        if (params.filter.topics.length === 1) {\n                            const topic0 = params.filter.topics[0];\n                            if (typeof (topic0) !== \"string\" || topic0.length !== 66) {\n                                logger$z.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                            }\n                            args.topic0 = topic0;\n                        }\n                    }\n                    const logs = yield this.fetch(\"logs\", args);\n                    // Cache txHash => blockHash\n                    let blocks = {};\n                    // Add any missing blockHash to the logs\n                    for (let i = 0; i < logs.length; i++) {\n                        const log = logs[i];\n                        if (log.blockHash != null) {\n                            continue;\n                        }\n                        if (blocks[log.blockNumber] == null) {\n                            const block = yield this.getBlock(log.blockNumber);\n                            if (block) {\n                                blocks[log.blockNumber] = block.hash;\n                            }\n                        }\n                        log.blockHash = blocks[log.blockNumber];\n                    }\n                    return logs;\n                }\n                case \"getEtherPrice\":\n                    if (this.network.name !== \"homestead\") {\n                        return 0.0;\n                    }\n                    return parseFloat((yield this.fetch(\"stats\", { action: \"ethprice\" })).ethusd);\n            }\n            return _super.perform.call(this, method, params);\n        });\n    }\n    // Note: The `page` page parameter only allows pagination within the\n    //       10,000 window abailable without a page and offset parameter\n    //       Error: Result window is too large, PageNo x Offset size must\n    //              be less than or equal to 10000\n    getHistory(addressOrName, startBlock, endBlock) {\n        return __awaiter$f(this, void 0, void 0, function* () {\n            const params = {\n                action: \"txlist\",\n                address: (yield this.resolveName(addressOrName)),\n                startblock: ((startBlock == null) ? 0 : startBlock),\n                endblock: ((endBlock == null) ? 99999999 : endBlock),\n                sort: \"asc\"\n            };\n            const result = yield this.fetch(\"account\", params);\n            return result.map((tx) => {\n                [\"contractAddress\", \"to\"].forEach(function (key) {\n                    if (tx[key] == \"\") {\n                        delete tx[key];\n                    }\n                });\n                if (tx.creates == null && tx.contractAddress != null) {\n                    tx.creates = tx.contractAddress;\n                }\n                const item = this.formatter.transactionResponse(tx);\n                if (tx.timeStamp) {\n                    item.timestamp = parseInt(tx.timeStamp);\n                }\n                return item;\n            });\n        });\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey$1);\n    }\n}\n//# sourceMappingURL=etherscan-provider.js.map\n\nvar __awaiter$g = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst logger$A = new Logger(version$m);\nfunction now() { return (new Date()).getTime(); }\n// Returns to network as long as all agree, or null if any is null.\n// Throws an error if any two networks do not match.\nfunction checkNetworks(networks) {\n    let result = null;\n    for (let i = 0; i < networks.length; i++) {\n        const network = networks[i];\n        // Null! We do not know our network; bail.\n        if (network == null) {\n            return null;\n        }\n        if (result) {\n            // Make sure the network matches the previous networks\n            if (!(result.name === network.name && result.chainId === network.chainId &&\n                ((result.ensAddress === network.ensAddress) || (result.ensAddress == null && network.ensAddress == null)))) {\n                logger$A.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n            }\n        }\n        else {\n            result = network;\n        }\n    }\n    return result;\n}\nfunction median(values, maxDelta) {\n    values = values.slice().sort();\n    const middle = Math.floor(values.length / 2);\n    // Odd length; take the middle\n    if (values.length % 2) {\n        return values[middle];\n    }\n    // Even length; take the average of the two middle\n    const a = values[middle - 1], b = values[middle];\n    if (maxDelta != null && Math.abs(a - b) > maxDelta) {\n        return null;\n    }\n    return (a + b) / 2;\n}\nfunction serialize$1(value) {\n    if (value === null) {\n        return \"null\";\n    }\n    else if (typeof (value) === \"number\" || typeof (value) === \"boolean\") {\n        return JSON.stringify(value);\n    }\n    else if (typeof (value) === \"string\") {\n        return value;\n    }\n    else if (BigNumber.isBigNumber(value)) {\n        return value.toString();\n    }\n    else if (Array.isArray(value)) {\n        return JSON.stringify(value.map((i) => serialize$1(i)));\n    }\n    else if (typeof (value) === \"object\") {\n        const keys = Object.keys(value);\n        keys.sort();\n        return \"{\" + keys.map((key) => {\n            let v = value[key];\n            if (typeof (v) === \"function\") {\n                v = \"[function]\";\n            }\n            else {\n                v = serialize$1(v);\n            }\n            return JSON.stringify(key) + \":\" + v;\n        }).join(\",\") + \"}\";\n    }\n    throw new Error(\"unknown value type: \" + typeof (value));\n}\n// Next request ID to use for emitting debug info\nlet nextRid = 1;\nfunction stall$1(duration) {\n    let cancel = null;\n    let timer = null;\n    let promise = (new Promise((resolve) => {\n        cancel = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            resolve();\n        };\n        timer = setTimeout(cancel, duration);\n    }));\n    const wait = (func) => {\n        promise = promise.then(func);\n        return promise;\n    };\n    function getPromise() {\n        return promise;\n    }\n    return { cancel, getPromise, wait };\n}\nconst ForwardErrors = [\n    Logger.errors.CALL_EXCEPTION,\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n    Logger.errors.UNPREDICTABLE_GAS_LIMIT\n];\nconst ForwardProperties = [\n    \"address\",\n    \"args\",\n    \"errorArgs\",\n    \"errorSignature\",\n    \"method\",\n    \"transaction\",\n];\nfunction exposeDebugConfig(config, now) {\n    const result = {\n        weight: config.weight\n    };\n    Object.defineProperty(result, \"provider\", { get: () => config.provider });\n    if (config.start) {\n        result.start = config.start;\n    }\n    if (now) {\n        result.duration = (now - config.start);\n    }\n    if (config.done) {\n        if (config.error) {\n            result.error = config.error;\n        }\n        else {\n            result.result = config.result || null;\n        }\n    }\n    return result;\n}\nfunction normalizedTally(normalize, quorum) {\n    return function (configs) {\n        // Count the votes for each result\n        const tally = {};\n        configs.forEach((c) => {\n            const value = normalize(c.result);\n            if (!tally[value]) {\n                tally[value] = { count: 0, result: c.result };\n            }\n            tally[value].count++;\n        });\n        // Check for a quorum on any given result\n        const keys = Object.keys(tally);\n        for (let i = 0; i < keys.length; i++) {\n            const check = tally[keys[i]];\n            if (check.count >= quorum) {\n                return check.result;\n            }\n        }\n        // No quroum\n        return undefined;\n    };\n}\nfunction getProcessFunc(provider, method, params) {\n    let normalize = serialize$1;\n    switch (method) {\n        case \"getBlockNumber\":\n            // Return the median value, unless there is (median + 1) is also\n            // present, in which case that is probably true and the median\n            // is going to be stale soon. In the event of a malicious node,\n            // the lie will be true soon enough.\n            return function (configs) {\n                const values = configs.map((c) => c.result);\n                // Get the median block number\n                let blockNumber = median(configs.map((c) => c.result), 2);\n                if (blockNumber == null) {\n                    return undefined;\n                }\n                blockNumber = Math.ceil(blockNumber);\n                // If the next block height is present, its prolly safe to use\n                if (values.indexOf(blockNumber + 1) >= 0) {\n                    blockNumber++;\n                }\n                // Don't ever roll back the blockNumber\n                if (blockNumber >= provider._highestBlockNumber) {\n                    provider._highestBlockNumber = blockNumber;\n                }\n                return provider._highestBlockNumber;\n            };\n        case \"getGasPrice\":\n            // Return the middle (round index up) value, similar to median\n            // but do not average even entries and choose the higher.\n            // Malicious actors must compromise 50% of the nodes to lie.\n            return function (configs) {\n                const values = configs.map((c) => c.result);\n                values.sort();\n                return values[Math.floor(values.length / 2)];\n            };\n        case \"getEtherPrice\":\n            // Returns the median price. Malicious actors must compromise at\n            // least 50% of the nodes to lie (in a meaningful way).\n            return function (configs) {\n                return median(configs.map((c) => c.result));\n            };\n        // No additional normalizing required; serialize is enough\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n        case \"getStorageAt\":\n        case \"call\":\n        case \"estimateGas\":\n        case \"getLogs\":\n            break;\n        // We drop the confirmations from transactions as it is approximate\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            normalize = function (tx) {\n                if (tx == null) {\n                    return null;\n                }\n                tx = shallowCopy(tx);\n                tx.confirmations = -1;\n                return serialize$1(tx);\n            };\n            break;\n        // We drop the confirmations from transactions as it is approximate\n        case \"getBlock\":\n            // We drop the confirmations from transactions as it is approximate\n            if (params.includeTransactions) {\n                normalize = function (block) {\n                    if (block == null) {\n                        return null;\n                    }\n                    block = shallowCopy(block);\n                    block.transactions = block.transactions.map((tx) => {\n                        tx = shallowCopy(tx);\n                        tx.confirmations = -1;\n                        return tx;\n                    });\n                    return serialize$1(block);\n                };\n            }\n            else {\n                normalize = function (block) {\n                    if (block == null) {\n                        return null;\n                    }\n                    return serialize$1(block);\n                };\n            }\n            break;\n        default:\n            throw new Error(\"unknown method: \" + method);\n    }\n    // Return the result if and only if the expected quorum is\n    // satisfied and agreed upon for the final result.\n    return normalizedTally(normalize, provider.quorum);\n}\n// If we are doing a blockTag query, we need to make sure the backend is\n// caught up to the FallbackProvider, before sending a request to it.\nfunction waitForSync(config, blockNumber) {\n    return __awaiter$g(this, void 0, void 0, function* () {\n        const provider = (config.provider);\n        if ((provider.blockNumber != null && provider.blockNumber >= blockNumber) || blockNumber === -1) {\n            return provider;\n        }\n        return poll(() => {\n            return new Promise((resolve, reject) => {\n                setTimeout(function () {\n                    // We are synced\n                    if (provider.blockNumber >= blockNumber) {\n                        return resolve(provider);\n                    }\n                    // We're done; just quit\n                    if (config.cancelled) {\n                        return resolve(null);\n                    }\n                    // Try again, next block\n                    return resolve(undefined);\n                }, 0);\n            });\n        }, { oncePoll: provider });\n    });\n}\nfunction getRunner(config, currentBlockNumber, method, params) {\n    return __awaiter$g(this, void 0, void 0, function* () {\n        let provider = config.provider;\n        switch (method) {\n            case \"getBlockNumber\":\n            case \"getGasPrice\":\n                return provider[method]();\n            case \"getEtherPrice\":\n                if (provider.getEtherPrice) {\n                    return provider.getEtherPrice();\n                }\n                break;\n            case \"getBalance\":\n            case \"getTransactionCount\":\n            case \"getCode\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[method](params.address, params.blockTag || \"latest\");\n            case \"getStorageAt\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\");\n            case \"getBlock\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[(params.includeTransactions ? \"getBlockWithTransactions\" : \"getBlock\")](params.blockTag || params.blockHash);\n            case \"call\":\n            case \"estimateGas\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[method](params.transaction);\n            case \"getTransaction\":\n            case \"getTransactionReceipt\":\n                return provider[method](params.transactionHash);\n            case \"getLogs\": {\n                let filter = params.filter;\n                if ((filter.fromBlock && isHexString(filter.fromBlock)) || (filter.toBlock && isHexString(filter.toBlock))) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider.getLogs(filter);\n            }\n        }\n        return logger$A.throwError(\"unknown method error\", Logger.errors.UNKNOWN_ERROR, {\n            method: method,\n            params: params\n        });\n    });\n}\nclass FallbackProvider extends BaseProvider {\n    constructor(providers, quorum) {\n        logger$A.checkNew(new.target, FallbackProvider);\n        if (providers.length === 0) {\n            logger$A.throwArgumentError(\"missing providers\", \"providers\", providers);\n        }\n        const providerConfigs = providers.map((configOrProvider, index) => {\n            if (Provider.isProvider(configOrProvider)) {\n                const stallTimeout = isCommunityResource(configOrProvider) ? 2000 : 750;\n                const priority = 1;\n                return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout, priority });\n            }\n            const config = shallowCopy(configOrProvider);\n            if (config.priority == null) {\n                config.priority = 1;\n            }\n            if (config.stallTimeout == null) {\n                config.stallTimeout = isCommunityResource(configOrProvider) ? 2000 : 750;\n            }\n            if (config.weight == null) {\n                config.weight = 1;\n            }\n            const weight = config.weight;\n            if (weight % 1 || weight > 512 || weight < 1) {\n                logger$A.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", `providers[${index}].weight`, weight);\n            }\n            return Object.freeze(config);\n        });\n        const total = providerConfigs.reduce((accum, c) => (accum + c.weight), 0);\n        if (quorum == null) {\n            quorum = total / 2;\n        }\n        else if (quorum > total) {\n            logger$A.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n        }\n        // Are all providers' networks are known\n        let networkOrReady = checkNetworks(providerConfigs.map((c) => (c.provider).network));\n        // Not all networks are known; we must stall\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then(resolve, reject);\n                }, 0);\n            });\n        }\n        super(networkOrReady);\n        // Preserve a copy, so we do not get mutated\n        defineReadOnly(this, \"providerConfigs\", Object.freeze(providerConfigs));\n        defineReadOnly(this, \"quorum\", quorum);\n        this._highestBlockNumber = -1;\n    }\n    detectNetwork() {\n        return __awaiter$g(this, void 0, void 0, function* () {\n            const networks = yield Promise.all(this.providerConfigs.map((c) => c.provider.getNetwork()));\n            return checkNetworks(networks);\n        });\n    }\n    perform(method, params) {\n        return __awaiter$g(this, void 0, void 0, function* () {\n            // Sending transactions is special; always broadcast it to all backends\n            if (method === \"sendTransaction\") {\n                const results = yield Promise.all(this.providerConfigs.map((c) => {\n                    return c.provider.sendTransaction(params.signedTransaction).then((result) => {\n                        return result.hash;\n                    }, (error) => {\n                        return error;\n                    });\n                }));\n                // Any success is good enough (other errors are likely \"already seen\" errors\n                for (let i = 0; i < results.length; i++) {\n                    const result = results[i];\n                    if (typeof (result) === \"string\") {\n                        return result;\n                    }\n                }\n                // They were all an error; pick the first error\n                throw results[0];\n            }\n            // We need to make sure we are in sync with our backends, so we need\n            // to know this before we can make a lot of calls\n            if (this._highestBlockNumber === -1 && method !== \"getBlockNumber\") {\n                yield this.getBlockNumber();\n            }\n            const processFunc = getProcessFunc(this, method, params);\n            // Shuffle the providers and then sort them by their priority; we\n            // shallowCopy them since we will store the result in them too\n            const configs = shuffled(this.providerConfigs.map(shallowCopy));\n            configs.sort((a, b) => (a.priority - b.priority));\n            const currentBlockNumber = this._highestBlockNumber;\n            let i = 0;\n            let first = true;\n            while (true) {\n                const t0 = now();\n                // Compute the inflight weight (exclude anything past)\n                let inflightWeight = configs.filter((c) => (c.runner && ((t0 - c.start) < c.stallTimeout)))\n                    .reduce((accum, c) => (accum + c.weight), 0);\n                // Start running enough to meet quorum\n                while (inflightWeight < this.quorum && i < configs.length) {\n                    const config = configs[i++];\n                    const rid = nextRid++;\n                    config.start = now();\n                    config.staller = stall$1(config.stallTimeout);\n                    config.staller.wait(() => { config.staller = null; });\n                    config.runner = getRunner(config, currentBlockNumber, method, params).then((result) => {\n                        config.done = true;\n                        config.result = result;\n                        if (this.listenerCount(\"debug\")) {\n                            this.emit(\"debug\", {\n                                action: \"request\",\n                                rid: rid,\n                                backend: exposeDebugConfig(config, now()),\n                                request: { method: method, params: deepCopy(params) },\n                                provider: this\n                            });\n                        }\n                    }, (error) => {\n                        config.done = true;\n                        config.error = error;\n                        if (this.listenerCount(\"debug\")) {\n                            this.emit(\"debug\", {\n                                action: \"request\",\n                                rid: rid,\n                                backend: exposeDebugConfig(config, now()),\n                                request: { method: method, params: deepCopy(params) },\n                                provider: this\n                            });\n                        }\n                    });\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, null),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                    }\n                    inflightWeight += config.weight;\n                }\n                // Wait for anything meaningful to finish or stall out\n                const waiting = [];\n                configs.forEach((c) => {\n                    if (c.done || !c.runner) {\n                        return;\n                    }\n                    waiting.push(c.runner);\n                    if (c.staller) {\n                        waiting.push(c.staller.getPromise());\n                    }\n                });\n                if (waiting.length) {\n                    yield Promise.race(waiting);\n                }\n                // Check the quorum and process the results; the process function\n                // may additionally decide the quorum is not met\n                const results = configs.filter((c) => (c.done && c.error == null));\n                if (results.length >= this.quorum) {\n                    const result = processFunc(results);\n                    if (result !== undefined) {\n                        // Shut down any stallers\n                        configs.forEach(c => {\n                            if (c.staller) {\n                                c.staller.cancel();\n                            }\n                            c.cancelled = true;\n                        });\n                        return result;\n                    }\n                    if (!first) {\n                        yield stall$1(100).getPromise();\n                    }\n                    first = false;\n                }\n                // No result, check for errors that should be forwarded\n                const errors = configs.reduce((accum, c) => {\n                    if (!c.done || c.error == null) {\n                        return accum;\n                    }\n                    const code = (c.error).code;\n                    if (ForwardErrors.indexOf(code) >= 0) {\n                        if (!accum[code]) {\n                            accum[code] = { error: c.error, weight: 0 };\n                        }\n                        accum[code].weight += c.weight;\n                    }\n                    return accum;\n                }, ({}));\n                Object.keys(errors).forEach((errorCode) => {\n                    const tally = errors[errorCode];\n                    if (tally.weight < this.quorum) {\n                        return;\n                    }\n                    // Shut down any stallers\n                    configs.forEach(c => {\n                        if (c.staller) {\n                            c.staller.cancel();\n                        }\n                        c.cancelled = true;\n                    });\n                    const e = (tally.error);\n                    const props = {};\n                    ForwardProperties.forEach((name) => {\n                        if (e[name] == null) {\n                            return;\n                        }\n                        props[name] = e[name];\n                    });\n                    logger$A.throwError(e.reason || e.message, errorCode, props);\n                });\n                // All configs have run to completion; we will never get more data\n                if (configs.filter((c) => !c.done).length === 0) {\n                    break;\n                }\n            }\n            // Shut down any stallers; shouldn't be any\n            configs.forEach(c => {\n                if (c.staller) {\n                    c.staller.cancel();\n                }\n                c.cancelled = true;\n            });\n            return logger$A.throwError(\"failed to meet quorum\", Logger.errors.SERVER_ERROR, {\n                method: method,\n                params: params,\n                //results: configs.map((c) => c.result),\n                //errors: configs.map((c) => c.error),\n                results: configs.map((c) => exposeDebugConfig(c)),\n                provider: this\n            });\n        });\n    }\n}\n//# sourceMappingURL=fallback-provider.js.map\n\nconst IpcProvider = null;\n//# sourceMappingURL=ipc-provider.js.map\n\nconst logger$B = new Logger(version$m);\nconst defaultProjectId = \"84842078b09946638c03157f83405213\";\nclass InfuraWebSocketProvider extends WebSocketProvider {\n    constructor(network, apiKey) {\n        const provider = new InfuraProvider(network, apiKey);\n        const connection = provider.connection;\n        if (connection.password) {\n            logger$B.throwError(\"INFURA WebSocket project secrets unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"InfuraProvider.getWebSocketProvider()\"\n            });\n        }\n        const url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        super(url, network);\n        defineReadOnly(this, \"apiKey\", provider.projectId);\n        defineReadOnly(this, \"projectId\", provider.projectId);\n        defineReadOnly(this, \"projectSecret\", provider.projectSecret);\n    }\n    isCommunityResource() {\n        return (this.projectId === defaultProjectId);\n    }\n}\nclass InfuraProvider extends UrlJsonRpcProvider {\n    static getWebSocketProvider(network, apiKey) {\n        return new InfuraWebSocketProvider(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        const apiKeyObj = {\n            apiKey: defaultProjectId,\n            projectId: defaultProjectId,\n            projectSecret: null\n        };\n        if (apiKey == null) {\n            return apiKeyObj;\n        }\n        if (typeof (apiKey) === \"string\") {\n            apiKeyObj.projectId = apiKey;\n        }\n        else if (apiKey.projectSecret != null) {\n            logger$B.assertArgument((typeof (apiKey.projectId) === \"string\"), \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n            logger$B.assertArgument((typeof (apiKey.projectSecret) === \"string\"), \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n            apiKeyObj.projectId = apiKey.projectId;\n            apiKeyObj.projectSecret = apiKey.projectSecret;\n        }\n        else if (apiKey.projectId) {\n            apiKeyObj.projectId = apiKey.projectId;\n        }\n        apiKeyObj.apiKey = apiKeyObj.projectId;\n        return apiKeyObj;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"homestead\":\n                host = \"mainnet.infura.io\";\n                break;\n            case \"ropsten\":\n                host = \"ropsten.infura.io\";\n                break;\n            case \"rinkeby\":\n                host = \"rinkeby.infura.io\";\n                break;\n            case \"kovan\":\n                host = \"kovan.infura.io\";\n                break;\n            case \"goerli\":\n                host = \"goerli.infura.io\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.infura.io\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.infura.io\";\n                break;\n            default:\n                logger$B.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n        const connection = {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId),\n            throttleCallback: (attempt, url) => {\n                if (apiKey.projectId === defaultProjectId) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret;\n        }\n        return connection;\n    }\n    isCommunityResource() {\n        return (this.projectId === defaultProjectId);\n    }\n}\n//# sourceMappingURL=infura-provider.js.map\n\n// Experimental\nclass JsonRpcBatchProvider extends JsonRpcProvider {\n    send(method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n        if (this._pendingBatch == null) {\n            this._pendingBatch = [];\n        }\n        const inflightRequest = { request, resolve: null, reject: null };\n        const promise = new Promise((resolve, reject) => {\n            inflightRequest.resolve = resolve;\n            inflightRequest.reject = reject;\n        });\n        this._pendingBatch.push(inflightRequest);\n        if (!this._pendingBatchAggregator) {\n            // Schedule batch for next event loop + short duration\n            this._pendingBatchAggregator = setTimeout(() => {\n                // Get teh current batch and clear it, so new requests\n                // go into the next batch\n                const batch = this._pendingBatch;\n                this._pendingBatch = null;\n                this._pendingBatchAggregator = null;\n                // Get the request as an array of requests\n                const request = batch.map((inflight) => inflight.request);\n                this.emit(\"debug\", {\n                    action: \"requestBatch\",\n                    request: deepCopy(request),\n                    provider: this\n                });\n                return fetchJson(this.connection, JSON.stringify(request)).then((result) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: request,\n                        response: result,\n                        provider: this\n                    });\n                    // For each result, feed it to the correct Promise, depending\n                    // on whether it was a success or error\n                    batch.forEach((inflightRequest, index) => {\n                        const payload = result[index];\n                        if (payload.error) {\n                            const error = new Error(payload.error.message);\n                            error.code = payload.error.code;\n                            error.data = payload.error.data;\n                            inflightRequest.reject(error);\n                        }\n                        else {\n                            inflightRequest.resolve(payload.result);\n                        }\n                    });\n                }, (error) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: request,\n                        provider: this\n                    });\n                    batch.forEach((inflightRequest) => {\n                        inflightRequest.reject(error);\n                    });\n                });\n            }, 10);\n        }\n        return promise;\n    }\n}\n//# sourceMappingURL=json-rpc-batch-provider.js.map\n\n/* istanbul ignore file */\nconst logger$C = new Logger(version$m);\n// Special API key provided by Nodesmith for ethers.js\nconst defaultApiKey$2 = \"ETHERS_JS_SHARED\";\nclass NodesmithProvider extends UrlJsonRpcProvider {\n    static getApiKey(apiKey) {\n        if (apiKey && typeof (apiKey) !== \"string\") {\n            logger$C.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey || defaultApiKey$2;\n    }\n    static getUrl(network, apiKey) {\n        logger$C.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n                break;\n            case \"ropsten\":\n                host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n                break;\n            case \"rinkeby\":\n                host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n                break;\n            case \"goerli\":\n                host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n                break;\n            case \"kovan\":\n                host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n                break;\n            default:\n                logger$C.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return (host + \"?apiKey=\" + apiKey);\n    }\n}\n//# sourceMappingURL=nodesmith-provider.js.map\n\nconst logger$D = new Logger(version$m);\n// These are load-balancer-based applicatoin IDs\nconst defaultApplicationIds = {\n    homestead: \"6004bcd10040261633ade990\",\n    ropsten: \"6004bd4d0040261633ade991\",\n    rinkeby: \"6004bda20040261633ade994\",\n    goerli: \"6004bd860040261633ade992\",\n};\nclass PocketProvider extends UrlJsonRpcProvider {\n    constructor(network, apiKey) {\n        // We need a bit of creativity in the constructor because\n        // Pocket uses different default API keys based on the network\n        if (apiKey == null) {\n            const n = getStatic((new.target), \"getNetwork\")(network);\n            if (n) {\n                const applicationId = defaultApplicationIds[n.name];\n                if (applicationId) {\n                    apiKey = {\n                        applicationId: applicationId,\n                        loadBalancer: true\n                    };\n                }\n            }\n            // If there was any issue above, we don't know this network\n            if (apiKey == null) {\n                logger$D.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n            }\n        }\n        super(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        // Most API Providers allow null to get the default configuration, but\n        // Pocket requires the network to decide the default provider, so we\n        // rely on hijacking the constructor to add a sensible default for us\n        if (apiKey == null) {\n            logger$D.throwArgumentError(\"PocketProvider.getApiKey does not support null apiKey\", \"apiKey\", apiKey);\n        }\n        const apiKeyObj = {\n            applicationId: null,\n            loadBalancer: false,\n            applicationSecretKey: null\n        };\n        // Parse applicationId and applicationSecretKey\n        if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n        }\n        else if (apiKey.applicationSecretKey != null) {\n            logger$D.assertArgument((typeof (apiKey.applicationId) === \"string\"), \"applicationSecretKey requires an applicationId\", \"applicationId\", apiKey.applicationId);\n            logger$D.assertArgument((typeof (apiKey.applicationSecretKey) === \"string\"), \"invalid applicationSecretKey\", \"applicationSecretKey\", \"[REDACTED]\");\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n            apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n        }\n        else if (apiKey.applicationId) {\n            logger$D.assertArgument((typeof (apiKey.applicationId) === \"string\"), \"apiKey.applicationId must be a string\", \"apiKey.applicationId\", apiKey.applicationId);\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n        }\n        else {\n            logger$D.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKeyObj;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            default:\n                logger$D.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n        let url = null;\n        if (apiKey.loadBalancer) {\n            url = `https:/\\/${host}/v1/lb/${apiKey.applicationId}`;\n        }\n        else {\n            url = `https:/\\/${host}/v1/${apiKey.applicationId}`;\n        }\n        const connection = { url };\n        // Initialize empty headers\n        connection.headers = {};\n        // Apply application secret key\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey;\n        }\n        return connection;\n    }\n    isCommunityResource() {\n        return (this.applicationId === defaultApplicationIds[this.network.name]);\n    }\n}\n//# sourceMappingURL=pocket-provider.js.map\n\nconst logger$E = new Logger(version$m);\nlet _nextId = 1;\nfunction buildWeb3LegacyFetcher(provider, sendFunc) {\n    const fetcher = \"Web3LegacyFetcher\";\n    return function (method, params) {\n        // Metamask complains about eth_sign (and on some versions hangs)\n        if (method == \"eth_sign\" && (provider.isMetaMask || provider.isStatus)) {\n            // https://github.com/ethereum/go-ethereum/wiki/Management-APIs#personal_sign\n            method = \"personal_sign\";\n            params = [params[1], params[0]];\n        }\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n        return new Promise((resolve, reject) => {\n            this.emit(\"debug\", {\n                action: \"request\",\n                fetcher,\n                request: deepCopy(request),\n                provider: this\n            });\n            sendFunc(request, (error, response) => {\n                if (error) {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        fetcher,\n                        error,\n                        request,\n                        provider: this\n                    });\n                    return reject(error);\n                }\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    fetcher,\n                    request,\n                    response,\n                    provider: this\n                });\n                if (response.error) {\n                    const error = new Error(response.error.message);\n                    error.code = response.error.code;\n                    error.data = response.error.data;\n                    return reject(error);\n                }\n                resolve(response.result);\n            });\n        });\n    };\n}\nfunction buildEip1193Fetcher(provider) {\n    return function (method, params) {\n        if (params == null) {\n            params = [];\n        }\n        // Metamask complains about eth_sign (and on some versions hangs)\n        if (method == \"eth_sign\" && (provider.isMetaMask || provider.isStatus)) {\n            // https://github.com/ethereum/go-ethereum/wiki/Management-APIs#personal_sign\n            method = \"personal_sign\";\n            params = [params[1], params[0]];\n        }\n        const request = { method, params };\n        this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: deepCopy(request),\n            provider: this\n        });\n        return provider.request(request).then((response) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                response,\n                provider: this\n            });\n            return response;\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                error,\n                provider: this\n            });\n            throw error;\n        });\n    };\n}\nclass Web3Provider extends JsonRpcProvider {\n    constructor(provider, network) {\n        logger$E.checkNew(new.target, Web3Provider);\n        if (provider == null) {\n            logger$E.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n        let path = null;\n        let jsonRpcFetchFunc = null;\n        let subprovider = null;\n        if (typeof (provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n        }\n        else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n            subprovider = provider;\n            if (provider.request) {\n                if (path === \"\") {\n                    path = \"eip-1193:\";\n                }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            }\n            else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            }\n            else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            }\n            else {\n                logger$E.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n            if (!path) {\n                path = \"unknown:\";\n            }\n        }\n        super(path, network);\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n    send(method, params) {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n//# sourceMappingURL=web3-provider.js.map\n\nconst logger$F = new Logger(version$m);\n////////////////////////\n// Helper Functions\nfunction getDefaultProvider(network, options) {\n    if (network == null) {\n        network = \"homestead\";\n    }\n    // If passed a URL, figure out the right type of provider based on the scheme\n    if (typeof (network) === \"string\") {\n        // @TODO: Add support for IpcProvider; maybe if it ends in \".ipc\"?\n        // Handle http and ws (and their secure variants)\n        const match = network.match(/^(ws|http)s?:/i);\n        if (match) {\n            switch (match[1]) {\n                case \"http\":\n                    return new JsonRpcProvider(network);\n                case \"ws\":\n                    return new WebSocketProvider(network);\n                default:\n                    logger$F.throwArgumentError(\"unsupported URL scheme\", \"network\", network);\n            }\n        }\n    }\n    const n = getNetwork(network);\n    if (!n || !n._defaultProvider) {\n        logger$F.throwError(\"unsupported getDefaultProvider network\", Logger.errors.NETWORK_ERROR, {\n            operation: \"getDefaultProvider\",\n            network: network\n        });\n    }\n    return n._defaultProvider({\n        FallbackProvider,\n        AlchemyProvider,\n        CloudflareProvider,\n        EtherscanProvider,\n        InfuraProvider,\n        JsonRpcProvider,\n        NodesmithProvider,\n        PocketProvider,\n        Web3Provider,\n        IpcProvider,\n    }, options);\n}\n//# sourceMappingURL=index.js.map\n\nvar index$3 = {\n  __proto__: null,\n  Provider: Provider,\n  BaseProvider: BaseProvider,\n  Resolver: Resolver,\n  UrlJsonRpcProvider: UrlJsonRpcProvider,\n  FallbackProvider: FallbackProvider,\n  AlchemyProvider: AlchemyProvider,\n  AlchemyWebSocketProvider: AlchemyWebSocketProvider,\n  CloudflareProvider: CloudflareProvider,\n  EtherscanProvider: EtherscanProvider,\n  InfuraProvider: InfuraProvider,\n  InfuraWebSocketProvider: InfuraWebSocketProvider,\n  JsonRpcProvider: JsonRpcProvider,\n  JsonRpcBatchProvider: JsonRpcBatchProvider,\n  NodesmithProvider: NodesmithProvider,\n  PocketProvider: PocketProvider,\n  StaticJsonRpcProvider: StaticJsonRpcProvider,\n  Web3Provider: Web3Provider,\n  WebSocketProvider: WebSocketProvider,\n  IpcProvider: IpcProvider,\n  JsonRpcSigner: JsonRpcSigner,\n  getDefaultProvider: getDefaultProvider,\n  getNetwork: getNetwork,\n  isCommunityResource: isCommunityResource,\n  isCommunityResourcable: isCommunityResourcable,\n  showThrottleMessage: showThrottleMessage,\n  Formatter: Formatter\n};\n\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\nconst Zeros$1 = \"0000000000000000000000000000000000000000000000000000000000000000\";\nfunction _pack(type, value, isArray) {\n    switch (type) {\n        case \"address\":\n            if (isArray) {\n                return zeroPad(value, 32);\n            }\n            return arrayify(value);\n        case \"string\":\n            return toUtf8Bytes(value);\n        case \"bytes\":\n            return arrayify(value);\n        case \"bool\":\n            value = (value ? \"0x01\" : \"0x00\");\n            if (isArray) {\n                return zeroPad(value, 32);\n            }\n            return arrayify(value);\n    }\n    let match = type.match(regexNumber);\n    if (match) {\n        //let signed = (match[1] === \"int\")\n        let size = parseInt(match[2] || \"256\");\n        if ((match[2] && String(size) !== match[2]) || (size % 8 !== 0) || size === 0 || size > 256) {\n            throw new Error(\"invalid number type - \" + type);\n        }\n        if (isArray) {\n            size = 256;\n        }\n        value = BigNumber.from(value).toTwos(size);\n        return zeroPad(value, size / 8);\n    }\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n        if (String(size) !== match[1] || size === 0 || size > 32) {\n            throw new Error(\"invalid bytes type - \" + type);\n        }\n        if (arrayify(value).byteLength !== size) {\n            throw new Error(\"invalid value for \" + type);\n        }\n        if (isArray) {\n            return arrayify((value + Zeros$1).substring(0, 66));\n        }\n        return value;\n    }\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        if (count != value.length) {\n            throw new Error(\"invalid value for \" + type);\n        }\n        const result = [];\n        value.forEach(function (value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return concat(result);\n    }\n    throw new Error(\"invalid type - \" + type);\n}\n// @TODO: Array Enum\nfunction pack$1(types, values) {\n    if (types.length != values.length) {\n        throw new Error(\"type/value count mismatch\");\n    }\n    const tight = [];\n    types.forEach(function (type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return hexlify(concat(tight));\n}\nfunction keccak256$1(types, values) {\n    return keccak256(pack$1(types, values));\n}\nfunction sha256$2(types, values) {\n    return sha256$1(pack$1(types, values));\n}\n//# sourceMappingURL=index.js.map\n\nconst version$n = \"units/5.4.0\";\n//# sourceMappingURL=_version.js.map\n\nconst logger$G = new Logger(version$n);\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n// Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\nfunction commify(value) {\n    const comps = String(value).split(\".\");\n    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || (comps[1] && !comps[1].match(/^[0-9]*$/)) || value === \".\" || value === \"-.\") {\n        logger$G.throwArgumentError(\"invalid value\", \"value\", value);\n    }\n    // Make sure we have at least one whole digit (0 if none)\n    let whole = comps[0];\n    let negative = \"\";\n    if (whole.substring(0, 1) === \"-\") {\n        negative = \"-\";\n        whole = whole.substring(1);\n    }\n    // Make sure we have at least 1 whole digit with no leading zeros\n    while (whole.substring(0, 1) === \"0\") {\n        whole = whole.substring(1);\n    }\n    if (whole === \"\") {\n        whole = \"0\";\n    }\n    let suffix = \"\";\n    if (comps.length === 2) {\n        suffix = \".\" + (comps[1] || \"0\");\n    }\n    while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n        suffix = suffix.substring(0, suffix.length - 1);\n    }\n    const formatted = [];\n    while (whole.length) {\n        if (whole.length <= 3) {\n            formatted.unshift(whole);\n            break;\n        }\n        else {\n            const index = whole.length - 3;\n            formatted.unshift(whole.substring(index));\n            whole = whole.substring(0, index);\n        }\n    }\n    return negative + formatted.join(\",\") + suffix;\n}\nfunction formatUnits(value, unitName) {\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return formatFixed(value, (unitName != null) ? unitName : 18);\n}\nfunction parseUnits(value, unitName) {\n    if (typeof (value) !== \"string\") {\n        logger$G.throwArgumentError(\"value must be a string\", \"value\", value);\n    }\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return parseFixed(value, (unitName != null) ? unitName : 18);\n}\nfunction formatEther(wei) {\n    return formatUnits(wei, 18);\n}\nfunction parseEther(ether) {\n    return parseUnits(ether, 18);\n}\n//# sourceMappingURL=index.js.map\n\n//# sourceMappingURL=utils.js.map\n\nvar utils$1 = {\n  __proto__: null,\n  AbiCoder: AbiCoder,\n  defaultAbiCoder: defaultAbiCoder,\n  Fragment: Fragment,\n  ConstructorFragment: ConstructorFragment,\n  ErrorFragment: ErrorFragment,\n  EventFragment: EventFragment,\n  FunctionFragment: FunctionFragment,\n  ParamType: ParamType,\n  FormatTypes: FormatTypes,\n  checkResultErrors: checkResultErrors,\n  Logger: Logger,\n  RLP: index,\n  _fetchData: _fetchData,\n  fetchJson: fetchJson,\n  poll: poll,\n  checkProperties: checkProperties,\n  deepCopy: deepCopy,\n  defineReadOnly: defineReadOnly,\n  getStatic: getStatic,\n  resolveProperties: resolveProperties,\n  shallowCopy: shallowCopy,\n  arrayify: arrayify,\n  concat: concat,\n  stripZeros: stripZeros,\n  zeroPad: zeroPad,\n  isBytes: isBytes,\n  isBytesLike: isBytesLike,\n  defaultPath: defaultPath,\n  HDNode: HDNode,\n  SigningKey: SigningKey,\n  Interface: Interface,\n  LogDescription: LogDescription,\n  TransactionDescription: TransactionDescription,\n  base58: Base58,\n  base64: index$2,\n  hexlify: hexlify,\n  isHexString: isHexString,\n  hexConcat: hexConcat,\n  hexStripZeros: hexStripZeros,\n  hexValue: hexValue,\n  hexZeroPad: hexZeroPad,\n  hexDataLength: hexDataLength,\n  hexDataSlice: hexDataSlice,\n  nameprep: nameprep,\n  _toEscapedUtf8String: _toEscapedUtf8String,\n  toUtf8Bytes: toUtf8Bytes,\n  toUtf8CodePoints: toUtf8CodePoints,\n  toUtf8String: toUtf8String,\n  Utf8ErrorFuncs: Utf8ErrorFuncs,\n  formatBytes32String: formatBytes32String,\n  parseBytes32String: parseBytes32String,\n  hashMessage: hashMessage,\n  namehash: namehash,\n  isValidName: isValidName,\n  id: id,\n  _TypedDataEncoder: TypedDataEncoder,\n  getAddress: getAddress,\n  getIcapAddress: getIcapAddress,\n  getContractAddress: getContractAddress,\n  getCreate2Address: getCreate2Address,\n  isAddress: isAddress,\n  formatEther: formatEther,\n  parseEther: parseEther,\n  formatUnits: formatUnits,\n  parseUnits: parseUnits,\n  commify: commify,\n  computeHmac: computeHmac,\n  keccak256: keccak256,\n  ripemd160: ripemd160$1,\n  sha256: sha256$1,\n  sha512: sha512$1,\n  randomBytes: randomBytes,\n  shuffled: shuffled,\n  solidityPack: pack$1,\n  solidityKeccak256: keccak256$1,\n  soliditySha256: sha256$2,\n  splitSignature: splitSignature,\n  joinSignature: joinSignature,\n  accessListify: accessListify,\n  parseTransaction: parse,\n  serializeTransaction: serialize,\n  get TransactionTypes () { return TransactionTypes; },\n  getJsonWalletAddress: getJsonWalletAddress,\n  computeAddress: computeAddress,\n  recoverAddress: recoverAddress,\n  computePublicKey: computePublicKey,\n  recoverPublicKey: recoverPublicKey,\n  verifyMessage: verifyMessage,\n  verifyTypedData: verifyTypedData,\n  getAccountPath: getAccountPath,\n  mnemonicToEntropy: mnemonicToEntropy,\n  entropyToMnemonic: entropyToMnemonic,\n  isValidMnemonic: isValidMnemonic,\n  mnemonicToSeed: mnemonicToSeed,\n  get SupportedAlgorithm () { return SupportedAlgorithm; },\n  get UnicodeNormalizationForm () { return UnicodeNormalizationForm; },\n  get Utf8ErrorReason () { return Utf8ErrorReason; },\n  Indexed: Indexed\n};\n\nconst version$o = \"ethers/5.4.5\";\n//# sourceMappingURL=_version.js.map\n\nconst logger$H = new Logger(version$o);\n//# sourceMappingURL=ethers.js.map\n\nvar ethers = {\n  __proto__: null,\n  Signer: Signer,\n  Wallet: Wallet,\n  VoidSigner: VoidSigner,\n  getDefaultProvider: getDefaultProvider,\n  providers: index$3,\n  BaseContract: BaseContract,\n  Contract: Contract,\n  ContractFactory: ContractFactory,\n  BigNumber: BigNumber,\n  FixedNumber: FixedNumber,\n  constants: index$1,\n  get errors () { return ErrorCode; },\n  logger: logger$H,\n  utils: utils$1,\n  wordlists: wordlists,\n  version: version$o,\n  Wordlist: Wordlist\n};\n\nconst byoaContractAddress = `0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512`;\nconst providerNetwork = `http://localhost:8545`;\nconst jrpcProvider = new JsonRpcProvider('https://eth-mainnet.alchemyapi.io/v2/Uo717K-DDAxlSM5gXM-zgv678k0aMZH5', 'mainnet');\nwindow.byoa = {\n  context: {\n    ethers: ethers,\n    provider: getDefaultProvider('https://eth-mainnet.alchemyapi.io/v2/Uo717K-DDAxlSM5gXM-zgv678k0aMZH5'),\n    jrpcProvider: jrpcProvider,\n    dataPipeFn: data => {\n      return data;\n    },\n    account: {\n      address: null\n    }\n  }\n};\nconst useStyles = makeStyles({\n  root: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    minWidth: '100vw',\n    minHeight: '100vh',\n    background: 'rgba(50,0,0,0.25)',\n    pointerEvents: 'none'\n  },\n  speedDial: {\n    position: 'fixed',\n    bottom: 20,\n    right: 20,\n    zIndex: 1000000000\n  },\n  byoaButton: {}\n});\nconst providerOptions = {\n  walletconnect: {\n    display: {\n      name: \"Mobile\"\n    },\n    package: WalletConnectProvider,\n    options: {\n      infuraId: \"6430aa46e9354b91bea44e464af71f7a\"\n    }\n  }\n};\nconst web3Modal = new Web3Modal({\n  network: providerNetwork,\n  cacheProvider: true,\n  disableInjectedProvider: false,\n  providerOptions\n});\nconst ByoaSDK = props => {\n  const classes = useStyles();\n  const [translateDial, setTranslateDial] = useState({\n    x: 0,\n    y: 0\n  });\n  const [dialDirection, setDialDirection] = useState(\"up\");\n  const [openDial, setOpenDial] = useState(false);\n  const [provider, setProvider] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const [accountAddress, setAccountAddress] = useState(null);\n  const [installedApps, setInstalledApps] = useState([]);\n\n  const connectWallet = async () => {\n    try {\n      let p = provider;\n\n      if (p === null) {\n        p = await web3Modal.connect();\n\n        if (p === null) {\n          throw new Error('Unable to connect provider to modal');\n        }\n\n        p.on('accountsChanged', e => {\n          console.log(e);\n          disconnectWallet();\n        });\n        p.on(\"chainChanged\", chainId => {\n          console.log(\"chain \" + chainId);\n        });\n        setProvider(p);\n      }\n\n      let w3 = web3;\n\n      if (w3 === null) {\n        w3 = new Web3(p);\n\n        if (w3 === null) {\n          throw new Error('Unable to connect web3');\n        }\n\n        setWeb3(w3);\n      }\n\n      const accounts = await p.request({\n        method: 'eth_accounts'\n      });\n\n      if (accounts.length > 0) {\n        setAccountAddress(accounts[0]);\n        setTimeout(async () => {\n          refreshMyApps(accounts[0]);\n        }, 2000);\n      }\n    } catch (error) {\n      console.log(error);\n      alert('Unable to connect wallet. Please try again.');\n    }\n  };\n\n  const disconnectWallet = async () => {\n    await web3Modal.clearCachedProvider();\n    setProvider(null);\n    setAccountAddress(null);\n  };\n\n  const getTokenMetadata = async uri => {\n    return new Promise(resolve => {\n      resolve({\n        meta: uri,\n        image: \"ipfs://QmYoSTehmdFUnSYCFrYdvSrEtNGy9U5gWEfroCTMGecHKw/0.png\",\n        byoa: {\n          browser: {\n            uri: \"http://localhost:3000/scripts/example1.js\",\n            target: \"host\"\n          }\n        }\n      });\n    });\n  };\n\n  const transformIPFSToPinned = ipfsURI => {\n    return `${ipfsURI}`;\n  };\n\n  const refreshMyApps = async addressHelper => {\n    let w3 = new Web3(providerNetwork);\n\n    try {\n      let contract = new w3.eth.Contract(abi$1.abi, byoaContractAddress);\n      let myTokenIds = await contract.methods.walletOfOwner(accountAddress ? accountAddress : addressHelper).call();\n      console.log(myTokenIds);\n      let appLUT = {};\n      let allInstalls = [];\n\n      for (var i = 0; i < myTokenIds.length; i++) {\n        let tid = parseInt(myTokenIds[i]);\n        let appIdForToken = await contract.methods.getAppIdByTokenId(tid).call();\n        let directTokenURI = await contract.methods.tokenURI(tid).call();\n        let tokenMeta = await getTokenMetadata(directTokenURI);\n\n        if (appLUT[appIdForToken] !== null) {\n          let appDetails = await contract.methods.getAppDetailsById(parseInt(appIdForToken)).call();\n          appLUT[appIdForToken] = {\n            id: appIdForToken,\n            name: appDetails[0],\n            description: appDetails[1],\n            tokenURI: appDetails[2],\n            owner: appDetails[3],\n            price: parseInt(appDetails[4]),\n            address: byoaContractAddress,\n            version: 'beta v0.1'\n          };\n        }\n\n        let ia = {\n          id: tid,\n          tokenURI: directTokenURI,\n          app: appLUT[appIdForToken],\n          imageURI: tokenMeta.image,\n          byoaDetails: {\n            uri: tokenMeta.byoa.browser.uri,\n            target: tokenMeta.byoa.browser.target\n          }\n        };\n        allInstalls.push(ia);\n      }\n\n      console.log(allInstalls);\n      setInstalledApps(allInstalls);\n    } catch (error) {\n      console.log(`Error fetching apps: ${error}`);\n    }\n  };\n\n  return createElement(Box, {\n    className: classes.root\n  }, createElement(Container, {\n    className: classes.speedDial\n  }, createElement(DragMove, {\n    onDragMove: e => {\n      setTranslateDial({\n        x: translateDial.x + e.movementX,\n        y: translateDial.y + e.movementY\n      });\n\n      if (e.clientY < 200) {\n        if (dialDirection !== \"down\") setDialDirection(\"down\");\n      }\n\n      if (e.clientY > 200) {\n        if (dialDirection !== \"up\") setDialDirection(\"up\");\n      }\n    }\n  }, createElement(SpeedDial, {\n    style: {\n      transform: `translateX(${translateDial.x}px) translateY(${translateDial.y}px)`\n    },\n    ariaLabel: \"BYOA Speed Dial\",\n    hidden: false,\n    icon: createElement(Typography, {\n      className: classes.byoaButton\n    }, \"RUN\"),\n    open: openDial,\n    onOpen: () => {\n      setOpenDial(true);\n    },\n    onClose: () => {\n      setOpenDial(false);\n    },\n    onClick: () => {},\n    direction: dialDirection\n  }, createElement(SpeedDialAction, {\n    key: 'sda-connect-wallet',\n    icon: createElement(AccountBalanceWalletIcon, null),\n    tooltipTitle: 'Connect Wallet',\n    onClick: () => {\n      connectWallet();\n    }\n  }), installedApps.map((installedApp, i) => createElement(SpeedDialAction, {\n    key: `sd-action-${installedApp.id}-${i}`,\n    icon: createElement(PetsIcon, null),\n    tooltipTitle: `${installedApp.app.name} (#${installedApp.id})`,\n    onClick: () => {\n      let scriptID = `byoa-${installedApp.id}-${installedApp.app.id}`;\n      const existingApp = document.getElementById(scriptID);\n\n      if (!existingApp) {\n        const script = document.createElement('script');\n        script.src = transformIPFSToPinned(installedApp.byoaDetails.uri);\n        script.id = scriptID;\n\n        if (installedApp.byoaDetails.target == \"host\") {\n          document.body.appendChild(script);\n\n          script.onload = () => {\n            console.log('loaded script');\n          };\n        }\n      }\n    }\n  }))))));\n};\n\nexport { ByoaSDK };\n//# sourceMappingURL=index.modern.js.map\n"]},"metadata":{},"sourceType":"module"}