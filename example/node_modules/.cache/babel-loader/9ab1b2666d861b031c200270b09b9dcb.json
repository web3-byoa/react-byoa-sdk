{"ast":null,"code":"import { makeStyles, Box, Container, Typography } from '@material-ui/core';\nimport { SpeedDial, SpeedDialAction } from '@material-ui/lab';\nimport React__default, { useState, createElement } from 'react';\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\n\nfunction DragMove(props) {\n  var onPointerDown = props.onPointerDown,\n      onPointerUp = props.onPointerUp,\n      onPointerMove = props.onPointerMove,\n      onDragMove = props.onDragMove,\n      children = props.children,\n      style = props.style,\n      className = props.className;\n\n  var _useState = useState(false),\n      isDragging = _useState[0],\n      setIsDragging = _useState[1];\n\n  var handlePointerDown = function handlePointerDown(e) {\n    setIsDragging(true);\n    onPointerDown(e);\n  };\n\n  var handlePointerUp = function handlePointerUp(e) {\n    setIsDragging(false);\n    onPointerUp(e);\n  };\n\n  var handlePointerMove = function handlePointerMove(e) {\n    if (isDragging) onDragMove(e);\n    onPointerMove(e);\n  };\n\n  return React__default.createElement(\"div\", {\n    onPointerDown: handlePointerDown,\n    onPointerUp: handlePointerUp,\n    onPointerMove: handlePointerMove,\n    style: style,\n    className: className\n  }, children);\n}\n\nDragMove.defaultProps = {\n  onPointerDown: function onPointerDown() {},\n  onPointerUp: function onPointerUp() {},\n  onPointerMove: function onPointerMove() {}\n};\nvar useStyles = makeStyles({\n  root: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    minWidth: '100vw',\n    minHeight: '100vh',\n    background: 'rgba(50,0,0,0.25)',\n    pointerEvents: 'none'\n  },\n  speedDial: {\n    position: 'fixed',\n    bottom: 20,\n    right: 20,\n    zIndex: 1000000000\n  },\n  byoaButton: {}\n});\n\nvar ByoaSDK = function ByoaSDK(props) {\n  var classes = useStyles();\n\n  var _React$useState = useState({\n    x: 0,\n    y: 0\n  }),\n      translateDial = _React$useState[0],\n      setTranslateDial = _React$useState[1];\n\n  var _React$useState2 = useState(\"up\"),\n      dialDirection = _React$useState2[0],\n      setDialDirection = _React$useState2[1];\n\n  var _React$useState3 = useState(false),\n      openDial = _React$useState3[0],\n      setOpenDial = _React$useState3[1];\n\n  return createElement(Box, {\n    className: classes.root\n  }, createElement(Container, {\n    className: classes.speedDial\n  }, createElement(DragMove, {\n    onDragMove: function onDragMove(e) {\n      setTranslateDial({\n        x: translateDial.x + e.movementX,\n        y: translateDial.y + e.movementY\n      });\n\n      if (e.clientY < 200) {\n        if (dialDirection !== \"down\") setDialDirection(\"down\");\n      }\n\n      if (e.clientY > 200) {\n        if (dialDirection !== \"up\") setDialDirection(\"up\");\n      }\n    }\n  }, createElement(SpeedDial, {\n    style: {\n      transform: \"translateX(\" + translateDial.x + \"px) translateY(\" + translateDial.y + \"px)\"\n    },\n    ariaLabel: \"BYOA Speed Dial\",\n    hidden: false,\n    icon: createElement(Typography, {\n      className: classes.byoaButton\n    }, \"RUN\"),\n    open: openDial,\n    onOpen: function onOpen() {\n      setOpenDial(true);\n    },\n    onClose: function onClose() {\n      setOpenDial(false);\n    },\n    onClick: function onClick() {},\n    direction: dialDirection\n  }, createElement(SpeedDialAction, {\n    key: 'sda-connect-wallet',\n    icon: createElement(AccountBalanceWalletIcon, null),\n    tooltipTitle: 'Connect Wallet',\n    onClick: function onClick() {\n      setOpenDial(false);\n    }\n  })))));\n};\n\nexport { ByoaSDK };","map":{"version":3,"sources":["../src/components/DragMove.tsx","../src/index.tsx"],"names":["DragMove","props","onPointerDown","onPointerUp","onPointerMove","onDragMove","children","style","className","isDragging","setIsDragging","useState","handlePointerDown","handlePointerUp","handlePointerMove","useStyles","makeStyles","root","position","top","left","minWidth","minHeight","background","pointerEvents","speedDial","bottom","right","zIndex","byoaButton","ByoaSDK","classes","translateDial","setTranslateDial","x","y","dialDirection","setDialDirection","React","openDial","setOpenDial","e","movementY","transform","ariaLabel","hidden","icon","open","onOpen","onClose","onClick","direction","key","tooltipTitle"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\n// @ts-expect-error\nexport default function DragMove(props) {\n  const {\n    onPointerDown,\n    onPointerUp,\n    onPointerMove,\n    onDragMove,\n    children,\n    style,\n    className\n  } = props;\n\n  const [isDragging, setIsDragging] = useState(false);\n\n  // @ts-expect-error\n  const handlePointerDown = (e) => {\n    setIsDragging(true);\n\n    onPointerDown(e);\n  };\n\n  // @ts-expect-error\n  const handlePointerUp = (e) => {\n    setIsDragging(false);\n\n    onPointerUp(e);\n  };\n\n  // @ts-expect-error\n  const handlePointerMove = (e) => {\n    if (isDragging) onDragMove(e);\n\n    onPointerMove(e);\n  };\n\n  return (\n    <div\n      onPointerDown={handlePointerDown}\n      onPointerUp={handlePointerUp}\n      onPointerMove={handlePointerMove}\n      style={style}\n      className={className}\n    >\n      {children}\n    </div>\n  );\n}\n\nDragMove.defaultProps = {\n  onPointerDown: () => {},\n  onPointerUp: () => {},\n  onPointerMove: () => {}\n};\n","import { Box, Container, makeStyles, Typography } from '@material-ui/core';\nimport { SpeedDial, SpeedDialAction } from '@material-ui/lab';\nimport * as React from 'react';\nimport DragMove from './components/DragMove';\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\n\ninterface Props {\n  \n}\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    minWidth: '100vw',\n    minHeight: '100vh',\n    background: 'rgba(50,0,0,0.25)',\n    pointerEvents: 'none'\n  },\n  speedDial: {\n    position: 'fixed',\n    bottom: 20,\n    right: 20,\n    zIndex: 1000000000\n  },\n  byoaButton: {\n\n  }\n});\n\n// @ts-expect-error\nexport const ByoaSDK = (props : Props) => {\n  const classes = useStyles();\n  const [translateDial, setTranslateDial] = React.useState({\n    x: 0,\n    y: 0\n  });\n  const [dialDirection, setDialDirection] = React.useState<\"left\" | \"right\" | \"up\" | \"down\" | undefined>(\"up\");\n  const [openDial, setOpenDial] = React.useState(false);\n  \n  return (\n    <Box className={classes.root}>\n      <Container className={classes.speedDial}>\n        <DragMove onDragMove={(e : any) => {\n          setTranslateDial({\n            x: translateDial.x + e.movementX,\n            y: translateDial.y + e.movementY\n          });\n          if (e.clientY < 200) {\n            if (dialDirection !== \"down\") setDialDirection(\"down\");\n          }\n          if (e.clientY > 200) {\n            if (dialDirection !== \"up\") setDialDirection(\"up\");\n          }\n        }}>\n          <SpeedDial\n            style={{\n              transform: `translateX(${translateDial.x}px) translateY(${translateDial.y}px)`\n            }}\n            ariaLabel=\"BYOA Speed Dial\"\n            hidden={false}\n            icon={<Typography className={classes.byoaButton}>RUN</Typography>}\n            open={openDial}\n            onOpen={() => {\n              setOpenDial(true);\n            }}\n            onClose={() => {\n              setOpenDial(false);\n            }}\n            onClick={() => {\n              \n            }}\n            direction={dialDirection}\n          >\n            <SpeedDialAction\n              key={'sda-connect-wallet'}\n              icon={<AccountBalanceWalletIcon />}\n              tooltipTitle={'Connect Wallet'}\n              onClick={() => {\n                setOpenDial(false);\n              }}\n            />\n\n          </SpeedDial>\n        </DragMove>\n          \n      </Container>\n    </Box>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}