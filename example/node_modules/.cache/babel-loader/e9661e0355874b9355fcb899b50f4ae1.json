{"ast":null,"code":"import { makeStyles, Box, Container, Typography } from '@material-ui/core';\nimport { SpeedDial, SpeedDialAction } from '@material-ui/lab';\nimport React__default, { useState, createElement } from 'react';\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\n\nfunction DragMove(props) {\n  const {\n    onPointerDown,\n    onPointerUp,\n    onPointerMove,\n    onDragMove,\n    children,\n    style,\n    className\n  } = props;\n  const [isDragging, setIsDragging] = useState(false);\n\n  const handlePointerDown = e => {\n    setIsDragging(true);\n    onPointerDown(e);\n  };\n\n  const handlePointerUp = e => {\n    setIsDragging(false);\n    onPointerUp(e);\n  };\n\n  const handlePointerMove = e => {\n    if (isDragging) onDragMove(e);\n    onPointerMove(e);\n  };\n\n  return React__default.createElement(\"div\", {\n    onPointerDown: handlePointerDown,\n    onPointerUp: handlePointerUp,\n    onPointerMove: handlePointerMove,\n    style: style,\n    className: className\n  }, children);\n}\n\nDragMove.defaultProps = {\n  onPointerDown: () => {},\n  onPointerUp: () => {},\n  onPointerMove: () => {}\n};\nconst useStyles = makeStyles({\n  root: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    minWidth: '100vw',\n    minHeight: '100vh',\n    background: 'rgba(50,0,0,0.25)',\n    pointerEvents: 'none'\n  },\n  speedDial: {\n    position: 'fixed',\n    bottom: 20,\n    right: 20,\n    zIndex: 1000000000\n  },\n  byoaButton: {}\n});\n\nconst ByoaSDK = props => {\n  const classes = useStyles();\n  const [translateDial, setTranslateDial] = useState({\n    x: 0,\n    y: 0\n  });\n  const [dialDirection, setDialDirection] = useState(\"up\");\n  const [openDial, setOpenDial] = useState(false);\n  return createElement(Box, {\n    className: classes.root\n  }, createElement(Container, {\n    className: classes.speedDial\n  }, createElement(DragMove, {\n    onDragMove: e => {\n      setTranslateDial({\n        x: translateDial.x + e.movementX,\n        y: translateDial.y + e.movementY\n      });\n\n      if (e.clientY < 200) {\n        if (dialDirection !== \"down\") setDialDirection(\"down\");\n      }\n\n      if (e.clientY > 200) {\n        if (dialDirection !== \"up\") setDialDirection(\"up\");\n      }\n    }\n  }, createElement(SpeedDial, {\n    style: {\n      transform: `translateX(${translateDial.x}px) translateY(${translateDial.y}px)`\n    },\n    ariaLabel: \"BYOA Speed Dial\",\n    hidden: false,\n    icon: createElement(Typography, {\n      className: classes.byoaButton\n    }, \"RUN\"),\n    open: openDial,\n    onOpen: () => {\n      setOpenDial(true);\n    },\n    onClose: () => {\n      setOpenDial(false);\n    },\n    onClick: () => {},\n    direction: dialDirection\n  }, createElement(SpeedDialAction, {\n    key: 'sda-connect-wallet',\n    icon: createElement(AccountBalanceWalletIcon, null),\n    tooltipTitle: 'Connect Wallet',\n    onClick: () => {\n      setOpenDial(false);\n    }\n  })))));\n};\n\nexport { ByoaSDK };","map":{"version":3,"sources":["../src/components/DragMove.tsx","../src/index.tsx"],"names":["DragMove","props","className","useState","handlePointerDown","e","setIsDragging","onPointerDown","handlePointerUp","onPointerUp","handlePointerMove","onDragMove","onPointerMove","style","useStyles","makeStyles","root","position","top","left","minWidth","minHeight","background","pointerEvents","speedDial","bottom","right","zIndex","byoaButton","ByoaSDK","classes","x","y","React","setTranslateDial","translateDial","movementY","dialDirection","setDialDirection","transform","ariaLabel","hidden","icon","open","openDial","onOpen","setOpenDial","onClose","onClick","direction","key","tooltipTitle"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\n// @ts-expect-error\nexport default function DragMove(props) {\n  const {\n    onPointerDown,\n    onPointerUp,\n    onPointerMove,\n    onDragMove,\n    children,\n    style,\n    className\n  } = props;\n\n  const [isDragging, setIsDragging] = useState(false);\n\n  // @ts-expect-error\n  const handlePointerDown = (e) => {\n    setIsDragging(true);\n\n    onPointerDown(e);\n  };\n\n  // @ts-expect-error\n  const handlePointerUp = (e) => {\n    setIsDragging(false);\n\n    onPointerUp(e);\n  };\n\n  // @ts-expect-error\n  const handlePointerMove = (e) => {\n    if (isDragging) onDragMove(e);\n\n    onPointerMove(e);\n  };\n\n  return (\n    <div\n      onPointerDown={handlePointerDown}\n      onPointerUp={handlePointerUp}\n      onPointerMove={handlePointerMove}\n      style={style}\n      className={className}\n    >\n      {children}\n    </div>\n  );\n}\n\nDragMove.defaultProps = {\n  onPointerDown: () => {},\n  onPointerUp: () => {},\n  onPointerMove: () => {}\n};\n","import { Box, Container, makeStyles, Typography } from '@material-ui/core';\nimport { SpeedDial, SpeedDialAction } from '@material-ui/lab';\nimport * as React from 'react';\nimport DragMove from './components/DragMove';\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\n\ninterface Props {\n  \n}\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    minWidth: '100vw',\n    minHeight: '100vh',\n    background: 'rgba(50,0,0,0.25)',\n    pointerEvents: 'none'\n  },\n  speedDial: {\n    position: 'fixed',\n    bottom: 20,\n    right: 20,\n    zIndex: 1000000000\n  },\n  byoaButton: {\n\n  }\n});\n\n// @ts-expect-error\nexport const ByoaSDK = (props : Props) => {\n  const classes = useStyles();\n  const [translateDial, setTranslateDial] = React.useState({\n    x: 0,\n    y: 0\n  });\n  const [dialDirection, setDialDirection] = React.useState<\"left\" | \"right\" | \"up\" | \"down\" | undefined>(\"up\");\n  const [openDial, setOpenDial] = React.useState(false);\n  \n  return (\n    <Box className={classes.root}>\n      <Container className={classes.speedDial}>\n        <DragMove onDragMove={(e : any) => {\n          setTranslateDial({\n            x: translateDial.x + e.movementX,\n            y: translateDial.y + e.movementY\n          });\n          if (e.clientY < 200) {\n            if (dialDirection !== \"down\") setDialDirection(\"down\");\n          }\n          if (e.clientY > 200) {\n            if (dialDirection !== \"up\") setDialDirection(\"up\");\n          }\n        }}>\n          <SpeedDial\n            style={{\n              transform: `translateX(${translateDial.x}px) translateY(${translateDial.y}px)`\n            }}\n            ariaLabel=\"BYOA Speed Dial\"\n            hidden={false}\n            icon={<Typography className={classes.byoaButton}>RUN</Typography>}\n            open={openDial}\n            onOpen={() => {\n              setOpenDial(true);\n            }}\n            onClose={() => {\n              setOpenDial(false);\n            }}\n            onClick={() => {\n              \n            }}\n            direction={dialDirection}\n          >\n            <SpeedDialAction\n              key={'sda-connect-wallet'}\n              icon={<AccountBalanceWalletIcon />}\n              tooltipTitle={'Connect Wallet'}\n              onClick={() => {\n                setOpenDial(false);\n              }}\n            />\n\n          </SpeedDial>\n        </DragMove>\n          \n      </Container>\n    </Box>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}